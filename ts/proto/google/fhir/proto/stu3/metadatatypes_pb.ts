//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/stu3/metadatatypes.proto (package google.fhir.stu3.proto, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Code, CodeableConcept, Coding, ContactPoint, Count, Date, DateTime, Decimal, Distance, Duration, Extension, HumanName, Id, Identifier, Instant, Integer, Markdown, Meta, MimeTypeCode, Money, Oid, Period, PositiveInt, Quantity, Range, Ratio, Reference, SampledData, Signature, String, Time, Timing, UnsignedInt, Uri, Xhtml } from "./datatypes_pb.js";
import { AggregationModeCode, BindingStrengthCode, ConstraintSeverityCode, ContributorTypeCode, DiscriminatorTypeCode, FHIRAllTypesCode, NarrativeStatusCode, OperationParameterUseCode, PropertyRepresentationCode, ReferenceVersionRulesCode, RelatedArtifactTypeCode, SlicingRulesCode, TriggerTypeCode } from "./codes_pb.js";

/**
 * Auto-generated from StructureDefinition for BackboneElement, last updated
 * 2017-04-19T07:44:43.294+10:00. Base for elements defined inside a resource.
 * See http://hl7.org/fhir/StructureDefinition/BackboneElement
 *
 * @generated from message google.fhir.stu3.proto.BackboneElement
 */
export class BackboneElement extends Message<BackboneElement> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  constructor(data?: PartialMessage<BackboneElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.BackboneElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BackboneElement {
    return new BackboneElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BackboneElement {
    return new BackboneElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BackboneElement {
    return new BackboneElement().fromJsonString(jsonString, options);
  }

  static equals(a: BackboneElement | PlainMessage<BackboneElement> | undefined, b: BackboneElement | PlainMessage<BackboneElement> | undefined): boolean {
    return proto3.util.equals(BackboneElement, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ContactDetail, last updated
 * 2017-04-19T07:44:43.294+10:00. Contact information. See
 * http://hl7.org/fhir/StructureDefinition/ContactDetail
 *
 * @generated from message google.fhir.stu3.proto.ContactDetail
 */
export class ContactDetail extends Message<ContactDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Name of an individual to contact
   *
   * @generated from field: google.fhir.stu3.proto.String name = 3;
   */
  name?: String;

  /**
   * Contact details for individual or organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 4;
   */
  telecom: ContactPoint[] = [];

  constructor(data?: PartialMessage<ContactDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ContactDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "name", kind: "message", T: String },
    { no: 4, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactDetail {
    return new ContactDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactDetail {
    return new ContactDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactDetail {
    return new ContactDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ContactDetail | PlainMessage<ContactDetail> | undefined, b: ContactDetail | PlainMessage<ContactDetail> | undefined): boolean {
    return proto3.util.equals(ContactDetail, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Contributor, last updated
 * 2017-04-19T07:44:43.294+10:00. Contributor information. See
 * http://hl7.org/fhir/StructureDefinition/Contributor
 *
 * @generated from message google.fhir.stu3.proto.Contributor
 */
export class Contributor extends Message<Contributor> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * author | editor | reviewer | endorser
   *
   * @generated from field: google.fhir.stu3.proto.ContributorTypeCode type = 3;
   */
  type?: ContributorTypeCode;

  /**
   * Who contributed the content
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Contact details of the contributor
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 5;
   */
  contact: ContactDetail[] = [];

  constructor(data?: PartialMessage<Contributor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contributor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: ContributorTypeCode },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "contact", kind: "message", T: ContactDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contributor {
    return new Contributor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contributor {
    return new Contributor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contributor {
    return new Contributor().fromJsonString(jsonString, options);
  }

  static equals(a: Contributor | PlainMessage<Contributor> | undefined, b: Contributor | PlainMessage<Contributor> | undefined): boolean {
    return proto3.util.equals(Contributor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DataRequirement, last updated
 * 2017-04-19T07:44:43.294+10:00. Describes a required data item. See
 * http://hl7.org/fhir/StructureDefinition/DataRequirement
 *
 * @generated from message google.fhir.stu3.proto.DataRequirement
 */
export class DataRequirement extends Message<DataRequirement> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The type of the required data
   *
   * @generated from field: google.fhir.stu3.proto.FHIRAllTypesCode type = 3;
   */
  type?: FHIRAllTypesCode;

  /**
   * The profile of the required data
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri profile = 4;
   */
  profile: Uri[] = [];

  /**
   * Indicates that specific structure elements are referenced by the knowledge
   * module
   *
   * @generated from field: repeated google.fhir.stu3.proto.String must_support = 5;
   */
  mustSupport: String[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement.CodeFilter code_filter = 6;
   */
  codeFilter: DataRequirement_CodeFilter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement.DateFilter date_filter = 7;
   */
  dateFilter: DataRequirement_DateFilter[] = [];

  constructor(data?: PartialMessage<DataRequirement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataRequirement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: FHIRAllTypesCode },
    { no: 4, name: "profile", kind: "message", T: Uri, repeated: true },
    { no: 5, name: "must_support", kind: "message", T: String, repeated: true },
    { no: 6, name: "code_filter", kind: "message", T: DataRequirement_CodeFilter, repeated: true },
    { no: 7, name: "date_filter", kind: "message", T: DataRequirement_DateFilter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement {
    return new DataRequirement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement {
    return new DataRequirement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement {
    return new DataRequirement().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement | PlainMessage<DataRequirement> | undefined, b: DataRequirement | PlainMessage<DataRequirement> | undefined): boolean {
    return proto3.util.equals(DataRequirement, a, b);
  }
}

/**
 * What codes are expected
 *
 * @generated from message google.fhir.stu3.proto.DataRequirement.CodeFilter
 */
export class DataRequirement_CodeFilter extends Message<DataRequirement_CodeFilter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The code-valued attribute of the filter
   *
   * @generated from field: google.fhir.stu3.proto.String path = 3;
   */
  path?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet value_set = 4;
   */
  valueSet?: DataRequirement_CodeFilter_ValueSet;

  /**
   * What code is expected
   *
   * @generated from field: repeated google.fhir.stu3.proto.Code value_code = 5;
   */
  valueCode: Code[] = [];

  /**
   * What Coding is expected
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding value_coding = 6;
   */
  valueCoding: Coding[] = [];

  /**
   * What CodeableConcept is expected
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept value_codeable_concept = 7;
   */
  valueCodeableConcept: CodeableConcept[] = [];

  constructor(data?: PartialMessage<DataRequirement_CodeFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataRequirement.CodeFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "value_set", kind: "message", T: DataRequirement_CodeFilter_ValueSet },
    { no: 5, name: "value_code", kind: "message", T: Code, repeated: true },
    { no: 6, name: "value_coding", kind: "message", T: Coding, repeated: true },
    { no: 7, name: "value_codeable_concept", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_CodeFilter {
    return new DataRequirement_CodeFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_CodeFilter {
    return new DataRequirement_CodeFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_CodeFilter {
    return new DataRequirement_CodeFilter().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_CodeFilter | PlainMessage<DataRequirement_CodeFilter> | undefined, b: DataRequirement_CodeFilter | PlainMessage<DataRequirement_CodeFilter> | undefined): boolean {
    return proto3.util.equals(DataRequirement_CodeFilter, a, b);
  }
}

/**
 * Valueset for the filter
 *
 * @generated from message google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet
 */
export class DataRequirement_CodeFilter_ValueSet extends Message<DataRequirement_CodeFilter_ValueSet> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet.value_set
   */
  valueSet: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DataRequirement_CodeFilter_ValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataRequirement.CodeFilter.ValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value_set" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "value_set" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_CodeFilter_ValueSet {
    return new DataRequirement_CodeFilter_ValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_CodeFilter_ValueSet {
    return new DataRequirement_CodeFilter_ValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_CodeFilter_ValueSet {
    return new DataRequirement_CodeFilter_ValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_CodeFilter_ValueSet | PlainMessage<DataRequirement_CodeFilter_ValueSet> | undefined, b: DataRequirement_CodeFilter_ValueSet | PlainMessage<DataRequirement_CodeFilter_ValueSet> | undefined): boolean {
    return proto3.util.equals(DataRequirement_CodeFilter_ValueSet, a, b);
  }
}

/**
 * What dates/date ranges are expected
 *
 * @generated from message google.fhir.stu3.proto.DataRequirement.DateFilter
 */
export class DataRequirement_DateFilter extends Message<DataRequirement_DateFilter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The date-valued attribute of the filter
   *
   * @generated from field: google.fhir.stu3.proto.String path = 3;
   */
  path?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.DataRequirement.DateFilter.Value value = 4;
   */
  value?: DataRequirement_DateFilter_Value;

  constructor(data?: PartialMessage<DataRequirement_DateFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataRequirement.DateFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "value", kind: "message", T: DataRequirement_DateFilter_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_DateFilter {
    return new DataRequirement_DateFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter {
    return new DataRequirement_DateFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter {
    return new DataRequirement_DateFilter().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_DateFilter | PlainMessage<DataRequirement_DateFilter> | undefined, b: DataRequirement_DateFilter | PlainMessage<DataRequirement_DateFilter> | undefined): boolean {
    return proto3.util.equals(DataRequirement_DateFilter, a, b);
  }
}

/**
 * The value of the filter, as a Period, DateTime, or Duration value
 *
 * @generated from message google.fhir.stu3.proto.DataRequirement.DateFilter.Value
 */
export class DataRequirement_DateFilter_Value extends Message<DataRequirement_DateFilter_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DataRequirement.DateFilter.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 3;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DataRequirement_DateFilter_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataRequirement.DateFilter.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "value" },
    { no: 3, name: "duration", kind: "message", T: Duration, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_DateFilter_Value {
    return new DataRequirement_DateFilter_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter_Value {
    return new DataRequirement_DateFilter_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter_Value {
    return new DataRequirement_DateFilter_Value().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_DateFilter_Value | PlainMessage<DataRequirement_DateFilter_Value> | undefined, b: DataRequirement_DateFilter_Value | PlainMessage<DataRequirement_DateFilter_Value> | undefined): boolean {
    return proto3.util.equals(DataRequirement_DateFilter_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Element, last updated
 * 2017-04-19T07:44:43.294+10:00. Base for all elements. See
 * http://hl7.org/fhir/StructureDefinition/Element
 *
 * @generated from message google.fhir.stu3.proto.Element
 */
export class Element extends Message<Element> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Element>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Element";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Element {
    return new Element().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Element {
    return new Element().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Element {
    return new Element().fromJsonString(jsonString, options);
  }

  static equals(a: Element | PlainMessage<Element> | undefined, b: Element | PlainMessage<Element> | undefined): boolean {
    return proto3.util.equals(Element, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ElementDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. Definition of an element in a resource or
 * extension. See http://hl7.org/fhir/StructureDefinition/ElementDefinition
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition
 */
export class ElementDefinition extends Message<ElementDefinition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Path of the element in the hierarchy of elements
   *
   * @generated from field: google.fhir.stu3.proto.String path = 3;
   */
  path?: String;

  /**
   * xmlAttr | xmlText | typeAttr | cdaText | xhtml
   *
   * @generated from field: repeated google.fhir.stu3.proto.PropertyRepresentationCode representation = 4;
   */
  representation: PropertyRepresentationCode[] = [];

  /**
   * Name for this particular element (in a set of slices)
   *
   * @generated from field: google.fhir.stu3.proto.String slice_name = 5;
   */
  sliceName?: String;

  /**
   * Name for element to display with or prompt for element
   *
   * @generated from field: google.fhir.stu3.proto.String label = 6;
   */
  label?: String;

  /**
   * Corresponding codes in terminologies
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding code = 7;
   */
  code: Coding[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.Slicing slicing = 8;
   */
  slicing?: ElementDefinition_Slicing;

  /**
   * Concise definition for space-constrained presentation
   *
   * @generated from field: google.fhir.stu3.proto.String short = 9;
   */
  short?: String;

  /**
   * Full formal definition as narrative text
   *
   * @generated from field: google.fhir.stu3.proto.Markdown definition = 10;
   */
  definition?: Markdown;

  /**
   * Comments about the use of this element
   *
   * @generated from field: google.fhir.stu3.proto.Markdown comment = 11;
   */
  comment?: Markdown;

  /**
   * Why this resource has been created
   *
   * @generated from field: google.fhir.stu3.proto.Markdown requirements = 12;
   */
  requirements?: Markdown;

  /**
   * Other names
   *
   * @generated from field: repeated google.fhir.stu3.proto.String alias = 13;
   */
  alias: String[] = [];

  /**
   * Minimum Cardinality
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt min = 14;
   */
  min?: UnsignedInt;

  /**
   * Maximum Cardinality (a number or *)
   *
   * @generated from field: google.fhir.stu3.proto.String max = 15;
   */
  max?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.Base base = 16;
   */
  base?: ElementDefinition_Base;

  /**
   * Reference to definition of content for the element
   *
   * @generated from field: google.fhir.stu3.proto.Uri content_reference = 17;
   */
  contentReference?: Uri;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition.TypeRef type = 18;
   */
  type: ElementDefinition_TypeRef[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.DefaultValue default_value = 19;
   */
  defaultValue?: ElementDefinition_DefaultValue;

  /**
   * Implicit meaning when this element is missing
   *
   * @generated from field: google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
   */
  meaningWhenMissing?: Markdown;

  /**
   * What the order of the elements means
   *
   * @generated from field: google.fhir.stu3.proto.String order_meaning = 21;
   */
  orderMeaning?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.Fixed fixed = 22;
   */
  fixed?: ElementDefinition_Fixed;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.Pattern pattern = 23;
   */
  pattern?: ElementDefinition_Pattern;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition.Example example = 24;
   */
  example: ElementDefinition_Example[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.MinValue min_value = 25;
   */
  minValue?: ElementDefinition_MinValue;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.MaxValue max_value = 26;
   */
  maxValue?: ElementDefinition_MaxValue;

  /**
   * Max length for strings
   *
   * @generated from field: google.fhir.stu3.proto.Integer max_length = 27;
   */
  maxLength?: Integer;

  /**
   * Reference to invariant about presence
   *
   * @generated from field: repeated google.fhir.stu3.proto.Id condition = 28;
   */
  condition: Id[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition.Constraint constraint = 29;
   */
  constraint: ElementDefinition_Constraint[] = [];

  /**
   * If the element must supported
   *
   * @generated from field: google.fhir.stu3.proto.Boolean must_support = 30;
   */
  mustSupport?: Boolean;

  /**
   * If this modifies the meaning of other elements
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_modifier = 31;
   */
  isModifier?: Boolean;

  /**
   * Include when _summary = true?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_summary = 32;
   */
  isSummary?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding binding = 33;
   */
  binding?: ElementDefinition_ElementDefinitionBinding;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition.Mapping mapping = 34;
   */
  mapping: ElementDefinition_Mapping[] = [];

  constructor(data?: PartialMessage<ElementDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "representation", kind: "message", T: PropertyRepresentationCode, repeated: true },
    { no: 5, name: "slice_name", kind: "message", T: String },
    { no: 6, name: "label", kind: "message", T: String },
    { no: 7, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 8, name: "slicing", kind: "message", T: ElementDefinition_Slicing },
    { no: 9, name: "short", kind: "message", T: String },
    { no: 10, name: "definition", kind: "message", T: Markdown },
    { no: 11, name: "comment", kind: "message", T: Markdown },
    { no: 12, name: "requirements", kind: "message", T: Markdown },
    { no: 13, name: "alias", kind: "message", T: String, repeated: true },
    { no: 14, name: "min", kind: "message", T: UnsignedInt },
    { no: 15, name: "max", kind: "message", T: String },
    { no: 16, name: "base", kind: "message", T: ElementDefinition_Base },
    { no: 17, name: "content_reference", kind: "message", T: Uri },
    { no: 18, name: "type", kind: "message", T: ElementDefinition_TypeRef, repeated: true },
    { no: 19, name: "default_value", kind: "message", T: ElementDefinition_DefaultValue },
    { no: 20, name: "meaning_when_missing", kind: "message", T: Markdown },
    { no: 21, name: "order_meaning", kind: "message", T: String },
    { no: 22, name: "fixed", kind: "message", T: ElementDefinition_Fixed },
    { no: 23, name: "pattern", kind: "message", T: ElementDefinition_Pattern },
    { no: 24, name: "example", kind: "message", T: ElementDefinition_Example, repeated: true },
    { no: 25, name: "min_value", kind: "message", T: ElementDefinition_MinValue },
    { no: 26, name: "max_value", kind: "message", T: ElementDefinition_MaxValue },
    { no: 27, name: "max_length", kind: "message", T: Integer },
    { no: 28, name: "condition", kind: "message", T: Id, repeated: true },
    { no: 29, name: "constraint", kind: "message", T: ElementDefinition_Constraint, repeated: true },
    { no: 30, name: "must_support", kind: "message", T: Boolean },
    { no: 31, name: "is_modifier", kind: "message", T: Boolean },
    { no: 32, name: "is_summary", kind: "message", T: Boolean },
    { no: 33, name: "binding", kind: "message", T: ElementDefinition_ElementDefinitionBinding },
    { no: 34, name: "mapping", kind: "message", T: ElementDefinition_Mapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition {
    return new ElementDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition {
    return new ElementDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition {
    return new ElementDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition | PlainMessage<ElementDefinition> | undefined, b: ElementDefinition | PlainMessage<ElementDefinition> | undefined): boolean {
    return proto3.util.equals(ElementDefinition, a, b);
  }
}

/**
 * This element is sliced - slices follow
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Slicing
 */
export class ElementDefinition_Slicing extends Message<ElementDefinition_Slicing> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator discriminator = 3;
   */
  discriminator: ElementDefinition_Slicing_Discriminator[] = [];

  /**
   * Text description of how slicing works (or not)
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * If elements must be in same order as slices
   *
   * @generated from field: google.fhir.stu3.proto.Boolean ordered = 5;
   */
  ordered?: Boolean;

  /**
   * closed | open | openAtEnd
   *
   * @generated from field: google.fhir.stu3.proto.SlicingRulesCode rules = 6;
   */
  rules?: SlicingRulesCode;

  constructor(data?: PartialMessage<ElementDefinition_Slicing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Slicing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "discriminator", kind: "message", T: ElementDefinition_Slicing_Discriminator, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "ordered", kind: "message", T: Boolean },
    { no: 6, name: "rules", kind: "message", T: SlicingRulesCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Slicing {
    return new ElementDefinition_Slicing().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing {
    return new ElementDefinition_Slicing().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing {
    return new ElementDefinition_Slicing().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Slicing | PlainMessage<ElementDefinition_Slicing> | undefined, b: ElementDefinition_Slicing | PlainMessage<ElementDefinition_Slicing> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Slicing, a, b);
  }
}

/**
 * Element values that are used to distinguish the slices
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator
 */
export class ElementDefinition_Slicing_Discriminator extends Message<ElementDefinition_Slicing_Discriminator> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * value | exists | pattern | type | profile
   *
   * @generated from field: google.fhir.stu3.proto.DiscriminatorTypeCode type = 3;
   */
  type?: DiscriminatorTypeCode;

  /**
   * Path to element value
   *
   * @generated from field: google.fhir.stu3.proto.String path = 4;
   */
  path?: String;

  constructor(data?: PartialMessage<ElementDefinition_Slicing_Discriminator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Slicing.Discriminator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: DiscriminatorTypeCode },
    { no: 4, name: "path", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Slicing_Discriminator {
    return new ElementDefinition_Slicing_Discriminator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_Discriminator {
    return new ElementDefinition_Slicing_Discriminator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_Discriminator {
    return new ElementDefinition_Slicing_Discriminator().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Slicing_Discriminator | PlainMessage<ElementDefinition_Slicing_Discriminator> | undefined, b: ElementDefinition_Slicing_Discriminator | PlainMessage<ElementDefinition_Slicing_Discriminator> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Slicing_Discriminator, a, b);
  }
}

/**
 * Base definition information for tools
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Base
 */
export class ElementDefinition_Base extends Message<ElementDefinition_Base> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Path that identifies the base element
   *
   * @generated from field: google.fhir.stu3.proto.String path = 3;
   */
  path?: String;

  /**
   * Min cardinality of the base element
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt min = 4;
   */
  min?: UnsignedInt;

  /**
   * Max cardinality of the base element
   *
   * @generated from field: google.fhir.stu3.proto.String max = 5;
   */
  max?: String;

  constructor(data?: PartialMessage<ElementDefinition_Base>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Base";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "min", kind: "message", T: UnsignedInt },
    { no: 5, name: "max", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Base {
    return new ElementDefinition_Base().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Base {
    return new ElementDefinition_Base().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Base {
    return new ElementDefinition_Base().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Base | PlainMessage<ElementDefinition_Base> | undefined, b: ElementDefinition_Base | PlainMessage<ElementDefinition_Base> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Base, a, b);
  }
}

/**
 * Data type and Profile for this element
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.TypeRef
 */
export class ElementDefinition_TypeRef extends Message<ElementDefinition_TypeRef> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Data type or Resource (reference to definition)
   *
   * @generated from field: google.fhir.stu3.proto.Uri code = 3;
   */
  code?: Uri;

  /**
   * Profile (StructureDefinition) to apply (or IG)
   *
   * @generated from field: google.fhir.stu3.proto.Uri profile = 4;
   */
  profile?: Uri;

  /**
   * Profile (StructureDefinition) to apply to reference target (or IG)
   *
   * @generated from field: google.fhir.stu3.proto.Uri target_profile = 5;
   */
  targetProfile?: Uri;

  /**
   * contained | referenced | bundled - how aggregated
   *
   * @generated from field: repeated google.fhir.stu3.proto.AggregationModeCode aggregation = 6;
   */
  aggregation: AggregationModeCode[] = [];

  /**
   * either | independent | specific
   *
   * @generated from field: google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
   */
  versioning?: ReferenceVersionRulesCode;

  constructor(data?: PartialMessage<ElementDefinition_TypeRef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.TypeRef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "code", kind: "message", T: Uri },
    { no: 4, name: "profile", kind: "message", T: Uri },
    { no: 5, name: "target_profile", kind: "message", T: Uri },
    { no: 6, name: "aggregation", kind: "message", T: AggregationModeCode, repeated: true },
    { no: 7, name: "versioning", kind: "message", T: ReferenceVersionRulesCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_TypeRef {
    return new ElementDefinition_TypeRef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef {
    return new ElementDefinition_TypeRef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef {
    return new ElementDefinition_TypeRef().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_TypeRef | PlainMessage<ElementDefinition_TypeRef> | undefined, b: ElementDefinition_TypeRef | PlainMessage<ElementDefinition_TypeRef> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_TypeRef, a, b);
  }
}

/**
 * Specified value if missing from instance
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.DefaultValue
 */
export class ElementDefinition_DefaultValue extends Message<ElementDefinition_DefaultValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.DefaultValue.default_value
   */
  defaultValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_DefaultValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.DefaultValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "default_value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "default_value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "default_value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "default_value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "default_value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "default_value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "default_value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "default_value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "default_value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "default_value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "default_value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "default_value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "default_value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "default_value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "default_value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "default_value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "default_value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "default_value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "default_value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "default_value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "default_value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "default_value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "default_value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "default_value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "default_value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "default_value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "default_value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "default_value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "default_value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "default_value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "default_value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "default_value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "default_value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "default_value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "default_value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "default_value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "default_value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "default_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_DefaultValue {
    return new ElementDefinition_DefaultValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_DefaultValue {
    return new ElementDefinition_DefaultValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_DefaultValue {
    return new ElementDefinition_DefaultValue().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_DefaultValue | PlainMessage<ElementDefinition_DefaultValue> | undefined, b: ElementDefinition_DefaultValue | PlainMessage<ElementDefinition_DefaultValue> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_DefaultValue, a, b);
  }
}

/**
 * Value must be exactly this
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Fixed
 */
export class ElementDefinition_Fixed extends Message<ElementDefinition_Fixed> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.Fixed.fixed
   */
  fixed: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_Fixed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Fixed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "fixed" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "fixed" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "fixed" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "fixed" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "fixed" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "fixed" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "fixed" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "fixed" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "fixed" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "fixed" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "fixed" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "fixed" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "fixed" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "fixed" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "fixed" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "fixed" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "fixed" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "fixed" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "fixed" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "fixed" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "fixed" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "fixed" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "fixed" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "fixed" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "fixed" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "fixed" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "fixed" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "fixed" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "fixed" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "fixed" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "fixed" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "fixed" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "fixed" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "fixed" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "fixed" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "fixed" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "fixed" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "fixed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Fixed {
    return new ElementDefinition_Fixed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Fixed {
    return new ElementDefinition_Fixed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Fixed {
    return new ElementDefinition_Fixed().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Fixed | PlainMessage<ElementDefinition_Fixed> | undefined, b: ElementDefinition_Fixed | PlainMessage<ElementDefinition_Fixed> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Fixed, a, b);
  }
}

/**
 * Value must have at least these property values
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Pattern
 */
export class ElementDefinition_Pattern extends Message<ElementDefinition_Pattern> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.Pattern.pattern
   */
  pattern: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_Pattern>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Pattern";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "pattern" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "pattern" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "pattern" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "pattern" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "pattern" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "pattern" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "pattern" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "pattern" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "pattern" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "pattern" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "pattern" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "pattern" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "pattern" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "pattern" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "pattern" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "pattern" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "pattern" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "pattern" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "pattern" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "pattern" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "pattern" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "pattern" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "pattern" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "pattern" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "pattern" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "pattern" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "pattern" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "pattern" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "pattern" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "pattern" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "pattern" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "pattern" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "pattern" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "pattern" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "pattern" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "pattern" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "pattern" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "pattern" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Pattern {
    return new ElementDefinition_Pattern().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Pattern {
    return new ElementDefinition_Pattern().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Pattern {
    return new ElementDefinition_Pattern().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Pattern | PlainMessage<ElementDefinition_Pattern> | undefined, b: ElementDefinition_Pattern | PlainMessage<ElementDefinition_Pattern> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Pattern, a, b);
  }
}

/**
 * Example value (as defined for type)
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Example
 */
export class ElementDefinition_Example extends Message<ElementDefinition_Example> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Describes the purpose of this example
   *
   * @generated from field: google.fhir.stu3.proto.String label = 3;
   */
  label?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.Example.Value value = 4;
   */
  value?: ElementDefinition_Example_Value;

  constructor(data?: PartialMessage<ElementDefinition_Example>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Example";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "label", kind: "message", T: String },
    { no: 4, name: "value", kind: "message", T: ElementDefinition_Example_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Example {
    return new ElementDefinition_Example().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Example {
    return new ElementDefinition_Example().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Example {
    return new ElementDefinition_Example().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Example | PlainMessage<ElementDefinition_Example> | undefined, b: ElementDefinition_Example | PlainMessage<ElementDefinition_Example> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Example, a, b);
  }
}

/**
 * Value of Example (one of allowed types)
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Example.Value
 */
export class ElementDefinition_Example_Value extends Message<ElementDefinition_Example_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.Example.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_Example_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Example.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Example_Value {
    return new ElementDefinition_Example_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Example_Value {
    return new ElementDefinition_Example_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Example_Value {
    return new ElementDefinition_Example_Value().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Example_Value | PlainMessage<ElementDefinition_Example_Value> | undefined, b: ElementDefinition_Example_Value | PlainMessage<ElementDefinition_Example_Value> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Example_Value, a, b);
  }
}

/**
 * Minimum Allowed Value (for some types)
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.MinValue
 */
export class ElementDefinition_MinValue extends Message<ElementDefinition_MinValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.MinValue.min_value
   */
  minValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 3;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 4;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 7;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_MinValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.MinValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "min_value" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "min_value" },
    { no: 3, name: "instant", kind: "message", T: Instant, oneof: "min_value" },
    { no: 4, name: "time", kind: "message", T: Time, oneof: "min_value" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "min_value" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "min_value" },
    { no: 7, name: "positive_int", kind: "message", T: PositiveInt, oneof: "min_value" },
    { no: 8, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "min_value" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "min_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_MinValue {
    return new ElementDefinition_MinValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_MinValue {
    return new ElementDefinition_MinValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_MinValue {
    return new ElementDefinition_MinValue().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_MinValue | PlainMessage<ElementDefinition_MinValue> | undefined, b: ElementDefinition_MinValue | PlainMessage<ElementDefinition_MinValue> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_MinValue, a, b);
  }
}

/**
 * Maximum Allowed Value (for some types)
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.MaxValue
 */
export class ElementDefinition_MaxValue extends Message<ElementDefinition_MaxValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.MaxValue.max_value
   */
  maxValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 3;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 4;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 7;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_MaxValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.MaxValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "max_value" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "max_value" },
    { no: 3, name: "instant", kind: "message", T: Instant, oneof: "max_value" },
    { no: 4, name: "time", kind: "message", T: Time, oneof: "max_value" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "max_value" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "max_value" },
    { no: 7, name: "positive_int", kind: "message", T: PositiveInt, oneof: "max_value" },
    { no: 8, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "max_value" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "max_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_MaxValue {
    return new ElementDefinition_MaxValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_MaxValue {
    return new ElementDefinition_MaxValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_MaxValue {
    return new ElementDefinition_MaxValue().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_MaxValue | PlainMessage<ElementDefinition_MaxValue> | undefined, b: ElementDefinition_MaxValue | PlainMessage<ElementDefinition_MaxValue> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_MaxValue, a, b);
  }
}

/**
 * Condition that must evaluate to true
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Constraint
 */
export class ElementDefinition_Constraint extends Message<ElementDefinition_Constraint> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Target of 'condition' reference above
   *
   * @generated from field: google.fhir.stu3.proto.Id key = 3;
   */
  key?: Id;

  /**
   * Why this constraint is necessary or appropriate
   *
   * @generated from field: google.fhir.stu3.proto.String requirements = 4;
   */
  requirements?: String;

  /**
   * error | warning
   *
   * @generated from field: google.fhir.stu3.proto.ConstraintSeverityCode severity = 5;
   */
  severity?: ConstraintSeverityCode;

  /**
   * Human description of constraint
   *
   * @generated from field: google.fhir.stu3.proto.String human = 6;
   */
  human?: String;

  /**
   * FHIRPath expression of constraint
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  /**
   * XPath expression of constraint
   *
   * @generated from field: google.fhir.stu3.proto.String xpath = 8;
   */
  xpath?: String;

  /**
   * Reference to original source of constraint
   *
   * @generated from field: google.fhir.stu3.proto.Uri source = 9;
   */
  source?: Uri;

  constructor(data?: PartialMessage<ElementDefinition_Constraint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Constraint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "key", kind: "message", T: Id },
    { no: 4, name: "requirements", kind: "message", T: String },
    { no: 5, name: "severity", kind: "message", T: ConstraintSeverityCode },
    { no: 6, name: "human", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
    { no: 8, name: "xpath", kind: "message", T: String },
    { no: 9, name: "source", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Constraint {
    return new ElementDefinition_Constraint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Constraint {
    return new ElementDefinition_Constraint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Constraint {
    return new ElementDefinition_Constraint().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Constraint | PlainMessage<ElementDefinition_Constraint> | undefined, b: ElementDefinition_Constraint | PlainMessage<ElementDefinition_Constraint> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Constraint, a, b);
  }
}

/**
 * ValueSet details if this is coded
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding
 */
export class ElementDefinition_ElementDefinitionBinding extends Message<ElementDefinition_ElementDefinitionBinding> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * required | extensible | preferred | example
   *
   * @generated from field: google.fhir.stu3.proto.BindingStrengthCode strength = 3;
   */
  strength?: BindingStrengthCode;

  /**
   * Human explanation of the value set
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet value_set = 5;
   */
  valueSet?: ElementDefinition_ElementDefinitionBinding_ValueSet;

  constructor(data?: PartialMessage<ElementDefinition_ElementDefinitionBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "strength", kind: "message", T: BindingStrengthCode },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "value_set", kind: "message", T: ElementDefinition_ElementDefinitionBinding_ValueSet },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_ElementDefinitionBinding {
    return new ElementDefinition_ElementDefinitionBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding {
    return new ElementDefinition_ElementDefinitionBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding {
    return new ElementDefinition_ElementDefinitionBinding().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_ElementDefinitionBinding | PlainMessage<ElementDefinition_ElementDefinitionBinding> | undefined, b: ElementDefinition_ElementDefinitionBinding | PlainMessage<ElementDefinition_ElementDefinitionBinding> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_ElementDefinitionBinding, a, b);
  }
}

/**
 * Source of value set
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet
 */
export class ElementDefinition_ElementDefinitionBinding_ValueSet extends Message<ElementDefinition_ElementDefinitionBinding_ValueSet> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet.value_set
   */
  valueSet: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_ElementDefinitionBinding_ValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.ElementDefinitionBinding.ValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "value_set" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "value_set" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_ElementDefinitionBinding_ValueSet {
    return new ElementDefinition_ElementDefinitionBinding_ValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding_ValueSet {
    return new ElementDefinition_ElementDefinitionBinding_ValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding_ValueSet {
    return new ElementDefinition_ElementDefinitionBinding_ValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_ElementDefinitionBinding_ValueSet | PlainMessage<ElementDefinition_ElementDefinitionBinding_ValueSet> | undefined, b: ElementDefinition_ElementDefinitionBinding_ValueSet | PlainMessage<ElementDefinition_ElementDefinitionBinding_ValueSet> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_ElementDefinitionBinding_ValueSet, a, b);
  }
}

/**
 * Map element to another set of definitions
 *
 * @generated from message google.fhir.stu3.proto.ElementDefinition.Mapping
 */
export class ElementDefinition_Mapping extends Message<ElementDefinition_Mapping> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Reference to mapping declaration
   *
   * @generated from field: google.fhir.stu3.proto.Id identity = 3;
   */
  identity?: Id;

  /**
   * Computable language of mapping
   *
   * @generated from field: google.fhir.stu3.proto.MimeTypeCode language = 4;
   */
  language?: MimeTypeCode;

  /**
   * Details of the mapping
   *
   * @generated from field: google.fhir.stu3.proto.String map = 5;
   */
  map?: String;

  /**
   * Comments about the mapping or its use
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 6;
   */
  comment?: String;

  constructor(data?: PartialMessage<ElementDefinition_Mapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementDefinition.Mapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "identity", kind: "message", T: Id },
    { no: 4, name: "language", kind: "message", T: MimeTypeCode },
    { no: 5, name: "map", kind: "message", T: String },
    { no: 6, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Mapping {
    return new ElementDefinition_Mapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Mapping {
    return new ElementDefinition_Mapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Mapping {
    return new ElementDefinition_Mapping().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Mapping | PlainMessage<ElementDefinition_Mapping> | undefined, b: ElementDefinition_Mapping | PlainMessage<ElementDefinition_Mapping> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Mapping, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Narrative, last updated
 * 2017-04-19T07:44:43.294+10:00. A human-readable formatted text, including
 * images. See http://hl7.org/fhir/StructureDefinition/Narrative
 *
 * @generated from message google.fhir.stu3.proto.Narrative
 */
export class Narrative extends Message<Narrative> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * generated | extensions | additional | empty
   *
   * @generated from field: google.fhir.stu3.proto.NarrativeStatusCode status = 3;
   */
  status?: NarrativeStatusCode;

  /**
   * Limited xhtml content
   *
   * @generated from field: google.fhir.stu3.proto.Xhtml div = 4;
   */
  div?: Xhtml;

  constructor(data?: PartialMessage<Narrative>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Narrative";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "status", kind: "message", T: NarrativeStatusCode },
    { no: 4, name: "div", kind: "message", T: Xhtml },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Narrative {
    return new Narrative().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Narrative {
    return new Narrative().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Narrative {
    return new Narrative().fromJsonString(jsonString, options);
  }

  static equals(a: Narrative | PlainMessage<Narrative> | undefined, b: Narrative | PlainMessage<Narrative> | undefined): boolean {
    return proto3.util.equals(Narrative, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ParameterDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. Definition of a parameter to a module. See
 * http://hl7.org/fhir/StructureDefinition/ParameterDefinition
 *
 * @generated from message google.fhir.stu3.proto.ParameterDefinition
 */
export class ParameterDefinition extends Message<ParameterDefinition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Name used to access the parameter value
   *
   * @generated from field: google.fhir.stu3.proto.Code name = 3;
   */
  name?: Code;

  /**
   * in | out
   *
   * @generated from field: google.fhir.stu3.proto.OperationParameterUseCode use = 4;
   */
  use?: OperationParameterUseCode;

  /**
   * Minimum cardinality
   *
   * @generated from field: google.fhir.stu3.proto.Integer min = 5;
   */
  min?: Integer;

  /**
   * Maximum cardinality (a number of *)
   *
   * @generated from field: google.fhir.stu3.proto.String max = 6;
   */
  max?: String;

  /**
   * A brief description of the parameter
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 7;
   */
  documentation?: String;

  /**
   * What type of value
   *
   * @generated from field: google.fhir.stu3.proto.FHIRAllTypesCode type = 8;
   */
  type?: FHIRAllTypesCode;

  /**
   * What profile the value is expected to be
   *
   * @generated from field: google.fhir.stu3.proto.Reference profile = 9;
   */
  profile?: Reference;

  constructor(data?: PartialMessage<ParameterDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ParameterDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "name", kind: "message", T: Code },
    { no: 4, name: "use", kind: "message", T: OperationParameterUseCode },
    { no: 5, name: "min", kind: "message", T: Integer },
    { no: 6, name: "max", kind: "message", T: String },
    { no: 7, name: "documentation", kind: "message", T: String },
    { no: 8, name: "type", kind: "message", T: FHIRAllTypesCode },
    { no: 9, name: "profile", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParameterDefinition {
    return new ParameterDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParameterDefinition {
    return new ParameterDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParameterDefinition {
    return new ParameterDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ParameterDefinition | PlainMessage<ParameterDefinition> | undefined, b: ParameterDefinition | PlainMessage<ParameterDefinition> | undefined): boolean {
    return proto3.util.equals(ParameterDefinition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for RelatedArtifact, last updated
 * 2017-04-19T07:44:43.294+10:00. Related artifacts for a knowledge resource.
 * See http://hl7.org/fhir/StructureDefinition/RelatedArtifact
 *
 * @generated from message google.fhir.stu3.proto.RelatedArtifact
 */
export class RelatedArtifact extends Message<RelatedArtifact> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * documentation | justification | citation | predecessor | successor |
   * derived-from | depends-on | composed-of
   *
   * @generated from field: google.fhir.stu3.proto.RelatedArtifactTypeCode type = 3;
   */
  type?: RelatedArtifactTypeCode;

  /**
   * Brief description of the related artifact
   *
   * @generated from field: google.fhir.stu3.proto.String display = 4;
   */
  display?: String;

  /**
   * Bibliographic citation for the artifact
   *
   * @generated from field: google.fhir.stu3.proto.String citation = 5;
   */
  citation?: String;

  /**
   * Where the artifact can be accessed
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 6;
   */
  url?: Uri;

  /**
   * What document is being referenced
   *
   * @generated from field: google.fhir.stu3.proto.Attachment document = 7;
   */
  document?: Attachment;

  /**
   * What resource is being referenced
   *
   * @generated from field: google.fhir.stu3.proto.Reference resource = 8;
   */
  resource?: Reference;

  constructor(data?: PartialMessage<RelatedArtifact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RelatedArtifact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: RelatedArtifactTypeCode },
    { no: 4, name: "display", kind: "message", T: String },
    { no: 5, name: "citation", kind: "message", T: String },
    { no: 6, name: "url", kind: "message", T: Uri },
    { no: 7, name: "document", kind: "message", T: Attachment },
    { no: 8, name: "resource", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedArtifact {
    return new RelatedArtifact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedArtifact {
    return new RelatedArtifact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedArtifact {
    return new RelatedArtifact().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedArtifact | PlainMessage<RelatedArtifact> | undefined, b: RelatedArtifact | PlainMessage<RelatedArtifact> | undefined): boolean {
    return proto3.util.equals(RelatedArtifact, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for TriggerDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. Defines an expected trigger for a module. See
 * http://hl7.org/fhir/StructureDefinition/TriggerDefinition
 *
 * @generated from message google.fhir.stu3.proto.TriggerDefinition
 */
export class TriggerDefinition extends Message<TriggerDefinition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * named-event | periodic | data-added | data-modified | data-removed |
   * data-accessed | data-access-ended
   *
   * @generated from field: google.fhir.stu3.proto.TriggerTypeCode type = 3;
   */
  type?: TriggerTypeCode;

  /**
   * Triggering event name
   *
   * @generated from field: google.fhir.stu3.proto.String event_name = 4;
   */
  eventName?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.TriggerDefinition.EventTiming event_timing = 5;
   */
  eventTiming?: TriggerDefinition_EventTiming;

  /**
   * Triggering data of the event
   *
   * @generated from field: google.fhir.stu3.proto.DataRequirement event_data = 6;
   */
  eventData?: DataRequirement;

  constructor(data?: PartialMessage<TriggerDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TriggerDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: TriggerTypeCode },
    { no: 4, name: "event_name", kind: "message", T: String },
    { no: 5, name: "event_timing", kind: "message", T: TriggerDefinition_EventTiming },
    { no: 6, name: "event_data", kind: "message", T: DataRequirement },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerDefinition {
    return new TriggerDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerDefinition {
    return new TriggerDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerDefinition {
    return new TriggerDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerDefinition | PlainMessage<TriggerDefinition> | undefined, b: TriggerDefinition | PlainMessage<TriggerDefinition> | undefined): boolean {
    return proto3.util.equals(TriggerDefinition, a, b);
  }
}

/**
 * Timing of the event
 *
 * @generated from message google.fhir.stu3.proto.TriggerDefinition.EventTiming
 */
export class TriggerDefinition_EventTiming extends Message<TriggerDefinition_EventTiming> {
  /**
   * @generated from oneof google.fhir.stu3.proto.TriggerDefinition.EventTiming.event_timing
   */
  eventTiming: {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 3;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 4;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TriggerDefinition_EventTiming>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TriggerDefinition.EventTiming";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "event_timing" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "event_timing" },
    { no: 3, name: "date", kind: "message", T: Date, oneof: "event_timing" },
    { no: 4, name: "date_time", kind: "message", T: DateTime, oneof: "event_timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerDefinition_EventTiming {
    return new TriggerDefinition_EventTiming().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerDefinition_EventTiming {
    return new TriggerDefinition_EventTiming().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerDefinition_EventTiming {
    return new TriggerDefinition_EventTiming().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerDefinition_EventTiming | PlainMessage<TriggerDefinition_EventTiming> | undefined, b: TriggerDefinition_EventTiming | PlainMessage<TriggerDefinition_EventTiming> | undefined): boolean {
    return proto3.util.equals(TriggerDefinition_EventTiming, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for UsageContext, last updated
 * 2017-04-19T07:44:43.294+10:00. Describes the context of use for a conformance
 * or knowledge resource. See
 * http://hl7.org/fhir/StructureDefinition/UsageContext
 *
 * @generated from message google.fhir.stu3.proto.UsageContext
 */
export class UsageContext extends Message<UsageContext> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Type of context being specified
   *
   * @generated from field: google.fhir.stu3.proto.Coding code = 3;
   */
  code?: Coding;

  /**
   * @generated from field: google.fhir.stu3.proto.UsageContext.Value value = 4;
   */
  value?: UsageContext_Value;

  constructor(data?: PartialMessage<UsageContext>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.UsageContext";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "code", kind: "message", T: Coding },
    { no: 4, name: "value", kind: "message", T: UsageContext_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsageContext {
    return new UsageContext().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsageContext {
    return new UsageContext().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsageContext {
    return new UsageContext().fromJsonString(jsonString, options);
  }

  static equals(a: UsageContext | PlainMessage<UsageContext> | undefined, b: UsageContext | PlainMessage<UsageContext> | undefined): boolean {
    return proto3.util.equals(UsageContext, a, b);
  }
}

/**
 * Value that defines the context
 *
 * @generated from message google.fhir.stu3.proto.UsageContext.Value
 */
export class UsageContext_Value extends Message<UsageContext_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.UsageContext.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 2;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 3;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsageContext_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.UsageContext.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 2, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 3, name: "range", kind: "message", T: Range, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsageContext_Value {
    return new UsageContext_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsageContext_Value {
    return new UsageContext_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsageContext_Value {
    return new UsageContext_Value().fromJsonString(jsonString, options);
  }

  static equals(a: UsageContext_Value | PlainMessage<UsageContext_Value> | undefined, b: UsageContext_Value | PlainMessage<UsageContext_Value> | undefined): boolean {
    return proto3.util.equals(UsageContext_Value, a, b);
  }
}

