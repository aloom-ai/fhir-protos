//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/stu3/resources.proto (package google.fhir.stu3.proto, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Code, CodeableConcept, Coding, ContactPoint, Count, Date, DateTime, DaysOfWeekCode, Decimal, Distance, Dosage, Duration, Extension, HumanName, Id, Identifier, Instant, Integer, LanguageCode, Markdown, Meta, MimeTypeCode, Money, Oid, Period, PositiveInt, Quantity, Range, Ratio, Reference, SampledData, Signature, SimpleQuantity, String, Time, Timing, UnsignedInt, Uri } from "./datatypes_pb.js";
import { ContactDetail, Contributor, DataRequirement, ElementDefinition, Narrative, ParameterDefinition, RelatedArtifact, TriggerDefinition, UsageContext } from "./metadatatypes_pb.js";
import { AccountStatusCode, ActionCardinalityBehaviorCode, ActionConditionKindCode, ActionGroupingBehaviorCode, ActionListCode, ActionParticipantTypeCode, ActionPrecheckBehaviorCode, ActionRelationshipTypeCode, ActionRequiredBehaviorCode, ActionSelectionBehaviorCode, AdministrativeGenderCode, AdverseEventCategoryCode, AdverseEventCausalityCode, AllergyIntoleranceCategoryCode, AllergyIntoleranceClinicalStatusCode, AllergyIntoleranceCriticalityCode, AllergyIntoleranceSeverityCode, AllergyIntoleranceTypeCode, AllergyIntoleranceVerificationStatusCode, AppointmentStatusCode, AssertionDirectionTypeCode, AssertionOperatorTypeCode, AssertionResponseTypesCode, AuditEventActionCode, AuditEventAgentNetworkTypeCode, AuditEventOutcomeCode, BindingStrengthCode, BundleTypeCode, CapabilityStatementKindCode, CarePlanActivityStatusCode, CarePlanIntentCode, CarePlanStatusCode, CareTeamStatusCode, ChargeItemStatusCode, ClinicalImpressionStatusCode, CodeSystemContentModeCode, CodeSystemHierarchyMeaningCode, CompartmentTypeCode, CompositionAttestationModeCode, CompositionStatusCode, ConceptMapEquivalenceCode, ConceptMapGroupUnmappedModeCode, ConditionalDeleteStatusCode, ConditionalReadStatusCode, ConditionClinicalStatusCodesCode, ConditionVerificationStatusCode, ConfidentialityClassificationCode, ConsentDataMeaningCode, ConsentExceptTypeCode, ConsentStateCode, ContentTypeCode, ContractResourceStatusCode, DataElementStringencyCode, DetectedIssueSeverityCode, DeviceMetricCalibrationStateCode, DeviceMetricCalibrationTypeCode, DeviceMetricCategoryCode, DeviceMetricColorCode, DeviceMetricOperationalStatusCode, DeviceUseStatementStatusCode, DiagnosticReportStatusCode, DigitalMediaTypeCode, DocumentModeCode, DocumentReferenceStatusCode, DocumentRelationshipTypeCode, EncounterLocationStatusCode, EncounterStatusCode, EndpointStatusCode, EpisodeOfCareStatusCode, EventCapabilityModeCode, EventStatusCode, ExplanationOfBenefitStatusCode, ExtensionContextCode, FamilyHistoryStatusCode, FHIRAllTypesCode, FHIRDefinedTypeCode, FHIRDefinedTypeExtCode, FHIRDeviceStatusCode, FHIRSubstanceStatusCode, FilterOperatorCode, FinancialResourceStatusCode, FlagStatusCode, GoalStatusCode, GraphCompartmentRuleCode, GroupTypeCode, GuidanceResponseStatusCode, GuideDependencyTypeCode, GuidePageKindCode, HTTPVerbCode, IdentityAssuranceLevelCode, ImmunizationStatusCodesCode, InstanceAvailabilityCode, IssueSeverityCode, IssueTypeCode, LinkageTypeCode, LinkTypeCode, ListModeCode, ListStatusCode, LocationModeCode, LocationStatusCode, MeasmntPrincipleCode, MeasureReportStatusCode, MeasureReportTypeCode, MedicationAdministrationStatusCode, MedicationDispenseStatusCode, MedicationRequestIntentCode, MedicationRequestPriorityCode, MedicationRequestStatusCode, MedicationStatementStatusCode, MedicationStatementTakenCode, MedicationStatusCode, MessageSignificanceCategoryCode, NamingSystemIdentifierTypeCode, NamingSystemTypeCode, NutritionOrderStatusCode, ObservationRelationshipTypeCode, ObservationStatusCode, OperationKindCode, OperationParameterUseCode, ParticipantRequiredCode, ParticipationStatusCode, PropertyTypeCode, ProvenanceEntityRoleCode, PublicationStatusCode, QualityTypeCode, QuestionnaireItemTypeCode, QuestionnaireResponseStatusCode, ReferenceHandlingPolicyCode, RepositoryTypeCode, RequestIntentCode, RequestPriorityCode, RequestStatusCode, ResearchStudyStatusCode, ResearchSubjectStatusCode, ResourceTypeCode, ResourceVersionPolicyCode, ResponseTypeCode, RestfulCapabilityModeCode, SearchComparatorCode, SearchEntryModeCode, SearchModifierCodeCode, SearchParamTypeCode, SequenceTypeCode, SlotStatusCode, SpecimenStatusCode, StructureDefinitionKindCode, StructureMapContextTypeCode, StructureMapGroupTypeModeCode, StructureMapInputModeCode, StructureMapModelModeCode, StructureMapSourceListModeCode, StructureMapTargetListModeCode, StructureMapTransformCode, SubscriptionChannelTypeCode, SubscriptionStatusCode, SupplyDeliveryStatusCode, SupplyRequestStatusCode, SystemRestfulInteractionCode, SystemVersionProcessingModeCode, TaskStatusCode, TestReportActionResultCode, TestReportParticipantTypeCode, TestReportResultCode, TestReportStatusCode, TestScriptRequestMethodCodeCode, TypeDerivationRuleCode, TypeRestfulInteractionCode, UDIEntryTypeCode, UnknownContentCodeCode, UseCode, VisionBaseCode, VisionEyesCode, XPathUsageTypeCode } from "./codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Account, last updated
 * 2017-04-19T07:44:43.294+10:00. Tracks balance, charges, for patient or cost
 * center. See http://hl7.org/fhir/StructureDefinition/Account
 *
 * @generated from message google.fhir.stu3.proto.Account
 */
export class Account extends Message<Account> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Account number
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.AccountStatusCode status = 10;
   */
  status?: AccountStatusCode;

  /**
   * E.g. patient, expense, depreciation
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Human-readable label
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * What is account tied to?
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Transaction window
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 14;
   */
  period?: Period;

  /**
   * Time window that transactions may be posted to this account
   *
   * @generated from field: google.fhir.stu3.proto.Period active = 15;
   */
  active?: Period;

  /**
   * How much is in account?
   *
   * @generated from field: google.fhir.stu3.proto.Money balance = 16;
   */
  balance?: Money;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Account.Coverage coverage = 17;
   */
  coverage: Account_Coverage[] = [];

  /**
   * Who is responsible?
   *
   * @generated from field: google.fhir.stu3.proto.Reference owner = 18;
   */
  owner?: Reference;

  /**
   * Explanation of purpose/use
   *
   * @generated from field: google.fhir.stu3.proto.String description = 19;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Account.Guarantor guarantor = 20;
   */
  guarantor: Account_Guarantor[] = [];

  constructor(data?: PartialMessage<Account>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Account";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: AccountStatusCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "period", kind: "message", T: Period },
    { no: 15, name: "active", kind: "message", T: Period },
    { no: 16, name: "balance", kind: "message", T: Money },
    { no: 17, name: "coverage", kind: "message", T: Account_Coverage, repeated: true },
    { no: 18, name: "owner", kind: "message", T: Reference },
    { no: 19, name: "description", kind: "message", T: String },
    { no: 20, name: "guarantor", kind: "message", T: Account_Guarantor, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account {
    return new Account().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJsonString(jsonString, options);
  }

  static equals(a: Account | PlainMessage<Account> | undefined, b: Account | PlainMessage<Account> | undefined): boolean {
    return proto3.util.equals(Account, a, b);
  }
}

/**
 * The party(s) that are responsible for covering the payment of this account,
 * and what order should they be applied to the account
 *
 * @generated from message google.fhir.stu3.proto.Account.Coverage
 */
export class Account_Coverage extends Message<Account_Coverage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The party(s) that are responsible for covering the payment of this
   * account
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 4;
   */
  coverage?: Reference;

  /**
   * The priority of the coverage in the context of this account
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt priority = 5;
   */
  priority?: PositiveInt;

  constructor(data?: PartialMessage<Account_Coverage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Account.Coverage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "coverage", kind: "message", T: Reference },
    { no: 5, name: "priority", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account_Coverage {
    return new Account_Coverage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account_Coverage {
    return new Account_Coverage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account_Coverage {
    return new Account_Coverage().fromJsonString(jsonString, options);
  }

  static equals(a: Account_Coverage | PlainMessage<Account_Coverage> | undefined, b: Account_Coverage | PlainMessage<Account_Coverage> | undefined): boolean {
    return proto3.util.equals(Account_Coverage, a, b);
  }
}

/**
 * Responsible for the account
 *
 * @generated from message google.fhir.stu3.proto.Account.Guarantor
 */
export class Account_Guarantor extends Message<Account_Guarantor> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Responsible entity
   *
   * @generated from field: google.fhir.stu3.proto.Reference party = 4;
   */
  party?: Reference;

  /**
   * Credit or other hold applied
   *
   * @generated from field: google.fhir.stu3.proto.Boolean on_hold = 5;
   */
  onHold?: Boolean;

  /**
   * Guarrantee account during
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  constructor(data?: PartialMessage<Account_Guarantor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Account.Guarantor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "party", kind: "message", T: Reference },
    { no: 5, name: "on_hold", kind: "message", T: Boolean },
    { no: 6, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account_Guarantor {
    return new Account_Guarantor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account_Guarantor {
    return new Account_Guarantor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account_Guarantor {
    return new Account_Guarantor().fromJsonString(jsonString, options);
  }

  static equals(a: Account_Guarantor | PlainMessage<Account_Guarantor> | undefined, b: Account_Guarantor | PlainMessage<Account_Guarantor> | undefined): boolean {
    return proto3.util.equals(Account_Guarantor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ActivityDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. The definition of a specific activity to be
 * taken, independent of any particular patient or context. See
 * http://hl7.org/fhir/StructureDefinition/ActivityDefinition
 *
 * @generated from message google.fhir.stu3.proto.ActivityDefinition
 */
export class ActivityDefinition extends Message<ActivityDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this activity definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the activity definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the activity definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this activity definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this activity definition (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Natural language description of the activity definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Why this activity definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 19;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the asset
   *
   * @generated from field: google.fhir.stu3.proto.String usage = 20;
   */
  usage?: String;

  /**
   * When the activity definition was approved by publisher
   *
   * @generated from field: google.fhir.stu3.proto.Date approval_date = 21;
   */
  approvalDate?: Date;

  /**
   * When the activity definition was last reviewed
   *
   * @generated from field: google.fhir.stu3.proto.Date last_review_date = 22;
   */
  lastReviewDate?: Date;

  /**
   * When the activity definition is expected to be used
   *
   * @generated from field: google.fhir.stu3.proto.Period effective_period = 23;
   */
  effectivePeriod?: Period;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 24;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for activity definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 25;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * E.g. Education, Treatment, Assessment, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept topic = 26;
   */
  topic: CodeableConcept[] = [];

  /**
   * A content contributor
   *
   * @generated from field: repeated google.fhir.stu3.proto.Contributor contributor = 27;
   */
  contributor: Contributor[] = [];

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 28;
   */
  contact: ContactDetail[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 29;
   */
  copyright?: Markdown;

  /**
   * Additional documentation, citations, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact related_artifact = 30;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Logic used by the asset
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference library = 31;
   */
  library: Reference[] = [];

  /**
   * Kind of resource
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode kind = 32;
   */
  kind?: ResourceTypeCode;

  /**
   * Detail type of activity
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 33;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.ActivityDefinition.TimingType timing = 34;
   */
  timing?: ActivityDefinition_TimingType;

  /**
   * Where it should happen
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 35;
   */
  location?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ActivityDefinition.Participant participant = 36;
   */
  participant: ActivityDefinition_Participant[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ActivityDefinition.Product product = 37;
   */
  product?: ActivityDefinition_Product;

  /**
   * How much is administered/consumed/supplied
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 38;
   */
  quantity?: SimpleQuantity;

  /**
   * Detailed dosage instructions
   *
   * @generated from field: repeated google.fhir.stu3.proto.Dosage dosage = 39;
   */
  dosage: Dosage[] = [];

  /**
   * What part of body to perform on
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 40;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * Transform to apply the template
   *
   * @generated from field: google.fhir.stu3.proto.Reference transform = 41;
   */
  transform?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ActivityDefinition.DynamicValue dynamic_value = 42;
   */
  dynamicValue: ActivityDefinition_DynamicValue[] = [];

  constructor(data?: PartialMessage<ActivityDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActivityDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "purpose", kind: "message", T: Markdown },
    { no: 20, name: "usage", kind: "message", T: String },
    { no: 21, name: "approval_date", kind: "message", T: Date },
    { no: 22, name: "last_review_date", kind: "message", T: Date },
    { no: 23, name: "effective_period", kind: "message", T: Period },
    { no: 24, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 25, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "contributor", kind: "message", T: Contributor, repeated: true },
    { no: 28, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 29, name: "copyright", kind: "message", T: Markdown },
    { no: 30, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 31, name: "library", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "kind", kind: "message", T: ResourceTypeCode },
    { no: 33, name: "code", kind: "message", T: CodeableConcept },
    { no: 34, name: "timing", kind: "message", T: ActivityDefinition_TimingType },
    { no: 35, name: "location", kind: "message", T: Reference },
    { no: 36, name: "participant", kind: "message", T: ActivityDefinition_Participant, repeated: true },
    { no: 37, name: "product", kind: "message", T: ActivityDefinition_Product },
    { no: 38, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 39, name: "dosage", kind: "message", T: Dosage, repeated: true },
    { no: 40, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 41, name: "transform", kind: "message", T: Reference },
    { no: 42, name: "dynamic_value", kind: "message", T: ActivityDefinition_DynamicValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityDefinition {
    return new ActivityDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityDefinition {
    return new ActivityDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityDefinition {
    return new ActivityDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityDefinition | PlainMessage<ActivityDefinition> | undefined, b: ActivityDefinition | PlainMessage<ActivityDefinition> | undefined): boolean {
    return proto3.util.equals(ActivityDefinition, a, b);
  }
}

/**
 * When activity is to occur
 *
 * @generated from message google.fhir.stu3.proto.ActivityDefinition.TimingType
 */
export class ActivityDefinition_TimingType extends Message<ActivityDefinition_TimingType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ActivityDefinition.TimingType.timing
   */
  timing: {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing_value = 1 [json_name = "timing"];
     */
    value: Timing;
    case: "timingValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ActivityDefinition_TimingType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActivityDefinition.TimingType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing_value", jsonName: "timing", kind: "message", T: Timing, oneof: "timing" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "timing" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "timing" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityDefinition_TimingType {
    return new ActivityDefinition_TimingType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityDefinition_TimingType {
    return new ActivityDefinition_TimingType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityDefinition_TimingType {
    return new ActivityDefinition_TimingType().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityDefinition_TimingType | PlainMessage<ActivityDefinition_TimingType> | undefined, b: ActivityDefinition_TimingType | PlainMessage<ActivityDefinition_TimingType> | undefined): boolean {
    return proto3.util.equals(ActivityDefinition_TimingType, a, b);
  }
}

/**
 * Who should participate in the action
 *
 * @generated from message google.fhir.stu3.proto.ActivityDefinition.Participant
 */
export class ActivityDefinition_Participant extends Message<ActivityDefinition_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * patient | practitioner | related-person
   *
   * @generated from field: google.fhir.stu3.proto.ActionParticipantTypeCode type = 4;
   */
  type?: ActionParticipantTypeCode;

  /**
   * E.g. Nurse, Surgeon, Parent, etc
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  constructor(data?: PartialMessage<ActivityDefinition_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActivityDefinition.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ActionParticipantTypeCode },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityDefinition_Participant {
    return new ActivityDefinition_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityDefinition_Participant {
    return new ActivityDefinition_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityDefinition_Participant {
    return new ActivityDefinition_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityDefinition_Participant | PlainMessage<ActivityDefinition_Participant> | undefined, b: ActivityDefinition_Participant | PlainMessage<ActivityDefinition_Participant> | undefined): boolean {
    return proto3.util.equals(ActivityDefinition_Participant, a, b);
  }
}

/**
 * What's administered/supplied
 *
 * @generated from message google.fhir.stu3.proto.ActivityDefinition.Product
 */
export class ActivityDefinition_Product extends Message<ActivityDefinition_Product> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ActivityDefinition.Product.product
   */
  product: {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ActivityDefinition_Product>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActivityDefinition.Product";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "product" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "product" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityDefinition_Product {
    return new ActivityDefinition_Product().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityDefinition_Product {
    return new ActivityDefinition_Product().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityDefinition_Product {
    return new ActivityDefinition_Product().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityDefinition_Product | PlainMessage<ActivityDefinition_Product> | undefined, b: ActivityDefinition_Product | PlainMessage<ActivityDefinition_Product> | undefined): boolean {
    return proto3.util.equals(ActivityDefinition_Product, a, b);
  }
}

/**
 * Dynamic aspects of the definition
 *
 * @generated from message google.fhir.stu3.proto.ActivityDefinition.DynamicValue
 */
export class ActivityDefinition_DynamicValue extends Message<ActivityDefinition_DynamicValue> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Natural language description of the dynamic value
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * The path to the element to be set dynamically
   *
   * @generated from field: google.fhir.stu3.proto.String path = 5;
   */
  path?: String;

  /**
   * Language of the expression
   *
   * @generated from field: google.fhir.stu3.proto.String language = 6;
   */
  language?: String;

  /**
   * An expression that provides the dynamic value for the customization
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  constructor(data?: PartialMessage<ActivityDefinition_DynamicValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActivityDefinition.DynamicValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "path", kind: "message", T: String },
    { no: 6, name: "language", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityDefinition_DynamicValue {
    return new ActivityDefinition_DynamicValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityDefinition_DynamicValue {
    return new ActivityDefinition_DynamicValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityDefinition_DynamicValue {
    return new ActivityDefinition_DynamicValue().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityDefinition_DynamicValue | PlainMessage<ActivityDefinition_DynamicValue> | undefined, b: ActivityDefinition_DynamicValue | PlainMessage<ActivityDefinition_DynamicValue> | undefined): boolean {
    return proto3.util.equals(ActivityDefinition_DynamicValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for AdverseEvent, last updated
 * 2017-04-19T07:44:43.294+10:00. Medical care, research study or other
 * healthcare event causing physical injury. See
 * http://hl7.org/fhir/StructureDefinition/AdverseEvent
 *
 * @generated from message google.fhir.stu3.proto.AdverseEvent
 */
export class AdverseEvent extends Message<AdverseEvent> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for the event
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * AE | PAE
   * An adverse event is an event that caused harm to a patient,  an adverse
   * reaction is a something that is a subject-specific event that is a result
   * of an exposure to a medication, food, device or environmental substance, a
   * potential adverse event is something that occurred and that could have
   * caused harm to a patient but did not
   *
   * @generated from field: google.fhir.stu3.proto.AdverseEventCategoryCode category = 10;
   */
  category?: AdverseEventCategoryCode;

  /**
   * actual | potential
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Subject or group impacted by event
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 12;
   */
  subject?: Reference;

  /**
   * When the event occurred
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 13;
   */
  date?: DateTime;

  /**
   * Adverse Reaction Events linked to exposure to substance
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reaction = 14;
   */
  reaction: Reference[] = [];

  /**
   * Location where adverse event occurred
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 15;
   */
  location?: Reference;

  /**
   * Mild | Moderate | Severe
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept seriousness = 16;
   */
  seriousness?: CodeableConcept;

  /**
   * resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 17;
   */
  outcome?: CodeableConcept;

  /**
   * Who recorded the adverse event
   *
   * @generated from field: google.fhir.stu3.proto.Reference recorder = 18;
   */
  recorder?: Reference;

  /**
   * Who  was involved in the adverse event or the potential adverse event
   *
   * @generated from field: google.fhir.stu3.proto.Reference event_participant = 19;
   */
  eventParticipant?: Reference;

  /**
   * Description of the adverse event
   *
   * @generated from field: google.fhir.stu3.proto.String description = 20;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.AdverseEvent.SuspectEntity suspect_entity = 21;
   */
  suspectEntity: AdverseEvent_SuspectEntity[] = [];

  /**
   * AdverseEvent.subjectMedicalHistory
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference subject_medical_history = 22;
   */
  subjectMedicalHistory: Reference[] = [];

  /**
   * AdverseEvent.referenceDocument
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reference_document = 23;
   */
  referenceDocument: Reference[] = [];

  /**
   * AdverseEvent.study
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference study = 24;
   */
  study: Reference[] = [];

  constructor(data?: PartialMessage<AdverseEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "category", kind: "message", T: AdverseEventCategoryCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "subject", kind: "message", T: Reference },
    { no: 13, name: "date", kind: "message", T: DateTime },
    { no: 14, name: "reaction", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "location", kind: "message", T: Reference },
    { no: 16, name: "seriousness", kind: "message", T: CodeableConcept },
    { no: 17, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 18, name: "recorder", kind: "message", T: Reference },
    { no: 19, name: "event_participant", kind: "message", T: Reference },
    { no: 20, name: "description", kind: "message", T: String },
    { no: 21, name: "suspect_entity", kind: "message", T: AdverseEvent_SuspectEntity, repeated: true },
    { no: 22, name: "subject_medical_history", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "reference_document", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "study", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEvent {
    return new AdverseEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEvent {
    return new AdverseEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEvent {
    return new AdverseEvent().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEvent | PlainMessage<AdverseEvent> | undefined, b: AdverseEvent | PlainMessage<AdverseEvent> | undefined): boolean {
    return proto3.util.equals(AdverseEvent, a, b);
  }
}

/**
 * The suspected agent causing the adverse event
 *
 * @generated from message google.fhir.stu3.proto.AdverseEvent.SuspectEntity
 */
export class AdverseEvent_SuspectEntity extends Message<AdverseEvent_SuspectEntity> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Refers to the specific entity that caused the adverse event
   *
   * @generated from field: google.fhir.stu3.proto.Reference instance = 4;
   */
  instance?: Reference;

  /**
   * causality1 | causality2
   *
   * @generated from field: google.fhir.stu3.proto.AdverseEventCausalityCode causality = 5;
   */
  causality?: AdverseEventCausalityCode;

  /**
   * assess1 | assess2
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept causality_assessment = 6;
   */
  causalityAssessment?: CodeableConcept;

  /**
   * AdverseEvent.suspectEntity.causalityProductRelatedness
   *
   * @generated from field: google.fhir.stu3.proto.String causality_product_relatedness = 7;
   */
  causalityProductRelatedness?: String;

  /**
   * method1 | method2
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept causality_method = 8;
   */
  causalityMethod?: CodeableConcept;

  /**
   * AdverseEvent.suspectEntity.causalityAuthor
   *
   * @generated from field: google.fhir.stu3.proto.Reference causality_author = 9;
   */
  causalityAuthor?: Reference;

  /**
   * result1 | result2
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept causality_result = 10;
   */
  causalityResult?: CodeableConcept;

  constructor(data?: PartialMessage<AdverseEvent_SuspectEntity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEvent.SuspectEntity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "instance", kind: "message", T: Reference },
    { no: 5, name: "causality", kind: "message", T: AdverseEventCausalityCode },
    { no: 6, name: "causality_assessment", kind: "message", T: CodeableConcept },
    { no: 7, name: "causality_product_relatedness", kind: "message", T: String },
    { no: 8, name: "causality_method", kind: "message", T: CodeableConcept },
    { no: 9, name: "causality_author", kind: "message", T: Reference },
    { no: 10, name: "causality_result", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEvent_SuspectEntity {
    return new AdverseEvent_SuspectEntity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEvent_SuspectEntity {
    return new AdverseEvent_SuspectEntity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEvent_SuspectEntity {
    return new AdverseEvent_SuspectEntity().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEvent_SuspectEntity | PlainMessage<AdverseEvent_SuspectEntity> | undefined, b: AdverseEvent_SuspectEntity | PlainMessage<AdverseEvent_SuspectEntity> | undefined): boolean {
    return proto3.util.equals(AdverseEvent_SuspectEntity, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for AllergyIntolerance, last updated
 * 2017-04-19T07:44:43.294+10:00. Allergy or Intolerance (generally: Risk of
 * adverse reaction to a substance). See
 * http://hl7.org/fhir/StructureDefinition/AllergyIntolerance
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntolerance
 */
export class AllergyIntolerance extends Message<AllergyIntolerance> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | inactive | resolved
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
   */
  clinicalStatus?: AllergyIntoleranceClinicalStatusCode;

  /**
   * unconfirmed | confirmed | refuted | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11;
   */
  verificationStatus?: AllergyIntoleranceVerificationStatusCode;

  /**
   * allergy | intolerance - Underlying mechanism (if known)
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
   */
  type?: AllergyIntoleranceTypeCode;

  /**
   * food | medication | environment | biologic
   *
   * @generated from field: repeated google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
   */
  category: AllergyIntoleranceCategoryCode[] = [];

  /**
   * low | high | unable-to-assess
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
   */
  criticality?: AllergyIntoleranceCriticalityCode;

  /**
   * Code that identifies the allergy or intolerance
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Who the sensitivity is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 16;
   */
  patient?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntolerance.Onset onset = 17;
   */
  onset?: AllergyIntolerance_Onset;

  /**
   * Date record was believed accurate
   *
   * @generated from field: google.fhir.stu3.proto.DateTime asserted_date = 18;
   */
  assertedDate?: DateTime;

  /**
   * Who recorded the sensitivity
   *
   * @generated from field: google.fhir.stu3.proto.Reference recorder = 19;
   */
  recorder?: Reference;

  /**
   * Source of the information about the allergy
   *
   * @generated from field: google.fhir.stu3.proto.Reference asserter = 20;
   */
  asserter?: Reference;

  /**
   * Date(/time) of last known occurrence of a reaction
   *
   * @generated from field: google.fhir.stu3.proto.DateTime last_occurrence = 21;
   */
  lastOccurrence?: DateTime;

  /**
   * Additional text not captured in other fields
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 22;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.AllergyIntolerance.Reaction reaction = 23;
   */
  reaction: AllergyIntolerance_Reaction[] = [];

  constructor(data?: PartialMessage<AllergyIntolerance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntolerance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "clinical_status", kind: "message", T: AllergyIntoleranceClinicalStatusCode },
    { no: 11, name: "verification_status", kind: "message", T: AllergyIntoleranceVerificationStatusCode },
    { no: 12, name: "type", kind: "message", T: AllergyIntoleranceTypeCode },
    { no: 13, name: "category", kind: "message", T: AllergyIntoleranceCategoryCode, repeated: true },
    { no: 14, name: "criticality", kind: "message", T: AllergyIntoleranceCriticalityCode },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "patient", kind: "message", T: Reference },
    { no: 17, name: "onset", kind: "message", T: AllergyIntolerance_Onset },
    { no: 18, name: "asserted_date", kind: "message", T: DateTime },
    { no: 19, name: "recorder", kind: "message", T: Reference },
    { no: 20, name: "asserter", kind: "message", T: Reference },
    { no: 21, name: "last_occurrence", kind: "message", T: DateTime },
    { no: 22, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 23, name: "reaction", kind: "message", T: AllergyIntolerance_Reaction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntolerance {
    return new AllergyIntolerance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntolerance {
    return new AllergyIntolerance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntolerance {
    return new AllergyIntolerance().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntolerance | PlainMessage<AllergyIntolerance> | undefined, b: AllergyIntolerance | PlainMessage<AllergyIntolerance> | undefined): boolean {
    return proto3.util.equals(AllergyIntolerance, a, b);
  }
}

/**
 * When allergy or intolerance was identified
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntolerance.Onset
 */
export class AllergyIntolerance_Onset extends Message<AllergyIntolerance_Onset> {
  /**
   * @generated from oneof google.fhir.stu3.proto.AllergyIntolerance.Onset.onset
   */
  onset: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AllergyIntolerance_Onset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntolerance.Onset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "onset" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "onset" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "onset" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "onset" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "onset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntolerance_Onset {
    return new AllergyIntolerance_Onset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntolerance_Onset {
    return new AllergyIntolerance_Onset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntolerance_Onset {
    return new AllergyIntolerance_Onset().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntolerance_Onset | PlainMessage<AllergyIntolerance_Onset> | undefined, b: AllergyIntolerance_Onset | PlainMessage<AllergyIntolerance_Onset> | undefined): boolean {
    return proto3.util.equals(AllergyIntolerance_Onset, a, b);
  }
}

/**
 * Adverse Reaction Events linked to exposure to substance
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntolerance.Reaction
 */
export class AllergyIntolerance_Reaction extends Message<AllergyIntolerance_Reaction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specific substance or pharmaceutical product considered to be responsible
   * for event
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept substance = 4;
   */
  substance?: CodeableConcept;

  /**
   * Clinical symptoms/signs associated with the Event
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept manifestation = 5;
   */
  manifestation: CodeableConcept[] = [];

  /**
   * Description of the event as a whole
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * Date(/time) when manifestations showed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime onset = 7;
   */
  onset?: DateTime;

  /**
   * mild | moderate | severe (of event as a whole)
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
   */
  severity?: AllergyIntoleranceSeverityCode;

  /**
   * How the subject was exposed to the substance
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
   */
  exposureRoute?: CodeableConcept;

  /**
   * Text about event not captured in other fields
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 10;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<AllergyIntolerance_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntolerance.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "substance", kind: "message", T: CodeableConcept },
    { no: 5, name: "manifestation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "onset", kind: "message", T: DateTime },
    { no: 8, name: "severity", kind: "message", T: AllergyIntoleranceSeverityCode },
    { no: 9, name: "exposure_route", kind: "message", T: CodeableConcept },
    { no: 10, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntolerance_Reaction {
    return new AllergyIntolerance_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntolerance_Reaction {
    return new AllergyIntolerance_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntolerance_Reaction {
    return new AllergyIntolerance_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntolerance_Reaction | PlainMessage<AllergyIntolerance_Reaction> | undefined, b: AllergyIntolerance_Reaction | PlainMessage<AllergyIntolerance_Reaction> | undefined): boolean {
    return proto3.util.equals(AllergyIntolerance_Reaction, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Appointment, last updated
 * 2017-04-19T07:44:43.294+10:00. A booking of a healthcare event among
 * patient(s), practitioner(s), related person(s) and/or device(s) for a
 * specific date/time. This may result in one or more Encounter(s). See
 * http://hl7.org/fhir/StructureDefinition/Appointment
 *
 * @generated from message google.fhir.stu3.proto.Appointment
 */
export class Appointment extends Message<Appointment> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * proposed | pending | booked | arrived | fulfilled | cancelled | noshow |
   * entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.AppointmentStatusCode status = 10;
   */
  status?: AppointmentStatusCode;

  /**
   * A broad categorisation of the service that is to be performed during this
   * appointment
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service_category = 11;
   */
  serviceCategory?: CodeableConcept;

  /**
   * The specific service that is to be performed during this appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept service_type = 12;
   */
  serviceType: CodeableConcept[] = [];

  /**
   * The specialty of a practitioner that would be required to perform the
   * service requested in this appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept specialty = 13;
   */
  specialty: CodeableConcept[] = [];

  /**
   * The style of appointment or patient that has been booked in the slot (not
   * service type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept appointment_type = 14;
   */
  appointmentType?: CodeableConcept;

  /**
   * Reason this appointment is scheduled
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 15;
   */
  reason: CodeableConcept[] = [];

  /**
   * Reason the appointment is to takes place (resource)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference indication = 16;
   */
  indication: Reference[] = [];

  /**
   * Used to make informed decisions if needing to re-prioritize
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt priority = 17;
   */
  priority?: UnsignedInt;

  /**
   * Shown on a subject line in a meeting request, or appointment list
   *
   * @generated from field: google.fhir.stu3.proto.String description = 18;
   */
  description?: String;

  /**
   * Additional information to support the appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_information = 19;
   */
  supportingInformation: Reference[] = [];

  /**
   * When appointment is to take place
   *
   * @generated from field: google.fhir.stu3.proto.Instant start = 20;
   */
  start?: Instant;

  /**
   * When appointment is to conclude
   *
   * @generated from field: google.fhir.stu3.proto.Instant end = 21;
   */
  end?: Instant;

  /**
   * Can be less than start/end (e.g. estimate)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt minutes_duration = 22;
   */
  minutesDuration?: PositiveInt;

  /**
   * The slots that this appointment is filling
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference slot = 23;
   */
  slot: Reference[] = [];

  /**
   * The date that this appointment was initially created
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 24;
   */
  created?: DateTime;

  /**
   * Additional comments
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 25;
   */
  comment?: String;

  /**
   * The ReferralRequest provided as information to allocate to the Encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference incoming_referral = 26;
   */
  incomingReferral: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Appointment.Participant participant = 27;
   */
  participant: Appointment_Participant[] = [];

  /**
   * Potential date/time interval(s) requested to allocate the appointment
   * within
   *
   * @generated from field: repeated google.fhir.stu3.proto.Period requested_period = 28;
   */
  requestedPeriod: Period[] = [];

  constructor(data?: PartialMessage<Appointment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Appointment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: AppointmentStatusCode },
    { no: 11, name: "service_category", kind: "message", T: CodeableConcept },
    { no: 12, name: "service_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "specialty", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "appointment_type", kind: "message", T: CodeableConcept },
    { no: 15, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "indication", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "priority", kind: "message", T: UnsignedInt },
    { no: 18, name: "description", kind: "message", T: String },
    { no: 19, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "start", kind: "message", T: Instant },
    { no: 21, name: "end", kind: "message", T: Instant },
    { no: 22, name: "minutes_duration", kind: "message", T: PositiveInt },
    { no: 23, name: "slot", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "created", kind: "message", T: DateTime },
    { no: 25, name: "comment", kind: "message", T: String },
    { no: 26, name: "incoming_referral", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "participant", kind: "message", T: Appointment_Participant, repeated: true },
    { no: 28, name: "requested_period", kind: "message", T: Period, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Appointment {
    return new Appointment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Appointment {
    return new Appointment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Appointment {
    return new Appointment().fromJsonString(jsonString, options);
  }

  static equals(a: Appointment | PlainMessage<Appointment> | undefined, b: Appointment | PlainMessage<Appointment> | undefined): boolean {
    return proto3.util.equals(Appointment, a, b);
  }
}

/**
 * Participants involved in appointment
 *
 * @generated from message google.fhir.stu3.proto.Appointment.Participant
 */
export class Appointment_Participant extends Message<Appointment_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Role of participant in the appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type: CodeableConcept[] = [];

  /**
   * Person, Location/HealthcareService or Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  /**
   * required | optional | information-only
   *
   * @generated from field: google.fhir.stu3.proto.ParticipantRequiredCode required = 6;
   */
  required?: ParticipantRequiredCode;

  /**
   * accepted | declined | tentative | needs-action
   *
   * @generated from field: google.fhir.stu3.proto.ParticipationStatusCode status = 7;
   */
  status?: ParticipationStatusCode;

  constructor(data?: PartialMessage<Appointment_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Appointment.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "actor", kind: "message", T: Reference },
    { no: 6, name: "required", kind: "message", T: ParticipantRequiredCode },
    { no: 7, name: "status", kind: "message", T: ParticipationStatusCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Appointment_Participant {
    return new Appointment_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Appointment_Participant {
    return new Appointment_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Appointment_Participant {
    return new Appointment_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: Appointment_Participant | PlainMessage<Appointment_Participant> | undefined, b: Appointment_Participant | PlainMessage<Appointment_Participant> | undefined): boolean {
    return proto3.util.equals(Appointment_Participant, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for AppointmentResponse, last updated
 * 2017-04-19T07:44:43.294+10:00. A reply to an appointment request for a
 * patient and/or practitioner(s), such as a confirmation or rejection. See
 * http://hl7.org/fhir/StructureDefinition/AppointmentResponse
 *
 * @generated from message google.fhir.stu3.proto.AppointmentResponse
 */
export class AppointmentResponse extends Message<AppointmentResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Appointment this response relates to
   *
   * @generated from field: google.fhir.stu3.proto.Reference appointment = 10;
   */
  appointment?: Reference;

  /**
   * Time from appointment, or requested new start time
   *
   * @generated from field: google.fhir.stu3.proto.Instant start = 11;
   */
  start?: Instant;

  /**
   * Time from appointment, or requested new end time
   *
   * @generated from field: google.fhir.stu3.proto.Instant end = 12;
   */
  end?: Instant;

  /**
   * Role of participant in the appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept participant_type = 13;
   */
  participantType: CodeableConcept[] = [];

  /**
   * Person, Location/HealthcareService or Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 14;
   */
  actor?: Reference;

  /**
   * accepted | declined | tentative | in-process | completed | needs-action |
   * entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ParticipationStatusCode participant_status = 15;
   */
  participantStatus?: ParticipationStatusCode;

  /**
   * Additional comments
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 16;
   */
  comment?: String;

  constructor(data?: PartialMessage<AppointmentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AppointmentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "appointment", kind: "message", T: Reference },
    { no: 11, name: "start", kind: "message", T: Instant },
    { no: 12, name: "end", kind: "message", T: Instant },
    { no: 13, name: "participant_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "actor", kind: "message", T: Reference },
    { no: 15, name: "participant_status", kind: "message", T: ParticipationStatusCode },
    { no: 16, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppointmentResponse {
    return new AppointmentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppointmentResponse {
    return new AppointmentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppointmentResponse {
    return new AppointmentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AppointmentResponse | PlainMessage<AppointmentResponse> | undefined, b: AppointmentResponse | PlainMessage<AppointmentResponse> | undefined): boolean {
    return proto3.util.equals(AppointmentResponse, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for AuditEvent, last updated
 * 2017-04-19T07:44:43.294+10:00. Event record kept for security purposes. See
 * http://hl7.org/fhir/StructureDefinition/AuditEvent
 *
 * @generated from message google.fhir.stu3.proto.AuditEvent
 */
export class AuditEvent extends Message<AuditEvent> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type/identifier of event
   *
   * @generated from field: google.fhir.stu3.proto.Coding type = 9;
   */
  type?: Coding;

  /**
   * More specific type/id for the event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding subtype = 10;
   */
  subtype: Coding[] = [];

  /**
   * Type of action performed during the event
   *
   * @generated from field: google.fhir.stu3.proto.AuditEventActionCode action = 11;
   */
  action?: AuditEventActionCode;

  /**
   * Time when the event occurred on source
   *
   * @generated from field: google.fhir.stu3.proto.Instant recorded = 12;
   */
  recorded?: Instant;

  /**
   * Whether the event succeeded or failed
   *
   * @generated from field: google.fhir.stu3.proto.AuditEventOutcomeCode outcome = 13;
   */
  outcome?: AuditEventOutcomeCode;

  /**
   * Description of the event outcome
   *
   * @generated from field: google.fhir.stu3.proto.String outcome_desc = 14;
   */
  outcomeDesc?: String;

  /**
   * The purposeOfUse of the event
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept purpose_of_event = 15;
   */
  purposeOfEvent: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.AuditEvent.Agent agent = 16;
   */
  agent: AuditEvent_Agent[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.AuditEvent.Source source = 17;
   */
  source?: AuditEvent_Source;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.AuditEvent.Entity entity = 18;
   */
  entity: AuditEvent_Entity[] = [];

  constructor(data?: PartialMessage<AuditEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "type", kind: "message", T: Coding },
    { no: 10, name: "subtype", kind: "message", T: Coding, repeated: true },
    { no: 11, name: "action", kind: "message", T: AuditEventActionCode },
    { no: 12, name: "recorded", kind: "message", T: Instant },
    { no: 13, name: "outcome", kind: "message", T: AuditEventOutcomeCode },
    { no: 14, name: "outcome_desc", kind: "message", T: String },
    { no: 15, name: "purpose_of_event", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "agent", kind: "message", T: AuditEvent_Agent, repeated: true },
    { no: 17, name: "source", kind: "message", T: AuditEvent_Source },
    { no: 18, name: "entity", kind: "message", T: AuditEvent_Entity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEvent {
    return new AuditEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEvent {
    return new AuditEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEvent {
    return new AuditEvent().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEvent | PlainMessage<AuditEvent> | undefined, b: AuditEvent | PlainMessage<AuditEvent> | undefined): boolean {
    return proto3.util.equals(AuditEvent, a, b);
  }
}

/**
 * Actor involved in the event
 *
 * @generated from message google.fhir.stu3.proto.AuditEvent.Agent
 */
export class AuditEvent_Agent extends Message<AuditEvent_Agent> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Agent role in the event
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role: CodeableConcept[] = [];

  /**
   * Direct reference to resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 5;
   */
  reference?: Reference;

  /**
   * Unique identifier for the user
   *
   * @generated from field: google.fhir.stu3.proto.Identifier user_id = 6;
   */
  userId?: Identifier;

  /**
   * Alternative User id e.g. authentication
   *
   * @generated from field: google.fhir.stu3.proto.String alt_id = 7;
   */
  altId?: String;

  /**
   * Human-meaningful name for the agent
   *
   * @generated from field: google.fhir.stu3.proto.String name = 8;
   */
  name?: String;

  /**
   * Whether user is initiator
   *
   * @generated from field: google.fhir.stu3.proto.Boolean requestor = 9;
   */
  requestor?: Boolean;

  /**
   * Where
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 10;
   */
  location?: Reference;

  /**
   * Policy that authorized event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri policy = 11;
   */
  policy: Uri[] = [];

  /**
   * Type of media
   *
   * @generated from field: google.fhir.stu3.proto.Coding media = 12;
   */
  media?: Coding;

  /**
   * @generated from field: google.fhir.stu3.proto.AuditEvent.Agent.Network network = 13;
   */
  network?: AuditEvent_Agent_Network;

  /**
   * Reason given for this user
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept purpose_of_use = 14;
   */
  purposeOfUse: CodeableConcept[] = [];

  constructor(data?: PartialMessage<AuditEvent_Agent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEvent.Agent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "reference", kind: "message", T: Reference },
    { no: 6, name: "user_id", kind: "message", T: Identifier },
    { no: 7, name: "alt_id", kind: "message", T: String },
    { no: 8, name: "name", kind: "message", T: String },
    { no: 9, name: "requestor", kind: "message", T: Boolean },
    { no: 10, name: "location", kind: "message", T: Reference },
    { no: 11, name: "policy", kind: "message", T: Uri, repeated: true },
    { no: 12, name: "media", kind: "message", T: Coding },
    { no: 13, name: "network", kind: "message", T: AuditEvent_Agent_Network },
    { no: 14, name: "purpose_of_use", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEvent_Agent {
    return new AuditEvent_Agent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEvent_Agent {
    return new AuditEvent_Agent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEvent_Agent {
    return new AuditEvent_Agent().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEvent_Agent | PlainMessage<AuditEvent_Agent> | undefined, b: AuditEvent_Agent | PlainMessage<AuditEvent_Agent> | undefined): boolean {
    return proto3.util.equals(AuditEvent_Agent, a, b);
  }
}

/**
 * Logical network location for application activity
 *
 * @generated from message google.fhir.stu3.proto.AuditEvent.Agent.Network
 */
export class AuditEvent_Agent_Network extends Message<AuditEvent_Agent_Network> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier for the network access point of the user device
   *
   * @generated from field: google.fhir.stu3.proto.String address = 4;
   */
  address?: String;

  /**
   * The type of network access point
   *
   * @generated from field: google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode type = 5;
   */
  type?: AuditEventAgentNetworkTypeCode;

  constructor(data?: PartialMessage<AuditEvent_Agent_Network>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEvent.Agent.Network";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "address", kind: "message", T: String },
    { no: 5, name: "type", kind: "message", T: AuditEventAgentNetworkTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEvent_Agent_Network {
    return new AuditEvent_Agent_Network().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEvent_Agent_Network {
    return new AuditEvent_Agent_Network().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEvent_Agent_Network {
    return new AuditEvent_Agent_Network().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEvent_Agent_Network | PlainMessage<AuditEvent_Agent_Network> | undefined, b: AuditEvent_Agent_Network | PlainMessage<AuditEvent_Agent_Network> | undefined): boolean {
    return proto3.util.equals(AuditEvent_Agent_Network, a, b);
  }
}

/**
 * Audit Event Reporter
 *
 * @generated from message google.fhir.stu3.proto.AuditEvent.Source
 */
export class AuditEvent_Source extends Message<AuditEvent_Source> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical source location within the enterprise
   *
   * @generated from field: google.fhir.stu3.proto.String site = 4;
   */
  site?: String;

  /**
   * The identity of source detecting the event
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 5;
   */
  identifier?: Identifier;

  /**
   * The type of source where event originated
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding type = 6;
   */
  type: Coding[] = [];

  constructor(data?: PartialMessage<AuditEvent_Source>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEvent.Source";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "site", kind: "message", T: String },
    { no: 5, name: "identifier", kind: "message", T: Identifier },
    { no: 6, name: "type", kind: "message", T: Coding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEvent_Source {
    return new AuditEvent_Source().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEvent_Source {
    return new AuditEvent_Source().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEvent_Source {
    return new AuditEvent_Source().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEvent_Source | PlainMessage<AuditEvent_Source> | undefined, b: AuditEvent_Source | PlainMessage<AuditEvent_Source> | undefined): boolean {
    return proto3.util.equals(AuditEvent_Source, a, b);
  }
}

/**
 * Data or objects used
 *
 * @generated from message google.fhir.stu3.proto.AuditEvent.Entity
 */
export class AuditEvent_Entity extends Message<AuditEvent_Entity> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specific instance of object
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Specific instance of resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 5;
   */
  reference?: Reference;

  /**
   * Type of entity involved
   *
   * @generated from field: google.fhir.stu3.proto.Coding type = 6;
   */
  type?: Coding;

  /**
   * What role the entity played
   *
   * @generated from field: google.fhir.stu3.proto.Coding role = 7;
   */
  role?: Coding;

  /**
   * Life-cycle stage for the entity
   *
   * @generated from field: google.fhir.stu3.proto.Coding lifecycle = 8;
   */
  lifecycle?: Coding;

  /**
   * Security labels on the entity
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding security_label = 9;
   */
  securityLabel: Coding[] = [];

  /**
   * Descriptor for entity
   *
   * @generated from field: google.fhir.stu3.proto.String name = 10;
   */
  name?: String;

  /**
   * Descriptive text
   *
   * @generated from field: google.fhir.stu3.proto.String description = 11;
   */
  description?: String;

  /**
   * Query parameters
   *
   * @generated from field: google.fhir.stu3.proto.Base64Binary query = 12;
   */
  query?: Base64Binary;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.AuditEvent.Entity.Detail detail = 13;
   */
  detail: AuditEvent_Entity_Detail[] = [];

  constructor(data?: PartialMessage<AuditEvent_Entity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEvent.Entity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "reference", kind: "message", T: Reference },
    { no: 6, name: "type", kind: "message", T: Coding },
    { no: 7, name: "role", kind: "message", T: Coding },
    { no: 8, name: "lifecycle", kind: "message", T: Coding },
    { no: 9, name: "security_label", kind: "message", T: Coding, repeated: true },
    { no: 10, name: "name", kind: "message", T: String },
    { no: 11, name: "description", kind: "message", T: String },
    { no: 12, name: "query", kind: "message", T: Base64Binary },
    { no: 13, name: "detail", kind: "message", T: AuditEvent_Entity_Detail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEvent_Entity {
    return new AuditEvent_Entity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEvent_Entity {
    return new AuditEvent_Entity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEvent_Entity {
    return new AuditEvent_Entity().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEvent_Entity | PlainMessage<AuditEvent_Entity> | undefined, b: AuditEvent_Entity | PlainMessage<AuditEvent_Entity> | undefined): boolean {
    return proto3.util.equals(AuditEvent_Entity, a, b);
  }
}

/**
 * Additional Information about the entity
 *
 * @generated from message google.fhir.stu3.proto.AuditEvent.Entity.Detail
 */
export class AuditEvent_Entity_Detail extends Message<AuditEvent_Entity_Detail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of the property
   *
   * @generated from field: google.fhir.stu3.proto.String type = 4;
   */
  type?: String;

  /**
   * Property value
   *
   * @generated from field: google.fhir.stu3.proto.Base64Binary value = 5;
   */
  value?: Base64Binary;

  constructor(data?: PartialMessage<AuditEvent_Entity_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEvent.Entity.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: Base64Binary },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEvent_Entity_Detail {
    return new AuditEvent_Entity_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEvent_Entity_Detail {
    return new AuditEvent_Entity_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEvent_Entity_Detail {
    return new AuditEvent_Entity_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEvent_Entity_Detail | PlainMessage<AuditEvent_Entity_Detail> | undefined, b: AuditEvent_Entity_Detail | PlainMessage<AuditEvent_Entity_Detail> | undefined): boolean {
    return proto3.util.equals(AuditEvent_Entity_Detail, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Basic, last updated
 * 2017-04-19T07:44:43.294+10:00. Resource for non-supported content. See
 * http://hl7.org/fhir/StructureDefinition/Basic
 *
 * @generated from message google.fhir.stu3.proto.Basic
 */
export class Basic extends Message<Basic> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Kind of Resource
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 10;
   */
  code?: CodeableConcept;

  /**
   * Identifies the focus of this resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 11;
   */
  subject?: Reference;

  /**
   * When created
   *
   * @generated from field: google.fhir.stu3.proto.Date created = 12;
   */
  created?: Date;

  /**
   * Who created
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 13;
   */
  author?: Reference;

  constructor(data?: PartialMessage<Basic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Basic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "code", kind: "message", T: CodeableConcept },
    { no: 11, name: "subject", kind: "message", T: Reference },
    { no: 12, name: "created", kind: "message", T: Date },
    { no: 13, name: "author", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Basic {
    return new Basic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Basic {
    return new Basic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Basic {
    return new Basic().fromJsonString(jsonString, options);
  }

  static equals(a: Basic | PlainMessage<Basic> | undefined, b: Basic | PlainMessage<Basic> | undefined): boolean {
    return proto3.util.equals(Basic, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Binary, last updated
 * 2017-04-19T07:44:43.294+10:00. Pure binary content defined by a format other
 * than FHIR. See http://hl7.org/fhir/StructureDefinition/Binary
 *
 * @generated from message google.fhir.stu3.proto.Binary
 */
export class Binary extends Message<Binary> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * MimeType of the binary content
   *
   * @generated from field: google.fhir.stu3.proto.MimeTypeCode content_type = 5;
   */
  contentType?: MimeTypeCode;

  /**
   * Access Control Management
   *
   * @generated from field: google.fhir.stu3.proto.Reference security_context = 6;
   */
  securityContext?: Reference;

  /**
   * The actual content
   *
   * @generated from field: google.fhir.stu3.proto.Base64Binary content = 7;
   */
  content?: Base64Binary;

  constructor(data?: PartialMessage<Binary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Binary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "content_type", kind: "message", T: MimeTypeCode },
    { no: 6, name: "security_context", kind: "message", T: Reference },
    { no: 7, name: "content", kind: "message", T: Base64Binary },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Binary {
    return new Binary().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Binary {
    return new Binary().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Binary {
    return new Binary().fromJsonString(jsonString, options);
  }

  static equals(a: Binary | PlainMessage<Binary> | undefined, b: Binary | PlainMessage<Binary> | undefined): boolean {
    return proto3.util.equals(Binary, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for BodySite, last updated
 * 2017-04-19T07:44:43.294+10:00. Specific and identified anatomical location.
 * See http://hl7.org/fhir/StructureDefinition/BodySite
 *
 * @generated from message google.fhir.stu3.proto.BodySite
 */
export class BodySite extends Message<BodySite> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Bodysite identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this body site record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * Named anatomical location
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 11;
   */
  code?: CodeableConcept;

  /**
   * Modification to location code
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept qualifier = 12;
   */
  qualifier: CodeableConcept[] = [];

  /**
   * Anatomical location description
   *
   * @generated from field: google.fhir.stu3.proto.String description = 13;
   */
  description?: String;

  /**
   * Attached images
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment image = 14;
   */
  image: Attachment[] = [];

  /**
   * Who this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 15;
   */
  patient?: Reference;

  constructor(data?: PartialMessage<BodySite>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.BodySite";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "code", kind: "message", T: CodeableConcept },
    { no: 12, name: "qualifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "description", kind: "message", T: String },
    { no: 14, name: "image", kind: "message", T: Attachment, repeated: true },
    { no: 15, name: "patient", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BodySite {
    return new BodySite().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BodySite {
    return new BodySite().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BodySite {
    return new BodySite().fromJsonString(jsonString, options);
  }

  static equals(a: BodySite | PlainMessage<BodySite> | undefined, b: BodySite | PlainMessage<BodySite> | undefined): boolean {
    return proto3.util.equals(BodySite, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Bundle, last updated
 * 2017-04-19T07:44:43.294+10:00. Contains a collection of resources. See
 * http://hl7.org/fhir/StructureDefinition/Bundle
 *
 * @generated from message google.fhir.stu3.proto.Bundle
 */
export class Bundle extends Message<Bundle> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Persistent identifier for the bundle
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 5;
   */
  identifier?: Identifier;

  /**
   * document | message | transaction | transaction-response | batch |
   * batch-response | history | searchset | collection
   *
   * @generated from field: google.fhir.stu3.proto.BundleTypeCode type = 6;
   */
  type?: BundleTypeCode;

  /**
   * If search, the total number of matches
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt total = 7;
   */
  total?: UnsignedInt;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bundle.Link link = 8;
   */
  link: Bundle_Link[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bundle.Entry entry = 9;
   */
  entry: Bundle_Entry[] = [];

  /**
   * Digital Signature
   *
   * @generated from field: google.fhir.stu3.proto.Signature signature = 10;
   */
  signature?: Signature;

  constructor(data?: PartialMessage<Bundle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bundle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "identifier", kind: "message", T: Identifier },
    { no: 6, name: "type", kind: "message", T: BundleTypeCode },
    { no: 7, name: "total", kind: "message", T: UnsignedInt },
    { no: 8, name: "link", kind: "message", T: Bundle_Link, repeated: true },
    { no: 9, name: "entry", kind: "message", T: Bundle_Entry, repeated: true },
    { no: 10, name: "signature", kind: "message", T: Signature },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bundle {
    return new Bundle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bundle {
    return new Bundle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bundle {
    return new Bundle().fromJsonString(jsonString, options);
  }

  static equals(a: Bundle | PlainMessage<Bundle> | undefined, b: Bundle | PlainMessage<Bundle> | undefined): boolean {
    return proto3.util.equals(Bundle, a, b);
  }
}

/**
 * Links related to this Bundle
 *
 * @generated from message google.fhir.stu3.proto.Bundle.Link
 */
export class Bundle_Link extends Message<Bundle_Link> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * See
   * http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1
   *
   * @generated from field: google.fhir.stu3.proto.String relation = 4;
   */
  relation?: String;

  /**
   * Reference details for the link
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 5;
   */
  url?: Uri;

  constructor(data?: PartialMessage<Bundle_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bundle.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "relation", kind: "message", T: String },
    { no: 5, name: "url", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bundle_Link {
    return new Bundle_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bundle_Link {
    return new Bundle_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bundle_Link {
    return new Bundle_Link().fromJsonString(jsonString, options);
  }

  static equals(a: Bundle_Link | PlainMessage<Bundle_Link> | undefined, b: Bundle_Link | PlainMessage<Bundle_Link> | undefined): boolean {
    return proto3.util.equals(Bundle_Link, a, b);
  }
}

/**
 * Entry in the bundle - will have a resource, or information
 *
 * @generated from message google.fhir.stu3.proto.Bundle.Entry
 */
export class Bundle_Entry extends Message<Bundle_Entry> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Links related to this entry
   *
   * @generated from field: repeated google.fhir.stu3.proto.Bundle.Link link = 4;
   */
  link: Bundle_Link[] = [];

  /**
   * Absolute URL for resource (server address, or UUID/OID)
   *
   * @generated from field: google.fhir.stu3.proto.Uri full_url = 5;
   */
  fullUrl?: Uri;

  /**
   * A resource in the bundle
   *
   * @generated from field: google.fhir.stu3.proto.ContainedResource resource = 6;
   */
  resource?: ContainedResource;

  /**
   * @generated from field: google.fhir.stu3.proto.Bundle.Entry.Search search = 7;
   */
  search?: Bundle_Entry_Search;

  /**
   * @generated from field: google.fhir.stu3.proto.Bundle.Entry.Request request = 8;
   */
  request?: Bundle_Entry_Request;

  /**
   * @generated from field: google.fhir.stu3.proto.Bundle.Entry.Response response = 9;
   */
  response?: Bundle_Entry_Response;

  constructor(data?: PartialMessage<Bundle_Entry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bundle.Entry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link", kind: "message", T: Bundle_Link, repeated: true },
    { no: 5, name: "full_url", kind: "message", T: Uri },
    { no: 6, name: "resource", kind: "message", T: ContainedResource },
    { no: 7, name: "search", kind: "message", T: Bundle_Entry_Search },
    { no: 8, name: "request", kind: "message", T: Bundle_Entry_Request },
    { no: 9, name: "response", kind: "message", T: Bundle_Entry_Response },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bundle_Entry {
    return new Bundle_Entry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bundle_Entry {
    return new Bundle_Entry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bundle_Entry {
    return new Bundle_Entry().fromJsonString(jsonString, options);
  }

  static equals(a: Bundle_Entry | PlainMessage<Bundle_Entry> | undefined, b: Bundle_Entry | PlainMessage<Bundle_Entry> | undefined): boolean {
    return proto3.util.equals(Bundle_Entry, a, b);
  }
}

/**
 * Search related information
 *
 * @generated from message google.fhir.stu3.proto.Bundle.Entry.Search
 */
export class Bundle_Entry_Search extends Message<Bundle_Entry_Search> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * match | include | outcome - why this is in the result set
   *
   * @generated from field: google.fhir.stu3.proto.SearchEntryModeCode mode = 4;
   */
  mode?: SearchEntryModeCode;

  /**
   * Search ranking (between 0 and 1)
   *
   * @generated from field: google.fhir.stu3.proto.Decimal score = 5;
   */
  score?: Decimal;

  constructor(data?: PartialMessage<Bundle_Entry_Search>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bundle.Entry.Search";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: SearchEntryModeCode },
    { no: 5, name: "score", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bundle_Entry_Search {
    return new Bundle_Entry_Search().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bundle_Entry_Search {
    return new Bundle_Entry_Search().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bundle_Entry_Search {
    return new Bundle_Entry_Search().fromJsonString(jsonString, options);
  }

  static equals(a: Bundle_Entry_Search | PlainMessage<Bundle_Entry_Search> | undefined, b: Bundle_Entry_Search | PlainMessage<Bundle_Entry_Search> | undefined): boolean {
    return proto3.util.equals(Bundle_Entry_Search, a, b);
  }
}

/**
 * Transaction Related Information
 *
 * @generated from message google.fhir.stu3.proto.Bundle.Entry.Request
 */
export class Bundle_Entry_Request extends Message<Bundle_Entry_Request> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * GET | POST | PUT | DELETE
   *
   * @generated from field: google.fhir.stu3.proto.HTTPVerbCode method = 4;
   */
  method?: HTTPVerbCode;

  /**
   * URL for HTTP equivalent of this entry
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 5;
   */
  url?: Uri;

  /**
   * For managing cache currency
   *
   * @generated from field: google.fhir.stu3.proto.String if_none_match = 6;
   */
  ifNoneMatch?: String;

  /**
   * For managing update contention
   *
   * @generated from field: google.fhir.stu3.proto.Instant if_modified_since = 7;
   */
  ifModifiedSince?: Instant;

  /**
   * For managing update contention
   *
   * @generated from field: google.fhir.stu3.proto.String if_match = 8;
   */
  ifMatch?: String;

  /**
   * For conditional creates
   *
   * @generated from field: google.fhir.stu3.proto.String if_none_exist = 9;
   */
  ifNoneExist?: String;

  constructor(data?: PartialMessage<Bundle_Entry_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bundle.Entry.Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "method", kind: "message", T: HTTPVerbCode },
    { no: 5, name: "url", kind: "message", T: Uri },
    { no: 6, name: "if_none_match", kind: "message", T: String },
    { no: 7, name: "if_modified_since", kind: "message", T: Instant },
    { no: 8, name: "if_match", kind: "message", T: String },
    { no: 9, name: "if_none_exist", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bundle_Entry_Request {
    return new Bundle_Entry_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bundle_Entry_Request {
    return new Bundle_Entry_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bundle_Entry_Request {
    return new Bundle_Entry_Request().fromJsonString(jsonString, options);
  }

  static equals(a: Bundle_Entry_Request | PlainMessage<Bundle_Entry_Request> | undefined, b: Bundle_Entry_Request | PlainMessage<Bundle_Entry_Request> | undefined): boolean {
    return proto3.util.equals(Bundle_Entry_Request, a, b);
  }
}

/**
 * Transaction Related Information
 *
 * @generated from message google.fhir.stu3.proto.Bundle.Entry.Response
 */
export class Bundle_Entry_Response extends Message<Bundle_Entry_Response> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Status response code (text optional)
   *
   * @generated from field: google.fhir.stu3.proto.String status = 4;
   */
  status?: String;

  /**
   * The location, if the operation returns a location
   *
   * @generated from field: google.fhir.stu3.proto.Uri location = 5;
   */
  location?: Uri;

  /**
   * The etag for the resource (if relevant)
   *
   * @generated from field: google.fhir.stu3.proto.String etag = 6;
   */
  etag?: String;

  /**
   * Server's date time modified
   *
   * @generated from field: google.fhir.stu3.proto.Instant last_modified = 7;
   */
  lastModified?: Instant;

  /**
   * OperationOutcome with hints and warnings (for batch/transaction)
   *
   * @generated from field: google.fhir.stu3.proto.ContainedResource outcome = 8;
   */
  outcome?: ContainedResource;

  constructor(data?: PartialMessage<Bundle_Entry_Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bundle.Entry.Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "status", kind: "message", T: String },
    { no: 5, name: "location", kind: "message", T: Uri },
    { no: 6, name: "etag", kind: "message", T: String },
    { no: 7, name: "last_modified", kind: "message", T: Instant },
    { no: 8, name: "outcome", kind: "message", T: ContainedResource },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bundle_Entry_Response {
    return new Bundle_Entry_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bundle_Entry_Response {
    return new Bundle_Entry_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bundle_Entry_Response {
    return new Bundle_Entry_Response().fromJsonString(jsonString, options);
  }

  static equals(a: Bundle_Entry_Response | PlainMessage<Bundle_Entry_Response> | undefined, b: Bundle_Entry_Response | PlainMessage<Bundle_Entry_Response> | undefined): boolean {
    return proto3.util.equals(Bundle_Entry_Response, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CapabilityStatement, last updated
 * 2017-04-19T07:44:43.294+10:00. A statement of system capabilities. See
 * http://hl7.org/fhir/StructureDefinition/CapabilityStatement
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement
 */
export class CapabilityStatement extends Message<CapabilityStatement> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this capability statement (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Business version of the capability statement
   *
   * @generated from field: google.fhir.stu3.proto.String version = 10;
   */
  version?: String;

  /**
   * Name for this capability statement (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 11;
   */
  name?: String;

  /**
   * Name for this capability statement (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 12;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 13;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 14;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 16;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 17;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the capability statement
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 19;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for capability statement (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 20;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this capability statement is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 21;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 22;
   */
  copyright?: Markdown;

  /**
   * instance | capability | requirements
   *
   * @generated from field: google.fhir.stu3.proto.CapabilityStatementKindCode kind = 23;
   */
  kind?: CapabilityStatementKindCode;

  /**
   * Canonical URL of another capability statement this implements
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri instantiates = 24;
   */
  instantiates: Uri[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.CapabilityStatement.Software software = 25;
   */
  software?: CapabilityStatement_Software;

  /**
   * @generated from field: google.fhir.stu3.proto.CapabilityStatement.Implementation implementation = 26;
   */
  implementation?: CapabilityStatement_Implementation;

  /**
   * FHIR Version the system uses
   *
   * @generated from field: google.fhir.stu3.proto.Id fhir_version = 27;
   */
  fhirVersion?: Id;

  /**
   * no | extensions | elements | both
   *
   * @generated from field: google.fhir.stu3.proto.UnknownContentCodeCode accept_unknown = 28;
   */
  acceptUnknown?: UnknownContentCodeCode;

  /**
   * formats supported (xml | json | ttl | mime type)
   *
   * @generated from field: repeated google.fhir.stu3.proto.MimeTypeCode format = 29;
   */
  format: MimeTypeCode[] = [];

  /**
   * Patch formats supported
   *
   * @generated from field: repeated google.fhir.stu3.proto.MimeTypeCode patch_format = 30;
   */
  patchFormat: MimeTypeCode[] = [];

  /**
   * Implementation guides supported
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri implementation_guide = 31;
   */
  implementationGuide: Uri[] = [];

  /**
   * Profiles for use cases supported
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference profile = 32;
   */
  profile: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest rest = 33;
   */
  rest: CapabilityStatement_Rest[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Messaging messaging = 34;
   */
  messaging: CapabilityStatement_Messaging[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Document document = 35;
   */
  document: CapabilityStatement_Document[] = [];

  constructor(data?: PartialMessage<CapabilityStatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "version", kind: "message", T: String },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "title", kind: "message", T: String },
    { no: 13, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 14, name: "experimental", kind: "message", T: Boolean },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "publisher", kind: "message", T: String },
    { no: 17, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 20, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "purpose", kind: "message", T: Markdown },
    { no: 22, name: "copyright", kind: "message", T: Markdown },
    { no: 23, name: "kind", kind: "message", T: CapabilityStatementKindCode },
    { no: 24, name: "instantiates", kind: "message", T: Uri, repeated: true },
    { no: 25, name: "software", kind: "message", T: CapabilityStatement_Software },
    { no: 26, name: "implementation", kind: "message", T: CapabilityStatement_Implementation },
    { no: 27, name: "fhir_version", kind: "message", T: Id },
    { no: 28, name: "accept_unknown", kind: "message", T: UnknownContentCodeCode },
    { no: 29, name: "format", kind: "message", T: MimeTypeCode, repeated: true },
    { no: 30, name: "patch_format", kind: "message", T: MimeTypeCode, repeated: true },
    { no: 31, name: "implementation_guide", kind: "message", T: Uri, repeated: true },
    { no: 32, name: "profile", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "rest", kind: "message", T: CapabilityStatement_Rest, repeated: true },
    { no: 34, name: "messaging", kind: "message", T: CapabilityStatement_Messaging, repeated: true },
    { no: 35, name: "document", kind: "message", T: CapabilityStatement_Document, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement {
    return new CapabilityStatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement {
    return new CapabilityStatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement {
    return new CapabilityStatement().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement | PlainMessage<CapabilityStatement> | undefined, b: CapabilityStatement | PlainMessage<CapabilityStatement> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement, a, b);
  }
}

/**
 * Software that is covered by this capability statement
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Software
 */
export class CapabilityStatement_Software extends Message<CapabilityStatement_Software> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A name the software is known by
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Version covered by this statement
   *
   * @generated from field: google.fhir.stu3.proto.String version = 5;
   */
  version?: String;

  /**
   * Date this version released
   *
   * @generated from field: google.fhir.stu3.proto.DateTime release_date = 6;
   */
  releaseDate?: DateTime;

  constructor(data?: PartialMessage<CapabilityStatement_Software>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Software";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "version", kind: "message", T: String },
    { no: 6, name: "release_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Software {
    return new CapabilityStatement_Software().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Software {
    return new CapabilityStatement_Software().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Software {
    return new CapabilityStatement_Software().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Software | PlainMessage<CapabilityStatement_Software> | undefined, b: CapabilityStatement_Software | PlainMessage<CapabilityStatement_Software> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Software, a, b);
  }
}

/**
 * If this describes a specific instance
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Implementation
 */
export class CapabilityStatement_Implementation extends Message<CapabilityStatement_Implementation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Describes this specific instance
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * Base URL for the installation
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 5;
   */
  url?: Uri;

  constructor(data?: PartialMessage<CapabilityStatement_Implementation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Implementation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "url", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Implementation {
    return new CapabilityStatement_Implementation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Implementation {
    return new CapabilityStatement_Implementation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Implementation {
    return new CapabilityStatement_Implementation().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Implementation | PlainMessage<CapabilityStatement_Implementation> | undefined, b: CapabilityStatement_Implementation | PlainMessage<CapabilityStatement_Implementation> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Implementation, a, b);
  }
}

/**
 * If the endpoint is a RESTful one
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest
 */
export class CapabilityStatement_Rest extends Message<CapabilityStatement_Rest> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * client | server
   *
   * @generated from field: google.fhir.stu3.proto.RestfulCapabilityModeCode mode = 4;
   */
  mode?: RestfulCapabilityModeCode;

  /**
   * General description of implementation
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 5;
   */
  documentation?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.CapabilityStatement.Rest.Security security = 6;
   */
  security?: CapabilityStatement_Rest_Security;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.Resource resource = 7;
   */
  resource: CapabilityStatement_Rest_Resource[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.SystemInteraction interaction = 8;
   */
  interaction: CapabilityStatement_Rest_SystemInteraction[] = [];

  /**
   * Search parameters for searching all resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.SearchParam search_param = 9;
   */
  searchParam: CapabilityStatement_Rest_Resource_SearchParam[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.Operation operation = 10;
   */
  operation: CapabilityStatement_Rest_Operation[] = [];

  /**
   * Compartments served/used by system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri compartment = 11;
   */
  compartment: Uri[] = [];

  constructor(data?: PartialMessage<CapabilityStatement_Rest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: RestfulCapabilityModeCode },
    { no: 5, name: "documentation", kind: "message", T: String },
    { no: 6, name: "security", kind: "message", T: CapabilityStatement_Rest_Security },
    { no: 7, name: "resource", kind: "message", T: CapabilityStatement_Rest_Resource, repeated: true },
    { no: 8, name: "interaction", kind: "message", T: CapabilityStatement_Rest_SystemInteraction, repeated: true },
    { no: 9, name: "search_param", kind: "message", T: CapabilityStatement_Rest_Resource_SearchParam, repeated: true },
    { no: 10, name: "operation", kind: "message", T: CapabilityStatement_Rest_Operation, repeated: true },
    { no: 11, name: "compartment", kind: "message", T: Uri, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest {
    return new CapabilityStatement_Rest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest {
    return new CapabilityStatement_Rest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest {
    return new CapabilityStatement_Rest().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest | PlainMessage<CapabilityStatement_Rest> | undefined, b: CapabilityStatement_Rest | PlainMessage<CapabilityStatement_Rest> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest, a, b);
  }
}

/**
 * Information about security of implementation
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.Security
 */
export class CapabilityStatement_Rest_Security extends Message<CapabilityStatement_Rest_Security> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Adds CORS Headers (http://enable-cors.org/)
   *
   * @generated from field: google.fhir.stu3.proto.Boolean cors = 4;
   */
  cors?: Boolean;

  /**
   * OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept service = 5;
   */
  service: CodeableConcept[] = [];

  /**
   * General description of how security works
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.Security.Certificate certificate = 7;
   */
  certificate: CapabilityStatement_Rest_Security_Certificate[] = [];

  constructor(data?: PartialMessage<CapabilityStatement_Rest_Security>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.Security";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "cors", kind: "message", T: Boolean },
    { no: 5, name: "service", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "certificate", kind: "message", T: CapabilityStatement_Rest_Security_Certificate, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_Security {
    return new CapabilityStatement_Rest_Security().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Security {
    return new CapabilityStatement_Rest_Security().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Security {
    return new CapabilityStatement_Rest_Security().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_Security | PlainMessage<CapabilityStatement_Rest_Security> | undefined, b: CapabilityStatement_Rest_Security | PlainMessage<CapabilityStatement_Rest_Security> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_Security, a, b);
  }
}

/**
 * Certificates associated with security profiles
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.Security.Certificate
 */
export class CapabilityStatement_Rest_Security_Certificate extends Message<CapabilityStatement_Rest_Security_Certificate> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Mime type for certificates
   *
   * @generated from field: google.fhir.stu3.proto.MimeTypeCode type = 4;
   */
  type?: MimeTypeCode;

  /**
   * Actual certificate
   *
   * @generated from field: google.fhir.stu3.proto.Base64Binary blob = 5;
   */
  blob?: Base64Binary;

  constructor(data?: PartialMessage<CapabilityStatement_Rest_Security_Certificate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.Security.Certificate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: MimeTypeCode },
    { no: 5, name: "blob", kind: "message", T: Base64Binary },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_Security_Certificate {
    return new CapabilityStatement_Rest_Security_Certificate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Security_Certificate {
    return new CapabilityStatement_Rest_Security_Certificate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Security_Certificate {
    return new CapabilityStatement_Rest_Security_Certificate().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_Security_Certificate | PlainMessage<CapabilityStatement_Rest_Security_Certificate> | undefined, b: CapabilityStatement_Rest_Security_Certificate | PlainMessage<CapabilityStatement_Rest_Security_Certificate> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_Security_Certificate, a, b);
  }
}

/**
 * Resource served on the REST interface
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.Resource
 */
export class CapabilityStatement_Rest_Resource extends Message<CapabilityStatement_Rest_Resource> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A resource type that is supported
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode type = 4;
   */
  type?: ResourceTypeCode;

  /**
   * Base System profile for all uses of resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference profile = 5;
   */
  profile?: Reference;

  /**
   * Additional information about the use of the resource type
   *
   * @generated from field: google.fhir.stu3.proto.Markdown documentation = 6;
   */
  documentation?: Markdown;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.ResourceInteraction interaction = 7;
   */
  interaction: CapabilityStatement_Rest_Resource_ResourceInteraction[] = [];

  /**
   * no-version | versioned | versioned-update
   *
   * @generated from field: google.fhir.stu3.proto.ResourceVersionPolicyCode versioning = 8;
   */
  versioning?: ResourceVersionPolicyCode;

  /**
   * Whether vRead can return past versions
   *
   * @generated from field: google.fhir.stu3.proto.Boolean read_history = 9;
   */
  readHistory?: Boolean;

  /**
   * If update can commit to a new identity
   *
   * @generated from field: google.fhir.stu3.proto.Boolean update_create = 10;
   */
  updateCreate?: Boolean;

  /**
   * If allows/uses conditional create
   *
   * @generated from field: google.fhir.stu3.proto.Boolean conditional_create = 11;
   */
  conditionalCreate?: Boolean;

  /**
   * not-supported | modified-since | not-match | full-support
   *
   * @generated from field: google.fhir.stu3.proto.ConditionalReadStatusCode conditional_read = 12;
   */
  conditionalRead?: ConditionalReadStatusCode;

  /**
   * If allows/uses conditional update
   *
   * @generated from field: google.fhir.stu3.proto.Boolean conditional_update = 13;
   */
  conditionalUpdate?: Boolean;

  /**
   * not-supported | single | multiple - how conditional delete is supported
   *
   * @generated from field: google.fhir.stu3.proto.ConditionalDeleteStatusCode conditional_delete = 14;
   */
  conditionalDelete?: ConditionalDeleteStatusCode;

  /**
   * literal | logical | resolves | enforced | local
   *
   * @generated from field: repeated google.fhir.stu3.proto.ReferenceHandlingPolicyCode reference_policy = 15;
   */
  referencePolicy: ReferenceHandlingPolicyCode[] = [];

  /**
   * _include values supported by the server
   *
   * @generated from field: repeated google.fhir.stu3.proto.String search_include = 16;
   */
  searchInclude: String[] = [];

  /**
   * _revinclude values supported by the server
   *
   * @generated from field: repeated google.fhir.stu3.proto.String search_rev_include = 17;
   */
  searchRevInclude: String[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.SearchParam search_param = 18;
   */
  searchParam: CapabilityStatement_Rest_Resource_SearchParam[] = [];

  constructor(data?: PartialMessage<CapabilityStatement_Rest_Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ResourceTypeCode },
    { no: 5, name: "profile", kind: "message", T: Reference },
    { no: 6, name: "documentation", kind: "message", T: Markdown },
    { no: 7, name: "interaction", kind: "message", T: CapabilityStatement_Rest_Resource_ResourceInteraction, repeated: true },
    { no: 8, name: "versioning", kind: "message", T: ResourceVersionPolicyCode },
    { no: 9, name: "read_history", kind: "message", T: Boolean },
    { no: 10, name: "update_create", kind: "message", T: Boolean },
    { no: 11, name: "conditional_create", kind: "message", T: Boolean },
    { no: 12, name: "conditional_read", kind: "message", T: ConditionalReadStatusCode },
    { no: 13, name: "conditional_update", kind: "message", T: Boolean },
    { no: 14, name: "conditional_delete", kind: "message", T: ConditionalDeleteStatusCode },
    { no: 15, name: "reference_policy", kind: "message", T: ReferenceHandlingPolicyCode, repeated: true },
    { no: 16, name: "search_include", kind: "message", T: String, repeated: true },
    { no: 17, name: "search_rev_include", kind: "message", T: String, repeated: true },
    { no: 18, name: "search_param", kind: "message", T: CapabilityStatement_Rest_Resource_SearchParam, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_Resource {
    return new CapabilityStatement_Rest_Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Resource {
    return new CapabilityStatement_Rest_Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Resource {
    return new CapabilityStatement_Rest_Resource().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_Resource | PlainMessage<CapabilityStatement_Rest_Resource> | undefined, b: CapabilityStatement_Rest_Resource | PlainMessage<CapabilityStatement_Rest_Resource> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_Resource, a, b);
  }
}

/**
 * What operations are supported?
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.ResourceInteraction
 */
export class CapabilityStatement_Rest_Resource_ResourceInteraction extends Message<CapabilityStatement_Rest_Resource_ResourceInteraction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * read | vread | update | patch | delete | history-instance |
   * history-type | create | search-type
   *
   * @generated from field: google.fhir.stu3.proto.TypeRestfulInteractionCode code = 4;
   */
  code?: TypeRestfulInteractionCode;

  /**
   * Anything special about operation behavior
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 5;
   */
  documentation?: String;

  constructor(data?: PartialMessage<CapabilityStatement_Rest_Resource_ResourceInteraction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.ResourceInteraction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: TypeRestfulInteractionCode },
    { no: 5, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_Resource_ResourceInteraction {
    return new CapabilityStatement_Rest_Resource_ResourceInteraction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Resource_ResourceInteraction {
    return new CapabilityStatement_Rest_Resource_ResourceInteraction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Resource_ResourceInteraction {
    return new CapabilityStatement_Rest_Resource_ResourceInteraction().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_Resource_ResourceInteraction | PlainMessage<CapabilityStatement_Rest_Resource_ResourceInteraction> | undefined, b: CapabilityStatement_Rest_Resource_ResourceInteraction | PlainMessage<CapabilityStatement_Rest_Resource_ResourceInteraction> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_Resource_ResourceInteraction, a, b);
  }
}

/**
 * Search parameters supported by implementation
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.SearchParam
 */
export class CapabilityStatement_Rest_Resource_SearchParam extends Message<CapabilityStatement_Rest_Resource_SearchParam> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of search parameter
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Source of definition for parameter
   *
   * @generated from field: google.fhir.stu3.proto.Uri definition = 5;
   */
  definition?: Uri;

  /**
   * number | date | string | token | reference | composite | quantity |
   * uri
   *
   * @generated from field: google.fhir.stu3.proto.SearchParamTypeCode type = 6;
   */
  type?: SearchParamTypeCode;

  /**
   * Server-specific usage
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 7;
   */
  documentation?: String;

  constructor(data?: PartialMessage<CapabilityStatement_Rest_Resource_SearchParam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.Resource.SearchParam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "definition", kind: "message", T: Uri },
    { no: 6, name: "type", kind: "message", T: SearchParamTypeCode },
    { no: 7, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_Resource_SearchParam {
    return new CapabilityStatement_Rest_Resource_SearchParam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Resource_SearchParam {
    return new CapabilityStatement_Rest_Resource_SearchParam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Resource_SearchParam {
    return new CapabilityStatement_Rest_Resource_SearchParam().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_Resource_SearchParam | PlainMessage<CapabilityStatement_Rest_Resource_SearchParam> | undefined, b: CapabilityStatement_Rest_Resource_SearchParam | PlainMessage<CapabilityStatement_Rest_Resource_SearchParam> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_Resource_SearchParam, a, b);
  }
}

/**
 * What operations are supported?
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.SystemInteraction
 */
export class CapabilityStatement_Rest_SystemInteraction extends Message<CapabilityStatement_Rest_SystemInteraction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * transaction | batch | search-system | history-system
   *
   * @generated from field: google.fhir.stu3.proto.SystemRestfulInteractionCode code = 4;
   */
  code?: SystemRestfulInteractionCode;

  /**
   * Anything special about operation behavior
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 5;
   */
  documentation?: String;

  constructor(data?: PartialMessage<CapabilityStatement_Rest_SystemInteraction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.SystemInteraction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: SystemRestfulInteractionCode },
    { no: 5, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_SystemInteraction {
    return new CapabilityStatement_Rest_SystemInteraction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_SystemInteraction {
    return new CapabilityStatement_Rest_SystemInteraction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_SystemInteraction {
    return new CapabilityStatement_Rest_SystemInteraction().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_SystemInteraction | PlainMessage<CapabilityStatement_Rest_SystemInteraction> | undefined, b: CapabilityStatement_Rest_SystemInteraction | PlainMessage<CapabilityStatement_Rest_SystemInteraction> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_SystemInteraction, a, b);
  }
}

/**
 * Definition of an operation or a custom query
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Rest.Operation
 */
export class CapabilityStatement_Rest_Operation extends Message<CapabilityStatement_Rest_Operation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name by which the operation/query is invoked
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * The defined operation/query
   *
   * @generated from field: google.fhir.stu3.proto.Reference definition = 5;
   */
  definition?: Reference;

  constructor(data?: PartialMessage<CapabilityStatement_Rest_Operation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Rest.Operation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "definition", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Rest_Operation {
    return new CapabilityStatement_Rest_Operation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Operation {
    return new CapabilityStatement_Rest_Operation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Rest_Operation {
    return new CapabilityStatement_Rest_Operation().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Rest_Operation | PlainMessage<CapabilityStatement_Rest_Operation> | undefined, b: CapabilityStatement_Rest_Operation | PlainMessage<CapabilityStatement_Rest_Operation> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Rest_Operation, a, b);
  }
}

/**
 * If messaging is supported
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Messaging
 */
export class CapabilityStatement_Messaging extends Message<CapabilityStatement_Messaging> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Messaging.Endpoint endpoint = 4;
   */
  endpoint: CapabilityStatement_Messaging_Endpoint[] = [];

  /**
   * Reliable Message Cache Length (min)
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt reliable_cache = 5;
   */
  reliableCache?: UnsignedInt;

  /**
   * Messaging interface behavior details
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 6;
   */
  documentation?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Messaging.SupportedMessage supported_message = 7;
   */
  supportedMessage: CapabilityStatement_Messaging_SupportedMessage[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CapabilityStatement.Messaging.Event event = 8;
   */
  event: CapabilityStatement_Messaging_Event[] = [];

  constructor(data?: PartialMessage<CapabilityStatement_Messaging>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Messaging";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "endpoint", kind: "message", T: CapabilityStatement_Messaging_Endpoint, repeated: true },
    { no: 5, name: "reliable_cache", kind: "message", T: UnsignedInt },
    { no: 6, name: "documentation", kind: "message", T: String },
    { no: 7, name: "supported_message", kind: "message", T: CapabilityStatement_Messaging_SupportedMessage, repeated: true },
    { no: 8, name: "event", kind: "message", T: CapabilityStatement_Messaging_Event, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Messaging {
    return new CapabilityStatement_Messaging().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging {
    return new CapabilityStatement_Messaging().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging {
    return new CapabilityStatement_Messaging().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Messaging | PlainMessage<CapabilityStatement_Messaging> | undefined, b: CapabilityStatement_Messaging | PlainMessage<CapabilityStatement_Messaging> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Messaging, a, b);
  }
}

/**
 * Where messages should be sent
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Messaging.Endpoint
 */
export class CapabilityStatement_Messaging_Endpoint extends Message<CapabilityStatement_Messaging_Endpoint> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * http | ftp | mllp +
   *
   * @generated from field: google.fhir.stu3.proto.Coding protocol = 4;
   */
  protocol?: Coding;

  /**
   * Network address or identifier of the end-point
   *
   * @generated from field: google.fhir.stu3.proto.Uri address = 5;
   */
  address?: Uri;

  constructor(data?: PartialMessage<CapabilityStatement_Messaging_Endpoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Messaging.Endpoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "protocol", kind: "message", T: Coding },
    { no: 5, name: "address", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Messaging_Endpoint {
    return new CapabilityStatement_Messaging_Endpoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging_Endpoint {
    return new CapabilityStatement_Messaging_Endpoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging_Endpoint {
    return new CapabilityStatement_Messaging_Endpoint().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Messaging_Endpoint | PlainMessage<CapabilityStatement_Messaging_Endpoint> | undefined, b: CapabilityStatement_Messaging_Endpoint | PlainMessage<CapabilityStatement_Messaging_Endpoint> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Messaging_Endpoint, a, b);
  }
}

/**
 * Messages supported by this system
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Messaging.SupportedMessage
 */
export class CapabilityStatement_Messaging_SupportedMessage extends Message<CapabilityStatement_Messaging_SupportedMessage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * sender | receiver
   *
   * @generated from field: google.fhir.stu3.proto.EventCapabilityModeCode mode = 4;
   */
  mode?: EventCapabilityModeCode;

  /**
   * Message supported by this system
   *
   * @generated from field: google.fhir.stu3.proto.Reference definition = 5;
   */
  definition?: Reference;

  constructor(data?: PartialMessage<CapabilityStatement_Messaging_SupportedMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Messaging.SupportedMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: EventCapabilityModeCode },
    { no: 5, name: "definition", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Messaging_SupportedMessage {
    return new CapabilityStatement_Messaging_SupportedMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging_SupportedMessage {
    return new CapabilityStatement_Messaging_SupportedMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging_SupportedMessage {
    return new CapabilityStatement_Messaging_SupportedMessage().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Messaging_SupportedMessage | PlainMessage<CapabilityStatement_Messaging_SupportedMessage> | undefined, b: CapabilityStatement_Messaging_SupportedMessage | PlainMessage<CapabilityStatement_Messaging_SupportedMessage> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Messaging_SupportedMessage, a, b);
  }
}

/**
 * Declare support for this event
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Messaging.Event
 */
export class CapabilityStatement_Messaging_Event extends Message<CapabilityStatement_Messaging_Event> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Event type
   *
   * @generated from field: google.fhir.stu3.proto.Coding code = 4;
   */
  code?: Coding;

  /**
   * Consequence | Currency | Notification
   *
   * @generated from field: google.fhir.stu3.proto.MessageSignificanceCategoryCode category = 5;
   */
  category?: MessageSignificanceCategoryCode;

  /**
   * sender | receiver
   *
   * @generated from field: google.fhir.stu3.proto.EventCapabilityModeCode mode = 6;
   */
  mode?: EventCapabilityModeCode;

  /**
   * Resource that's focus of message
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode focus = 7;
   */
  focus?: ResourceTypeCode;

  /**
   * Profile that describes the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 8;
   */
  request?: Reference;

  /**
   * Profile that describes the response
   *
   * @generated from field: google.fhir.stu3.proto.Reference response = 9;
   */
  response?: Reference;

  /**
   * Endpoint-specific event documentation
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 10;
   */
  documentation?: String;

  constructor(data?: PartialMessage<CapabilityStatement_Messaging_Event>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Messaging.Event";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Coding },
    { no: 5, name: "category", kind: "message", T: MessageSignificanceCategoryCode },
    { no: 6, name: "mode", kind: "message", T: EventCapabilityModeCode },
    { no: 7, name: "focus", kind: "message", T: ResourceTypeCode },
    { no: 8, name: "request", kind: "message", T: Reference },
    { no: 9, name: "response", kind: "message", T: Reference },
    { no: 10, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Messaging_Event {
    return new CapabilityStatement_Messaging_Event().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging_Event {
    return new CapabilityStatement_Messaging_Event().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Messaging_Event {
    return new CapabilityStatement_Messaging_Event().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Messaging_Event | PlainMessage<CapabilityStatement_Messaging_Event> | undefined, b: CapabilityStatement_Messaging_Event | PlainMessage<CapabilityStatement_Messaging_Event> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Messaging_Event, a, b);
  }
}

/**
 * Document definition
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatement.Document
 */
export class CapabilityStatement_Document extends Message<CapabilityStatement_Document> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * producer | consumer
   *
   * @generated from field: google.fhir.stu3.proto.DocumentModeCode mode = 4;
   */
  mode?: DocumentModeCode;

  /**
   * Description of document support
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 5;
   */
  documentation?: String;

  /**
   * Constraint on a resource used in the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference profile = 6;
   */
  profile?: Reference;

  constructor(data?: PartialMessage<CapabilityStatement_Document>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatement.Document";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: DocumentModeCode },
    { no: 5, name: "documentation", kind: "message", T: String },
    { no: 6, name: "profile", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatement_Document {
    return new CapabilityStatement_Document().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatement_Document {
    return new CapabilityStatement_Document().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatement_Document {
    return new CapabilityStatement_Document().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatement_Document | PlainMessage<CapabilityStatement_Document> | undefined, b: CapabilityStatement_Document | PlainMessage<CapabilityStatement_Document> | undefined): boolean {
    return proto3.util.equals(CapabilityStatement_Document, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CarePlan, last updated
 * 2017-04-19T07:44:43.294+10:00. Healthcare plan for patient or group. See
 * http://hl7.org/fhir/StructureDefinition/CarePlan
 *
 * @generated from message google.fhir.stu3.proto.CarePlan
 */
export class CarePlan extends Message<CarePlan> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * Fulfills care plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * CarePlan replaced by this CarePlan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 12;
   */
  replaces: Reference[] = [];

  /**
   * Part of referenced CarePlan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 13;
   */
  partOf: Reference[] = [];

  /**
   * draft | active | suspended | completed | entered-in-error | cancelled |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.CarePlanStatusCode status = 14;
   */
  status?: CarePlanStatusCode;

  /**
   * proposal | plan | order | option
   *
   * @generated from field: google.fhir.stu3.proto.CarePlanIntentCode intent = 15;
   */
  intent?: CarePlanIntentCode;

  /**
   * Type of plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 16;
   */
  category: CodeableConcept[] = [];

  /**
   * Human-friendly name for the CarePlan
   *
   * @generated from field: google.fhir.stu3.proto.String title = 17;
   */
  title?: String;

  /**
   * Summary of nature of plan
   *
   * @generated from field: google.fhir.stu3.proto.String description = 18;
   */
  description?: String;

  /**
   * Who care plan is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Created in context of
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 20;
   */
  context?: Reference;

  /**
   * Time period plan covers
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 21;
   */
  period?: Period;

  /**
   * Who is responsible for contents of the plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 22;
   */
  author: Reference[] = [];

  /**
   * Who's involved in plan?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference care_team = 23;
   */
  careTeam: Reference[] = [];

  /**
   * Health issues this plan addresses
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference addresses = 24;
   */
  addresses: Reference[] = [];

  /**
   * Information considered as part of plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_info = 25;
   */
  supportingInfo: Reference[] = [];

  /**
   * Desired outcome of plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference goal = 26;
   */
  goal: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CarePlan.Activity activity = 27;
   */
  activity: CarePlan_Activity[] = [];

  /**
   * Comments about the plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 28;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<CarePlan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "status", kind: "message", T: CarePlanStatusCode },
    { no: 15, name: "intent", kind: "message", T: CarePlanIntentCode },
    { no: 16, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "title", kind: "message", T: String },
    { no: 18, name: "description", kind: "message", T: String },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "context", kind: "message", T: Reference },
    { no: 21, name: "period", kind: "message", T: Period },
    { no: 22, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "care_team", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "activity", kind: "message", T: CarePlan_Activity, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan {
    return new CarePlan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan {
    return new CarePlan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan {
    return new CarePlan().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan | PlainMessage<CarePlan> | undefined, b: CarePlan | PlainMessage<CarePlan> | undefined): boolean {
    return proto3.util.equals(CarePlan, a, b);
  }
}

/**
 * Action to occur as part of plan
 *
 * @generated from message google.fhir.stu3.proto.CarePlan.Activity
 */
export class CarePlan_Activity extends Message<CarePlan_Activity> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Results of the activity
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
   */
  outcomeCodeableConcept: CodeableConcept[] = [];

  /**
   * Appointment, Encounter, Procedure, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference outcome_reference = 5;
   */
  outcomeReference: Reference[] = [];

  /**
   * Comments about the activity status/progress
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation progress = 6;
   */
  progress: Annotation[] = [];

  /**
   * Activity details defined in specific resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 7;
   */
  reference?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.CarePlan.Activity.Detail detail = 8;
   */
  detail?: CarePlan_Activity_Detail;

  constructor(data?: PartialMessage<CarePlan_Activity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlan.Activity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "outcome_codeable_concept", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "progress", kind: "message", T: Annotation, repeated: true },
    { no: 7, name: "reference", kind: "message", T: Reference },
    { no: 8, name: "detail", kind: "message", T: CarePlan_Activity_Detail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity {
    return new CarePlan_Activity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity {
    return new CarePlan_Activity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity {
    return new CarePlan_Activity().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity | PlainMessage<CarePlan_Activity> | undefined, b: CarePlan_Activity | PlainMessage<CarePlan_Activity> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity, a, b);
  }
}

/**
 * In-line definition of activity
 *
 * @generated from message google.fhir.stu3.proto.CarePlan.Activity.Detail
 */
export class CarePlan_Activity_Detail extends Message<CarePlan_Activity_Detail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * diet | drug | encounter | observation | procedure | supply | other
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Protocol or definition
   *
   * @generated from field: google.fhir.stu3.proto.Reference definition = 5;
   */
  definition?: Reference;

  /**
   * Detail type of activity
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  /**
   * Why activity should be done or why activity was prohibited
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 7;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition triggering need for activity
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 8;
   */
  reasonReference: Reference[] = [];

  /**
   * Goals this activity relates to
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference goal = 9;
   */
  goal: Reference[] = [];

  /**
   * not-started | scheduled | in-progress | on-hold | completed | cancelled
   * | unknown
   *
   * @generated from field: google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10;
   */
  status?: CarePlanActivityStatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.stu3.proto.String status_reason = 11;
   */
  statusReason?: String;

  /**
   * Do NOT do
   *
   * @generated from field: google.fhir.stu3.proto.Boolean prohibited = 12;
   */
  prohibited?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.CarePlan.Activity.Detail.Scheduled scheduled = 13;
   */
  scheduled?: CarePlan_Activity_Detail_Scheduled;

  /**
   * Where it should happen
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 14;
   */
  location?: Reference;

  /**
   * Who will be responsible?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 15;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.CarePlan.Activity.Detail.Product product = 16;
   */
  product?: CarePlan_Activity_Detail_Product;

  /**
   * How to consume/day?
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
   */
  dailyAmount?: SimpleQuantity;

  /**
   * How much to administer/supply/consume
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 18;
   */
  quantity?: SimpleQuantity;

  /**
   * Extra info describing activity to perform
   *
   * @generated from field: google.fhir.stu3.proto.String description = 19;
   */
  description?: String;

  constructor(data?: PartialMessage<CarePlan_Activity_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlan.Activity.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "definition", kind: "message", T: Reference },
    { no: 6, name: "code", kind: "message", T: CodeableConcept },
    { no: 7, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 9, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "status", kind: "message", T: CarePlanActivityStatusCode },
    { no: 11, name: "status_reason", kind: "message", T: String },
    { no: 12, name: "prohibited", kind: "message", T: Boolean },
    { no: 13, name: "scheduled", kind: "message", T: CarePlan_Activity_Detail_Scheduled },
    { no: 14, name: "location", kind: "message", T: Reference },
    { no: 15, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "product", kind: "message", T: CarePlan_Activity_Detail_Product },
    { no: 17, name: "daily_amount", kind: "message", T: SimpleQuantity },
    { no: 18, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 19, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail {
    return new CarePlan_Activity_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail {
    return new CarePlan_Activity_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail {
    return new CarePlan_Activity_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail | PlainMessage<CarePlan_Activity_Detail> | undefined, b: CarePlan_Activity_Detail | PlainMessage<CarePlan_Activity_Detail> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail, a, b);
  }
}

/**
 * When activity is to occur
 *
 * @generated from message google.fhir.stu3.proto.CarePlan.Activity.Detail.Scheduled
 */
export class CarePlan_Activity_Detail_Scheduled extends Message<CarePlan_Activity_Detail_Scheduled> {
  /**
   * @generated from oneof google.fhir.stu3.proto.CarePlan.Activity.Detail.Scheduled.scheduled
   */
  scheduled: {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CarePlan_Activity_Detail_Scheduled>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlan.Activity.Detail.Scheduled";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "scheduled" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "scheduled" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "scheduled" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail_Scheduled {
    return new CarePlan_Activity_Detail_Scheduled().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_Scheduled {
    return new CarePlan_Activity_Detail_Scheduled().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_Scheduled {
    return new CarePlan_Activity_Detail_Scheduled().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail_Scheduled | PlainMessage<CarePlan_Activity_Detail_Scheduled> | undefined, b: CarePlan_Activity_Detail_Scheduled | PlainMessage<CarePlan_Activity_Detail_Scheduled> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail_Scheduled, a, b);
  }
}

/**
 * What is to be administered/supplied
 *
 * @generated from message google.fhir.stu3.proto.CarePlan.Activity.Detail.Product
 */
export class CarePlan_Activity_Detail_Product extends Message<CarePlan_Activity_Detail_Product> {
  /**
   * @generated from oneof google.fhir.stu3.proto.CarePlan.Activity.Detail.Product.product
   */
  product: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CarePlan_Activity_Detail_Product>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlan.Activity.Detail.Product";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "product" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "product" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail_Product {
    return new CarePlan_Activity_Detail_Product().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_Product {
    return new CarePlan_Activity_Detail_Product().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_Product {
    return new CarePlan_Activity_Detail_Product().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail_Product | PlainMessage<CarePlan_Activity_Detail_Product> | undefined, b: CarePlan_Activity_Detail_Product | PlainMessage<CarePlan_Activity_Detail_Product> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail_Product, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CareTeam, last updated
 * 2017-04-19T07:44:43.294+10:00. Planned participants in the coordination and
 * delivery of care for a patient or group. See
 * http://hl7.org/fhir/StructureDefinition/CareTeam
 *
 * @generated from message google.fhir.stu3.proto.CareTeam
 */
export class CareTeam extends Message<CareTeam> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this team
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * proposed | active | suspended | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.CareTeamStatusCode status = 10;
   */
  status?: CareTeamStatusCode;

  /**
   * Type of team
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category: CodeableConcept[] = [];

  /**
   * Name of the team, such as crisis assessment team
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Who care team is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Encounter or episode associated with CareTeam
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 14;
   */
  context?: Reference;

  /**
   * Time period team covers
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 15;
   */
  period?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CareTeam.Participant participant = 16;
   */
  participant: CareTeam_Participant[] = [];

  /**
   * Why the care team exists
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 17;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why the care team exists
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 18;
   */
  reasonReference: Reference[] = [];

  /**
   * Organization responsible for the care team
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference managing_organization = 19;
   */
  managingOrganization: Reference[] = [];

  /**
   * Comments made about the CareTeam
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 20;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<CareTeam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CareTeam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: CareTeamStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "context", kind: "message", T: Reference },
    { no: 15, name: "period", kind: "message", T: Period },
    { no: 16, name: "participant", kind: "message", T: CareTeam_Participant, repeated: true },
    { no: 17, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "managing_organization", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CareTeam {
    return new CareTeam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CareTeam {
    return new CareTeam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CareTeam {
    return new CareTeam().fromJsonString(jsonString, options);
  }

  static equals(a: CareTeam | PlainMessage<CareTeam> | undefined, b: CareTeam | PlainMessage<CareTeam> | undefined): boolean {
    return proto3.util.equals(CareTeam, a, b);
  }
}

/**
 * Members of the team
 *
 * @generated from message google.fhir.stu3.proto.CareTeam.Participant
 */
export class CareTeam_Participant extends Message<CareTeam_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of involvement
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Who is involved
   *
   * @generated from field: google.fhir.stu3.proto.Reference member = 5;
   */
  member?: Reference;

  /**
   * Organization of the practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  /**
   * Time period of participant
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<CareTeam_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CareTeam.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "member", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CareTeam_Participant {
    return new CareTeam_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CareTeam_Participant {
    return new CareTeam_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CareTeam_Participant {
    return new CareTeam_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: CareTeam_Participant | PlainMessage<CareTeam_Participant> | undefined, b: CareTeam_Participant | PlainMessage<CareTeam_Participant> | undefined): boolean {
    return proto3.util.equals(CareTeam_Participant, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ChargeItem, last updated
 * 2017-04-19T07:44:43.294+10:00. Item containing charge code(s) associated with
 * the provision of healthcare provider products. See
 * http://hl7.org/fhir/StructureDefinition/ChargeItem
 *
 * @generated from message google.fhir.stu3.proto.ChargeItem
 */
export class ChargeItem extends Message<ChargeItem> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for item
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Defining information about the code of this charge item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri definition = 10;
   */
  definition: Uri[] = [];

  /**
   * planned | billable | not-billable | aborted | billed | entered-in-error |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.ChargeItemStatusCode status = 11;
   */
  status?: ChargeItemStatusCode;

  /**
   * Part of referenced ChargeItem
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * A code that identifies the charge, like a billing code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Individual service was done for/to
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Encounter / Episode associated with event
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ChargeItem.Occurrence occurrence = 16;
   */
  occurrence?: ChargeItem_Occurrence;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ChargeItem.Participant participant = 17;
   */
  participant: ChargeItem_Participant[] = [];

  /**
   * Organization providing the charged sevice
   *
   * @generated from field: google.fhir.stu3.proto.Reference performing_organization = 18;
   */
  performingOrganization?: Reference;

  /**
   * Organization requesting the charged service
   *
   * @generated from field: google.fhir.stu3.proto.Reference requesting_organization = 19;
   */
  requestingOrganization?: Reference;

  /**
   * Quantity of which the charge item has been serviced
   *
   * @generated from field: google.fhir.stu3.proto.Quantity quantity = 20;
   */
  quantity?: Quantity;

  /**
   * Anatomical location, if relevant
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept bodysite = 21;
   */
  bodysite: CodeableConcept[] = [];

  /**
   * Factor overriding the associated rules
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor_override = 22;
   */
  factorOverride?: Decimal;

  /**
   * Price overriding the associated rules
   *
   * @generated from field: google.fhir.stu3.proto.Money price_override = 23;
   */
  priceOverride?: Money;

  /**
   * Reason for overriding the list price/factor
   *
   * @generated from field: google.fhir.stu3.proto.String override_reason = 24;
   */
  overrideReason?: String;

  /**
   * Individual who was entering
   *
   * @generated from field: google.fhir.stu3.proto.Reference enterer = 25;
   */
  enterer?: Reference;

  /**
   * Date the charge item was entered
   *
   * @generated from field: google.fhir.stu3.proto.DateTime entered_date = 26;
   */
  enteredDate?: DateTime;

  /**
   * Why was the charged  service rendered?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 27;
   */
  reason: CodeableConcept[] = [];

  /**
   * Which rendered service is being charged?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference service = 28;
   */
  service: Reference[] = [];

  /**
   * Account to place this charge
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference account = 29;
   */
  account: Reference[] = [];

  /**
   * Comments made about the ChargeItem
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 30;
   */
  note: Annotation[] = [];

  /**
   * Further information supporting the this charge
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_information = 31;
   */
  supportingInformation: Reference[] = [];

  constructor(data?: PartialMessage<ChargeItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ChargeItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "definition", kind: "message", T: Uri, repeated: true },
    { no: 11, name: "status", kind: "message", T: ChargeItemStatusCode },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "occurrence", kind: "message", T: ChargeItem_Occurrence },
    { no: 17, name: "participant", kind: "message", T: ChargeItem_Participant, repeated: true },
    { no: 18, name: "performing_organization", kind: "message", T: Reference },
    { no: 19, name: "requesting_organization", kind: "message", T: Reference },
    { no: 20, name: "quantity", kind: "message", T: Quantity },
    { no: 21, name: "bodysite", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "factor_override", kind: "message", T: Decimal },
    { no: 23, name: "price_override", kind: "message", T: Money },
    { no: 24, name: "override_reason", kind: "message", T: String },
    { no: 25, name: "enterer", kind: "message", T: Reference },
    { no: 26, name: "entered_date", kind: "message", T: DateTime },
    { no: 27, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 28, name: "service", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "account", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 31, name: "supporting_information", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem {
    return new ChargeItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem {
    return new ChargeItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem {
    return new ChargeItem().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem | PlainMessage<ChargeItem> | undefined, b: ChargeItem | PlainMessage<ChargeItem> | undefined): boolean {
    return proto3.util.equals(ChargeItem, a, b);
  }
}

/**
 * When the charged service was applied
 *
 * @generated from message google.fhir.stu3.proto.ChargeItem.Occurrence
 */
export class ChargeItem_Occurrence extends Message<ChargeItem_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ChargeItem.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ChargeItem_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ChargeItem.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem_Occurrence {
    return new ChargeItem_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem_Occurrence {
    return new ChargeItem_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem_Occurrence {
    return new ChargeItem_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem_Occurrence | PlainMessage<ChargeItem_Occurrence> | undefined, b: ChargeItem_Occurrence | PlainMessage<ChargeItem_Occurrence> | undefined): boolean {
    return proto3.util.equals(ChargeItem_Occurrence, a, b);
  }
}

/**
 * Who performed charged service
 *
 * @generated from message google.fhir.stu3.proto.ChargeItem.Participant
 */
export class ChargeItem_Participant extends Message<ChargeItem_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What type of performance was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<ChargeItem_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ChargeItem.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem_Participant {
    return new ChargeItem_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem_Participant {
    return new ChargeItem_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem_Participant {
    return new ChargeItem_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem_Participant | PlainMessage<ChargeItem_Participant> | undefined, b: ChargeItem_Participant | PlainMessage<ChargeItem_Participant> | undefined): boolean {
    return proto3.util.equals(ChargeItem_Participant, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Claim, last updated
 * 2017-04-19T07:44:43.294+10:00. Claim, Pre-determination or Pre-authorization.
 * See http://hl7.org/fhir/StructureDefinition/Claim
 *
 * @generated from message google.fhir.stu3.proto.Claim
 */
export class Claim extends Message<Claim> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Claim number
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Type or discipline
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Finer grained claim type information
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept sub_type = 12;
   */
  subType: CodeableConcept[] = [];

  /**
   * complete | proposed | exploratory | other
   *
   * @generated from field: google.fhir.stu3.proto.UseCode use = 13;
   */
  use?: UseCode;

  /**
   * The subject of the Products and Services
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * Period for charge submission
   *
   * @generated from field: google.fhir.stu3.proto.Period billable_period = 15;
   */
  billablePeriod?: Period;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 16;
   */
  created?: DateTime;

  /**
   * Author
   *
   * @generated from field: google.fhir.stu3.proto.Reference enterer = 17;
   */
  enterer?: Reference;

  /**
   * Target
   *
   * @generated from field: google.fhir.stu3.proto.Reference insurer = 18;
   */
  insurer?: Reference;

  /**
   * Responsible provider
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 19;
   */
  provider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 20;
   */
  organization?: Reference;

  /**
   * Desired processing priority
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 21;
   */
  priority?: CodeableConcept;

  /**
   * Funds requested to be reserved
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept funds_reserve = 22;
   */
  fundsReserve?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.RelatedClaim related = 23;
   */
  related: Claim_RelatedClaim[] = [];

  /**
   * Prescription authorizing services or products
   *
   * @generated from field: google.fhir.stu3.proto.Reference prescription = 24;
   */
  prescription?: Reference;

  /**
   * Original prescription if superceded by fulfiller
   *
   * @generated from field: google.fhir.stu3.proto.Reference original_prescription = 25;
   */
  originalPrescription?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Payee payee = 26;
   */
  payee?: Claim_Payee;

  /**
   * Treatment Referral
   *
   * @generated from field: google.fhir.stu3.proto.Reference referral = 27;
   */
  referral?: Reference;

  /**
   * Servicing Facility
   *
   * @generated from field: google.fhir.stu3.proto.Reference facility = 28;
   */
  facility?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.CareTeam care_team = 29;
   */
  careTeam: Claim_CareTeam[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.SpecialCondition information = 30;
   */
  information: Claim_SpecialCondition[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.Diagnosis diagnosis = 31;
   */
  diagnosis: Claim_Diagnosis[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.Procedure procedure = 32;
   */
  procedure: Claim_Procedure[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.Insurance insurance = 33;
   */
  insurance: Claim_Insurance[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Accident accident = 34;
   */
  accident?: Claim_Accident;

  /**
   * Period unable to work
   *
   * @generated from field: google.fhir.stu3.proto.Period employment_impacted = 35;
   */
  employmentImpacted?: Period;

  /**
   * Period in hospital
   *
   * @generated from field: google.fhir.stu3.proto.Period hospitalization = 36;
   */
  hospitalization?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.Item item = 37;
   */
  item: Claim_Item[] = [];

  /**
   * Total claim cost
   *
   * @generated from field: google.fhir.stu3.proto.Money total = 38;
   */
  total?: Money;

  constructor(data?: PartialMessage<Claim>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "sub_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "use", kind: "message", T: UseCode },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "billable_period", kind: "message", T: Period },
    { no: 16, name: "created", kind: "message", T: DateTime },
    { no: 17, name: "enterer", kind: "message", T: Reference },
    { no: 18, name: "insurer", kind: "message", T: Reference },
    { no: 19, name: "provider", kind: "message", T: Reference },
    { no: 20, name: "organization", kind: "message", T: Reference },
    { no: 21, name: "priority", kind: "message", T: CodeableConcept },
    { no: 22, name: "funds_reserve", kind: "message", T: CodeableConcept },
    { no: 23, name: "related", kind: "message", T: Claim_RelatedClaim, repeated: true },
    { no: 24, name: "prescription", kind: "message", T: Reference },
    { no: 25, name: "original_prescription", kind: "message", T: Reference },
    { no: 26, name: "payee", kind: "message", T: Claim_Payee },
    { no: 27, name: "referral", kind: "message", T: Reference },
    { no: 28, name: "facility", kind: "message", T: Reference },
    { no: 29, name: "care_team", kind: "message", T: Claim_CareTeam, repeated: true },
    { no: 30, name: "information", kind: "message", T: Claim_SpecialCondition, repeated: true },
    { no: 31, name: "diagnosis", kind: "message", T: Claim_Diagnosis, repeated: true },
    { no: 32, name: "procedure", kind: "message", T: Claim_Procedure, repeated: true },
    { no: 33, name: "insurance", kind: "message", T: Claim_Insurance, repeated: true },
    { no: 34, name: "accident", kind: "message", T: Claim_Accident },
    { no: 35, name: "employment_impacted", kind: "message", T: Period },
    { no: 36, name: "hospitalization", kind: "message", T: Period },
    { no: 37, name: "item", kind: "message", T: Claim_Item, repeated: true },
    { no: 38, name: "total", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim {
    return new Claim().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim {
    return new Claim().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim {
    return new Claim().fromJsonString(jsonString, options);
  }

  static equals(a: Claim | PlainMessage<Claim> | undefined, b: Claim | PlainMessage<Claim> | undefined): boolean {
    return proto3.util.equals(Claim, a, b);
  }
}

/**
 * Related Claims which may be revelant to processing this claimn
 *
 * @generated from message google.fhir.stu3.proto.Claim.RelatedClaim
 */
export class Claim_RelatedClaim extends Message<Claim_RelatedClaim> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the related claim
   *
   * @generated from field: google.fhir.stu3.proto.Reference claim = 4;
   */
  claim?: Reference;

  /**
   * How the reference claim is related
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept relationship = 5;
   */
  relationship?: CodeableConcept;

  /**
   * Related file or case reference
   *
   * @generated from field: google.fhir.stu3.proto.Identifier reference = 6;
   */
  reference?: Identifier;

  constructor(data?: PartialMessage<Claim_RelatedClaim>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.RelatedClaim";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "claim", kind: "message", T: Reference },
    { no: 5, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 6, name: "reference", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_RelatedClaim {
    return new Claim_RelatedClaim().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_RelatedClaim {
    return new Claim_RelatedClaim().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_RelatedClaim {
    return new Claim_RelatedClaim().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_RelatedClaim | PlainMessage<Claim_RelatedClaim> | undefined, b: Claim_RelatedClaim | PlainMessage<Claim_RelatedClaim> | undefined): boolean {
    return proto3.util.equals(Claim_RelatedClaim, a, b);
  }
}

/**
 * Party to be paid any benefits payable
 *
 * @generated from message google.fhir.stu3.proto.Claim.Payee
 */
export class Claim_Payee extends Message<Claim_Payee> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of party: Subscriber, Provider, other
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * organization | patient | practitioner | relatedperson
   *
   * @generated from field: google.fhir.stu3.proto.Coding resource_type = 5;
   */
  resourceType?: Coding;

  /**
   * Party to receive the payable
   *
   * @generated from field: google.fhir.stu3.proto.Reference party = 6;
   */
  party?: Reference;

  constructor(data?: PartialMessage<Claim_Payee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Payee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "resource_type", kind: "message", T: Coding },
    { no: 6, name: "party", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Payee {
    return new Claim_Payee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Payee {
    return new Claim_Payee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Payee {
    return new Claim_Payee().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Payee | PlainMessage<Claim_Payee> | undefined, b: Claim_Payee | PlainMessage<Claim_Payee> | undefined): boolean {
    return proto3.util.equals(Claim_Payee, a, b);
  }
}

/**
 * Members of the care team
 *
 * @generated from message google.fhir.stu3.proto.Claim.CareTeam
 */
export class Claim_CareTeam extends Message<Claim_CareTeam> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Number to covey order of careTeam
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Provider individual or organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 5;
   */
  provider?: Reference;

  /**
   * Billing provider
   *
   * @generated from field: google.fhir.stu3.proto.Boolean responsible = 6;
   */
  responsible?: Boolean;

  /**
   * Role on the team
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 7;
   */
  role?: CodeableConcept;

  /**
   * Type, classification or Specialization
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept qualification = 8;
   */
  qualification?: CodeableConcept;

  constructor(data?: PartialMessage<Claim_CareTeam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.CareTeam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "provider", kind: "message", T: Reference },
    { no: 6, name: "responsible", kind: "message", T: Boolean },
    { no: 7, name: "role", kind: "message", T: CodeableConcept },
    { no: 8, name: "qualification", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_CareTeam {
    return new Claim_CareTeam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_CareTeam {
    return new Claim_CareTeam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_CareTeam {
    return new Claim_CareTeam().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_CareTeam | PlainMessage<Claim_CareTeam> | undefined, b: Claim_CareTeam | PlainMessage<Claim_CareTeam> | undefined): boolean {
    return proto3.util.equals(Claim_CareTeam, a, b);
  }
}

/**
 * Exceptions, special considerations, the condition, situation, prior or
 * concurrent issues
 *
 * @generated from message google.fhir.stu3.proto.Claim.SpecialCondition
 */
export class Claim_SpecialCondition extends Message<Claim_SpecialCondition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Information instance identifier
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * General class of information
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 5;
   */
  category?: CodeableConcept;

  /**
   * Type of information
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.SpecialCondition.TimingType timing = 7;
   */
  timing?: Claim_SpecialCondition_TimingType;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.SpecialCondition.Value value = 8;
   */
  value?: Claim_SpecialCondition_Value;

  /**
   * Reason associated with the information
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 9;
   */
  reason?: CodeableConcept;

  constructor(data?: PartialMessage<Claim_SpecialCondition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.SpecialCondition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "category", kind: "message", T: CodeableConcept },
    { no: 6, name: "code", kind: "message", T: CodeableConcept },
    { no: 7, name: "timing", kind: "message", T: Claim_SpecialCondition_TimingType },
    { no: 8, name: "value", kind: "message", T: Claim_SpecialCondition_Value },
    { no: 9, name: "reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_SpecialCondition {
    return new Claim_SpecialCondition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_SpecialCondition {
    return new Claim_SpecialCondition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_SpecialCondition {
    return new Claim_SpecialCondition().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_SpecialCondition | PlainMessage<Claim_SpecialCondition> | undefined, b: Claim_SpecialCondition | PlainMessage<Claim_SpecialCondition> | undefined): boolean {
    return proto3.util.equals(Claim_SpecialCondition, a, b);
  }
}

/**
 * When it occurred
 *
 * @generated from message google.fhir.stu3.proto.Claim.SpecialCondition.TimingType
 */
export class Claim_SpecialCondition_TimingType extends Message<Claim_SpecialCondition_TimingType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.SpecialCondition.TimingType.timing
   */
  timing: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_SpecialCondition_TimingType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.SpecialCondition.TimingType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "timing" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_SpecialCondition_TimingType {
    return new Claim_SpecialCondition_TimingType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_SpecialCondition_TimingType {
    return new Claim_SpecialCondition_TimingType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_SpecialCondition_TimingType {
    return new Claim_SpecialCondition_TimingType().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_SpecialCondition_TimingType | PlainMessage<Claim_SpecialCondition_TimingType> | undefined, b: Claim_SpecialCondition_TimingType | PlainMessage<Claim_SpecialCondition_TimingType> | undefined): boolean {
    return proto3.util.equals(Claim_SpecialCondition_TimingType, a, b);
  }
}

/**
 * Additional Data or supporting information
 *
 * @generated from message google.fhir.stu3.proto.Claim.SpecialCondition.Value
 */
export class Claim_SpecialCondition_Value extends Message<Claim_SpecialCondition_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.SpecialCondition.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 2;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 3;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 4;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_SpecialCondition_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.SpecialCondition.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 2, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 3, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 4, name: "reference", kind: "message", T: Reference, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_SpecialCondition_Value {
    return new Claim_SpecialCondition_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_SpecialCondition_Value {
    return new Claim_SpecialCondition_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_SpecialCondition_Value {
    return new Claim_SpecialCondition_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_SpecialCondition_Value | PlainMessage<Claim_SpecialCondition_Value> | undefined, b: Claim_SpecialCondition_Value | PlainMessage<Claim_SpecialCondition_Value> | undefined): boolean {
    return proto3.util.equals(Claim_SpecialCondition_Value, a, b);
  }
}

/**
 * List of Diagnosis
 *
 * @generated from message google.fhir.stu3.proto.Claim.Diagnosis
 */
export class Claim_Diagnosis extends Message<Claim_Diagnosis> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Number to covey order of diagnosis
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Diagnosis.DiagnosisType diagnosis = 5;
   */
  diagnosis?: Claim_Diagnosis_DiagnosisType;

  /**
   * Timing or nature of the diagnosis
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type: CodeableConcept[] = [];

  /**
   * Package billing code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept package_code = 7;
   */
  packageCode?: CodeableConcept;

  constructor(data?: PartialMessage<Claim_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "diagnosis", kind: "message", T: Claim_Diagnosis_DiagnosisType },
    { no: 6, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "package_code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Diagnosis {
    return new Claim_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Diagnosis {
    return new Claim_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Diagnosis {
    return new Claim_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Diagnosis | PlainMessage<Claim_Diagnosis> | undefined, b: Claim_Diagnosis | PlainMessage<Claim_Diagnosis> | undefined): boolean {
    return proto3.util.equals(Claim_Diagnosis, a, b);
  }
}

/**
 * Patient's diagnosis
 *
 * @generated from message google.fhir.stu3.proto.Claim.Diagnosis.DiagnosisType
 */
export class Claim_Diagnosis_DiagnosisType extends Message<Claim_Diagnosis_DiagnosisType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.Diagnosis.DiagnosisType.diagnosis
   */
  diagnosis: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_Diagnosis_DiagnosisType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Diagnosis.DiagnosisType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "diagnosis" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "diagnosis" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Diagnosis_DiagnosisType {
    return new Claim_Diagnosis_DiagnosisType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Diagnosis_DiagnosisType {
    return new Claim_Diagnosis_DiagnosisType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Diagnosis_DiagnosisType {
    return new Claim_Diagnosis_DiagnosisType().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Diagnosis_DiagnosisType | PlainMessage<Claim_Diagnosis_DiagnosisType> | undefined, b: Claim_Diagnosis_DiagnosisType | PlainMessage<Claim_Diagnosis_DiagnosisType> | undefined): boolean {
    return proto3.util.equals(Claim_Diagnosis_DiagnosisType, a, b);
  }
}

/**
 * Procedures performed
 *
 * @generated from message google.fhir.stu3.proto.Claim.Procedure
 */
export class Claim_Procedure extends Message<Claim_Procedure> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Procedure sequence for reference
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * When the procedure was performed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 5;
   */
  date?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Procedure.ProcedureType procedure = 6;
   */
  procedure?: Claim_Procedure_ProcedureType;

  constructor(data?: PartialMessage<Claim_Procedure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Procedure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "date", kind: "message", T: DateTime },
    { no: 6, name: "procedure", kind: "message", T: Claim_Procedure_ProcedureType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Procedure {
    return new Claim_Procedure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Procedure {
    return new Claim_Procedure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Procedure {
    return new Claim_Procedure().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Procedure | PlainMessage<Claim_Procedure> | undefined, b: Claim_Procedure | PlainMessage<Claim_Procedure> | undefined): boolean {
    return proto3.util.equals(Claim_Procedure, a, b);
  }
}

/**
 * Patient's list of procedures performed
 *
 * @generated from message google.fhir.stu3.proto.Claim.Procedure.ProcedureType
 */
export class Claim_Procedure_ProcedureType extends Message<Claim_Procedure_ProcedureType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.Procedure.ProcedureType.procedure
   */
  procedure: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_Procedure_ProcedureType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Procedure.ProcedureType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "procedure" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "procedure" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Procedure_ProcedureType {
    return new Claim_Procedure_ProcedureType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Procedure_ProcedureType {
    return new Claim_Procedure_ProcedureType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Procedure_ProcedureType {
    return new Claim_Procedure_ProcedureType().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Procedure_ProcedureType | PlainMessage<Claim_Procedure_ProcedureType> | undefined, b: Claim_Procedure_ProcedureType | PlainMessage<Claim_Procedure_ProcedureType> | undefined): boolean {
    return proto3.util.equals(Claim_Procedure_ProcedureType, a, b);
  }
}

/**
 * Insurance or medical plan
 *
 * @generated from message google.fhir.stu3.proto.Claim.Insurance
 */
export class Claim_Insurance extends Message<Claim_Insurance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance identifier
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Is the focal Coverage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean focal = 5;
   */
  focal?: Boolean;

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 6;
   */
  coverage?: Reference;

  /**
   * Business agreement
   *
   * @generated from field: google.fhir.stu3.proto.String business_arrangement = 7;
   */
  businessArrangement?: String;

  /**
   * Pre-Authorization/Determination Reference
   *
   * @generated from field: repeated google.fhir.stu3.proto.String pre_auth_ref = 8;
   */
  preAuthRef: String[] = [];

  /**
   * Adjudication results
   *
   * @generated from field: google.fhir.stu3.proto.Reference claim_response = 9;
   */
  claimResponse?: Reference;

  constructor(data?: PartialMessage<Claim_Insurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Insurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "focal", kind: "message", T: Boolean },
    { no: 6, name: "coverage", kind: "message", T: Reference },
    { no: 7, name: "business_arrangement", kind: "message", T: String },
    { no: 8, name: "pre_auth_ref", kind: "message", T: String, repeated: true },
    { no: 9, name: "claim_response", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Insurance {
    return new Claim_Insurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Insurance {
    return new Claim_Insurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Insurance {
    return new Claim_Insurance().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Insurance | PlainMessage<Claim_Insurance> | undefined, b: Claim_Insurance | PlainMessage<Claim_Insurance> | undefined): boolean {
    return proto3.util.equals(Claim_Insurance, a, b);
  }
}

/**
 * Details about an accident
 *
 * @generated from message google.fhir.stu3.proto.Claim.Accident
 */
export class Claim_Accident extends Message<Claim_Accident> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When the accident occurred
   * see information codes
   * see information codes
   *
   * @generated from field: google.fhir.stu3.proto.Date date = 4;
   */
  date?: Date;

  /**
   * The nature of the accident
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Accident.Location location = 6;
   */
  location?: Claim_Accident_Location;

  constructor(data?: PartialMessage<Claim_Accident>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Accident";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: Date },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "location", kind: "message", T: Claim_Accident_Location },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Accident {
    return new Claim_Accident().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Accident {
    return new Claim_Accident().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Accident {
    return new Claim_Accident().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Accident | PlainMessage<Claim_Accident> | undefined, b: Claim_Accident | PlainMessage<Claim_Accident> | undefined): boolean {
    return proto3.util.equals(Claim_Accident, a, b);
  }
}

/**
 * Accident Place
 *
 * @generated from message google.fhir.stu3.proto.Claim.Accident.Location
 */
export class Claim_Accident_Location extends Message<Claim_Accident_Location> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.Accident.Location.location
   */
  location: {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 1;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_Accident_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Accident.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "message", T: Address, oneof: "location" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "location" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Accident_Location {
    return new Claim_Accident_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Accident_Location {
    return new Claim_Accident_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Accident_Location {
    return new Claim_Accident_Location().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Accident_Location | PlainMessage<Claim_Accident_Location> | undefined, b: Claim_Accident_Location | PlainMessage<Claim_Accident_Location> | undefined): boolean {
    return proto3.util.equals(Claim_Accident_Location, a, b);
  }
}

/**
 * Goods and Services
 *
 * @generated from message google.fhir.stu3.proto.Claim.Item
 */
export class Claim_Item extends Message<Claim_Item> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Applicable careTeam members
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt care_team_link_id = 5;
   */
  careTeamLinkId: PositiveInt[] = [];

  /**
   * Applicable diagnoses
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt diagnosis_link_id = 6;
   */
  diagnosisLinkId: PositiveInt[] = [];

  /**
   * Applicable procedures
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt procedure_link_id = 7;
   */
  procedureLinkId: PositiveInt[] = [];

  /**
   * Applicable exception and supporting information
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt information_link_id = 8;
   */
  informationLinkId: PositiveInt[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 9;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 10;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 11;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 12;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program specific reason for item inclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept program_code = 13;
   */
  programCode: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Item.Serviced serviced = 14;
   */
  serviced?: Claim_Item_Serviced;

  /**
   * @generated from field: google.fhir.stu3.proto.Claim.Item.Location location = 15;
   */
  location?: Claim_Item_Location;

  /**
   * Count of Products or Services
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 16;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per point
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 17;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 18;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 19;
   */
  net?: Money;

  /**
   * Unique Device Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference udi = 20;
   */
  udi: Reference[] = [];

  /**
   * Service Location
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 21;
   */
  bodySite?: CodeableConcept;

  /**
   * Service Sub-location
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept sub_site = 22;
   */
  subSite: CodeableConcept[] = [];

  /**
   * Encounters related to this billed item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference encounter = 23;
   */
  encounter: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.Item.Detail detail = 24;
   */
  detail: Claim_Item_Detail[] = [];

  constructor(data?: PartialMessage<Claim_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "care_team_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "diagnosis_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 7, name: "procedure_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 8, name: "information_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 9, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 10, name: "category", kind: "message", T: CodeableConcept },
    { no: 11, name: "service", kind: "message", T: CodeableConcept },
    { no: 12, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "serviced", kind: "message", T: Claim_Item_Serviced },
    { no: 15, name: "location", kind: "message", T: Claim_Item_Location },
    { no: 16, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 17, name: "unit_price", kind: "message", T: Money },
    { no: 18, name: "factor", kind: "message", T: Decimal },
    { no: 19, name: "net", kind: "message", T: Money },
    { no: 20, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 22, name: "sub_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "encounter", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "detail", kind: "message", T: Claim_Item_Detail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Item {
    return new Claim_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Item {
    return new Claim_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Item {
    return new Claim_Item().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Item | PlainMessage<Claim_Item> | undefined, b: Claim_Item | PlainMessage<Claim_Item> | undefined): boolean {
    return proto3.util.equals(Claim_Item, a, b);
  }
}

/**
 * Date or dates of Service
 *
 * @generated from message google.fhir.stu3.proto.Claim.Item.Serviced
 */
export class Claim_Item_Serviced extends Message<Claim_Item_Serviced> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.Item.Serviced.serviced
   */
  serviced: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_Item_Serviced>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Item.Serviced";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "serviced" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "serviced" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Item_Serviced {
    return new Claim_Item_Serviced().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Item_Serviced {
    return new Claim_Item_Serviced().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Item_Serviced {
    return new Claim_Item_Serviced().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Item_Serviced | PlainMessage<Claim_Item_Serviced> | undefined, b: Claim_Item_Serviced | PlainMessage<Claim_Item_Serviced> | undefined): boolean {
    return proto3.util.equals(Claim_Item_Serviced, a, b);
  }
}

/**
 * Place of service
 *
 * @generated from message google.fhir.stu3.proto.Claim.Item.Location
 */
export class Claim_Item_Location extends Message<Claim_Item_Location> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Claim.Item.Location.location
   */
  location: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 2;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Claim_Item_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Item.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "location" },
    { no: 2, name: "address", kind: "message", T: Address, oneof: "location" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "location" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Item_Location {
    return new Claim_Item_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Item_Location {
    return new Claim_Item_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Item_Location {
    return new Claim_Item_Location().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Item_Location | PlainMessage<Claim_Item_Location> | undefined, b: Claim_Item_Location | PlainMessage<Claim_Item_Location> | undefined): boolean {
    return proto3.util.equals(Claim_Item_Location, a, b);
  }
}

/**
 * Additional items
 *
 * @generated from message google.fhir.stu3.proto.Claim.Item.Detail
 */
export class Claim_Item_Detail extends Message<Claim_Item_Detail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 7;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program specific reason for item inclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept program_code = 9;
   */
  programCode: CodeableConcept[] = [];

  /**
   * Count of Products or Services
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 10;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per point
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 11;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 12;
   */
  factor?: Decimal;

  /**
   * Total additional item cost
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 13;
   */
  net?: Money;

  /**
   * Unique Device Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference udi = 14;
   */
  udi: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Claim.Item.Detail.SubDetail sub_detail = 15;
   */
  subDetail: Claim_Item_Detail_SubDetail[] = [];

  constructor(data?: PartialMessage<Claim_Item_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Item.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 6, name: "category", kind: "message", T: CodeableConcept },
    { no: 7, name: "service", kind: "message", T: CodeableConcept },
    { no: 8, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 11, name: "unit_price", kind: "message", T: Money },
    { no: 12, name: "factor", kind: "message", T: Decimal },
    { no: 13, name: "net", kind: "message", T: Money },
    { no: 14, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "sub_detail", kind: "message", T: Claim_Item_Detail_SubDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Item_Detail {
    return new Claim_Item_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Item_Detail {
    return new Claim_Item_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Item_Detail {
    return new Claim_Item_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Item_Detail | PlainMessage<Claim_Item_Detail> | undefined, b: Claim_Item_Detail | PlainMessage<Claim_Item_Detail> | undefined): boolean {
    return proto3.util.equals(Claim_Item_Detail, a, b);
  }
}

/**
 * Additional items
 *
 * @generated from message google.fhir.stu3.proto.Claim.Item.Detail.SubDetail
 */
export class Claim_Item_Detail_SubDetail extends Message<Claim_Item_Detail_SubDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 7;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program specific reason for item inclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept program_code = 9;
   */
  programCode: CodeableConcept[] = [];

  /**
   * Count of Products or Services
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 10;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per point
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 11;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 12;
   */
  factor?: Decimal;

  /**
   * Net additional item cost
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 13;
   */
  net?: Money;

  /**
   * Unique Device Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference udi = 14;
   */
  udi: Reference[] = [];

  constructor(data?: PartialMessage<Claim_Item_Detail_SubDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Claim.Item.Detail.SubDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 6, name: "category", kind: "message", T: CodeableConcept },
    { no: 7, name: "service", kind: "message", T: CodeableConcept },
    { no: 8, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 11, name: "unit_price", kind: "message", T: Money },
    { no: 12, name: "factor", kind: "message", T: Decimal },
    { no: 13, name: "net", kind: "message", T: Money },
    { no: 14, name: "udi", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Claim_Item_Detail_SubDetail {
    return new Claim_Item_Detail_SubDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Claim_Item_Detail_SubDetail {
    return new Claim_Item_Detail_SubDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Claim_Item_Detail_SubDetail {
    return new Claim_Item_Detail_SubDetail().fromJsonString(jsonString, options);
  }

  static equals(a: Claim_Item_Detail_SubDetail | PlainMessage<Claim_Item_Detail_SubDetail> | undefined, b: Claim_Item_Detail_SubDetail | PlainMessage<Claim_Item_Detail_SubDetail> | undefined): boolean {
    return proto3.util.equals(Claim_Item_Detail_SubDetail, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ClaimResponse, last updated
 * 2017-04-19T07:44:43.294+10:00. Remittance resource. See
 * http://hl7.org/fhir/StructureDefinition/ClaimResponse
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse
 */
export class ClaimResponse extends Message<ClaimResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Response  number
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * The subject of the Products and Services
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 11;
   */
  patient?: Reference;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 12;
   */
  created?: DateTime;

  /**
   * Insurance issuing organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference insurer = 13;
   */
  insurer?: Reference;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_provider = 14;
   */
  requestProvider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_organization = 15;
   */
  requestOrganization?: Reference;

  /**
   * Id of resource triggering adjudication
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 16;
   */
  request?: Reference;

  /**
   * complete | error | partial
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 17;
   */
  outcome?: CodeableConcept;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.stu3.proto.String disposition = 18;
   */
  disposition?: String;

  /**
   * Party to be paid any benefits payable
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept payee_type = 19;
   */
  payeeType?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item item = 20;
   */
  item: ClaimResponse_Item[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.AddedItem add_item = 21;
   */
  addItem: ClaimResponse_AddedItem[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Error error = 22;
   */
  error: ClaimResponse_Error[] = [];

  /**
   * Total Cost of service from the Claim
   *
   * @generated from field: google.fhir.stu3.proto.Money total_cost = 23;
   */
  totalCost?: Money;

  /**
   * Unallocated deductible
   *
   * @generated from field: google.fhir.stu3.proto.Money unalloc_deductable = 24;
   */
  unallocDeductable?: Money;

  /**
   * Total benefit payable for the Claim
   *
   * @generated from field: google.fhir.stu3.proto.Money total_benefit = 25;
   */
  totalBenefit?: Money;

  /**
   * @generated from field: google.fhir.stu3.proto.ClaimResponse.Payment payment = 26;
   */
  payment?: ClaimResponse_Payment;

  /**
   * Funds reserved status
   *
   * @generated from field: google.fhir.stu3.proto.Coding reserved = 27;
   */
  reserved?: Coding;

  /**
   * Printed Form Identifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 28;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Note process_note = 29;
   */
  processNote: ClaimResponse_Note[] = [];

  /**
   * Request for additional information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference communication_request = 30;
   */
  communicationRequest: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Insurance insurance = 31;
   */
  insurance: ClaimResponse_Insurance[] = [];

  constructor(data?: PartialMessage<ClaimResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "patient", kind: "message", T: Reference },
    { no: 12, name: "created", kind: "message", T: DateTime },
    { no: 13, name: "insurer", kind: "message", T: Reference },
    { no: 14, name: "request_provider", kind: "message", T: Reference },
    { no: 15, name: "request_organization", kind: "message", T: Reference },
    { no: 16, name: "request", kind: "message", T: Reference },
    { no: 17, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 18, name: "disposition", kind: "message", T: String },
    { no: 19, name: "payee_type", kind: "message", T: CodeableConcept },
    { no: 20, name: "item", kind: "message", T: ClaimResponse_Item, repeated: true },
    { no: 21, name: "add_item", kind: "message", T: ClaimResponse_AddedItem, repeated: true },
    { no: 22, name: "error", kind: "message", T: ClaimResponse_Error, repeated: true },
    { no: 23, name: "total_cost", kind: "message", T: Money },
    { no: 24, name: "unalloc_deductable", kind: "message", T: Money },
    { no: 25, name: "total_benefit", kind: "message", T: Money },
    { no: 26, name: "payment", kind: "message", T: ClaimResponse_Payment },
    { no: 27, name: "reserved", kind: "message", T: Coding },
    { no: 28, name: "form", kind: "message", T: CodeableConcept },
    { no: 29, name: "process_note", kind: "message", T: ClaimResponse_Note, repeated: true },
    { no: 30, name: "communication_request", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "insurance", kind: "message", T: ClaimResponse_Insurance, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse {
    return new ClaimResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse {
    return new ClaimResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse {
    return new ClaimResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse | PlainMessage<ClaimResponse> | undefined, b: ClaimResponse | PlainMessage<ClaimResponse> | undefined): boolean {
    return proto3.util.equals(ClaimResponse, a, b);
  }
}

/**
 * Line items
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Item
 */
export class ClaimResponse_Item extends Message<ClaimResponse_Item> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence_link_id = 4;
   */
  sequenceLinkId?: PositiveInt;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 5;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.Adjudication adjudication = 6;
   */
  adjudication: ClaimResponse_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail detail = 7;
   */
  detail: ClaimResponse_Item_ItemDetail[] = [];

  constructor(data?: PartialMessage<ClaimResponse_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: PositiveInt },
    { no: 5, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "adjudication", kind: "message", T: ClaimResponse_Item_Adjudication, repeated: true },
    { no: 7, name: "detail", kind: "message", T: ClaimResponse_Item_ItemDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Item {
    return new ClaimResponse_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Item {
    return new ClaimResponse_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Item {
    return new ClaimResponse_Item().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Item | PlainMessage<ClaimResponse_Item> | undefined, b: ClaimResponse_Item | PlainMessage<ClaimResponse_Item> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Item, a, b);
  }
}

/**
 * Adjudication details
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Item.Adjudication
 */
export class ClaimResponse_Item_Adjudication extends Message<ClaimResponse_Item_Adjudication> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Adjudication category such as co-pay, eligible, benefit, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Explanation of Adjudication outcome
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  /**
   * Monetary amount
   *
   * @generated from field: google.fhir.stu3.proto.Money amount = 6;
   */
  amount?: Money;

  /**
   * Non-monetary value
   *
   * @generated from field: google.fhir.stu3.proto.Decimal value = 7;
   */
  value?: Decimal;

  constructor(data?: PartialMessage<ClaimResponse_Item_Adjudication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Item.Adjudication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
    { no: 6, name: "amount", kind: "message", T: Money },
    { no: 7, name: "value", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Item_Adjudication {
    return new ClaimResponse_Item_Adjudication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Item_Adjudication {
    return new ClaimResponse_Item_Adjudication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Item_Adjudication {
    return new ClaimResponse_Item_Adjudication().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Item_Adjudication | PlainMessage<ClaimResponse_Item_Adjudication> | undefined, b: ClaimResponse_Item_Adjudication | PlainMessage<ClaimResponse_Item_Adjudication> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Item_Adjudication, a, b);
  }
}

/**
 * Detail line items
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail
 */
export class ClaimResponse_Item_ItemDetail extends Message<ClaimResponse_Item_ItemDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence_link_id = 4;
   */
  sequenceLinkId?: PositiveInt;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 5;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Detail level adjudication details
   *
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.Adjudication adjudication = 6;
   */
  adjudication: ClaimResponse_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail.SubDetail sub_detail = 7;
   */
  subDetail: ClaimResponse_Item_ItemDetail_SubDetail[] = [];

  constructor(data?: PartialMessage<ClaimResponse_Item_ItemDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: PositiveInt },
    { no: 5, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "adjudication", kind: "message", T: ClaimResponse_Item_Adjudication, repeated: true },
    { no: 7, name: "sub_detail", kind: "message", T: ClaimResponse_Item_ItemDetail_SubDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Item_ItemDetail {
    return new ClaimResponse_Item_ItemDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Item_ItemDetail {
    return new ClaimResponse_Item_ItemDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Item_ItemDetail {
    return new ClaimResponse_Item_ItemDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Item_ItemDetail | PlainMessage<ClaimResponse_Item_ItemDetail> | undefined, b: ClaimResponse_Item_ItemDetail | PlainMessage<ClaimResponse_Item_ItemDetail> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Item_ItemDetail, a, b);
  }
}

/**
 * Subdetail line items
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail.SubDetail
 */
export class ClaimResponse_Item_ItemDetail_SubDetail extends Message<ClaimResponse_Item_ItemDetail_SubDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence_link_id = 4;
   */
  sequenceLinkId?: PositiveInt;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 5;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Subdetail level adjudication details
   *
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.Adjudication adjudication = 6;
   */
  adjudication: ClaimResponse_Item_Adjudication[] = [];

  constructor(data?: PartialMessage<ClaimResponse_Item_ItemDetail_SubDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Item.ItemDetail.SubDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: PositiveInt },
    { no: 5, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "adjudication", kind: "message", T: ClaimResponse_Item_Adjudication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Item_ItemDetail_SubDetail {
    return new ClaimResponse_Item_ItemDetail_SubDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Item_ItemDetail_SubDetail {
    return new ClaimResponse_Item_ItemDetail_SubDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Item_ItemDetail_SubDetail {
    return new ClaimResponse_Item_ItemDetail_SubDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Item_ItemDetail_SubDetail | PlainMessage<ClaimResponse_Item_ItemDetail_SubDetail> | undefined, b: ClaimResponse_Item_ItemDetail_SubDetail | PlainMessage<ClaimResponse_Item_ItemDetail_SubDetail> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Item_ItemDetail_SubDetail, a, b);
  }
}

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.AddedItem
 */
export class ClaimResponse_AddedItem extends Message<ClaimResponse_AddedItem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instances
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt sequence_link_id = 4;
   */
  sequenceLinkId: PositiveInt[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Group, Service or Product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 7;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Professional fee or Product charge
   *
   * @generated from field: google.fhir.stu3.proto.Money fee = 9;
   */
  fee?: Money;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 10;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items adjudication
   *
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.Adjudication adjudication = 11;
   */
  adjudication: ClaimResponse_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.AddedItem.AddedItemsDetail detail = 12;
   */
  detail: ClaimResponse_AddedItem_AddedItemsDetail[] = [];

  constructor(data?: PartialMessage<ClaimResponse_AddedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.AddedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 5, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 6, name: "category", kind: "message", T: CodeableConcept },
    { no: 7, name: "service", kind: "message", T: CodeableConcept },
    { no: 8, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "fee", kind: "message", T: Money },
    { no: 10, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 11, name: "adjudication", kind: "message", T: ClaimResponse_Item_Adjudication, repeated: true },
    { no: 12, name: "detail", kind: "message", T: ClaimResponse_AddedItem_AddedItemsDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_AddedItem {
    return new ClaimResponse_AddedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_AddedItem {
    return new ClaimResponse_AddedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_AddedItem {
    return new ClaimResponse_AddedItem().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_AddedItem | PlainMessage<ClaimResponse_AddedItem> | undefined, b: ClaimResponse_AddedItem | PlainMessage<ClaimResponse_AddedItem> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_AddedItem, a, b);
  }
}

/**
 * Added items details
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.AddedItem.AddedItemsDetail
 */
export class ClaimResponse_AddedItem_AddedItemsDetail extends Message<ClaimResponse_AddedItem_AddedItemsDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 4;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 5;
   */
  category?: CodeableConcept;

  /**
   * Service or Product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 6;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 7;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Professional fee or Product charge
   *
   * @generated from field: google.fhir.stu3.proto.Money fee = 8;
   */
  fee?: Money;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 9;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items detail adjudication
   *
   * @generated from field: repeated google.fhir.stu3.proto.ClaimResponse.Item.Adjudication adjudication = 10;
   */
  adjudication: ClaimResponse_Item_Adjudication[] = [];

  constructor(data?: PartialMessage<ClaimResponse_AddedItem_AddedItemsDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.AddedItem.AddedItemsDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 5, name: "category", kind: "message", T: CodeableConcept },
    { no: 6, name: "service", kind: "message", T: CodeableConcept },
    { no: 7, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "fee", kind: "message", T: Money },
    { no: 9, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 10, name: "adjudication", kind: "message", T: ClaimResponse_Item_Adjudication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_AddedItem_AddedItemsDetail {
    return new ClaimResponse_AddedItem_AddedItemsDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_AddedItem_AddedItemsDetail {
    return new ClaimResponse_AddedItem_AddedItemsDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_AddedItem_AddedItemsDetail {
    return new ClaimResponse_AddedItem_AddedItemsDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_AddedItem_AddedItemsDetail | PlainMessage<ClaimResponse_AddedItem_AddedItemsDetail> | undefined, b: ClaimResponse_AddedItem_AddedItemsDetail | PlainMessage<ClaimResponse_AddedItem_AddedItemsDetail> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_AddedItem_AddedItemsDetail, a, b);
  }
}

/**
 * Processing errors
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Error
 */
export class ClaimResponse_Error extends Message<ClaimResponse_Error> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Item sequence number
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence_link_id = 4;
   */
  sequenceLinkId?: PositiveInt;

  /**
   * Detail sequence number
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt detail_sequence_link_id = 5;
   */
  detailSequenceLinkId?: PositiveInt;

  /**
   * Subdetail sequence number
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt subdetail_sequence_link_id = 6;
   */
  subdetailSequenceLinkId?: PositiveInt;

  /**
   * Error code detailing processing issues
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 7;
   */
  code?: CodeableConcept;

  constructor(data?: PartialMessage<ClaimResponse_Error>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Error";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: PositiveInt },
    { no: 5, name: "detail_sequence_link_id", kind: "message", T: PositiveInt },
    { no: 6, name: "subdetail_sequence_link_id", kind: "message", T: PositiveInt },
    { no: 7, name: "code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Error {
    return new ClaimResponse_Error().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Error {
    return new ClaimResponse_Error().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Error {
    return new ClaimResponse_Error().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Error | PlainMessage<ClaimResponse_Error> | undefined, b: ClaimResponse_Error | PlainMessage<ClaimResponse_Error> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Error, a, b);
  }
}

/**
 * Payment details, if paid
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Payment
 */
export class ClaimResponse_Payment extends Message<ClaimResponse_Payment> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Partial or Complete
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Payment adjustment for non-Claim issues
   *
   * @generated from field: google.fhir.stu3.proto.Money adjustment = 5;
   */
  adjustment?: Money;

  /**
   * Explanation for the non-claim adjustment
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept adjustment_reason = 6;
   */
  adjustmentReason?: CodeableConcept;

  /**
   * Expected data of Payment
   *
   * @generated from field: google.fhir.stu3.proto.Date date = 7;
   */
  date?: Date;

  /**
   * Payable amount after adjustment
   *
   * @generated from field: google.fhir.stu3.proto.Money amount = 8;
   */
  amount?: Money;

  /**
   * Identifier of the payment instrument
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  constructor(data?: PartialMessage<ClaimResponse_Payment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Payment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "adjustment", kind: "message", T: Money },
    { no: 6, name: "adjustment_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "date", kind: "message", T: Date },
    { no: 8, name: "amount", kind: "message", T: Money },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Payment {
    return new ClaimResponse_Payment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Payment {
    return new ClaimResponse_Payment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Payment {
    return new ClaimResponse_Payment().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Payment | PlainMessage<ClaimResponse_Payment> | undefined, b: ClaimResponse_Payment | PlainMessage<ClaimResponse_Payment> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Payment, a, b);
  }
}

/**
 * Processing notes
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Note
 */
export class ClaimResponse_Note extends Message<ClaimResponse_Note> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Sequence Number for this note
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt number = 4;
   */
  number?: PositiveInt;

  /**
   * display | print | printoper
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Note explanatory text
   *
   * @generated from field: google.fhir.stu3.proto.String text = 6;
   */
  text?: String;

  /**
   * Language if different from the resource
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept language = 7;
   */
  language?: CodeableConcept;

  constructor(data?: PartialMessage<ClaimResponse_Note>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Note";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "number", kind: "message", T: PositiveInt },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "text", kind: "message", T: String },
    { no: 7, name: "language", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Note {
    return new ClaimResponse_Note().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Note {
    return new ClaimResponse_Note().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Note {
    return new ClaimResponse_Note().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Note | PlainMessage<ClaimResponse_Note> | undefined, b: ClaimResponse_Note | PlainMessage<ClaimResponse_Note> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Note, a, b);
  }
}

/**
 * Insurance or medical plan
 *
 * @generated from message google.fhir.stu3.proto.ClaimResponse.Insurance
 */
export class ClaimResponse_Insurance extends Message<ClaimResponse_Insurance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance identifier
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Is the focal Coverage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean focal = 5;
   */
  focal?: Boolean;

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 6;
   */
  coverage?: Reference;

  /**
   * Business agreement
   *
   * @generated from field: google.fhir.stu3.proto.String business_arrangement = 7;
   */
  businessArrangement?: String;

  /**
   * Pre-Authorization/Determination Reference
   *
   * @generated from field: repeated google.fhir.stu3.proto.String pre_auth_ref = 8;
   */
  preAuthRef: String[] = [];

  /**
   * Adjudication results
   *
   * @generated from field: google.fhir.stu3.proto.Reference claim_response = 9;
   */
  claimResponse?: Reference;

  constructor(data?: PartialMessage<ClaimResponse_Insurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimResponse.Insurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "focal", kind: "message", T: Boolean },
    { no: 6, name: "coverage", kind: "message", T: Reference },
    { no: 7, name: "business_arrangement", kind: "message", T: String },
    { no: 8, name: "pre_auth_ref", kind: "message", T: String, repeated: true },
    { no: 9, name: "claim_response", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimResponse_Insurance {
    return new ClaimResponse_Insurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimResponse_Insurance {
    return new ClaimResponse_Insurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimResponse_Insurance {
    return new ClaimResponse_Insurance().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimResponse_Insurance | PlainMessage<ClaimResponse_Insurance> | undefined, b: ClaimResponse_Insurance | PlainMessage<ClaimResponse_Insurance> | undefined): boolean {
    return proto3.util.equals(ClaimResponse_Insurance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ClinicalImpression, last updated
 * 2017-04-19T07:44:43.294+10:00. A clinical assessment performed when planning
 * treatments and management strategies for a patient. See
 * http://hl7.org/fhir/StructureDefinition/ClinicalImpression
 *
 * @generated from message google.fhir.stu3.proto.ClinicalImpression
 */
export class ClinicalImpression extends Message<ClinicalImpression> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * draft | completed | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ClinicalImpressionStatusCode status = 10;
   */
  status?: ClinicalImpressionStatusCode;

  /**
   * Kind of assessment performed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 11;
   */
  code?: CodeableConcept;

  /**
   * Why/how the assessment was performed
   *
   * @generated from field: google.fhir.stu3.proto.String description = 12;
   */
  description?: String;

  /**
   * Patient or group assessed
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Encounter or Episode created from
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 14;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ClinicalImpression.Effective effective = 15;
   */
  effective?: ClinicalImpression_Effective;

  /**
   * When the assessment was documented
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * The clinician performing the assessment
   *
   * @generated from field: google.fhir.stu3.proto.Reference assessor = 17;
   */
  assessor?: Reference;

  /**
   * Reference to last assessment
   *
   * @generated from field: google.fhir.stu3.proto.Reference previous = 18;
   */
  previous?: Reference;

  /**
   * Relevant impressions of patient state
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference problem = 19;
   */
  problem: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClinicalImpression.Investigation investigation = 20;
   */
  investigation: ClinicalImpression_Investigation[] = [];

  /**
   * Clinical Protocol followed
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri protocol = 21;
   */
  protocol: Uri[] = [];

  /**
   * Summary of the assessment
   *
   * @generated from field: google.fhir.stu3.proto.String summary = 22;
   */
  summary?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ClinicalImpression.Finding finding = 23;
   */
  finding: ClinicalImpression_Finding[] = [];

  /**
   * Estimate of likely outcome
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept prognosis_codeable_concept = 24;
   */
  prognosisCodeableConcept: CodeableConcept[] = [];

  /**
   * RiskAssessment expressing likely outcome
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference prognosis_reference = 25;
   */
  prognosisReference: Reference[] = [];

  /**
   * Action taken as part of assessment procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference action = 26;
   */
  action: Reference[] = [];

  /**
   * Comments made about the ClinicalImpression
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 27;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<ClinicalImpression>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClinicalImpression";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: ClinicalImpressionStatusCode },
    { no: 11, name: "code", kind: "message", T: CodeableConcept },
    { no: 12, name: "description", kind: "message", T: String },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "context", kind: "message", T: Reference },
    { no: 15, name: "effective", kind: "message", T: ClinicalImpression_Effective },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "assessor", kind: "message", T: Reference },
    { no: 18, name: "previous", kind: "message", T: Reference },
    { no: 19, name: "problem", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "investigation", kind: "message", T: ClinicalImpression_Investigation, repeated: true },
    { no: 21, name: "protocol", kind: "message", T: Uri, repeated: true },
    { no: 22, name: "summary", kind: "message", T: String },
    { no: 23, name: "finding", kind: "message", T: ClinicalImpression_Finding, repeated: true },
    { no: 24, name: "prognosis_codeable_concept", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "prognosis_reference", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "action", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClinicalImpression {
    return new ClinicalImpression().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClinicalImpression {
    return new ClinicalImpression().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClinicalImpression {
    return new ClinicalImpression().fromJsonString(jsonString, options);
  }

  static equals(a: ClinicalImpression | PlainMessage<ClinicalImpression> | undefined, b: ClinicalImpression | PlainMessage<ClinicalImpression> | undefined): boolean {
    return proto3.util.equals(ClinicalImpression, a, b);
  }
}

/**
 * Time of assessment
 *
 * @generated from message google.fhir.stu3.proto.ClinicalImpression.Effective
 */
export class ClinicalImpression_Effective extends Message<ClinicalImpression_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ClinicalImpression.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ClinicalImpression_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClinicalImpression.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClinicalImpression_Effective {
    return new ClinicalImpression_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClinicalImpression_Effective {
    return new ClinicalImpression_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClinicalImpression_Effective {
    return new ClinicalImpression_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: ClinicalImpression_Effective | PlainMessage<ClinicalImpression_Effective> | undefined, b: ClinicalImpression_Effective | PlainMessage<ClinicalImpression_Effective> | undefined): boolean {
    return proto3.util.equals(ClinicalImpression_Effective, a, b);
  }
}

/**
 * One or more sets of investigations (signs, symptions, etc.)
 *
 * @generated from message google.fhir.stu3.proto.ClinicalImpression.Investigation
 */
export class ClinicalImpression_Investigation extends Message<ClinicalImpression_Investigation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A name/code for the set
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Record of a specific investigation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference item = 5;
   */
  item: Reference[] = [];

  constructor(data?: PartialMessage<ClinicalImpression_Investigation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClinicalImpression.Investigation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "item", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClinicalImpression_Investigation {
    return new ClinicalImpression_Investigation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClinicalImpression_Investigation {
    return new ClinicalImpression_Investigation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClinicalImpression_Investigation {
    return new ClinicalImpression_Investigation().fromJsonString(jsonString, options);
  }

  static equals(a: ClinicalImpression_Investigation | PlainMessage<ClinicalImpression_Investigation> | undefined, b: ClinicalImpression_Investigation | PlainMessage<ClinicalImpression_Investigation> | undefined): boolean {
    return proto3.util.equals(ClinicalImpression_Investigation, a, b);
  }
}

/**
 * Possible or likely findings and diagnoses
 *
 * @generated from message google.fhir.stu3.proto.ClinicalImpression.Finding
 */
export class ClinicalImpression_Finding extends Message<ClinicalImpression_Finding> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ClinicalImpression.Finding.Item item = 4;
   */
  item?: ClinicalImpression_Finding_Item;

  /**
   * Which investigations support finding
   *
   * @generated from field: google.fhir.stu3.proto.String basis = 5;
   */
  basis?: String;

  constructor(data?: PartialMessage<ClinicalImpression_Finding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClinicalImpression.Finding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: ClinicalImpression_Finding_Item },
    { no: 5, name: "basis", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClinicalImpression_Finding {
    return new ClinicalImpression_Finding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClinicalImpression_Finding {
    return new ClinicalImpression_Finding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClinicalImpression_Finding {
    return new ClinicalImpression_Finding().fromJsonString(jsonString, options);
  }

  static equals(a: ClinicalImpression_Finding | PlainMessage<ClinicalImpression_Finding> | undefined, b: ClinicalImpression_Finding | PlainMessage<ClinicalImpression_Finding> | undefined): boolean {
    return proto3.util.equals(ClinicalImpression_Finding, a, b);
  }
}

/**
 * What was found
 *
 * @generated from message google.fhir.stu3.proto.ClinicalImpression.Finding.Item
 */
export class ClinicalImpression_Finding_Item extends Message<ClinicalImpression_Finding_Item> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ClinicalImpression.Finding.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ClinicalImpression_Finding_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClinicalImpression.Finding.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClinicalImpression_Finding_Item {
    return new ClinicalImpression_Finding_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClinicalImpression_Finding_Item {
    return new ClinicalImpression_Finding_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClinicalImpression_Finding_Item {
    return new ClinicalImpression_Finding_Item().fromJsonString(jsonString, options);
  }

  static equals(a: ClinicalImpression_Finding_Item | PlainMessage<ClinicalImpression_Finding_Item> | undefined, b: ClinicalImpression_Finding_Item | PlainMessage<ClinicalImpression_Finding_Item> | undefined): boolean {
    return proto3.util.equals(ClinicalImpression_Finding_Item, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CodeSystem, last updated
 * 2017-04-19T07:44:43.294+10:00. A set of codes drawn from one or more code
 * systems. See http://hl7.org/fhir/StructureDefinition/CodeSystem
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem
 */
export class CodeSystem extends Message<CodeSystem> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this code system (globally unique) (Coding.system)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the code system
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Business version of the code system (Coding.version)
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this code system (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this code system (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the code system
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for code system (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this code system is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * If code comparison is case sensitive
   *
   * @generated from field: google.fhir.stu3.proto.Boolean case_sensitive = 24;
   */
  caseSensitive?: Boolean;

  /**
   * Canonical URL for value set with entire code system
   *
   * @generated from field: google.fhir.stu3.proto.Uri value_set = 25;
   */
  valueSet?: Uri;

  /**
   * grouped-by | is-a | part-of | classified-with
   *
   * @generated from field: google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode hierarchy_meaning = 26;
   */
  hierarchyMeaning?: CodeSystemHierarchyMeaningCode;

  /**
   * If code system defines a post-composition grammar
   *
   * @generated from field: google.fhir.stu3.proto.Boolean compositional = 27;
   */
  compositional?: Boolean;

  /**
   * If definitions are not stable
   *
   * @generated from field: google.fhir.stu3.proto.Boolean version_needed = 28;
   */
  versionNeeded?: Boolean;

  /**
   * not-present | example | fragment | complete
   *
   * @generated from field: google.fhir.stu3.proto.CodeSystemContentModeCode content = 29;
   */
  content?: CodeSystemContentModeCode;

  /**
   * Total concepts in the code system
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt count = 30;
   */
  count?: UnsignedInt;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodeSystem.Filter filter = 31;
   */
  filter: CodeSystem_Filter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodeSystem.Property property = 32;
   */
  property: CodeSystem_Property[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodeSystem.ConceptDefinition concept = 33;
   */
  concept: CodeSystem_ConceptDefinition[] = [];

  constructor(data?: PartialMessage<CodeSystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "case_sensitive", kind: "message", T: Boolean },
    { no: 25, name: "value_set", kind: "message", T: Uri },
    { no: 26, name: "hierarchy_meaning", kind: "message", T: CodeSystemHierarchyMeaningCode },
    { no: 27, name: "compositional", kind: "message", T: Boolean },
    { no: 28, name: "version_needed", kind: "message", T: Boolean },
    { no: 29, name: "content", kind: "message", T: CodeSystemContentModeCode },
    { no: 30, name: "count", kind: "message", T: UnsignedInt },
    { no: 31, name: "filter", kind: "message", T: CodeSystem_Filter, repeated: true },
    { no: 32, name: "property", kind: "message", T: CodeSystem_Property, repeated: true },
    { no: 33, name: "concept", kind: "message", T: CodeSystem_ConceptDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem {
    return new CodeSystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem {
    return new CodeSystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem {
    return new CodeSystem().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem | PlainMessage<CodeSystem> | undefined, b: CodeSystem | PlainMessage<CodeSystem> | undefined): boolean {
    return proto3.util.equals(CodeSystem, a, b);
  }
}

/**
 * Filter that can be used in a value set
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem.Filter
 */
export class CodeSystem_Filter extends Message<CodeSystem_Filter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies the filter
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * How or why the filter is used
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Operators that can be used with filter
   *
   * @generated from field: repeated google.fhir.stu3.proto.FilterOperatorCode operator = 6;
   */
  operator: FilterOperatorCode[] = [];

  /**
   * What to use for the value
   *
   * @generated from field: google.fhir.stu3.proto.String value = 7;
   */
  value?: String;

  constructor(data?: PartialMessage<CodeSystem_Filter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem.Filter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "operator", kind: "message", T: FilterOperatorCode, repeated: true },
    { no: 7, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem_Filter {
    return new CodeSystem_Filter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem_Filter {
    return new CodeSystem_Filter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem_Filter {
    return new CodeSystem_Filter().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem_Filter | PlainMessage<CodeSystem_Filter> | undefined, b: CodeSystem_Filter | PlainMessage<CodeSystem_Filter> | undefined): boolean {
    return proto3.util.equals(CodeSystem_Filter, a, b);
  }
}

/**
 * Additional information supplied about each concept
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem.Property
 */
export class CodeSystem_Property extends Message<CodeSystem_Property> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies the property on the concepts, and when referred to in
   * operations
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Formal identifier for the property
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * Why the property is defined, and/or what it conveys
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * code | Coding | string | integer | boolean | dateTime
   *
   * @generated from field: google.fhir.stu3.proto.PropertyTypeCode type = 7;
   */
  type?: PropertyTypeCode;

  constructor(data?: PartialMessage<CodeSystem_Property>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem.Property";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "type", kind: "message", T: PropertyTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem_Property {
    return new CodeSystem_Property().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem_Property {
    return new CodeSystem_Property().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem_Property {
    return new CodeSystem_Property().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem_Property | PlainMessage<CodeSystem_Property> | undefined, b: CodeSystem_Property | PlainMessage<CodeSystem_Property> | undefined): boolean {
    return proto3.util.equals(CodeSystem_Property, a, b);
  }
}

/**
 * Concepts in the code system
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem.ConceptDefinition
 */
export class CodeSystem_ConceptDefinition extends Message<CodeSystem_ConceptDefinition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies concept
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Text to display to the user
   *
   * @generated from field: google.fhir.stu3.proto.String display = 5;
   */
  display?: String;

  /**
   * Formal definition
   *
   * @generated from field: google.fhir.stu3.proto.String definition = 6;
   */
  definition?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodeSystem.ConceptDefinition.Designation designation = 7;
   */
  designation: CodeSystem_ConceptDefinition_Designation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty property = 8;
   */
  property: CodeSystem_ConceptDefinition_ConceptProperty[] = [];

  /**
   * Child Concepts (is-a/contains/categorizes)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeSystem.ConceptDefinition concept = 9;
   */
  concept: CodeSystem_ConceptDefinition[] = [];

  constructor(data?: PartialMessage<CodeSystem_ConceptDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem.ConceptDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "definition", kind: "message", T: String },
    { no: 7, name: "designation", kind: "message", T: CodeSystem_ConceptDefinition_Designation, repeated: true },
    { no: 8, name: "property", kind: "message", T: CodeSystem_ConceptDefinition_ConceptProperty, repeated: true },
    { no: 9, name: "concept", kind: "message", T: CodeSystem_ConceptDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem_ConceptDefinition {
    return new CodeSystem_ConceptDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition {
    return new CodeSystem_ConceptDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition {
    return new CodeSystem_ConceptDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem_ConceptDefinition | PlainMessage<CodeSystem_ConceptDefinition> | undefined, b: CodeSystem_ConceptDefinition | PlainMessage<CodeSystem_ConceptDefinition> | undefined): boolean {
    return proto3.util.equals(CodeSystem_ConceptDefinition, a, b);
  }
}

/**
 * Additional representations for the concept
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem.ConceptDefinition.Designation
 */
export class CodeSystem_ConceptDefinition_Designation extends Message<CodeSystem_ConceptDefinition_Designation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Details how this designation would be used
   *
   * @generated from field: google.fhir.stu3.proto.Coding use = 5;
   */
  use?: Coding;

  /**
   * The text value for this designation
   *
   * @generated from field: google.fhir.stu3.proto.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<CodeSystem_ConceptDefinition_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem.ConceptDefinition.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "use", kind: "message", T: Coding },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem_ConceptDefinition_Designation {
    return new CodeSystem_ConceptDefinition_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition_Designation {
    return new CodeSystem_ConceptDefinition_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition_Designation {
    return new CodeSystem_ConceptDefinition_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem_ConceptDefinition_Designation | PlainMessage<CodeSystem_ConceptDefinition_Designation> | undefined, b: CodeSystem_ConceptDefinition_Designation | PlainMessage<CodeSystem_ConceptDefinition_Designation> | undefined): boolean {
    return proto3.util.equals(CodeSystem_ConceptDefinition_Designation, a, b);
  }
}

/**
 * Property value for the concept
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty
 */
export class CodeSystem_ConceptDefinition_ConceptProperty extends Message<CodeSystem_ConceptDefinition_ConceptProperty> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to CodeSystem.property.code
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * @generated from field: google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty.Value value = 5;
   */
  value?: CodeSystem_ConceptDefinition_ConceptProperty_Value;

  constructor(data?: PartialMessage<CodeSystem_ConceptDefinition_ConceptProperty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "value", kind: "message", T: CodeSystem_ConceptDefinition_ConceptProperty_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem_ConceptDefinition_ConceptProperty {
    return new CodeSystem_ConceptDefinition_ConceptProperty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition_ConceptProperty {
    return new CodeSystem_ConceptDefinition_ConceptProperty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition_ConceptProperty {
    return new CodeSystem_ConceptDefinition_ConceptProperty().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem_ConceptDefinition_ConceptProperty | PlainMessage<CodeSystem_ConceptDefinition_ConceptProperty> | undefined, b: CodeSystem_ConceptDefinition_ConceptProperty | PlainMessage<CodeSystem_ConceptDefinition_ConceptProperty> | undefined): boolean {
    return proto3.util.equals(CodeSystem_ConceptDefinition_ConceptProperty, a, b);
  }
}

/**
 * Value of the property for this concept
 *
 * @generated from message google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty.Value
 */
export class CodeSystem_ConceptDefinition_ConceptProperty_Value extends Message<CodeSystem_ConceptDefinition_ConceptProperty_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 1;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 2;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 4;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 5;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CodeSystem_ConceptDefinition_ConceptProperty_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystem.ConceptDefinition.ConceptProperty.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 2, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 5, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystem_ConceptDefinition_ConceptProperty_Value {
    return new CodeSystem_ConceptDefinition_ConceptProperty_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition_ConceptProperty_Value {
    return new CodeSystem_ConceptDefinition_ConceptProperty_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystem_ConceptDefinition_ConceptProperty_Value {
    return new CodeSystem_ConceptDefinition_ConceptProperty_Value().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystem_ConceptDefinition_ConceptProperty_Value | PlainMessage<CodeSystem_ConceptDefinition_ConceptProperty_Value> | undefined, b: CodeSystem_ConceptDefinition_ConceptProperty_Value | PlainMessage<CodeSystem_ConceptDefinition_ConceptProperty_Value> | undefined): boolean {
    return proto3.util.equals(CodeSystem_ConceptDefinition_ConceptProperty_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Communication, last updated
 * 2017-04-19T07:44:43.294+10:00. A record of information transmitted from a
 * sender to a receiver. See
 * http://hl7.org/fhir/StructureDefinition/Communication
 *
 * @generated from message google.fhir.stu3.proto.Communication
 */
export class Communication extends Message<Communication> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * Request fulfilled by this communication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of this action
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * preparation | in-progress | suspended | aborted | completed |
   * entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.EventStatusCode status = 13;
   */
  status?: EventStatusCode;

  /**
   * Communication did not occur
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_done = 14;
   */
  notDone?: Boolean;

  /**
   * Why communication did not occur
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
   */
  notDoneReason?: CodeableConcept;

  /**
   * Message category
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 16;
   */
  category: CodeableConcept[] = [];

  /**
   * A channel of communication
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept medium = 17;
   */
  medium: CodeableConcept[] = [];

  /**
   * Focus of message
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Message recipient
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference recipient = 19;
   */
  recipient: Reference[] = [];

  /**
   * Focal resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference topic = 20;
   */
  topic: Reference[] = [];

  /**
   * Encounter or episode leading to message
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 21;
   */
  context?: Reference;

  /**
   * When sent
   *
   * @generated from field: google.fhir.stu3.proto.DateTime sent = 22;
   */
  sent?: DateTime;

  /**
   * When received
   *
   * @generated from field: google.fhir.stu3.proto.DateTime received = 23;
   */
  received?: DateTime;

  /**
   * Message sender
   *
   * @generated from field: google.fhir.stu3.proto.Reference sender = 24;
   */
  sender?: Reference;

  /**
   * Indication for message
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 25;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why was communication done?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 26;
   */
  reasonReference: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Communication.Payload payload = 27;
   */
  payload: Communication_Payload[] = [];

  /**
   * Comments made about the communication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 28;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<Communication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Communication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: EventStatusCode },
    { no: 14, name: "not_done", kind: "message", T: Boolean },
    { no: 15, name: "not_done_reason", kind: "message", T: CodeableConcept },
    { no: 16, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "medium", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "recipient", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "topic", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "context", kind: "message", T: Reference },
    { no: 22, name: "sent", kind: "message", T: DateTime },
    { no: 23, name: "received", kind: "message", T: DateTime },
    { no: 24, name: "sender", kind: "message", T: Reference },
    { no: 25, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "payload", kind: "message", T: Communication_Payload, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Communication {
    return new Communication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Communication {
    return new Communication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Communication {
    return new Communication().fromJsonString(jsonString, options);
  }

  static equals(a: Communication | PlainMessage<Communication> | undefined, b: Communication | PlainMessage<Communication> | undefined): boolean {
    return proto3.util.equals(Communication, a, b);
  }
}

/**
 * Message payload
 *
 * @generated from message google.fhir.stu3.proto.Communication.Payload
 */
export class Communication_Payload extends Message<Communication_Payload> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Communication.Payload.Content content = 4;
   */
  content?: Communication_Payload_Content;

  constructor(data?: PartialMessage<Communication_Payload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Communication.Payload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "content", kind: "message", T: Communication_Payload_Content },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Communication_Payload {
    return new Communication_Payload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Communication_Payload {
    return new Communication_Payload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Communication_Payload {
    return new Communication_Payload().fromJsonString(jsonString, options);
  }

  static equals(a: Communication_Payload | PlainMessage<Communication_Payload> | undefined, b: Communication_Payload | PlainMessage<Communication_Payload> | undefined): boolean {
    return proto3.util.equals(Communication_Payload, a, b);
  }
}

/**
 * Message part content
 *
 * @generated from message google.fhir.stu3.proto.Communication.Payload.Content
 */
export class Communication_Payload_Content extends Message<Communication_Payload_Content> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Communication.Payload.Content.content
   */
  content: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 2;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Communication_Payload_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Communication.Payload.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "content" },
    { no: 2, name: "attachment", kind: "message", T: Attachment, oneof: "content" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "content" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Communication_Payload_Content {
    return new Communication_Payload_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Communication_Payload_Content {
    return new Communication_Payload_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Communication_Payload_Content {
    return new Communication_Payload_Content().fromJsonString(jsonString, options);
  }

  static equals(a: Communication_Payload_Content | PlainMessage<Communication_Payload_Content> | undefined, b: Communication_Payload_Content | PlainMessage<Communication_Payload_Content> | undefined): boolean {
    return proto3.util.equals(Communication_Payload_Content, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CommunicationRequest, last
 * updated 2017-04-19T07:44:43.294+10:00. A request for information to be sent
 * to a receiver. See
 * http://hl7.org/fhir/StructureDefinition/CommunicationRequest
 *
 * @generated from message google.fhir.stu3.proto.CommunicationRequest
 */
export class CommunicationRequest extends Message<CommunicationRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan or proposal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * Request(s) replaced by this request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 11;
   */
  replaces: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 12;
   */
  groupIdentifier?: Identifier;

  /**
   * draft | active | suspended | cancelled | completed | entered-in-error |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode status = 13;
   */
  status?: RequestStatusCode;

  /**
   * Message category
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * Message urgency
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 15;
   */
  priority?: RequestPriorityCode;

  /**
   * A channel of communication
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept medium = 16;
   */
  medium: CodeableConcept[] = [];

  /**
   * Focus of message
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 17;
   */
  subject?: Reference;

  /**
   * Message recipient
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference recipient = 18;
   */
  recipient: Reference[] = [];

  /**
   * Focal resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference topic = 19;
   */
  topic: Reference[] = [];

  /**
   * Encounter or episode leading to message
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 20;
   */
  context?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CommunicationRequest.Payload payload = 21;
   */
  payload: CommunicationRequest_Payload[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.CommunicationRequest.Occurrence occurrence = 22;
   */
  occurrence?: CommunicationRequest_Occurrence;

  /**
   * When request transitioned to being actionable
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 23;
   */
  authoredOn?: DateTime;

  /**
   * Message sender
   *
   * @generated from field: google.fhir.stu3.proto.Reference sender = 24;
   */
  sender?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.CommunicationRequest.Requester requester = 25;
   */
  requester?: CommunicationRequest_Requester;

  /**
   * Why is communication needed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 26;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why is communication needed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 27;
   */
  reasonReference: Reference[] = [];

  /**
   * Comments made about communication request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 28;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<CommunicationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "group_identifier", kind: "message", T: Identifier },
    { no: 13, name: "status", kind: "message", T: RequestStatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 16, name: "medium", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "subject", kind: "message", T: Reference },
    { no: 18, name: "recipient", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "topic", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "context", kind: "message", T: Reference },
    { no: 21, name: "payload", kind: "message", T: CommunicationRequest_Payload, repeated: true },
    { no: 22, name: "occurrence", kind: "message", T: CommunicationRequest_Occurrence },
    { no: 23, name: "authored_on", kind: "message", T: DateTime },
    { no: 24, name: "sender", kind: "message", T: Reference },
    { no: 25, name: "requester", kind: "message", T: CommunicationRequest_Requester },
    { no: 26, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationRequest {
    return new CommunicationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationRequest {
    return new CommunicationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationRequest {
    return new CommunicationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationRequest | PlainMessage<CommunicationRequest> | undefined, b: CommunicationRequest | PlainMessage<CommunicationRequest> | undefined): boolean {
    return proto3.util.equals(CommunicationRequest, a, b);
  }
}

/**
 * Message payload
 *
 * @generated from message google.fhir.stu3.proto.CommunicationRequest.Payload
 */
export class CommunicationRequest_Payload extends Message<CommunicationRequest_Payload> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.CommunicationRequest.Payload.Content content = 4;
   */
  content?: CommunicationRequest_Payload_Content;

  constructor(data?: PartialMessage<CommunicationRequest_Payload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationRequest.Payload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "content", kind: "message", T: CommunicationRequest_Payload_Content },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationRequest_Payload {
    return new CommunicationRequest_Payload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationRequest_Payload {
    return new CommunicationRequest_Payload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationRequest_Payload {
    return new CommunicationRequest_Payload().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationRequest_Payload | PlainMessage<CommunicationRequest_Payload> | undefined, b: CommunicationRequest_Payload | PlainMessage<CommunicationRequest_Payload> | undefined): boolean {
    return proto3.util.equals(CommunicationRequest_Payload, a, b);
  }
}

/**
 * Message part content
 *
 * @generated from message google.fhir.stu3.proto.CommunicationRequest.Payload.Content
 */
export class CommunicationRequest_Payload_Content extends Message<CommunicationRequest_Payload_Content> {
  /**
   * @generated from oneof google.fhir.stu3.proto.CommunicationRequest.Payload.Content.content
   */
  content: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 2;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CommunicationRequest_Payload_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationRequest.Payload.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "content" },
    { no: 2, name: "attachment", kind: "message", T: Attachment, oneof: "content" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "content" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationRequest_Payload_Content {
    return new CommunicationRequest_Payload_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationRequest_Payload_Content {
    return new CommunicationRequest_Payload_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationRequest_Payload_Content {
    return new CommunicationRequest_Payload_Content().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationRequest_Payload_Content | PlainMessage<CommunicationRequest_Payload_Content> | undefined, b: CommunicationRequest_Payload_Content | PlainMessage<CommunicationRequest_Payload_Content> | undefined): boolean {
    return proto3.util.equals(CommunicationRequest_Payload_Content, a, b);
  }
}

/**
 * When scheduled
 *
 * @generated from message google.fhir.stu3.proto.CommunicationRequest.Occurrence
 */
export class CommunicationRequest_Occurrence extends Message<CommunicationRequest_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.CommunicationRequest.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CommunicationRequest_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationRequest.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationRequest_Occurrence {
    return new CommunicationRequest_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationRequest_Occurrence {
    return new CommunicationRequest_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationRequest_Occurrence {
    return new CommunicationRequest_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationRequest_Occurrence | PlainMessage<CommunicationRequest_Occurrence> | undefined, b: CommunicationRequest_Occurrence | PlainMessage<CommunicationRequest_Occurrence> | undefined): boolean {
    return proto3.util.equals(CommunicationRequest_Occurrence, a, b);
  }
}

/**
 * Who/what is requesting service
 *
 * @generated from message google.fhir.stu3.proto.CommunicationRequest.Requester
 */
export class CommunicationRequest_Requester extends Message<CommunicationRequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual making the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<CommunicationRequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationRequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationRequest_Requester {
    return new CommunicationRequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationRequest_Requester {
    return new CommunicationRequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationRequest_Requester {
    return new CommunicationRequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationRequest_Requester | PlainMessage<CommunicationRequest_Requester> | undefined, b: CommunicationRequest_Requester | PlainMessage<CommunicationRequest_Requester> | undefined): boolean {
    return proto3.util.equals(CommunicationRequest_Requester, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CompartmentDefinition, last
 * updated 2017-04-19T07:44:43.294+10:00. Compartment Definition for a resource.
 * See http://hl7.org/fhir/StructureDefinition/CompartmentDefinition
 *
 * @generated from message google.fhir.stu3.proto.CompartmentDefinition
 */
export class CompartmentDefinition extends Message<CompartmentDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this compartment definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Name for this compartment definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 10;
   */
  name?: String;

  /**
   * Name for this compartment definition (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 11;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 12;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 13;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 15;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 16;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the compartment definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 17;
   */
  description?: Markdown;

  /**
   * Why this compartment definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 18;
   */
  purpose?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 19;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for compartment definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 20;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Patient | Encounter | RelatedPerson | Practitioner | Device
   *
   * @generated from field: google.fhir.stu3.proto.CompartmentTypeCode code = 21;
   */
  code?: CompartmentTypeCode;

  /**
   * Whether the search syntax is supported
   *
   * @generated from field: google.fhir.stu3.proto.Boolean search = 22;
   */
  search?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CompartmentDefinition.Resource resource = 23;
   */
  resource: CompartmentDefinition_Resource[] = [];

  constructor(data?: PartialMessage<CompartmentDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CompartmentDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "name", kind: "message", T: String },
    { no: 11, name: "title", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 13, name: "experimental", kind: "message", T: Boolean },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "publisher", kind: "message", T: String },
    { no: 16, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 17, name: "description", kind: "message", T: Markdown },
    { no: 18, name: "purpose", kind: "message", T: Markdown },
    { no: 19, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 20, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "code", kind: "message", T: CompartmentTypeCode },
    { no: 22, name: "search", kind: "message", T: Boolean },
    { no: 23, name: "resource", kind: "message", T: CompartmentDefinition_Resource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition {
    return new CompartmentDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition {
    return new CompartmentDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition {
    return new CompartmentDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition | PlainMessage<CompartmentDefinition> | undefined, b: CompartmentDefinition | PlainMessage<CompartmentDefinition> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition, a, b);
  }
}

/**
 * How a resource is related to the compartment
 *
 * @generated from message google.fhir.stu3.proto.CompartmentDefinition.Resource
 */
export class CompartmentDefinition_Resource extends Message<CompartmentDefinition_Resource> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of resource type
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode code = 4;
   */
  code?: ResourceTypeCode;

  /**
   * Search Parameter Name, or chained parameters
   *
   * @generated from field: repeated google.fhir.stu3.proto.String param = 5;
   */
  param: String[] = [];

  /**
   * Additional documentation about the resource and compartment
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 6;
   */
  documentation?: String;

  constructor(data?: PartialMessage<CompartmentDefinition_Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CompartmentDefinition.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: ResourceTypeCode },
    { no: 5, name: "param", kind: "message", T: String, repeated: true },
    { no: 6, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition_Resource {
    return new CompartmentDefinition_Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition_Resource {
    return new CompartmentDefinition_Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition_Resource {
    return new CompartmentDefinition_Resource().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition_Resource | PlainMessage<CompartmentDefinition_Resource> | undefined, b: CompartmentDefinition_Resource | PlainMessage<CompartmentDefinition_Resource> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition_Resource, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Composition, last updated
 * 2017-04-19T07:44:43.294+10:00. A set of resources composed into a single
 * coherent clinical statement with clinical attestation. See
 * http://hl7.org/fhir/StructureDefinition/Composition
 *
 * @generated from message google.fhir.stu3.proto.Composition
 */
export class Composition extends Message<Composition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical identifier of composition (version-independent)
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * preliminary | final | amended | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.CompositionStatusCode status = 10;
   */
  status?: CompositionStatusCode;

  /**
   * Kind of composition (LOINC if possible)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Categorization of Composition
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept class_value = 12 [json_name = "class"];
   */
  classValue?: CodeableConcept;

  /**
   * Who and/or what the composition is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Context of the Composition
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 14;
   */
  encounter?: Reference;

  /**
   * Composition editing time
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Who and/or what authored the composition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 16;
   */
  author: Reference[] = [];

  /**
   * Human Readable name/title
   *
   * @generated from field: google.fhir.stu3.proto.String title = 17;
   */
  title?: String;

  /**
   * As defined by affinity domain
   *
   * @generated from field: google.fhir.stu3.proto.ConfidentialityClassificationCode confidentiality = 18;
   */
  confidentiality?: ConfidentialityClassificationCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Composition.Attester attester = 19;
   */
  attester: Composition_Attester[] = [];

  /**
   * Organization which maintains the composition
   *
   * @generated from field: google.fhir.stu3.proto.Reference custodian = 20;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Composition.RelatesTo relates_to = 21;
   */
  relatesTo: Composition_RelatesTo[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Composition.Event event = 22;
   */
  event: Composition_Event[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Composition.Section section = 23;
   */
  section: Composition_Section[] = [];

  constructor(data?: PartialMessage<Composition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Composition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: CompositionStatusCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "class_value", jsonName: "class", kind: "message", T: CodeableConcept },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "encounter", kind: "message", T: Reference },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "title", kind: "message", T: String },
    { no: 18, name: "confidentiality", kind: "message", T: ConfidentialityClassificationCode },
    { no: 19, name: "attester", kind: "message", T: Composition_Attester, repeated: true },
    { no: 20, name: "custodian", kind: "message", T: Reference },
    { no: 21, name: "relates_to", kind: "message", T: Composition_RelatesTo, repeated: true },
    { no: 22, name: "event", kind: "message", T: Composition_Event, repeated: true },
    { no: 23, name: "section", kind: "message", T: Composition_Section, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Composition {
    return new Composition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Composition {
    return new Composition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Composition {
    return new Composition().fromJsonString(jsonString, options);
  }

  static equals(a: Composition | PlainMessage<Composition> | undefined, b: Composition | PlainMessage<Composition> | undefined): boolean {
    return proto3.util.equals(Composition, a, b);
  }
}

/**
 * Attests to accuracy of composition
 *
 * @generated from message google.fhir.stu3.proto.Composition.Attester
 */
export class Composition_Attester extends Message<Composition_Attester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * personal | professional | legal | official
   *
   * @generated from field: repeated google.fhir.stu3.proto.CompositionAttestationModeCode mode = 4;
   */
  mode: CompositionAttestationModeCode[] = [];

  /**
   * When the composition was attested
   *
   * @generated from field: google.fhir.stu3.proto.DateTime time = 5;
   */
  time?: DateTime;

  /**
   * Who attested the composition
   *
   * @generated from field: google.fhir.stu3.proto.Reference party = 6;
   */
  party?: Reference;

  constructor(data?: PartialMessage<Composition_Attester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Composition.Attester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: CompositionAttestationModeCode, repeated: true },
    { no: 5, name: "time", kind: "message", T: DateTime },
    { no: 6, name: "party", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Composition_Attester {
    return new Composition_Attester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Composition_Attester {
    return new Composition_Attester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Composition_Attester {
    return new Composition_Attester().fromJsonString(jsonString, options);
  }

  static equals(a: Composition_Attester | PlainMessage<Composition_Attester> | undefined, b: Composition_Attester | PlainMessage<Composition_Attester> | undefined): boolean {
    return proto3.util.equals(Composition_Attester, a, b);
  }
}

/**
 * Relationships to other compositions/documents
 *
 * @generated from message google.fhir.stu3.proto.Composition.RelatesTo
 */
export class Composition_RelatesTo extends Message<Composition_RelatesTo> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * replaces | transforms | signs | appends
   *
   * @generated from field: google.fhir.stu3.proto.DocumentRelationshipTypeCode code = 4;
   */
  code?: DocumentRelationshipTypeCode;

  /**
   * @generated from field: google.fhir.stu3.proto.Composition.RelatesTo.Target target = 5;
   */
  target?: Composition_RelatesTo_Target;

  constructor(data?: PartialMessage<Composition_RelatesTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Composition.RelatesTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: DocumentRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Composition_RelatesTo_Target },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Composition_RelatesTo {
    return new Composition_RelatesTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Composition_RelatesTo {
    return new Composition_RelatesTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Composition_RelatesTo {
    return new Composition_RelatesTo().fromJsonString(jsonString, options);
  }

  static equals(a: Composition_RelatesTo | PlainMessage<Composition_RelatesTo> | undefined, b: Composition_RelatesTo | PlainMessage<Composition_RelatesTo> | undefined): boolean {
    return proto3.util.equals(Composition_RelatesTo, a, b);
  }
}

/**
 * Target of the relationship
 *
 * @generated from message google.fhir.stu3.proto.Composition.RelatesTo.Target
 */
export class Composition_RelatesTo_Target extends Message<Composition_RelatesTo_Target> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Composition.RelatesTo.Target.target
   */
  target: {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 1;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Composition_RelatesTo_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Composition.RelatesTo.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "identifier", kind: "message", T: Identifier, oneof: "target" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "target" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Composition_RelatesTo_Target {
    return new Composition_RelatesTo_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Composition_RelatesTo_Target {
    return new Composition_RelatesTo_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Composition_RelatesTo_Target {
    return new Composition_RelatesTo_Target().fromJsonString(jsonString, options);
  }

  static equals(a: Composition_RelatesTo_Target | PlainMessage<Composition_RelatesTo_Target> | undefined, b: Composition_RelatesTo_Target | PlainMessage<Composition_RelatesTo_Target> | undefined): boolean {
    return proto3.util.equals(Composition_RelatesTo_Target, a, b);
  }
}

/**
 * The clinical service(s) being documented
 *
 * @generated from message google.fhir.stu3.proto.Composition.Event
 */
export class Composition_Event extends Message<Composition_Event> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code(s) that apply to the event being documented
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code: CodeableConcept[] = [];

  /**
   * The period covered by the documentation
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * The event(s) being documented
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detail = 6;
   */
  detail: Reference[] = [];

  constructor(data?: PartialMessage<Composition_Event>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Composition.Event";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "detail", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Composition_Event {
    return new Composition_Event().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Composition_Event {
    return new Composition_Event().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Composition_Event {
    return new Composition_Event().fromJsonString(jsonString, options);
  }

  static equals(a: Composition_Event | PlainMessage<Composition_Event> | undefined, b: Composition_Event | PlainMessage<Composition_Event> | undefined): boolean {
    return proto3.util.equals(Composition_Event, a, b);
  }
}

/**
 * Composition is broken into sections
 *
 * @generated from message google.fhir.stu3.proto.Composition.Section
 */
export class Composition_Section extends Message<Composition_Section> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for section (e.g. for ToC)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 4;
   */
  title?: String;

  /**
   * Classification of section (recommended)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Text summary of the section, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 6;
   */
  text?: Narrative;

  /**
   * working | snapshot | changes
   *
   * @generated from field: google.fhir.stu3.proto.ListModeCode mode = 7;
   */
  mode?: ListModeCode;

  /**
   * Order of section entries
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept ordered_by = 8;
   */
  orderedBy?: CodeableConcept;

  /**
   * A reference to data that supports this section
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference entry = 9;
   */
  entry: Reference[] = [];

  /**
   * Why the section is empty
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept empty_reason = 10;
   */
  emptyReason?: CodeableConcept;

  /**
   * Nested Section
   *
   * @generated from field: repeated google.fhir.stu3.proto.Composition.Section section = 11;
   */
  section: Composition_Section[] = [];

  constructor(data?: PartialMessage<Composition_Section>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Composition.Section";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "title", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "text", kind: "message", T: Narrative },
    { no: 7, name: "mode", kind: "message", T: ListModeCode },
    { no: 8, name: "ordered_by", kind: "message", T: CodeableConcept },
    { no: 9, name: "entry", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "empty_reason", kind: "message", T: CodeableConcept },
    { no: 11, name: "section", kind: "message", T: Composition_Section, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Composition_Section {
    return new Composition_Section().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Composition_Section {
    return new Composition_Section().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Composition_Section {
    return new Composition_Section().fromJsonString(jsonString, options);
  }

  static equals(a: Composition_Section | PlainMessage<Composition_Section> | undefined, b: Composition_Section | PlainMessage<Composition_Section> | undefined): boolean {
    return proto3.util.equals(Composition_Section, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ConceptMap, last updated
 * 2017-04-19T07:44:43.294+10:00. A map from one set of concepts to one or more
 * other concepts. See http://hl7.org/fhir/StructureDefinition/ConceptMap
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap
 */
export class ConceptMap extends Message<ConceptMap> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this concept map (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the concept map
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Business version of the concept map
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this concept map (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this concept map (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the concept map
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for concept map (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this concept map is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * @generated from field: google.fhir.stu3.proto.ConceptMap.Source source = 24;
   */
  source?: ConceptMap_Source;

  /**
   * @generated from field: google.fhir.stu3.proto.ConceptMap.Target target = 25;
   */
  target?: ConceptMap_Target;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ConceptMap.Group group = 26;
   */
  group: ConceptMap_Group[] = [];

  constructor(data?: PartialMessage<ConceptMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "source", kind: "message", T: ConceptMap_Source },
    { no: 25, name: "target", kind: "message", T: ConceptMap_Target },
    { no: 26, name: "group", kind: "message", T: ConceptMap_Group, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap {
    return new ConceptMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap {
    return new ConceptMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap {
    return new ConceptMap().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap | PlainMessage<ConceptMap> | undefined, b: ConceptMap | PlainMessage<ConceptMap> | undefined): boolean {
    return proto3.util.equals(ConceptMap, a, b);
  }
}

/**
 * Identifies the source of the concepts which are being mapped
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Source
 */
export class ConceptMap_Source extends Message<ConceptMap_Source> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ConceptMap.Source.source
   */
  source: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ConceptMap_Source>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Source";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "source" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "source" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Source {
    return new ConceptMap_Source().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Source {
    return new ConceptMap_Source().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Source {
    return new ConceptMap_Source().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Source | PlainMessage<ConceptMap_Source> | undefined, b: ConceptMap_Source | PlainMessage<ConceptMap_Source> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Source, a, b);
  }
}

/**
 * Provides context to the mappings
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Target
 */
export class ConceptMap_Target extends Message<ConceptMap_Target> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ConceptMap.Target.target
   */
  target: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ConceptMap_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "target" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "target" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Target {
    return new ConceptMap_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Target {
    return new ConceptMap_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Target {
    return new ConceptMap_Target().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Target | PlainMessage<ConceptMap_Target> | undefined, b: ConceptMap_Target | PlainMessage<ConceptMap_Target> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Target, a, b);
  }
}

/**
 * Same source and target systems
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Group
 */
export class ConceptMap_Group extends Message<ConceptMap_Group> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code System (if value set crosses code systems)
   *
   * @generated from field: google.fhir.stu3.proto.Uri source = 4;
   */
  source?: Uri;

  /**
   * Specific version of the  code system
   *
   * @generated from field: google.fhir.stu3.proto.String source_version = 5;
   */
  sourceVersion?: String;

  /**
   * System of the target (if necessary)
   *
   * @generated from field: google.fhir.stu3.proto.Uri target = 6;
   */
  target?: Uri;

  /**
   * Specific version of the  code system
   *
   * @generated from field: google.fhir.stu3.proto.String target_version = 7;
   */
  targetVersion?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ConceptMap.Group.SourceElement element = 8;
   */
  element: ConceptMap_Group_SourceElement[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ConceptMap.Group.Unmapped unmapped = 9;
   */
  unmapped?: ConceptMap_Group_Unmapped;

  constructor(data?: PartialMessage<ConceptMap_Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "source", kind: "message", T: Uri },
    { no: 5, name: "source_version", kind: "message", T: String },
    { no: 6, name: "target", kind: "message", T: Uri },
    { no: 7, name: "target_version", kind: "message", T: String },
    { no: 8, name: "element", kind: "message", T: ConceptMap_Group_SourceElement, repeated: true },
    { no: 9, name: "unmapped", kind: "message", T: ConceptMap_Group_Unmapped },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Group {
    return new ConceptMap_Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Group {
    return new ConceptMap_Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Group {
    return new ConceptMap_Group().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Group | PlainMessage<ConceptMap_Group> | undefined, b: ConceptMap_Group | PlainMessage<ConceptMap_Group> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Group, a, b);
  }
}

/**
 * Mappings for a concept from the source set
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Group.SourceElement
 */
export class ConceptMap_Group_SourceElement extends Message<ConceptMap_Group_SourceElement> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies element being mapped
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Display for the code
   *
   * @generated from field: google.fhir.stu3.proto.String display = 5;
   */
  display?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement target = 6;
   */
  target: ConceptMap_Group_SourceElement_TargetElement[] = [];

  constructor(data?: PartialMessage<ConceptMap_Group_SourceElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Group.SourceElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "target", kind: "message", T: ConceptMap_Group_SourceElement_TargetElement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Group_SourceElement {
    return new ConceptMap_Group_SourceElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Group_SourceElement {
    return new ConceptMap_Group_SourceElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Group_SourceElement {
    return new ConceptMap_Group_SourceElement().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Group_SourceElement | PlainMessage<ConceptMap_Group_SourceElement> | undefined, b: ConceptMap_Group_SourceElement | PlainMessage<ConceptMap_Group_SourceElement> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Group_SourceElement, a, b);
  }
}

/**
 * Concept in target system for element
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement
 */
export class ConceptMap_Group_SourceElement_TargetElement extends Message<ConceptMap_Group_SourceElement_TargetElement> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies the target element
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Display for the code
   *
   * @generated from field: google.fhir.stu3.proto.String display = 5;
   */
  display?: String;

  /**
   * relatedto | equivalent | equal | wider | subsumes | narrower |
   * specializes | inexact | unmatched | disjoint
   *
   * @generated from field: google.fhir.stu3.proto.ConceptMapEquivalenceCode equivalence = 6;
   */
  equivalence?: ConceptMapEquivalenceCode;

  /**
   * Description of status/issues in mapping
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 7;
   */
  comment?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement.OtherElement depends_on = 8;
   */
  dependsOn: ConceptMap_Group_SourceElement_TargetElement_OtherElement[] = [];

  /**
   * Other concepts that this mapping also produces
   *
   * @generated from field: repeated google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement.OtherElement product = 9;
   */
  product: ConceptMap_Group_SourceElement_TargetElement_OtherElement[] = [];

  constructor(data?: PartialMessage<ConceptMap_Group_SourceElement_TargetElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "equivalence", kind: "message", T: ConceptMapEquivalenceCode },
    { no: 7, name: "comment", kind: "message", T: String },
    { no: 8, name: "depends_on", kind: "message", T: ConceptMap_Group_SourceElement_TargetElement_OtherElement, repeated: true },
    { no: 9, name: "product", kind: "message", T: ConceptMap_Group_SourceElement_TargetElement_OtherElement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Group_SourceElement_TargetElement {
    return new ConceptMap_Group_SourceElement_TargetElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Group_SourceElement_TargetElement {
    return new ConceptMap_Group_SourceElement_TargetElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Group_SourceElement_TargetElement {
    return new ConceptMap_Group_SourceElement_TargetElement().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Group_SourceElement_TargetElement | PlainMessage<ConceptMap_Group_SourceElement_TargetElement> | undefined, b: ConceptMap_Group_SourceElement_TargetElement | PlainMessage<ConceptMap_Group_SourceElement_TargetElement> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Group_SourceElement_TargetElement, a, b);
  }
}

/**
 * Other elements required for this mapping (from context)
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement.OtherElement
 */
export class ConceptMap_Group_SourceElement_TargetElement_OtherElement extends Message<ConceptMap_Group_SourceElement_TargetElement_OtherElement> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to property mapping depends on
   *
   * @generated from field: google.fhir.stu3.proto.Uri property = 4;
   */
  property?: Uri;

  /**
   * Code System (if necessary)
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 5;
   */
  system?: Uri;

  /**
   * Value of the referenced element
   *
   * @generated from field: google.fhir.stu3.proto.String code = 6;
   */
  code?: String;

  /**
   * Display for the code
   *
   * @generated from field: google.fhir.stu3.proto.String display = 7;
   */
  display?: String;

  constructor(data?: PartialMessage<ConceptMap_Group_SourceElement_TargetElement_OtherElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Group.SourceElement.TargetElement.OtherElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "property", kind: "message", T: Uri },
    { no: 5, name: "system", kind: "message", T: Uri },
    { no: 6, name: "code", kind: "message", T: String },
    { no: 7, name: "display", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Group_SourceElement_TargetElement_OtherElement {
    return new ConceptMap_Group_SourceElement_TargetElement_OtherElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Group_SourceElement_TargetElement_OtherElement {
    return new ConceptMap_Group_SourceElement_TargetElement_OtherElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Group_SourceElement_TargetElement_OtherElement {
    return new ConceptMap_Group_SourceElement_TargetElement_OtherElement().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Group_SourceElement_TargetElement_OtherElement | PlainMessage<ConceptMap_Group_SourceElement_TargetElement_OtherElement> | undefined, b: ConceptMap_Group_SourceElement_TargetElement_OtherElement | PlainMessage<ConceptMap_Group_SourceElement_TargetElement_OtherElement> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Group_SourceElement_TargetElement_OtherElement, a, b);
  }
}

/**
 * When no match in the mappings
 *
 * @generated from message google.fhir.stu3.proto.ConceptMap.Group.Unmapped
 */
export class ConceptMap_Group_Unmapped extends Message<ConceptMap_Group_Unmapped> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * provided | fixed | other-map
   *
   * @generated from field: google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode mode = 4;
   */
  mode?: ConceptMapGroupUnmappedModeCode;

  /**
   * Fixed code when mode = fixed
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 5;
   */
  code?: Code;

  /**
   * Display for the code
   *
   * @generated from field: google.fhir.stu3.proto.String display = 6;
   */
  display?: String;

  /**
   * Canonical URL for other concept map
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 7;
   */
  url?: Uri;

  constructor(data?: PartialMessage<ConceptMap_Group_Unmapped>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMap.Group.Unmapped";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: ConceptMapGroupUnmappedModeCode },
    { no: 5, name: "code", kind: "message", T: Code },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "url", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMap_Group_Unmapped {
    return new ConceptMap_Group_Unmapped().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMap_Group_Unmapped {
    return new ConceptMap_Group_Unmapped().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMap_Group_Unmapped {
    return new ConceptMap_Group_Unmapped().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMap_Group_Unmapped | PlainMessage<ConceptMap_Group_Unmapped> | undefined, b: ConceptMap_Group_Unmapped | PlainMessage<ConceptMap_Group_Unmapped> | undefined): boolean {
    return proto3.util.equals(ConceptMap_Group_Unmapped, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Condition, last updated
 * 2017-04-19T07:44:43.294+10:00. Detailed information about conditions,
 * problems or diagnoses. See http://hl7.org/fhir/StructureDefinition/Condition
 *
 * @generated from message google.fhir.stu3.proto.Condition
 */
export class Condition extends Message<Condition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this condition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | recurrence | inactive | remission | resolved
   *
   * @generated from field: google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
   */
  clinicalStatus?: ConditionClinicalStatusCodesCode;

  /**
   * provisional | differential | confirmed | refuted | entered-in-error |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11;
   */
  verificationStatus?: ConditionVerificationStatusCode;

  /**
   * problem-list-item | encounter-diagnosis
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Subjective severity of condition
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept severity = 13;
   */
  severity?: CodeableConcept;

  /**
   * Identification of the condition, problem or diagnosis
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * Anatomical location, if relevant
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 15;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * Who has the condition?
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * Encounter or episode when condition first asserted
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 17;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Condition.Onset onset = 18;
   */
  onset?: Condition_Onset;

  /**
   * @generated from field: google.fhir.stu3.proto.Condition.Abatement abatement = 19;
   */
  abatement?: Condition_Abatement;

  /**
   * Date record was believed accurate
   *
   * @generated from field: google.fhir.stu3.proto.DateTime asserted_date = 20;
   */
  assertedDate?: DateTime;

  /**
   * Person who asserts this condition
   *
   * @generated from field: google.fhir.stu3.proto.Reference asserter = 21;
   */
  asserter?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Condition.Stage stage = 22;
   */
  stage?: Condition_Stage;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Condition.Evidence evidence = 23;
   */
  evidence: Condition_Evidence[] = [];

  /**
   * Additional information about the Condition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 24;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<Condition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Condition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "clinical_status", kind: "message", T: ConditionClinicalStatusCodesCode },
    { no: 11, name: "verification_status", kind: "message", T: ConditionVerificationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "severity", kind: "message", T: CodeableConcept },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "context", kind: "message", T: Reference },
    { no: 18, name: "onset", kind: "message", T: Condition_Onset },
    { no: 19, name: "abatement", kind: "message", T: Condition_Abatement },
    { no: 20, name: "asserted_date", kind: "message", T: DateTime },
    { no: 21, name: "asserter", kind: "message", T: Reference },
    { no: 22, name: "stage", kind: "message", T: Condition_Stage },
    { no: 23, name: "evidence", kind: "message", T: Condition_Evidence, repeated: true },
    { no: 24, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition {
    return new Condition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition {
    return new Condition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition {
    return new Condition().fromJsonString(jsonString, options);
  }

  static equals(a: Condition | PlainMessage<Condition> | undefined, b: Condition | PlainMessage<Condition> | undefined): boolean {
    return proto3.util.equals(Condition, a, b);
  }
}

/**
 * Estimated or actual date,  date-time, or age
 *
 * @generated from message google.fhir.stu3.proto.Condition.Onset
 */
export class Condition_Onset extends Message<Condition_Onset> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Condition.Onset.onset
   */
  onset: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Condition_Onset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Condition.Onset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "onset" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "onset" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "onset" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "onset" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "onset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition_Onset {
    return new Condition_Onset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition_Onset {
    return new Condition_Onset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition_Onset {
    return new Condition_Onset().fromJsonString(jsonString, options);
  }

  static equals(a: Condition_Onset | PlainMessage<Condition_Onset> | undefined, b: Condition_Onset | PlainMessage<Condition_Onset> | undefined): boolean {
    return proto3.util.equals(Condition_Onset, a, b);
  }
}

/**
 * If/when in resolution/remission
 *
 * @generated from message google.fhir.stu3.proto.Condition.Abatement
 */
export class Condition_Abatement extends Message<Condition_Abatement> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Condition.Abatement.abatement
   */
  abatement: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 3;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 4;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 6 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Condition_Abatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Condition.Abatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "abatement" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "abatement" },
    { no: 3, name: "boolean", kind: "message", T: Boolean, oneof: "abatement" },
    { no: 4, name: "period", kind: "message", T: Period, oneof: "abatement" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "abatement" },
    { no: 6, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "abatement" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition_Abatement {
    return new Condition_Abatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition_Abatement {
    return new Condition_Abatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition_Abatement {
    return new Condition_Abatement().fromJsonString(jsonString, options);
  }

  static equals(a: Condition_Abatement | PlainMessage<Condition_Abatement> | undefined, b: Condition_Abatement | PlainMessage<Condition_Abatement> | undefined): boolean {
    return proto3.util.equals(Condition_Abatement, a, b);
  }
}

/**
 * Stage/grade, usually assessed formally
 *
 * @generated from message google.fhir.stu3.proto.Condition.Stage
 */
export class Condition_Stage extends Message<Condition_Stage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Simple summary (disease specific)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept summary = 4;
   */
  summary?: CodeableConcept;

  /**
   * Formal record of assessment
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference assessment = 5;
   */
  assessment: Reference[] = [];

  constructor(data?: PartialMessage<Condition_Stage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Condition.Stage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "summary", kind: "message", T: CodeableConcept },
    { no: 5, name: "assessment", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition_Stage {
    return new Condition_Stage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition_Stage {
    return new Condition_Stage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition_Stage {
    return new Condition_Stage().fromJsonString(jsonString, options);
  }

  static equals(a: Condition_Stage | PlainMessage<Condition_Stage> | undefined, b: Condition_Stage | PlainMessage<Condition_Stage> | undefined): boolean {
    return proto3.util.equals(Condition_Stage, a, b);
  }
}

/**
 * Supporting evidence
 *
 * @generated from message google.fhir.stu3.proto.Condition.Evidence
 */
export class Condition_Evidence extends Message<Condition_Evidence> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Manifestation/symptom
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code: CodeableConcept[] = [];

  /**
   * Supporting information found elsewhere
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detail = 5;
   */
  detail: Reference[] = [];

  constructor(data?: PartialMessage<Condition_Evidence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Condition.Evidence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "detail", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Condition_Evidence {
    return new Condition_Evidence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Condition_Evidence {
    return new Condition_Evidence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Condition_Evidence {
    return new Condition_Evidence().fromJsonString(jsonString, options);
  }

  static equals(a: Condition_Evidence | PlainMessage<Condition_Evidence> | undefined, b: Condition_Evidence | PlainMessage<Condition_Evidence> | undefined): boolean {
    return proto3.util.equals(Condition_Evidence, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Consent, last updated
 * 2017-04-19T07:44:43.294+10:00. A healthcare consumer's policy choices to
 * permits or denies recipients or roles to perform actions for specific
 * purposes and periods of time. See
 * http://hl7.org/fhir/StructureDefinition/Consent
 *
 * @generated from message google.fhir.stu3.proto.Consent
 */
export class Consent extends Message<Consent> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier for this record (external references)
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * draft | proposed | active | rejected | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ConsentStateCode status = 10;
   */
  status?: ConsentStateCode;

  /**
   * Classification of the consent statement - for indexing/retrieval
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category: CodeableConcept[] = [];

  /**
   * Who the consent applies to
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 12;
   */
  patient?: Reference;

  /**
   * Period that this consent applies
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 13;
   */
  period?: Period;

  /**
   * When this Consent was created or indexed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date_time = 14;
   */
  dateTime?: DateTime;

  /**
   * Who is agreeing to the policy and exceptions
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference consenting_party = 15;
   */
  consentingParty: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Consent.Actor actor = 16;
   */
  actor: Consent_Actor[] = [];

  /**
   * Actions controlled by this consent
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept action = 17;
   */
  action: CodeableConcept[] = [];

  /**
   * Custodian of the consent
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference organization = 18;
   */
  organization: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Consent.Source source = 19;
   */
  source?: Consent_Source;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Consent.Policy policy = 20;
   */
  policy: Consent_Policy[] = [];

  /**
   * Policy that this consents to
   *
   * @generated from field: google.fhir.stu3.proto.Uri policy_rule = 21;
   */
  policyRule?: Uri;

  /**
   * Security Labels that define affected resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding security_label = 22;
   */
  securityLabel: Coding[] = [];

  /**
   * Context of activities for which the agreement is made
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding purpose = 23;
   */
  purpose: Coding[] = [];

  /**
   * Timeframe for data controlled by this consent
   *
   * @generated from field: google.fhir.stu3.proto.Period data_period = 24;
   */
  dataPeriod?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Consent.Data data = 25;
   */
  data: Consent_Data[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Consent.Except except = 26;
   */
  except: Consent_Except[] = [];

  constructor(data?: PartialMessage<Consent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: ConsentStateCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "patient", kind: "message", T: Reference },
    { no: 13, name: "period", kind: "message", T: Period },
    { no: 14, name: "date_time", kind: "message", T: DateTime },
    { no: 15, name: "consenting_party", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "actor", kind: "message", T: Consent_Actor, repeated: true },
    { no: 17, name: "action", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "organization", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "source", kind: "message", T: Consent_Source },
    { no: 20, name: "policy", kind: "message", T: Consent_Policy, repeated: true },
    { no: 21, name: "policy_rule", kind: "message", T: Uri },
    { no: 22, name: "security_label", kind: "message", T: Coding, repeated: true },
    { no: 23, name: "purpose", kind: "message", T: Coding, repeated: true },
    { no: 24, name: "data_period", kind: "message", T: Period },
    { no: 25, name: "data", kind: "message", T: Consent_Data, repeated: true },
    { no: 26, name: "except", kind: "message", T: Consent_Except, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent {
    return new Consent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent {
    return new Consent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent {
    return new Consent().fromJsonString(jsonString, options);
  }

  static equals(a: Consent | PlainMessage<Consent> | undefined, b: Consent | PlainMessage<Consent> | undefined): boolean {
    return proto3.util.equals(Consent, a, b);
  }
}

/**
 * Who|what controlled by this consent (or group, by role)
 *
 * @generated from message google.fhir.stu3.proto.Consent.Actor
 */
export class Consent_Actor extends Message<Consent_Actor> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * How the actor is involved
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Resource for the actor (or group, by role)
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 5;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<Consent_Actor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Actor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Actor {
    return new Consent_Actor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Actor {
    return new Consent_Actor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Actor {
    return new Consent_Actor().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Actor | PlainMessage<Consent_Actor> | undefined, b: Consent_Actor | PlainMessage<Consent_Actor> | undefined): boolean {
    return proto3.util.equals(Consent_Actor, a, b);
  }
}

/**
 * Source from which this consent is taken
 *
 * @generated from message google.fhir.stu3.proto.Consent.Source
 */
export class Consent_Source extends Message<Consent_Source> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Consent.Source.source
   */
  source: {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 1;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 2;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Consent_Source>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Source";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attachment", kind: "message", T: Attachment, oneof: "source" },
    { no: 2, name: "identifier", kind: "message", T: Identifier, oneof: "source" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "source" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Source {
    return new Consent_Source().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Source {
    return new Consent_Source().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Source {
    return new Consent_Source().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Source | PlainMessage<Consent_Source> | undefined, b: Consent_Source | PlainMessage<Consent_Source> | undefined): boolean {
    return proto3.util.equals(Consent_Source, a, b);
  }
}

/**
 * Policies covered by this consent
 *
 * @generated from message google.fhir.stu3.proto.Consent.Policy
 */
export class Consent_Policy extends Message<Consent_Policy> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Enforcement source for policy
   *
   * @generated from field: google.fhir.stu3.proto.Uri authority = 4;
   */
  authority?: Uri;

  /**
   * Specific policy covered by this consent
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  constructor(data?: PartialMessage<Consent_Policy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Policy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "authority", kind: "message", T: Uri },
    { no: 5, name: "uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Policy {
    return new Consent_Policy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Policy {
    return new Consent_Policy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Policy {
    return new Consent_Policy().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Policy | PlainMessage<Consent_Policy> | undefined, b: Consent_Policy | PlainMessage<Consent_Policy> | undefined): boolean {
    return proto3.util.equals(Consent_Policy, a, b);
  }
}

/**
 * Data controlled by this consent
 *
 * @generated from message google.fhir.stu3.proto.Consent.Data
 */
export class Consent_Data extends Message<Consent_Data> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * instance | related | dependents | authoredby
   *
   * @generated from field: google.fhir.stu3.proto.ConsentDataMeaningCode meaning = 4;
   */
  meaning?: ConsentDataMeaningCode;

  /**
   * The actual data reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 5;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<Consent_Data>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Data";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "meaning", kind: "message", T: ConsentDataMeaningCode },
    { no: 5, name: "reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Data {
    return new Consent_Data().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Data {
    return new Consent_Data().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Data {
    return new Consent_Data().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Data | PlainMessage<Consent_Data> | undefined, b: Consent_Data | PlainMessage<Consent_Data> | undefined): boolean {
    return proto3.util.equals(Consent_Data, a, b);
  }
}

/**
 * Additional rule -  addition or removal of permissions
 *
 * @generated from message google.fhir.stu3.proto.Consent.Except
 */
export class Consent_Except extends Message<Consent_Except> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * deny | permit
   *
   * @generated from field: google.fhir.stu3.proto.ConsentExceptTypeCode type = 4;
   */
  type?: ConsentExceptTypeCode;

  /**
   * Timeframe for this exception
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Consent.Except.ExceptActor actor = 6;
   */
  actor: Consent_Except_ExceptActor[] = [];

  /**
   * Actions controlled by this exception
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept action = 7;
   */
  action: CodeableConcept[] = [];

  /**
   * Security Labels that define affected resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding security_label = 8;
   */
  securityLabel: Coding[] = [];

  /**
   * Context of activities covered by this exception
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding purpose = 9;
   */
  purpose: Coding[] = [];

  /**
   * e.g. Resource Type, Profile, or CDA etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding class_value = 10 [json_name = "class"];
   */
  classValue: Coding[] = [];

  /**
   * e.g. LOINC or SNOMED CT code, etc in the content
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding code = 11;
   */
  code: Coding[] = [];

  /**
   * Timeframe for data controlled by this exception
   *
   * @generated from field: google.fhir.stu3.proto.Period data_period = 12;
   */
  dataPeriod?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Consent.Except.ExceptData data = 13;
   */
  data: Consent_Except_ExceptData[] = [];

  constructor(data?: PartialMessage<Consent_Except>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Except";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ConsentExceptTypeCode },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "actor", kind: "message", T: Consent_Except_ExceptActor, repeated: true },
    { no: 7, name: "action", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "security_label", kind: "message", T: Coding, repeated: true },
    { no: 9, name: "purpose", kind: "message", T: Coding, repeated: true },
    { no: 10, name: "class_value", jsonName: "class", kind: "message", T: Coding, repeated: true },
    { no: 11, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 12, name: "data_period", kind: "message", T: Period },
    { no: 13, name: "data", kind: "message", T: Consent_Except_ExceptData, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Except {
    return new Consent_Except().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Except {
    return new Consent_Except().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Except {
    return new Consent_Except().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Except | PlainMessage<Consent_Except> | undefined, b: Consent_Except | PlainMessage<Consent_Except> | undefined): boolean {
    return proto3.util.equals(Consent_Except, a, b);
  }
}

/**
 * Who|what controlled by this exception (or group, by role)
 *
 * @generated from message google.fhir.stu3.proto.Consent.Except.ExceptActor
 */
export class Consent_Except_ExceptActor extends Message<Consent_Except_ExceptActor> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * How the actor is involved
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Resource for the actor (or group, by role)
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 5;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<Consent_Except_ExceptActor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Except.ExceptActor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Except_ExceptActor {
    return new Consent_Except_ExceptActor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Except_ExceptActor {
    return new Consent_Except_ExceptActor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Except_ExceptActor {
    return new Consent_Except_ExceptActor().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Except_ExceptActor | PlainMessage<Consent_Except_ExceptActor> | undefined, b: Consent_Except_ExceptActor | PlainMessage<Consent_Except_ExceptActor> | undefined): boolean {
    return proto3.util.equals(Consent_Except_ExceptActor, a, b);
  }
}

/**
 * Data controlled by this exception
 *
 * @generated from message google.fhir.stu3.proto.Consent.Except.ExceptData
 */
export class Consent_Except_ExceptData extends Message<Consent_Except_ExceptData> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * instance | related | dependents | authoredby
   *
   * @generated from field: google.fhir.stu3.proto.ConsentDataMeaningCode meaning = 4;
   */
  meaning?: ConsentDataMeaningCode;

  /**
   * The actual data reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 5;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<Consent_Except_ExceptData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Consent.Except.ExceptData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "meaning", kind: "message", T: ConsentDataMeaningCode },
    { no: 5, name: "reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent_Except_ExceptData {
    return new Consent_Except_ExceptData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent_Except_ExceptData {
    return new Consent_Except_ExceptData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent_Except_ExceptData {
    return new Consent_Except_ExceptData().fromJsonString(jsonString, options);
  }

  static equals(a: Consent_Except_ExceptData | PlainMessage<Consent_Except_ExceptData> | undefined, b: Consent_Except_ExceptData | PlainMessage<Consent_Except_ExceptData> | undefined): boolean {
    return proto3.util.equals(Consent_Except_ExceptData, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Contract, last updated
 * 2017-04-19T07:44:43.294+10:00. Legal Agreement. See
 * http://hl7.org/fhir/StructureDefinition/Contract
 *
 * @generated from message google.fhir.stu3.proto.Contract
 */
export class Contract extends Message<Contract> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Contract number
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * amended | appended | cancelled | disputed | entered-in-error | executable |
   * executed | negotiable | offered | policy | rejected | renewed | revoked |
   * resolved | terminated
   *
   * @generated from field: google.fhir.stu3.proto.ContractResourceStatusCode status = 10;
   */
  status?: ContractResourceStatusCode;

  /**
   * When this Contract was issued
   *
   * @generated from field: google.fhir.stu3.proto.DateTime issued = 11;
   */
  issued?: DateTime;

  /**
   * Effective time
   *
   * @generated from field: google.fhir.stu3.proto.Period applies = 12;
   */
  applies?: Period;

  /**
   * Contract Target Entity
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference subject = 13;
   */
  subject: Reference[] = [];

  /**
   * Context of the Contract
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference topic = 14;
   */
  topic: Reference[] = [];

  /**
   * Authority under which this Contract has standing
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference authority = 15;
   */
  authority: Reference[] = [];

  /**
   * Domain in which this Contract applies
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference domain = 16;
   */
  domain: Reference[] = [];

  /**
   * Type or form
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 17;
   */
  type?: CodeableConcept;

  /**
   * Subtype within the context of type
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept sub_type = 18;
   */
  subType: CodeableConcept[] = [];

  /**
   * Action stipulated by this Contract
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept action = 19;
   */
  action: CodeableConcept[] = [];

  /**
   * Rationale for the stiplulated action
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept action_reason = 20;
   */
  actionReason: CodeableConcept[] = [];

  /**
   * Decision by Grantor
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept decision_type = 21;
   */
  decisionType?: CodeableConcept;

  /**
   * Content derived from the basal information
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept content_derivative = 22;
   */
  contentDerivative?: CodeableConcept;

  /**
   * Security Labels that define affected resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding security_label = 23;
   */
  securityLabel: Coding[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.Agent agent = 24;
   */
  agent: Contract_Agent[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.Signatory signer = 25;
   */
  signer: Contract_Signatory[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.ValuedItem valued_item = 26;
   */
  valuedItem: Contract_ValuedItem[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.Term term = 27;
   */
  term: Contract_Term[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Contract.Binding binding = 28;
   */
  binding?: Contract_Binding;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.FriendlyLanguage friendly = 29;
   */
  friendly: Contract_FriendlyLanguage[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.LegalLanguage legal = 30;
   */
  legal: Contract_LegalLanguage[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.ComputableLanguage rule = 31;
   */
  rule: Contract_ComputableLanguage[] = [];

  constructor(data?: PartialMessage<Contract>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: ContractResourceStatusCode },
    { no: 11, name: "issued", kind: "message", T: DateTime },
    { no: 12, name: "applies", kind: "message", T: Period },
    { no: 13, name: "subject", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "topic", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "authority", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "domain", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "type", kind: "message", T: CodeableConcept },
    { no: 18, name: "sub_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "action", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "action_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "decision_type", kind: "message", T: CodeableConcept },
    { no: 22, name: "content_derivative", kind: "message", T: CodeableConcept },
    { no: 23, name: "security_label", kind: "message", T: Coding, repeated: true },
    { no: 24, name: "agent", kind: "message", T: Contract_Agent, repeated: true },
    { no: 25, name: "signer", kind: "message", T: Contract_Signatory, repeated: true },
    { no: 26, name: "valued_item", kind: "message", T: Contract_ValuedItem, repeated: true },
    { no: 27, name: "term", kind: "message", T: Contract_Term, repeated: true },
    { no: 28, name: "binding", kind: "message", T: Contract_Binding },
    { no: 29, name: "friendly", kind: "message", T: Contract_FriendlyLanguage, repeated: true },
    { no: 30, name: "legal", kind: "message", T: Contract_LegalLanguage, repeated: true },
    { no: 31, name: "rule", kind: "message", T: Contract_ComputableLanguage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract {
    return new Contract().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract {
    return new Contract().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract {
    return new Contract().fromJsonString(jsonString, options);
  }

  static equals(a: Contract | PlainMessage<Contract> | undefined, b: Contract | PlainMessage<Contract> | undefined): boolean {
    return proto3.util.equals(Contract, a, b);
  }
}

/**
 * Entity being ascribed responsibility
 *
 * @generated from message google.fhir.stu3.proto.Contract.Agent
 */
export class Contract_Agent extends Message<Contract_Agent> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Contract Agent Type
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 4;
   */
  actor?: Reference;

  /**
   * Role type of the agent
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role: CodeableConcept[] = [];

  constructor(data?: PartialMessage<Contract_Agent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Agent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "actor", kind: "message", T: Reference },
    { no: 5, name: "role", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Agent {
    return new Contract_Agent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Agent {
    return new Contract_Agent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Agent {
    return new Contract_Agent().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Agent | PlainMessage<Contract_Agent> | undefined, b: Contract_Agent | PlainMessage<Contract_Agent> | undefined): boolean {
    return proto3.util.equals(Contract_Agent, a, b);
  }
}

/**
 * Contract Signatory
 *
 * @generated from message google.fhir.stu3.proto.Contract.Signatory
 */
export class Contract_Signatory extends Message<Contract_Signatory> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Contract Signatory Role
   *
   * @generated from field: google.fhir.stu3.proto.Coding type = 4;
   */
  type?: Coding;

  /**
   * Contract Signatory Party
   *
   * @generated from field: google.fhir.stu3.proto.Reference party = 5;
   */
  party?: Reference;

  /**
   * Contract Documentation Signature
   *
   * @generated from field: repeated google.fhir.stu3.proto.Signature signature = 6;
   */
  signature: Signature[] = [];

  constructor(data?: PartialMessage<Contract_Signatory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Signatory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: Coding },
    { no: 5, name: "party", kind: "message", T: Reference },
    { no: 6, name: "signature", kind: "message", T: Signature, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Signatory {
    return new Contract_Signatory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Signatory {
    return new Contract_Signatory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Signatory {
    return new Contract_Signatory().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Signatory | PlainMessage<Contract_Signatory> | undefined, b: Contract_Signatory | PlainMessage<Contract_Signatory> | undefined): boolean {
    return proto3.util.equals(Contract_Signatory, a, b);
  }
}

/**
 * Contract Valued Item List
 *
 * @generated from message google.fhir.stu3.proto.Contract.ValuedItem
 */
export class Contract_ValuedItem extends Message<Contract_ValuedItem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Contract.ValuedItem.Entity entity = 4;
   */
  entity?: Contract_ValuedItem_Entity;

  /**
   * Contract Valued Item Number
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 5;
   */
  identifier?: Identifier;

  /**
   * Contract Valued Item Effective Tiem
   *
   * @generated from field: google.fhir.stu3.proto.DateTime effective_time = 6;
   */
  effectiveTime?: DateTime;

  /**
   * Count of Contract Valued Items
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 7;
   */
  quantity?: SimpleQuantity;

  /**
   * Contract Valued Item fee, charge, or cost
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 8;
   */
  unitPrice?: Money;

  /**
   * Contract Valued Item Price Scaling Factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 9;
   */
  factor?: Decimal;

  /**
   * Contract Valued Item Difficulty Scaling Factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal points = 10;
   */
  points?: Decimal;

  /**
   * Total Contract Valued Item Value
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 11;
   */
  net?: Money;

  constructor(data?: PartialMessage<Contract_ValuedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.ValuedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "entity", kind: "message", T: Contract_ValuedItem_Entity },
    { no: 5, name: "identifier", kind: "message", T: Identifier },
    { no: 6, name: "effective_time", kind: "message", T: DateTime },
    { no: 7, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 8, name: "unit_price", kind: "message", T: Money },
    { no: 9, name: "factor", kind: "message", T: Decimal },
    { no: 10, name: "points", kind: "message", T: Decimal },
    { no: 11, name: "net", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_ValuedItem {
    return new Contract_ValuedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_ValuedItem {
    return new Contract_ValuedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_ValuedItem {
    return new Contract_ValuedItem().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_ValuedItem | PlainMessage<Contract_ValuedItem> | undefined, b: Contract_ValuedItem | PlainMessage<Contract_ValuedItem> | undefined): boolean {
    return proto3.util.equals(Contract_ValuedItem, a, b);
  }
}

/**
 * Contract Valued Item Type
 *
 * @generated from message google.fhir.stu3.proto.Contract.ValuedItem.Entity
 */
export class Contract_ValuedItem_Entity extends Message<Contract_ValuedItem_Entity> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Contract.ValuedItem.Entity.entity
   */
  entity: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Contract_ValuedItem_Entity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.ValuedItem.Entity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "entity" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "entity" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_ValuedItem_Entity {
    return new Contract_ValuedItem_Entity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_ValuedItem_Entity {
    return new Contract_ValuedItem_Entity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_ValuedItem_Entity {
    return new Contract_ValuedItem_Entity().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_ValuedItem_Entity | PlainMessage<Contract_ValuedItem_Entity> | undefined, b: Contract_ValuedItem_Entity | PlainMessage<Contract_ValuedItem_Entity> | undefined): boolean {
    return proto3.util.equals(Contract_ValuedItem_Entity, a, b);
  }
}

/**
 * Contract Term List
 *
 * @generated from message google.fhir.stu3.proto.Contract.Term
 */
export class Contract_Term extends Message<Contract_Term> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Contract Term Number
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Contract Term Issue Date Time
   *
   * @generated from field: google.fhir.stu3.proto.DateTime issued = 5;
   */
  issued?: DateTime;

  /**
   * Contract Term Effective Time
   *
   * @generated from field: google.fhir.stu3.proto.Period applies = 6;
   */
  applies?: Period;

  /**
   * Contract Term Type or Form
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 7;
   */
  type?: CodeableConcept;

  /**
   * Contract Term Type specific classification
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept sub_type = 8;
   */
  subType?: CodeableConcept;

  /**
   * Context of the Contract term
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference topic = 9;
   */
  topic: Reference[] = [];

  /**
   * Contract Term Activity
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept action = 10;
   */
  action: CodeableConcept[] = [];

  /**
   * Purpose for the Contract Term Action
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept action_reason = 11;
   */
  actionReason: CodeableConcept[] = [];

  /**
   * Security Labels that define affected terms
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding security_label = 12;
   */
  securityLabel: Coding[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.Term.TermAgent agent = 13;
   */
  agent: Contract_Term_TermAgent[] = [];

  /**
   * Human readable Contract term text
   *
   * @generated from field: google.fhir.stu3.proto.String text = 14;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Contract.Term.TermValuedItem valued_item = 15;
   */
  valuedItem: Contract_Term_TermValuedItem[] = [];

  /**
   * Nested Contract Term Group
   *
   * @generated from field: repeated google.fhir.stu3.proto.Contract.Term group = 16;
   */
  group: Contract_Term[] = [];

  constructor(data?: PartialMessage<Contract_Term>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Term";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "issued", kind: "message", T: DateTime },
    { no: 6, name: "applies", kind: "message", T: Period },
    { no: 7, name: "type", kind: "message", T: CodeableConcept },
    { no: 8, name: "sub_type", kind: "message", T: CodeableConcept },
    { no: 9, name: "topic", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "action", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "action_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "security_label", kind: "message", T: Coding, repeated: true },
    { no: 13, name: "agent", kind: "message", T: Contract_Term_TermAgent, repeated: true },
    { no: 14, name: "text", kind: "message", T: String },
    { no: 15, name: "valued_item", kind: "message", T: Contract_Term_TermValuedItem, repeated: true },
    { no: 16, name: "group", kind: "message", T: Contract_Term, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Term {
    return new Contract_Term().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Term {
    return new Contract_Term().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Term {
    return new Contract_Term().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Term | PlainMessage<Contract_Term> | undefined, b: Contract_Term | PlainMessage<Contract_Term> | undefined): boolean {
    return proto3.util.equals(Contract_Term, a, b);
  }
}

/**
 * Contract Term Agent List
 *
 * @generated from message google.fhir.stu3.proto.Contract.Term.TermAgent
 */
export class Contract_Term_TermAgent extends Message<Contract_Term_TermAgent> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Contract Term Agent Subject
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 4;
   */
  actor?: Reference;

  /**
   * Type of the Contract Term Agent
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role: CodeableConcept[] = [];

  constructor(data?: PartialMessage<Contract_Term_TermAgent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Term.TermAgent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "actor", kind: "message", T: Reference },
    { no: 5, name: "role", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Term_TermAgent {
    return new Contract_Term_TermAgent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Term_TermAgent {
    return new Contract_Term_TermAgent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Term_TermAgent {
    return new Contract_Term_TermAgent().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Term_TermAgent | PlainMessage<Contract_Term_TermAgent> | undefined, b: Contract_Term_TermAgent | PlainMessage<Contract_Term_TermAgent> | undefined): boolean {
    return proto3.util.equals(Contract_Term_TermAgent, a, b);
  }
}

/**
 * Contract Term Valued Item List
 *
 * @generated from message google.fhir.stu3.proto.Contract.Term.TermValuedItem
 */
export class Contract_Term_TermValuedItem extends Message<Contract_Term_TermValuedItem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Contract.Term.TermValuedItem.Entity entity = 4;
   */
  entity?: Contract_Term_TermValuedItem_Entity;

  /**
   * Contract Term Valued Item Number
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 5;
   */
  identifier?: Identifier;

  /**
   * Contract Term Valued Item Effective Tiem
   *
   * @generated from field: google.fhir.stu3.proto.DateTime effective_time = 6;
   */
  effectiveTime?: DateTime;

  /**
   * Contract Term Valued Item Count
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 7;
   */
  quantity?: SimpleQuantity;

  /**
   * Contract Term Valued Item fee, charge, or cost
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 8;
   */
  unitPrice?: Money;

  /**
   * Contract Term Valued Item Price Scaling Factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 9;
   */
  factor?: Decimal;

  /**
   * Contract Term Valued Item Difficulty Scaling Factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal points = 10;
   */
  points?: Decimal;

  /**
   * Total Contract Term Valued Item Value
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 11;
   */
  net?: Money;

  constructor(data?: PartialMessage<Contract_Term_TermValuedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Term.TermValuedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "entity", kind: "message", T: Contract_Term_TermValuedItem_Entity },
    { no: 5, name: "identifier", kind: "message", T: Identifier },
    { no: 6, name: "effective_time", kind: "message", T: DateTime },
    { no: 7, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 8, name: "unit_price", kind: "message", T: Money },
    { no: 9, name: "factor", kind: "message", T: Decimal },
    { no: 10, name: "points", kind: "message", T: Decimal },
    { no: 11, name: "net", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Term_TermValuedItem {
    return new Contract_Term_TermValuedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Term_TermValuedItem {
    return new Contract_Term_TermValuedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Term_TermValuedItem {
    return new Contract_Term_TermValuedItem().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Term_TermValuedItem | PlainMessage<Contract_Term_TermValuedItem> | undefined, b: Contract_Term_TermValuedItem | PlainMessage<Contract_Term_TermValuedItem> | undefined): boolean {
    return proto3.util.equals(Contract_Term_TermValuedItem, a, b);
  }
}

/**
 * Contract Term Valued Item Type
 *
 * @generated from message google.fhir.stu3.proto.Contract.Term.TermValuedItem.Entity
 */
export class Contract_Term_TermValuedItem_Entity extends Message<Contract_Term_TermValuedItem_Entity> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Contract.Term.TermValuedItem.Entity.entity
   */
  entity: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Contract_Term_TermValuedItem_Entity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Term.TermValuedItem.Entity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "entity" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "entity" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Term_TermValuedItem_Entity {
    return new Contract_Term_TermValuedItem_Entity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Term_TermValuedItem_Entity {
    return new Contract_Term_TermValuedItem_Entity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Term_TermValuedItem_Entity {
    return new Contract_Term_TermValuedItem_Entity().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Term_TermValuedItem_Entity | PlainMessage<Contract_Term_TermValuedItem_Entity> | undefined, b: Contract_Term_TermValuedItem_Entity | PlainMessage<Contract_Term_TermValuedItem_Entity> | undefined): boolean {
    return proto3.util.equals(Contract_Term_TermValuedItem_Entity, a, b);
  }
}

/**
 * Binding Contract
 *
 * @generated from message google.fhir.stu3.proto.Contract.Binding
 */
export class Contract_Binding extends Message<Contract_Binding> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Contract.Binding.binding
   */
  binding: {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 1;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Contract_Binding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.Binding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attachment", kind: "message", T: Attachment, oneof: "binding" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "binding" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_Binding {
    return new Contract_Binding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_Binding {
    return new Contract_Binding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_Binding {
    return new Contract_Binding().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_Binding | PlainMessage<Contract_Binding> | undefined, b: Contract_Binding | PlainMessage<Contract_Binding> | undefined): boolean {
    return proto3.util.equals(Contract_Binding, a, b);
  }
}

/**
 * Contract Friendly Language
 *
 * @generated from message google.fhir.stu3.proto.Contract.FriendlyLanguage
 */
export class Contract_FriendlyLanguage extends Message<Contract_FriendlyLanguage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Contract.FriendlyLanguage.Content content = 4;
   */
  content?: Contract_FriendlyLanguage_Content;

  constructor(data?: PartialMessage<Contract_FriendlyLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.FriendlyLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "content", kind: "message", T: Contract_FriendlyLanguage_Content },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_FriendlyLanguage {
    return new Contract_FriendlyLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_FriendlyLanguage {
    return new Contract_FriendlyLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_FriendlyLanguage {
    return new Contract_FriendlyLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_FriendlyLanguage | PlainMessage<Contract_FriendlyLanguage> | undefined, b: Contract_FriendlyLanguage | PlainMessage<Contract_FriendlyLanguage> | undefined): boolean {
    return proto3.util.equals(Contract_FriendlyLanguage, a, b);
  }
}

/**
 * Easily comprehended representation of this Contract
 *
 * @generated from message google.fhir.stu3.proto.Contract.FriendlyLanguage.Content
 */
export class Contract_FriendlyLanguage_Content extends Message<Contract_FriendlyLanguage_Content> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Contract.FriendlyLanguage.Content.content
   */
  content: {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 1;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Contract_FriendlyLanguage_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.FriendlyLanguage.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attachment", kind: "message", T: Attachment, oneof: "content" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "content" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_FriendlyLanguage_Content {
    return new Contract_FriendlyLanguage_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_FriendlyLanguage_Content {
    return new Contract_FriendlyLanguage_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_FriendlyLanguage_Content {
    return new Contract_FriendlyLanguage_Content().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_FriendlyLanguage_Content | PlainMessage<Contract_FriendlyLanguage_Content> | undefined, b: Contract_FriendlyLanguage_Content | PlainMessage<Contract_FriendlyLanguage_Content> | undefined): boolean {
    return proto3.util.equals(Contract_FriendlyLanguage_Content, a, b);
  }
}

/**
 * Contract Legal Language
 *
 * @generated from message google.fhir.stu3.proto.Contract.LegalLanguage
 */
export class Contract_LegalLanguage extends Message<Contract_LegalLanguage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Contract.LegalLanguage.Content content = 4;
   */
  content?: Contract_LegalLanguage_Content;

  constructor(data?: PartialMessage<Contract_LegalLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.LegalLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "content", kind: "message", T: Contract_LegalLanguage_Content },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_LegalLanguage {
    return new Contract_LegalLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_LegalLanguage {
    return new Contract_LegalLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_LegalLanguage {
    return new Contract_LegalLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_LegalLanguage | PlainMessage<Contract_LegalLanguage> | undefined, b: Contract_LegalLanguage | PlainMessage<Contract_LegalLanguage> | undefined): boolean {
    return proto3.util.equals(Contract_LegalLanguage, a, b);
  }
}

/**
 * Contract Legal Text
 *
 * @generated from message google.fhir.stu3.proto.Contract.LegalLanguage.Content
 */
export class Contract_LegalLanguage_Content extends Message<Contract_LegalLanguage_Content> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Contract.LegalLanguage.Content.content
   */
  content: {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 1;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Contract_LegalLanguage_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.LegalLanguage.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attachment", kind: "message", T: Attachment, oneof: "content" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "content" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_LegalLanguage_Content {
    return new Contract_LegalLanguage_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_LegalLanguage_Content {
    return new Contract_LegalLanguage_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_LegalLanguage_Content {
    return new Contract_LegalLanguage_Content().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_LegalLanguage_Content | PlainMessage<Contract_LegalLanguage_Content> | undefined, b: Contract_LegalLanguage_Content | PlainMessage<Contract_LegalLanguage_Content> | undefined): boolean {
    return proto3.util.equals(Contract_LegalLanguage_Content, a, b);
  }
}

/**
 * Computable Contract Language
 *
 * @generated from message google.fhir.stu3.proto.Contract.ComputableLanguage
 */
export class Contract_ComputableLanguage extends Message<Contract_ComputableLanguage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Contract.ComputableLanguage.Content content = 4;
   */
  content?: Contract_ComputableLanguage_Content;

  constructor(data?: PartialMessage<Contract_ComputableLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.ComputableLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "content", kind: "message", T: Contract_ComputableLanguage_Content },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_ComputableLanguage {
    return new Contract_ComputableLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_ComputableLanguage {
    return new Contract_ComputableLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_ComputableLanguage {
    return new Contract_ComputableLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_ComputableLanguage | PlainMessage<Contract_ComputableLanguage> | undefined, b: Contract_ComputableLanguage | PlainMessage<Contract_ComputableLanguage> | undefined): boolean {
    return proto3.util.equals(Contract_ComputableLanguage, a, b);
  }
}

/**
 * Computable Contract Rules
 *
 * @generated from message google.fhir.stu3.proto.Contract.ComputableLanguage.Content
 */
export class Contract_ComputableLanguage_Content extends Message<Contract_ComputableLanguage_Content> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Contract.ComputableLanguage.Content.content
   */
  content: {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 1;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Contract_ComputableLanguage_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Contract.ComputableLanguage.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attachment", kind: "message", T: Attachment, oneof: "content" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "content" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contract_ComputableLanguage_Content {
    return new Contract_ComputableLanguage_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contract_ComputableLanguage_Content {
    return new Contract_ComputableLanguage_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contract_ComputableLanguage_Content {
    return new Contract_ComputableLanguage_Content().fromJsonString(jsonString, options);
  }

  static equals(a: Contract_ComputableLanguage_Content | PlainMessage<Contract_ComputableLanguage_Content> | undefined, b: Contract_ComputableLanguage_Content | PlainMessage<Contract_ComputableLanguage_Content> | undefined): boolean {
    return proto3.util.equals(Contract_ComputableLanguage_Content, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Coverage, last updated
 * 2017-04-19T07:44:43.294+10:00. Insurance or medical plan or a payment
 * agreement. See http://hl7.org/fhir/StructureDefinition/Coverage
 *
 * @generated from message google.fhir.stu3.proto.Coverage
 */
export class Coverage extends Message<Coverage> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * The primary coverage ID
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Type of coverage such as medical or accident
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Owner of the policy
   *
   * @generated from field: google.fhir.stu3.proto.Reference policy_holder = 12;
   */
  policyHolder?: Reference;

  /**
   * Subscriber to the policy
   *
   * @generated from field: google.fhir.stu3.proto.Reference subscriber = 13;
   */
  subscriber?: Reference;

  /**
   * ID assigned to the Subscriber
   *
   * @generated from field: google.fhir.stu3.proto.String subscriber_id = 14;
   */
  subscriberId?: String;

  /**
   * Plan Beneficiary
   *
   * @generated from field: google.fhir.stu3.proto.Reference beneficiary = 15;
   */
  beneficiary?: Reference;

  /**
   * Beneficiary relationship to the Subscriber
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept relationship = 16;
   */
  relationship?: CodeableConcept;

  /**
   * Coverage start and end dates
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 17;
   */
  period?: Period;

  /**
   * Identifier for the plan or agreement issuer
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference payor = 18;
   */
  payor: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Coverage.Group grouping = 19;
   */
  grouping?: Coverage_Group;

  /**
   * Dependent number
   *
   * @generated from field: google.fhir.stu3.proto.String dependent = 20;
   */
  dependent?: String;

  /**
   * The plan instance or sequence counter
   *
   * @generated from field: google.fhir.stu3.proto.String sequence = 21;
   */
  sequence?: String;

  /**
   * Relative order of the coverage
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt order = 22;
   */
  order?: PositiveInt;

  /**
   * Insurer network
   *
   * @generated from field: google.fhir.stu3.proto.String network = 23;
   */
  network?: String;

  /**
   * Contract details
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference contract = 24;
   */
  contract: Reference[] = [];

  constructor(data?: PartialMessage<Coverage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Coverage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "policy_holder", kind: "message", T: Reference },
    { no: 13, name: "subscriber", kind: "message", T: Reference },
    { no: 14, name: "subscriber_id", kind: "message", T: String },
    { no: 15, name: "beneficiary", kind: "message", T: Reference },
    { no: 16, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 17, name: "period", kind: "message", T: Period },
    { no: 18, name: "payor", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "grouping", kind: "message", T: Coverage_Group },
    { no: 20, name: "dependent", kind: "message", T: String },
    { no: 21, name: "sequence", kind: "message", T: String },
    { no: 22, name: "order", kind: "message", T: PositiveInt },
    { no: 23, name: "network", kind: "message", T: String },
    { no: 24, name: "contract", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coverage {
    return new Coverage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coverage {
    return new Coverage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coverage {
    return new Coverage().fromJsonString(jsonString, options);
  }

  static equals(a: Coverage | PlainMessage<Coverage> | undefined, b: Coverage | PlainMessage<Coverage> | undefined): boolean {
    return proto3.util.equals(Coverage, a, b);
  }
}

/**
 * Additional coverage classifications
 *
 * @generated from message google.fhir.stu3.proto.Coverage.Group
 */
export class Coverage_Group extends Message<Coverage_Group> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for the group
   *
   * @generated from field: google.fhir.stu3.proto.String group = 4;
   */
  group?: String;

  /**
   * Display text for an identifier for the group
   *
   * @generated from field: google.fhir.stu3.proto.String group_display = 5;
   */
  groupDisplay?: String;

  /**
   * An identifier for the subsection of the group
   *
   * @generated from field: google.fhir.stu3.proto.String sub_group = 6;
   */
  subGroup?: String;

  /**
   * Display text for the subsection of the group
   *
   * @generated from field: google.fhir.stu3.proto.String sub_group_display = 7;
   */
  subGroupDisplay?: String;

  /**
   * An identifier for the plan
   *
   * @generated from field: google.fhir.stu3.proto.String plan = 8;
   */
  plan?: String;

  /**
   * Display text for the plan
   *
   * @generated from field: google.fhir.stu3.proto.String plan_display = 9;
   */
  planDisplay?: String;

  /**
   * An identifier for the subsection of the plan
   *
   * @generated from field: google.fhir.stu3.proto.String sub_plan = 10;
   */
  subPlan?: String;

  /**
   * Display text for the subsection of the plan
   *
   * @generated from field: google.fhir.stu3.proto.String sub_plan_display = 11;
   */
  subPlanDisplay?: String;

  /**
   * An identifier for the class
   *
   * @generated from field: google.fhir.stu3.proto.String class_value = 12 [json_name = "class"];
   */
  classValue?: String;

  /**
   * Display text for the class
   *
   * @generated from field: google.fhir.stu3.proto.String class_display = 13;
   */
  classDisplay?: String;

  /**
   * An identifier for the subsection of the class
   *
   * @generated from field: google.fhir.stu3.proto.String sub_class = 14;
   */
  subClass?: String;

  /**
   * Display text for the subsection of the subclass
   *
   * @generated from field: google.fhir.stu3.proto.String sub_class_display = 15;
   */
  subClassDisplay?: String;

  constructor(data?: PartialMessage<Coverage_Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Coverage.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "group", kind: "message", T: String },
    { no: 5, name: "group_display", kind: "message", T: String },
    { no: 6, name: "sub_group", kind: "message", T: String },
    { no: 7, name: "sub_group_display", kind: "message", T: String },
    { no: 8, name: "plan", kind: "message", T: String },
    { no: 9, name: "plan_display", kind: "message", T: String },
    { no: 10, name: "sub_plan", kind: "message", T: String },
    { no: 11, name: "sub_plan_display", kind: "message", T: String },
    { no: 12, name: "class_value", jsonName: "class", kind: "message", T: String },
    { no: 13, name: "class_display", kind: "message", T: String },
    { no: 14, name: "sub_class", kind: "message", T: String },
    { no: 15, name: "sub_class_display", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coverage_Group {
    return new Coverage_Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coverage_Group {
    return new Coverage_Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coverage_Group {
    return new Coverage_Group().fromJsonString(jsonString, options);
  }

  static equals(a: Coverage_Group | PlainMessage<Coverage_Group> | undefined, b: Coverage_Group | PlainMessage<Coverage_Group> | undefined): boolean {
    return proto3.util.equals(Coverage_Group, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DataElement, last updated
 * 2017-04-19T07:44:43.294+10:00. Resource data element. See
 * http://hl7.org/fhir/StructureDefinition/DataElement
 *
 * @generated from message google.fhir.stu3.proto.DataElement
 */
export class DataElement extends Message<DataElement> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this data element (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the data element
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the data element
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 12;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 13;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 15;
   */
  publisher?: String;

  /**
   * Name for this data element (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 16;
   */
  name?: String;

  /**
   * Name for this data element (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 17;
   */
  title?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 19;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for data element (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 20;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 21;
   */
  copyright?: Markdown;

  /**
   * comparable | fully-specified | equivalent | convertable | scaleable |
   * flexible
   *
   * @generated from field: google.fhir.stu3.proto.DataElementStringencyCode stringency = 22;
   */
  stringency?: DataElementStringencyCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DataElement.Mapping mapping = 23;
   */
  mapping: DataElement_Mapping[] = [];

  /**
   * Definition of element
   *
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition element = 24;
   */
  element: ElementDefinition[] = [];

  constructor(data?: PartialMessage<DataElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 13, name: "experimental", kind: "message", T: Boolean },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "publisher", kind: "message", T: String },
    { no: 16, name: "name", kind: "message", T: String },
    { no: 17, name: "title", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 20, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "copyright", kind: "message", T: Markdown },
    { no: 22, name: "stringency", kind: "message", T: DataElementStringencyCode },
    { no: 23, name: "mapping", kind: "message", T: DataElement_Mapping, repeated: true },
    { no: 24, name: "element", kind: "message", T: ElementDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataElement {
    return new DataElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataElement {
    return new DataElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataElement {
    return new DataElement().fromJsonString(jsonString, options);
  }

  static equals(a: DataElement | PlainMessage<DataElement> | undefined, b: DataElement | PlainMessage<DataElement> | undefined): boolean {
    return proto3.util.equals(DataElement, a, b);
  }
}

/**
 * External specification mapped to
 *
 * @generated from message google.fhir.stu3.proto.DataElement.Mapping
 */
export class DataElement_Mapping extends Message<DataElement_Mapping> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Internal id when this mapping is used
   *
   * @generated from field: google.fhir.stu3.proto.Id identity = 4;
   */
  identity?: Id;

  /**
   * Identifies what this mapping refers to
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * Names what this mapping refers to
   *
   * @generated from field: google.fhir.stu3.proto.String name = 6;
   */
  name?: String;

  /**
   * Versions, issues, scope limitations, etc.
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 7;
   */
  comment?: String;

  constructor(data?: PartialMessage<DataElement_Mapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataElement.Mapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identity", kind: "message", T: Id },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "name", kind: "message", T: String },
    { no: 7, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataElement_Mapping {
    return new DataElement_Mapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataElement_Mapping {
    return new DataElement_Mapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataElement_Mapping {
    return new DataElement_Mapping().fromJsonString(jsonString, options);
  }

  static equals(a: DataElement_Mapping | PlainMessage<DataElement_Mapping> | undefined, b: DataElement_Mapping | PlainMessage<DataElement_Mapping> | undefined): boolean {
    return proto3.util.equals(DataElement_Mapping, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DetectedIssue, last updated
 * 2017-04-19T07:44:43.294+10:00. Clinical issue with action. See
 * http://hl7.org/fhir/StructureDefinition/DetectedIssue
 *
 * @generated from message google.fhir.stu3.proto.DetectedIssue
 */
export class DetectedIssue extends Message<DetectedIssue> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id for the detected issue
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 10;
   */
  status?: ObservationStatusCode;

  /**
   * Issue Category, e.g. drug-drug, duplicate therapy, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category?: CodeableConcept;

  /**
   * high | moderate | low
   *
   * @generated from field: google.fhir.stu3.proto.DetectedIssueSeverityCode severity = 12;
   */
  severity?: DetectedIssueSeverityCode;

  /**
   * Associated patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * When identified
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * The provider or device that identified the issue
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 15;
   */
  author?: Reference;

  /**
   * Problem resource
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference implicated = 16;
   */
  implicated: Reference[] = [];

  /**
   * Description and context
   *
   * @generated from field: google.fhir.stu3.proto.String detail = 17;
   */
  detail?: String;

  /**
   * Authority for issue
   *
   * @generated from field: google.fhir.stu3.proto.Uri reference = 18;
   */
  reference?: Uri;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DetectedIssue.Mitigation mitigation = 19;
   */
  mitigation: DetectedIssue_Mitigation[] = [];

  constructor(data?: PartialMessage<DetectedIssue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DetectedIssue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept },
    { no: 12, name: "severity", kind: "message", T: DetectedIssueSeverityCode },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "author", kind: "message", T: Reference },
    { no: 16, name: "implicated", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "detail", kind: "message", T: String },
    { no: 18, name: "reference", kind: "message", T: Uri },
    { no: 19, name: "mitigation", kind: "message", T: DetectedIssue_Mitigation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue {
    return new DetectedIssue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue {
    return new DetectedIssue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue {
    return new DetectedIssue().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue | PlainMessage<DetectedIssue> | undefined, b: DetectedIssue | PlainMessage<DetectedIssue> | undefined): boolean {
    return proto3.util.equals(DetectedIssue, a, b);
  }
}

/**
 * Step taken to address
 *
 * @generated from message google.fhir.stu3.proto.DetectedIssue.Mitigation
 */
export class DetectedIssue_Mitigation extends Message<DetectedIssue_Mitigation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What mitigation?
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Date committed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 5;
   */
  date?: DateTime;

  /**
   * Who is committing?
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 6;
   */
  author?: Reference;

  constructor(data?: PartialMessage<DetectedIssue_Mitigation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DetectedIssue.Mitigation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: CodeableConcept },
    { no: 5, name: "date", kind: "message", T: DateTime },
    { no: 6, name: "author", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue_Mitigation {
    return new DetectedIssue_Mitigation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue_Mitigation {
    return new DetectedIssue_Mitigation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue_Mitigation {
    return new DetectedIssue_Mitigation().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue_Mitigation | PlainMessage<DetectedIssue_Mitigation> | undefined, b: DetectedIssue_Mitigation | PlainMessage<DetectedIssue_Mitigation> | undefined): boolean {
    return proto3.util.equals(DetectedIssue_Mitigation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Device, last updated
 * 2017-04-19T07:44:43.294+10:00. Item used in healthcare. See
 * http://hl7.org/fhir/StructureDefinition/Device
 *
 * @generated from message google.fhir.stu3.proto.Device
 */
export class Device extends Message<Device> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Instance identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Device.Udi udi = 10;
   */
  udi?: Device_Udi;

  /**
   * active | inactive | entered-in-error | unknown
   *
   * @generated from field: google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
   */
  status?: FHIRDeviceStatusCode;

  /**
   * What kind of device this is
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * Lot number of manufacture
   *
   * @generated from field: google.fhir.stu3.proto.String lot_number = 13;
   */
  lotNumber?: String;

  /**
   * Name of device manufacturer
   *
   * @generated from field: google.fhir.stu3.proto.String manufacturer = 14;
   */
  manufacturer?: String;

  /**
   * Date when the device was made
   *
   * @generated from field: google.fhir.stu3.proto.DateTime manufacture_date = 15;
   */
  manufactureDate?: DateTime;

  /**
   * Date and time of expiry of this device (if applicable)
   *
   * @generated from field: google.fhir.stu3.proto.DateTime expiration_date = 16;
   */
  expirationDate?: DateTime;

  /**
   * Model id assigned by the manufacturer
   *
   * @generated from field: google.fhir.stu3.proto.String model = 17;
   */
  model?: String;

  /**
   * Version number (i.e. software)
   *
   * @generated from field: google.fhir.stu3.proto.String version = 18;
   */
  version?: String;

  /**
   * Patient to whom Device is affixed
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 19;
   */
  patient?: Reference;

  /**
   * Organization responsible for device
   *
   * @generated from field: google.fhir.stu3.proto.Reference owner = 20;
   */
  owner?: Reference;

  /**
   * Details for human/organization for support
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint contact = 21;
   */
  contact: ContactPoint[] = [];

  /**
   * Where the resource is found
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 22;
   */
  location?: Reference;

  /**
   * Network address to contact device
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 23;
   */
  url?: Uri;

  /**
   * Device notes and comments
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 24;
   */
  note: Annotation[] = [];

  /**
   * Safety Characteristics of Device
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept safety = 25;
   */
  safety: CodeableConcept[] = [];

  constructor(data?: PartialMessage<Device>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Device";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "udi", kind: "message", T: Device_Udi },
    { no: 11, name: "status", kind: "message", T: FHIRDeviceStatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept },
    { no: 13, name: "lot_number", kind: "message", T: String },
    { no: 14, name: "manufacturer", kind: "message", T: String },
    { no: 15, name: "manufacture_date", kind: "message", T: DateTime },
    { no: 16, name: "expiration_date", kind: "message", T: DateTime },
    { no: 17, name: "model", kind: "message", T: String },
    { no: 18, name: "version", kind: "message", T: String },
    { no: 19, name: "patient", kind: "message", T: Reference },
    { no: 20, name: "owner", kind: "message", T: Reference },
    { no: 21, name: "contact", kind: "message", T: ContactPoint, repeated: true },
    { no: 22, name: "location", kind: "message", T: Reference },
    { no: 23, name: "url", kind: "message", T: Uri },
    { no: 24, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 25, name: "safety", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Device {
    return new Device().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Device {
    return new Device().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Device {
    return new Device().fromJsonString(jsonString, options);
  }

  static equals(a: Device | PlainMessage<Device> | undefined, b: Device | PlainMessage<Device> | undefined): boolean {
    return proto3.util.equals(Device, a, b);
  }
}

/**
 * Unique Device Identifier (UDI) Barcode string
 *
 * @generated from message google.fhir.stu3.proto.Device.Udi
 */
export class Device_Udi extends Message<Device_Udi> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Mandatory fixed portion of UDI
   *
   * @generated from field: google.fhir.stu3.proto.String device_identifier = 4;
   */
  deviceIdentifier?: String;

  /**
   * Device Name as appears on UDI label
   *
   * @generated from field: google.fhir.stu3.proto.String name = 5;
   */
  name?: String;

  /**
   * Regional UDI authority
   *
   * @generated from field: google.fhir.stu3.proto.Uri jurisdiction = 6;
   */
  jurisdiction?: Uri;

  /**
   * UDI Human Readable Barcode String
   *
   * @generated from field: google.fhir.stu3.proto.String carrier_hrf = 7 [json_name = "carrierHRF"];
   */
  carrierHrf?: String;

  /**
   * UDI Machine Readable Barcode String
   *
   * @generated from field: google.fhir.stu3.proto.Base64Binary carrier_aidc = 8 [json_name = "carrierAIDC"];
   */
  carrierAidc?: Base64Binary;

  /**
   * UDI Issuing Organization
   *
   * @generated from field: google.fhir.stu3.proto.Uri issuer = 9;
   */
  issuer?: Uri;

  /**
   * barcode | rfid | manual +
   *
   * @generated from field: google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
   */
  entryType?: UDIEntryTypeCode;

  constructor(data?: PartialMessage<Device_Udi>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Device.Udi";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "device_identifier", kind: "message", T: String },
    { no: 5, name: "name", kind: "message", T: String },
    { no: 6, name: "jurisdiction", kind: "message", T: Uri },
    { no: 7, name: "carrier_hrf", jsonName: "carrierHRF", kind: "message", T: String },
    { no: 8, name: "carrier_aidc", jsonName: "carrierAIDC", kind: "message", T: Base64Binary },
    { no: 9, name: "issuer", kind: "message", T: Uri },
    { no: 10, name: "entry_type", kind: "message", T: UDIEntryTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Device_Udi {
    return new Device_Udi().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Device_Udi {
    return new Device_Udi().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Device_Udi {
    return new Device_Udi().fromJsonString(jsonString, options);
  }

  static equals(a: Device_Udi | PlainMessage<Device_Udi> | undefined, b: Device_Udi | PlainMessage<Device_Udi> | undefined): boolean {
    return proto3.util.equals(Device_Udi, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DeviceComponent, last updated
 * 2017-04-19T07:44:43.294+10:00. An instance of a medical-related component of
 * a medical device. See http://hl7.org/fhir/StructureDefinition/DeviceComponent
 *
 * @generated from message google.fhir.stu3.proto.DeviceComponent
 */
export class DeviceComponent extends Message<DeviceComponent> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Instance id assigned by the software stack
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * What kind of component it is
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 10;
   */
  type?: CodeableConcept;

  /**
   * Recent system change timestamp
   *
   * @generated from field: google.fhir.stu3.proto.Instant last_system_change = 11;
   */
  lastSystemChange?: Instant;

  /**
   * Top-level device resource link
   *
   * @generated from field: google.fhir.stu3.proto.Reference source = 12;
   */
  source?: Reference;

  /**
   * Parent resource link
   *
   * @generated from field: google.fhir.stu3.proto.Reference parent = 13;
   */
  parent?: Reference;

  /**
   * Current operational status of the component, for example On, Off or Standby
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept operational_status = 14;
   */
  operationalStatus: CodeableConcept[] = [];

  /**
   * Current supported parameter group
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept parameter_group = 15;
   */
  parameterGroup?: CodeableConcept;

  /**
   * other | chemical | electrical | impedance | nuclear | optical | thermal |
   * biological | mechanical | acoustical | manual+
   *
   * @generated from field: google.fhir.stu3.proto.MeasmntPrincipleCode measurement_principle = 16;
   */
  measurementPrinciple?: MeasmntPrincipleCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DeviceComponent.ProductionSpecification production_specification = 17;
   */
  productionSpecification: DeviceComponent_ProductionSpecification[] = [];

  /**
   * Language code for the human-readable text strings produced by the device
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept language_code = 18;
   */
  languageCode?: CodeableConcept;

  constructor(data?: PartialMessage<DeviceComponent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceComponent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "type", kind: "message", T: CodeableConcept },
    { no: 11, name: "last_system_change", kind: "message", T: Instant },
    { no: 12, name: "source", kind: "message", T: Reference },
    { no: 13, name: "parent", kind: "message", T: Reference },
    { no: 14, name: "operational_status", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "parameter_group", kind: "message", T: CodeableConcept },
    { no: 16, name: "measurement_principle", kind: "message", T: MeasmntPrincipleCode },
    { no: 17, name: "production_specification", kind: "message", T: DeviceComponent_ProductionSpecification, repeated: true },
    { no: 18, name: "language_code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceComponent {
    return new DeviceComponent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceComponent {
    return new DeviceComponent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceComponent {
    return new DeviceComponent().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceComponent | PlainMessage<DeviceComponent> | undefined, b: DeviceComponent | PlainMessage<DeviceComponent> | undefined): boolean {
    return proto3.util.equals(DeviceComponent, a, b);
  }
}

/**
 * Specification details such as Component Revisions, or Serial Numbers
 *
 * @generated from message google.fhir.stu3.proto.DeviceComponent.ProductionSpecification
 */
export class DeviceComponent_ProductionSpecification extends Message<DeviceComponent_ProductionSpecification> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type or kind of production specification, for example serial number or
   * software revision
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept spec_type = 4;
   */
  specType?: CodeableConcept;

  /**
   * Internal component unique identification
   *
   * @generated from field: google.fhir.stu3.proto.Identifier component_id = 5;
   */
  componentId?: Identifier;

  /**
   * A printable string defining the component
   *
   * @generated from field: google.fhir.stu3.proto.String production_spec = 6;
   */
  productionSpec?: String;

  constructor(data?: PartialMessage<DeviceComponent_ProductionSpecification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceComponent.ProductionSpecification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "spec_type", kind: "message", T: CodeableConcept },
    { no: 5, name: "component_id", kind: "message", T: Identifier },
    { no: 6, name: "production_spec", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceComponent_ProductionSpecification {
    return new DeviceComponent_ProductionSpecification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceComponent_ProductionSpecification {
    return new DeviceComponent_ProductionSpecification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceComponent_ProductionSpecification {
    return new DeviceComponent_ProductionSpecification().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceComponent_ProductionSpecification | PlainMessage<DeviceComponent_ProductionSpecification> | undefined, b: DeviceComponent_ProductionSpecification | PlainMessage<DeviceComponent_ProductionSpecification> | undefined): boolean {
    return proto3.util.equals(DeviceComponent_ProductionSpecification, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DeviceMetric, last updated
 * 2017-04-19T07:44:43.294+10:00. Measurement, calculation or setting capability
 * of a medical device. See http://hl7.org/fhir/StructureDefinition/DeviceMetric
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetric
 */
export class DeviceMetric extends Message<DeviceMetric> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier of this DeviceMetric
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Identity of metric, for example Heart Rate or PEEP Setting
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 10;
   */
  type?: CodeableConcept;

  /**
   * Unit of Measure for the Metric
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept unit = 11;
   */
  unit?: CodeableConcept;

  /**
   * Describes the link to the source Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference source = 12;
   */
  source?: Reference;

  /**
   * Describes the link to the parent DeviceComponent
   *
   * @generated from field: google.fhir.stu3.proto.Reference parent = 13;
   */
  parent?: Reference;

  /**
   * on | off | standby | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.DeviceMetricOperationalStatusCode operational_status = 14;
   */
  operationalStatus?: DeviceMetricOperationalStatusCode;

  /**
   * black | red | green | yellow | blue | magenta | cyan | white
   *
   * @generated from field: google.fhir.stu3.proto.DeviceMetricColorCode color = 15;
   */
  color?: DeviceMetricColorCode;

  /**
   * measurement | setting | calculation | unspecified
   *
   * @generated from field: google.fhir.stu3.proto.DeviceMetricCategoryCode category = 16;
   */
  category?: DeviceMetricCategoryCode;

  /**
   * Describes the measurement repetition time
   *
   * @generated from field: google.fhir.stu3.proto.Timing measurement_period = 17;
   */
  measurementPeriod?: Timing;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DeviceMetric.Calibration calibration = 18;
   */
  calibration: DeviceMetric_Calibration[] = [];

  constructor(data?: PartialMessage<DeviceMetric>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetric";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "type", kind: "message", T: CodeableConcept },
    { no: 11, name: "unit", kind: "message", T: CodeableConcept },
    { no: 12, name: "source", kind: "message", T: Reference },
    { no: 13, name: "parent", kind: "message", T: Reference },
    { no: 14, name: "operational_status", kind: "message", T: DeviceMetricOperationalStatusCode },
    { no: 15, name: "color", kind: "message", T: DeviceMetricColorCode },
    { no: 16, name: "category", kind: "message", T: DeviceMetricCategoryCode },
    { no: 17, name: "measurement_period", kind: "message", T: Timing },
    { no: 18, name: "calibration", kind: "message", T: DeviceMetric_Calibration, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetric {
    return new DeviceMetric().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetric {
    return new DeviceMetric().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetric {
    return new DeviceMetric().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetric | PlainMessage<DeviceMetric> | undefined, b: DeviceMetric | PlainMessage<DeviceMetric> | undefined): boolean {
    return proto3.util.equals(DeviceMetric, a, b);
  }
}

/**
 * Describes the calibrations that have been performed or that are required to
 * be performed
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetric.Calibration
 */
export class DeviceMetric_Calibration extends Message<DeviceMetric_Calibration> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * unspecified | offset | gain | two-point
   *
   * @generated from field: google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode type = 4;
   */
  type?: DeviceMetricCalibrationTypeCode;

  /**
   * not-calibrated | calibration-required | calibrated | unspecified
   *
   * @generated from field: google.fhir.stu3.proto.DeviceMetricCalibrationStateCode state = 5;
   */
  state?: DeviceMetricCalibrationStateCode;

  /**
   * Describes the time last calibration has been performed
   *
   * @generated from field: google.fhir.stu3.proto.Instant time = 6;
   */
  time?: Instant;

  constructor(data?: PartialMessage<DeviceMetric_Calibration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetric.Calibration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: DeviceMetricCalibrationTypeCode },
    { no: 5, name: "state", kind: "message", T: DeviceMetricCalibrationStateCode },
    { no: 6, name: "time", kind: "message", T: Instant },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetric_Calibration {
    return new DeviceMetric_Calibration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetric_Calibration {
    return new DeviceMetric_Calibration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetric_Calibration {
    return new DeviceMetric_Calibration().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetric_Calibration | PlainMessage<DeviceMetric_Calibration> | undefined, b: DeviceMetric_Calibration | PlainMessage<DeviceMetric_Calibration> | undefined): boolean {
    return proto3.util.equals(DeviceMetric_Calibration, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DeviceRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. Medical device request. See
 * http://hl7.org/fhir/StructureDefinition/DeviceRequest
 *
 * @generated from message google.fhir.stu3.proto.DeviceRequest
 */
export class DeviceRequest extends Message<DeviceRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Request identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * What request replaces
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference prior_request = 12;
   */
  priorRequest: Reference[] = [];

  /**
   * Identifier of composite request
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 13;
   */
  groupIdentifier?: Identifier;

  /**
   * draft | active | suspended | completed | entered-in-error | cancelled
   *
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode status = 14;
   */
  status?: RequestStatusCode;

  /**
   * proposal | plan | original-order | encoded | reflex-order
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept intent = 15;
   */
  intent?: CodeableConcept;

  /**
   * Indicates how quickly the {{title}} should be addressed with respect to
   * other requests
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 16;
   */
  priority?: RequestPriorityCode;

  /**
   * @generated from field: google.fhir.stu3.proto.DeviceRequest.Code code = 17;
   */
  code?: DeviceRequest_Code;

  /**
   * Focus of request
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Encounter or Episode motivating request
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 19;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.DeviceRequest.Occurrence occurrence = 20;
   */
  occurrence?: DeviceRequest_Occurrence;

  /**
   * When recorded
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 21;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.DeviceRequest.Requester requester = 22;
   */
  requester?: DeviceRequest_Requester;

  /**
   * Fille role
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept performer_type = 23;
   */
  performerType?: CodeableConcept;

  /**
   * Requested Filler
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 24;
   */
  performer?: Reference;

  /**
   * Coded Reason for request
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 25;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Linked Reason for request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 26;
   */
  reasonReference: Reference[] = [];

  /**
   * Additional clinical information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_info = 27;
   */
  supportingInfo: Reference[] = [];

  /**
   * Notes or comments
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 28;
   */
  note: Annotation[] = [];

  /**
   * Request provenance
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference relevant_history = 29;
   */
  relevantHistory: Reference[] = [];

  constructor(data?: PartialMessage<DeviceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "prior_request", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "group_identifier", kind: "message", T: Identifier },
    { no: 14, name: "status", kind: "message", T: RequestStatusCode },
    { no: 15, name: "intent", kind: "message", T: CodeableConcept },
    { no: 16, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 17, name: "code", kind: "message", T: DeviceRequest_Code },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "context", kind: "message", T: Reference },
    { no: 20, name: "occurrence", kind: "message", T: DeviceRequest_Occurrence },
    { no: 21, name: "authored_on", kind: "message", T: DateTime },
    { no: 22, name: "requester", kind: "message", T: DeviceRequest_Requester },
    { no: 23, name: "performer_type", kind: "message", T: CodeableConcept },
    { no: 24, name: "performer", kind: "message", T: Reference },
    { no: 25, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 29, name: "relevant_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest {
    return new DeviceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest {
    return new DeviceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest {
    return new DeviceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest | PlainMessage<DeviceRequest> | undefined, b: DeviceRequest | PlainMessage<DeviceRequest> | undefined): boolean {
    return proto3.util.equals(DeviceRequest, a, b);
  }
}

/**
 * Device requested
 *
 * @generated from message google.fhir.stu3.proto.DeviceRequest.Code
 */
export class DeviceRequest_Code extends Message<DeviceRequest_Code> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DeviceRequest.Code.code
   */
  code: {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceRequest_Code>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceRequest.Code";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "code" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "code" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_Code {
    return new DeviceRequest_Code().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_Code {
    return new DeviceRequest_Code().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_Code {
    return new DeviceRequest_Code().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_Code | PlainMessage<DeviceRequest_Code> | undefined, b: DeviceRequest_Code | PlainMessage<DeviceRequest_Code> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_Code, a, b);
  }
}

/**
 * Desired time or schedule for use
 *
 * @generated from message google.fhir.stu3.proto.DeviceRequest.Occurrence
 */
export class DeviceRequest_Occurrence extends Message<DeviceRequest_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DeviceRequest.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceRequest_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceRequest.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_Occurrence {
    return new DeviceRequest_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_Occurrence {
    return new DeviceRequest_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_Occurrence {
    return new DeviceRequest_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_Occurrence | PlainMessage<DeviceRequest_Occurrence> | undefined, b: DeviceRequest_Occurrence | PlainMessage<DeviceRequest_Occurrence> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_Occurrence, a, b);
  }
}

/**
 * Who/what is requesting diagnostics
 *
 * @generated from message google.fhir.stu3.proto.DeviceRequest.Requester
 */
export class DeviceRequest_Requester extends Message<DeviceRequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual making the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<DeviceRequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceRequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_Requester {
    return new DeviceRequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_Requester {
    return new DeviceRequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_Requester {
    return new DeviceRequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_Requester | PlainMessage<DeviceRequest_Requester> | undefined, b: DeviceRequest_Requester | PlainMessage<DeviceRequest_Requester> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_Requester, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DeviceUseStatement, last updated
 * 2017-04-19T07:44:43.294+10:00. Record of use of a device. See
 * http://hl7.org/fhir/StructureDefinition/DeviceUseStatement
 *
 * @generated from message google.fhir.stu3.proto.DeviceUseStatement
 */
export class DeviceUseStatement extends Message<DeviceUseStatement> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier for this record
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | completed | entered-in-error +
   *
   * @generated from field: google.fhir.stu3.proto.DeviceUseStatementStatusCode status = 10;
   */
  status?: DeviceUseStatementStatusCode;

  /**
   * Patient using device
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 11;
   */
  subject?: Reference;

  /**
   * Period device was used
   *
   * @generated from field: google.fhir.stu3.proto.Period when_used = 12;
   */
  whenUsed?: Period;

  /**
   * @generated from field: google.fhir.stu3.proto.DeviceUseStatement.TimingType timing = 13;
   */
  timing?: DeviceUseStatement_TimingType;

  /**
   * When statement was recorded
   *
   * @generated from field: google.fhir.stu3.proto.DateTime recorded_on = 14;
   */
  recordedOn?: DateTime;

  /**
   * Who made the statement
   *
   * @generated from field: google.fhir.stu3.proto.Reference source = 15;
   */
  source?: Reference;

  /**
   * Reference to device used
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 16;
   */
  device?: Reference;

  /**
   * Why device was used
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept indication = 17;
   */
  indication: CodeableConcept[] = [];

  /**
   * Target body site
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 18;
   */
  bodySite?: CodeableConcept;

  /**
   * Addition details (comments, instructions)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 19;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<DeviceUseStatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceUseStatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: DeviceUseStatementStatusCode },
    { no: 11, name: "subject", kind: "message", T: Reference },
    { no: 12, name: "when_used", kind: "message", T: Period },
    { no: 13, name: "timing", kind: "message", T: DeviceUseStatement_TimingType },
    { no: 14, name: "recorded_on", kind: "message", T: DateTime },
    { no: 15, name: "source", kind: "message", T: Reference },
    { no: 16, name: "device", kind: "message", T: Reference },
    { no: 17, name: "indication", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 19, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatement {
    return new DeviceUseStatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatement {
    return new DeviceUseStatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatement {
    return new DeviceUseStatement().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatement | PlainMessage<DeviceUseStatement> | undefined, b: DeviceUseStatement | PlainMessage<DeviceUseStatement> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatement, a, b);
  }
}

/**
 * How often  the device was used
 *
 * @generated from message google.fhir.stu3.proto.DeviceUseStatement.TimingType
 */
export class DeviceUseStatement_TimingType extends Message<DeviceUseStatement_TimingType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DeviceUseStatement.TimingType.timing
   */
  timing: {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing_value = 1 [json_name = "timing"];
     */
    value: Timing;
    case: "timingValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 3;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceUseStatement_TimingType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceUseStatement.TimingType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing_value", jsonName: "timing", kind: "message", T: Timing, oneof: "timing" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "timing" },
    { no: 3, name: "date_time", kind: "message", T: DateTime, oneof: "timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatement_TimingType {
    return new DeviceUseStatement_TimingType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatement_TimingType {
    return new DeviceUseStatement_TimingType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatement_TimingType {
    return new DeviceUseStatement_TimingType().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatement_TimingType | PlainMessage<DeviceUseStatement_TimingType> | undefined, b: DeviceUseStatement_TimingType | PlainMessage<DeviceUseStatement_TimingType> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatement_TimingType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DiagnosticReport, last updated
 * 2017-04-19T07:44:43.294+10:00. A Diagnostic report - a combination of request
 * information, atomic results, images, interpretation, as well as formatted
 * reports. See http://hl7.org/fhir/StructureDefinition/DiagnosticReport
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticReport
 */
export class DiagnosticReport extends Message<DiagnosticReport> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | partial | preliminary | final +
   *
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11;
   */
  status?: DiagnosticReportStatusCode;

  /**
   * Service category
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * Name/Code for this diagnostic report
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.DiagnosticReport.Effective effective = 16;
   */
  effective?: DiagnosticReport_Effective;

  /**
   * DateTime this version was released
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticReport.Performer performer = 18;
   */
  performer: DiagnosticReport_Performer[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 19;
   */
  specimen: Reference[] = [];

  /**
   * Observations - simple, or complex nested groups
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference result = 20;
   */
  result: Reference[] = [];

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference imaging_study = 21;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticReport.Image image = 22;
   */
  image: DiagnosticReport_Image[] = [];

  /**
   * Clinical Interpretation of test results
   *
   * @generated from field: google.fhir.stu3.proto.String conclusion = 23;
   */
  conclusion?: String;

  /**
   * Codes for the conclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
   */
  codedDiagnosis: CodeableConcept[] = [];

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment presented_form = 25;
   */
  presentedForm: Attachment[] = [];

  constructor(data?: PartialMessage<DiagnosticReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: DiagnosticReportStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: DiagnosticReport_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: DiagnosticReport_Performer, repeated: true },
    { no: 19, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "result", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "image", kind: "message", T: DiagnosticReport_Image, repeated: true },
    { no: 23, name: "conclusion", kind: "message", T: String },
    { no: 24, name: "coded_diagnosis", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "presented_form", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReport {
    return new DiagnosticReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReport {
    return new DiagnosticReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReport {
    return new DiagnosticReport().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReport | PlainMessage<DiagnosticReport> | undefined, b: DiagnosticReport | PlainMessage<DiagnosticReport> | undefined): boolean {
    return proto3.util.equals(DiagnosticReport, a, b);
  }
}

/**
 * Clinically relevant time/time-period for report
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticReport.Effective
 */
export class DiagnosticReport_Effective extends Message<DiagnosticReport_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DiagnosticReport.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DiagnosticReport_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticReport.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReport_Effective {
    return new DiagnosticReport_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReport_Effective {
    return new DiagnosticReport_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReport_Effective {
    return new DiagnosticReport_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReport_Effective | PlainMessage<DiagnosticReport_Effective> | undefined, b: DiagnosticReport_Effective | PlainMessage<DiagnosticReport_Effective> | undefined): boolean {
    return proto3.util.equals(DiagnosticReport_Effective, a, b);
  }
}

/**
 * Participants in producing the report
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticReport.Performer
 */
export class DiagnosticReport_Performer extends Message<DiagnosticReport_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performer
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Practitioner or Organization  participant
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<DiagnosticReport_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticReport.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReport_Performer {
    return new DiagnosticReport_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReport_Performer {
    return new DiagnosticReport_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReport_Performer {
    return new DiagnosticReport_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReport_Performer | PlainMessage<DiagnosticReport_Performer> | undefined, b: DiagnosticReport_Performer | PlainMessage<DiagnosticReport_Performer> | undefined): boolean {
    return proto3.util.equals(DiagnosticReport_Performer, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticReport.Image
 */
export class DiagnosticReport_Image extends Message<DiagnosticReport_Image> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.stu3.proto.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<DiagnosticReport_Image>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticReport.Image";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReport_Image {
    return new DiagnosticReport_Image().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReport_Image {
    return new DiagnosticReport_Image().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReport_Image {
    return new DiagnosticReport_Image().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReport_Image | PlainMessage<DiagnosticReport_Image> | undefined, b: DiagnosticReport_Image | PlainMessage<DiagnosticReport_Image> | undefined): boolean {
    return proto3.util.equals(DiagnosticReport_Image, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DocumentManifest, last updated
 * 2017-04-19T07:44:43.294+10:00. A list that defines a set of documents. See
 * http://hl7.org/fhir/StructureDefinition/DocumentManifest
 *
 * @generated from message google.fhir.stu3.proto.DocumentManifest
 */
export class DocumentManifest extends Message<DocumentManifest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique Identifier for the set of documents
   *
   * @generated from field: google.fhir.stu3.proto.Identifier master_identifier = 9;
   */
  masterIdentifier?: Identifier;

  /**
   * Other identifiers for the manifest
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * current | superseded | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.DocumentReferenceStatusCode status = 11;
   */
  status?: DocumentReferenceStatusCode;

  /**
   * Kind of document set
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * The subject of the set of documents
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * When this document manifest created
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 14;
   */
  created?: DateTime;

  /**
   * Who and/or what authored the manifest
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 15;
   */
  author: Reference[] = [];

  /**
   * Intended to get notified about this set of documents
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference recipient = 16;
   */
  recipient: Reference[] = [];

  /**
   * The source system/application/software
   *
   * @generated from field: google.fhir.stu3.proto.Uri source = 17;
   */
  source?: Uri;

  /**
   * Human-readable description (title)
   *
   * @generated from field: google.fhir.stu3.proto.String description = 18;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DocumentManifest.Content content = 19;
   */
  content: DocumentManifest_Content[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DocumentManifest.Related related = 20;
   */
  related: DocumentManifest_Related[] = [];

  constructor(data?: PartialMessage<DocumentManifest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentManifest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "master_identifier", kind: "message", T: Identifier },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: DocumentReferenceStatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "created", kind: "message", T: DateTime },
    { no: 15, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "recipient", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "source", kind: "message", T: Uri },
    { no: 18, name: "description", kind: "message", T: String },
    { no: 19, name: "content", kind: "message", T: DocumentManifest_Content, repeated: true },
    { no: 20, name: "related", kind: "message", T: DocumentManifest_Related, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentManifest {
    return new DocumentManifest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentManifest {
    return new DocumentManifest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentManifest {
    return new DocumentManifest().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentManifest | PlainMessage<DocumentManifest> | undefined, b: DocumentManifest | PlainMessage<DocumentManifest> | undefined): boolean {
    return proto3.util.equals(DocumentManifest, a, b);
  }
}

/**
 * The items included
 *
 * @generated from message google.fhir.stu3.proto.DocumentManifest.Content
 */
export class DocumentManifest_Content extends Message<DocumentManifest_Content> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.DocumentManifest.Content.P p = 4;
   */
  p?: DocumentManifest_Content_P;

  constructor(data?: PartialMessage<DocumentManifest_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentManifest.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "p", kind: "message", T: DocumentManifest_Content_P },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentManifest_Content {
    return new DocumentManifest_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentManifest_Content {
    return new DocumentManifest_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentManifest_Content {
    return new DocumentManifest_Content().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentManifest_Content | PlainMessage<DocumentManifest_Content> | undefined, b: DocumentManifest_Content | PlainMessage<DocumentManifest_Content> | undefined): boolean {
    return proto3.util.equals(DocumentManifest_Content, a, b);
  }
}

/**
 * Contents of this set of documents
 *
 * @generated from message google.fhir.stu3.proto.DocumentManifest.Content.P
 */
export class DocumentManifest_Content_P extends Message<DocumentManifest_Content_P> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DocumentManifest.Content.P.p
   */
  p: {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 1;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DocumentManifest_Content_P>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentManifest.Content.P";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attachment", kind: "message", T: Attachment, oneof: "p" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "p" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentManifest_Content_P {
    return new DocumentManifest_Content_P().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentManifest_Content_P {
    return new DocumentManifest_Content_P().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentManifest_Content_P {
    return new DocumentManifest_Content_P().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentManifest_Content_P | PlainMessage<DocumentManifest_Content_P> | undefined, b: DocumentManifest_Content_P | PlainMessage<DocumentManifest_Content_P> | undefined): boolean {
    return proto3.util.equals(DocumentManifest_Content_P, a, b);
  }
}

/**
 * Related things
 *
 * @generated from message google.fhir.stu3.proto.DocumentManifest.Related
 */
export class DocumentManifest_Related extends Message<DocumentManifest_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifiers of things that are related
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Related Resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference ref = 5;
   */
  ref?: Reference;

  constructor(data?: PartialMessage<DocumentManifest_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentManifest.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "ref", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentManifest_Related {
    return new DocumentManifest_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentManifest_Related {
    return new DocumentManifest_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentManifest_Related {
    return new DocumentManifest_Related().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentManifest_Related | PlainMessage<DocumentManifest_Related> | undefined, b: DocumentManifest_Related | PlainMessage<DocumentManifest_Related> | undefined): boolean {
    return proto3.util.equals(DocumentManifest_Related, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DocumentReference, last updated
 * 2017-04-19T07:44:43.294+10:00. A reference to a document. See
 * http://hl7.org/fhir/StructureDefinition/DocumentReference
 *
 * @generated from message google.fhir.stu3.proto.DocumentReference
 */
export class DocumentReference extends Message<DocumentReference> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Master Version Specific Identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier master_identifier = 9;
   */
  masterIdentifier?: Identifier;

  /**
   * Other identifiers for the document
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * current | superseded | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.DocumentReferenceStatusCode status = 11;
   */
  status?: DocumentReferenceStatusCode;

  /**
   * preliminary | final | appended | amended | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.CompositionStatusCode doc_status = 12;
   */
  docStatus?: CompositionStatusCode;

  /**
   * Kind of document (LOINC if possible)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 13;
   */
  type?: CodeableConcept;

  /**
   * Categorization of document
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept class_value = 14 [json_name = "class"];
   */
  classValue?: CodeableConcept;

  /**
   * Who/what is the subject of the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Document creation time
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 16;
   */
  created?: DateTime;

  /**
   * When this document reference was created
   *
   * @generated from field: google.fhir.stu3.proto.Instant indexed = 17;
   */
  indexed?: Instant;

  /**
   * Who and/or what authored the document
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 18;
   */
  author: Reference[] = [];

  /**
   * Who/what authenticated the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference authenticator = 19;
   */
  authenticator?: Reference;

  /**
   * Organization which maintains the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference custodian = 20;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DocumentReference.RelatesTo relates_to = 21;
   */
  relatesTo: DocumentReference_RelatesTo[] = [];

  /**
   * Human-readable description (title)
   *
   * @generated from field: google.fhir.stu3.proto.String description = 22;
   */
  description?: String;

  /**
   * Document security-tags
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept security_label = 23;
   */
  securityLabel: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DocumentReference.Content content = 24;
   */
  content: DocumentReference_Content[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.DocumentReference.Context context = 25;
   */
  context?: DocumentReference_Context;

  constructor(data?: PartialMessage<DocumentReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "master_identifier", kind: "message", T: Identifier },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: DocumentReferenceStatusCode },
    { no: 12, name: "doc_status", kind: "message", T: CompositionStatusCode },
    { no: 13, name: "type", kind: "message", T: CodeableConcept },
    { no: 14, name: "class_value", jsonName: "class", kind: "message", T: CodeableConcept },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "created", kind: "message", T: DateTime },
    { no: 17, name: "indexed", kind: "message", T: Instant },
    { no: 18, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "authenticator", kind: "message", T: Reference },
    { no: 20, name: "custodian", kind: "message", T: Reference },
    { no: 21, name: "relates_to", kind: "message", T: DocumentReference_RelatesTo, repeated: true },
    { no: 22, name: "description", kind: "message", T: String },
    { no: 23, name: "security_label", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "content", kind: "message", T: DocumentReference_Content, repeated: true },
    { no: 25, name: "context", kind: "message", T: DocumentReference_Context },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference {
    return new DocumentReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference {
    return new DocumentReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference {
    return new DocumentReference().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference | PlainMessage<DocumentReference> | undefined, b: DocumentReference | PlainMessage<DocumentReference> | undefined): boolean {
    return proto3.util.equals(DocumentReference, a, b);
  }
}

/**
 * Relationships to other documents
 *
 * @generated from message google.fhir.stu3.proto.DocumentReference.RelatesTo
 */
export class DocumentReference_RelatesTo extends Message<DocumentReference_RelatesTo> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * replaces | transforms | signs | appends
   *
   * @generated from field: google.fhir.stu3.proto.DocumentRelationshipTypeCode code = 4;
   */
  code?: DocumentRelationshipTypeCode;

  /**
   * Target of the relationship
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<DocumentReference_RelatesTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentReference.RelatesTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: DocumentRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_RelatesTo {
    return new DocumentReference_RelatesTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_RelatesTo {
    return new DocumentReference_RelatesTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_RelatesTo {
    return new DocumentReference_RelatesTo().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_RelatesTo | PlainMessage<DocumentReference_RelatesTo> | undefined, b: DocumentReference_RelatesTo | PlainMessage<DocumentReference_RelatesTo> | undefined): boolean {
    return proto3.util.equals(DocumentReference_RelatesTo, a, b);
  }
}

/**
 * Document referenced
 *
 * @generated from message google.fhir.stu3.proto.DocumentReference.Content
 */
export class DocumentReference_Content extends Message<DocumentReference_Content> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Where to access the document
   *
   * @generated from field: google.fhir.stu3.proto.Attachment attachment = 4;
   */
  attachment?: Attachment;

  /**
   * Format/content rules for the document
   *
   * @generated from field: google.fhir.stu3.proto.Coding format = 5;
   */
  format?: Coding;

  constructor(data?: PartialMessage<DocumentReference_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentReference.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "attachment", kind: "message", T: Attachment },
    { no: 5, name: "format", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_Content {
    return new DocumentReference_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_Content {
    return new DocumentReference_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_Content {
    return new DocumentReference_Content().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_Content | PlainMessage<DocumentReference_Content> | undefined, b: DocumentReference_Content | PlainMessage<DocumentReference_Content> | undefined): boolean {
    return proto3.util.equals(DocumentReference_Content, a, b);
  }
}

/**
 * Clinical context of document
 *
 * @generated from message google.fhir.stu3.proto.DocumentReference.Context
 */
export class DocumentReference_Context extends Message<DocumentReference_Context> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Context of the document  content
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 4;
   */
  encounter?: Reference;

  /**
   * Main clinical acts documented
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept event = 5;
   */
  event: CodeableConcept[] = [];

  /**
   * Time of service that is being documented
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  /**
   * Kind of facility where patient was seen
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept facility_type = 7;
   */
  facilityType?: CodeableConcept;

  /**
   * Additional details about where the content was created (e.g. clinical
   * specialty)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept practice_setting = 8;
   */
  practiceSetting?: CodeableConcept;

  /**
   * Patient demographics from source
   *
   * @generated from field: google.fhir.stu3.proto.Reference source_patient_info = 9;
   */
  sourcePatientInfo?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DocumentReference.Context.Related related = 10;
   */
  related: DocumentReference_Context_Related[] = [];

  constructor(data?: PartialMessage<DocumentReference_Context>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentReference.Context";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "encounter", kind: "message", T: Reference },
    { no: 5, name: "event", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "facility_type", kind: "message", T: CodeableConcept },
    { no: 8, name: "practice_setting", kind: "message", T: CodeableConcept },
    { no: 9, name: "source_patient_info", kind: "message", T: Reference },
    { no: 10, name: "related", kind: "message", T: DocumentReference_Context_Related, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_Context {
    return new DocumentReference_Context().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_Context {
    return new DocumentReference_Context().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_Context {
    return new DocumentReference_Context().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_Context | PlainMessage<DocumentReference_Context> | undefined, b: DocumentReference_Context | PlainMessage<DocumentReference_Context> | undefined): boolean {
    return proto3.util.equals(DocumentReference_Context, a, b);
  }
}

/**
 * Related identifiers or resources
 *
 * @generated from message google.fhir.stu3.proto.DocumentReference.Context.Related
 */
export class DocumentReference_Context_Related extends Message<DocumentReference_Context_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier of related objects or events
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Related Resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference ref = 5;
   */
  ref?: Reference;

  constructor(data?: PartialMessage<DocumentReference_Context_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentReference.Context.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "ref", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_Context_Related {
    return new DocumentReference_Context_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_Context_Related {
    return new DocumentReference_Context_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_Context_Related {
    return new DocumentReference_Context_Related().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_Context_Related | PlainMessage<DocumentReference_Context_Related> | undefined, b: DocumentReference_Context_Related | PlainMessage<DocumentReference_Context_Related> | undefined): boolean {
    return proto3.util.equals(DocumentReference_Context_Related, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EligibilityRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. Determine insurance validity and scope of
 * coverage. See http://hl7.org/fhir/StructureDefinition/EligibilityRequest
 *
 * @generated from message google.fhir.stu3.proto.EligibilityRequest
 */
export class EligibilityRequest extends Message<EligibilityRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Desired processing priority
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 11;
   */
  priority?: CodeableConcept;

  /**
   * The subject of the Products and Services
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 12;
   */
  patient?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.EligibilityRequest.Serviced serviced = 13;
   */
  serviced?: EligibilityRequest_Serviced;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 14;
   */
  created?: DateTime;

  /**
   * Author
   *
   * @generated from field: google.fhir.stu3.proto.Reference enterer = 15;
   */
  enterer?: Reference;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 16;
   */
  provider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 17;
   */
  organization?: Reference;

  /**
   * Target
   *
   * @generated from field: google.fhir.stu3.proto.Reference insurer = 18;
   */
  insurer?: Reference;

  /**
   * Servicing Facility
   *
   * @generated from field: google.fhir.stu3.proto.Reference facility = 19;
   */
  facility?: Reference;

  /**
   * Insurance or medical plan
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 20;
   */
  coverage?: Reference;

  /**
   * Business agreement
   *
   * @generated from field: google.fhir.stu3.proto.String business_arrangement = 21;
   */
  businessArrangement?: String;

  /**
   * Type of services covered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept benefit_category = 22;
   */
  benefitCategory?: CodeableConcept;

  /**
   * Detailed services covered within the type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept benefit_sub_category = 23;
   */
  benefitSubCategory?: CodeableConcept;

  constructor(data?: PartialMessage<EligibilityRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "priority", kind: "message", T: CodeableConcept },
    { no: 12, name: "patient", kind: "message", T: Reference },
    { no: 13, name: "serviced", kind: "message", T: EligibilityRequest_Serviced },
    { no: 14, name: "created", kind: "message", T: DateTime },
    { no: 15, name: "enterer", kind: "message", T: Reference },
    { no: 16, name: "provider", kind: "message", T: Reference },
    { no: 17, name: "organization", kind: "message", T: Reference },
    { no: 18, name: "insurer", kind: "message", T: Reference },
    { no: 19, name: "facility", kind: "message", T: Reference },
    { no: 20, name: "coverage", kind: "message", T: Reference },
    { no: 21, name: "business_arrangement", kind: "message", T: String },
    { no: 22, name: "benefit_category", kind: "message", T: CodeableConcept },
    { no: 23, name: "benefit_sub_category", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityRequest {
    return new EligibilityRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityRequest {
    return new EligibilityRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityRequest {
    return new EligibilityRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityRequest | PlainMessage<EligibilityRequest> | undefined, b: EligibilityRequest | PlainMessage<EligibilityRequest> | undefined): boolean {
    return proto3.util.equals(EligibilityRequest, a, b);
  }
}

/**
 * Estimated date or dates of Service
 *
 * @generated from message google.fhir.stu3.proto.EligibilityRequest.Serviced
 */
export class EligibilityRequest_Serviced extends Message<EligibilityRequest_Serviced> {
  /**
   * @generated from oneof google.fhir.stu3.proto.EligibilityRequest.Serviced.serviced
   */
  serviced: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<EligibilityRequest_Serviced>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityRequest.Serviced";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "serviced" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "serviced" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityRequest_Serviced {
    return new EligibilityRequest_Serviced().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityRequest_Serviced {
    return new EligibilityRequest_Serviced().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityRequest_Serviced {
    return new EligibilityRequest_Serviced().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityRequest_Serviced | PlainMessage<EligibilityRequest_Serviced> | undefined, b: EligibilityRequest_Serviced | PlainMessage<EligibilityRequest_Serviced> | undefined): boolean {
    return proto3.util.equals(EligibilityRequest_Serviced, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EligibilityResponse, last updated
 * 2017-04-19T07:44:43.294+10:00. EligibilityResponse resource. See
 * http://hl7.org/fhir/StructureDefinition/EligibilityResponse
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse
 */
export class EligibilityResponse extends Message<EligibilityResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 11;
   */
  created?: DateTime;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_provider = 12;
   */
  requestProvider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_organization = 13;
   */
  requestOrganization?: Reference;

  /**
   * Eligibility reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 14;
   */
  request?: Reference;

  /**
   * complete | error | partial
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 15;
   */
  outcome?: CodeableConcept;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.stu3.proto.String disposition = 16;
   */
  disposition?: String;

  /**
   * Insurer issuing the coverage
   *
   * @generated from field: google.fhir.stu3.proto.Reference insurer = 17;
   */
  insurer?: Reference;

  /**
   * Coverage inforce indicator
   *
   * @generated from field: google.fhir.stu3.proto.Boolean inforce = 18;
   */
  inforce?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.EligibilityResponse.Insurance insurance = 19;
   */
  insurance: EligibilityResponse_Insurance[] = [];

  /**
   * Printed Form Identifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 20;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.EligibilityResponse.Errors error = 21;
   */
  error: EligibilityResponse_Errors[] = [];

  constructor(data?: PartialMessage<EligibilityResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "created", kind: "message", T: DateTime },
    { no: 12, name: "request_provider", kind: "message", T: Reference },
    { no: 13, name: "request_organization", kind: "message", T: Reference },
    { no: 14, name: "request", kind: "message", T: Reference },
    { no: 15, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 16, name: "disposition", kind: "message", T: String },
    { no: 17, name: "insurer", kind: "message", T: Reference },
    { no: 18, name: "inforce", kind: "message", T: Boolean },
    { no: 19, name: "insurance", kind: "message", T: EligibilityResponse_Insurance, repeated: true },
    { no: 20, name: "form", kind: "message", T: CodeableConcept },
    { no: 21, name: "error", kind: "message", T: EligibilityResponse_Errors, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse {
    return new EligibilityResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse {
    return new EligibilityResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse {
    return new EligibilityResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse | PlainMessage<EligibilityResponse> | undefined, b: EligibilityResponse | PlainMessage<EligibilityResponse> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse, a, b);
  }
}

/**
 * Details by insurance coverage
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse.Insurance
 */
export class EligibilityResponse_Insurance extends Message<EligibilityResponse_Insurance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Updated Coverage details
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 4;
   */
  coverage?: Reference;

  /**
   * Contract details
   *
   * @generated from field: google.fhir.stu3.proto.Reference contract = 5;
   */
  contract?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits benefit_balance = 6;
   */
  benefitBalance: EligibilityResponse_Insurance_Benefits[] = [];

  constructor(data?: PartialMessage<EligibilityResponse_Insurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse.Insurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "coverage", kind: "message", T: Reference },
    { no: 5, name: "contract", kind: "message", T: Reference },
    { no: 6, name: "benefit_balance", kind: "message", T: EligibilityResponse_Insurance_Benefits, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse_Insurance {
    return new EligibilityResponse_Insurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance {
    return new EligibilityResponse_Insurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance {
    return new EligibilityResponse_Insurance().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse_Insurance | PlainMessage<EligibilityResponse_Insurance> | undefined, b: EligibilityResponse_Insurance | PlainMessage<EligibilityResponse_Insurance> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse_Insurance, a, b);
  }
}

/**
 * Benefits by Category
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits
 */
export class EligibilityResponse_Insurance_Benefits extends Message<EligibilityResponse_Insurance_Benefits> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of services covered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Detailed services covered within the type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept sub_category = 5;
   */
  subCategory?: CodeableConcept;

  /**
   * Excluded from the plan
   *
   * @generated from field: google.fhir.stu3.proto.Boolean excluded = 6;
   */
  excluded?: Boolean;

  /**
   * Short name for the benefit
   *
   * @generated from field: google.fhir.stu3.proto.String name = 7;
   */
  name?: String;

  /**
   * Description of the benefit or services covered
   *
   * @generated from field: google.fhir.stu3.proto.String description = 8;
   */
  description?: String;

  /**
   * In or out of network
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept network = 9;
   */
  network?: CodeableConcept;

  /**
   * Individual or family
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept unit = 10;
   */
  unit?: CodeableConcept;

  /**
   * Annual or lifetime
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept term = 11;
   */
  term?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit financial = 12;
   */
  financial: EligibilityResponse_Insurance_Benefits_Benefit[] = [];

  constructor(data?: PartialMessage<EligibilityResponse_Insurance_Benefits>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "sub_category", kind: "message", T: CodeableConcept },
    { no: 6, name: "excluded", kind: "message", T: Boolean },
    { no: 7, name: "name", kind: "message", T: String },
    { no: 8, name: "description", kind: "message", T: String },
    { no: 9, name: "network", kind: "message", T: CodeableConcept },
    { no: 10, name: "unit", kind: "message", T: CodeableConcept },
    { no: 11, name: "term", kind: "message", T: CodeableConcept },
    { no: 12, name: "financial", kind: "message", T: EligibilityResponse_Insurance_Benefits_Benefit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse_Insurance_Benefits {
    return new EligibilityResponse_Insurance_Benefits().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits {
    return new EligibilityResponse_Insurance_Benefits().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits {
    return new EligibilityResponse_Insurance_Benefits().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse_Insurance_Benefits | PlainMessage<EligibilityResponse_Insurance_Benefits> | undefined, b: EligibilityResponse_Insurance_Benefits | PlainMessage<EligibilityResponse_Insurance_Benefits> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse_Insurance_Benefits, a, b);
  }
}

/**
 * Benefit Summary
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit
 */
export class EligibilityResponse_Insurance_Benefits_Benefit extends Message<EligibilityResponse_Insurance_Benefits_Benefit> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Deductable, visits, benefit amount
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Allowed allowed = 5;
   */
  allowed?: EligibilityResponse_Insurance_Benefits_Benefit_Allowed;

  /**
   * @generated from field: google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Used used = 6;
   */
  used?: EligibilityResponse_Insurance_Benefits_Benefit_Used;

  constructor(data?: PartialMessage<EligibilityResponse_Insurance_Benefits_Benefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "allowed", kind: "message", T: EligibilityResponse_Insurance_Benefits_Benefit_Allowed },
    { no: 6, name: "used", kind: "message", T: EligibilityResponse_Insurance_Benefits_Benefit_Used },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit {
    return new EligibilityResponse_Insurance_Benefits_Benefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit {
    return new EligibilityResponse_Insurance_Benefits_Benefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit {
    return new EligibilityResponse_Insurance_Benefits_Benefit().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse_Insurance_Benefits_Benefit | PlainMessage<EligibilityResponse_Insurance_Benefits_Benefit> | undefined, b: EligibilityResponse_Insurance_Benefits_Benefit | PlainMessage<EligibilityResponse_Insurance_Benefits_Benefit> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse_Insurance_Benefits_Benefit, a, b);
  }
}

/**
 * Benefits allowed
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Allowed
 */
export class EligibilityResponse_Insurance_Benefits_Benefit_Allowed extends Message<EligibilityResponse_Insurance_Benefits_Benefit_Allowed> {
  /**
   * @generated from oneof google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Allowed.allowed
   */
  allowed: {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 3;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<EligibilityResponse_Insurance_Benefits_Benefit_Allowed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Allowed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "allowed" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "allowed" },
    { no: 3, name: "money", kind: "message", T: Money, oneof: "allowed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit_Allowed {
    return new EligibilityResponse_Insurance_Benefits_Benefit_Allowed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit_Allowed {
    return new EligibilityResponse_Insurance_Benefits_Benefit_Allowed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit_Allowed {
    return new EligibilityResponse_Insurance_Benefits_Benefit_Allowed().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse_Insurance_Benefits_Benefit_Allowed | PlainMessage<EligibilityResponse_Insurance_Benefits_Benefit_Allowed> | undefined, b: EligibilityResponse_Insurance_Benefits_Benefit_Allowed | PlainMessage<EligibilityResponse_Insurance_Benefits_Benefit_Allowed> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse_Insurance_Benefits_Benefit_Allowed, a, b);
  }
}

/**
 * Benefits used
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Used
 */
export class EligibilityResponse_Insurance_Benefits_Benefit_Used extends Message<EligibilityResponse_Insurance_Benefits_Benefit_Used> {
  /**
   * @generated from oneof google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Used.used
   */
  used: {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 2;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<EligibilityResponse_Insurance_Benefits_Benefit_Used>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse.Insurance.Benefits.Benefit.Used";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "used" },
    { no: 2, name: "money", kind: "message", T: Money, oneof: "used" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit_Used {
    return new EligibilityResponse_Insurance_Benefits_Benefit_Used().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit_Used {
    return new EligibilityResponse_Insurance_Benefits_Benefit_Used().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse_Insurance_Benefits_Benefit_Used {
    return new EligibilityResponse_Insurance_Benefits_Benefit_Used().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse_Insurance_Benefits_Benefit_Used | PlainMessage<EligibilityResponse_Insurance_Benefits_Benefit_Used> | undefined, b: EligibilityResponse_Insurance_Benefits_Benefit_Used | PlainMessage<EligibilityResponse_Insurance_Benefits_Benefit_Used> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse_Insurance_Benefits_Benefit_Used, a, b);
  }
}

/**
 * Processing errors
 *
 * @generated from message google.fhir.stu3.proto.EligibilityResponse.Errors
 */
export class EligibilityResponse_Errors extends Message<EligibilityResponse_Errors> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Error code detailing processing issues
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  constructor(data?: PartialMessage<EligibilityResponse_Errors>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EligibilityResponse.Errors";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponse_Errors {
    return new EligibilityResponse_Errors().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponse_Errors {
    return new EligibilityResponse_Errors().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponse_Errors {
    return new EligibilityResponse_Errors().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponse_Errors | PlainMessage<EligibilityResponse_Errors> | undefined, b: EligibilityResponse_Errors | PlainMessage<EligibilityResponse_Errors> | undefined): boolean {
    return proto3.util.equals(EligibilityResponse_Errors, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Encounter, last updated
 * 2017-04-19T07:44:43.294+10:00. An interaction during which services are
 * provided to the patient. See
 * http://hl7.org/fhir/StructureDefinition/Encounter
 *
 * @generated from message google.fhir.stu3.proto.Encounter
 */
export class Encounter extends Message<Encounter> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier(s) by which this encounter is known
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * planned | arrived | triaged | in-progress | onleave | finished | cancelled
   * +
   *
   * @generated from field: google.fhir.stu3.proto.EncounterStatusCode status = 10;
   */
  status?: EncounterStatusCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Encounter.StatusHistory status_history = 11;
   */
  statusHistory: Encounter_StatusHistory[] = [];

  /**
   * inpatient | outpatient | ambulatory | emergency +
   *
   * @generated from field: google.fhir.stu3.proto.Coding class_value = 12 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Encounter.ClassHistory class_history = 13;
   */
  classHistory: Encounter_ClassHistory[] = [];

  /**
   * Specific type of encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 14;
   */
  type: CodeableConcept[] = [];

  /**
   * Indicates the urgency of the encounter
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 15;
   */
  priority?: CodeableConcept;

  /**
   * The patient ro group present at the encounter
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * Episode(s) of care that this encounter should be recorded against
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference episode_of_care = 17;
   */
  episodeOfCare: Reference[] = [];

  /**
   * The ReferralRequest that initiated this encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference incoming_referral = 18;
   */
  incomingReferral: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Encounter.Participant participant = 19;
   */
  participant: Encounter_Participant[] = [];

  /**
   * The appointment that scheduled this encounter
   *
   * @generated from field: google.fhir.stu3.proto.Reference appointment = 20;
   */
  appointment?: Reference;

  /**
   * The start and end time of the encounter
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 21;
   */
  period?: Period;

  /**
   * Quantity of time the encounter lasted (less time absent)
   *
   * @generated from field: google.fhir.stu3.proto.Duration length = 22;
   */
  length?: Duration;

  /**
   * Reason the encounter takes place (code)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 23;
   */
  reason: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Encounter.Diagnosis diagnosis = 24;
   */
  diagnosis: Encounter_Diagnosis[] = [];

  /**
   * The set of accounts that may be used for billing for this Encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference account = 25;
   */
  account: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Encounter.Hospitalization hospitalization = 26;
   */
  hospitalization?: Encounter_Hospitalization;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Encounter.Location location = 27;
   */
  location: Encounter_Location[] = [];

  /**
   * The custodian organization of this Encounter record
   *
   * @generated from field: google.fhir.stu3.proto.Reference service_provider = 28;
   */
  serviceProvider?: Reference;

  /**
   * Another Encounter this encounter is part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference part_of = 29;
   */
  partOf?: Reference;

  constructor(data?: PartialMessage<Encounter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: EncounterStatusCode },
    { no: 11, name: "status_history", kind: "message", T: Encounter_StatusHistory, repeated: true },
    { no: 12, name: "class_value", jsonName: "class", kind: "message", T: Coding },
    { no: 13, name: "class_history", kind: "message", T: Encounter_ClassHistory, repeated: true },
    { no: 14, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "priority", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "episode_of_care", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "incoming_referral", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "participant", kind: "message", T: Encounter_Participant, repeated: true },
    { no: 20, name: "appointment", kind: "message", T: Reference },
    { no: 21, name: "period", kind: "message", T: Period },
    { no: 22, name: "length", kind: "message", T: Duration },
    { no: 23, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "diagnosis", kind: "message", T: Encounter_Diagnosis, repeated: true },
    { no: 25, name: "account", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "hospitalization", kind: "message", T: Encounter_Hospitalization },
    { no: 27, name: "location", kind: "message", T: Encounter_Location, repeated: true },
    { no: 28, name: "service_provider", kind: "message", T: Reference },
    { no: 29, name: "part_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter {
    return new Encounter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter {
    return new Encounter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter {
    return new Encounter().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter | PlainMessage<Encounter> | undefined, b: Encounter | PlainMessage<Encounter> | undefined): boolean {
    return proto3.util.equals(Encounter, a, b);
  }
}

/**
 * List of past encounter statuses
 *
 * @generated from message google.fhir.stu3.proto.Encounter.StatusHistory
 */
export class Encounter_StatusHistory extends Message<Encounter_StatusHistory> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * planned | arrived | triaged | in-progress | onleave | finished |
   * cancelled +
   *
   * @generated from field: google.fhir.stu3.proto.EncounterStatusCode status = 4;
   */
  status?: EncounterStatusCode;

  /**
   * The time that the episode was in the specified status
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<Encounter_StatusHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter.StatusHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "status", kind: "message", T: EncounterStatusCode },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter_StatusHistory {
    return new Encounter_StatusHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter_StatusHistory {
    return new Encounter_StatusHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter_StatusHistory {
    return new Encounter_StatusHistory().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter_StatusHistory | PlainMessage<Encounter_StatusHistory> | undefined, b: Encounter_StatusHistory | PlainMessage<Encounter_StatusHistory> | undefined): boolean {
    return proto3.util.equals(Encounter_StatusHistory, a, b);
  }
}

/**
 * List of past encounter classes
 *
 * @generated from message google.fhir.stu3.proto.Encounter.ClassHistory
 */
export class Encounter_ClassHistory extends Message<Encounter_ClassHistory> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * inpatient | outpatient | ambulatory | emergency +
   *
   * @generated from field: google.fhir.stu3.proto.Coding class_value = 4 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * The time that the episode was in the specified class
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<Encounter_ClassHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter.ClassHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "class_value", jsonName: "class", kind: "message", T: Coding },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter_ClassHistory {
    return new Encounter_ClassHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter_ClassHistory {
    return new Encounter_ClassHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter_ClassHistory {
    return new Encounter_ClassHistory().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter_ClassHistory | PlainMessage<Encounter_ClassHistory> | undefined, b: Encounter_ClassHistory | PlainMessage<Encounter_ClassHistory> | undefined): boolean {
    return proto3.util.equals(Encounter_ClassHistory, a, b);
  }
}

/**
 * List of participants involved in the encounter
 *
 * @generated from message google.fhir.stu3.proto.Encounter.Participant
 */
export class Encounter_Participant extends Message<Encounter_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Role of participant in encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type: CodeableConcept[] = [];

  /**
   * Period of time during the encounter that the participant participated
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * Persons involved in the encounter other than the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference individual = 6;
   */
  individual?: Reference;

  constructor(data?: PartialMessage<Encounter_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "individual", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter_Participant {
    return new Encounter_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter_Participant {
    return new Encounter_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter_Participant {
    return new Encounter_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter_Participant | PlainMessage<Encounter_Participant> | undefined, b: Encounter_Participant | PlainMessage<Encounter_Participant> | undefined): boolean {
    return proto3.util.equals(Encounter_Participant, a, b);
  }
}

/**
 * The list of diagnosis relevant to this encounter
 *
 * @generated from message google.fhir.stu3.proto.Encounter.Diagnosis
 */
export class Encounter_Diagnosis extends Message<Encounter_Diagnosis> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reason the encounter takes place (resource)
   *
   * @generated from field: google.fhir.stu3.proto.Reference condition = 4;
   */
  condition?: Reference;

  /**
   * Role that this diagnosis has within the encounter (e.g. admission,
   * billing, discharge …)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  /**
   * Ranking of the diagnosis (for each role type)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt rank = 6;
   */
  rank?: PositiveInt;

  constructor(data?: PartialMessage<Encounter_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "condition", kind: "message", T: Reference },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
    { no: 6, name: "rank", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter_Diagnosis {
    return new Encounter_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter_Diagnosis {
    return new Encounter_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter_Diagnosis {
    return new Encounter_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter_Diagnosis | PlainMessage<Encounter_Diagnosis> | undefined, b: Encounter_Diagnosis | PlainMessage<Encounter_Diagnosis> | undefined): boolean {
    return proto3.util.equals(Encounter_Diagnosis, a, b);
  }
}

/**
 * Details about the admission to a healthcare service
 *
 * @generated from message google.fhir.stu3.proto.Encounter.Hospitalization
 */
export class Encounter_Hospitalization extends Message<Encounter_Hospitalization> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Pre-admission identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier pre_admission_identifier = 4;
   */
  preAdmissionIdentifier?: Identifier;

  /**
   * The location from which the patient came before admission
   *
   * @generated from field: google.fhir.stu3.proto.Reference origin = 5;
   */
  origin?: Reference;

  /**
   * From where patient was admitted (physician referral, transfer)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept admit_source = 6;
   */
  admitSource?: CodeableConcept;

  /**
   * The type of hospital re-admission that has occurred (if any). If the
   * value is absent, then this is not identified as a readmission
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept re_admission = 7;
   */
  reAdmission?: CodeableConcept;

  /**
   * Diet preferences reported by the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept diet_preference = 8;
   */
  dietPreference: CodeableConcept[] = [];

  /**
   * Special courtesies (VIP, board member)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept special_courtesy = 9;
   */
  specialCourtesy: CodeableConcept[] = [];

  /**
   * Wheelchair, translator, stretcher, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept special_arrangement = 10;
   */
  specialArrangement: CodeableConcept[] = [];

  /**
   * Location to which the patient is discharged
   *
   * @generated from field: google.fhir.stu3.proto.Reference destination = 11;
   */
  destination?: Reference;

  /**
   * Category or kind of location after discharge
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept discharge_disposition = 12;
   */
  dischargeDisposition?: CodeableConcept;

  constructor(data?: PartialMessage<Encounter_Hospitalization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter.Hospitalization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "pre_admission_identifier", kind: "message", T: Identifier },
    { no: 5, name: "origin", kind: "message", T: Reference },
    { no: 6, name: "admit_source", kind: "message", T: CodeableConcept },
    { no: 7, name: "re_admission", kind: "message", T: CodeableConcept },
    { no: 8, name: "diet_preference", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "special_courtesy", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "special_arrangement", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "destination", kind: "message", T: Reference },
    { no: 12, name: "discharge_disposition", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter_Hospitalization {
    return new Encounter_Hospitalization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter_Hospitalization {
    return new Encounter_Hospitalization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter_Hospitalization {
    return new Encounter_Hospitalization().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter_Hospitalization | PlainMessage<Encounter_Hospitalization> | undefined, b: Encounter_Hospitalization | PlainMessage<Encounter_Hospitalization> | undefined): boolean {
    return proto3.util.equals(Encounter_Hospitalization, a, b);
  }
}

/**
 * List of locations where the patient has been
 *
 * @generated from message google.fhir.stu3.proto.Encounter.Location
 */
export class Encounter_Location extends Message<Encounter_Location> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Location the encounter takes place
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 4;
   */
  location?: Reference;

  /**
   * planned | active | reserved | completed
   *
   * @generated from field: google.fhir.stu3.proto.EncounterLocationStatusCode status = 5;
   */
  status?: EncounterLocationStatusCode;

  /**
   * Time period during which the patient was present at the location
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  constructor(data?: PartialMessage<Encounter_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Encounter.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "location", kind: "message", T: Reference },
    { no: 5, name: "status", kind: "message", T: EncounterLocationStatusCode },
    { no: 6, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encounter_Location {
    return new Encounter_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encounter_Location {
    return new Encounter_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encounter_Location {
    return new Encounter_Location().fromJsonString(jsonString, options);
  }

  static equals(a: Encounter_Location | PlainMessage<Encounter_Location> | undefined, b: Encounter_Location | PlainMessage<Encounter_Location> | undefined): boolean {
    return proto3.util.equals(Encounter_Location, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Endpoint, last updated
 * 2017-04-19T07:44:43.294+10:00. The technical details of an endpoint that can
 * be used for electronic services. See
 * http://hl7.org/fhir/StructureDefinition/Endpoint
 *
 * @generated from message google.fhir.stu3.proto.Endpoint
 */
export class Endpoint extends Message<Endpoint> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies this endpoint across multiple systems
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | suspended | error | off | entered-in-error | test
   *
   * @generated from field: google.fhir.stu3.proto.EndpointStatusCode status = 10;
   */
  status?: EndpointStatusCode;

  /**
   * Protocol/Profile/Standard to be used with this endpoint connection
   *
   * @generated from field: google.fhir.stu3.proto.Coding connection_type = 11;
   */
  connectionType?: Coding;

  /**
   * A name that this endpoint can be identified by
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Organization that manages this endpoint (may not be the organization that
   * exposes the endpoint)
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 13;
   */
  managingOrganization?: Reference;

  /**
   * Contact details for source (e.g. troubleshooting)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint contact = 14;
   */
  contact: ContactPoint[] = [];

  /**
   * Interval the endpoint is expected to be operational
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 15;
   */
  period?: Period;

  /**
   * The type of content that may be used at this endpoint (e.g. XDS Discharge
   * summaries)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept payload_type = 16;
   */
  payloadType: CodeableConcept[] = [];

  /**
   * Mimetype to send. If not specified, the content could be anything
   * (including no payload, if the connectionType defined this)
   *
   * @generated from field: repeated google.fhir.stu3.proto.MimeTypeCode payload_mime_type = 17;
   */
  payloadMimeType: MimeTypeCode[] = [];

  /**
   * The technical base address for connecting to this endpoint
   *
   * @generated from field: google.fhir.stu3.proto.Uri address = 18;
   */
  address?: Uri;

  /**
   * Usage depends on the channel type
   *
   * @generated from field: repeated google.fhir.stu3.proto.String header = 19;
   */
  header: String[] = [];

  constructor(data?: PartialMessage<Endpoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Endpoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: EndpointStatusCode },
    { no: 11, name: "connection_type", kind: "message", T: Coding },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "managing_organization", kind: "message", T: Reference },
    { no: 14, name: "contact", kind: "message", T: ContactPoint, repeated: true },
    { no: 15, name: "period", kind: "message", T: Period },
    { no: 16, name: "payload_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "payload_mime_type", kind: "message", T: MimeTypeCode, repeated: true },
    { no: 18, name: "address", kind: "message", T: Uri },
    { no: 19, name: "header", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Endpoint {
    return new Endpoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Endpoint {
    return new Endpoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Endpoint {
    return new Endpoint().fromJsonString(jsonString, options);
  }

  static equals(a: Endpoint | PlainMessage<Endpoint> | undefined, b: Endpoint | PlainMessage<Endpoint> | undefined): boolean {
    return proto3.util.equals(Endpoint, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EnrollmentRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. Enrollment request. See
 * http://hl7.org/fhir/StructureDefinition/EnrollmentRequest
 *
 * @generated from message google.fhir.stu3.proto.EnrollmentRequest
 */
export class EnrollmentRequest extends Message<EnrollmentRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 11;
   */
  created?: DateTime;

  /**
   * Target
   *
   * @generated from field: google.fhir.stu3.proto.Reference insurer = 12;
   */
  insurer?: Reference;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 13;
   */
  provider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 14;
   */
  organization?: Reference;

  /**
   * The subject of the Products and Services
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 16;
   */
  coverage?: Reference;

  constructor(data?: PartialMessage<EnrollmentRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EnrollmentRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "created", kind: "message", T: DateTime },
    { no: 12, name: "insurer", kind: "message", T: Reference },
    { no: 13, name: "provider", kind: "message", T: Reference },
    { no: 14, name: "organization", kind: "message", T: Reference },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "coverage", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnrollmentRequest {
    return new EnrollmentRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnrollmentRequest {
    return new EnrollmentRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnrollmentRequest {
    return new EnrollmentRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EnrollmentRequest | PlainMessage<EnrollmentRequest> | undefined, b: EnrollmentRequest | PlainMessage<EnrollmentRequest> | undefined): boolean {
    return proto3.util.equals(EnrollmentRequest, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EnrollmentResponse, last updated
 * 2017-04-19T07:44:43.294+10:00. EnrollmentResponse resource. See
 * http://hl7.org/fhir/StructureDefinition/EnrollmentResponse
 *
 * @generated from message google.fhir.stu3.proto.EnrollmentResponse
 */
export class EnrollmentResponse extends Message<EnrollmentResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Claim reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 11;
   */
  request?: Reference;

  /**
   * complete | error | partial
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 12;
   */
  outcome?: CodeableConcept;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.stu3.proto.String disposition = 13;
   */
  disposition?: String;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 14;
   */
  created?: DateTime;

  /**
   * Insurer
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 15;
   */
  organization?: Reference;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_provider = 16;
   */
  requestProvider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_organization = 17;
   */
  requestOrganization?: Reference;

  constructor(data?: PartialMessage<EnrollmentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EnrollmentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "request", kind: "message", T: Reference },
    { no: 12, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 13, name: "disposition", kind: "message", T: String },
    { no: 14, name: "created", kind: "message", T: DateTime },
    { no: 15, name: "organization", kind: "message", T: Reference },
    { no: 16, name: "request_provider", kind: "message", T: Reference },
    { no: 17, name: "request_organization", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnrollmentResponse {
    return new EnrollmentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnrollmentResponse {
    return new EnrollmentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnrollmentResponse {
    return new EnrollmentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EnrollmentResponse | PlainMessage<EnrollmentResponse> | undefined, b: EnrollmentResponse | PlainMessage<EnrollmentResponse> | undefined): boolean {
    return proto3.util.equals(EnrollmentResponse, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EpisodeOfCare, last updated
 * 2017-04-19T07:44:43.294+10:00. An association of a Patient with an
 * Organization and  Healthcare Provider(s) for a period of time that the
 * Organization assumes some level of responsibility. See
 * http://hl7.org/fhir/StructureDefinition/EpisodeOfCare
 *
 * @generated from message google.fhir.stu3.proto.EpisodeOfCare
 */
export class EpisodeOfCare extends Message<EpisodeOfCare> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier(s) relevant for this EpisodeOfCare
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * planned | waitlist | active | onhold | finished | cancelled |
   * entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.EpisodeOfCareStatusCode status = 10;
   */
  status?: EpisodeOfCareStatusCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.EpisodeOfCare.StatusHistory status_history = 11;
   */
  statusHistory: EpisodeOfCare_StatusHistory[] = [];

  /**
   * Type/class  - e.g. specialist referral, disease management
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 12;
   */
  type: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.EpisodeOfCare.Diagnosis diagnosis = 13;
   */
  diagnosis: EpisodeOfCare_Diagnosis[] = [];

  /**
   * The patient who is the focus of this episode of care
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * Organization that assumes care
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 15;
   */
  managingOrganization?: Reference;

  /**
   * Interval during responsibility is assumed
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 16;
   */
  period?: Period;

  /**
   * Originating Referral Request(s)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference referral_request = 17;
   */
  referralRequest: Reference[] = [];

  /**
   * Care manager/care co-ordinator for the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference care_manager = 18;
   */
  careManager?: Reference;

  /**
   * Other practitioners facilitating this episode of care
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference team = 19;
   */
  team: Reference[] = [];

  /**
   * The set of accounts that may be used for billing for this EpisodeOfCare
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference account = 20;
   */
  account: Reference[] = [];

  constructor(data?: PartialMessage<EpisodeOfCare>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EpisodeOfCare";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: EpisodeOfCareStatusCode },
    { no: 11, name: "status_history", kind: "message", T: EpisodeOfCare_StatusHistory, repeated: true },
    { no: 12, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "diagnosis", kind: "message", T: EpisodeOfCare_Diagnosis, repeated: true },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "managing_organization", kind: "message", T: Reference },
    { no: 16, name: "period", kind: "message", T: Period },
    { no: 17, name: "referral_request", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "care_manager", kind: "message", T: Reference },
    { no: 19, name: "team", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "account", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare {
    return new EpisodeOfCare().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare {
    return new EpisodeOfCare().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare {
    return new EpisodeOfCare().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare | PlainMessage<EpisodeOfCare> | undefined, b: EpisodeOfCare | PlainMessage<EpisodeOfCare> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare, a, b);
  }
}

/**
 * Past list of status codes (the current status may be included to cover the
 * start date of the status)
 *
 * @generated from message google.fhir.stu3.proto.EpisodeOfCare.StatusHistory
 */
export class EpisodeOfCare_StatusHistory extends Message<EpisodeOfCare_StatusHistory> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * planned | waitlist | active | onhold | finished | cancelled |
   * entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.EpisodeOfCareStatusCode status = 4;
   */
  status?: EpisodeOfCareStatusCode;

  /**
   * Duration the EpisodeOfCare was in the specified status
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<EpisodeOfCare_StatusHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EpisodeOfCare.StatusHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "status", kind: "message", T: EpisodeOfCareStatusCode },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare_StatusHistory {
    return new EpisodeOfCare_StatusHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusHistory {
    return new EpisodeOfCare_StatusHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusHistory {
    return new EpisodeOfCare_StatusHistory().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare_StatusHistory | PlainMessage<EpisodeOfCare_StatusHistory> | undefined, b: EpisodeOfCare_StatusHistory | PlainMessage<EpisodeOfCare_StatusHistory> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare_StatusHistory, a, b);
  }
}

/**
 * The list of diagnosis relevant to this episode of care
 *
 * @generated from message google.fhir.stu3.proto.EpisodeOfCare.Diagnosis
 */
export class EpisodeOfCare_Diagnosis extends Message<EpisodeOfCare_Diagnosis> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Conditions/problems/diagnoses this episode of care is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference condition = 4;
   */
  condition?: Reference;

  /**
   * Role that this diagnosis has within the episode of care (e.g. admission,
   * billing, discharge …)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  /**
   * Ranking of the diagnosis (for each role type)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt rank = 6;
   */
  rank?: PositiveInt;

  constructor(data?: PartialMessage<EpisodeOfCare_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EpisodeOfCare.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "condition", kind: "message", T: Reference },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
    { no: 6, name: "rank", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare_Diagnosis {
    return new EpisodeOfCare_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare_Diagnosis {
    return new EpisodeOfCare_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare_Diagnosis {
    return new EpisodeOfCare_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare_Diagnosis | PlainMessage<EpisodeOfCare_Diagnosis> | undefined, b: EpisodeOfCare_Diagnosis | PlainMessage<EpisodeOfCare_Diagnosis> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare_Diagnosis, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ExpansionProfile, last updated
 * 2017-04-19T07:44:43.294+10:00. Defines behaviour and contraints on the
 * ValueSet Expansion operation. See
 * http://hl7.org/fhir/StructureDefinition/ExpansionProfile
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile
 */
export class ExpansionProfile extends Message<ExpansionProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this expansion profile (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the expansion profile
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Business version of the expansion profile
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this expansion profile (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 13;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 14;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 16;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 17;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the expansion profile
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 19;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for expansion profile (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 20;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExpansionProfile.FixedVersion fixed_version = 21;
   */
  fixedVersion: ExpansionProfile_FixedVersion[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ExpansionProfile.ExcludedSystem excluded_system = 22;
   */
  excludedSystem?: ExpansionProfile_ExcludedSystem;

  /**
   * Whether the expansion should include concept designations
   *
   * @generated from field: google.fhir.stu3.proto.Boolean include_designations = 23;
   */
  includeDesignations?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.ExpansionProfile.Designation designation = 24;
   */
  designation?: ExpansionProfile_Designation;

  /**
   * Include or exclude the value set definition in the expansion
   *
   * @generated from field: google.fhir.stu3.proto.Boolean include_definition = 25;
   */
  includeDefinition?: Boolean;

  /**
   * Include or exclude inactive concepts in the expansion
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active_only = 26;
   */
  activeOnly?: Boolean;

  /**
   * Nested codes in the expansion or not
   *
   * @generated from field: google.fhir.stu3.proto.Boolean exclude_nested = 27;
   */
  excludeNested?: Boolean;

  /**
   * Include or exclude codes which cannot be rendered in user interfaces in the
   * value set expansion
   *
   * @generated from field: google.fhir.stu3.proto.Boolean exclude_not_for_ui = 28 [json_name = "excludeNotForUI"];
   */
  excludeNotForUi?: Boolean;

  /**
   * Include or exclude codes which are post coordinated expressions in the
   * value set expansion
   *
   * @generated from field: google.fhir.stu3.proto.Boolean exclude_post_coordinated = 29;
   */
  excludePostCoordinated?: Boolean;

  /**
   * Specify the language for the display element of codes in the value set
   * expansion
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode display_language = 30;
   */
  displayLanguage?: LanguageCode;

  /**
   * Controls behaviour of the value set expand operation when value sets are
   * too large to be completely expanded
   *
   * @generated from field: google.fhir.stu3.proto.Boolean limited_expansion = 31;
   */
  limitedExpansion?: Boolean;

  constructor(data?: PartialMessage<ExpansionProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 14, name: "experimental", kind: "message", T: Boolean },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "publisher", kind: "message", T: String },
    { no: 17, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 20, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "fixed_version", kind: "message", T: ExpansionProfile_FixedVersion, repeated: true },
    { no: 22, name: "excluded_system", kind: "message", T: ExpansionProfile_ExcludedSystem },
    { no: 23, name: "include_designations", kind: "message", T: Boolean },
    { no: 24, name: "designation", kind: "message", T: ExpansionProfile_Designation },
    { no: 25, name: "include_definition", kind: "message", T: Boolean },
    { no: 26, name: "active_only", kind: "message", T: Boolean },
    { no: 27, name: "exclude_nested", kind: "message", T: Boolean },
    { no: 28, name: "exclude_not_for_ui", jsonName: "excludeNotForUI", kind: "message", T: Boolean },
    { no: 29, name: "exclude_post_coordinated", kind: "message", T: Boolean },
    { no: 30, name: "display_language", kind: "message", T: LanguageCode },
    { no: 31, name: "limited_expansion", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile {
    return new ExpansionProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile {
    return new ExpansionProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile {
    return new ExpansionProfile().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile | PlainMessage<ExpansionProfile> | undefined, b: ExpansionProfile | PlainMessage<ExpansionProfile> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile, a, b);
  }
}

/**
 * Fix use of a code system to a particular version
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.FixedVersion
 */
export class ExpansionProfile_FixedVersion extends Message<ExpansionProfile_FixedVersion> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * System to have its version fixed
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 4;
   */
  system?: Uri;

  /**
   * Specific version of the code system referred to
   *
   * @generated from field: google.fhir.stu3.proto.String version = 5;
   */
  version?: String;

  /**
   * default | check | override
   *
   * @generated from field: google.fhir.stu3.proto.SystemVersionProcessingModeCode mode = 6;
   */
  mode?: SystemVersionProcessingModeCode;

  constructor(data?: PartialMessage<ExpansionProfile_FixedVersion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.FixedVersion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "version", kind: "message", T: String },
    { no: 6, name: "mode", kind: "message", T: SystemVersionProcessingModeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_FixedVersion {
    return new ExpansionProfile_FixedVersion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_FixedVersion {
    return new ExpansionProfile_FixedVersion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_FixedVersion {
    return new ExpansionProfile_FixedVersion().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_FixedVersion | PlainMessage<ExpansionProfile_FixedVersion> | undefined, b: ExpansionProfile_FixedVersion | PlainMessage<ExpansionProfile_FixedVersion> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_FixedVersion, a, b);
  }
}

/**
 * Systems/Versions to be exclude
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.ExcludedSystem
 */
export class ExpansionProfile_ExcludedSystem extends Message<ExpansionProfile_ExcludedSystem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The specific code system to be excluded
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 4;
   */
  system?: Uri;

  /**
   * Specific version of the code system referred to
   *
   * @generated from field: google.fhir.stu3.proto.String version = 5;
   */
  version?: String;

  constructor(data?: PartialMessage<ExpansionProfile_ExcludedSystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.ExcludedSystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "version", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_ExcludedSystem {
    return new ExpansionProfile_ExcludedSystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_ExcludedSystem {
    return new ExpansionProfile_ExcludedSystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_ExcludedSystem {
    return new ExpansionProfile_ExcludedSystem().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_ExcludedSystem | PlainMessage<ExpansionProfile_ExcludedSystem> | undefined, b: ExpansionProfile_ExcludedSystem | PlainMessage<ExpansionProfile_ExcludedSystem> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_ExcludedSystem, a, b);
  }
}

/**
 * When the expansion profile imposes designation contraints
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.Designation
 */
export class ExpansionProfile_Designation extends Message<ExpansionProfile_Designation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude include = 4;
   */
  include?: ExpansionProfile_Designation_DesignationInclude;

  /**
   * @generated from field: google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude exclude = 5;
   */
  exclude?: ExpansionProfile_Designation_DesignationExclude;

  constructor(data?: PartialMessage<ExpansionProfile_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "include", kind: "message", T: ExpansionProfile_Designation_DesignationInclude },
    { no: 5, name: "exclude", kind: "message", T: ExpansionProfile_Designation_DesignationExclude },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_Designation {
    return new ExpansionProfile_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation {
    return new ExpansionProfile_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation {
    return new ExpansionProfile_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_Designation | PlainMessage<ExpansionProfile_Designation> | undefined, b: ExpansionProfile_Designation | PlainMessage<ExpansionProfile_Designation> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_Designation, a, b);
  }
}

/**
 * Designations to be included
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude
 */
export class ExpansionProfile_Designation_DesignationInclude extends Message<ExpansionProfile_Designation_DesignationInclude> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude.DesignationIncludeDesignation designation = 4;
   */
  designation: ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation[] = [];

  constructor(data?: PartialMessage<ExpansionProfile_Designation_DesignationInclude>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "designation", kind: "message", T: ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_Designation_DesignationInclude {
    return new ExpansionProfile_Designation_DesignationInclude().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationInclude {
    return new ExpansionProfile_Designation_DesignationInclude().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationInclude {
    return new ExpansionProfile_Designation_DesignationInclude().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_Designation_DesignationInclude | PlainMessage<ExpansionProfile_Designation_DesignationInclude> | undefined, b: ExpansionProfile_Designation_DesignationInclude | PlainMessage<ExpansionProfile_Designation_DesignationInclude> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_Designation_DesignationInclude, a, b);
  }
}

/**
 * The designation to be included
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude.DesignationIncludeDesignation
 */
export class ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation extends Message<ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation to be included
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * What kind of Designation to include
   *
   * @generated from field: google.fhir.stu3.proto.Coding use = 5;
   */
  use?: Coding;

  constructor(data?: PartialMessage<ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationInclude.DesignationIncludeDesignation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "use", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation {
    return new ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation {
    return new ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation {
    return new ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation | PlainMessage<ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation> | undefined, b: ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation | PlainMessage<ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_Designation_DesignationInclude_DesignationIncludeDesignation, a, b);
  }
}

/**
 * Designations to be excluded
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude
 */
export class ExpansionProfile_Designation_DesignationExclude extends Message<ExpansionProfile_Designation_DesignationExclude> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude.DesignationExcludeDesignation designation = 4;
   */
  designation: ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation[] = [];

  constructor(data?: PartialMessage<ExpansionProfile_Designation_DesignationExclude>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "designation", kind: "message", T: ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_Designation_DesignationExclude {
    return new ExpansionProfile_Designation_DesignationExclude().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationExclude {
    return new ExpansionProfile_Designation_DesignationExclude().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationExclude {
    return new ExpansionProfile_Designation_DesignationExclude().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_Designation_DesignationExclude | PlainMessage<ExpansionProfile_Designation_DesignationExclude> | undefined, b: ExpansionProfile_Designation_DesignationExclude | PlainMessage<ExpansionProfile_Designation_DesignationExclude> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_Designation_DesignationExclude, a, b);
  }
}

/**
 * The designation to be excluded
 *
 * @generated from message google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude.DesignationExcludeDesignation
 */
export class ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation extends Message<ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation to be excluded
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * What kind of Designation to exclude
   *
   * @generated from field: google.fhir.stu3.proto.Coding use = 5;
   */
  use?: Coding;

  constructor(data?: PartialMessage<ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExpansionProfile.Designation.DesignationExclude.DesignationExcludeDesignation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "use", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation {
    return new ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation {
    return new ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation {
    return new ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation | PlainMessage<ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation> | undefined, b: ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation | PlainMessage<ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation> | undefined): boolean {
    return proto3.util.equals(ExpansionProfile_Designation_DesignationExclude_DesignationExcludeDesignation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ExplanationOfBenefit, last
 * updated 2017-04-19T07:44:43.294+10:00. Explanation of Benefit resource. See
 * http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit
 */
export class ExplanationOfBenefit extends Message<ExplanationOfBenefit> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefitStatusCode status = 10;
   */
  status?: ExplanationOfBenefitStatusCode;

  /**
   * Type or discipline
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Finer grained claim type information
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept sub_type = 12;
   */
  subType: CodeableConcept[] = [];

  /**
   * The subject of the Products and Services
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * Period for charge submission
   *
   * @generated from field: google.fhir.stu3.proto.Period billable_period = 14;
   */
  billablePeriod?: Period;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 15;
   */
  created?: DateTime;

  /**
   * Author
   *
   * @generated from field: google.fhir.stu3.proto.Reference enterer = 16;
   */
  enterer?: Reference;

  /**
   * Insurer responsible for the EOB
   *
   * @generated from field: google.fhir.stu3.proto.Reference insurer = 17;
   */
  insurer?: Reference;

  /**
   * Responsible provider for the claim
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 18;
   */
  provider?: Reference;

  /**
   * Responsible organization for the claim
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 19;
   */
  organization?: Reference;

  /**
   * Treatment Referral
   *
   * @generated from field: google.fhir.stu3.proto.Reference referral = 20;
   */
  referral?: Reference;

  /**
   * Servicing Facility
   *
   * @generated from field: google.fhir.stu3.proto.Reference facility = 21;
   */
  facility?: Reference;

  /**
   * Claim reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference claim = 22;
   */
  claim?: Reference;

  /**
   * Claim response reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference claim_response = 23;
   */
  claimResponse?: Reference;

  /**
   * complete | error | partial
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 24;
   */
  outcome?: CodeableConcept;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.stu3.proto.String disposition = 25;
   */
  disposition?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.RelatedClaim related = 26;
   */
  related: ExplanationOfBenefit_RelatedClaim[] = [];

  /**
   * Prescription authorizing services or products
   *
   * @generated from field: google.fhir.stu3.proto.Reference prescription = 27;
   */
  prescription?: Reference;

  /**
   * Original prescription if superceded by fulfiller
   *
   * @generated from field: google.fhir.stu3.proto.Reference original_prescription = 28;
   */
  originalPrescription?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Payee payee = 29;
   */
  payee?: ExplanationOfBenefit_Payee;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation information = 30;
   */
  information: ExplanationOfBenefit_SupportingInformation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.CareTeam care_team = 31;
   */
  careTeam: ExplanationOfBenefit_CareTeam[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis diagnosis = 32;
   */
  diagnosis: ExplanationOfBenefit_Diagnosis[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Procedure procedure = 33;
   */
  procedure: ExplanationOfBenefit_Procedure[] = [];

  /**
   * Precedence (primary, secondary, etc.)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt precedence = 34;
   */
  precedence?: PositiveInt;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Insurance insurance = 35;
   */
  insurance?: ExplanationOfBenefit_Insurance;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Accident accident = 36;
   */
  accident?: ExplanationOfBenefit_Accident;

  /**
   * Period unable to work
   *
   * @generated from field: google.fhir.stu3.proto.Period employment_impacted = 37;
   */
  employmentImpacted?: Period;

  /**
   * Period in hospital
   *
   * @generated from field: google.fhir.stu3.proto.Period hospitalization = 38;
   */
  hospitalization?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item item = 39;
   */
  item: ExplanationOfBenefit_Item[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem add_item = 40;
   */
  addItem: ExplanationOfBenefit_AddedItem[] = [];

  /**
   * Total Cost of service from the Claim
   *
   * @generated from field: google.fhir.stu3.proto.Money total_cost = 41;
   */
  totalCost?: Money;

  /**
   * Unallocated deductable
   *
   * @generated from field: google.fhir.stu3.proto.Money unalloc_deductable = 42;
   */
  unallocDeductable?: Money;

  /**
   * Total benefit payable for the Claim
   *
   * @generated from field: google.fhir.stu3.proto.Money total_benefit = 43;
   */
  totalBenefit?: Money;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Payment payment = 44;
   */
  payment?: ExplanationOfBenefit_Payment;

  /**
   * Printed Form Identifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 45;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Note process_note = 46;
   */
  processNote: ExplanationOfBenefit_Note[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance benefit_balance = 47;
   */
  benefitBalance: ExplanationOfBenefit_BenefitBalance[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: ExplanationOfBenefitStatusCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "sub_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "billable_period", kind: "message", T: Period },
    { no: 15, name: "created", kind: "message", T: DateTime },
    { no: 16, name: "enterer", kind: "message", T: Reference },
    { no: 17, name: "insurer", kind: "message", T: Reference },
    { no: 18, name: "provider", kind: "message", T: Reference },
    { no: 19, name: "organization", kind: "message", T: Reference },
    { no: 20, name: "referral", kind: "message", T: Reference },
    { no: 21, name: "facility", kind: "message", T: Reference },
    { no: 22, name: "claim", kind: "message", T: Reference },
    { no: 23, name: "claim_response", kind: "message", T: Reference },
    { no: 24, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 25, name: "disposition", kind: "message", T: String },
    { no: 26, name: "related", kind: "message", T: ExplanationOfBenefit_RelatedClaim, repeated: true },
    { no: 27, name: "prescription", kind: "message", T: Reference },
    { no: 28, name: "original_prescription", kind: "message", T: Reference },
    { no: 29, name: "payee", kind: "message", T: ExplanationOfBenefit_Payee },
    { no: 30, name: "information", kind: "message", T: ExplanationOfBenefit_SupportingInformation, repeated: true },
    { no: 31, name: "care_team", kind: "message", T: ExplanationOfBenefit_CareTeam, repeated: true },
    { no: 32, name: "diagnosis", kind: "message", T: ExplanationOfBenefit_Diagnosis, repeated: true },
    { no: 33, name: "procedure", kind: "message", T: ExplanationOfBenefit_Procedure, repeated: true },
    { no: 34, name: "precedence", kind: "message", T: PositiveInt },
    { no: 35, name: "insurance", kind: "message", T: ExplanationOfBenefit_Insurance },
    { no: 36, name: "accident", kind: "message", T: ExplanationOfBenefit_Accident },
    { no: 37, name: "employment_impacted", kind: "message", T: Period },
    { no: 38, name: "hospitalization", kind: "message", T: Period },
    { no: 39, name: "item", kind: "message", T: ExplanationOfBenefit_Item, repeated: true },
    { no: 40, name: "add_item", kind: "message", T: ExplanationOfBenefit_AddedItem, repeated: true },
    { no: 41, name: "total_cost", kind: "message", T: Money },
    { no: 42, name: "unalloc_deductable", kind: "message", T: Money },
    { no: 43, name: "total_benefit", kind: "message", T: Money },
    { no: 44, name: "payment", kind: "message", T: ExplanationOfBenefit_Payment },
    { no: 45, name: "form", kind: "message", T: CodeableConcept },
    { no: 46, name: "process_note", kind: "message", T: ExplanationOfBenefit_Note, repeated: true },
    { no: 47, name: "benefit_balance", kind: "message", T: ExplanationOfBenefit_BenefitBalance, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit {
    return new ExplanationOfBenefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit {
    return new ExplanationOfBenefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit {
    return new ExplanationOfBenefit().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit | PlainMessage<ExplanationOfBenefit> | undefined, b: ExplanationOfBenefit | PlainMessage<ExplanationOfBenefit> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit, a, b);
  }
}

/**
 * Related Claims which may be revelant to processing this claim
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.RelatedClaim
 */
export class ExplanationOfBenefit_RelatedClaim extends Message<ExplanationOfBenefit_RelatedClaim> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the related claim
   *
   * @generated from field: google.fhir.stu3.proto.Reference claim = 4;
   */
  claim?: Reference;

  /**
   * How the reference claim is related
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept relationship = 5;
   */
  relationship?: CodeableConcept;

  /**
   * Related file or case reference
   *
   * @generated from field: google.fhir.stu3.proto.Identifier reference = 6;
   */
  reference?: Identifier;

  constructor(data?: PartialMessage<ExplanationOfBenefit_RelatedClaim>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.RelatedClaim";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "claim", kind: "message", T: Reference },
    { no: 5, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 6, name: "reference", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_RelatedClaim {
    return new ExplanationOfBenefit_RelatedClaim().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_RelatedClaim {
    return new ExplanationOfBenefit_RelatedClaim().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_RelatedClaim {
    return new ExplanationOfBenefit_RelatedClaim().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_RelatedClaim | PlainMessage<ExplanationOfBenefit_RelatedClaim> | undefined, b: ExplanationOfBenefit_RelatedClaim | PlainMessage<ExplanationOfBenefit_RelatedClaim> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_RelatedClaim, a, b);
  }
}

/**
 * Party to be paid any benefits payable
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Payee
 */
export class ExplanationOfBenefit_Payee extends Message<ExplanationOfBenefit_Payee> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of party: Subscriber, Provider, other
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * organization | patient | practitioner | relatedperson
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept resource_type = 5;
   */
  resourceType?: CodeableConcept;

  /**
   * Party to receive the payable
   *
   * @generated from field: google.fhir.stu3.proto.Reference party = 6;
   */
  party?: Reference;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Payee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Payee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "resource_type", kind: "message", T: CodeableConcept },
    { no: 6, name: "party", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Payee {
    return new ExplanationOfBenefit_Payee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payee {
    return new ExplanationOfBenefit_Payee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payee {
    return new ExplanationOfBenefit_Payee().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Payee | PlainMessage<ExplanationOfBenefit_Payee> | undefined, b: ExplanationOfBenefit_Payee | PlainMessage<ExplanationOfBenefit_Payee> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Payee, a, b);
  }
}

/**
 * Exceptions, special considerations, the condition, situation, prior or
 * concurrent issues
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation
 */
export class ExplanationOfBenefit_SupportingInformation extends Message<ExplanationOfBenefit_SupportingInformation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Information instance identifier
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * General class of information
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 5;
   */
  category?: CodeableConcept;

  /**
   * Type of information
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.TimingType timing = 7;
   */
  timing?: ExplanationOfBenefit_SupportingInformation_TimingType;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.Value value = 8;
   */
  value?: ExplanationOfBenefit_SupportingInformation_Value;

  /**
   * Reason associated with the information
   *
   * @generated from field: google.fhir.stu3.proto.Coding reason = 9;
   */
  reason?: Coding;

  constructor(data?: PartialMessage<ExplanationOfBenefit_SupportingInformation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "category", kind: "message", T: CodeableConcept },
    { no: 6, name: "code", kind: "message", T: CodeableConcept },
    { no: 7, name: "timing", kind: "message", T: ExplanationOfBenefit_SupportingInformation_TimingType },
    { no: 8, name: "value", kind: "message", T: ExplanationOfBenefit_SupportingInformation_Value },
    { no: 9, name: "reason", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_SupportingInformation {
    return new ExplanationOfBenefit_SupportingInformation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation {
    return new ExplanationOfBenefit_SupportingInformation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation {
    return new ExplanationOfBenefit_SupportingInformation().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_SupportingInformation | PlainMessage<ExplanationOfBenefit_SupportingInformation> | undefined, b: ExplanationOfBenefit_SupportingInformation | PlainMessage<ExplanationOfBenefit_SupportingInformation> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_SupportingInformation, a, b);
  }
}

/**
 * When it occurred
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.TimingType
 */
export class ExplanationOfBenefit_SupportingInformation_TimingType extends Message<ExplanationOfBenefit_SupportingInformation_TimingType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.TimingType.timing
   */
  timing: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_SupportingInformation_TimingType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.TimingType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "timing" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_SupportingInformation_TimingType {
    return new ExplanationOfBenefit_SupportingInformation_TimingType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_TimingType {
    return new ExplanationOfBenefit_SupportingInformation_TimingType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_TimingType {
    return new ExplanationOfBenefit_SupportingInformation_TimingType().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_SupportingInformation_TimingType | PlainMessage<ExplanationOfBenefit_SupportingInformation_TimingType> | undefined, b: ExplanationOfBenefit_SupportingInformation_TimingType | PlainMessage<ExplanationOfBenefit_SupportingInformation_TimingType> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_SupportingInformation_TimingType, a, b);
  }
}

/**
 * Additional Data or supporting information
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.Value
 */
export class ExplanationOfBenefit_SupportingInformation_Value extends Message<ExplanationOfBenefit_SupportingInformation_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 2;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 3;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 4;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_SupportingInformation_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.SupportingInformation.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 2, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 3, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 4, name: "reference", kind: "message", T: Reference, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_SupportingInformation_Value {
    return new ExplanationOfBenefit_SupportingInformation_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_Value {
    return new ExplanationOfBenefit_SupportingInformation_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_Value {
    return new ExplanationOfBenefit_SupportingInformation_Value().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_SupportingInformation_Value | PlainMessage<ExplanationOfBenefit_SupportingInformation_Value> | undefined, b: ExplanationOfBenefit_SupportingInformation_Value | PlainMessage<ExplanationOfBenefit_SupportingInformation_Value> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_SupportingInformation_Value, a, b);
  }
}

/**
 * Care Team members
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.CareTeam
 */
export class ExplanationOfBenefit_CareTeam extends Message<ExplanationOfBenefit_CareTeam> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Number to covey order of careteam
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Member of the Care Team
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 5;
   */
  provider?: Reference;

  /**
   * Billing practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Boolean responsible = 6;
   */
  responsible?: Boolean;

  /**
   * Role on the team
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 7;
   */
  role?: CodeableConcept;

  /**
   * Type, classification or Specialization
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept qualification = 8;
   */
  qualification?: CodeableConcept;

  constructor(data?: PartialMessage<ExplanationOfBenefit_CareTeam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.CareTeam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "provider", kind: "message", T: Reference },
    { no: 6, name: "responsible", kind: "message", T: Boolean },
    { no: 7, name: "role", kind: "message", T: CodeableConcept },
    { no: 8, name: "qualification", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_CareTeam {
    return new ExplanationOfBenefit_CareTeam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_CareTeam {
    return new ExplanationOfBenefit_CareTeam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_CareTeam {
    return new ExplanationOfBenefit_CareTeam().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_CareTeam | PlainMessage<ExplanationOfBenefit_CareTeam> | undefined, b: ExplanationOfBenefit_CareTeam | PlainMessage<ExplanationOfBenefit_CareTeam> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_CareTeam, a, b);
  }
}

/**
 * List of Diagnosis
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis
 */
export class ExplanationOfBenefit_Diagnosis extends Message<ExplanationOfBenefit_Diagnosis> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Number to covey order of diagnosis
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis.DiagnosisType diagnosis = 5;
   */
  diagnosis?: ExplanationOfBenefit_Diagnosis_DiagnosisType;

  /**
   * Timing or nature of the diagnosis
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type: CodeableConcept[] = [];

  /**
   * Package billing code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept package_code = 7;
   */
  packageCode?: CodeableConcept;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "diagnosis", kind: "message", T: ExplanationOfBenefit_Diagnosis_DiagnosisType },
    { no: 6, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "package_code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Diagnosis {
    return new ExplanationOfBenefit_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis {
    return new ExplanationOfBenefit_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis {
    return new ExplanationOfBenefit_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Diagnosis | PlainMessage<ExplanationOfBenefit_Diagnosis> | undefined, b: ExplanationOfBenefit_Diagnosis | PlainMessage<ExplanationOfBenefit_Diagnosis> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Diagnosis, a, b);
  }
}

/**
 * Patient's diagnosis
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis.DiagnosisType
 */
export class ExplanationOfBenefit_Diagnosis_DiagnosisType extends Message<ExplanationOfBenefit_Diagnosis_DiagnosisType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis.DiagnosisType.diagnosis
   */
  diagnosis: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Diagnosis_DiagnosisType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Diagnosis.DiagnosisType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "diagnosis" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "diagnosis" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Diagnosis_DiagnosisType {
    return new ExplanationOfBenefit_Diagnosis_DiagnosisType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis_DiagnosisType {
    return new ExplanationOfBenefit_Diagnosis_DiagnosisType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis_DiagnosisType {
    return new ExplanationOfBenefit_Diagnosis_DiagnosisType().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Diagnosis_DiagnosisType | PlainMessage<ExplanationOfBenefit_Diagnosis_DiagnosisType> | undefined, b: ExplanationOfBenefit_Diagnosis_DiagnosisType | PlainMessage<ExplanationOfBenefit_Diagnosis_DiagnosisType> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Diagnosis_DiagnosisType, a, b);
  }
}

/**
 * Procedures performed
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Procedure
 */
export class ExplanationOfBenefit_Procedure extends Message<ExplanationOfBenefit_Procedure> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Procedure sequence for reference
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * When the procedure was performed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 5;
   */
  date?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Procedure.ProcedureType procedure = 6;
   */
  procedure?: ExplanationOfBenefit_Procedure_ProcedureType;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Procedure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Procedure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "date", kind: "message", T: DateTime },
    { no: 6, name: "procedure", kind: "message", T: ExplanationOfBenefit_Procedure_ProcedureType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Procedure {
    return new ExplanationOfBenefit_Procedure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure {
    return new ExplanationOfBenefit_Procedure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure {
    return new ExplanationOfBenefit_Procedure().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Procedure | PlainMessage<ExplanationOfBenefit_Procedure> | undefined, b: ExplanationOfBenefit_Procedure | PlainMessage<ExplanationOfBenefit_Procedure> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Procedure, a, b);
  }
}

/**
 * Patient's list of procedures performed
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Procedure.ProcedureType
 */
export class ExplanationOfBenefit_Procedure_ProcedureType extends Message<ExplanationOfBenefit_Procedure_ProcedureType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.Procedure.ProcedureType.procedure
   */
  procedure: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Procedure_ProcedureType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Procedure.ProcedureType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "procedure" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "procedure" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Procedure_ProcedureType {
    return new ExplanationOfBenefit_Procedure_ProcedureType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure_ProcedureType {
    return new ExplanationOfBenefit_Procedure_ProcedureType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure_ProcedureType {
    return new ExplanationOfBenefit_Procedure_ProcedureType().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Procedure_ProcedureType | PlainMessage<ExplanationOfBenefit_Procedure_ProcedureType> | undefined, b: ExplanationOfBenefit_Procedure_ProcedureType | PlainMessage<ExplanationOfBenefit_Procedure_ProcedureType> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Procedure_ProcedureType, a, b);
  }
}

/**
 * Insurance or medical plan
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Insurance
 */
export class ExplanationOfBenefit_Insurance extends Message<ExplanationOfBenefit_Insurance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.stu3.proto.Reference coverage = 4;
   */
  coverage?: Reference;

  /**
   * Pre-Authorization/Determination Reference
   *
   * @generated from field: repeated google.fhir.stu3.proto.String pre_auth_ref = 5;
   */
  preAuthRef: String[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Insurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Insurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "coverage", kind: "message", T: Reference },
    { no: 5, name: "pre_auth_ref", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Insurance {
    return new ExplanationOfBenefit_Insurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Insurance {
    return new ExplanationOfBenefit_Insurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Insurance {
    return new ExplanationOfBenefit_Insurance().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Insurance | PlainMessage<ExplanationOfBenefit_Insurance> | undefined, b: ExplanationOfBenefit_Insurance | PlainMessage<ExplanationOfBenefit_Insurance> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Insurance, a, b);
  }
}

/**
 * Details of an accident
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Accident
 */
export class ExplanationOfBenefit_Accident extends Message<ExplanationOfBenefit_Accident> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When the accident occurred
   *
   * @generated from field: google.fhir.stu3.proto.Date date = 4;
   */
  date?: Date;

  /**
   * The nature of the accident
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Accident.Location location = 6;
   */
  location?: ExplanationOfBenefit_Accident_Location;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Accident>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Accident";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: Date },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "location", kind: "message", T: ExplanationOfBenefit_Accident_Location },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Accident {
    return new ExplanationOfBenefit_Accident().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident {
    return new ExplanationOfBenefit_Accident().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident {
    return new ExplanationOfBenefit_Accident().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Accident | PlainMessage<ExplanationOfBenefit_Accident> | undefined, b: ExplanationOfBenefit_Accident | PlainMessage<ExplanationOfBenefit_Accident> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Accident, a, b);
  }
}

/**
 * Accident Place
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Accident.Location
 */
export class ExplanationOfBenefit_Accident_Location extends Message<ExplanationOfBenefit_Accident_Location> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.Accident.Location.location
   */
  location: {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 1;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Accident_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Accident.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "message", T: Address, oneof: "location" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "location" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Accident_Location {
    return new ExplanationOfBenefit_Accident_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident_Location {
    return new ExplanationOfBenefit_Accident_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident_Location {
    return new ExplanationOfBenefit_Accident_Location().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Accident_Location | PlainMessage<ExplanationOfBenefit_Accident_Location> | undefined, b: ExplanationOfBenefit_Accident_Location | PlainMessage<ExplanationOfBenefit_Accident_Location> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Accident_Location, a, b);
  }
}

/**
 * Goods and Services
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Item
 */
export class ExplanationOfBenefit_Item extends Message<ExplanationOfBenefit_Item> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Applicable careteam members
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt care_team_link_id = 5;
   */
  careTeamLinkId: PositiveInt[] = [];

  /**
   * Applicable diagnoses
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt diagnosis_link_id = 6;
   */
  diagnosisLinkId: PositiveInt[] = [];

  /**
   * Applicable procedures
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt procedure_link_id = 7;
   */
  procedureLinkId: PositiveInt[] = [];

  /**
   * Applicable exception and supporting information
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt information_link_id = 8;
   */
  informationLinkId: PositiveInt[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 9;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 10;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 11;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 12;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program specific reason for item inclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept program_code = 13;
   */
  programCode: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Item.Serviced serviced = 14;
   */
  serviced?: ExplanationOfBenefit_Item_Serviced;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.Item.Location location = 15;
   */
  location?: ExplanationOfBenefit_Item_Location;

  /**
   * Count of Products or Services
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 16;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per point
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 17;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 18;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 19;
   */
  net?: Money;

  /**
   * Unique Device Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference udi = 20;
   */
  udi: Reference[] = [];

  /**
   * Service Location
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 21;
   */
  bodySite?: CodeableConcept;

  /**
   * Service Sub-location
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept sub_site = 22;
   */
  subSite: CodeableConcept[] = [];

  /**
   * Encounters related to this billed item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference encounter = 23;
   */
  encounter: Reference[] = [];

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 24;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication adjudication = 25;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail detail = 26;
   */
  detail: ExplanationOfBenefit_Item_Detail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "care_team_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "diagnosis_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 7, name: "procedure_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 8, name: "information_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 9, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 10, name: "category", kind: "message", T: CodeableConcept },
    { no: 11, name: "service", kind: "message", T: CodeableConcept },
    { no: 12, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "serviced", kind: "message", T: ExplanationOfBenefit_Item_Serviced },
    { no: 15, name: "location", kind: "message", T: ExplanationOfBenefit_Item_Location },
    { no: 16, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 17, name: "unit_price", kind: "message", T: Money },
    { no: 18, name: "factor", kind: "message", T: Decimal },
    { no: 19, name: "net", kind: "message", T: Money },
    { no: 20, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 22, name: "sub_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "encounter", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 25, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 26, name: "detail", kind: "message", T: ExplanationOfBenefit_Item_Detail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item {
    return new ExplanationOfBenefit_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item {
    return new ExplanationOfBenefit_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item {
    return new ExplanationOfBenefit_Item().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item | PlainMessage<ExplanationOfBenefit_Item> | undefined, b: ExplanationOfBenefit_Item | PlainMessage<ExplanationOfBenefit_Item> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item, a, b);
  }
}

/**
 * Date or dates of Service
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Item.Serviced
 */
export class ExplanationOfBenefit_Item_Serviced extends Message<ExplanationOfBenefit_Item_Serviced> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.Item.Serviced.serviced
   */
  serviced: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Serviced>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Serviced";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "serviced" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "serviced" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Serviced {
    return new ExplanationOfBenefit_Item_Serviced().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Serviced {
    return new ExplanationOfBenefit_Item_Serviced().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Serviced {
    return new ExplanationOfBenefit_Item_Serviced().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Serviced | PlainMessage<ExplanationOfBenefit_Item_Serviced> | undefined, b: ExplanationOfBenefit_Item_Serviced | PlainMessage<ExplanationOfBenefit_Item_Serviced> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Serviced, a, b);
  }
}

/**
 * Place of service
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Item.Location
 */
export class ExplanationOfBenefit_Item_Location extends Message<ExplanationOfBenefit_Item_Location> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.Item.Location.location
   */
  location: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 2;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "location" },
    { no: 2, name: "address", kind: "message", T: Address, oneof: "location" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "location" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Location {
    return new ExplanationOfBenefit_Item_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Location {
    return new ExplanationOfBenefit_Item_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Location {
    return new ExplanationOfBenefit_Item_Location().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Location | PlainMessage<ExplanationOfBenefit_Item_Location> | undefined, b: ExplanationOfBenefit_Item_Location | PlainMessage<ExplanationOfBenefit_Item_Location> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Location, a, b);
  }
}

/**
 * Adjudication details
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication
 */
export class ExplanationOfBenefit_Item_Adjudication extends Message<ExplanationOfBenefit_Item_Adjudication> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Adjudication category such as co-pay, eligible, benefit, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Explanation of Adjudication outcome
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  /**
   * Monetary amount
   *
   * @generated from field: google.fhir.stu3.proto.Money amount = 6;
   */
  amount?: Money;

  /**
   * Non-monitory value
   *
   * @generated from field: google.fhir.stu3.proto.Decimal value = 7;
   */
  value?: Decimal;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Adjudication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
    { no: 6, name: "amount", kind: "message", T: Money },
    { no: 7, name: "value", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Adjudication {
    return new ExplanationOfBenefit_Item_Adjudication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Adjudication {
    return new ExplanationOfBenefit_Item_Adjudication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Adjudication {
    return new ExplanationOfBenefit_Item_Adjudication().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Adjudication | PlainMessage<ExplanationOfBenefit_Item_Adjudication> | undefined, b: ExplanationOfBenefit_Item_Adjudication | PlainMessage<ExplanationOfBenefit_Item_Adjudication> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Adjudication, a, b);
  }
}

/**
 * Additional items
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail
 */
export class ExplanationOfBenefit_Item_Detail extends Message<ExplanationOfBenefit_Item_Detail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Group or type of product or service
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 6;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 7;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 8;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 9;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program specific reason for item inclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept program_code = 10;
   */
  programCode: CodeableConcept[] = [];

  /**
   * Count of Products or Services
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 11;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per point
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 12;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 13;
   */
  factor?: Decimal;

  /**
   * Total additional item cost
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 14;
   */
  net?: Money;

  /**
   * Unique Device Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference udi = 15;
   */
  udi: Reference[] = [];

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 16;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Detail level adjudication details
   *
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication adjudication = 17;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail.SubDetail sub_detail = 18;
   */
  subDetail: ExplanationOfBenefit_Item_Detail_SubDetail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 7, name: "category", kind: "message", T: CodeableConcept },
    { no: 8, name: "service", kind: "message", T: CodeableConcept },
    { no: 9, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 12, name: "unit_price", kind: "message", T: Money },
    { no: 13, name: "factor", kind: "message", T: Decimal },
    { no: 14, name: "net", kind: "message", T: Money },
    { no: 15, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 17, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 18, name: "sub_detail", kind: "message", T: ExplanationOfBenefit_Item_Detail_SubDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Detail {
    return new ExplanationOfBenefit_Item_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail {
    return new ExplanationOfBenefit_Item_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail {
    return new ExplanationOfBenefit_Item_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Detail | PlainMessage<ExplanationOfBenefit_Item_Detail> | undefined, b: ExplanationOfBenefit_Item_Detail | PlainMessage<ExplanationOfBenefit_Item_Detail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Detail, a, b);
  }
}

/**
 * Additional items
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail.SubDetail
 */
export class ExplanationOfBenefit_Item_Detail_SubDetail extends Message<ExplanationOfBenefit_Item_Detail_SubDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Type of product or service
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 6;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 7;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 8;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 9;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program specific reason for item inclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept program_code = 10;
   */
  programCode: CodeableConcept[] = [];

  /**
   * Count of Products or Services
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 11;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per point
   *
   * @generated from field: google.fhir.stu3.proto.Money unit_price = 12;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.stu3.proto.Decimal factor = 13;
   */
  factor?: Decimal;

  /**
   * Net additional item cost
   *
   * @generated from field: google.fhir.stu3.proto.Money net = 14;
   */
  net?: Money;

  /**
   * Unique Device Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference udi = 15;
   */
  udi: Reference[] = [];

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 16;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Language if different from the resource
   *
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication adjudication = 17;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Detail_SubDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Item.Detail.SubDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 7, name: "category", kind: "message", T: CodeableConcept },
    { no: 8, name: "service", kind: "message", T: CodeableConcept },
    { no: 9, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 12, name: "unit_price", kind: "message", T: Money },
    { no: 13, name: "factor", kind: "message", T: Decimal },
    { no: 14, name: "net", kind: "message", T: Money },
    { no: 15, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 17, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Detail_SubDetail {
    return new ExplanationOfBenefit_Item_Detail_SubDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail_SubDetail {
    return new ExplanationOfBenefit_Item_Detail_SubDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail_SubDetail {
    return new ExplanationOfBenefit_Item_Detail_SubDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Detail_SubDetail | PlainMessage<ExplanationOfBenefit_Item_Detail_SubDetail> | undefined, b: ExplanationOfBenefit_Item_Detail_SubDetail | PlainMessage<ExplanationOfBenefit_Item_Detail_SubDetail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Detail_SubDetail, a, b);
  }
}

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem
 */
export class ExplanationOfBenefit_AddedItem extends Message<ExplanationOfBenefit_AddedItem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instances
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt sequence_link_id = 4;
   */
  sequenceLinkId: PositiveInt[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 7;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Professional fee or Product charge
   *
   * @generated from field: google.fhir.stu3.proto.Money fee = 9;
   */
  fee?: Money;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 10;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items adjudication
   *
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication adjudication = 11;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem.AddedItemsDetail detail = 12;
   */
  detail: ExplanationOfBenefit_AddedItem_AddedItemsDetail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: PositiveInt, repeated: true },
    { no: 5, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 6, name: "category", kind: "message", T: CodeableConcept },
    { no: 7, name: "service", kind: "message", T: CodeableConcept },
    { no: 8, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "fee", kind: "message", T: Money },
    { no: 10, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 11, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 12, name: "detail", kind: "message", T: ExplanationOfBenefit_AddedItem_AddedItemsDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem {
    return new ExplanationOfBenefit_AddedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem {
    return new ExplanationOfBenefit_AddedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem {
    return new ExplanationOfBenefit_AddedItem().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem | PlainMessage<ExplanationOfBenefit_AddedItem> | undefined, b: ExplanationOfBenefit_AddedItem | PlainMessage<ExplanationOfBenefit_AddedItem> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem, a, b);
  }
}

/**
 * Added items details
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem.AddedItemsDetail
 */
export class ExplanationOfBenefit_AddedItem_AddedItemsDetail extends Message<ExplanationOfBenefit_AddedItem_AddedItemsDetail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept revenue = 4;
   */
  revenue?: CodeableConcept;

  /**
   * Type of service or product
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 5;
   */
  category?: CodeableConcept;

  /**
   * Billing Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service = 6;
   */
  service?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept modifier = 7;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Professional fee or Product charge
   *
   * @generated from field: google.fhir.stu3.proto.Money fee = 8;
   */
  fee?: Money;

  /**
   * List of note numbers which apply
   *
   * @generated from field: repeated google.fhir.stu3.proto.PositiveInt note_number = 9;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items detail adjudication
   *
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.Item.Adjudication adjudication = 10;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem_AddedItemsDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.AddedItem.AddedItemsDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 5, name: "category", kind: "message", T: CodeableConcept },
    { no: 6, name: "service", kind: "message", T: CodeableConcept },
    { no: 7, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "fee", kind: "message", T: Money },
    { no: 9, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 10, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemsDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemsDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemsDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemsDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemsDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemsDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem_AddedItemsDetail | PlainMessage<ExplanationOfBenefit_AddedItem_AddedItemsDetail> | undefined, b: ExplanationOfBenefit_AddedItem_AddedItemsDetail | PlainMessage<ExplanationOfBenefit_AddedItem_AddedItemsDetail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem_AddedItemsDetail, a, b);
  }
}

/**
 * Payment (if paid)
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Payment
 */
export class ExplanationOfBenefit_Payment extends Message<ExplanationOfBenefit_Payment> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Partial or Complete
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Payment adjustment for non-Claim issues
   *
   * @generated from field: google.fhir.stu3.proto.Money adjustment = 5;
   */
  adjustment?: Money;

  /**
   * Explanation for the non-claim adjustment
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept adjustment_reason = 6;
   */
  adjustmentReason?: CodeableConcept;

  /**
   * Expected date of Payment
   *
   * @generated from field: google.fhir.stu3.proto.Date date = 7;
   */
  date?: Date;

  /**
   * Payable amount after adjustment
   *
   * @generated from field: google.fhir.stu3.proto.Money amount = 8;
   */
  amount?: Money;

  /**
   * Identifier of the payment instrument
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Payment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Payment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "adjustment", kind: "message", T: Money },
    { no: 6, name: "adjustment_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "date", kind: "message", T: Date },
    { no: 8, name: "amount", kind: "message", T: Money },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Payment {
    return new ExplanationOfBenefit_Payment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payment {
    return new ExplanationOfBenefit_Payment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payment {
    return new ExplanationOfBenefit_Payment().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Payment | PlainMessage<ExplanationOfBenefit_Payment> | undefined, b: ExplanationOfBenefit_Payment | PlainMessage<ExplanationOfBenefit_Payment> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Payment, a, b);
  }
}

/**
 * Processing notes
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.Note
 */
export class ExplanationOfBenefit_Note extends Message<ExplanationOfBenefit_Note> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Sequence number for this note
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt number = 4;
   */
  number?: PositiveInt;

  /**
   * display | print | printoper
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Note explanitory text
   *
   * @generated from field: google.fhir.stu3.proto.String text = 6;
   */
  text?: String;

  /**
   * Language if different from the resource
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept language = 7;
   */
  language?: CodeableConcept;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Note>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.Note";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "number", kind: "message", T: PositiveInt },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "text", kind: "message", T: String },
    { no: 7, name: "language", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Note {
    return new ExplanationOfBenefit_Note().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Note {
    return new ExplanationOfBenefit_Note().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Note {
    return new ExplanationOfBenefit_Note().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Note | PlainMessage<ExplanationOfBenefit_Note> | undefined, b: ExplanationOfBenefit_Note | PlainMessage<ExplanationOfBenefit_Note> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Note, a, b);
  }
}

/**
 * Balance by Benefit Category
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance
 */
export class ExplanationOfBenefit_BenefitBalance extends Message<ExplanationOfBenefit_BenefitBalance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of services covered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Detailed services covered within the type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept sub_category = 5;
   */
  subCategory?: CodeableConcept;

  /**
   * Excluded from the plan
   *
   * @generated from field: google.fhir.stu3.proto.Boolean excluded = 6;
   */
  excluded?: Boolean;

  /**
   * Short name for the benefit
   *
   * @generated from field: google.fhir.stu3.proto.String name = 7;
   */
  name?: String;

  /**
   * Description of the benefit or services covered
   *
   * @generated from field: google.fhir.stu3.proto.String description = 8;
   */
  description?: String;

  /**
   * In or out of network
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept network = 9;
   */
  network?: CodeableConcept;

  /**
   * Individual or family
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept unit = 10;
   */
  unit?: CodeableConcept;

  /**
   * Annual or lifetime
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept term = 11;
   */
  term?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit financial = 12;
   */
  financial: ExplanationOfBenefit_BenefitBalance_Benefit[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "sub_category", kind: "message", T: CodeableConcept },
    { no: 6, name: "excluded", kind: "message", T: Boolean },
    { no: 7, name: "name", kind: "message", T: String },
    { no: 8, name: "description", kind: "message", T: String },
    { no: 9, name: "network", kind: "message", T: CodeableConcept },
    { no: 10, name: "unit", kind: "message", T: CodeableConcept },
    { no: 11, name: "term", kind: "message", T: CodeableConcept },
    { no: 12, name: "financial", kind: "message", T: ExplanationOfBenefit_BenefitBalance_Benefit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance {
    return new ExplanationOfBenefit_BenefitBalance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance {
    return new ExplanationOfBenefit_BenefitBalance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance {
    return new ExplanationOfBenefit_BenefitBalance().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance | PlainMessage<ExplanationOfBenefit_BenefitBalance> | undefined, b: ExplanationOfBenefit_BenefitBalance | PlainMessage<ExplanationOfBenefit_BenefitBalance> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance, a, b);
  }
}

/**
 * Benefit Summary
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit
 */
export class ExplanationOfBenefit_BenefitBalance_Benefit extends Message<ExplanationOfBenefit_BenefitBalance_Benefit> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Deductable, visits, benefit amount
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Allowed allowed = 5;
   */
  allowed?: ExplanationOfBenefit_BenefitBalance_Benefit_Allowed;

  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Used used = 6;
   */
  used?: ExplanationOfBenefit_BenefitBalance_Benefit_Used;

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance_Benefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "allowed", kind: "message", T: ExplanationOfBenefit_BenefitBalance_Benefit_Allowed },
    { no: 6, name: "used", kind: "message", T: ExplanationOfBenefit_BenefitBalance_Benefit_Used },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit {
    return new ExplanationOfBenefit_BenefitBalance_Benefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit {
    return new ExplanationOfBenefit_BenefitBalance_Benefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit {
    return new ExplanationOfBenefit_BenefitBalance_Benefit().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance_Benefit | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit> | undefined, b: ExplanationOfBenefit_BenefitBalance_Benefit | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance_Benefit, a, b);
  }
}

/**
 * Benefits allowed
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Allowed
 */
export class ExplanationOfBenefit_BenefitBalance_Benefit_Allowed extends Message<ExplanationOfBenefit_BenefitBalance_Benefit_Allowed> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Allowed.allowed
   */
  allowed: {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 3;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance_Benefit_Allowed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Allowed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "allowed" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "allowed" },
    { no: 3, name: "money", kind: "message", T: Money, oneof: "allowed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_Allowed {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_Allowed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_Allowed {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_Allowed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_Allowed {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_Allowed().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance_Benefit_Allowed | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_Allowed> | undefined, b: ExplanationOfBenefit_BenefitBalance_Benefit_Allowed | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_Allowed> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance_Benefit_Allowed, a, b);
  }
}

/**
 * Benefits used
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Used
 */
export class ExplanationOfBenefit_BenefitBalance_Benefit_Used extends Message<ExplanationOfBenefit_BenefitBalance_Benefit_Used> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Used.used
   */
  used: {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 2;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance_Benefit_Used>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefit.BenefitBalance.Benefit.Used";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "used" },
    { no: 2, name: "money", kind: "message", T: Money, oneof: "used" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_Used {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_Used().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_Used {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_Used().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_Used {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_Used().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance_Benefit_Used | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_Used> | undefined, b: ExplanationOfBenefit_BenefitBalance_Benefit_Used | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_Used> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance_Benefit_Used, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for FamilyMemberHistory, last updated
 * 2017-04-19T07:44:43.294+10:00. Information about patient's relatives,
 * relevant for patient. See
 * http://hl7.org/fhir/StructureDefinition/FamilyMemberHistory
 *
 * @generated from message google.fhir.stu3.proto.FamilyMemberHistory
 */
export class FamilyMemberHistory extends Message<FamilyMemberHistory> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Id(s) for this record
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * partial | completed | entered-in-error | health-unknown
   *
   * @generated from field: google.fhir.stu3.proto.FamilyHistoryStatusCode status = 11;
   */
  status?: FamilyHistoryStatusCode;

  /**
   * The taking of a family member's history did not occur
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_done = 12;
   */
  notDone?: Boolean;

  /**
   * subject-unknown | withheld | unable-to-obtain | deferred
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept not_done_reason = 13;
   */
  notDoneReason?: CodeableConcept;

  /**
   * Patient history is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * When history was captured/updated
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * The family member described
   *
   * @generated from field: google.fhir.stu3.proto.String name = 16;
   */
  name?: String;

  /**
   * Relationship to the subject
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept relationship = 17;
   */
  relationship?: CodeableConcept;

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 18;
   */
  gender?: AdministrativeGenderCode;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilyMemberHistory.Born born = 19;
   */
  born?: FamilyMemberHistory_Born;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilyMemberHistory.AgeType age = 20;
   */
  age?: FamilyMemberHistory_AgeType;

  /**
   * Age is estimated?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean estimated_age = 21;
   */
  estimatedAge?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilyMemberHistory.Deceased deceased = 22;
   */
  deceased?: FamilyMemberHistory_Deceased;

  /**
   * Why was family member history performed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 23;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why was family member history performed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 24;
   */
  reasonReference: Reference[] = [];

  /**
   * General note about related person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.FamilyMemberHistory.Condition condition = 26;
   */
  condition: FamilyMemberHistory_Condition[] = [];

  constructor(data?: PartialMessage<FamilyMemberHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyMemberHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: FamilyHistoryStatusCode },
    { no: 12, name: "not_done", kind: "message", T: Boolean },
    { no: 13, name: "not_done_reason", kind: "message", T: CodeableConcept },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "name", kind: "message", T: String },
    { no: 17, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 18, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 19, name: "born", kind: "message", T: FamilyMemberHistory_Born },
    { no: 20, name: "age", kind: "message", T: FamilyMemberHistory_AgeType },
    { no: 21, name: "estimated_age", kind: "message", T: Boolean },
    { no: 22, name: "deceased", kind: "message", T: FamilyMemberHistory_Deceased },
    { no: 23, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "condition", kind: "message", T: FamilyMemberHistory_Condition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistory {
    return new FamilyMemberHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistory {
    return new FamilyMemberHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistory {
    return new FamilyMemberHistory().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistory | PlainMessage<FamilyMemberHistory> | undefined, b: FamilyMemberHistory | PlainMessage<FamilyMemberHistory> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistory, a, b);
  }
}

/**
 * (approximate) date of birth
 *
 * @generated from message google.fhir.stu3.proto.FamilyMemberHistory.Born
 */
export class FamilyMemberHistory_Born extends Message<FamilyMemberHistory_Born> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilyMemberHistory.Born.born
   */
  born: {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 1;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 2;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilyMemberHistory_Born>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyMemberHistory.Born";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: Period, oneof: "born" },
    { no: 2, name: "date", kind: "message", T: Date, oneof: "born" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "born" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistory_Born {
    return new FamilyMemberHistory_Born().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Born {
    return new FamilyMemberHistory_Born().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Born {
    return new FamilyMemberHistory_Born().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistory_Born | PlainMessage<FamilyMemberHistory_Born> | undefined, b: FamilyMemberHistory_Born | PlainMessage<FamilyMemberHistory_Born> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistory_Born, a, b);
  }
}

/**
 * (approximate) age
 *
 * @generated from message google.fhir.stu3.proto.FamilyMemberHistory.AgeType
 */
export class FamilyMemberHistory_AgeType extends Message<FamilyMemberHistory_AgeType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilyMemberHistory.AgeType.age
   */
  age: {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age_value = 1 [json_name = "age"];
     */
    value: Age;
    case: "ageValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilyMemberHistory_AgeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyMemberHistory.AgeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "age_value", jsonName: "age", kind: "message", T: Age, oneof: "age" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "age" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "age" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistory_AgeType {
    return new FamilyMemberHistory_AgeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistory_AgeType {
    return new FamilyMemberHistory_AgeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistory_AgeType {
    return new FamilyMemberHistory_AgeType().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistory_AgeType | PlainMessage<FamilyMemberHistory_AgeType> | undefined, b: FamilyMemberHistory_AgeType | PlainMessage<FamilyMemberHistory_AgeType> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistory_AgeType, a, b);
  }
}

/**
 * Dead? How old/when?
 *
 * @generated from message google.fhir.stu3.proto.FamilyMemberHistory.Deceased
 */
export class FamilyMemberHistory_Deceased extends Message<FamilyMemberHistory_Deceased> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilyMemberHistory.Deceased.deceased
   */
  deceased: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 3;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilyMemberHistory_Deceased>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyMemberHistory.Deceased";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "deceased" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "deceased" },
    { no: 3, name: "range", kind: "message", T: Range, oneof: "deceased" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "deceased" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "deceased" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistory_Deceased {
    return new FamilyMemberHistory_Deceased().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Deceased {
    return new FamilyMemberHistory_Deceased().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Deceased {
    return new FamilyMemberHistory_Deceased().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistory_Deceased | PlainMessage<FamilyMemberHistory_Deceased> | undefined, b: FamilyMemberHistory_Deceased | PlainMessage<FamilyMemberHistory_Deceased> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistory_Deceased, a, b);
  }
}

/**
 * Condition that the related person had
 *
 * @generated from message google.fhir.stu3.proto.FamilyMemberHistory.Condition
 */
export class FamilyMemberHistory_Condition extends Message<FamilyMemberHistory_Condition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Condition suffered by relation
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * deceased | permanent disability | etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 5;
   */
  outcome?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilyMemberHistory.Condition.Onset onset = 6;
   */
  onset?: FamilyMemberHistory_Condition_Onset;

  /**
   * Extra information about condition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 7;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<FamilyMemberHistory_Condition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyMemberHistory.Condition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 6, name: "onset", kind: "message", T: FamilyMemberHistory_Condition_Onset },
    { no: 7, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistory_Condition {
    return new FamilyMemberHistory_Condition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Condition {
    return new FamilyMemberHistory_Condition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Condition {
    return new FamilyMemberHistory_Condition().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistory_Condition | PlainMessage<FamilyMemberHistory_Condition> | undefined, b: FamilyMemberHistory_Condition | PlainMessage<FamilyMemberHistory_Condition> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistory_Condition, a, b);
  }
}

/**
 * When condition first manifested
 *
 * @generated from message google.fhir.stu3.proto.FamilyMemberHistory.Condition.Onset
 */
export class FamilyMemberHistory_Condition_Onset extends Message<FamilyMemberHistory_Condition_Onset> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilyMemberHistory.Condition.Onset.onset
   */
  onset: {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 1;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 4 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilyMemberHistory_Condition_Onset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyMemberHistory.Condition.Onset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "age", kind: "message", T: Age, oneof: "onset" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "onset" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "onset" },
    { no: 4, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "onset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistory_Condition_Onset {
    return new FamilyMemberHistory_Condition_Onset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Condition_Onset {
    return new FamilyMemberHistory_Condition_Onset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistory_Condition_Onset {
    return new FamilyMemberHistory_Condition_Onset().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistory_Condition_Onset | PlainMessage<FamilyMemberHistory_Condition_Onset> | undefined, b: FamilyMemberHistory_Condition_Onset | PlainMessage<FamilyMemberHistory_Condition_Onset> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistory_Condition_Onset, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Flag, last updated
 * 2017-04-19T07:44:43.294+10:00. Key information to flag to healthcare
 * providers. See http://hl7.org/fhir/StructureDefinition/Flag
 *
 * @generated from message google.fhir.stu3.proto.Flag
 */
export class Flag extends Message<Flag> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FlagStatusCode status = 10;
   */
  status?: FlagStatusCode;

  /**
   * Clinical, administrative, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category?: CodeableConcept;

  /**
   * Coded or textual message to display to user
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 12;
   */
  code?: CodeableConcept;

  /**
   * Who/What is flag about?
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Time period when flag is active
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 14;
   */
  period?: Period;

  /**
   * Alert relevant during encounter
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * Flag creator
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 16;
   */
  author?: Reference;

  constructor(data?: PartialMessage<Flag>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Flag";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FlagStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept },
    { no: 12, name: "code", kind: "message", T: CodeableConcept },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "period", kind: "message", T: Period },
    { no: 15, name: "encounter", kind: "message", T: Reference },
    { no: 16, name: "author", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Flag {
    return new Flag().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Flag {
    return new Flag().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Flag {
    return new Flag().fromJsonString(jsonString, options);
  }

  static equals(a: Flag | PlainMessage<Flag> | undefined, b: Flag | PlainMessage<Flag> | undefined): boolean {
    return proto3.util.equals(Flag, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Goal, last updated
 * 2017-04-19T07:44:43.294+10:00. Describes the intended objective(s) for a
 * patient, group or organization. See
 * http://hl7.org/fhir/StructureDefinition/Goal
 *
 * @generated from message google.fhir.stu3.proto.Goal
 */
export class Goal extends Message<Goal> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * proposed | accepted | planned | in-progress | on-target | ahead-of-target |
   * behind-target | sustaining | achieved | on-hold | cancelled |
   * entered-in-error | rejected
   *
   * @generated from field: google.fhir.stu3.proto.GoalStatusCode status = 10;
   */
  status?: GoalStatusCode;

  /**
   * E.g. Treatment, dietary, behavioral, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category: CodeableConcept[] = [];

  /**
   * high-priority | medium-priority | low-priority
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 12;
   */
  priority?: CodeableConcept;

  /**
   * Code or text describing goal
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept description = 13;
   */
  description?: CodeableConcept;

  /**
   * Who this goal is intended for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Goal.Start start = 15;
   */
  start?: Goal_Start;

  /**
   * @generated from field: google.fhir.stu3.proto.Goal.Target target = 16;
   */
  target?: Goal_Target;

  /**
   * When goal status took effect
   *
   * @generated from field: google.fhir.stu3.proto.Date status_date = 17;
   */
  statusDate?: Date;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.stu3.proto.String status_reason = 18;
   */
  statusReason?: String;

  /**
   * Who's responsible for creating Goal?
   *
   * @generated from field: google.fhir.stu3.proto.Reference expressed_by = 19;
   */
  expressedBy?: Reference;

  /**
   * Issues addressed by this goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference addresses = 20;
   */
  addresses: Reference[] = [];

  /**
   * Comments about the goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 21;
   */
  note: Annotation[] = [];

  /**
   * What result was achieved regarding the goal?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
   */
  outcomeCode: CodeableConcept[] = [];

  /**
   * Observation that resulted from goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference outcome_reference = 23;
   */
  outcomeReference: Reference[] = [];

  constructor(data?: PartialMessage<Goal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Goal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: GoalStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "priority", kind: "message", T: CodeableConcept },
    { no: 13, name: "description", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "start", kind: "message", T: Goal_Start },
    { no: 16, name: "target", kind: "message", T: Goal_Target },
    { no: 17, name: "status_date", kind: "message", T: Date },
    { no: 18, name: "status_reason", kind: "message", T: String },
    { no: 19, name: "expressed_by", kind: "message", T: Reference },
    { no: 20, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 22, name: "outcome_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Goal {
    return new Goal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Goal {
    return new Goal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Goal {
    return new Goal().fromJsonString(jsonString, options);
  }

  static equals(a: Goal | PlainMessage<Goal> | undefined, b: Goal | PlainMessage<Goal> | undefined): boolean {
    return proto3.util.equals(Goal, a, b);
  }
}

/**
 * When goal pursuit begins
 *
 * @generated from message google.fhir.stu3.proto.Goal.Start
 */
export class Goal_Start extends Message<Goal_Start> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Goal.Start.start
   */
  start: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Goal_Start>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Goal.Start";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "start" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "start" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Goal_Start {
    return new Goal_Start().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Goal_Start {
    return new Goal_Start().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Goal_Start {
    return new Goal_Start().fromJsonString(jsonString, options);
  }

  static equals(a: Goal_Start | PlainMessage<Goal_Start> | undefined, b: Goal_Start | PlainMessage<Goal_Start> | undefined): boolean {
    return proto3.util.equals(Goal_Start, a, b);
  }
}

/**
 * Target outcome for the goal
 *
 * @generated from message google.fhir.stu3.proto.Goal.Target
 */
export class Goal_Target extends Message<Goal_Target> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The parameter whose value is being tracked
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept measure = 4;
   */
  measure?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Goal.Target.Detail detail = 5;
   */
  detail?: Goal_Target_Detail;

  /**
   * @generated from field: google.fhir.stu3.proto.Goal.Target.Due due = 6;
   */
  due?: Goal_Target_Due;

  constructor(data?: PartialMessage<Goal_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Goal.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "measure", kind: "message", T: CodeableConcept },
    { no: 5, name: "detail", kind: "message", T: Goal_Target_Detail },
    { no: 6, name: "due", kind: "message", T: Goal_Target_Due },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Goal_Target {
    return new Goal_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Goal_Target {
    return new Goal_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Goal_Target {
    return new Goal_Target().fromJsonString(jsonString, options);
  }

  static equals(a: Goal_Target | PlainMessage<Goal_Target> | undefined, b: Goal_Target | PlainMessage<Goal_Target> | undefined): boolean {
    return proto3.util.equals(Goal_Target, a, b);
  }
}

/**
 * The target value to be achieved
 *
 * @generated from message google.fhir.stu3.proto.Goal.Target.Detail
 */
export class Goal_Target_Detail extends Message<Goal_Target_Detail> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Goal.Target.Detail.detail
   */
  detail: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Goal_Target_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Goal.Target.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "detail" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "detail" },
    { no: 3, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "detail" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Goal_Target_Detail {
    return new Goal_Target_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Goal_Target_Detail {
    return new Goal_Target_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Goal_Target_Detail {
    return new Goal_Target_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: Goal_Target_Detail | PlainMessage<Goal_Target_Detail> | undefined, b: Goal_Target_Detail | PlainMessage<Goal_Target_Detail> | undefined): boolean {
    return proto3.util.equals(Goal_Target_Detail, a, b);
  }
}

/**
 * Reach goal on or before
 *
 * @generated from message google.fhir.stu3.proto.Goal.Target.Due
 */
export class Goal_Target_Due extends Message<Goal_Target_Due> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Goal.Target.Due.due
   */
  due: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 2;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Goal_Target_Due>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Goal.Target.Due";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "due" },
    { no: 2, name: "duration", kind: "message", T: Duration, oneof: "due" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Goal_Target_Due {
    return new Goal_Target_Due().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Goal_Target_Due {
    return new Goal_Target_Due().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Goal_Target_Due {
    return new Goal_Target_Due().fromJsonString(jsonString, options);
  }

  static equals(a: Goal_Target_Due | PlainMessage<Goal_Target_Due> | undefined, b: Goal_Target_Due | PlainMessage<Goal_Target_Due> | undefined): boolean {
    return proto3.util.equals(Goal_Target_Due, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for GraphDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. Definition of an graph of resources. See
 * http://hl7.org/fhir/StructureDefinition/GraphDefinition
 *
 * @generated from message google.fhir.stu3.proto.GraphDefinition
 */
export class GraphDefinition extends Message<GraphDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this graph definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Business version of the graph definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 10;
   */
  version?: String;

  /**
   * Name for this graph definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 11;
   */
  name?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 12;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 13;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 15;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 16;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the graph definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 17;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 18;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for graph definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 19;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this graph definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 20;
   */
  purpose?: Markdown;

  /**
   * Type of resource at which the graph starts
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode start = 21;
   */
  start?: ResourceTypeCode;

  /**
   * Profile on base resource
   *
   * @generated from field: google.fhir.stu3.proto.Uri profile = 22;
   */
  profile?: Uri;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.GraphDefinition.Link link = 23;
   */
  link: GraphDefinition_Link[] = [];

  constructor(data?: PartialMessage<GraphDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GraphDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "version", kind: "message", T: String },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 13, name: "experimental", kind: "message", T: Boolean },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "publisher", kind: "message", T: String },
    { no: 16, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 17, name: "description", kind: "message", T: Markdown },
    { no: 18, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 19, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "purpose", kind: "message", T: Markdown },
    { no: 21, name: "start", kind: "message", T: ResourceTypeCode },
    { no: 22, name: "profile", kind: "message", T: Uri },
    { no: 23, name: "link", kind: "message", T: GraphDefinition_Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphDefinition {
    return new GraphDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphDefinition {
    return new GraphDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphDefinition {
    return new GraphDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: GraphDefinition | PlainMessage<GraphDefinition> | undefined, b: GraphDefinition | PlainMessage<GraphDefinition> | undefined): boolean {
    return proto3.util.equals(GraphDefinition, a, b);
  }
}

/**
 * Links this graph makes rules about
 *
 * @generated from message google.fhir.stu3.proto.GraphDefinition.Link
 */
export class GraphDefinition_Link extends Message<GraphDefinition_Link> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Path in the resource that contains the link
   *
   * @generated from field: google.fhir.stu3.proto.String path = 4;
   */
  path?: String;

  /**
   * Which slice (if profiled)
   *
   * @generated from field: google.fhir.stu3.proto.String slice_name = 5;
   */
  sliceName?: String;

  /**
   * Minimum occurrences for this link
   *
   * @generated from field: google.fhir.stu3.proto.Integer min = 6;
   */
  min?: Integer;

  /**
   * Maximum occurrences for this link
   *
   * @generated from field: google.fhir.stu3.proto.String max = 7;
   */
  max?: String;

  /**
   * Why this link is specified
   *
   * @generated from field: google.fhir.stu3.proto.String description = 8;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.GraphDefinition.Link.Target target = 9;
   */
  target: GraphDefinition_Link_Target[] = [];

  constructor(data?: PartialMessage<GraphDefinition_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GraphDefinition.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "path", kind: "message", T: String },
    { no: 5, name: "slice_name", kind: "message", T: String },
    { no: 6, name: "min", kind: "message", T: Integer },
    { no: 7, name: "max", kind: "message", T: String },
    { no: 8, name: "description", kind: "message", T: String },
    { no: 9, name: "target", kind: "message", T: GraphDefinition_Link_Target, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphDefinition_Link {
    return new GraphDefinition_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphDefinition_Link {
    return new GraphDefinition_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphDefinition_Link {
    return new GraphDefinition_Link().fromJsonString(jsonString, options);
  }

  static equals(a: GraphDefinition_Link | PlainMessage<GraphDefinition_Link> | undefined, b: GraphDefinition_Link | PlainMessage<GraphDefinition_Link> | undefined): boolean {
    return proto3.util.equals(GraphDefinition_Link, a, b);
  }
}

/**
 * Potential target for the link
 *
 * @generated from message google.fhir.stu3.proto.GraphDefinition.Link.Target
 */
export class GraphDefinition_Link_Target extends Message<GraphDefinition_Link_Target> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of resource this link refers to
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode type = 4;
   */
  type?: ResourceTypeCode;

  /**
   * Profile for the target resource
   *
   * @generated from field: google.fhir.stu3.proto.Uri profile = 5;
   */
  profile?: Uri;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.GraphDefinition.Link.Target.Compartment compartment = 6;
   */
  compartment: GraphDefinition_Link_Target_Compartment[] = [];

  /**
   * Additional links from target resource
   *
   * @generated from field: repeated google.fhir.stu3.proto.GraphDefinition.Link link = 7;
   */
  link: GraphDefinition_Link[] = [];

  constructor(data?: PartialMessage<GraphDefinition_Link_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GraphDefinition.Link.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ResourceTypeCode },
    { no: 5, name: "profile", kind: "message", T: Uri },
    { no: 6, name: "compartment", kind: "message", T: GraphDefinition_Link_Target_Compartment, repeated: true },
    { no: 7, name: "link", kind: "message", T: GraphDefinition_Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphDefinition_Link_Target {
    return new GraphDefinition_Link_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphDefinition_Link_Target {
    return new GraphDefinition_Link_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphDefinition_Link_Target {
    return new GraphDefinition_Link_Target().fromJsonString(jsonString, options);
  }

  static equals(a: GraphDefinition_Link_Target | PlainMessage<GraphDefinition_Link_Target> | undefined, b: GraphDefinition_Link_Target | PlainMessage<GraphDefinition_Link_Target> | undefined): boolean {
    return proto3.util.equals(GraphDefinition_Link_Target, a, b);
  }
}

/**
 * Compartment Consistency Rules
 *
 * @generated from message google.fhir.stu3.proto.GraphDefinition.Link.Target.Compartment
 */
export class GraphDefinition_Link_Target_Compartment extends Message<GraphDefinition_Link_Target_Compartment> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies the compartment
   *
   * @generated from field: google.fhir.stu3.proto.CompartmentTypeCode code = 4;
   */
  code?: CompartmentTypeCode;

  /**
   * identical | matching | different | custom
   *
   * @generated from field: google.fhir.stu3.proto.GraphCompartmentRuleCode rule = 5;
   */
  rule?: GraphCompartmentRuleCode;

  /**
   * Custom rule, as a FHIRPath expression
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 6;
   */
  expression?: String;

  /**
   * Documentation for FHIRPath expression
   *
   * @generated from field: google.fhir.stu3.proto.String description = 7;
   */
  description?: String;

  constructor(data?: PartialMessage<GraphDefinition_Link_Target_Compartment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GraphDefinition.Link.Target.Compartment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CompartmentTypeCode },
    { no: 5, name: "rule", kind: "message", T: GraphCompartmentRuleCode },
    { no: 6, name: "expression", kind: "message", T: String },
    { no: 7, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphDefinition_Link_Target_Compartment {
    return new GraphDefinition_Link_Target_Compartment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphDefinition_Link_Target_Compartment {
    return new GraphDefinition_Link_Target_Compartment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphDefinition_Link_Target_Compartment {
    return new GraphDefinition_Link_Target_Compartment().fromJsonString(jsonString, options);
  }

  static equals(a: GraphDefinition_Link_Target_Compartment | PlainMessage<GraphDefinition_Link_Target_Compartment> | undefined, b: GraphDefinition_Link_Target_Compartment | PlainMessage<GraphDefinition_Link_Target_Compartment> | undefined): boolean {
    return proto3.util.equals(GraphDefinition_Link_Target_Compartment, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Group, last updated
 * 2017-04-19T07:44:43.294+10:00. Group of multiple entities. See
 * http://hl7.org/fhir/StructureDefinition/Group
 *
 * @generated from message google.fhir.stu3.proto.Group
 */
export class Group extends Message<Group> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this group's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * person | animal | practitioner | device | medication | substance
   *
   * @generated from field: google.fhir.stu3.proto.GroupTypeCode type = 11;
   */
  type?: GroupTypeCode;

  /**
   * Descriptive or actual
   *
   * @generated from field: google.fhir.stu3.proto.Boolean actual = 12;
   */
  actual?: Boolean;

  /**
   * Kind of Group members
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Label for Group
   *
   * @generated from field: google.fhir.stu3.proto.String name = 14;
   */
  name?: String;

  /**
   * Number of members
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt quantity = 15;
   */
  quantity?: UnsignedInt;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Group.Characteristic characteristic = 16;
   */
  characteristic: Group_Characteristic[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Group.Member member = 17;
   */
  member: Group_Member[] = [];

  constructor(data?: PartialMessage<Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "type", kind: "message", T: GroupTypeCode },
    { no: 12, name: "actual", kind: "message", T: Boolean },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "name", kind: "message", T: String },
    { no: 15, name: "quantity", kind: "message", T: UnsignedInt },
    { no: 16, name: "characteristic", kind: "message", T: Group_Characteristic, repeated: true },
    { no: 17, name: "member", kind: "message", T: Group_Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group {
    return new Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group {
    return new Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group {
    return new Group().fromJsonString(jsonString, options);
  }

  static equals(a: Group | PlainMessage<Group> | undefined, b: Group | PlainMessage<Group> | undefined): boolean {
    return proto3.util.equals(Group, a, b);
  }
}

/**
 * Trait of group members
 *
 * @generated from message google.fhir.stu3.proto.Group.Characteristic
 */
export class Group_Characteristic extends Message<Group_Characteristic> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Kind of characteristic
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Group.Characteristic.Value value = 5;
   */
  value?: Group_Characteristic_Value;

  /**
   * Group includes or excludes
   *
   * @generated from field: google.fhir.stu3.proto.Boolean exclude = 6;
   */
  exclude?: Boolean;

  /**
   * Period over which characteristic is tested
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<Group_Characteristic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Group.Characteristic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Group_Characteristic_Value },
    { no: 6, name: "exclude", kind: "message", T: Boolean },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_Characteristic {
    return new Group_Characteristic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_Characteristic {
    return new Group_Characteristic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_Characteristic {
    return new Group_Characteristic().fromJsonString(jsonString, options);
  }

  static equals(a: Group_Characteristic | PlainMessage<Group_Characteristic> | undefined, b: Group_Characteristic | PlainMessage<Group_Characteristic> | undefined): boolean {
    return proto3.util.equals(Group_Characteristic, a, b);
  }
}

/**
 * Value held by characteristic
 *
 * @generated from message google.fhir.stu3.proto.Group.Characteristic.Value
 */
export class Group_Characteristic_Value extends Message<Group_Characteristic_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Group.Characteristic.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 3;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Group_Characteristic_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Group.Characteristic.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_Characteristic_Value {
    return new Group_Characteristic_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_Characteristic_Value {
    return new Group_Characteristic_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_Characteristic_Value {
    return new Group_Characteristic_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Group_Characteristic_Value | PlainMessage<Group_Characteristic_Value> | undefined, b: Group_Characteristic_Value | PlainMessage<Group_Characteristic_Value> | undefined): boolean {
    return proto3.util.equals(Group_Characteristic_Value, a, b);
  }
}

/**
 * Who or what is in group
 *
 * @generated from message google.fhir.stu3.proto.Group.Member
 */
export class Group_Member extends Message<Group_Member> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the group member
   *
   * @generated from field: google.fhir.stu3.proto.Reference entity = 4;
   */
  entity?: Reference;

  /**
   * Period member belonged to the group
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * If member is no longer in group
   *
   * @generated from field: google.fhir.stu3.proto.Boolean inactive = 6;
   */
  inactive?: Boolean;

  constructor(data?: PartialMessage<Group_Member>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Group.Member";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "entity", kind: "message", T: Reference },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "inactive", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_Member {
    return new Group_Member().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_Member {
    return new Group_Member().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_Member {
    return new Group_Member().fromJsonString(jsonString, options);
  }

  static equals(a: Group_Member | PlainMessage<Group_Member> | undefined, b: Group_Member | PlainMessage<Group_Member> | undefined): boolean {
    return proto3.util.equals(Group_Member, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for GuidanceResponse, last updated
 * 2017-04-19T07:44:43.294+10:00. The formal response to a guidance request. See
 * http://hl7.org/fhir/StructureDefinition/GuidanceResponse
 *
 * @generated from message google.fhir.stu3.proto.GuidanceResponse
 */
export class GuidanceResponse extends Message<GuidanceResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * The id of the request associated with this response, if any
   *
   * @generated from field: google.fhir.stu3.proto.Id request_id = 9;
   */
  requestId?: Id;

  /**
   * Business identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * A reference to a knowledge module
   *
   * @generated from field: google.fhir.stu3.proto.Reference module = 11;
   */
  module?: Reference;

  /**
   * success | data-requested | data-required | in-progress | failure |
   * entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.GuidanceResponseStatusCode status = 12;
   */
  status?: GuidanceResponseStatusCode;

  /**
   * Patient the request was performed for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Encounter or Episode during which the response was returned
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 14;
   */
  context?: Reference;

  /**
   * When the guidance response was processed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime occurrence_date_time = 15;
   */
  occurrenceDateTime?: DateTime;

  /**
   * Device returning the guidance
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 16;
   */
  performer?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.GuidanceResponse.Reason reason = 17;
   */
  reason?: GuidanceResponse_Reason;

  /**
   * Additional notes about the response
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 18;
   */
  note: Annotation[] = [];

  /**
   * Messages resulting from the evaluation of the artifact or artifacts
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference evaluation_message = 19;
   */
  evaluationMessage: Reference[] = [];

  /**
   * The output parameters of the evaluation, if any
   *
   * @generated from field: google.fhir.stu3.proto.Reference output_parameters = 20;
   */
  outputParameters?: Reference;

  /**
   * Proposed actions, if any
   *
   * @generated from field: google.fhir.stu3.proto.Reference result = 21;
   */
  result?: Reference;

  /**
   * Additional required data
   *
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement data_requirement = 22;
   */
  dataRequirement: DataRequirement[] = [];

  constructor(data?: PartialMessage<GuidanceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GuidanceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "request_id", kind: "message", T: Id },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "module", kind: "message", T: Reference },
    { no: 12, name: "status", kind: "message", T: GuidanceResponseStatusCode },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "context", kind: "message", T: Reference },
    { no: 15, name: "occurrence_date_time", kind: "message", T: DateTime },
    { no: 16, name: "performer", kind: "message", T: Reference },
    { no: 17, name: "reason", kind: "message", T: GuidanceResponse_Reason },
    { no: 18, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 19, name: "evaluation_message", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "output_parameters", kind: "message", T: Reference },
    { no: 21, name: "result", kind: "message", T: Reference },
    { no: 22, name: "data_requirement", kind: "message", T: DataRequirement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceResponse {
    return new GuidanceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceResponse {
    return new GuidanceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceResponse {
    return new GuidanceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GuidanceResponse | PlainMessage<GuidanceResponse> | undefined, b: GuidanceResponse | PlainMessage<GuidanceResponse> | undefined): boolean {
    return proto3.util.equals(GuidanceResponse, a, b);
  }
}

/**
 * Reason for the response
 *
 * @generated from message google.fhir.stu3.proto.GuidanceResponse.Reason
 */
export class GuidanceResponse_Reason extends Message<GuidanceResponse_Reason> {
  /**
   * @generated from oneof google.fhir.stu3.proto.GuidanceResponse.Reason.reason
   */
  reason: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GuidanceResponse_Reason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GuidanceResponse.Reason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "reason" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "reason" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceResponse_Reason {
    return new GuidanceResponse_Reason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceResponse_Reason {
    return new GuidanceResponse_Reason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceResponse_Reason {
    return new GuidanceResponse_Reason().fromJsonString(jsonString, options);
  }

  static equals(a: GuidanceResponse_Reason | PlainMessage<GuidanceResponse_Reason> | undefined, b: GuidanceResponse_Reason | PlainMessage<GuidanceResponse_Reason> | undefined): boolean {
    return proto3.util.equals(GuidanceResponse_Reason, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for HealthcareService, last updated
 * 2017-04-19T07:44:43.294+10:00. The details of a healthcare service available
 * at a location. See http://hl7.org/fhir/StructureDefinition/HealthcareService
 *
 * @generated from message google.fhir.stu3.proto.HealthcareService
 */
export class HealthcareService extends Message<HealthcareService> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifiers for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this healthcareservice is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * Organization that provides this service
   *
   * @generated from field: google.fhir.stu3.proto.Reference provided_by = 11;
   */
  providedBy?: Reference;

  /**
   * Broad category of service being performed or delivered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * Type of service that may be delivered or performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 13;
   */
  type: CodeableConcept[] = [];

  /**
   * Specialties handled by the HealthcareService
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept specialty = 14;
   */
  specialty: CodeableConcept[] = [];

  /**
   * Location(s) where service may be provided
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference location = 15;
   */
  location: Reference[] = [];

  /**
   * Description of service as presented to a consumer while searching
   *
   * @generated from field: google.fhir.stu3.proto.String name = 16;
   */
  name?: String;

  /**
   * Additional description and/or any specific issues not covered elsewhere
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 17;
   */
  comment?: String;

  /**
   * Extra details about the service that can't be placed in the other fields
   *
   * @generated from field: google.fhir.stu3.proto.String extra_details = 18;
   */
  extraDetails?: String;

  /**
   * Facilitates quick identification of the service
   *
   * @generated from field: google.fhir.stu3.proto.Attachment photo = 19;
   */
  photo?: Attachment;

  /**
   * Contacts related to the healthcare service
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 20;
   */
  telecom: ContactPoint[] = [];

  /**
   * Location(s) service is inteded for/available to
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference coverage_area = 21;
   */
  coverageArea: Reference[] = [];

  /**
   * Conditions under which service is available/offered
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept service_provision_code = 22;
   */
  serviceProvisionCode: CodeableConcept[] = [];

  /**
   * Specific eligibility requirements required to use the service
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept eligibility = 23;
   */
  eligibility?: CodeableConcept;

  /**
   * Describes the eligibility conditions for the service
   *
   * @generated from field: google.fhir.stu3.proto.String eligibility_note = 24;
   */
  eligibilityNote?: String;

  /**
   * Program Names that categorize the service
   *
   * @generated from field: repeated google.fhir.stu3.proto.String program_name = 25;
   */
  programName: String[] = [];

  /**
   * Collection of characteristics (attributes)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept characteristic = 26;
   */
  characteristic: CodeableConcept[] = [];

  /**
   * Ways that the service accepts referrals
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept referral_method = 27;
   */
  referralMethod: CodeableConcept[] = [];

  /**
   * If an appointment is required for access to this service
   *
   * @generated from field: google.fhir.stu3.proto.Boolean appointment_required = 28;
   */
  appointmentRequired?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.HealthcareService.AvailableTime available_time = 29;
   */
  availableTime: HealthcareService_AvailableTime[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.HealthcareService.NotAvailable not_available = 30;
   */
  notAvailable: HealthcareService_NotAvailable[] = [];

  /**
   * Description of availability exceptions
   *
   * @generated from field: google.fhir.stu3.proto.String availability_exceptions = 31;
   */
  availabilityExceptions?: String;

  /**
   * Technical endpoints providing access to services operated for the location
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 32;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<HealthcareService>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HealthcareService";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "provided_by", kind: "message", T: Reference },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "specialty", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "location", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "name", kind: "message", T: String },
    { no: 17, name: "comment", kind: "message", T: String },
    { no: 18, name: "extra_details", kind: "message", T: String },
    { no: 19, name: "photo", kind: "message", T: Attachment },
    { no: 20, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 21, name: "coverage_area", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "service_provision_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "eligibility", kind: "message", T: CodeableConcept },
    { no: 24, name: "eligibility_note", kind: "message", T: String },
    { no: 25, name: "program_name", kind: "message", T: String, repeated: true },
    { no: 26, name: "characteristic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "referral_method", kind: "message", T: CodeableConcept, repeated: true },
    { no: 28, name: "appointment_required", kind: "message", T: Boolean },
    { no: 29, name: "available_time", kind: "message", T: HealthcareService_AvailableTime, repeated: true },
    { no: 30, name: "not_available", kind: "message", T: HealthcareService_NotAvailable, repeated: true },
    { no: 31, name: "availability_exceptions", kind: "message", T: String },
    { no: 32, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthcareService {
    return new HealthcareService().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthcareService {
    return new HealthcareService().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthcareService {
    return new HealthcareService().fromJsonString(jsonString, options);
  }

  static equals(a: HealthcareService | PlainMessage<HealthcareService> | undefined, b: HealthcareService | PlainMessage<HealthcareService> | undefined): boolean {
    return proto3.util.equals(HealthcareService, a, b);
  }
}

/**
 * Times the Service Site is available
 *
 * @generated from message google.fhir.stu3.proto.HealthcareService.AvailableTime
 */
export class HealthcareService_AvailableTime extends Message<HealthcareService_AvailableTime> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * mon | tue | wed | thu | fri | sat | sun
   *
   * @generated from field: repeated google.fhir.stu3.proto.DaysOfWeekCode days_of_week = 4;
   */
  daysOfWeek: DaysOfWeekCode[] = [];

  /**
   * Always available? e.g. 24 hour service
   *
   * @generated from field: google.fhir.stu3.proto.Boolean all_day = 5;
   */
  allDay?: Boolean;

  /**
   * Opening time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.stu3.proto.Time available_start_time = 6;
   */
  availableStartTime?: Time;

  /**
   * Closing time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.stu3.proto.Time available_end_time = 7;
   */
  availableEndTime?: Time;

  constructor(data?: PartialMessage<HealthcareService_AvailableTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HealthcareService.AvailableTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "days_of_week", kind: "message", T: DaysOfWeekCode, repeated: true },
    { no: 5, name: "all_day", kind: "message", T: Boolean },
    { no: 6, name: "available_start_time", kind: "message", T: Time },
    { no: 7, name: "available_end_time", kind: "message", T: Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthcareService_AvailableTime {
    return new HealthcareService_AvailableTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthcareService_AvailableTime {
    return new HealthcareService_AvailableTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthcareService_AvailableTime {
    return new HealthcareService_AvailableTime().fromJsonString(jsonString, options);
  }

  static equals(a: HealthcareService_AvailableTime | PlainMessage<HealthcareService_AvailableTime> | undefined, b: HealthcareService_AvailableTime | PlainMessage<HealthcareService_AvailableTime> | undefined): boolean {
    return proto3.util.equals(HealthcareService_AvailableTime, a, b);
  }
}

/**
 * Not available during this time due to provided reason
 *
 * @generated from message google.fhir.stu3.proto.HealthcareService.NotAvailable
 */
export class HealthcareService_NotAvailable extends Message<HealthcareService_NotAvailable> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reason presented to the user explaining why time not available
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * Service not availablefrom this date
   *
   * @generated from field: google.fhir.stu3.proto.Period during = 5;
   */
  during?: Period;

  constructor(data?: PartialMessage<HealthcareService_NotAvailable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HealthcareService.NotAvailable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "during", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthcareService_NotAvailable {
    return new HealthcareService_NotAvailable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthcareService_NotAvailable {
    return new HealthcareService_NotAvailable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthcareService_NotAvailable {
    return new HealthcareService_NotAvailable().fromJsonString(jsonString, options);
  }

  static equals(a: HealthcareService_NotAvailable | PlainMessage<HealthcareService_NotAvailable> | undefined, b: HealthcareService_NotAvailable | PlainMessage<HealthcareService_NotAvailable> | undefined): boolean {
    return proto3.util.equals(HealthcareService_NotAvailable, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ImagingManifest, last updated
 * 2017-04-19T07:44:43.294+10:00. Key Object Selection. See
 * http://hl7.org/fhir/StructureDefinition/ImagingManifest
 *
 * @generated from message google.fhir.stu3.proto.ImagingManifest
 */
export class ImagingManifest extends Message<ImagingManifest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * SOP Instance UID
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Patient of the selected objects
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 10;
   */
  patient?: Reference;

  /**
   * Time when the selection of instances was made
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authoring_time = 11;
   */
  authoringTime?: DateTime;

  /**
   * Author (human or machine)
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 12;
   */
  author?: Reference;

  /**
   * Description text
   *
   * @generated from field: google.fhir.stu3.proto.String description = 13;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImagingManifest.Study study = 14;
   */
  study: ImagingManifest_Study[] = [];

  constructor(data?: PartialMessage<ImagingManifest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingManifest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "patient", kind: "message", T: Reference },
    { no: 11, name: "authoring_time", kind: "message", T: DateTime },
    { no: 12, name: "author", kind: "message", T: Reference },
    { no: 13, name: "description", kind: "message", T: String },
    { no: 14, name: "study", kind: "message", T: ImagingManifest_Study, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingManifest {
    return new ImagingManifest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingManifest {
    return new ImagingManifest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingManifest {
    return new ImagingManifest().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingManifest | PlainMessage<ImagingManifest> | undefined, b: ImagingManifest | PlainMessage<ImagingManifest> | undefined): boolean {
    return proto3.util.equals(ImagingManifest, a, b);
  }
}

/**
 * Study identity of the selected instances
 *
 * @generated from message google.fhir.stu3.proto.ImagingManifest.Study
 */
export class ImagingManifest_Study extends Message<ImagingManifest_Study> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Study instance UID
   *
   * @generated from field: google.fhir.stu3.proto.Oid uid = 4;
   */
  uid?: Oid;

  /**
   * Reference to ImagingStudy
   *
   * @generated from field: google.fhir.stu3.proto.Reference imaging_study = 5;
   */
  imagingStudy?: Reference;

  /**
   * Study access service endpoint
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 6;
   */
  endpoint: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImagingManifest.Study.Series series = 7;
   */
  series: ImagingManifest_Study_Series[] = [];

  constructor(data?: PartialMessage<ImagingManifest_Study>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingManifest.Study";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "uid", kind: "message", T: Oid },
    { no: 5, name: "imaging_study", kind: "message", T: Reference },
    { no: 6, name: "endpoint", kind: "message", T: Reference, repeated: true },
    { no: 7, name: "series", kind: "message", T: ImagingManifest_Study_Series, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingManifest_Study {
    return new ImagingManifest_Study().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingManifest_Study {
    return new ImagingManifest_Study().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingManifest_Study {
    return new ImagingManifest_Study().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingManifest_Study | PlainMessage<ImagingManifest_Study> | undefined, b: ImagingManifest_Study | PlainMessage<ImagingManifest_Study> | undefined): boolean {
    return proto3.util.equals(ImagingManifest_Study, a, b);
  }
}

/**
 * Series identity of the selected instances
 *
 * @generated from message google.fhir.stu3.proto.ImagingManifest.Study.Series
 */
export class ImagingManifest_Study_Series extends Message<ImagingManifest_Study_Series> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Series instance UID
   *
   * @generated from field: google.fhir.stu3.proto.Oid uid = 4;
   */
  uid?: Oid;

  /**
   * Series access endpoint
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 5;
   */
  endpoint: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImagingManifest.Study.Series.Instance instance = 6;
   */
  instance: ImagingManifest_Study_Series_Instance[] = [];

  constructor(data?: PartialMessage<ImagingManifest_Study_Series>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingManifest.Study.Series";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "uid", kind: "message", T: Oid },
    { no: 5, name: "endpoint", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "instance", kind: "message", T: ImagingManifest_Study_Series_Instance, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingManifest_Study_Series {
    return new ImagingManifest_Study_Series().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingManifest_Study_Series {
    return new ImagingManifest_Study_Series().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingManifest_Study_Series {
    return new ImagingManifest_Study_Series().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingManifest_Study_Series | PlainMessage<ImagingManifest_Study_Series> | undefined, b: ImagingManifest_Study_Series | PlainMessage<ImagingManifest_Study_Series> | undefined): boolean {
    return proto3.util.equals(ImagingManifest_Study_Series, a, b);
  }
}

/**
 * The selected instance
 *
 * @generated from message google.fhir.stu3.proto.ImagingManifest.Study.Series.Instance
 */
export class ImagingManifest_Study_Series_Instance extends Message<ImagingManifest_Study_Series_Instance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * SOP class UID of instance
   *
   * @generated from field: google.fhir.stu3.proto.Oid sop_class = 4;
   */
  sopClass?: Oid;

  /**
   * Selected instance UID
   *
   * @generated from field: google.fhir.stu3.proto.Oid uid = 5;
   */
  uid?: Oid;

  constructor(data?: PartialMessage<ImagingManifest_Study_Series_Instance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingManifest.Study.Series.Instance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sop_class", kind: "message", T: Oid },
    { no: 5, name: "uid", kind: "message", T: Oid },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingManifest_Study_Series_Instance {
    return new ImagingManifest_Study_Series_Instance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingManifest_Study_Series_Instance {
    return new ImagingManifest_Study_Series_Instance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingManifest_Study_Series_Instance {
    return new ImagingManifest_Study_Series_Instance().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingManifest_Study_Series_Instance | PlainMessage<ImagingManifest_Study_Series_Instance> | undefined, b: ImagingManifest_Study_Series_Instance | PlainMessage<ImagingManifest_Study_Series_Instance> | undefined): boolean {
    return proto3.util.equals(ImagingManifest_Study_Series_Instance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ImagingStudy, last updated
 * 2017-04-19T07:44:43.294+10:00. A set of images produced in single study (one
 * or more series of references images). See
 * http://hl7.org/fhir/StructureDefinition/ImagingStudy
 *
 * @generated from message google.fhir.stu3.proto.ImagingStudy
 */
export class ImagingStudy extends Message<ImagingStudy> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Formal DICOM identifier for the study
   *
   * @generated from field: google.fhir.stu3.proto.Oid uid = 9;
   */
  uid?: Oid;

  /**
   * Related workflow identifier ("Accession Number")
   *
   * @generated from field: google.fhir.stu3.proto.Identifier accession = 10;
   */
  accession?: Identifier;

  /**
   * Other identifiers for the study
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * ONLINE | OFFLINE | NEARLINE | UNAVAILABLE
   *
   * @generated from field: google.fhir.stu3.proto.InstanceAvailabilityCode availability = 12;
   */
  availability?: InstanceAvailabilityCode;

  /**
   * All series modality if actual acquisition modalities
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding modality_list = 13;
   */
  modalityList: Coding[] = [];

  /**
   * Who the images are of
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * Originating context
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * When the study was started
   *
   * @generated from field: google.fhir.stu3.proto.DateTime started = 16;
   */
  started?: DateTime;

  /**
   * Request fulfilled
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 17;
   */
  basedOn: Reference[] = [];

  /**
   * Referring physician
   *
   * @generated from field: google.fhir.stu3.proto.Reference referrer = 18;
   */
  referrer?: Reference;

  /**
   * Who interpreted images
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference interpreter = 19;
   */
  interpreter: Reference[] = [];

  /**
   * Study access endpoint
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 20;
   */
  endpoint: Reference[] = [];

  /**
   * Number of Study Related Series
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt number_of_series = 21;
   */
  numberOfSeries?: UnsignedInt;

  /**
   * Number of Study Related Instances
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt number_of_instances = 22;
   */
  numberOfInstances?: UnsignedInt;

  /**
   * The performed Procedure reference
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference procedure_reference = 23;
   */
  procedureReference: Reference[] = [];

  /**
   * The performed procedure code
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept procedure_code = 24;
   */
  procedureCode: CodeableConcept[] = [];

  /**
   * Why the study was requested
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 25;
   */
  reason?: CodeableConcept;

  /**
   * Institution-generated description
   *
   * @generated from field: google.fhir.stu3.proto.String description = 26;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImagingStudy.Series series = 27;
   */
  series: ImagingStudy_Series[] = [];

  constructor(data?: PartialMessage<ImagingStudy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingStudy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "uid", kind: "message", T: Oid },
    { no: 10, name: "accession", kind: "message", T: Identifier },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "availability", kind: "message", T: InstanceAvailabilityCode },
    { no: 13, name: "modality_list", kind: "message", T: Coding, repeated: true },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "started", kind: "message", T: DateTime },
    { no: 17, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "referrer", kind: "message", T: Reference },
    { no: 19, name: "interpreter", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "endpoint", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "number_of_series", kind: "message", T: UnsignedInt },
    { no: 22, name: "number_of_instances", kind: "message", T: UnsignedInt },
    { no: 23, name: "procedure_reference", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "procedure_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "reason", kind: "message", T: CodeableConcept },
    { no: 26, name: "description", kind: "message", T: String },
    { no: 27, name: "series", kind: "message", T: ImagingStudy_Series, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingStudy {
    return new ImagingStudy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingStudy {
    return new ImagingStudy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingStudy {
    return new ImagingStudy().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingStudy | PlainMessage<ImagingStudy> | undefined, b: ImagingStudy | PlainMessage<ImagingStudy> | undefined): boolean {
    return proto3.util.equals(ImagingStudy, a, b);
  }
}

/**
 * Each study has one or more series of instances
 *
 * @generated from message google.fhir.stu3.proto.ImagingStudy.Series
 */
export class ImagingStudy_Series extends Message<ImagingStudy_Series> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Formal DICOM identifier for this series
   *
   * @generated from field: google.fhir.stu3.proto.Oid uid = 4;
   */
  uid?: Oid;

  /**
   * Numeric identifier of this series
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt number = 5;
   */
  number?: UnsignedInt;

  /**
   * The modality of the instances in the series
   *
   * @generated from field: google.fhir.stu3.proto.Coding modality = 6;
   */
  modality?: Coding;

  /**
   * A short human readable summary of the series
   *
   * @generated from field: google.fhir.stu3.proto.String description = 7;
   */
  description?: String;

  /**
   * Number of Series Related Instances
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt number_of_instances = 8;
   */
  numberOfInstances?: UnsignedInt;

  /**
   * ONLINE | OFFLINE | NEARLINE | UNAVAILABLE
   *
   * @generated from field: google.fhir.stu3.proto.InstanceAvailabilityCode availability = 9;
   */
  availability?: InstanceAvailabilityCode;

  /**
   * Series access endpoint
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 10;
   */
  endpoint: Reference[] = [];

  /**
   * Body part examined
   *
   * @generated from field: google.fhir.stu3.proto.Coding body_site = 11;
   */
  bodySite?: Coding;

  /**
   * Body part laterality
   *
   * @generated from field: google.fhir.stu3.proto.Coding laterality = 12;
   */
  laterality?: Coding;

  /**
   * When the series started
   *
   * @generated from field: google.fhir.stu3.proto.DateTime started = 13;
   */
  started?: DateTime;

  /**
   * Who performed the series
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 14;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImagingStudy.Series.Instance instance = 15;
   */
  instance: ImagingStudy_Series_Instance[] = [];

  constructor(data?: PartialMessage<ImagingStudy_Series>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingStudy.Series";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "uid", kind: "message", T: Oid },
    { no: 5, name: "number", kind: "message", T: UnsignedInt },
    { no: 6, name: "modality", kind: "message", T: Coding },
    { no: 7, name: "description", kind: "message", T: String },
    { no: 8, name: "number_of_instances", kind: "message", T: UnsignedInt },
    { no: 9, name: "availability", kind: "message", T: InstanceAvailabilityCode },
    { no: 10, name: "endpoint", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "body_site", kind: "message", T: Coding },
    { no: 12, name: "laterality", kind: "message", T: Coding },
    { no: 13, name: "started", kind: "message", T: DateTime },
    { no: 14, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "instance", kind: "message", T: ImagingStudy_Series_Instance, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingStudy_Series {
    return new ImagingStudy_Series().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingStudy_Series {
    return new ImagingStudy_Series().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingStudy_Series {
    return new ImagingStudy_Series().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingStudy_Series | PlainMessage<ImagingStudy_Series> | undefined, b: ImagingStudy_Series | PlainMessage<ImagingStudy_Series> | undefined): boolean {
    return proto3.util.equals(ImagingStudy_Series, a, b);
  }
}

/**
 * A single SOP instance from the series
 *
 * @generated from message google.fhir.stu3.proto.ImagingStudy.Series.Instance
 */
export class ImagingStudy_Series_Instance extends Message<ImagingStudy_Series_Instance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Formal DICOM identifier for this instance
   *
   * @generated from field: google.fhir.stu3.proto.Oid uid = 4;
   */
  uid?: Oid;

  /**
   * The number of this instance in the series
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt number = 5;
   */
  number?: UnsignedInt;

  /**
   * DICOM class type
   *
   * @generated from field: google.fhir.stu3.proto.Oid sop_class = 6;
   */
  sopClass?: Oid;

  /**
   * Description of instance
   *
   * @generated from field: google.fhir.stu3.proto.String title = 7;
   */
  title?: String;

  constructor(data?: PartialMessage<ImagingStudy_Series_Instance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImagingStudy.Series.Instance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "uid", kind: "message", T: Oid },
    { no: 5, name: "number", kind: "message", T: UnsignedInt },
    { no: 6, name: "sop_class", kind: "message", T: Oid },
    { no: 7, name: "title", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingStudy_Series_Instance {
    return new ImagingStudy_Series_Instance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingStudy_Series_Instance {
    return new ImagingStudy_Series_Instance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingStudy_Series_Instance {
    return new ImagingStudy_Series_Instance().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingStudy_Series_Instance | PlainMessage<ImagingStudy_Series_Instance> | undefined, b: ImagingStudy_Series_Instance | PlainMessage<ImagingStudy_Series_Instance> | undefined): boolean {
    return proto3.util.equals(ImagingStudy_Series_Instance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Immunization, last updated
 * 2017-04-19T07:44:43.294+10:00. Immunization event information. See
 * http://hl7.org/fhir/StructureDefinition/Immunization
 *
 * @generated from message google.fhir.stu3.proto.Immunization
 */
export class Immunization extends Message<Immunization> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * completed | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10;
   */
  status?: ImmunizationStatusCodesCode;

  /**
   * Flag for whether immunization was given
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_given = 11;
   */
  notGiven?: Boolean;

  /**
   * Vaccine product administered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept vaccine_code = 12;
   */
  vaccineCode?: CodeableConcept;

  /**
   * Who was immunized
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * Encounter administered as part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 14;
   */
  encounter?: Reference;

  /**
   * Vaccination administration date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Indicates context the data was recorded in
   *
   * @generated from field: google.fhir.stu3.proto.Boolean primary_source = 16;
   */
  primarySource?: Boolean;

  /**
   * Indicates the source of a secondarily reported record
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept report_origin = 17;
   */
  reportOrigin?: CodeableConcept;

  /**
   * Where vaccination occurred
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 18;
   */
  location?: Reference;

  /**
   * Vaccine manufacturer
   *
   * @generated from field: google.fhir.stu3.proto.Reference manufacturer = 19;
   */
  manufacturer?: Reference;

  /**
   * Vaccine lot number
   *
   * @generated from field: google.fhir.stu3.proto.String lot_number = 20;
   */
  lotNumber?: String;

  /**
   * Vaccine expiration date
   *
   * @generated from field: google.fhir.stu3.proto.Date expiration_date = 21;
   */
  expirationDate?: Date;

  /**
   * Body site vaccine  was administered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept site = 22;
   */
  site?: CodeableConcept;

  /**
   * How vaccine entered body
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept route = 23;
   */
  route?: CodeableConcept;

  /**
   * Amount of vaccine administered
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
   */
  doseQuantity?: SimpleQuantity;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Immunization.Practitioner practitioner = 25;
   */
  practitioner: Immunization_Practitioner[] = [];

  /**
   * Vaccination notes
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Immunization.Explanation explanation = 27;
   */
  explanation?: Immunization_Explanation;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Immunization.Reaction reaction = 28;
   */
  reaction: Immunization_Reaction[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Immunization.VaccinationProtocol vaccination_protocol = 29;
   */
  vaccinationProtocol: Immunization_VaccinationProtocol[] = [];

  constructor(data?: PartialMessage<Immunization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Immunization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: ImmunizationStatusCodesCode },
    { no: 11, name: "not_given", kind: "message", T: Boolean },
    { no: 12, name: "vaccine_code", kind: "message", T: CodeableConcept },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "encounter", kind: "message", T: Reference },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "primary_source", kind: "message", T: Boolean },
    { no: 17, name: "report_origin", kind: "message", T: CodeableConcept },
    { no: 18, name: "location", kind: "message", T: Reference },
    { no: 19, name: "manufacturer", kind: "message", T: Reference },
    { no: 20, name: "lot_number", kind: "message", T: String },
    { no: 21, name: "expiration_date", kind: "message", T: Date },
    { no: 22, name: "site", kind: "message", T: CodeableConcept },
    { no: 23, name: "route", kind: "message", T: CodeableConcept },
    { no: 24, name: "dose_quantity", kind: "message", T: SimpleQuantity },
    { no: 25, name: "practitioner", kind: "message", T: Immunization_Practitioner, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "explanation", kind: "message", T: Immunization_Explanation },
    { no: 28, name: "reaction", kind: "message", T: Immunization_Reaction, repeated: true },
    { no: 29, name: "vaccination_protocol", kind: "message", T: Immunization_VaccinationProtocol, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization {
    return new Immunization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization {
    return new Immunization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization {
    return new Immunization().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization | PlainMessage<Immunization> | undefined, b: Immunization | PlainMessage<Immunization> | undefined): boolean {
    return proto3.util.equals(Immunization, a, b);
  }
}

/**
 * Who performed event
 *
 * @generated from message google.fhir.stu3.proto.Immunization.Practitioner
 */
export class Immunization_Practitioner extends Message<Immunization_Practitioner> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What type of performance was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<Immunization_Practitioner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Immunization.Practitioner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_Practitioner {
    return new Immunization_Practitioner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_Practitioner {
    return new Immunization_Practitioner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_Practitioner {
    return new Immunization_Practitioner().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_Practitioner | PlainMessage<Immunization_Practitioner> | undefined, b: Immunization_Practitioner | PlainMessage<Immunization_Practitioner> | undefined): boolean {
    return proto3.util.equals(Immunization_Practitioner, a, b);
  }
}

/**
 * Administration/non-administration reasons
 *
 * @generated from message google.fhir.stu3.proto.Immunization.Explanation
 */
export class Immunization_Explanation extends Message<Immunization_Explanation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Why immunization occurred
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 4;
   */
  reason: CodeableConcept[] = [];

  /**
   * Why immunization did not occur
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
   */
  reasonNotGiven: CodeableConcept[] = [];

  constructor(data?: PartialMessage<Immunization_Explanation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Immunization.Explanation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "reason_not_given", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_Explanation {
    return new Immunization_Explanation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_Explanation {
    return new Immunization_Explanation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_Explanation {
    return new Immunization_Explanation().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_Explanation | PlainMessage<Immunization_Explanation> | undefined, b: Immunization_Explanation | PlainMessage<Immunization_Explanation> | undefined): boolean {
    return proto3.util.equals(Immunization_Explanation, a, b);
  }
}

/**
 * Details of a reaction that follows immunization
 *
 * @generated from message google.fhir.stu3.proto.Immunization.Reaction
 */
export class Immunization_Reaction extends Message<Immunization_Reaction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When reaction started
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 4;
   */
  date?: DateTime;

  /**
   * Additional information on reaction
   *
   * @generated from field: google.fhir.stu3.proto.Reference detail = 5;
   */
  detail?: Reference;

  /**
   * Indicates self-reported reaction
   *
   * @generated from field: google.fhir.stu3.proto.Boolean reported = 6;
   */
  reported?: Boolean;

  constructor(data?: PartialMessage<Immunization_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Immunization.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: DateTime },
    { no: 5, name: "detail", kind: "message", T: Reference },
    { no: 6, name: "reported", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_Reaction {
    return new Immunization_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_Reaction {
    return new Immunization_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_Reaction {
    return new Immunization_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_Reaction | PlainMessage<Immunization_Reaction> | undefined, b: Immunization_Reaction | PlainMessage<Immunization_Reaction> | undefined): boolean {
    return proto3.util.equals(Immunization_Reaction, a, b);
  }
}

/**
 * What protocol was followed
 *
 * @generated from message google.fhir.stu3.proto.Immunization.VaccinationProtocol
 */
export class Immunization_VaccinationProtocol extends Message<Immunization_VaccinationProtocol> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Dose number within series
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
   */
  doseSequence?: PositiveInt;

  /**
   * Details of vaccine protocol
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Who is responsible for protocol
   *
   * @generated from field: google.fhir.stu3.proto.Reference authority = 6;
   */
  authority?: Reference;

  /**
   * Name of vaccine series
   *
   * @generated from field: google.fhir.stu3.proto.String series = 7;
   */
  series?: String;

  /**
   * Recommended number of doses for immunity
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt series_doses = 8;
   */
  seriesDoses?: PositiveInt;

  /**
   * Disease immunized against
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept target_disease = 9;
   */
  targetDisease: CodeableConcept[] = [];

  /**
   * Indicates if dose counts towards immunity
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dose_status = 10;
   */
  doseStatus?: CodeableConcept;

  /**
   * Why dose does (not) count
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
   */
  doseStatusReason?: CodeableConcept;

  constructor(data?: PartialMessage<Immunization_VaccinationProtocol>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Immunization.VaccinationProtocol";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "dose_sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "authority", kind: "message", T: Reference },
    { no: 7, name: "series", kind: "message", T: String },
    { no: 8, name: "series_doses", kind: "message", T: PositiveInt },
    { no: 9, name: "target_disease", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "dose_status", kind: "message", T: CodeableConcept },
    { no: 11, name: "dose_status_reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_VaccinationProtocol {
    return new Immunization_VaccinationProtocol().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_VaccinationProtocol {
    return new Immunization_VaccinationProtocol().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_VaccinationProtocol {
    return new Immunization_VaccinationProtocol().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_VaccinationProtocol | PlainMessage<Immunization_VaccinationProtocol> | undefined, b: Immunization_VaccinationProtocol | PlainMessage<Immunization_VaccinationProtocol> | undefined): boolean {
    return proto3.util.equals(Immunization_VaccinationProtocol, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ImmunizationRecommendation, last
 * updated 2017-04-19T07:44:43.294+10:00. Guidance or advice relating to an
 * immunization. See
 * http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationRecommendation
 */
export class ImmunizationRecommendation extends Message<ImmunizationRecommendation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Who this profile is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 10;
   */
  patient?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation recommendation = 11;
   */
  recommendation: ImmunizationRecommendation_Recommendation[] = [];

  constructor(data?: PartialMessage<ImmunizationRecommendation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationRecommendation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "patient", kind: "message", T: Reference },
    { no: 11, name: "recommendation", kind: "message", T: ImmunizationRecommendation_Recommendation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation {
    return new ImmunizationRecommendation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation {
    return new ImmunizationRecommendation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation {
    return new ImmunizationRecommendation().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation | PlainMessage<ImmunizationRecommendation> | undefined, b: ImmunizationRecommendation | PlainMessage<ImmunizationRecommendation> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation, a, b);
  }
}

/**
 * Vaccine administration recommendations
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation
 */
export class ImmunizationRecommendation_Recommendation extends Message<ImmunizationRecommendation_Recommendation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Date recommendation created
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 4;
   */
  date?: DateTime;

  /**
   * Vaccine recommendation applies to
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept vaccine_code = 5;
   */
  vaccineCode?: CodeableConcept;

  /**
   * Disease to be immunized against
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept target_disease = 6;
   */
  targetDisease?: CodeableConcept;

  /**
   * Recommended dose number
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt dose_number = 7;
   */
  doseNumber?: PositiveInt;

  /**
   * Vaccine administration status
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept forecast_status = 8;
   */
  forecastStatus?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.DateCriterion date_criterion = 9;
   */
  dateCriterion: ImmunizationRecommendation_Recommendation_DateCriterion[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.Protocol protocol = 10;
   */
  protocol?: ImmunizationRecommendation_Recommendation_Protocol;

  /**
   * Past immunizations supporting recommendation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_immunization = 11;
   */
  supportingImmunization: Reference[] = [];

  /**
   * Patient observations supporting recommendation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_patient_information = 12;
   */
  supportingPatientInformation: Reference[] = [];

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: DateTime },
    { no: 5, name: "vaccine_code", kind: "message", T: CodeableConcept },
    { no: 6, name: "target_disease", kind: "message", T: CodeableConcept },
    { no: 7, name: "dose_number", kind: "message", T: PositiveInt },
    { no: 8, name: "forecast_status", kind: "message", T: CodeableConcept },
    { no: 9, name: "date_criterion", kind: "message", T: ImmunizationRecommendation_Recommendation_DateCriterion, repeated: true },
    { no: 10, name: "protocol", kind: "message", T: ImmunizationRecommendation_Recommendation_Protocol },
    { no: 11, name: "supporting_immunization", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "supporting_patient_information", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation {
    return new ImmunizationRecommendation_Recommendation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation {
    return new ImmunizationRecommendation_Recommendation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation {
    return new ImmunizationRecommendation_Recommendation().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation | PlainMessage<ImmunizationRecommendation_Recommendation> | undefined, b: ImmunizationRecommendation_Recommendation | PlainMessage<ImmunizationRecommendation_Recommendation> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation, a, b);
  }
}

/**
 * Dates governing proposed immunization
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.DateCriterion
 */
export class ImmunizationRecommendation_Recommendation_DateCriterion extends Message<ImmunizationRecommendation_Recommendation_DateCriterion> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of date
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Recommended date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime value = 5;
   */
  value?: DateTime;

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation_DateCriterion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.DateCriterion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation_DateCriterion {
    return new ImmunizationRecommendation_Recommendation_DateCriterion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_DateCriterion {
    return new ImmunizationRecommendation_Recommendation_DateCriterion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_DateCriterion {
    return new ImmunizationRecommendation_Recommendation_DateCriterion().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation_DateCriterion | PlainMessage<ImmunizationRecommendation_Recommendation_DateCriterion> | undefined, b: ImmunizationRecommendation_Recommendation_DateCriterion | PlainMessage<ImmunizationRecommendation_Recommendation_DateCriterion> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation_DateCriterion, a, b);
  }
}

/**
 * Protocol used by recommendation
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.Protocol
 */
export class ImmunizationRecommendation_Recommendation_Protocol extends Message<ImmunizationRecommendation_Recommendation_Protocol> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Dose number within sequence
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
   */
  doseSequence?: PositiveInt;

  /**
   * Protocol details
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Who is responsible for protocol
   *
   * @generated from field: google.fhir.stu3.proto.Reference authority = 6;
   */
  authority?: Reference;

  /**
   * Name of vaccination series
   *
   * @generated from field: google.fhir.stu3.proto.String series = 7;
   */
  series?: String;

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation_Protocol>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationRecommendation.Recommendation.Protocol";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "dose_sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "authority", kind: "message", T: Reference },
    { no: 7, name: "series", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation_Protocol {
    return new ImmunizationRecommendation_Recommendation_Protocol().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_Protocol {
    return new ImmunizationRecommendation_Recommendation_Protocol().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_Protocol {
    return new ImmunizationRecommendation_Recommendation_Protocol().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation_Protocol | PlainMessage<ImmunizationRecommendation_Recommendation_Protocol> | undefined, b: ImmunizationRecommendation_Recommendation_Protocol | PlainMessage<ImmunizationRecommendation_Recommendation_Protocol> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation_Protocol, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ImplementationGuide, last updated
 * 2017-04-19T07:44:43.294+10:00. A set of rules about how FHIR is used. See
 * http://hl7.org/fhir/StructureDefinition/ImplementationGuide
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide
 */
export class ImplementationGuide extends Message<ImplementationGuide> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this implementation guide (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Business version of the implementation guide
   *
   * @generated from field: google.fhir.stu3.proto.String version = 10;
   */
  version?: String;

  /**
   * Name for this implementation guide (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 11;
   */
  name?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 12;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 13;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 15;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 16;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the implementation guide
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 17;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 18;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for implementation guide (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 19;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 20;
   */
  copyright?: Markdown;

  /**
   * FHIR Version this Implementation Guide targets
   *
   * @generated from field: google.fhir.stu3.proto.Id fhir_version = 21;
   */
  fhirVersion?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImplementationGuide.Dependency dependency = 22;
   */
  dependency: ImplementationGuide_Dependency[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImplementationGuide.Package package_value = 23 [json_name = "package"];
   */
  packageValue: ImplementationGuide_Package[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImplementationGuide.Global global = 24;
   */
  global: ImplementationGuide_Global[] = [];

  /**
   * Image, css, script, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri binary = 25;
   */
  binary: Uri[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ImplementationGuide.Page page = 26;
   */
  page?: ImplementationGuide_Page;

  constructor(data?: PartialMessage<ImplementationGuide>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "version", kind: "message", T: String },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 13, name: "experimental", kind: "message", T: Boolean },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "publisher", kind: "message", T: String },
    { no: 16, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 17, name: "description", kind: "message", T: Markdown },
    { no: 18, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 19, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "copyright", kind: "message", T: Markdown },
    { no: 21, name: "fhir_version", kind: "message", T: Id },
    { no: 22, name: "dependency", kind: "message", T: ImplementationGuide_Dependency, repeated: true },
    { no: 23, name: "package_value", jsonName: "package", kind: "message", T: ImplementationGuide_Package, repeated: true },
    { no: 24, name: "global", kind: "message", T: ImplementationGuide_Global, repeated: true },
    { no: 25, name: "binary", kind: "message", T: Uri, repeated: true },
    { no: 26, name: "page", kind: "message", T: ImplementationGuide_Page },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide {
    return new ImplementationGuide().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide {
    return new ImplementationGuide().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide {
    return new ImplementationGuide().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide | PlainMessage<ImplementationGuide> | undefined, b: ImplementationGuide | PlainMessage<ImplementationGuide> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide, a, b);
  }
}

/**
 * Another Implementation guide this depends on
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide.Dependency
 */
export class ImplementationGuide_Dependency extends Message<ImplementationGuide_Dependency> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * reference | inclusion
   *
   * @generated from field: google.fhir.stu3.proto.GuideDependencyTypeCode type = 4;
   */
  type?: GuideDependencyTypeCode;

  /**
   * Where to find dependency
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  constructor(data?: PartialMessage<ImplementationGuide_Dependency>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide.Dependency";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: GuideDependencyTypeCode },
    { no: 5, name: "uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide_Dependency {
    return new ImplementationGuide_Dependency().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide_Dependency {
    return new ImplementationGuide_Dependency().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide_Dependency {
    return new ImplementationGuide_Dependency().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide_Dependency | PlainMessage<ImplementationGuide_Dependency> | undefined, b: ImplementationGuide_Dependency | PlainMessage<ImplementationGuide_Dependency> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide_Dependency, a, b);
  }
}

/**
 * Group of resources as used in .page.package
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide.Package
 */
export class ImplementationGuide_Package extends Message<ImplementationGuide_Package> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name used .page.package
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Human readable text describing the package
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ImplementationGuide.Package.Resource resource = 6;
   */
  resource: ImplementationGuide_Package_Resource[] = [];

  constructor(data?: PartialMessage<ImplementationGuide_Package>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide.Package";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "resource", kind: "message", T: ImplementationGuide_Package_Resource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide_Package {
    return new ImplementationGuide_Package().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide_Package {
    return new ImplementationGuide_Package().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide_Package {
    return new ImplementationGuide_Package().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide_Package | PlainMessage<ImplementationGuide_Package> | undefined, b: ImplementationGuide_Package | PlainMessage<ImplementationGuide_Package> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide_Package, a, b);
  }
}

/**
 * Resource in the implementation guide
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide.Package.Resource
 */
export class ImplementationGuide_Package_Resource extends Message<ImplementationGuide_Package_Resource> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * If not an example, has its normal meaning
   *
   * @generated from field: google.fhir.stu3.proto.Boolean example = 4;
   */
  example?: Boolean;

  /**
   * Human Name for the resource
   *
   * @generated from field: google.fhir.stu3.proto.String name = 5;
   */
  name?: String;

  /**
   * Reason why included in guide
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * Short code to identify the resource
   *
   * @generated from field: google.fhir.stu3.proto.String acronym = 7;
   */
  acronym?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ImplementationGuide.Package.Resource.Source source = 8;
   */
  source?: ImplementationGuide_Package_Resource_Source;

  /**
   * Resource this is an example of (if applicable)
   *
   * @generated from field: google.fhir.stu3.proto.Reference example_for = 9;
   */
  exampleFor?: Reference;

  constructor(data?: PartialMessage<ImplementationGuide_Package_Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide.Package.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "example", kind: "message", T: Boolean },
    { no: 5, name: "name", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "acronym", kind: "message", T: String },
    { no: 8, name: "source", kind: "message", T: ImplementationGuide_Package_Resource_Source },
    { no: 9, name: "example_for", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide_Package_Resource {
    return new ImplementationGuide_Package_Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide_Package_Resource {
    return new ImplementationGuide_Package_Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide_Package_Resource {
    return new ImplementationGuide_Package_Resource().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide_Package_Resource | PlainMessage<ImplementationGuide_Package_Resource> | undefined, b: ImplementationGuide_Package_Resource | PlainMessage<ImplementationGuide_Package_Resource> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide_Package_Resource, a, b);
  }
}

/**
 * Location of the resource
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide.Package.Resource.Source
 */
export class ImplementationGuide_Package_Resource_Source extends Message<ImplementationGuide_Package_Resource_Source> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ImplementationGuide.Package.Resource.Source.source
   */
  source: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ImplementationGuide_Package_Resource_Source>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide.Package.Resource.Source";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "source" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "source" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide_Package_Resource_Source {
    return new ImplementationGuide_Package_Resource_Source().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide_Package_Resource_Source {
    return new ImplementationGuide_Package_Resource_Source().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide_Package_Resource_Source {
    return new ImplementationGuide_Package_Resource_Source().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide_Package_Resource_Source | PlainMessage<ImplementationGuide_Package_Resource_Source> | undefined, b: ImplementationGuide_Package_Resource_Source | PlainMessage<ImplementationGuide_Package_Resource_Source> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide_Package_Resource_Source, a, b);
  }
}

/**
 * Profiles that apply globally
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide.Global
 */
export class ImplementationGuide_Global extends Message<ImplementationGuide_Global> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type this profiles applies to
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode type = 4;
   */
  type?: ResourceTypeCode;

  /**
   * Profile that all resources must conform to
   *
   * @generated from field: google.fhir.stu3.proto.Reference profile = 5;
   */
  profile?: Reference;

  constructor(data?: PartialMessage<ImplementationGuide_Global>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide.Global";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ResourceTypeCode },
    { no: 5, name: "profile", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide_Global {
    return new ImplementationGuide_Global().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide_Global {
    return new ImplementationGuide_Global().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide_Global {
    return new ImplementationGuide_Global().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide_Global | PlainMessage<ImplementationGuide_Global> | undefined, b: ImplementationGuide_Global | PlainMessage<ImplementationGuide_Global> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide_Global, a, b);
  }
}

/**
 * Page/Section in the Guide
 *
 * @generated from message google.fhir.stu3.proto.ImplementationGuide.Page
 */
export class ImplementationGuide_Page extends Message<ImplementationGuide_Page> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Where to find that page
   *
   * @generated from field: google.fhir.stu3.proto.Uri source = 4;
   */
  source?: Uri;

  /**
   * Short title shown for navigational assistance
   *
   * @generated from field: google.fhir.stu3.proto.String title = 5;
   */
  title?: String;

  /**
   * page | example | list | include | directory | dictionary | toc | resource
   *
   * @generated from field: google.fhir.stu3.proto.GuidePageKindCode kind = 6;
   */
  kind?: GuidePageKindCode;

  /**
   * Kind of resource to include in the list
   *
   * @generated from field: repeated google.fhir.stu3.proto.ResourceTypeCode type = 7;
   */
  type: ResourceTypeCode[] = [];

  /**
   * Name of package to include
   *
   * @generated from field: repeated google.fhir.stu3.proto.String package_value = 8 [json_name = "package"];
   */
  packageValue: String[] = [];

  /**
   * Format of the page (e.g. html, markdown, etc.)
   *
   * @generated from field: google.fhir.stu3.proto.MimeTypeCode format = 9;
   */
  format?: MimeTypeCode;

  /**
   * Nested Pages / Sections
   *
   * @generated from field: repeated google.fhir.stu3.proto.ImplementationGuide.Page page = 10;
   */
  page: ImplementationGuide_Page[] = [];

  constructor(data?: PartialMessage<ImplementationGuide_Page>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplementationGuide.Page";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "source", kind: "message", T: Uri },
    { no: 5, name: "title", kind: "message", T: String },
    { no: 6, name: "kind", kind: "message", T: GuidePageKindCode },
    { no: 7, name: "type", kind: "message", T: ResourceTypeCode, repeated: true },
    { no: 8, name: "package_value", jsonName: "package", kind: "message", T: String, repeated: true },
    { no: 9, name: "format", kind: "message", T: MimeTypeCode },
    { no: 10, name: "page", kind: "message", T: ImplementationGuide_Page, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplementationGuide_Page {
    return new ImplementationGuide_Page().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplementationGuide_Page {
    return new ImplementationGuide_Page().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplementationGuide_Page {
    return new ImplementationGuide_Page().fromJsonString(jsonString, options);
  }

  static equals(a: ImplementationGuide_Page | PlainMessage<ImplementationGuide_Page> | undefined, b: ImplementationGuide_Page | PlainMessage<ImplementationGuide_Page> | undefined): boolean {
    return proto3.util.equals(ImplementationGuide_Page, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Library, last updated
 * 2017-04-19T07:44:43.294+10:00. Represents a library of quality improvement
 * components. See http://hl7.org/fhir/StructureDefinition/Library
 *
 * @generated from message google.fhir.stu3.proto.Library
 */
export class Library extends Message<Library> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this library (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the library
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the library
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this library (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this library (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * logic-library | model-definition | asset-collection | module-definition
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 16;
   */
  type?: CodeableConcept;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 18;
   */
  publisher?: String;

  /**
   * Natural language description of the library
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Why this library is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 20;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the library
   *
   * @generated from field: google.fhir.stu3.proto.String usage = 21;
   */
  usage?: String;

  /**
   * When the library was approved by publisher
   *
   * @generated from field: google.fhir.stu3.proto.Date approval_date = 22;
   */
  approvalDate?: Date;

  /**
   * When the library was last reviewed
   *
   * @generated from field: google.fhir.stu3.proto.Date last_review_date = 23;
   */
  lastReviewDate?: Date;

  /**
   * When the library is expected to be used
   *
   * @generated from field: google.fhir.stu3.proto.Period effective_period = 24;
   */
  effectivePeriod?: Period;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 25;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for library (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 26;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * E.g. Education, Treatment, Assessment, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept topic = 27;
   */
  topic: CodeableConcept[] = [];

  /**
   * A content contributor
   *
   * @generated from field: repeated google.fhir.stu3.proto.Contributor contributor = 28;
   */
  contributor: Contributor[] = [];

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 29;
   */
  contact: ContactDetail[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 30;
   */
  copyright?: Markdown;

  /**
   * Additional documentation, citations, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact related_artifact = 31;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Parameters defined by the library
   *
   * @generated from field: repeated google.fhir.stu3.proto.ParameterDefinition parameter = 32;
   */
  parameter: ParameterDefinition[] = [];

  /**
   * What data is referenced by this library
   *
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement data_requirement = 33;
   */
  dataRequirement: DataRequirement[] = [];

  /**
   * Contents of the library, either embedded or referenced
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment content = 34;
   */
  content: Attachment[] = [];

  constructor(data?: PartialMessage<Library>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Library";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "type", kind: "message", T: CodeableConcept },
    { no: 17, name: "date", kind: "message", T: DateTime },
    { no: 18, name: "publisher", kind: "message", T: String },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "purpose", kind: "message", T: Markdown },
    { no: 21, name: "usage", kind: "message", T: String },
    { no: 22, name: "approval_date", kind: "message", T: Date },
    { no: 23, name: "last_review_date", kind: "message", T: Date },
    { no: 24, name: "effective_period", kind: "message", T: Period },
    { no: 25, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 26, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 28, name: "contributor", kind: "message", T: Contributor, repeated: true },
    { no: 29, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 30, name: "copyright", kind: "message", T: Markdown },
    { no: 31, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 32, name: "parameter", kind: "message", T: ParameterDefinition, repeated: true },
    { no: 33, name: "data_requirement", kind: "message", T: DataRequirement, repeated: true },
    { no: 34, name: "content", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Library {
    return new Library().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Library {
    return new Library().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Library {
    return new Library().fromJsonString(jsonString, options);
  }

  static equals(a: Library | PlainMessage<Library> | undefined, b: Library | PlainMessage<Library> | undefined): boolean {
    return proto3.util.equals(Library, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Linkage, last updated
 * 2017-04-19T07:44:43.294+10:00. Links records for 'same' item. See
 * http://hl7.org/fhir/StructureDefinition/Linkage
 *
 * @generated from message google.fhir.stu3.proto.Linkage
 */
export class Linkage extends Message<Linkage> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether this linkage assertion is active or not
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 9;
   */
  active?: Boolean;

  /**
   * Who is responsible for linkages
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 10;
   */
  author?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Linkage.Item item = 11;
   */
  item: Linkage_Item[] = [];

  constructor(data?: PartialMessage<Linkage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Linkage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "active", kind: "message", T: Boolean },
    { no: 10, name: "author", kind: "message", T: Reference },
    { no: 11, name: "item", kind: "message", T: Linkage_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Linkage {
    return new Linkage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Linkage {
    return new Linkage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Linkage {
    return new Linkage().fromJsonString(jsonString, options);
  }

  static equals(a: Linkage | PlainMessage<Linkage> | undefined, b: Linkage | PlainMessage<Linkage> | undefined): boolean {
    return proto3.util.equals(Linkage, a, b);
  }
}

/**
 * Item to be linked
 *
 * @generated from message google.fhir.stu3.proto.Linkage.Item
 */
export class Linkage_Item extends Message<Linkage_Item> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * source | alternate | historical
   *
   * @generated from field: google.fhir.stu3.proto.LinkageTypeCode type = 4;
   */
  type?: LinkageTypeCode;

  /**
   * Resource being linked
   *
   * @generated from field: google.fhir.stu3.proto.Reference resource = 5;
   */
  resource?: Reference;

  constructor(data?: PartialMessage<Linkage_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Linkage.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: LinkageTypeCode },
    { no: 5, name: "resource", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Linkage_Item {
    return new Linkage_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Linkage_Item {
    return new Linkage_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Linkage_Item {
    return new Linkage_Item().fromJsonString(jsonString, options);
  }

  static equals(a: Linkage_Item | PlainMessage<Linkage_Item> | undefined, b: Linkage_Item | PlainMessage<Linkage_Item> | undefined): boolean {
    return proto3.util.equals(Linkage_Item, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for List, last updated
 * 2017-04-19T07:44:43.294+10:00. Information summarized from a list of other
 * resources. See http://hl7.org/fhir/StructureDefinition/List
 *
 * @generated from message google.fhir.stu3.proto.List
 */
export class List extends Message<List> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * current | retired | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ListStatusCode status = 10;
   */
  status?: ListStatusCode;

  /**
   * working | snapshot | changes
   *
   * @generated from field: google.fhir.stu3.proto.ListModeCode mode = 11;
   */
  mode?: ListModeCode;

  /**
   * Descriptive name for the list
   *
   * @generated from field: google.fhir.stu3.proto.String title = 12;
   */
  title?: String;

  /**
   * What the purpose of this list is
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * If all resources have the same subject
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Context in which list created
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * When the list was prepared
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Who and/or what defined the list contents (aka Author)
   *
   * @generated from field: google.fhir.stu3.proto.Reference source = 17;
   */
  source?: Reference;

  /**
   * What order the list has
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept ordered_by = 18;
   */
  orderedBy?: CodeableConcept;

  /**
   * Comments about the list
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 19;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.List.Entry entry = 20;
   */
  entry: List_Entry[] = [];

  /**
   * Why list is empty
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept empty_reason = 21;
   */
  emptyReason?: CodeableConcept;

  constructor(data?: PartialMessage<List>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.List";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: ListStatusCode },
    { no: 11, name: "mode", kind: "message", T: ListModeCode },
    { no: 12, name: "title", kind: "message", T: String },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "encounter", kind: "message", T: Reference },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "source", kind: "message", T: Reference },
    { no: 18, name: "ordered_by", kind: "message", T: CodeableConcept },
    { no: 19, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 20, name: "entry", kind: "message", T: List_Entry, repeated: true },
    { no: 21, name: "empty_reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): List {
    return new List().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): List {
    return new List().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): List {
    return new List().fromJsonString(jsonString, options);
  }

  static equals(a: List | PlainMessage<List> | undefined, b: List | PlainMessage<List> | undefined): boolean {
    return proto3.util.equals(List, a, b);
  }
}

/**
 * Entries in the list
 *
 * @generated from message google.fhir.stu3.proto.List.Entry
 */
export class List_Entry extends Message<List_Entry> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Status/Workflow information about this item
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept flag = 4;
   */
  flag?: CodeableConcept;

  /**
   * If this item is actually marked as deleted
   *
   * @generated from field: google.fhir.stu3.proto.Boolean deleted = 5;
   */
  deleted?: Boolean;

  /**
   * When item added to list
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 6;
   */
  date?: DateTime;

  /**
   * Actual entry
   *
   * @generated from field: google.fhir.stu3.proto.Reference item = 7;
   */
  item?: Reference;

  constructor(data?: PartialMessage<List_Entry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.List.Entry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "flag", kind: "message", T: CodeableConcept },
    { no: 5, name: "deleted", kind: "message", T: Boolean },
    { no: 6, name: "date", kind: "message", T: DateTime },
    { no: 7, name: "item", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): List_Entry {
    return new List_Entry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): List_Entry {
    return new List_Entry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): List_Entry {
    return new List_Entry().fromJsonString(jsonString, options);
  }

  static equals(a: List_Entry | PlainMessage<List_Entry> | undefined, b: List_Entry | PlainMessage<List_Entry> | undefined): boolean {
    return proto3.util.equals(List_Entry, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Location, last updated
 * 2017-04-19T07:44:43.294+10:00. Details and position information for a
 * physical place. See http://hl7.org/fhir/StructureDefinition/Location
 *
 * @generated from message google.fhir.stu3.proto.Location
 */
export class Location extends Message<Location> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique code or number identifying the location to its users
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | suspended | inactive
   *
   * @generated from field: google.fhir.stu3.proto.LocationStatusCode status = 10;
   */
  status?: LocationStatusCode;

  /**
   * The Operational status of the location (typically only for a bed/room)
   *
   * @generated from field: google.fhir.stu3.proto.Coding operational_status = 11;
   */
  operationalStatus?: Coding;

  /**
   * Name of the location as used by humans
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * A list of alternate names that the location is known as, or was known as in
   * the past
   *
   * @generated from field: repeated google.fhir.stu3.proto.String alias = 13;
   */
  alias: String[] = [];

  /**
   * Additional details about the location that could be displayed as further
   * information to identify the location beyond its name
   *
   * @generated from field: google.fhir.stu3.proto.String description = 14;
   */
  description?: String;

  /**
   * instance | kind
   *
   * @generated from field: google.fhir.stu3.proto.LocationModeCode mode = 15;
   */
  mode?: LocationModeCode;

  /**
   * Type of function performed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 16;
   */
  type?: CodeableConcept;

  /**
   * Contact details of the location
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 17;
   */
  telecom: ContactPoint[] = [];

  /**
   * Physical location
   *
   * @generated from field: google.fhir.stu3.proto.Address address = 18;
   */
  address?: Address;

  /**
   * Physical form of the location
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept physical_type = 19;
   */
  physicalType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Location.Position position = 20;
   */
  position?: Location_Position;

  /**
   * Organization responsible for provisioning and upkeep
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 21;
   */
  managingOrganization?: Reference;

  /**
   * Another Location this one is physically part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference part_of = 22;
   */
  partOf?: Reference;

  /**
   * Technical endpoints providing access to services operated for the location
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 23;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: LocationStatusCode },
    { no: 11, name: "operational_status", kind: "message", T: Coding },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "alias", kind: "message", T: String, repeated: true },
    { no: 14, name: "description", kind: "message", T: String },
    { no: 15, name: "mode", kind: "message", T: LocationModeCode },
    { no: 16, name: "type", kind: "message", T: CodeableConcept },
    { no: 17, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 18, name: "address", kind: "message", T: Address },
    { no: 19, name: "physical_type", kind: "message", T: CodeableConcept },
    { no: 20, name: "position", kind: "message", T: Location_Position },
    { no: 21, name: "managing_organization", kind: "message", T: Reference },
    { no: 22, name: "part_of", kind: "message", T: Reference },
    { no: 23, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location {
    return new Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location {
    return new Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location {
    return new Location().fromJsonString(jsonString, options);
  }

  static equals(a: Location | PlainMessage<Location> | undefined, b: Location | PlainMessage<Location> | undefined): boolean {
    return proto3.util.equals(Location, a, b);
  }
}

/**
 * The absolute geographic location
 *
 * @generated from message google.fhir.stu3.proto.Location.Position
 */
export class Location_Position extends Message<Location_Position> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Longitude with WGS84 datum
   *
   * @generated from field: google.fhir.stu3.proto.Decimal longitude = 4;
   */
  longitude?: Decimal;

  /**
   * Latitude with WGS84 datum
   *
   * @generated from field: google.fhir.stu3.proto.Decimal latitude = 5;
   */
  latitude?: Decimal;

  /**
   * Altitude with WGS84 datum
   *
   * @generated from field: google.fhir.stu3.proto.Decimal altitude = 6;
   */
  altitude?: Decimal;

  constructor(data?: PartialMessage<Location_Position>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Location.Position";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "longitude", kind: "message", T: Decimal },
    { no: 5, name: "latitude", kind: "message", T: Decimal },
    { no: 6, name: "altitude", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location_Position {
    return new Location_Position().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location_Position {
    return new Location_Position().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location_Position {
    return new Location_Position().fromJsonString(jsonString, options);
  }

  static equals(a: Location_Position | PlainMessage<Location_Position> | undefined, b: Location_Position | PlainMessage<Location_Position> | undefined): boolean {
    return proto3.util.equals(Location_Position, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Measure, last updated
 * 2017-04-19T07:44:43.294+10:00. A quality measure definition. See
 * http://hl7.org/fhir/StructureDefinition/Measure
 *
 * @generated from message google.fhir.stu3.proto.Measure
 */
export class Measure extends Message<Measure> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this measure (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the measure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the measure
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this measure (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this measure (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Natural language description of the measure
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Why this measure is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 19;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the measure
   *
   * @generated from field: google.fhir.stu3.proto.String usage = 20;
   */
  usage?: String;

  /**
   * When the measure was approved by publisher
   *
   * @generated from field: google.fhir.stu3.proto.Date approval_date = 21;
   */
  approvalDate?: Date;

  /**
   * When the measure was last reviewed
   *
   * @generated from field: google.fhir.stu3.proto.Date last_review_date = 22;
   */
  lastReviewDate?: Date;

  /**
   * When the measure is expected to be used
   *
   * @generated from field: google.fhir.stu3.proto.Period effective_period = 23;
   */
  effectivePeriod?: Period;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 24;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for measure (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 25;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * E.g. Education, Treatment, Assessment, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept topic = 26;
   */
  topic: CodeableConcept[] = [];

  /**
   * A content contributor
   *
   * @generated from field: repeated google.fhir.stu3.proto.Contributor contributor = 27;
   */
  contributor: Contributor[] = [];

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 28;
   */
  contact: ContactDetail[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 29;
   */
  copyright?: Markdown;

  /**
   * Additional documentation, citations, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact related_artifact = 30;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Logic used by the measure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference library = 31;
   */
  library: Reference[] = [];

  /**
   * Disclaimer for use of the measure or its referenced content
   *
   * @generated from field: google.fhir.stu3.proto.Markdown disclaimer = 32;
   */
  disclaimer?: Markdown;

  /**
   * proportion | ratio | continuous-variable | cohort
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept scoring = 33;
   */
  scoring?: CodeableConcept;

  /**
   * opportunity | all-or-nothing | linear | weighted
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept composite_scoring = 34;
   */
  compositeScoring?: CodeableConcept;

  /**
   * process | outcome | structure | patient-reported-outcome | composite
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 35;
   */
  type: CodeableConcept[] = [];

  /**
   * How is risk adjustment applied for this measure
   *
   * @generated from field: google.fhir.stu3.proto.String risk_adjustment = 36;
   */
  riskAdjustment?: String;

  /**
   * How is rate aggregation performed for this measure
   *
   * @generated from field: google.fhir.stu3.proto.String rate_aggregation = 37;
   */
  rateAggregation?: String;

  /**
   * Why does this measure exist
   *
   * @generated from field: google.fhir.stu3.proto.Markdown rationale = 38;
   */
  rationale?: Markdown;

  /**
   * Summary of clinical guidelines
   *
   * @generated from field: google.fhir.stu3.proto.Markdown clinical_recommendation_statement = 39;
   */
  clinicalRecommendationStatement?: Markdown;

  /**
   * Improvement notation for the measure, e.g. higher score indicates better
   * quality
   *
   * @generated from field: google.fhir.stu3.proto.String improvement_notation = 40;
   */
  improvementNotation?: String;

  /**
   * Defined terms used in the measure documentation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Markdown definition = 41;
   */
  definition: Markdown[] = [];

  /**
   * Additional guidance for implementers
   *
   * @generated from field: google.fhir.stu3.proto.Markdown guidance = 42;
   */
  guidance?: Markdown;

  /**
   * The measure set, e.g. Preventive Care and Screening
   *
   * @generated from field: google.fhir.stu3.proto.String set = 43;
   */
  set?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Measure.Group group = 44;
   */
  group: Measure_Group[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Measure.SupplementalData supplemental_data = 45;
   */
  supplementalData: Measure_SupplementalData[] = [];

  constructor(data?: PartialMessage<Measure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Measure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "purpose", kind: "message", T: Markdown },
    { no: 20, name: "usage", kind: "message", T: String },
    { no: 21, name: "approval_date", kind: "message", T: Date },
    { no: 22, name: "last_review_date", kind: "message", T: Date },
    { no: 23, name: "effective_period", kind: "message", T: Period },
    { no: 24, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 25, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "contributor", kind: "message", T: Contributor, repeated: true },
    { no: 28, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 29, name: "copyright", kind: "message", T: Markdown },
    { no: 30, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 31, name: "library", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "disclaimer", kind: "message", T: Markdown },
    { no: 33, name: "scoring", kind: "message", T: CodeableConcept },
    { no: 34, name: "composite_scoring", kind: "message", T: CodeableConcept },
    { no: 35, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 36, name: "risk_adjustment", kind: "message", T: String },
    { no: 37, name: "rate_aggregation", kind: "message", T: String },
    { no: 38, name: "rationale", kind: "message", T: Markdown },
    { no: 39, name: "clinical_recommendation_statement", kind: "message", T: Markdown },
    { no: 40, name: "improvement_notation", kind: "message", T: String },
    { no: 41, name: "definition", kind: "message", T: Markdown, repeated: true },
    { no: 42, name: "guidance", kind: "message", T: Markdown },
    { no: 43, name: "set", kind: "message", T: String },
    { no: 44, name: "group", kind: "message", T: Measure_Group, repeated: true },
    { no: 45, name: "supplemental_data", kind: "message", T: Measure_SupplementalData, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Measure {
    return new Measure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Measure {
    return new Measure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Measure {
    return new Measure().fromJsonString(jsonString, options);
  }

  static equals(a: Measure | PlainMessage<Measure> | undefined, b: Measure | PlainMessage<Measure> | undefined): boolean {
    return proto3.util.equals(Measure, a, b);
  }
}

/**
 * Population criteria group
 *
 * @generated from message google.fhir.stu3.proto.Measure.Group
 */
export class Measure_Group extends Message<Measure_Group> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Short name
   *
   * @generated from field: google.fhir.stu3.proto.String name = 5;
   */
  name?: String;

  /**
   * Summary description
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Measure.Group.Population population = 7;
   */
  population: Measure_Group_Population[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Measure.Group.Stratifier stratifier = 8;
   */
  stratifier: Measure_Group_Stratifier[] = [];

  constructor(data?: PartialMessage<Measure_Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Measure.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "name", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "population", kind: "message", T: Measure_Group_Population, repeated: true },
    { no: 8, name: "stratifier", kind: "message", T: Measure_Group_Stratifier, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Measure_Group {
    return new Measure_Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Measure_Group {
    return new Measure_Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Measure_Group {
    return new Measure_Group().fromJsonString(jsonString, options);
  }

  static equals(a: Measure_Group | PlainMessage<Measure_Group> | undefined, b: Measure_Group | PlainMessage<Measure_Group> | undefined): boolean {
    return proto3.util.equals(Measure_Group, a, b);
  }
}

/**
 * Population criteria
 *
 * @generated from message google.fhir.stu3.proto.Measure.Group.Population
 */
export class Measure_Group_Population extends Message<Measure_Group_Population> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * initial-population | numerator | numerator-exclusion | denominator |
   * denominator-exclusion | denominator-exception | measure-population |
   * measure-population-exclusion | measure-observation
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Short name
   *
   * @generated from field: google.fhir.stu3.proto.String name = 6;
   */
  name?: String;

  /**
   * The human readable description of this population criteria
   *
   * @generated from field: google.fhir.stu3.proto.String description = 7;
   */
  description?: String;

  /**
   * The name of a valid referenced CQL expression (may be namespaced) that
   * defines this population criteria
   *
   * @generated from field: google.fhir.stu3.proto.String criteria = 8;
   */
  criteria?: String;

  constructor(data?: PartialMessage<Measure_Group_Population>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Measure.Group.Population";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "name", kind: "message", T: String },
    { no: 7, name: "description", kind: "message", T: String },
    { no: 8, name: "criteria", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Measure_Group_Population {
    return new Measure_Group_Population().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Measure_Group_Population {
    return new Measure_Group_Population().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Measure_Group_Population {
    return new Measure_Group_Population().fromJsonString(jsonString, options);
  }

  static equals(a: Measure_Group_Population | PlainMessage<Measure_Group_Population> | undefined, b: Measure_Group_Population | PlainMessage<Measure_Group_Population> | undefined): boolean {
    return proto3.util.equals(Measure_Group_Population, a, b);
  }
}

/**
 * Stratifier criteria for the measure
 *
 * @generated from message google.fhir.stu3.proto.Measure.Group.Stratifier
 */
export class Measure_Group_Stratifier extends Message<Measure_Group_Stratifier> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The identifier for the stratifier used to coordinate the reported data
   * back to this stratifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * How the measure should be stratified
   *
   * @generated from field: google.fhir.stu3.proto.String criteria = 5;
   */
  criteria?: String;

  /**
   * Path to the stratifier
   *
   * @generated from field: google.fhir.stu3.proto.String path = 6;
   */
  path?: String;

  constructor(data?: PartialMessage<Measure_Group_Stratifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Measure.Group.Stratifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "criteria", kind: "message", T: String },
    { no: 6, name: "path", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Measure_Group_Stratifier {
    return new Measure_Group_Stratifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Measure_Group_Stratifier {
    return new Measure_Group_Stratifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Measure_Group_Stratifier {
    return new Measure_Group_Stratifier().fromJsonString(jsonString, options);
  }

  static equals(a: Measure_Group_Stratifier | PlainMessage<Measure_Group_Stratifier> | undefined, b: Measure_Group_Stratifier | PlainMessage<Measure_Group_Stratifier> | undefined): boolean {
    return proto3.util.equals(Measure_Group_Stratifier, a, b);
  }
}

/**
 * What other data should be reported with the measure
 *
 * @generated from message google.fhir.stu3.proto.Measure.SupplementalData
 */
export class Measure_SupplementalData extends Message<Measure_SupplementalData> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier, unique within the measure
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * supplemental-data | risk-adjustment-factor
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept usage = 5;
   */
  usage: CodeableConcept[] = [];

  /**
   * Expression describing additional data to be reported
   *
   * @generated from field: google.fhir.stu3.proto.String criteria = 6;
   */
  criteria?: String;

  /**
   * Path to the supplemental data element
   *
   * @generated from field: google.fhir.stu3.proto.String path = 7;
   */
  path?: String;

  constructor(data?: PartialMessage<Measure_SupplementalData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Measure.SupplementalData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "usage", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "criteria", kind: "message", T: String },
    { no: 7, name: "path", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Measure_SupplementalData {
    return new Measure_SupplementalData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Measure_SupplementalData {
    return new Measure_SupplementalData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Measure_SupplementalData {
    return new Measure_SupplementalData().fromJsonString(jsonString, options);
  }

  static equals(a: Measure_SupplementalData | PlainMessage<Measure_SupplementalData> | undefined, b: Measure_SupplementalData | PlainMessage<Measure_SupplementalData> | undefined): boolean {
    return proto3.util.equals(Measure_SupplementalData, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MeasureReport, last updated
 * 2017-04-19T07:44:43.294+10:00. Results of a measure evaluation. See
 * http://hl7.org/fhir/StructureDefinition/MeasureReport
 *
 * @generated from message google.fhir.stu3.proto.MeasureReport
 */
export class MeasureReport extends Message<MeasureReport> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Additional identifier for the Report
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * complete | pending | error
   *
   * @generated from field: google.fhir.stu3.proto.MeasureReportStatusCode status = 10;
   */
  status?: MeasureReportStatusCode;

  /**
   * individual | patient-list | summary
   *
   * @generated from field: google.fhir.stu3.proto.MeasureReportTypeCode type = 11;
   */
  type?: MeasureReportTypeCode;

  /**
   * What measure was evaluated
   *
   * @generated from field: google.fhir.stu3.proto.Reference measure = 12;
   */
  measure?: Reference;

  /**
   * What patient the report is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * When the report was generated
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * Who is reporting the data
   *
   * @generated from field: google.fhir.stu3.proto.Reference reporting_organization = 15;
   */
  reportingOrganization?: Reference;

  /**
   * What period the report covers
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 16;
   */
  period?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MeasureReport.Group group = 17;
   */
  group: MeasureReport_Group[] = [];

  /**
   * What data was evaluated to produce the measure score
   *
   * @generated from field: google.fhir.stu3.proto.Reference evaluated_resources = 18;
   */
  evaluatedResources?: Reference;

  constructor(data?: PartialMessage<MeasureReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: MeasureReportStatusCode },
    { no: 11, name: "type", kind: "message", T: MeasureReportTypeCode },
    { no: 12, name: "measure", kind: "message", T: Reference },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "reporting_organization", kind: "message", T: Reference },
    { no: 16, name: "period", kind: "message", T: Period },
    { no: 17, name: "group", kind: "message", T: MeasureReport_Group, repeated: true },
    { no: 18, name: "evaluated_resources", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReport {
    return new MeasureReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReport {
    return new MeasureReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReport {
    return new MeasureReport().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReport | PlainMessage<MeasureReport> | undefined, b: MeasureReport | PlainMessage<MeasureReport> | undefined): boolean {
    return proto3.util.equals(MeasureReport, a, b);
  }
}

/**
 * Measure results for each group
 *
 * @generated from message google.fhir.stu3.proto.MeasureReport.Group
 */
export class MeasureReport_Group extends Message<MeasureReport_Group> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What group of the measure
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MeasureReport.Group.Population population = 5;
   */
  population: MeasureReport_Group_Population[] = [];

  /**
   * What score this group achieved
   *
   * @generated from field: google.fhir.stu3.proto.Decimal measure_score = 6;
   */
  measureScore?: Decimal;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MeasureReport.Group.Stratifier stratifier = 7;
   */
  stratifier: MeasureReport_Group_Stratifier[] = [];

  constructor(data?: PartialMessage<MeasureReport_Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReport.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "population", kind: "message", T: MeasureReport_Group_Population, repeated: true },
    { no: 6, name: "measure_score", kind: "message", T: Decimal },
    { no: 7, name: "stratifier", kind: "message", T: MeasureReport_Group_Stratifier, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReport_Group {
    return new MeasureReport_Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReport_Group {
    return new MeasureReport_Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReport_Group {
    return new MeasureReport_Group().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReport_Group | PlainMessage<MeasureReport_Group> | undefined, b: MeasureReport_Group | PlainMessage<MeasureReport_Group> | undefined): boolean {
    return proto3.util.equals(MeasureReport_Group, a, b);
  }
}

/**
 * The populations in the group
 *
 * @generated from message google.fhir.stu3.proto.MeasureReport.Group.Population
 */
export class MeasureReport_Group_Population extends Message<MeasureReport_Group_Population> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Population identifier as defined in the measure
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * initial-population | numerator | numerator-exclusion | denominator |
   * denominator-exclusion | denominator-exception | measure-population |
   * measure-population-exclusion | measure-score
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Size of the population
   *
   * @generated from field: google.fhir.stu3.proto.Integer count = 6;
   */
  count?: Integer;

  /**
   * For patient-list reports, the patients in this population
   *
   * @generated from field: google.fhir.stu3.proto.Reference patients = 7;
   */
  patients?: Reference;

  constructor(data?: PartialMessage<MeasureReport_Group_Population>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReport.Group.Population";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "count", kind: "message", T: Integer },
    { no: 7, name: "patients", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReport_Group_Population {
    return new MeasureReport_Group_Population().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReport_Group_Population {
    return new MeasureReport_Group_Population().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReport_Group_Population {
    return new MeasureReport_Group_Population().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReport_Group_Population | PlainMessage<MeasureReport_Group_Population> | undefined, b: MeasureReport_Group_Population | PlainMessage<MeasureReport_Group_Population> | undefined): boolean {
    return proto3.util.equals(MeasureReport_Group_Population, a, b);
  }
}

/**
 * Stratification results
 *
 * @generated from message google.fhir.stu3.proto.MeasureReport.Group.Stratifier
 */
export class MeasureReport_Group_Stratifier extends Message<MeasureReport_Group_Stratifier> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What stratifier of the group
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup stratum = 5;
   */
  stratum: MeasureReport_Group_Stratifier_StratifierGroup[] = [];

  constructor(data?: PartialMessage<MeasureReport_Group_Stratifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReport.Group.Stratifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "stratum", kind: "message", T: MeasureReport_Group_Stratifier_StratifierGroup, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReport_Group_Stratifier {
    return new MeasureReport_Group_Stratifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReport_Group_Stratifier {
    return new MeasureReport_Group_Stratifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReport_Group_Stratifier {
    return new MeasureReport_Group_Stratifier().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReport_Group_Stratifier | PlainMessage<MeasureReport_Group_Stratifier> | undefined, b: MeasureReport_Group_Stratifier | PlainMessage<MeasureReport_Group_Stratifier> | undefined): boolean {
    return proto3.util.equals(MeasureReport_Group_Stratifier, a, b);
  }
}

/**
 * Stratum results, one for each unique value in the stratifier
 *
 * @generated from message google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup
 */
export class MeasureReport_Group_Stratifier_StratifierGroup extends Message<MeasureReport_Group_Stratifier_StratifierGroup> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The stratum value, e.g. male
   *
   * @generated from field: google.fhir.stu3.proto.String value = 4;
   */
  value?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup.StratifierGroupPopulation population = 5;
   */
  population: MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation[] = [];

  /**
   * What score this stratum achieved
   *
   * @generated from field: google.fhir.stu3.proto.Decimal measure_score = 6;
   */
  measureScore?: Decimal;

  constructor(data?: PartialMessage<MeasureReport_Group_Stratifier_StratifierGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: String },
    { no: 5, name: "population", kind: "message", T: MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation, repeated: true },
    { no: 6, name: "measure_score", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReport_Group_Stratifier_StratifierGroup {
    return new MeasureReport_Group_Stratifier_StratifierGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReport_Group_Stratifier_StratifierGroup {
    return new MeasureReport_Group_Stratifier_StratifierGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReport_Group_Stratifier_StratifierGroup {
    return new MeasureReport_Group_Stratifier_StratifierGroup().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReport_Group_Stratifier_StratifierGroup | PlainMessage<MeasureReport_Group_Stratifier_StratifierGroup> | undefined, b: MeasureReport_Group_Stratifier_StratifierGroup | PlainMessage<MeasureReport_Group_Stratifier_StratifierGroup> | undefined): boolean {
    return proto3.util.equals(MeasureReport_Group_Stratifier_StratifierGroup, a, b);
  }
}

/**
 * Population results in this stratum
 *
 * @generated from message google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup.StratifierGroupPopulation
 */
export class MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation extends Message<MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Population identifier as defined in the measure
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * initial-population | numerator | numerator-exclusion | denominator
   * | denominator-exclusion | denominator-exception |
   * measure-population | measure-population-exclusion | measure-score
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Size of the population
   *
   * @generated from field: google.fhir.stu3.proto.Integer count = 6;
   */
  count?: Integer;

  /**
   * For patient-list reports, the patients in this population
   *
   * @generated from field: google.fhir.stu3.proto.Reference patients = 7;
   */
  patients?: Reference;

  constructor(data?: PartialMessage<MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReport.Group.Stratifier.StratifierGroup.StratifierGroupPopulation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "count", kind: "message", T: Integer },
    { no: 7, name: "patients", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation {
    return new MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation {
    return new MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation {
    return new MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation | PlainMessage<MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation> | undefined, b: MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation | PlainMessage<MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation> | undefined): boolean {
    return proto3.util.equals(MeasureReport_Group_Stratifier_StratifierGroup_StratifierGroupPopulation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Media, last updated
 * 2017-04-19T07:44:43.294+10:00. A photo, video, or audio recording acquired or
 * used in healthcare. The actual content may be inline or provided by direct
 * reference. See http://hl7.org/fhir/StructureDefinition/Media
 *
 * @generated from message google.fhir.stu3.proto.Media
 */
export class Media extends Message<Media> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier(s) for the image
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Procedure that caused this media to be created
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * photo | video | audio
   *
   * @generated from field: google.fhir.stu3.proto.DigitalMediaTypeCode type = 11;
   */
  type?: DigitalMediaTypeCode;

  /**
   * The type of acquisition equipment/process
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept subtype = 12;
   */
  subtype?: CodeableConcept;

  /**
   * Imaging view, e.g. Lateral or Antero-posterior
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept view = 13;
   */
  view?: CodeableConcept;

  /**
   * Who/What this Media is a record of
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Encounter / Episode associated with media
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Media.Occurrence occurrence = 16;
   */
  occurrence?: Media_Occurrence;

  /**
   * The person who generated the image
   *
   * @generated from field: google.fhir.stu3.proto.Reference operator = 17;
   */
  operator?: Reference;

  /**
   * Why was event performed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 18;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Body part in media
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 19;
   */
  bodySite?: CodeableConcept;

  /**
   * Observing Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 20;
   */
  device?: Reference;

  /**
   * Height of the image in pixels (photo/video)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt height = 21;
   */
  height?: PositiveInt;

  /**
   * Width of the image in pixels (photo/video)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt width = 22;
   */
  width?: PositiveInt;

  /**
   * Number of frames if > 1 (photo)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt frames = 23;
   */
  frames?: PositiveInt;

  /**
   * Length in seconds (audio / video)
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt duration = 24;
   */
  duration?: UnsignedInt;

  /**
   * Actual Media - reference or data
   *
   * @generated from field: google.fhir.stu3.proto.Attachment content = 25;
   */
  content?: Attachment;

  /**
   * Comments made about the media
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<Media>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Media";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "type", kind: "message", T: DigitalMediaTypeCode },
    { no: 12, name: "subtype", kind: "message", T: CodeableConcept },
    { no: 13, name: "view", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "occurrence", kind: "message", T: Media_Occurrence },
    { no: 17, name: "operator", kind: "message", T: Reference },
    { no: 18, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 20, name: "device", kind: "message", T: Reference },
    { no: 21, name: "height", kind: "message", T: PositiveInt },
    { no: 22, name: "width", kind: "message", T: PositiveInt },
    { no: 23, name: "frames", kind: "message", T: PositiveInt },
    { no: 24, name: "duration", kind: "message", T: UnsignedInt },
    { no: 25, name: "content", kind: "message", T: Attachment },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Media {
    return new Media().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Media {
    return new Media().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Media {
    return new Media().fromJsonString(jsonString, options);
  }

  static equals(a: Media | PlainMessage<Media> | undefined, b: Media | PlainMessage<Media> | undefined): boolean {
    return proto3.util.equals(Media, a, b);
  }
}

/**
 * When Media was collected
 *
 * @generated from message google.fhir.stu3.proto.Media.Occurrence
 */
export class Media_Occurrence extends Message<Media_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Media.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Media_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Media.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Media_Occurrence {
    return new Media_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Media_Occurrence {
    return new Media_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Media_Occurrence {
    return new Media_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: Media_Occurrence | PlainMessage<Media_Occurrence> | undefined, b: Media_Occurrence | PlainMessage<Media_Occurrence> | undefined): boolean {
    return proto3.util.equals(Media_Occurrence, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Medication, last updated
 * 2017-04-19T07:44:43.294+10:00. Definition of a Medication. See
 * http://hl7.org/fhir/StructureDefinition/Medication
 *
 * @generated from message google.fhir.stu3.proto.Medication
 */
export class Medication extends Message<Medication> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Codes that identify this medication
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 9;
   */
  code?: CodeableConcept;

  /**
   * active | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.MedicationStatusCode status = 10;
   */
  status?: MedicationStatusCode;

  /**
   * True if a brand
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_brand = 11;
   */
  isBrand?: Boolean;

  /**
   * True if medication does not require a prescription
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
   */
  isOverTheCounter?: Boolean;

  /**
   * Manufacturer of the item
   *
   * @generated from field: google.fhir.stu3.proto.Reference manufacturer = 13;
   */
  manufacturer?: Reference;

  /**
   * powder | tablets | capsule +
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 14;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Medication.Ingredient ingredient = 15;
   */
  ingredient: Medication_Ingredient[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Medication.Package package_value = 16 [json_name = "package"];
   */
  packageValue?: Medication_Package;

  /**
   * Picture of the medication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment image = 17;
   */
  image: Attachment[] = [];

  constructor(data?: PartialMessage<Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "code", kind: "message", T: CodeableConcept },
    { no: 10, name: "status", kind: "message", T: MedicationStatusCode },
    { no: 11, name: "is_brand", kind: "message", T: Boolean },
    { no: 12, name: "is_over_the_counter", kind: "message", T: Boolean },
    { no: 13, name: "manufacturer", kind: "message", T: Reference },
    { no: 14, name: "form", kind: "message", T: CodeableConcept },
    { no: 15, name: "ingredient", kind: "message", T: Medication_Ingredient, repeated: true },
    { no: 16, name: "package_value", jsonName: "package", kind: "message", T: Medication_Package },
    { no: 17, name: "image", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication {
    return new Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication {
    return new Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication {
    return new Medication().fromJsonString(jsonString, options);
  }

  static equals(a: Medication | PlainMessage<Medication> | undefined, b: Medication | PlainMessage<Medication> | undefined): boolean {
    return proto3.util.equals(Medication, a, b);
  }
}

/**
 * Active or inactive ingredient
 *
 * @generated from message google.fhir.stu3.proto.Medication.Ingredient
 */
export class Medication_Ingredient extends Message<Medication_Ingredient> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Medication.Ingredient.Item item = 4;
   */
  item?: Medication_Ingredient_Item;

  /**
   * Active ingredient indicator
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_active = 5;
   */
  isActive?: Boolean;

  /**
   * Quantity of ingredient present
   *
   * @generated from field: google.fhir.stu3.proto.Ratio amount = 6;
   */
  amount?: Ratio;

  constructor(data?: PartialMessage<Medication_Ingredient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication.Ingredient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: Medication_Ingredient_Item },
    { no: 5, name: "is_active", kind: "message", T: Boolean },
    { no: 6, name: "amount", kind: "message", T: Ratio },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication_Ingredient {
    return new Medication_Ingredient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication_Ingredient {
    return new Medication_Ingredient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication_Ingredient {
    return new Medication_Ingredient().fromJsonString(jsonString, options);
  }

  static equals(a: Medication_Ingredient | PlainMessage<Medication_Ingredient> | undefined, b: Medication_Ingredient | PlainMessage<Medication_Ingredient> | undefined): boolean {
    return proto3.util.equals(Medication_Ingredient, a, b);
  }
}

/**
 * The product contained
 *
 * @generated from message google.fhir.stu3.proto.Medication.Ingredient.Item
 */
export class Medication_Ingredient_Item extends Message<Medication_Ingredient_Item> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Medication.Ingredient.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Medication_Ingredient_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication.Ingredient.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication_Ingredient_Item {
    return new Medication_Ingredient_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication_Ingredient_Item {
    return new Medication_Ingredient_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication_Ingredient_Item {
    return new Medication_Ingredient_Item().fromJsonString(jsonString, options);
  }

  static equals(a: Medication_Ingredient_Item | PlainMessage<Medication_Ingredient_Item> | undefined, b: Medication_Ingredient_Item | PlainMessage<Medication_Ingredient_Item> | undefined): boolean {
    return proto3.util.equals(Medication_Ingredient_Item, a, b);
  }
}

/**
 * Details about packaged medications
 *
 * @generated from message google.fhir.stu3.proto.Medication.Package
 */
export class Medication_Package extends Message<Medication_Package> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * E.g. box, vial, blister-pack
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept container = 4;
   */
  container?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Medication.Package.Content content = 5;
   */
  content: Medication_Package_Content[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Medication.Package.Batch batch = 6;
   */
  batch: Medication_Package_Batch[] = [];

  constructor(data?: PartialMessage<Medication_Package>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication.Package";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "container", kind: "message", T: CodeableConcept },
    { no: 5, name: "content", kind: "message", T: Medication_Package_Content, repeated: true },
    { no: 6, name: "batch", kind: "message", T: Medication_Package_Batch, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication_Package {
    return new Medication_Package().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication_Package {
    return new Medication_Package().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication_Package {
    return new Medication_Package().fromJsonString(jsonString, options);
  }

  static equals(a: Medication_Package | PlainMessage<Medication_Package> | undefined, b: Medication_Package | PlainMessage<Medication_Package> | undefined): boolean {
    return proto3.util.equals(Medication_Package, a, b);
  }
}

/**
 * What is  in the package
 *
 * @generated from message google.fhir.stu3.proto.Medication.Package.Content
 */
export class Medication_Package_Content extends Message<Medication_Package_Content> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Medication.Package.Content.Item item = 4;
   */
  item?: Medication_Package_Content_Item;

  /**
   * Quantity present in the package
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity amount = 5;
   */
  amount?: SimpleQuantity;

  constructor(data?: PartialMessage<Medication_Package_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication.Package.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: Medication_Package_Content_Item },
    { no: 5, name: "amount", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication_Package_Content {
    return new Medication_Package_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication_Package_Content {
    return new Medication_Package_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication_Package_Content {
    return new Medication_Package_Content().fromJsonString(jsonString, options);
  }

  static equals(a: Medication_Package_Content | PlainMessage<Medication_Package_Content> | undefined, b: Medication_Package_Content | PlainMessage<Medication_Package_Content> | undefined): boolean {
    return proto3.util.equals(Medication_Package_Content, a, b);
  }
}

/**
 * The item in the package
 *
 * @generated from message google.fhir.stu3.proto.Medication.Package.Content.Item
 */
export class Medication_Package_Content_Item extends Message<Medication_Package_Content_Item> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Medication.Package.Content.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Medication_Package_Content_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication.Package.Content.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication_Package_Content_Item {
    return new Medication_Package_Content_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication_Package_Content_Item {
    return new Medication_Package_Content_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication_Package_Content_Item {
    return new Medication_Package_Content_Item().fromJsonString(jsonString, options);
  }

  static equals(a: Medication_Package_Content_Item | PlainMessage<Medication_Package_Content_Item> | undefined, b: Medication_Package_Content_Item | PlainMessage<Medication_Package_Content_Item> | undefined): boolean {
    return proto3.util.equals(Medication_Package_Content_Item, a, b);
  }
}

/**
 * Identifies a single production run
 *
 * @generated from message google.fhir.stu3.proto.Medication.Package.Batch
 */
export class Medication_Package_Batch extends Message<Medication_Package_Batch> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier assigned to batch
   *
   * @generated from field: google.fhir.stu3.proto.String lot_number = 4;
   */
  lotNumber?: String;

  /**
   * When batch will expire
   *
   * @generated from field: google.fhir.stu3.proto.DateTime expiration_date = 5;
   */
  expirationDate?: DateTime;

  constructor(data?: PartialMessage<Medication_Package_Batch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Medication.Package.Batch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "lot_number", kind: "message", T: String },
    { no: 5, name: "expiration_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Medication_Package_Batch {
    return new Medication_Package_Batch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Medication_Package_Batch {
    return new Medication_Package_Batch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Medication_Package_Batch {
    return new Medication_Package_Batch().fromJsonString(jsonString, options);
  }

  static equals(a: Medication_Package_Batch | PlainMessage<Medication_Package_Batch> | undefined, b: Medication_Package_Batch | PlainMessage<Medication_Package_Batch> | undefined): boolean {
    return proto3.util.equals(Medication_Package_Batch, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MedicationAdministration, last
 * updated 2017-04-19T07:44:43.294+10:00. Administration of medication to a
 * patient. See http://hl7.org/fhir/StructureDefinition/MedicationAdministration
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministration
 */
export class MedicationAdministration extends Message<MedicationAdministration> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 11;
   */
  partOf: Reference[] = [];

  /**
   * in-progress | on-hold | completed | entered-in-error | stopped | unknown
   *
   * @generated from field: google.fhir.stu3.proto.MedicationAdministrationStatusCode status = 12;
   */
  status?: MedicationAdministrationStatusCode;

  /**
   * Type of medication usage
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 13;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationAdministration.Medication medication = 14;
   */
  medication?: MedicationAdministration_Medication;

  /**
   * Who received medication
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Encounter or Episode of Care administered as part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 16;
   */
  context?: Reference;

  /**
   * Additional information to support administration
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_information = 17;
   */
  supportingInformation: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationAdministration.Effective effective = 18;
   */
  effective?: MedicationAdministration_Effective;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MedicationAdministration.Performer performer = 19;
   */
  performer: MedicationAdministration_Performer[] = [];

  /**
   * True if medication not administered
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_given = 20;
   */
  notGiven?: Boolean;

  /**
   * Reason administration not performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_not_given = 21;
   */
  reasonNotGiven: CodeableConcept[] = [];

  /**
   * Reason administration performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 22;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or Observation that supports why the medication was administered
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 23;
   */
  reasonReference: Reference[] = [];

  /**
   * Request administration performed against
   *
   * @generated from field: google.fhir.stu3.proto.Reference prescription = 24;
   */
  prescription?: Reference;

  /**
   * Device used to administer
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference device = 25;
   */
  device: Reference[] = [];

  /**
   * Information about the administration
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationAdministration.Dosage dosage = 27;
   */
  dosage?: MedicationAdministration_Dosage;

  /**
   * A list of events of interest in the lifecycle
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference event_history = 28;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<MedicationAdministration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "status", kind: "message", T: MedicationAdministrationStatusCode },
    { no: 13, name: "category", kind: "message", T: CodeableConcept },
    { no: 14, name: "medication", kind: "message", T: MedicationAdministration_Medication },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "context", kind: "message", T: Reference },
    { no: 17, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "effective", kind: "message", T: MedicationAdministration_Effective },
    { no: 19, name: "performer", kind: "message", T: MedicationAdministration_Performer, repeated: true },
    { no: 20, name: "not_given", kind: "message", T: Boolean },
    { no: 21, name: "reason_not_given", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "prescription", kind: "message", T: Reference },
    { no: 25, name: "device", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "dosage", kind: "message", T: MedicationAdministration_Dosage },
    { no: 28, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration {
    return new MedicationAdministration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration {
    return new MedicationAdministration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration {
    return new MedicationAdministration().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration | PlainMessage<MedicationAdministration> | undefined, b: MedicationAdministration | PlainMessage<MedicationAdministration> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration, a, b);
  }
}

/**
 * What was administered
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministration.Medication
 */
export class MedicationAdministration_Medication extends Message<MedicationAdministration_Medication> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationAdministration.Medication.medication
   */
  medication: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationAdministration_Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministration.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "medication" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "medication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Medication {
    return new MedicationAdministration_Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Medication {
    return new MedicationAdministration_Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Medication {
    return new MedicationAdministration_Medication().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Medication | PlainMessage<MedicationAdministration_Medication> | undefined, b: MedicationAdministration_Medication | PlainMessage<MedicationAdministration_Medication> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Medication, a, b);
  }
}

/**
 * Start and end time of administration
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministration.Effective
 */
export class MedicationAdministration_Effective extends Message<MedicationAdministration_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationAdministration.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationAdministration_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministration.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Effective {
    return new MedicationAdministration_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Effective {
    return new MedicationAdministration_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Effective {
    return new MedicationAdministration_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Effective | PlainMessage<MedicationAdministration_Effective> | undefined, b: MedicationAdministration_Effective | PlainMessage<MedicationAdministration_Effective> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Effective, a, b);
  }
}

/**
 * Who administered substance
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministration.Performer
 */
export class MedicationAdministration_Performer extends Message<MedicationAdministration_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 4;
   */
  actor?: Reference;

  /**
   * Organization organization was acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<MedicationAdministration_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministration.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "actor", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Performer {
    return new MedicationAdministration_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Performer {
    return new MedicationAdministration_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Performer {
    return new MedicationAdministration_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Performer | PlainMessage<MedicationAdministration_Performer> | undefined, b: MedicationAdministration_Performer | PlainMessage<MedicationAdministration_Performer> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Performer, a, b);
  }
}

/**
 * Details of how medication was taken
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministration.Dosage
 */
export class MedicationAdministration_Dosage extends Message<MedicationAdministration_Dosage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Free text dosage instructions e.g. SIG
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * Body site administered to
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept site = 5;
   */
  site?: CodeableConcept;

  /**
   * Path of substance into body
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept route = 6;
   */
  route?: CodeableConcept;

  /**
   * How drug was administered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 7;
   */
  method?: CodeableConcept;

  /**
   * Amount of medication per dose
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity dose = 8;
   */
  dose?: SimpleQuantity;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationAdministration.Dosage.Rate rate = 9;
   */
  rate?: MedicationAdministration_Dosage_Rate;

  constructor(data?: PartialMessage<MedicationAdministration_Dosage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministration.Dosage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "site", kind: "message", T: CodeableConcept },
    { no: 6, name: "route", kind: "message", T: CodeableConcept },
    { no: 7, name: "method", kind: "message", T: CodeableConcept },
    { no: 8, name: "dose", kind: "message", T: SimpleQuantity },
    { no: 9, name: "rate", kind: "message", T: MedicationAdministration_Dosage_Rate },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Dosage {
    return new MedicationAdministration_Dosage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage {
    return new MedicationAdministration_Dosage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage {
    return new MedicationAdministration_Dosage().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Dosage | PlainMessage<MedicationAdministration_Dosage> | undefined, b: MedicationAdministration_Dosage | PlainMessage<MedicationAdministration_Dosage> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Dosage, a, b);
  }
}

/**
 * Dose quantity per unit of time
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministration.Dosage.Rate
 */
export class MedicationAdministration_Dosage_Rate extends Message<MedicationAdministration_Dosage_Rate> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationAdministration.Dosage.Rate.rate
   */
  rate: {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 1;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 2;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationAdministration_Dosage_Rate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministration.Dosage.Rate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ratio", kind: "message", T: Ratio, oneof: "rate" },
    { no: 2, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "rate" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Dosage_Rate {
    return new MedicationAdministration_Dosage_Rate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage_Rate {
    return new MedicationAdministration_Dosage_Rate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage_Rate {
    return new MedicationAdministration_Dosage_Rate().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Dosage_Rate | PlainMessage<MedicationAdministration_Dosage_Rate> | undefined, b: MedicationAdministration_Dosage_Rate | PlainMessage<MedicationAdministration_Dosage_Rate> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Dosage_Rate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MedicationDispense, last updated
 * 2017-04-19T07:44:43.294+10:00. Dispensing a medication to a named patient.
 * See http://hl7.org/fhir/StructureDefinition/MedicationDispense
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispense
 */
export class MedicationDispense extends Message<MedicationDispense> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Event that dispense is part of
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 10;
   */
  partOf: Reference[] = [];

  /**
   * preparation | in-progress | on-hold | completed | entered-in-error |
   * stopped
   *
   * @generated from field: google.fhir.stu3.proto.MedicationDispenseStatusCode status = 11;
   */
  status?: MedicationDispenseStatusCode;

  /**
   * Type of medication dispense
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationDispense.Medication medication = 13;
   */
  medication?: MedicationDispense_Medication;

  /**
   * Who the dispense is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Encounter / Episode associated with event
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * Information that supports the dispensing of the medication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_information = 16;
   */
  supportingInformation: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MedicationDispense.Performer performer = 17;
   */
  performer: MedicationDispense_Performer[] = [];

  /**
   * Medication order that authorizes the dispense
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference authorizing_prescription = 18;
   */
  authorizingPrescription: Reference[] = [];

  /**
   * Trial fill, partial fill, emergency fill, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 19;
   */
  type?: CodeableConcept;

  /**
   * Amount dispensed
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 20;
   */
  quantity?: SimpleQuantity;

  /**
   * Amount of medication expressed as a timing amount
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity days_supply = 21;
   */
  daysSupply?: SimpleQuantity;

  /**
   * When product was packaged and reviewed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime when_prepared = 22;
   */
  whenPrepared?: DateTime;

  /**
   * When product was given out
   *
   * @generated from field: google.fhir.stu3.proto.DateTime when_handed_over = 23;
   */
  whenHandedOver?: DateTime;

  /**
   * Where the medication was sent
   *
   * @generated from field: google.fhir.stu3.proto.Reference destination = 24;
   */
  destination?: Reference;

  /**
   * Who collected the medication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference receiver = 25;
   */
  receiver: Reference[] = [];

  /**
   * Information about the dispense
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * How the medication is to be used by the patient or administered by the
   * caregiver
   *
   * @generated from field: repeated google.fhir.stu3.proto.Dosage dosage_instruction = 27;
   */
  dosageInstruction: Dosage[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationDispense.Substitution substitution = 28;
   */
  substitution?: MedicationDispense_Substitution;

  /**
   * Clinical issue with action
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detected_issue = 29;
   */
  detectedIssue: Reference[] = [];

  /**
   * Whether the dispense was or was not performed
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_done = 30;
   */
  notDone?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationDispense.NotDoneReason not_done_reason = 31;
   */
  notDoneReason?: MedicationDispense_NotDoneReason;

  /**
   * A list of releveant lifecycle events
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference event_history = 32;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<MedicationDispense>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispense";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: MedicationDispenseStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "medication", kind: "message", T: MedicationDispense_Medication },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "performer", kind: "message", T: MedicationDispense_Performer, repeated: true },
    { no: 18, name: "authorizing_prescription", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "type", kind: "message", T: CodeableConcept },
    { no: 20, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 21, name: "days_supply", kind: "message", T: SimpleQuantity },
    { no: 22, name: "when_prepared", kind: "message", T: DateTime },
    { no: 23, name: "when_handed_over", kind: "message", T: DateTime },
    { no: 24, name: "destination", kind: "message", T: Reference },
    { no: 25, name: "receiver", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "dosage_instruction", kind: "message", T: Dosage, repeated: true },
    { no: 28, name: "substitution", kind: "message", T: MedicationDispense_Substitution },
    { no: 29, name: "detected_issue", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "not_done", kind: "message", T: Boolean },
    { no: 31, name: "not_done_reason", kind: "message", T: MedicationDispense_NotDoneReason },
    { no: 32, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispense {
    return new MedicationDispense().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispense {
    return new MedicationDispense().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispense {
    return new MedicationDispense().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispense | PlainMessage<MedicationDispense> | undefined, b: MedicationDispense | PlainMessage<MedicationDispense> | undefined): boolean {
    return proto3.util.equals(MedicationDispense, a, b);
  }
}

/**
 * What medication was supplied
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispense.Medication
 */
export class MedicationDispense_Medication extends Message<MedicationDispense_Medication> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationDispense.Medication.medication
   */
  medication: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationDispense_Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispense.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "medication" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "medication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispense_Medication {
    return new MedicationDispense_Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispense_Medication {
    return new MedicationDispense_Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispense_Medication {
    return new MedicationDispense_Medication().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispense_Medication | PlainMessage<MedicationDispense_Medication> | undefined, b: MedicationDispense_Medication | PlainMessage<MedicationDispense_Medication> | undefined): boolean {
    return proto3.util.equals(MedicationDispense_Medication, a, b);
  }
}

/**
 * Who performed event
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispense.Performer
 */
export class MedicationDispense_Performer extends Message<MedicationDispense_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 4;
   */
  actor?: Reference;

  /**
   * Organization organization was acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<MedicationDispense_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispense.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "actor", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispense_Performer {
    return new MedicationDispense_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispense_Performer {
    return new MedicationDispense_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispense_Performer {
    return new MedicationDispense_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispense_Performer | PlainMessage<MedicationDispense_Performer> | undefined, b: MedicationDispense_Performer | PlainMessage<MedicationDispense_Performer> | undefined): boolean {
    return proto3.util.equals(MedicationDispense_Performer, a, b);
  }
}

/**
 * Whether a substitution was performed on the dispense
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispense.Substitution
 */
export class MedicationDispense_Substitution extends Message<MedicationDispense_Substitution> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether a substitution was or was not performed on the dispense
   *
   * @generated from field: google.fhir.stu3.proto.Boolean was_substituted = 4;
   */
  wasSubstituted?: Boolean;

  /**
   * Code signifying whether a different drug was dispensed from what was
   * prescribed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Why was substitution made
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 6;
   */
  reason: CodeableConcept[] = [];

  /**
   * Who is responsible for the substitution
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference responsible_party = 7;
   */
  responsibleParty: Reference[] = [];

  constructor(data?: PartialMessage<MedicationDispense_Substitution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispense.Substitution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "was_substituted", kind: "message", T: Boolean },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "responsible_party", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispense_Substitution {
    return new MedicationDispense_Substitution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispense_Substitution {
    return new MedicationDispense_Substitution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispense_Substitution {
    return new MedicationDispense_Substitution().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispense_Substitution | PlainMessage<MedicationDispense_Substitution> | undefined, b: MedicationDispense_Substitution | PlainMessage<MedicationDispense_Substitution> | undefined): boolean {
    return proto3.util.equals(MedicationDispense_Substitution, a, b);
  }
}

/**
 * Why a dispense was not performed
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispense.NotDoneReason
 */
export class MedicationDispense_NotDoneReason extends Message<MedicationDispense_NotDoneReason> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationDispense.NotDoneReason.not_done_reason
   */
  notDoneReason: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationDispense_NotDoneReason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispense.NotDoneReason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "not_done_reason" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "not_done_reason" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispense_NotDoneReason {
    return new MedicationDispense_NotDoneReason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispense_NotDoneReason {
    return new MedicationDispense_NotDoneReason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispense_NotDoneReason {
    return new MedicationDispense_NotDoneReason().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispense_NotDoneReason | PlainMessage<MedicationDispense_NotDoneReason> | undefined, b: MedicationDispense_NotDoneReason | PlainMessage<MedicationDispense_NotDoneReason> | undefined): boolean {
    return proto3.util.equals(MedicationDispense_NotDoneReason, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MedicationRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. Ordering of medication for patient or group.
 * See http://hl7.org/fhir/StructureDefinition/MedicationRequest
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequest
 */
export class MedicationRequest extends Message<MedicationRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 12;
   */
  groupIdentifier?: Identifier;

  /**
   * active | on-hold | cancelled | completed | entered-in-error | stopped |
   * draft | unknown
   *
   * @generated from field: google.fhir.stu3.proto.MedicationRequestStatusCode status = 13;
   */
  status?: MedicationRequestStatusCode;

  /**
   * proposal | plan | order | instance-order
   *
   * @generated from field: google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14;
   */
  intent?: MedicationRequestIntentCode;

  /**
   * Type of medication usage
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 15;
   */
  category?: CodeableConcept;

  /**
   * routine | urgent | stat | asap
   *
   * @generated from field: google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
   */
  priority?: MedicationRequestPriorityCode;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequest.Medication medication = 17;
   */
  medication?: MedicationRequest_Medication;

  /**
   * Who or group medication request is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Created during encounter/admission/stay
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 19;
   */
  context?: Reference;

  /**
   * Information to support ordering of the medication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_information = 20;
   */
  supportingInformation: Reference[] = [];

  /**
   * When request was initially authored
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 21;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequest.Requester requester = 22;
   */
  requester?: MedicationRequest_Requester;

  /**
   * Person who entered the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference recorder = 23;
   */
  recorder?: Reference;

  /**
   * Reason or indication for writing the prescription
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 24;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or Observation that supports why the prescription is being
   * written
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 25;
   */
  reasonReference: Reference[] = [];

  /**
   * Information about the prescription
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * How the medication should be taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.Dosage dosage_instruction = 27;
   */
  dosageInstruction: Dosage[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequest.DispenseRequest dispense_request = 28;
   */
  dispenseRequest?: MedicationRequest_DispenseRequest;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequest.Substitution substitution = 29;
   */
  substitution?: MedicationRequest_Substitution;

  /**
   * An order/prescription that is being replaced
   *
   * @generated from field: google.fhir.stu3.proto.Reference prior_prescription = 30;
   */
  priorPrescription?: Reference;

  /**
   * Clinical Issue with action
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detected_issue = 31;
   */
  detectedIssue: Reference[] = [];

  /**
   * A list of events of interest in the lifecycle
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference event_history = 32;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<MedicationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "group_identifier", kind: "message", T: Identifier },
    { no: 13, name: "status", kind: "message", T: MedicationRequestStatusCode },
    { no: 14, name: "intent", kind: "message", T: MedicationRequestIntentCode },
    { no: 15, name: "category", kind: "message", T: CodeableConcept },
    { no: 16, name: "priority", kind: "message", T: MedicationRequestPriorityCode },
    { no: 17, name: "medication", kind: "message", T: MedicationRequest_Medication },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "context", kind: "message", T: Reference },
    { no: 20, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "authored_on", kind: "message", T: DateTime },
    { no: 22, name: "requester", kind: "message", T: MedicationRequest_Requester },
    { no: 23, name: "recorder", kind: "message", T: Reference },
    { no: 24, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "dosage_instruction", kind: "message", T: Dosage, repeated: true },
    { no: 28, name: "dispense_request", kind: "message", T: MedicationRequest_DispenseRequest },
    { no: 29, name: "substitution", kind: "message", T: MedicationRequest_Substitution },
    { no: 30, name: "prior_prescription", kind: "message", T: Reference },
    { no: 31, name: "detected_issue", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest {
    return new MedicationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest {
    return new MedicationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest {
    return new MedicationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest | PlainMessage<MedicationRequest> | undefined, b: MedicationRequest | PlainMessage<MedicationRequest> | undefined): boolean {
    return proto3.util.equals(MedicationRequest, a, b);
  }
}

/**
 * Medication to be taken
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequest.Medication
 */
export class MedicationRequest_Medication extends Message<MedicationRequest_Medication> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationRequest.Medication.medication
   */
  medication: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationRequest_Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequest.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "medication" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "medication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_Medication {
    return new MedicationRequest_Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_Medication {
    return new MedicationRequest_Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_Medication {
    return new MedicationRequest_Medication().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_Medication | PlainMessage<MedicationRequest_Medication> | undefined, b: MedicationRequest_Medication | PlainMessage<MedicationRequest_Medication> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_Medication, a, b);
  }
}

/**
 * Who/What requested the Request
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequest.Requester
 */
export class MedicationRequest_Requester extends Message<MedicationRequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Who ordered the initial medication(s)
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<MedicationRequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_Requester {
    return new MedicationRequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_Requester {
    return new MedicationRequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_Requester {
    return new MedicationRequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_Requester | PlainMessage<MedicationRequest_Requester> | undefined, b: MedicationRequest_Requester | PlainMessage<MedicationRequest_Requester> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_Requester, a, b);
  }
}

/**
 * Medication supply authorization
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequest.DispenseRequest
 */
export class MedicationRequest_DispenseRequest extends Message<MedicationRequest_DispenseRequest> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Time period supply is authorized for
   *
   * @generated from field: google.fhir.stu3.proto.Period validity_period = 4;
   */
  validityPeriod?: Period;

  /**
   * Number of refills authorized
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
   */
  numberOfRepeatsAllowed?: PositiveInt;

  /**
   * Amount of medication to supply per dispense
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Number of days supply per dispense
   *
   * @generated from field: google.fhir.stu3.proto.Duration expected_supply_duration = 7;
   */
  expectedSupplyDuration?: Duration;

  /**
   * Intended dispenser
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 8;
   */
  performer?: Reference;

  constructor(data?: PartialMessage<MedicationRequest_DispenseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequest.DispenseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "validity_period", kind: "message", T: Period },
    { no: 5, name: "number_of_repeats_allowed", kind: "message", T: PositiveInt },
    { no: 6, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 7, name: "expected_supply_duration", kind: "message", T: Duration },
    { no: 8, name: "performer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_DispenseRequest {
    return new MedicationRequest_DispenseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_DispenseRequest {
    return new MedicationRequest_DispenseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_DispenseRequest {
    return new MedicationRequest_DispenseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_DispenseRequest | PlainMessage<MedicationRequest_DispenseRequest> | undefined, b: MedicationRequest_DispenseRequest | PlainMessage<MedicationRequest_DispenseRequest> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_DispenseRequest, a, b);
  }
}

/**
 * Any restrictions on medication substitution
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequest.Substitution
 */
export class MedicationRequest_Substitution extends Message<MedicationRequest_Substitution> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether substitution is allowed or not
   *
   * @generated from field: google.fhir.stu3.proto.Boolean allowed = 4;
   */
  allowed?: Boolean;

  /**
   * Why should (not) substitution be made
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  constructor(data?: PartialMessage<MedicationRequest_Substitution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequest.Substitution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "allowed", kind: "message", T: Boolean },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_Substitution {
    return new MedicationRequest_Substitution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_Substitution {
    return new MedicationRequest_Substitution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_Substitution {
    return new MedicationRequest_Substitution().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_Substitution | PlainMessage<MedicationRequest_Substitution> | undefined, b: MedicationRequest_Substitution | PlainMessage<MedicationRequest_Substitution> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_Substitution, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MedicationStatement, last updated
 * 2017-04-19T07:44:43.294+10:00. Record of medication being taken by a patient.
 * See http://hl7.org/fhir/StructureDefinition/MedicationStatement
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatement
 */
export class MedicationStatement extends Message<MedicationStatement> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfils plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 11;
   */
  partOf: Reference[] = [];

  /**
   * Encounter / Episode associated with MedicationStatement
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 12;
   */
  context?: Reference;

  /**
   * active | completed | entered-in-error | intended | stopped | on-hold
   *
   * @generated from field: google.fhir.stu3.proto.MedicationStatementStatusCode status = 13;
   */
  status?: MedicationStatementStatusCode;

  /**
   * Type of medication usage
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 14;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationStatement.Medication medication = 15;
   */
  medication?: MedicationStatement_Medication;

  /**
   * @generated from field: google.fhir.stu3.proto.MedicationStatement.Effective effective = 16;
   */
  effective?: MedicationStatement_Effective;

  /**
   * When the statement was asserted?
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date_asserted = 17;
   */
  dateAsserted?: DateTime;

  /**
   * Person or organization that provided the information about the taking of
   * this medication
   *
   * @generated from field: google.fhir.stu3.proto.Reference information_source = 18;
   */
  informationSource?: Reference;

  /**
   * Who is/was taking  the medication
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Additional supporting information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference derived_from = 20;
   */
  derivedFrom: Reference[] = [];

  /**
   * y | n | unk | na
   *
   * @generated from field: google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21;
   */
  taken?: MedicationStatementTakenCode;

  /**
   * True if asserting medication was not given
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
   */
  reasonNotTaken: CodeableConcept[] = [];

  /**
   * Reason for why the medication is being/was taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 23;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or observation that supports why the medication is being/was
   * taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 24;
   */
  reasonReference: Reference[] = [];

  /**
   * Further information about the statement
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Details of how medication is/was taken or should be taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.Dosage dosage = 26;
   */
  dosage: Dosage[] = [];

  constructor(data?: PartialMessage<MedicationStatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "context", kind: "message", T: Reference },
    { no: 13, name: "status", kind: "message", T: MedicationStatementStatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept },
    { no: 15, name: "medication", kind: "message", T: MedicationStatement_Medication },
    { no: 16, name: "effective", kind: "message", T: MedicationStatement_Effective },
    { no: 17, name: "date_asserted", kind: "message", T: DateTime },
    { no: 18, name: "information_source", kind: "message", T: Reference },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "taken", kind: "message", T: MedicationStatementTakenCode },
    { no: 22, name: "reason_not_taken", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "dosage", kind: "message", T: Dosage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatement {
    return new MedicationStatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatement {
    return new MedicationStatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatement {
    return new MedicationStatement().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatement | PlainMessage<MedicationStatement> | undefined, b: MedicationStatement | PlainMessage<MedicationStatement> | undefined): boolean {
    return proto3.util.equals(MedicationStatement, a, b);
  }
}

/**
 * What medication was taken
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatement.Medication
 */
export class MedicationStatement_Medication extends Message<MedicationStatement_Medication> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationStatement.Medication.medication
   */
  medication: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationStatement_Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatement.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "medication" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "medication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatement_Medication {
    return new MedicationStatement_Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatement_Medication {
    return new MedicationStatement_Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatement_Medication {
    return new MedicationStatement_Medication().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatement_Medication | PlainMessage<MedicationStatement_Medication> | undefined, b: MedicationStatement_Medication | PlainMessage<MedicationStatement_Medication> | undefined): boolean {
    return proto3.util.equals(MedicationStatement_Medication, a, b);
  }
}

/**
 * The date/time or interval when the medication was taken
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatement.Effective
 */
export class MedicationStatement_Effective extends Message<MedicationStatement_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.MedicationStatement.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationStatement_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatement.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatement_Effective {
    return new MedicationStatement_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatement_Effective {
    return new MedicationStatement_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatement_Effective {
    return new MedicationStatement_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatement_Effective | PlainMessage<MedicationStatement_Effective> | undefined, b: MedicationStatement_Effective | PlainMessage<MedicationStatement_Effective> | undefined): boolean {
    return proto3.util.equals(MedicationStatement_Effective, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MessageDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. A resource that defines a type of message that
 * can be exchanged between systems. See
 * http://hl7.org/fhir/StructureDefinition/MessageDefinition
 *
 * @generated from message google.fhir.stu3.proto.MessageDefinition
 */
export class MessageDefinition extends Message<MessageDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this message definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the message definition
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Business version of the message definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this message definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this message definition (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the message definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for message definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this message definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * Definition this one is based on
   *
   * @generated from field: google.fhir.stu3.proto.Reference base = 24;
   */
  base?: Reference;

  /**
   * Protocol/workflow this is part of
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference parent = 25;
   */
  parent: Reference[] = [];

  /**
   * Takes the place of
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 26;
   */
  replaces: Reference[] = [];

  /**
   * Event type
   *
   * @generated from field: google.fhir.stu3.proto.Coding event = 27;
   */
  event?: Coding;

  /**
   * Consequence | Currency | Notification
   *
   * @generated from field: google.fhir.stu3.proto.MessageSignificanceCategoryCode category = 28;
   */
  category?: MessageSignificanceCategoryCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MessageDefinition.Focus focus = 29;
   */
  focus: MessageDefinition_Focus[] = [];

  /**
   * Is a response required?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean response_required = 30;
   */
  responseRequired?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MessageDefinition.AllowedResponse allowed_response = 31;
   */
  allowedResponse: MessageDefinition_AllowedResponse[] = [];

  constructor(data?: PartialMessage<MessageDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "base", kind: "message", T: Reference },
    { no: 25, name: "parent", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "event", kind: "message", T: Coding },
    { no: 28, name: "category", kind: "message", T: MessageSignificanceCategoryCode },
    { no: 29, name: "focus", kind: "message", T: MessageDefinition_Focus, repeated: true },
    { no: 30, name: "response_required", kind: "message", T: Boolean },
    { no: 31, name: "allowed_response", kind: "message", T: MessageDefinition_AllowedResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition {
    return new MessageDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition {
    return new MessageDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition {
    return new MessageDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition | PlainMessage<MessageDefinition> | undefined, b: MessageDefinition | PlainMessage<MessageDefinition> | undefined): boolean {
    return proto3.util.equals(MessageDefinition, a, b);
  }
}

/**
 * Resource(s) that are the subject of the event
 *
 * @generated from message google.fhir.stu3.proto.MessageDefinition.Focus
 */
export class MessageDefinition_Focus extends Message<MessageDefinition_Focus> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of resource
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode code = 4;
   */
  code?: ResourceTypeCode;

  /**
   * Profile that must be adhered to by focus
   *
   * @generated from field: google.fhir.stu3.proto.Reference profile = 5;
   */
  profile?: Reference;

  /**
   * Minimum number of focuses of this type
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt min = 6;
   */
  min?: UnsignedInt;

  /**
   * Maximum number of focuses of this type
   *
   * @generated from field: google.fhir.stu3.proto.String max = 7;
   */
  max?: String;

  constructor(data?: PartialMessage<MessageDefinition_Focus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageDefinition.Focus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: ResourceTypeCode },
    { no: 5, name: "profile", kind: "message", T: Reference },
    { no: 6, name: "min", kind: "message", T: UnsignedInt },
    { no: 7, name: "max", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_Focus {
    return new MessageDefinition_Focus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_Focus {
    return new MessageDefinition_Focus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_Focus {
    return new MessageDefinition_Focus().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_Focus | PlainMessage<MessageDefinition_Focus> | undefined, b: MessageDefinition_Focus | PlainMessage<MessageDefinition_Focus> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_Focus, a, b);
  }
}

/**
 * Responses to this message
 *
 * @generated from message google.fhir.stu3.proto.MessageDefinition.AllowedResponse
 */
export class MessageDefinition_AllowedResponse extends Message<MessageDefinition_AllowedResponse> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to allowed message definition response
   *
   * @generated from field: google.fhir.stu3.proto.Reference message = 4;
   */
  message?: Reference;

  /**
   * When should this response be used
   *
   * @generated from field: google.fhir.stu3.proto.Markdown situation = 5;
   */
  situation?: Markdown;

  constructor(data?: PartialMessage<MessageDefinition_AllowedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageDefinition.AllowedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "message", kind: "message", T: Reference },
    { no: 5, name: "situation", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_AllowedResponse {
    return new MessageDefinition_AllowedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_AllowedResponse {
    return new MessageDefinition_AllowedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_AllowedResponse {
    return new MessageDefinition_AllowedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_AllowedResponse | PlainMessage<MessageDefinition_AllowedResponse> | undefined, b: MessageDefinition_AllowedResponse | PlainMessage<MessageDefinition_AllowedResponse> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_AllowedResponse, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MessageHeader, last updated
 * 2017-04-19T07:44:43.294+10:00. A resource that describes a message that is
 * exchanged between systems. See
 * http://hl7.org/fhir/StructureDefinition/MessageHeader
 *
 * @generated from message google.fhir.stu3.proto.MessageHeader
 */
export class MessageHeader extends Message<MessageHeader> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code for the event this message represents
   *
   * @generated from field: google.fhir.stu3.proto.Coding event = 9;
   */
  event?: Coding;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.MessageHeader.MessageDestination destination = 10;
   */
  destination: MessageHeader_MessageDestination[] = [];

  /**
   * Intended "real-world" recipient for the data
   *
   * @generated from field: google.fhir.stu3.proto.Reference receiver = 11;
   */
  receiver?: Reference;

  /**
   * Real world sender of the message
   *
   * @generated from field: google.fhir.stu3.proto.Reference sender = 12;
   */
  sender?: Reference;

  /**
   * Time that the message was sent
   *
   * @generated from field: google.fhir.stu3.proto.Instant timestamp = 13;
   */
  timestamp?: Instant;

  /**
   * The source of the data entry
   *
   * @generated from field: google.fhir.stu3.proto.Reference enterer = 14;
   */
  enterer?: Reference;

  /**
   * The source of the decision
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 15;
   */
  author?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.MessageHeader.MessageSource source = 16;
   */
  source?: MessageHeader_MessageSource;

  /**
   * Final responsibility for event
   *
   * @generated from field: google.fhir.stu3.proto.Reference responsible = 17;
   */
  responsible?: Reference;

  /**
   * Cause of event
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 18;
   */
  reason?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.MessageHeader.Response response = 19;
   */
  response?: MessageHeader_Response;

  /**
   * The actual content of the message
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference focus = 20;
   */
  focus: Reference[] = [];

  constructor(data?: PartialMessage<MessageHeader>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageHeader";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "event", kind: "message", T: Coding },
    { no: 10, name: "destination", kind: "message", T: MessageHeader_MessageDestination, repeated: true },
    { no: 11, name: "receiver", kind: "message", T: Reference },
    { no: 12, name: "sender", kind: "message", T: Reference },
    { no: 13, name: "timestamp", kind: "message", T: Instant },
    { no: 14, name: "enterer", kind: "message", T: Reference },
    { no: 15, name: "author", kind: "message", T: Reference },
    { no: 16, name: "source", kind: "message", T: MessageHeader_MessageSource },
    { no: 17, name: "responsible", kind: "message", T: Reference },
    { no: 18, name: "reason", kind: "message", T: CodeableConcept },
    { no: 19, name: "response", kind: "message", T: MessageHeader_Response },
    { no: 20, name: "focus", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeader {
    return new MessageHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeader {
    return new MessageHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeader {
    return new MessageHeader().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeader | PlainMessage<MessageHeader> | undefined, b: MessageHeader | PlainMessage<MessageHeader> | undefined): boolean {
    return proto3.util.equals(MessageHeader, a, b);
  }
}

/**
 * Message destination application(s)
 *
 * @generated from message google.fhir.stu3.proto.MessageHeader.MessageDestination
 */
export class MessageHeader_MessageDestination extends Message<MessageHeader_MessageDestination> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of system
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Particular delivery destination within the destination
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  /**
   * Actual destination address or id
   *
   * @generated from field: google.fhir.stu3.proto.Uri endpoint = 6;
   */
  endpoint?: Uri;

  constructor(data?: PartialMessage<MessageHeader_MessageDestination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageHeader.MessageDestination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "target", kind: "message", T: Reference },
    { no: 6, name: "endpoint", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeader_MessageDestination {
    return new MessageHeader_MessageDestination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeader_MessageDestination {
    return new MessageHeader_MessageDestination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeader_MessageDestination {
    return new MessageHeader_MessageDestination().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeader_MessageDestination | PlainMessage<MessageHeader_MessageDestination> | undefined, b: MessageHeader_MessageDestination | PlainMessage<MessageHeader_MessageDestination> | undefined): boolean {
    return proto3.util.equals(MessageHeader_MessageDestination, a, b);
  }
}

/**
 * Message source application
 *
 * @generated from message google.fhir.stu3.proto.MessageHeader.MessageSource
 */
export class MessageHeader_MessageSource extends Message<MessageHeader_MessageSource> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of system
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Name of software running the system
   *
   * @generated from field: google.fhir.stu3.proto.String software = 5;
   */
  software?: String;

  /**
   * Version of software running
   *
   * @generated from field: google.fhir.stu3.proto.String version = 6;
   */
  version?: String;

  /**
   * Human contact for problems
   *
   * @generated from field: google.fhir.stu3.proto.ContactPoint contact = 7;
   */
  contact?: ContactPoint;

  /**
   * Actual message source address or id
   *
   * @generated from field: google.fhir.stu3.proto.Uri endpoint = 8;
   */
  endpoint?: Uri;

  constructor(data?: PartialMessage<MessageHeader_MessageSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageHeader.MessageSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "software", kind: "message", T: String },
    { no: 6, name: "version", kind: "message", T: String },
    { no: 7, name: "contact", kind: "message", T: ContactPoint },
    { no: 8, name: "endpoint", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeader_MessageSource {
    return new MessageHeader_MessageSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeader_MessageSource {
    return new MessageHeader_MessageSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeader_MessageSource {
    return new MessageHeader_MessageSource().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeader_MessageSource | PlainMessage<MessageHeader_MessageSource> | undefined, b: MessageHeader_MessageSource | PlainMessage<MessageHeader_MessageSource> | undefined): boolean {
    return proto3.util.equals(MessageHeader_MessageSource, a, b);
  }
}

/**
 * If this is a reply to prior message
 *
 * @generated from message google.fhir.stu3.proto.MessageHeader.Response
 */
export class MessageHeader_Response extends Message<MessageHeader_Response> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Id of original message
   *
   * @generated from field: google.fhir.stu3.proto.Id identifier = 4;
   */
  identifier?: Id;

  /**
   * ok | transient-error | fatal-error
   *
   * @generated from field: google.fhir.stu3.proto.ResponseTypeCode code = 5;
   */
  code?: ResponseTypeCode;

  /**
   * Specific list of hints/warnings/errors
   *
   * @generated from field: google.fhir.stu3.proto.Reference details = 6;
   */
  details?: Reference;

  constructor(data?: PartialMessage<MessageHeader_Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageHeader.Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Id },
    { no: 5, name: "code", kind: "message", T: ResponseTypeCode },
    { no: 6, name: "details", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeader_Response {
    return new MessageHeader_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeader_Response {
    return new MessageHeader_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeader_Response {
    return new MessageHeader_Response().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeader_Response | PlainMessage<MessageHeader_Response> | undefined, b: MessageHeader_Response | PlainMessage<MessageHeader_Response> | undefined): boolean {
    return proto3.util.equals(MessageHeader_Response, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for NamingSystem, last updated
 * 2017-04-19T07:44:43.294+10:00. System of unique identification. See
 * http://hl7.org/fhir/StructureDefinition/NamingSystem
 *
 * @generated from message google.fhir.stu3.proto.NamingSystem
 */
export class NamingSystem extends Message<NamingSystem> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name for this naming system (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 9;
   */
  name?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 10;
   */
  status?: PublicationStatusCode;

  /**
   * codesystem | identifier | root
   *
   * @generated from field: google.fhir.stu3.proto.NamingSystemTypeCode kind = 11;
   */
  kind?: NamingSystemTypeCode;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 12;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 13;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 14;
   */
  contact: ContactDetail[] = [];

  /**
   * Who maintains system namespace?
   *
   * @generated from field: google.fhir.stu3.proto.String responsible = 15;
   */
  responsible?: String;

  /**
   * e.g. driver,  provider,  patient, bank etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 16;
   */
  type?: CodeableConcept;

  /**
   * Natural language description of the naming system
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 17;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 18;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for naming system (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 19;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * How/where is it used
   *
   * @generated from field: google.fhir.stu3.proto.String usage = 20;
   */
  usage?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.NamingSystem.UniqueId unique_id = 21;
   */
  uniqueId: NamingSystem_UniqueId[] = [];

  /**
   * Use this instead
   *
   * @generated from field: google.fhir.stu3.proto.Reference replaced_by = 22;
   */
  replacedBy?: Reference;

  constructor(data?: PartialMessage<NamingSystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NamingSystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "name", kind: "message", T: String },
    { no: 10, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 11, name: "kind", kind: "message", T: NamingSystemTypeCode },
    { no: 12, name: "date", kind: "message", T: DateTime },
    { no: 13, name: "publisher", kind: "message", T: String },
    { no: 14, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 15, name: "responsible", kind: "message", T: String },
    { no: 16, name: "type", kind: "message", T: CodeableConcept },
    { no: 17, name: "description", kind: "message", T: Markdown },
    { no: 18, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 19, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "usage", kind: "message", T: String },
    { no: 21, name: "unique_id", kind: "message", T: NamingSystem_UniqueId, repeated: true },
    { no: 22, name: "replaced_by", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NamingSystem {
    return new NamingSystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NamingSystem {
    return new NamingSystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NamingSystem {
    return new NamingSystem().fromJsonString(jsonString, options);
  }

  static equals(a: NamingSystem | PlainMessage<NamingSystem> | undefined, b: NamingSystem | PlainMessage<NamingSystem> | undefined): boolean {
    return proto3.util.equals(NamingSystem, a, b);
  }
}

/**
 * Unique identifiers used for system
 *
 * @generated from message google.fhir.stu3.proto.NamingSystem.UniqueId
 */
export class NamingSystem_UniqueId extends Message<NamingSystem_UniqueId> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * oid | uuid | uri | other
   *
   * @generated from field: google.fhir.stu3.proto.NamingSystemIdentifierTypeCode type = 4;
   */
  type?: NamingSystemIdentifierTypeCode;

  /**
   * The unique identifier
   *
   * @generated from field: google.fhir.stu3.proto.String value = 5;
   */
  value?: String;

  /**
   * Is this the id that should be used for this type
   *
   * @generated from field: google.fhir.stu3.proto.Boolean preferred = 6;
   */
  preferred?: Boolean;

  /**
   * Notes about identifier usage
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 7;
   */
  comment?: String;

  /**
   * When is identifier valid?
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 8;
   */
  period?: Period;

  constructor(data?: PartialMessage<NamingSystem_UniqueId>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NamingSystem.UniqueId";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: NamingSystemIdentifierTypeCode },
    { no: 5, name: "value", kind: "message", T: String },
    { no: 6, name: "preferred", kind: "message", T: Boolean },
    { no: 7, name: "comment", kind: "message", T: String },
    { no: 8, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NamingSystem_UniqueId {
    return new NamingSystem_UniqueId().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NamingSystem_UniqueId {
    return new NamingSystem_UniqueId().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NamingSystem_UniqueId {
    return new NamingSystem_UniqueId().fromJsonString(jsonString, options);
  }

  static equals(a: NamingSystem_UniqueId | PlainMessage<NamingSystem_UniqueId> | undefined, b: NamingSystem_UniqueId | PlainMessage<NamingSystem_UniqueId> | undefined): boolean {
    return proto3.util.equals(NamingSystem_UniqueId, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for NutritionOrder, last updated
 * 2017-04-19T07:44:43.294+10:00. Diet, formula or nutritional supplement
 * request. See http://hl7.org/fhir/StructureDefinition/NutritionOrder
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder
 */
export class NutritionOrder extends Message<NutritionOrder> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifiers assigned to this order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * proposed | draft | planned | requested | active | on-hold | completed |
   * cancelled | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.NutritionOrderStatusCode status = 10;
   */
  status?: NutritionOrderStatusCode;

  /**
   * The person who requires the diet, formula or nutritional supplement
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 11;
   */
  patient?: Reference;

  /**
   * The encounter associated with this nutrition order
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 12;
   */
  encounter?: Reference;

  /**
   * Date and time the nutrition order was requested
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date_time = 13;
   */
  dateTime?: DateTime;

  /**
   * Who ordered the diet, formula or nutritional supplement
   *
   * @generated from field: google.fhir.stu3.proto.Reference orderer = 14;
   */
  orderer?: Reference;

  /**
   * List of the patient's food and nutrition-related allergies and intolerances
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference allergy_intolerance = 15;
   */
  allergyIntolerance: Reference[] = [];

  /**
   * Order-specific modifier about the type of food that should be given
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept food_preference_modifier = 16;
   */
  foodPreferenceModifier: CodeableConcept[] = [];

  /**
   * Order-specific modifier about the type of food that should not be given
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept exclude_food_modifier = 17;
   */
  excludeFoodModifier: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.NutritionOrder.OralDiet oral_diet = 18;
   */
  oralDiet?: NutritionOrder_OralDiet;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.NutritionOrder.Supplement supplement = 19;
   */
  supplement: NutritionOrder_Supplement[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.NutritionOrder.EnteralFormula enteral_formula = 20;
   */
  enteralFormula?: NutritionOrder_EnteralFormula;

  constructor(data?: PartialMessage<NutritionOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: NutritionOrderStatusCode },
    { no: 11, name: "patient", kind: "message", T: Reference },
    { no: 12, name: "encounter", kind: "message", T: Reference },
    { no: 13, name: "date_time", kind: "message", T: DateTime },
    { no: 14, name: "orderer", kind: "message", T: Reference },
    { no: 15, name: "allergy_intolerance", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "food_preference_modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "exclude_food_modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "oral_diet", kind: "message", T: NutritionOrder_OralDiet },
    { no: 19, name: "supplement", kind: "message", T: NutritionOrder_Supplement, repeated: true },
    { no: 20, name: "enteral_formula", kind: "message", T: NutritionOrder_EnteralFormula },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder {
    return new NutritionOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder {
    return new NutritionOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder {
    return new NutritionOrder().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder | PlainMessage<NutritionOrder> | undefined, b: NutritionOrder | PlainMessage<NutritionOrder> | undefined): boolean {
    return proto3.util.equals(NutritionOrder, a, b);
  }
}

/**
 * Oral diet components
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.OralDiet
 */
export class NutritionOrder_OralDiet extends Message<NutritionOrder_OralDiet> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of oral diet or diet restrictions that describe what can be consumed
   * orally
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type: CodeableConcept[] = [];

  /**
   * Scheduled frequency of diet
   *
   * @generated from field: repeated google.fhir.stu3.proto.Timing schedule = 5;
   */
  schedule: Timing[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.NutritionOrder.OralDiet.Nutrient nutrient = 6;
   */
  nutrient: NutritionOrder_OralDiet_Nutrient[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.NutritionOrder.OralDiet.Texture texture = 7;
   */
  texture: NutritionOrder_OralDiet_Texture[] = [];

  /**
   * The required consistency of fluids and liquids provided to the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept fluid_consistency_type = 8;
   */
  fluidConsistencyType: CodeableConcept[] = [];

  /**
   * Instructions or additional information about the oral diet
   *
   * @generated from field: google.fhir.stu3.proto.String instruction = 9;
   */
  instruction?: String;

  constructor(data?: PartialMessage<NutritionOrder_OralDiet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.OralDiet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "schedule", kind: "message", T: Timing, repeated: true },
    { no: 6, name: "nutrient", kind: "message", T: NutritionOrder_OralDiet_Nutrient, repeated: true },
    { no: 7, name: "texture", kind: "message", T: NutritionOrder_OralDiet_Texture, repeated: true },
    { no: 8, name: "fluid_consistency_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "instruction", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_OralDiet {
    return new NutritionOrder_OralDiet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet {
    return new NutritionOrder_OralDiet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet {
    return new NutritionOrder_OralDiet().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_OralDiet | PlainMessage<NutritionOrder_OralDiet> | undefined, b: NutritionOrder_OralDiet | PlainMessage<NutritionOrder_OralDiet> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_OralDiet, a, b);
  }
}

/**
 * Required  nutrient modifications
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.OralDiet.Nutrient
 */
export class NutritionOrder_OralDiet_Nutrient extends Message<NutritionOrder_OralDiet_Nutrient> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of nutrient that is being modified
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept modifier = 4;
   */
  modifier?: CodeableConcept;

  /**
   * Quantity of the specified nutrient
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity amount = 5;
   */
  amount?: SimpleQuantity;

  constructor(data?: PartialMessage<NutritionOrder_OralDiet_Nutrient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.OralDiet.Nutrient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "modifier", kind: "message", T: CodeableConcept },
    { no: 5, name: "amount", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_OralDiet_Nutrient {
    return new NutritionOrder_OralDiet_Nutrient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Nutrient {
    return new NutritionOrder_OralDiet_Nutrient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Nutrient {
    return new NutritionOrder_OralDiet_Nutrient().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_OralDiet_Nutrient | PlainMessage<NutritionOrder_OralDiet_Nutrient> | undefined, b: NutritionOrder_OralDiet_Nutrient | PlainMessage<NutritionOrder_OralDiet_Nutrient> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_OralDiet_Nutrient, a, b);
  }
}

/**
 * Required  texture modifications
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.OralDiet.Texture
 */
export class NutritionOrder_OralDiet_Texture extends Message<NutritionOrder_OralDiet_Texture> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code to indicate how to alter the texture of the foods, e.g. pureed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept modifier = 4;
   */
  modifier?: CodeableConcept;

  /**
   * Concepts that are used to identify an entity that is ingested for
   * nutritional purposes
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept food_type = 5;
   */
  foodType?: CodeableConcept;

  constructor(data?: PartialMessage<NutritionOrder_OralDiet_Texture>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.OralDiet.Texture";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "modifier", kind: "message", T: CodeableConcept },
    { no: 5, name: "food_type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_OralDiet_Texture {
    return new NutritionOrder_OralDiet_Texture().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Texture {
    return new NutritionOrder_OralDiet_Texture().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Texture {
    return new NutritionOrder_OralDiet_Texture().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_OralDiet_Texture | PlainMessage<NutritionOrder_OralDiet_Texture> | undefined, b: NutritionOrder_OralDiet_Texture | PlainMessage<NutritionOrder_OralDiet_Texture> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_OralDiet_Texture, a, b);
  }
}

/**
 * Supplement components
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.Supplement
 */
export class NutritionOrder_Supplement extends Message<NutritionOrder_Supplement> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of supplement product requested
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Product or brand name of the nutritional supplement
   *
   * @generated from field: google.fhir.stu3.proto.String product_name = 5;
   */
  productName?: String;

  /**
   * Scheduled frequency of supplement
   *
   * @generated from field: repeated google.fhir.stu3.proto.Timing schedule = 6;
   */
  schedule: Timing[] = [];

  /**
   * Amount of the nutritional supplement
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 7;
   */
  quantity?: SimpleQuantity;

  /**
   * Instructions or additional information about the oral supplement
   *
   * @generated from field: google.fhir.stu3.proto.String instruction = 8;
   */
  instruction?: String;

  constructor(data?: PartialMessage<NutritionOrder_Supplement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.Supplement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "product_name", kind: "message", T: String },
    { no: 6, name: "schedule", kind: "message", T: Timing, repeated: true },
    { no: 7, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 8, name: "instruction", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_Supplement {
    return new NutritionOrder_Supplement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_Supplement {
    return new NutritionOrder_Supplement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_Supplement {
    return new NutritionOrder_Supplement().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_Supplement | PlainMessage<NutritionOrder_Supplement> | undefined, b: NutritionOrder_Supplement | PlainMessage<NutritionOrder_Supplement> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_Supplement, a, b);
  }
}

/**
 * Enteral formula components
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.EnteralFormula
 */
export class NutritionOrder_EnteralFormula extends Message<NutritionOrder_EnteralFormula> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of enteral or infant formula
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept base_formula_type = 4;
   */
  baseFormulaType?: CodeableConcept;

  /**
   * Product or brand name of the enteral or infant formula
   *
   * @generated from field: google.fhir.stu3.proto.String base_formula_product_name = 5;
   */
  baseFormulaProductName?: String;

  /**
   * Type of modular component to add to the feeding
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept additive_type = 6;
   */
  additiveType?: CodeableConcept;

  /**
   * Product or brand name of the modular additive
   *
   * @generated from field: google.fhir.stu3.proto.String additive_product_name = 7;
   */
  additiveProductName?: String;

  /**
   * Amount of energy per specified volume that is required
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity caloric_density = 8;
   */
  caloricDensity?: SimpleQuantity;

  /**
   * How the formula should enter the patient's gastrointestinal tract
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept routeof_administration = 9;
   */
  routeofAdministration?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration administration = 10;
   */
  administration: NutritionOrder_EnteralFormula_Administration[] = [];

  /**
   * Upper limit on formula volume per unit of time
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity max_volume_to_deliver = 11;
   */
  maxVolumeToDeliver?: SimpleQuantity;

  /**
   * Formula feeding instructions expressed as text
   *
   * @generated from field: google.fhir.stu3.proto.String administration_instruction = 12;
   */
  administrationInstruction?: String;

  constructor(data?: PartialMessage<NutritionOrder_EnteralFormula>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.EnteralFormula";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "base_formula_type", kind: "message", T: CodeableConcept },
    { no: 5, name: "base_formula_product_name", kind: "message", T: String },
    { no: 6, name: "additive_type", kind: "message", T: CodeableConcept },
    { no: 7, name: "additive_product_name", kind: "message", T: String },
    { no: 8, name: "caloric_density", kind: "message", T: SimpleQuantity },
    { no: 9, name: "routeof_administration", kind: "message", T: CodeableConcept },
    { no: 10, name: "administration", kind: "message", T: NutritionOrder_EnteralFormula_Administration, repeated: true },
    { no: 11, name: "max_volume_to_deliver", kind: "message", T: SimpleQuantity },
    { no: 12, name: "administration_instruction", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_EnteralFormula {
    return new NutritionOrder_EnteralFormula().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula {
    return new NutritionOrder_EnteralFormula().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula {
    return new NutritionOrder_EnteralFormula().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_EnteralFormula | PlainMessage<NutritionOrder_EnteralFormula> | undefined, b: NutritionOrder_EnteralFormula | PlainMessage<NutritionOrder_EnteralFormula> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_EnteralFormula, a, b);
  }
}

/**
 * Formula feeding instruction as structured data
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration
 */
export class NutritionOrder_EnteralFormula_Administration extends Message<NutritionOrder_EnteralFormula_Administration> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Scheduled frequency of enteral feeding
   *
   * @generated from field: google.fhir.stu3.proto.Timing schedule = 4;
   */
  schedule?: Timing;

  /**
   * The volume of formula to provide
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 5;
   */
  quantity?: SimpleQuantity;

  /**
   * @generated from field: google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration.Rate rate = 6;
   */
  rate?: NutritionOrder_EnteralFormula_Administration_Rate;

  constructor(data?: PartialMessage<NutritionOrder_EnteralFormula_Administration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "schedule", kind: "message", T: Timing },
    { no: 5, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 6, name: "rate", kind: "message", T: NutritionOrder_EnteralFormula_Administration_Rate },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_EnteralFormula_Administration {
    return new NutritionOrder_EnteralFormula_Administration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration {
    return new NutritionOrder_EnteralFormula_Administration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration {
    return new NutritionOrder_EnteralFormula_Administration().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_EnteralFormula_Administration | PlainMessage<NutritionOrder_EnteralFormula_Administration> | undefined, b: NutritionOrder_EnteralFormula_Administration | PlainMessage<NutritionOrder_EnteralFormula_Administration> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_EnteralFormula_Administration, a, b);
  }
}

/**
 * Speed with which the formula is provided per period of time
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration.Rate
 */
export class NutritionOrder_EnteralFormula_Administration_Rate extends Message<NutritionOrder_EnteralFormula_Administration_Rate> {
  /**
   * @generated from oneof google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration.Rate.rate
   */
  rate: {
    /**
     * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 1;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 2;
     */
    value: Ratio;
    case: "ratio";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<NutritionOrder_EnteralFormula_Administration_Rate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrder.EnteralFormula.Administration.Rate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "rate" },
    { no: 2, name: "ratio", kind: "message", T: Ratio, oneof: "rate" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_EnteralFormula_Administration_Rate {
    return new NutritionOrder_EnteralFormula_Administration_Rate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration_Rate {
    return new NutritionOrder_EnteralFormula_Administration_Rate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration_Rate {
    return new NutritionOrder_EnteralFormula_Administration_Rate().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_EnteralFormula_Administration_Rate | PlainMessage<NutritionOrder_EnteralFormula_Administration_Rate> | undefined, b: NutritionOrder_EnteralFormula_Administration_Rate | PlainMessage<NutritionOrder_EnteralFormula_Administration_Rate> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_EnteralFormula_Administration_Rate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Observation, last updated
 * 2017-04-19T07:44:43.294+10:00. Measurements and simple assertions. See
 * http://hl7.org/fhir/StructureDefinition/Observation
 *
 * @generated from message google.fhir.stu3.proto.Observation
 */
export class Observation extends Message<Observation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Type of observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Observation.Effective effective = 16;
   */
  effective?: Observation_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Observation.Value value = 19;
   */
  value?: Observation_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Observation.ReferenceRange reference_range = 27;
   */
  referenceRange: Observation_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Observation.Related related = 28;
   */
  related: Observation_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Observation.Component component = 29;
   */
  component: Observation_Component[] = [];

  constructor(data?: PartialMessage<Observation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Observation_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Observation_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Observation_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Observation_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Observation_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation {
    return new Observation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation {
    return new Observation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation {
    return new Observation().fromJsonString(jsonString, options);
  }

  static equals(a: Observation | PlainMessage<Observation> | undefined, b: Observation | PlainMessage<Observation> | undefined): boolean {
    return proto3.util.equals(Observation, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.Observation.Effective
 */
export class Observation_Effective extends Message<Observation_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Observation.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Observation_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation_Effective {
    return new Observation_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation_Effective {
    return new Observation_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation_Effective {
    return new Observation_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Observation_Effective | PlainMessage<Observation_Effective> | undefined, b: Observation_Effective | PlainMessage<Observation_Effective> | undefined): boolean {
    return proto3.util.equals(Observation_Effective, a, b);
  }
}

/**
 * Actual result
 *
 * @generated from message google.fhir.stu3.proto.Observation.Value
 */
export class Observation_Value extends Message<Observation_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Observation.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 6;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 7;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 8;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Observation_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 6, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 7, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 8, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation_Value {
    return new Observation_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation_Value {
    return new Observation_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation_Value {
    return new Observation_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Observation_Value | PlainMessage<Observation_Value> | undefined, b: Observation_Value | PlainMessage<Observation_Value> | undefined): boolean {
    return proto3.util.equals(Observation_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Observation.ReferenceRange
 */
export class Observation_ReferenceRange extends Message<Observation_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Observation_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation_ReferenceRange {
    return new Observation_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation_ReferenceRange {
    return new Observation_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation_ReferenceRange {
    return new Observation_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Observation_ReferenceRange | PlainMessage<Observation_ReferenceRange> | undefined, b: Observation_ReferenceRange | PlainMessage<Observation_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Observation_ReferenceRange, a, b);
  }
}

/**
 * Resource related to this observation
 *
 * @generated from message google.fhir.stu3.proto.Observation.Related
 */
export class Observation_Related extends Message<Observation_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Observation_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation_Related {
    return new Observation_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation_Related {
    return new Observation_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation_Related {
    return new Observation_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Observation_Related | PlainMessage<Observation_Related> | undefined, b: Observation_Related | PlainMessage<Observation_Related> | undefined): boolean {
    return proto3.util.equals(Observation_Related, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.Observation.Component
 */
export class Observation_Component extends Message<Observation_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Observation.Component.Value value = 5;
   */
  value?: Observation_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Observation.ReferenceRange reference_range = 8;
   */
  referenceRange: Observation_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Observation_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Observation_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Observation_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation_Component {
    return new Observation_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation_Component {
    return new Observation_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation_Component {
    return new Observation_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Observation_Component | PlainMessage<Observation_Component> | undefined, b: Observation_Component | PlainMessage<Observation_Component> | undefined): boolean {
    return proto3.util.equals(Observation_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.Observation.Component.Value
 */
export class Observation_Component_Value extends Message<Observation_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Observation.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Observation_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Observation.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Observation_Component_Value {
    return new Observation_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Observation_Component_Value {
    return new Observation_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Observation_Component_Value {
    return new Observation_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Observation_Component_Value | PlainMessage<Observation_Component_Value> | undefined, b: Observation_Component_Value | PlainMessage<Observation_Component_Value> | undefined): boolean {
    return proto3.util.equals(Observation_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for OperationDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. Definition of an operation or a named query.
 * See http://hl7.org/fhir/StructureDefinition/OperationDefinition
 *
 * @generated from message google.fhir.stu3.proto.OperationDefinition
 */
export class OperationDefinition extends Message<OperationDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this operation definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Business version of the operation definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 10;
   */
  version?: String;

  /**
   * Name for this operation definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 11;
   */
  name?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 12;
   */
  status?: PublicationStatusCode;

  /**
   * operation | query
   *
   * @generated from field: google.fhir.stu3.proto.OperationKindCode kind = 13;
   */
  kind?: OperationKindCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 14;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 16;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 17;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the operation definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 19;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for operation definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 20;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this operation definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 21;
   */
  purpose?: Markdown;

  /**
   * Whether content is unchanged by the operation
   *
   * @generated from field: google.fhir.stu3.proto.Boolean idempotent = 22;
   */
  idempotent?: Boolean;

  /**
   * Name used to invoke the operation
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 23;
   */
  code?: Code;

  /**
   * Additional information about use
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 24;
   */
  comment?: String;

  /**
   * Marks this as a profile of the base
   *
   * @generated from field: google.fhir.stu3.proto.Reference base = 25;
   */
  base?: Reference;

  /**
   * Types this operation applies to
   *
   * @generated from field: repeated google.fhir.stu3.proto.ResourceTypeCode resource = 26;
   */
  resource: ResourceTypeCode[] = [];

  /**
   * Invoke at the system level?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean system = 27;
   */
  system?: Boolean;

  /**
   * Invole at the type level?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean type = 28;
   */
  type?: Boolean;

  /**
   * Invoke on an instance?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean instance = 29;
   */
  instance?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.OperationDefinition.Parameter parameter = 30;
   */
  parameter: OperationDefinition_Parameter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.OperationDefinition.Overload overload = 31;
   */
  overload: OperationDefinition_Overload[] = [];

  constructor(data?: PartialMessage<OperationDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "version", kind: "message", T: String },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 13, name: "kind", kind: "message", T: OperationKindCode },
    { no: 14, name: "experimental", kind: "message", T: Boolean },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "publisher", kind: "message", T: String },
    { no: 17, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 20, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "purpose", kind: "message", T: Markdown },
    { no: 22, name: "idempotent", kind: "message", T: Boolean },
    { no: 23, name: "code", kind: "message", T: Code },
    { no: 24, name: "comment", kind: "message", T: String },
    { no: 25, name: "base", kind: "message", T: Reference },
    { no: 26, name: "resource", kind: "message", T: ResourceTypeCode, repeated: true },
    { no: 27, name: "system", kind: "message", T: Boolean },
    { no: 28, name: "type", kind: "message", T: Boolean },
    { no: 29, name: "instance", kind: "message", T: Boolean },
    { no: 30, name: "parameter", kind: "message", T: OperationDefinition_Parameter, repeated: true },
    { no: 31, name: "overload", kind: "message", T: OperationDefinition_Overload, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinition {
    return new OperationDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinition {
    return new OperationDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinition {
    return new OperationDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinition | PlainMessage<OperationDefinition> | undefined, b: OperationDefinition | PlainMessage<OperationDefinition> | undefined): boolean {
    return proto3.util.equals(OperationDefinition, a, b);
  }
}

/**
 * Parameters for the operation/query
 *
 * @generated from message google.fhir.stu3.proto.OperationDefinition.Parameter
 */
export class OperationDefinition_Parameter extends Message<OperationDefinition_Parameter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name in Parameters.parameter.name or in URL
   *
   * @generated from field: google.fhir.stu3.proto.Code name = 4;
   */
  name?: Code;

  /**
   * in | out
   *
   * @generated from field: google.fhir.stu3.proto.OperationParameterUseCode use = 5;
   */
  use?: OperationParameterUseCode;

  /**
   * Minimum Cardinality
   *
   * @generated from field: google.fhir.stu3.proto.Integer min = 6;
   */
  min?: Integer;

  /**
   * Maximum Cardinality (a number or *)
   *
   * @generated from field: google.fhir.stu3.proto.String max = 7;
   */
  max?: String;

  /**
   * Description of meaning/use
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 8;
   */
  documentation?: String;

  /**
   * What type this parameter has
   *
   * @generated from field: google.fhir.stu3.proto.FHIRAllTypesCode type = 9;
   */
  type?: FHIRAllTypesCode;

  /**
   * number | date | string | token | reference | composite | quantity | uri
   *
   * @generated from field: google.fhir.stu3.proto.SearchParamTypeCode search_type = 10;
   */
  searchType?: SearchParamTypeCode;

  /**
   * Profile on the type
   *
   * @generated from field: google.fhir.stu3.proto.Reference profile = 11;
   */
  profile?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.OperationDefinition.Parameter.Binding binding = 12;
   */
  binding?: OperationDefinition_Parameter_Binding;

  /**
   * Parts of a nested Parameter
   *
   * @generated from field: repeated google.fhir.stu3.proto.OperationDefinition.Parameter part = 13;
   */
  part: OperationDefinition_Parameter[] = [];

  constructor(data?: PartialMessage<OperationDefinition_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationDefinition.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Code },
    { no: 5, name: "use", kind: "message", T: OperationParameterUseCode },
    { no: 6, name: "min", kind: "message", T: Integer },
    { no: 7, name: "max", kind: "message", T: String },
    { no: 8, name: "documentation", kind: "message", T: String },
    { no: 9, name: "type", kind: "message", T: FHIRAllTypesCode },
    { no: 10, name: "search_type", kind: "message", T: SearchParamTypeCode },
    { no: 11, name: "profile", kind: "message", T: Reference },
    { no: 12, name: "binding", kind: "message", T: OperationDefinition_Parameter_Binding },
    { no: 13, name: "part", kind: "message", T: OperationDefinition_Parameter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinition_Parameter {
    return new OperationDefinition_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinition_Parameter {
    return new OperationDefinition_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinition_Parameter {
    return new OperationDefinition_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinition_Parameter | PlainMessage<OperationDefinition_Parameter> | undefined, b: OperationDefinition_Parameter | PlainMessage<OperationDefinition_Parameter> | undefined): boolean {
    return proto3.util.equals(OperationDefinition_Parameter, a, b);
  }
}

/**
 * ValueSet details if this is coded
 *
 * @generated from message google.fhir.stu3.proto.OperationDefinition.Parameter.Binding
 */
export class OperationDefinition_Parameter_Binding extends Message<OperationDefinition_Parameter_Binding> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * required | extensible | preferred | example
   *
   * @generated from field: google.fhir.stu3.proto.BindingStrengthCode strength = 4;
   */
  strength?: BindingStrengthCode;

  /**
   * @generated from field: google.fhir.stu3.proto.OperationDefinition.Parameter.Binding.ValueSet value_set = 5;
   */
  valueSet?: OperationDefinition_Parameter_Binding_ValueSet;

  constructor(data?: PartialMessage<OperationDefinition_Parameter_Binding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationDefinition.Parameter.Binding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "strength", kind: "message", T: BindingStrengthCode },
    { no: 5, name: "value_set", kind: "message", T: OperationDefinition_Parameter_Binding_ValueSet },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinition_Parameter_Binding {
    return new OperationDefinition_Parameter_Binding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinition_Parameter_Binding {
    return new OperationDefinition_Parameter_Binding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinition_Parameter_Binding {
    return new OperationDefinition_Parameter_Binding().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinition_Parameter_Binding | PlainMessage<OperationDefinition_Parameter_Binding> | undefined, b: OperationDefinition_Parameter_Binding | PlainMessage<OperationDefinition_Parameter_Binding> | undefined): boolean {
    return proto3.util.equals(OperationDefinition_Parameter_Binding, a, b);
  }
}

/**
 * Source of value set
 *
 * @generated from message google.fhir.stu3.proto.OperationDefinition.Parameter.Binding.ValueSet
 */
export class OperationDefinition_Parameter_Binding_ValueSet extends Message<OperationDefinition_Parameter_Binding_ValueSet> {
  /**
   * @generated from oneof google.fhir.stu3.proto.OperationDefinition.Parameter.Binding.ValueSet.value_set
   */
  valueSet: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<OperationDefinition_Parameter_Binding_ValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationDefinition.Parameter.Binding.ValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "value_set" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "value_set" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinition_Parameter_Binding_ValueSet {
    return new OperationDefinition_Parameter_Binding_ValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinition_Parameter_Binding_ValueSet {
    return new OperationDefinition_Parameter_Binding_ValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinition_Parameter_Binding_ValueSet {
    return new OperationDefinition_Parameter_Binding_ValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinition_Parameter_Binding_ValueSet | PlainMessage<OperationDefinition_Parameter_Binding_ValueSet> | undefined, b: OperationDefinition_Parameter_Binding_ValueSet | PlainMessage<OperationDefinition_Parameter_Binding_ValueSet> | undefined): boolean {
    return proto3.util.equals(OperationDefinition_Parameter_Binding_ValueSet, a, b);
  }
}

/**
 * Define overloaded variants for when  generating code
 *
 * @generated from message google.fhir.stu3.proto.OperationDefinition.Overload
 */
export class OperationDefinition_Overload extends Message<OperationDefinition_Overload> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of parameter to include in overload
   *
   * @generated from field: repeated google.fhir.stu3.proto.String parameter_name = 4;
   */
  parameterName: String[] = [];

  /**
   * Comments to go on overload
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 5;
   */
  comment?: String;

  constructor(data?: PartialMessage<OperationDefinition_Overload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationDefinition.Overload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "parameter_name", kind: "message", T: String, repeated: true },
    { no: 5, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinition_Overload {
    return new OperationDefinition_Overload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinition_Overload {
    return new OperationDefinition_Overload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinition_Overload {
    return new OperationDefinition_Overload().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinition_Overload | PlainMessage<OperationDefinition_Overload> | undefined, b: OperationDefinition_Overload | PlainMessage<OperationDefinition_Overload> | undefined): boolean {
    return proto3.util.equals(OperationDefinition_Overload, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for OperationOutcome, last updated
 * 2017-04-19T07:44:43.294+10:00. Information about the success/failure of an
 * action. See http://hl7.org/fhir/StructureDefinition/OperationOutcome
 *
 * @generated from message google.fhir.stu3.proto.OperationOutcome
 */
export class OperationOutcome extends Message<OperationOutcome> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.OperationOutcome.Issue issue = 9;
   */
  issue: OperationOutcome_Issue[] = [];

  constructor(data?: PartialMessage<OperationOutcome>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationOutcome";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "issue", kind: "message", T: OperationOutcome_Issue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationOutcome {
    return new OperationOutcome().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationOutcome {
    return new OperationOutcome().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationOutcome {
    return new OperationOutcome().fromJsonString(jsonString, options);
  }

  static equals(a: OperationOutcome | PlainMessage<OperationOutcome> | undefined, b: OperationOutcome | PlainMessage<OperationOutcome> | undefined): boolean {
    return proto3.util.equals(OperationOutcome, a, b);
  }
}

/**
 * A single issue associated with the action
 *
 * @generated from message google.fhir.stu3.proto.OperationOutcome.Issue
 */
export class OperationOutcome_Issue extends Message<OperationOutcome_Issue> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * fatal | error | warning | information
   *
   * @generated from field: google.fhir.stu3.proto.IssueSeverityCode severity = 4;
   */
  severity?: IssueSeverityCode;

  /**
   * Error or warning code
   *
   * @generated from field: google.fhir.stu3.proto.IssueTypeCode code = 5;
   */
  code?: IssueTypeCode;

  /**
   * Additional details about the error
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept details = 6;
   */
  details?: CodeableConcept;

  /**
   * Additional diagnostic information about the issue
   *
   * @generated from field: google.fhir.stu3.proto.String diagnostics = 7;
   */
  diagnostics?: String;

  /**
   * Path of element(s) related to issue
   *
   * @generated from field: repeated google.fhir.stu3.proto.String location = 8;
   */
  location: String[] = [];

  /**
   * FHIRPath of element(s) related to issue
   *
   * @generated from field: repeated google.fhir.stu3.proto.String expression = 9;
   */
  expression: String[] = [];

  constructor(data?: PartialMessage<OperationOutcome_Issue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationOutcome.Issue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "severity", kind: "message", T: IssueSeverityCode },
    { no: 5, name: "code", kind: "message", T: IssueTypeCode },
    { no: 6, name: "details", kind: "message", T: CodeableConcept },
    { no: 7, name: "diagnostics", kind: "message", T: String },
    { no: 8, name: "location", kind: "message", T: String, repeated: true },
    { no: 9, name: "expression", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationOutcome_Issue {
    return new OperationOutcome_Issue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationOutcome_Issue {
    return new OperationOutcome_Issue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationOutcome_Issue {
    return new OperationOutcome_Issue().fromJsonString(jsonString, options);
  }

  static equals(a: OperationOutcome_Issue | PlainMessage<OperationOutcome_Issue> | undefined, b: OperationOutcome_Issue | PlainMessage<OperationOutcome_Issue> | undefined): boolean {
    return proto3.util.equals(OperationOutcome_Issue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Organization, last updated
 * 2017-04-19T07:44:43.294+10:00. A grouping of people or organizations with a
 * common purpose. See http://hl7.org/fhir/StructureDefinition/Organization
 *
 * @generated from message google.fhir.stu3.proto.Organization
 */
export class Organization extends Message<Organization> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies this organization  across multiple systems
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether the organization's record is still in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * Kind of organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type: CodeableConcept[] = [];

  /**
   * Name used for the organization
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * A list of alternate names that the organization is known as, or was known
   * as in the past
   *
   * @generated from field: repeated google.fhir.stu3.proto.String alias = 13;
   */
  alias: String[] = [];

  /**
   * A contact detail for the organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 14;
   */
  telecom: ContactPoint[] = [];

  /**
   * An address for the organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 15;
   */
  address: Address[] = [];

  /**
   * The organization of which this organization forms a part
   *
   * @generated from field: google.fhir.stu3.proto.Reference part_of = 16;
   */
  partOf?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Organization.Contact contact = 17;
   */
  contact: Organization_Contact[] = [];

  /**
   * Technical endpoints providing access to services operated for the
   * organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 18;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<Organization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Organization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "alias", kind: "message", T: String, repeated: true },
    { no: 14, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 15, name: "address", kind: "message", T: Address, repeated: true },
    { no: 16, name: "part_of", kind: "message", T: Reference },
    { no: 17, name: "contact", kind: "message", T: Organization_Contact, repeated: true },
    { no: 18, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization {
    return new Organization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJsonString(jsonString, options);
  }

  static equals(a: Organization | PlainMessage<Organization> | undefined, b: Organization | PlainMessage<Organization> | undefined): boolean {
    return proto3.util.equals(Organization, a, b);
  }
}

/**
 * Contact for the organization for a certain purpose
 *
 * @generated from message google.fhir.stu3.proto.Organization.Contact
 */
export class Organization_Contact extends Message<Organization_Contact> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The type of contact
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept purpose = 4;
   */
  purpose?: CodeableConcept;

  /**
   * A name associated with the contact
   *
   * @generated from field: google.fhir.stu3.proto.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * Contact details (telephone, email, etc.)  for a contact
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Visiting or postal addresses for the contact
   *
   * @generated from field: google.fhir.stu3.proto.Address address = 7;
   */
  address?: Address;

  constructor(data?: PartialMessage<Organization_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Organization.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "purpose", kind: "message", T: CodeableConcept },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization_Contact {
    return new Organization_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization_Contact {
    return new Organization_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization_Contact {
    return new Organization_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: Organization_Contact | PlainMessage<Organization_Contact> | undefined, b: Organization_Contact | PlainMessage<Organization_Contact> | undefined): boolean {
    return proto3.util.equals(Organization_Contact, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Parameters, last updated
 * 2017-04-19T07:44:43.294+10:00. Operation Request or Response. See
 * http://hl7.org/fhir/StructureDefinition/Parameters
 *
 * @generated from message google.fhir.stu3.proto.Parameters
 */
export class Parameters extends Message<Parameters> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Parameters.Parameter parameter = 5;
   */
  parameter: Parameters_Parameter[] = [];

  constructor(data?: PartialMessage<Parameters>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Parameters";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "parameter", kind: "message", T: Parameters_Parameter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Parameters {
    return new Parameters().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Parameters {
    return new Parameters().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Parameters {
    return new Parameters().fromJsonString(jsonString, options);
  }

  static equals(a: Parameters | PlainMessage<Parameters> | undefined, b: Parameters | PlainMessage<Parameters> | undefined): boolean {
    return proto3.util.equals(Parameters, a, b);
  }
}

/**
 * Operation Parameter
 *
 * @generated from message google.fhir.stu3.proto.Parameters.Parameter
 */
export class Parameters_Parameter extends Message<Parameters_Parameter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name from the definition
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.Parameters.Parameter.Value value = 5;
   */
  value?: Parameters_Parameter_Value;

  /**
   * If parameter is a whole resource
   *
   * @generated from field: google.fhir.stu3.proto.ContainedResource resource = 6;
   */
  resource?: ContainedResource;

  /**
   * Named part of a multi-part parameter
   *
   * @generated from field: repeated google.fhir.stu3.proto.Parameters.Parameter part = 7;
   */
  part: Parameters_Parameter[] = [];

  constructor(data?: PartialMessage<Parameters_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Parameters.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: Parameters_Parameter_Value },
    { no: 6, name: "resource", kind: "message", T: ContainedResource },
    { no: 7, name: "part", kind: "message", T: Parameters_Parameter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Parameters_Parameter {
    return new Parameters_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Parameters_Parameter {
    return new Parameters_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Parameters_Parameter {
    return new Parameters_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: Parameters_Parameter | PlainMessage<Parameters_Parameter> | undefined, b: Parameters_Parameter | PlainMessage<Parameters_Parameter> | undefined): boolean {
    return proto3.util.equals(Parameters_Parameter, a, b);
  }
}

/**
 * If parameter is a data type
 *
 * @generated from message google.fhir.stu3.proto.Parameters.Parameter.Value
 */
export class Parameters_Parameter_Value extends Message<Parameters_Parameter_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Parameters.Parameter.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Parameters_Parameter_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Parameters.Parameter.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Parameters_Parameter_Value {
    return new Parameters_Parameter_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Parameters_Parameter_Value {
    return new Parameters_Parameter_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Parameters_Parameter_Value {
    return new Parameters_Parameter_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Parameters_Parameter_Value | PlainMessage<Parameters_Parameter_Value> | undefined, b: Parameters_Parameter_Value | PlainMessage<Parameters_Parameter_Value> | undefined): boolean {
    return proto3.util.equals(Parameters_Parameter_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Patient, last updated
 * 2017-04-19T07:44:43.294+10:00. Information about an individual or animal
 * receiving health care services. See
 * http://hl7.org/fhir/StructureDefinition/Patient
 *
 * @generated from message google.fhir.stu3.proto.Patient
 */
export class Patient extends Message<Patient> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for this patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this patient's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * A name associated with the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.HumanName name = 11;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the individual
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 12;
   */
  telecom: ContactPoint[] = [];

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 13;
   */
  gender?: AdministrativeGenderCode;

  /**
   * The date of birth for the individual
   *
   * @generated from field: google.fhir.stu3.proto.Date birth_date = 14;
   */
  birthDate?: Date;

  /**
   * @generated from field: google.fhir.stu3.proto.Patient.Deceased deceased = 15;
   */
  deceased?: Patient_Deceased;

  /**
   * Addresses for the individual
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 16;
   */
  address: Address[] = [];

  /**
   * Marital (civil) status of a patient
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept marital_status = 17;
   */
  maritalStatus?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Patient.MultipleBirth multiple_birth = 18;
   */
  multipleBirth?: Patient_MultipleBirth;

  /**
   * Image of the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment photo = 19;
   */
  photo: Attachment[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Patient.Contact contact = 20;
   */
  contact: Patient_Contact[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Patient.Animal animal = 21;
   */
  animal?: Patient_Animal;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Patient.Communication communication = 22;
   */
  communication: Patient_Communication[] = [];

  /**
   * Patient's nominated primary care provider
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference general_practitioner = 23;
   */
  generalPractitioner: Reference[] = [];

  /**
   * Organization that is the custodian of the patient record
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 24;
   */
  managingOrganization?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Patient.Link link = 25;
   */
  link: Patient_Link[] = [];

  constructor(data?: PartialMessage<Patient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 12, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 13, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 14, name: "birth_date", kind: "message", T: Date },
    { no: 15, name: "deceased", kind: "message", T: Patient_Deceased },
    { no: 16, name: "address", kind: "message", T: Address, repeated: true },
    { no: 17, name: "marital_status", kind: "message", T: CodeableConcept },
    { no: 18, name: "multiple_birth", kind: "message", T: Patient_MultipleBirth },
    { no: 19, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 20, name: "contact", kind: "message", T: Patient_Contact, repeated: true },
    { no: 21, name: "animal", kind: "message", T: Patient_Animal },
    { no: 22, name: "communication", kind: "message", T: Patient_Communication, repeated: true },
    { no: 23, name: "general_practitioner", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "managing_organization", kind: "message", T: Reference },
    { no: 25, name: "link", kind: "message", T: Patient_Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient {
    return new Patient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient {
    return new Patient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient {
    return new Patient().fromJsonString(jsonString, options);
  }

  static equals(a: Patient | PlainMessage<Patient> | undefined, b: Patient | PlainMessage<Patient> | undefined): boolean {
    return proto3.util.equals(Patient, a, b);
  }
}

/**
 * Indicates if the individual is deceased or not
 *
 * @generated from message google.fhir.stu3.proto.Patient.Deceased
 */
export class Patient_Deceased extends Message<Patient_Deceased> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Patient.Deceased.deceased
   */
  deceased: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Patient_Deceased>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient.Deceased";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "deceased" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "deceased" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient_Deceased {
    return new Patient_Deceased().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient_Deceased {
    return new Patient_Deceased().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient_Deceased {
    return new Patient_Deceased().fromJsonString(jsonString, options);
  }

  static equals(a: Patient_Deceased | PlainMessage<Patient_Deceased> | undefined, b: Patient_Deceased | PlainMessage<Patient_Deceased> | undefined): boolean {
    return proto3.util.equals(Patient_Deceased, a, b);
  }
}

/**
 * Whether patient is part of a multiple birth
 *
 * @generated from message google.fhir.stu3.proto.Patient.MultipleBirth
 */
export class Patient_MultipleBirth extends Message<Patient_MultipleBirth> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Patient.MultipleBirth.multiple_birth
   */
  multipleBirth: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 2;
     */
    value: Integer;
    case: "integer";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Patient_MultipleBirth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient.MultipleBirth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "multiple_birth" },
    { no: 2, name: "integer", kind: "message", T: Integer, oneof: "multiple_birth" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient_MultipleBirth {
    return new Patient_MultipleBirth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient_MultipleBirth {
    return new Patient_MultipleBirth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient_MultipleBirth {
    return new Patient_MultipleBirth().fromJsonString(jsonString, options);
  }

  static equals(a: Patient_MultipleBirth | PlainMessage<Patient_MultipleBirth> | undefined, b: Patient_MultipleBirth | PlainMessage<Patient_MultipleBirth> | undefined): boolean {
    return proto3.util.equals(Patient_MultipleBirth, a, b);
  }
}

/**
 * A contact party (e.g. guardian, partner, friend) for the patient
 *
 * @generated from message google.fhir.stu3.proto.Patient.Contact
 */
export class Patient_Contact extends Message<Patient_Contact> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The kind of relationship
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept relationship = 4;
   */
  relationship: CodeableConcept[] = [];

  /**
   * A name associated with the contact person
   *
   * @generated from field: google.fhir.stu3.proto.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Address for the contact person
   *
   * @generated from field: google.fhir.stu3.proto.Address address = 7;
   */
  address?: Address;

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
   */
  gender?: AdministrativeGenderCode;

  /**
   * Organization that is associated with the contact
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 9;
   */
  organization?: Reference;

  /**
   * The period during which this contact person or organization is valid to
   * be contacted relating to this patient
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 10;
   */
  period?: Period;

  constructor(data?: PartialMessage<Patient_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "relationship", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
    { no: 8, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 9, name: "organization", kind: "message", T: Reference },
    { no: 10, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient_Contact {
    return new Patient_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient_Contact {
    return new Patient_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient_Contact {
    return new Patient_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: Patient_Contact | PlainMessage<Patient_Contact> | undefined, b: Patient_Contact | PlainMessage<Patient_Contact> | undefined): boolean {
    return proto3.util.equals(Patient_Contact, a, b);
  }
}

/**
 * This patient is known to be an animal (non-human)
 *
 * @generated from message google.fhir.stu3.proto.Patient.Animal
 */
export class Patient_Animal extends Message<Patient_Animal> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * E.g. Dog, Cow
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept species = 4;
   */
  species?: CodeableConcept;

  /**
   * E.g. Poodle, Angus
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept breed = 5;
   */
  breed?: CodeableConcept;

  /**
   * E.g. Neutered, Intact
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept gender_status = 6;
   */
  genderStatus?: CodeableConcept;

  constructor(data?: PartialMessage<Patient_Animal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient.Animal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "species", kind: "message", T: CodeableConcept },
    { no: 5, name: "breed", kind: "message", T: CodeableConcept },
    { no: 6, name: "gender_status", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient_Animal {
    return new Patient_Animal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient_Animal {
    return new Patient_Animal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient_Animal {
    return new Patient_Animal().fromJsonString(jsonString, options);
  }

  static equals(a: Patient_Animal | PlainMessage<Patient_Animal> | undefined, b: Patient_Animal | PlainMessage<Patient_Animal> | undefined): boolean {
    return proto3.util.equals(Patient_Animal, a, b);
  }
}

/**
 * A list of Languages which may be used to communicate with the patient about
 * his or her health
 *
 * @generated from message google.fhir.stu3.proto.Patient.Communication
 */
export class Patient_Communication extends Message<Patient_Communication> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The language which can be used to communicate with the patient about his
   * or her health
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept language = 4;
   */
  language?: CodeableConcept;

  /**
   * Language preference indicator
   *
   * @generated from field: google.fhir.stu3.proto.Boolean preferred = 5;
   */
  preferred?: Boolean;

  constructor(data?: PartialMessage<Patient_Communication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient.Communication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: CodeableConcept },
    { no: 5, name: "preferred", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient_Communication {
    return new Patient_Communication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient_Communication {
    return new Patient_Communication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient_Communication {
    return new Patient_Communication().fromJsonString(jsonString, options);
  }

  static equals(a: Patient_Communication | PlainMessage<Patient_Communication> | undefined, b: Patient_Communication | PlainMessage<Patient_Communication> | undefined): boolean {
    return proto3.util.equals(Patient_Communication, a, b);
  }
}

/**
 * Link to another patient resource that concerns the same actual person
 *
 * @generated from message google.fhir.stu3.proto.Patient.Link
 */
export class Patient_Link extends Message<Patient_Link> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The other patient or related person resource that the link refers to
   *
   * @generated from field: google.fhir.stu3.proto.Reference other = 4;
   */
  other?: Reference;

  /**
   * replaced-by | replaces | refer | seealso - type of link
   *
   * @generated from field: google.fhir.stu3.proto.LinkTypeCode type = 5;
   */
  type?: LinkTypeCode;

  constructor(data?: PartialMessage<Patient_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Patient.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "other", kind: "message", T: Reference },
    { no: 5, name: "type", kind: "message", T: LinkTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Patient_Link {
    return new Patient_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Patient_Link {
    return new Patient_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Patient_Link {
    return new Patient_Link().fromJsonString(jsonString, options);
  }

  static equals(a: Patient_Link | PlainMessage<Patient_Link> | undefined, b: Patient_Link | PlainMessage<Patient_Link> | undefined): boolean {
    return proto3.util.equals(Patient_Link, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for PaymentNotice, last updated
 * 2017-04-19T07:44:43.294+10:00. PaymentNotice request. See
 * http://hl7.org/fhir/StructureDefinition/PaymentNotice
 *
 * @generated from message google.fhir.stu3.proto.PaymentNotice
 */
export class PaymentNotice extends Message<PaymentNotice> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Request reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 11;
   */
  request?: Reference;

  /**
   * Response reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference response = 12;
   */
  response?: Reference;

  /**
   * Payment or clearing date
   *
   * @generated from field: google.fhir.stu3.proto.Date status_date = 13;
   */
  statusDate?: Date;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 14;
   */
  created?: DateTime;

  /**
   * Insurer or Regulatory body
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 15;
   */
  target?: Reference;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 16;
   */
  provider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 17;
   */
  organization?: Reference;

  /**
   * Whether payment has been sent or cleared
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept payment_status = 18;
   */
  paymentStatus?: CodeableConcept;

  constructor(data?: PartialMessage<PaymentNotice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PaymentNotice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "request", kind: "message", T: Reference },
    { no: 12, name: "response", kind: "message", T: Reference },
    { no: 13, name: "status_date", kind: "message", T: Date },
    { no: 14, name: "created", kind: "message", T: DateTime },
    { no: 15, name: "target", kind: "message", T: Reference },
    { no: 16, name: "provider", kind: "message", T: Reference },
    { no: 17, name: "organization", kind: "message", T: Reference },
    { no: 18, name: "payment_status", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentNotice {
    return new PaymentNotice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentNotice {
    return new PaymentNotice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentNotice {
    return new PaymentNotice().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentNotice | PlainMessage<PaymentNotice> | undefined, b: PaymentNotice | PlainMessage<PaymentNotice> | undefined): boolean {
    return proto3.util.equals(PaymentNotice, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for PaymentReconciliation, last
 * updated 2017-04-19T07:44:43.294+10:00. PaymentReconciliation resource. See
 * http://hl7.org/fhir/StructureDefinition/PaymentReconciliation
 *
 * @generated from message google.fhir.stu3.proto.PaymentReconciliation
 */
export class PaymentReconciliation extends Message<PaymentReconciliation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Period covered
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 11;
   */
  period?: Period;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 12;
   */
  created?: DateTime;

  /**
   * Insurer
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 13;
   */
  organization?: Reference;

  /**
   * Claim reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 14;
   */
  request?: Reference;

  /**
   * complete | error | partial
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 15;
   */
  outcome?: CodeableConcept;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.stu3.proto.String disposition = 16;
   */
  disposition?: String;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_provider = 17;
   */
  requestProvider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_organization = 18;
   */
  requestOrganization?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PaymentReconciliation.Details detail = 19;
   */
  detail: PaymentReconciliation_Details[] = [];

  /**
   * Printed Form Identifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 20;
   */
  form?: CodeableConcept;

  /**
   * Total amount of Payment
   *
   * @generated from field: google.fhir.stu3.proto.Money total = 21;
   */
  total?: Money;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PaymentReconciliation.Notes process_note = 22;
   */
  processNote: PaymentReconciliation_Notes[] = [];

  constructor(data?: PartialMessage<PaymentReconciliation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PaymentReconciliation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "period", kind: "message", T: Period },
    { no: 12, name: "created", kind: "message", T: DateTime },
    { no: 13, name: "organization", kind: "message", T: Reference },
    { no: 14, name: "request", kind: "message", T: Reference },
    { no: 15, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 16, name: "disposition", kind: "message", T: String },
    { no: 17, name: "request_provider", kind: "message", T: Reference },
    { no: 18, name: "request_organization", kind: "message", T: Reference },
    { no: 19, name: "detail", kind: "message", T: PaymentReconciliation_Details, repeated: true },
    { no: 20, name: "form", kind: "message", T: CodeableConcept },
    { no: 21, name: "total", kind: "message", T: Money },
    { no: 22, name: "process_note", kind: "message", T: PaymentReconciliation_Notes, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation {
    return new PaymentReconciliation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation {
    return new PaymentReconciliation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation {
    return new PaymentReconciliation().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation | PlainMessage<PaymentReconciliation> | undefined, b: PaymentReconciliation | PlainMessage<PaymentReconciliation> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation, a, b);
  }
}

/**
 * List of settlements
 *
 * @generated from message google.fhir.stu3.proto.PaymentReconciliation.Details
 */
export class PaymentReconciliation_Details extends Message<PaymentReconciliation_Details> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Claim
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 5;
   */
  request?: Reference;

  /**
   * Claim Response
   *
   * @generated from field: google.fhir.stu3.proto.Reference response = 6;
   */
  response?: Reference;

  /**
   * Organization which submitted the claim
   *
   * @generated from field: google.fhir.stu3.proto.Reference submitter = 7;
   */
  submitter?: Reference;

  /**
   * Organization which is receiving the payment
   *
   * @generated from field: google.fhir.stu3.proto.Reference payee = 8;
   */
  payee?: Reference;

  /**
   * Invoice date
   *
   * @generated from field: google.fhir.stu3.proto.Date date = 9;
   */
  date?: Date;

  /**
   * Amount being paid
   *
   * @generated from field: google.fhir.stu3.proto.Money amount = 10;
   */
  amount?: Money;

  constructor(data?: PartialMessage<PaymentReconciliation_Details>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PaymentReconciliation.Details";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "request", kind: "message", T: Reference },
    { no: 6, name: "response", kind: "message", T: Reference },
    { no: 7, name: "submitter", kind: "message", T: Reference },
    { no: 8, name: "payee", kind: "message", T: Reference },
    { no: 9, name: "date", kind: "message", T: Date },
    { no: 10, name: "amount", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_Details {
    return new PaymentReconciliation_Details().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_Details {
    return new PaymentReconciliation_Details().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_Details {
    return new PaymentReconciliation_Details().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_Details | PlainMessage<PaymentReconciliation_Details> | undefined, b: PaymentReconciliation_Details | PlainMessage<PaymentReconciliation_Details> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_Details, a, b);
  }
}

/**
 * Processing comments
 *
 * @generated from message google.fhir.stu3.proto.PaymentReconciliation.Notes
 */
export class PaymentReconciliation_Notes extends Message<PaymentReconciliation_Notes> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * display | print | printoper
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Comment on the processing
   *
   * @generated from field: google.fhir.stu3.proto.String text = 5;
   */
  text?: String;

  constructor(data?: PartialMessage<PaymentReconciliation_Notes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PaymentReconciliation.Notes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_Notes {
    return new PaymentReconciliation_Notes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_Notes {
    return new PaymentReconciliation_Notes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_Notes {
    return new PaymentReconciliation_Notes().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_Notes | PlainMessage<PaymentReconciliation_Notes> | undefined, b: PaymentReconciliation_Notes | PlainMessage<PaymentReconciliation_Notes> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_Notes, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Person, last updated
 * 2017-04-19T07:44:43.294+10:00. A generic person record. See
 * http://hl7.org/fhir/StructureDefinition/Person
 *
 * @generated from message google.fhir.stu3.proto.Person
 */
export class Person extends Message<Person> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * A human identifier for this person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * A name associated with the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.HumanName name = 10;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 11;
   */
  telecom: ContactPoint[] = [];

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 12;
   */
  gender?: AdministrativeGenderCode;

  /**
   * The date on which the person was born
   *
   * @generated from field: google.fhir.stu3.proto.Date birth_date = 13;
   */
  birthDate?: Date;

  /**
   * One or more addresses for the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 14;
   */
  address: Address[] = [];

  /**
   * Image of the person
   *
   * @generated from field: google.fhir.stu3.proto.Attachment photo = 15;
   */
  photo?: Attachment;

  /**
   * The organization that is the custodian of the person record
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 16;
   */
  managingOrganization?: Reference;

  /**
   * This person's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 17;
   */
  active?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Person.Link link = 18;
   */
  link: Person_Link[] = [];

  constructor(data?: PartialMessage<Person>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Person";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 11, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 12, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 13, name: "birth_date", kind: "message", T: Date },
    { no: 14, name: "address", kind: "message", T: Address, repeated: true },
    { no: 15, name: "photo", kind: "message", T: Attachment },
    { no: 16, name: "managing_organization", kind: "message", T: Reference },
    { no: 17, name: "active", kind: "message", T: Boolean },
    { no: 18, name: "link", kind: "message", T: Person_Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person {
    return new Person().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person {
    return new Person().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person {
    return new Person().fromJsonString(jsonString, options);
  }

  static equals(a: Person | PlainMessage<Person> | undefined, b: Person | PlainMessage<Person> | undefined): boolean {
    return proto3.util.equals(Person, a, b);
  }
}

/**
 * Link to a resource that concerns the same actual person
 *
 * @generated from message google.fhir.stu3.proto.Person.Link
 */
export class Person_Link extends Message<Person_Link> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The resource to which this actual person is associated
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 4;
   */
  target?: Reference;

  /**
   * level1 | level2 | level3 | level4
   *
   * @generated from field: google.fhir.stu3.proto.IdentityAssuranceLevelCode assurance = 5;
   */
  assurance?: IdentityAssuranceLevelCode;

  constructor(data?: PartialMessage<Person_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Person.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "target", kind: "message", T: Reference },
    { no: 5, name: "assurance", kind: "message", T: IdentityAssuranceLevelCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person_Link {
    return new Person_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person_Link {
    return new Person_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person_Link {
    return new Person_Link().fromJsonString(jsonString, options);
  }

  static equals(a: Person_Link | PlainMessage<Person_Link> | undefined, b: Person_Link | PlainMessage<Person_Link> | undefined): boolean {
    return proto3.util.equals(Person_Link, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for PlanDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. The definition of a plan for a series of
 * actions, independent of any specific patient or context. See
 * http://hl7.org/fhir/StructureDefinition/PlanDefinition
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition
 */
export class PlanDefinition extends Message<PlanDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this plan definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the plan definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the plan definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this plan definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this plan definition (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * order-set | protocol | eca-rule
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 14;
   */
  type?: CodeableConcept;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 15;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 18;
   */
  publisher?: String;

  /**
   * Natural language description of the plan definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Why this plan definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 20;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the asset
   *
   * @generated from field: google.fhir.stu3.proto.String usage = 21;
   */
  usage?: String;

  /**
   * When the plan definition was approved by publisher
   *
   * @generated from field: google.fhir.stu3.proto.Date approval_date = 22;
   */
  approvalDate?: Date;

  /**
   * When the plan definition was last reviewed
   *
   * @generated from field: google.fhir.stu3.proto.Date last_review_date = 23;
   */
  lastReviewDate?: Date;

  /**
   * When the plan definition is expected to be used
   *
   * @generated from field: google.fhir.stu3.proto.Period effective_period = 24;
   */
  effectivePeriod?: Period;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 25;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for plan definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 26;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * E.g. Education, Treatment, Assessment, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept topic = 27;
   */
  topic: CodeableConcept[] = [];

  /**
   * A content contributor
   *
   * @generated from field: repeated google.fhir.stu3.proto.Contributor contributor = 28;
   */
  contributor: Contributor[] = [];

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 29;
   */
  contact: ContactDetail[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 30;
   */
  copyright?: Markdown;

  /**
   * Related artifacts for the asset
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact related_artifact = 31;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Logic used by the plan definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference library = 32;
   */
  library: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Goal goal = 33;
   */
  goal: PlanDefinition_Goal[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Action action = 34;
   */
  action: PlanDefinition_Action[] = [];

  constructor(data?: PartialMessage<PlanDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "type", kind: "message", T: CodeableConcept },
    { no: 15, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 16, name: "experimental", kind: "message", T: Boolean },
    { no: 17, name: "date", kind: "message", T: DateTime },
    { no: 18, name: "publisher", kind: "message", T: String },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "purpose", kind: "message", T: Markdown },
    { no: 21, name: "usage", kind: "message", T: String },
    { no: 22, name: "approval_date", kind: "message", T: Date },
    { no: 23, name: "last_review_date", kind: "message", T: Date },
    { no: 24, name: "effective_period", kind: "message", T: Period },
    { no: 25, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 26, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 28, name: "contributor", kind: "message", T: Contributor, repeated: true },
    { no: 29, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 30, name: "copyright", kind: "message", T: Markdown },
    { no: 31, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 32, name: "library", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "goal", kind: "message", T: PlanDefinition_Goal, repeated: true },
    { no: 34, name: "action", kind: "message", T: PlanDefinition_Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition {
    return new PlanDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition {
    return new PlanDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition {
    return new PlanDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition | PlainMessage<PlanDefinition> | undefined, b: PlanDefinition | PlainMessage<PlanDefinition> | undefined): boolean {
    return proto3.util.equals(PlanDefinition, a, b);
  }
}

/**
 * What the plan is trying to accomplish
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Goal
 */
export class PlanDefinition_Goal extends Message<PlanDefinition_Goal> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * E.g. Treatment, dietary, behavioral, etc
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Code or text describing the goal
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept description = 5;
   */
  description?: CodeableConcept;

  /**
   * high-priority | medium-priority | low-priority
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 6;
   */
  priority?: CodeableConcept;

  /**
   * When goal pursuit begins
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept start = 7;
   */
  start?: CodeableConcept;

  /**
   * What does the goal address
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept addresses = 8;
   */
  addresses: CodeableConcept[] = [];

  /**
   * Supporting documentation for the goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact documentation = 9;
   */
  documentation: RelatedArtifact[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Goal.Target target = 10;
   */
  target: PlanDefinition_Goal_Target[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Goal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Goal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "description", kind: "message", T: CodeableConcept },
    { no: 6, name: "priority", kind: "message", T: CodeableConcept },
    { no: 7, name: "start", kind: "message", T: CodeableConcept },
    { no: 8, name: "addresses", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "documentation", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 10, name: "target", kind: "message", T: PlanDefinition_Goal_Target, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Goal {
    return new PlanDefinition_Goal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Goal {
    return new PlanDefinition_Goal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Goal {
    return new PlanDefinition_Goal().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Goal | PlainMessage<PlanDefinition_Goal> | undefined, b: PlanDefinition_Goal | PlainMessage<PlanDefinition_Goal> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Goal, a, b);
  }
}

/**
 * Target outcome for the goal
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Goal.Target
 */
export class PlanDefinition_Goal_Target extends Message<PlanDefinition_Goal_Target> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The parameter whose value is to be tracked
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept measure = 4;
   */
  measure?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.PlanDefinition.Goal.Target.Detail detail = 5;
   */
  detail?: PlanDefinition_Goal_Target_Detail;

  /**
   * Reach goal within
   *
   * @generated from field: google.fhir.stu3.proto.Duration due = 6;
   */
  due?: Duration;

  constructor(data?: PartialMessage<PlanDefinition_Goal_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Goal.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "measure", kind: "message", T: CodeableConcept },
    { no: 5, name: "detail", kind: "message", T: PlanDefinition_Goal_Target_Detail },
    { no: 6, name: "due", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Goal_Target {
    return new PlanDefinition_Goal_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target {
    return new PlanDefinition_Goal_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target {
    return new PlanDefinition_Goal_Target().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Goal_Target | PlainMessage<PlanDefinition_Goal_Target> | undefined, b: PlanDefinition_Goal_Target | PlainMessage<PlanDefinition_Goal_Target> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Goal_Target, a, b);
  }
}

/**
 * The target value to be achieved
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Goal.Target.Detail
 */
export class PlanDefinition_Goal_Target_Detail extends Message<PlanDefinition_Goal_Target_Detail> {
  /**
   * @generated from oneof google.fhir.stu3.proto.PlanDefinition.Goal.Target.Detail.detail
   */
  detail: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Goal_Target_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Goal.Target.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "detail" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "detail" },
    { no: 3, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "detail" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Goal_Target_Detail {
    return new PlanDefinition_Goal_Target_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target_Detail {
    return new PlanDefinition_Goal_Target_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target_Detail {
    return new PlanDefinition_Goal_Target_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Goal_Target_Detail | PlainMessage<PlanDefinition_Goal_Target_Detail> | undefined, b: PlanDefinition_Goal_Target_Detail | PlainMessage<PlanDefinition_Goal_Target_Detail> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Goal_Target_Detail, a, b);
  }
}

/**
 * Action defined by the plan
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action
 */
export class PlanDefinition_Action extends Message<PlanDefinition_Action> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * User-visible label for the action (e.g. 1. or A.)
   *
   * @generated from field: google.fhir.stu3.proto.String label = 4;
   */
  label?: String;

  /**
   * User-visible title
   *
   * @generated from field: google.fhir.stu3.proto.String title = 5;
   */
  title?: String;

  /**
   * Short description of the action
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * Static text equivalent of the action, used if the dynamic aspects cannot
   * be interpreted by the receiving system
   *
   * @generated from field: google.fhir.stu3.proto.String text_equivalent = 7;
   */
  textEquivalent?: String;

  /**
   * Code representing the meaning of the action or sub-actions
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 8;
   */
  code: CodeableConcept[] = [];

  /**
   * Why the action should be performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 9;
   */
  reason: CodeableConcept[] = [];

  /**
   * Supporting documentation for the intended performer of the action
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact documentation = 10;
   */
  documentation: RelatedArtifact[] = [];

  /**
   * What goals this action supports
   *
   * @generated from field: repeated google.fhir.stu3.proto.Id goal_id = 11;
   */
  goalId: Id[] = [];

  /**
   * When the action should be triggered
   *
   * @generated from field: repeated google.fhir.stu3.proto.TriggerDefinition trigger_definition = 12;
   */
  triggerDefinition: TriggerDefinition[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Action.Condition condition = 13;
   */
  condition: PlanDefinition_Action_Condition[] = [];

  /**
   * Input data requirements
   *
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement input = 14;
   */
  input: DataRequirement[] = [];

  /**
   * Output data definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement output = 15;
   */
  output: DataRequirement[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction related_action = 16;
   */
  relatedAction: PlanDefinition_Action_RelatedAction[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.PlanDefinition.Action.TimingType timing = 17;
   */
  timing?: PlanDefinition_Action_TimingType;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Action.Participant participant = 18;
   */
  participant: PlanDefinition_Action_Participant[] = [];

  /**
   * create | update | remove | fire-event
   *
   * @generated from field: google.fhir.stu3.proto.Coding type = 19;
   */
  type?: Coding;

  /**
   * visual-group | logical-group | sentence-group
   *
   * @generated from field: google.fhir.stu3.proto.ActionGroupingBehaviorCode grouping_behavior = 20;
   */
  groupingBehavior?: ActionGroupingBehaviorCode;

  /**
   * any | all | all-or-none | exactly-one | at-most-one | one-or-more
   *
   * @generated from field: google.fhir.stu3.proto.ActionSelectionBehaviorCode selection_behavior = 21;
   */
  selectionBehavior?: ActionSelectionBehaviorCode;

  /**
   * must | could | must-unless-documented
   *
   * @generated from field: google.fhir.stu3.proto.ActionRequiredBehaviorCode required_behavior = 22;
   */
  requiredBehavior?: ActionRequiredBehaviorCode;

  /**
   * yes | no
   *
   * @generated from field: google.fhir.stu3.proto.ActionPrecheckBehaviorCode precheck_behavior = 23;
   */
  precheckBehavior?: ActionPrecheckBehaviorCode;

  /**
   * single | multiple
   *
   * @generated from field: google.fhir.stu3.proto.ActionCardinalityBehaviorCode cardinality_behavior = 24;
   */
  cardinalityBehavior?: ActionCardinalityBehaviorCode;

  /**
   * Description of the activity to be performed
   *
   * @generated from field: google.fhir.stu3.proto.Reference definition = 25;
   */
  definition?: Reference;

  /**
   * Transform to apply the template
   *
   * @generated from field: google.fhir.stu3.proto.Reference transform = 26;
   */
  transform?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Action.DynamicValue dynamic_value = 27;
   */
  dynamicValue: PlanDefinition_Action_DynamicValue[] = [];

  /**
   * A sub-action
   *
   * @generated from field: repeated google.fhir.stu3.proto.PlanDefinition.Action action = 28;
   */
  action: PlanDefinition_Action[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "label", kind: "message", T: String },
    { no: 5, name: "title", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "text_equivalent", kind: "message", T: String },
    { no: 8, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "documentation", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 11, name: "goal_id", kind: "message", T: Id, repeated: true },
    { no: 12, name: "trigger_definition", kind: "message", T: TriggerDefinition, repeated: true },
    { no: 13, name: "condition", kind: "message", T: PlanDefinition_Action_Condition, repeated: true },
    { no: 14, name: "input", kind: "message", T: DataRequirement, repeated: true },
    { no: 15, name: "output", kind: "message", T: DataRequirement, repeated: true },
    { no: 16, name: "related_action", kind: "message", T: PlanDefinition_Action_RelatedAction, repeated: true },
    { no: 17, name: "timing", kind: "message", T: PlanDefinition_Action_TimingType },
    { no: 18, name: "participant", kind: "message", T: PlanDefinition_Action_Participant, repeated: true },
    { no: 19, name: "type", kind: "message", T: Coding },
    { no: 20, name: "grouping_behavior", kind: "message", T: ActionGroupingBehaviorCode },
    { no: 21, name: "selection_behavior", kind: "message", T: ActionSelectionBehaviorCode },
    { no: 22, name: "required_behavior", kind: "message", T: ActionRequiredBehaviorCode },
    { no: 23, name: "precheck_behavior", kind: "message", T: ActionPrecheckBehaviorCode },
    { no: 24, name: "cardinality_behavior", kind: "message", T: ActionCardinalityBehaviorCode },
    { no: 25, name: "definition", kind: "message", T: Reference },
    { no: 26, name: "transform", kind: "message", T: Reference },
    { no: 27, name: "dynamic_value", kind: "message", T: PlanDefinition_Action_DynamicValue, repeated: true },
    { no: 28, name: "action", kind: "message", T: PlanDefinition_Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action {
    return new PlanDefinition_Action().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action {
    return new PlanDefinition_Action().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action {
    return new PlanDefinition_Action().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action | PlainMessage<PlanDefinition_Action> | undefined, b: PlanDefinition_Action | PlainMessage<PlanDefinition_Action> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action, a, b);
  }
}

/**
 * Whether or not the action is applicable
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action.Condition
 */
export class PlanDefinition_Action_Condition extends Message<PlanDefinition_Action_Condition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * applicability | start | stop
   *
   * @generated from field: google.fhir.stu3.proto.ActionConditionKindCode kind = 4;
   */
  kind?: ActionConditionKindCode;

  /**
   * Natural language description of the condition
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Language of the expression
   *
   * @generated from field: google.fhir.stu3.proto.String language = 6;
   */
  language?: String;

  /**
   * Boolean-valued expression
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  constructor(data?: PartialMessage<PlanDefinition_Action_Condition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action.Condition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "kind", kind: "message", T: ActionConditionKindCode },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "language", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_Condition {
    return new PlanDefinition_Action_Condition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Condition {
    return new PlanDefinition_Action_Condition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Condition {
    return new PlanDefinition_Action_Condition().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_Condition | PlainMessage<PlanDefinition_Action_Condition> | undefined, b: PlanDefinition_Action_Condition | PlainMessage<PlanDefinition_Action_Condition> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_Condition, a, b);
  }
}

/**
 * Relationship to another action
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction
 */
export class PlanDefinition_Action_RelatedAction extends Message<PlanDefinition_Action_RelatedAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What action is this related to
   *
   * @generated from field: google.fhir.stu3.proto.Id action_id = 4;
   */
  actionId?: Id;

  /**
   * before-start | before | before-end | concurrent-with-start | concurrent
   * | concurrent-with-end | after-start | after | after-end
   *
   * @generated from field: google.fhir.stu3.proto.ActionRelationshipTypeCode relationship = 5;
   */
  relationship?: ActionRelationshipTypeCode;

  /**
   * @generated from field: google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction.Offset offset = 6;
   */
  offset?: PlanDefinition_Action_RelatedAction_Offset;

  constructor(data?: PartialMessage<PlanDefinition_Action_RelatedAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action_id", kind: "message", T: Id },
    { no: 5, name: "relationship", kind: "message", T: ActionRelationshipTypeCode },
    { no: 6, name: "offset", kind: "message", T: PlanDefinition_Action_RelatedAction_Offset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_RelatedAction {
    return new PlanDefinition_Action_RelatedAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction {
    return new PlanDefinition_Action_RelatedAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction {
    return new PlanDefinition_Action_RelatedAction().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_RelatedAction | PlainMessage<PlanDefinition_Action_RelatedAction> | undefined, b: PlanDefinition_Action_RelatedAction | PlainMessage<PlanDefinition_Action_RelatedAction> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_RelatedAction, a, b);
  }
}

/**
 * Time offset for the relationship
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction.Offset
 */
export class PlanDefinition_Action_RelatedAction_Offset extends Message<PlanDefinition_Action_RelatedAction_Offset> {
  /**
   * @generated from oneof google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction.Offset.offset
   */
  offset: {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 1;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Action_RelatedAction_Offset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action.RelatedAction.Offset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "message", T: Duration, oneof: "offset" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "offset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_RelatedAction_Offset {
    return new PlanDefinition_Action_RelatedAction_Offset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction_Offset {
    return new PlanDefinition_Action_RelatedAction_Offset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction_Offset {
    return new PlanDefinition_Action_RelatedAction_Offset().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_RelatedAction_Offset | PlainMessage<PlanDefinition_Action_RelatedAction_Offset> | undefined, b: PlanDefinition_Action_RelatedAction_Offset | PlainMessage<PlanDefinition_Action_RelatedAction_Offset> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_RelatedAction_Offset, a, b);
  }
}

/**
 * When the action should take place
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action.TimingType
 */
export class PlanDefinition_Action_TimingType extends Message<PlanDefinition_Action_TimingType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.PlanDefinition.Action.TimingType.timing
   */
  timing: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 3;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing_value = 5 [json_name = "timing"];
     */
    value: Timing;
    case: "timingValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Action_TimingType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action.TimingType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "timing" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "timing" },
    { no: 3, name: "duration", kind: "message", T: Duration, oneof: "timing" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "timing" },
    { no: 5, name: "timing_value", jsonName: "timing", kind: "message", T: Timing, oneof: "timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_TimingType {
    return new PlanDefinition_Action_TimingType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_TimingType {
    return new PlanDefinition_Action_TimingType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_TimingType {
    return new PlanDefinition_Action_TimingType().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_TimingType | PlainMessage<PlanDefinition_Action_TimingType> | undefined, b: PlanDefinition_Action_TimingType | PlainMessage<PlanDefinition_Action_TimingType> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_TimingType, a, b);
  }
}

/**
 * Who should participate in the action
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action.Participant
 */
export class PlanDefinition_Action_Participant extends Message<PlanDefinition_Action_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * patient | practitioner | related-person
   *
   * @generated from field: google.fhir.stu3.proto.ActionParticipantTypeCode type = 4;
   */
  type?: ActionParticipantTypeCode;

  /**
   * E.g. Nurse, Surgeon, Parent, etc
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  constructor(data?: PartialMessage<PlanDefinition_Action_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ActionParticipantTypeCode },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_Participant {
    return new PlanDefinition_Action_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Participant {
    return new PlanDefinition_Action_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Participant {
    return new PlanDefinition_Action_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_Participant | PlainMessage<PlanDefinition_Action_Participant> | undefined, b: PlanDefinition_Action_Participant | PlainMessage<PlanDefinition_Action_Participant> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_Participant, a, b);
  }
}

/**
 * Dynamic aspects of the definition
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinition.Action.DynamicValue
 */
export class PlanDefinition_Action_DynamicValue extends Message<PlanDefinition_Action_DynamicValue> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Natural language description of the dynamic value
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * The path to the element to be set dynamically
   *
   * @generated from field: google.fhir.stu3.proto.String path = 5;
   */
  path?: String;

  /**
   * Language of the expression
   *
   * @generated from field: google.fhir.stu3.proto.String language = 6;
   */
  language?: String;

  /**
   * An expression that provides the dynamic value for the customization
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  constructor(data?: PartialMessage<PlanDefinition_Action_DynamicValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinition.Action.DynamicValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "path", kind: "message", T: String },
    { no: 6, name: "language", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_DynamicValue {
    return new PlanDefinition_Action_DynamicValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_DynamicValue {
    return new PlanDefinition_Action_DynamicValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_DynamicValue {
    return new PlanDefinition_Action_DynamicValue().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_DynamicValue | PlainMessage<PlanDefinition_Action_DynamicValue> | undefined, b: PlanDefinition_Action_DynamicValue | PlainMessage<PlanDefinition_Action_DynamicValue> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_DynamicValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Practitioner, last updated
 * 2017-04-19T07:44:43.294+10:00. A person with a  formal responsibility in the
 * provisioning of healthcare or related services. See
 * http://hl7.org/fhir/StructureDefinition/Practitioner
 *
 * @generated from message google.fhir.stu3.proto.Practitioner
 */
export class Practitioner extends Message<Practitioner> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * A identifier for the person as this agent
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this practitioner's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * The name(s) associated with the practitioner
   *
   * @generated from field: repeated google.fhir.stu3.proto.HumanName name = 11;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the practitioner (that apply to all roles)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 12;
   */
  telecom: ContactPoint[] = [];

  /**
   * Address(es) of the practitioner that are not role specific (typically home
   * address)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 13;
   */
  address: Address[] = [];

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
   */
  gender?: AdministrativeGenderCode;

  /**
   * The date  on which the practitioner was born
   *
   * @generated from field: google.fhir.stu3.proto.Date birth_date = 15;
   */
  birthDate?: Date;

  /**
   * Image of the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment photo = 16;
   */
  photo: Attachment[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Practitioner.Qualification qualification = 17;
   */
  qualification: Practitioner_Qualification[] = [];

  /**
   * A language the practitioner is able to use in patient communication
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept communication = 18;
   */
  communication: CodeableConcept[] = [];

  constructor(data?: PartialMessage<Practitioner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Practitioner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 12, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 13, name: "address", kind: "message", T: Address, repeated: true },
    { no: 14, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 15, name: "birth_date", kind: "message", T: Date },
    { no: 16, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 17, name: "qualification", kind: "message", T: Practitioner_Qualification, repeated: true },
    { no: 18, name: "communication", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Practitioner {
    return new Practitioner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Practitioner {
    return new Practitioner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Practitioner {
    return new Practitioner().fromJsonString(jsonString, options);
  }

  static equals(a: Practitioner | PlainMessage<Practitioner> | undefined, b: Practitioner | PlainMessage<Practitioner> | undefined): boolean {
    return proto3.util.equals(Practitioner, a, b);
  }
}

/**
 * Qualifications obtained by training and certification
 *
 * @generated from message google.fhir.stu3.proto.Practitioner.Qualification
 */
export class Practitioner_Qualification extends Message<Practitioner_Qualification> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for this qualification for the practitioner
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier: Identifier[] = [];

  /**
   * Coded representation of the qualification
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Period during which the qualification is valid
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  /**
   * Organization that regulates and issues the qualification
   *
   * @generated from field: google.fhir.stu3.proto.Reference issuer = 7;
   */
  issuer?: Reference;

  constructor(data?: PartialMessage<Practitioner_Qualification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Practitioner.Qualification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "issuer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Practitioner_Qualification {
    return new Practitioner_Qualification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Practitioner_Qualification {
    return new Practitioner_Qualification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Practitioner_Qualification {
    return new Practitioner_Qualification().fromJsonString(jsonString, options);
  }

  static equals(a: Practitioner_Qualification | PlainMessage<Practitioner_Qualification> | undefined, b: Practitioner_Qualification | PlainMessage<Practitioner_Qualification> | undefined): boolean {
    return proto3.util.equals(Practitioner_Qualification, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for PractitionerRole, last updated
 * 2017-04-19T07:44:43.294+10:00. Roles/organizations the practitioner is
 * associated with. See http://hl7.org/fhir/StructureDefinition/PractitionerRole
 *
 * @generated from message google.fhir.stu3.proto.PractitionerRole
 */
export class PractitionerRole extends Message<PractitionerRole> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifiers that are specific to a role/location
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this practitioner's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * The period during which the practitioner is authorized to perform in these
   * role(s)
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 11;
   */
  period?: Period;

  /**
   * Practitioner that is able to provide the defined services for the
   * organation
   *
   * @generated from field: google.fhir.stu3.proto.Reference practitioner = 12;
   */
  practitioner?: Reference;

  /**
   * Organization where the roles are available
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 13;
   */
  organization?: Reference;

  /**
   * Roles which this practitioner may perform
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 14;
   */
  code: CodeableConcept[] = [];

  /**
   * Specific specialty of the practitioner
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept specialty = 15;
   */
  specialty: CodeableConcept[] = [];

  /**
   * The location(s) at which this practitioner provides care
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference location = 16;
   */
  location: Reference[] = [];

  /**
   * The list of healthcare services that this worker provides for this role's
   * Organization/Location(s)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference healthcare_service = 17;
   */
  healthcareService: Reference[] = [];

  /**
   * Contact details that are specific to the role/location/service
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 18;
   */
  telecom: ContactPoint[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PractitionerRole.AvailableTime available_time = 19;
   */
  availableTime: PractitionerRole_AvailableTime[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.PractitionerRole.NotAvailable not_available = 20;
   */
  notAvailable: PractitionerRole_NotAvailable[] = [];

  /**
   * Description of availability exceptions
   *
   * @generated from field: google.fhir.stu3.proto.String availability_exceptions = 21;
   */
  availabilityExceptions?: String;

  /**
   * Technical endpoints providing access to services operated for the
   * practitioner with this role
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 22;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<PractitionerRole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PractitionerRole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "period", kind: "message", T: Period },
    { no: 12, name: "practitioner", kind: "message", T: Reference },
    { no: 13, name: "organization", kind: "message", T: Reference },
    { no: 14, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "specialty", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "location", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "healthcare_service", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 19, name: "available_time", kind: "message", T: PractitionerRole_AvailableTime, repeated: true },
    { no: 20, name: "not_available", kind: "message", T: PractitionerRole_NotAvailable, repeated: true },
    { no: 21, name: "availability_exceptions", kind: "message", T: String },
    { no: 22, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PractitionerRole {
    return new PractitionerRole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PractitionerRole {
    return new PractitionerRole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PractitionerRole {
    return new PractitionerRole().fromJsonString(jsonString, options);
  }

  static equals(a: PractitionerRole | PlainMessage<PractitionerRole> | undefined, b: PractitionerRole | PlainMessage<PractitionerRole> | undefined): boolean {
    return proto3.util.equals(PractitionerRole, a, b);
  }
}

/**
 * Times the Service Site is available
 *
 * @generated from message google.fhir.stu3.proto.PractitionerRole.AvailableTime
 */
export class PractitionerRole_AvailableTime extends Message<PractitionerRole_AvailableTime> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * mon | tue | wed | thu | fri | sat | sun
   *
   * @generated from field: repeated google.fhir.stu3.proto.DaysOfWeekCode days_of_week = 4;
   */
  daysOfWeek: DaysOfWeekCode[] = [];

  /**
   * Always available? e.g. 24 hour service
   *
   * @generated from field: google.fhir.stu3.proto.Boolean all_day = 5;
   */
  allDay?: Boolean;

  /**
   * Opening time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.stu3.proto.Time available_start_time = 6;
   */
  availableStartTime?: Time;

  /**
   * Closing time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.stu3.proto.Time available_end_time = 7;
   */
  availableEndTime?: Time;

  constructor(data?: PartialMessage<PractitionerRole_AvailableTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PractitionerRole.AvailableTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "days_of_week", kind: "message", T: DaysOfWeekCode, repeated: true },
    { no: 5, name: "all_day", kind: "message", T: Boolean },
    { no: 6, name: "available_start_time", kind: "message", T: Time },
    { no: 7, name: "available_end_time", kind: "message", T: Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PractitionerRole_AvailableTime {
    return new PractitionerRole_AvailableTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PractitionerRole_AvailableTime {
    return new PractitionerRole_AvailableTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PractitionerRole_AvailableTime {
    return new PractitionerRole_AvailableTime().fromJsonString(jsonString, options);
  }

  static equals(a: PractitionerRole_AvailableTime | PlainMessage<PractitionerRole_AvailableTime> | undefined, b: PractitionerRole_AvailableTime | PlainMessage<PractitionerRole_AvailableTime> | undefined): boolean {
    return proto3.util.equals(PractitionerRole_AvailableTime, a, b);
  }
}

/**
 * Not available during this time due to provided reason
 *
 * @generated from message google.fhir.stu3.proto.PractitionerRole.NotAvailable
 */
export class PractitionerRole_NotAvailable extends Message<PractitionerRole_NotAvailable> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reason presented to the user explaining why time not available
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * Service not availablefrom this date
   *
   * @generated from field: google.fhir.stu3.proto.Period during = 5;
   */
  during?: Period;

  constructor(data?: PartialMessage<PractitionerRole_NotAvailable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PractitionerRole.NotAvailable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "during", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PractitionerRole_NotAvailable {
    return new PractitionerRole_NotAvailable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PractitionerRole_NotAvailable {
    return new PractitionerRole_NotAvailable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PractitionerRole_NotAvailable {
    return new PractitionerRole_NotAvailable().fromJsonString(jsonString, options);
  }

  static equals(a: PractitionerRole_NotAvailable | PlainMessage<PractitionerRole_NotAvailable> | undefined, b: PractitionerRole_NotAvailable | PlainMessage<PractitionerRole_NotAvailable> | undefined): boolean {
    return proto3.util.equals(PractitionerRole_NotAvailable, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Procedure, last updated
 * 2017-04-19T07:44:43.294+10:00. An action that is being or was performed on a
 * patient. See http://hl7.org/fhir/StructureDefinition/Procedure
 *
 * @generated from message google.fhir.stu3.proto.Procedure
 */
export class Procedure extends Message<Procedure> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Identifiers for this procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * A request for this procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * preparation | in-progress | suspended | aborted | completed |
   * entered-in-error | unknown
   *
   * @generated from field: google.fhir.stu3.proto.EventStatusCode status = 13;
   */
  status?: EventStatusCode;

  /**
   * True if procedure was not performed as scheduled
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_done = 14;
   */
  notDone?: Boolean;

  /**
   * Reason procedure was not performed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
   */
  notDoneReason?: CodeableConcept;

  /**
   * Classification of the procedure
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 16;
   */
  category?: CodeableConcept;

  /**
   * Identification of the procedure
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 17;
   */
  code?: CodeableConcept;

  /**
   * Who the procedure was performed on
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Encounter or episode associated with the procedure
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 19;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Procedure.Performed performed = 20;
   */
  performed?: Procedure_Performed;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Procedure.Performer performer = 21;
   */
  performer: Procedure_Performer[] = [];

  /**
   * Where the procedure happened
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 22;
   */
  location?: Reference;

  /**
   * Coded reason procedure performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 23;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition that is the reason the procedure performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 24;
   */
  reasonReference: Reference[] = [];

  /**
   * Target body sites
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 25;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * The result of procedure
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 26;
   */
  outcome?: CodeableConcept;

  /**
   * Any report resulting from the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference report = 27;
   */
  report: Reference[] = [];

  /**
   * Complication following the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept complication = 28;
   */
  complication: CodeableConcept[] = [];

  /**
   * A condition that is a result of the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference complication_detail = 29;
   */
  complicationDetail: Reference[] = [];

  /**
   * Instructions for follow up
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept follow_up = 30;
   */
  followUp: CodeableConcept[] = [];

  /**
   * Additional information about the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 31;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Procedure.FocalDevice focal_device = 32;
   */
  focalDevice: Procedure_FocalDevice[] = [];

  /**
   * Items used during procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference used_reference = 33;
   */
  usedReference: Reference[] = [];

  /**
   * Coded items used during the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept used_code = 34;
   */
  usedCode: CodeableConcept[] = [];

  constructor(data?: PartialMessage<Procedure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Procedure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: EventStatusCode },
    { no: 14, name: "not_done", kind: "message", T: Boolean },
    { no: 15, name: "not_done_reason", kind: "message", T: CodeableConcept },
    { no: 16, name: "category", kind: "message", T: CodeableConcept },
    { no: 17, name: "code", kind: "message", T: CodeableConcept },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "context", kind: "message", T: Reference },
    { no: 20, name: "performed", kind: "message", T: Procedure_Performed },
    { no: 21, name: "performer", kind: "message", T: Procedure_Performer, repeated: true },
    { no: 22, name: "location", kind: "message", T: Reference },
    { no: 23, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 27, name: "report", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "complication", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "complication_detail", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "follow_up", kind: "message", T: CodeableConcept, repeated: true },
    { no: 31, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 32, name: "focal_device", kind: "message", T: Procedure_FocalDevice, repeated: true },
    { no: 33, name: "used_reference", kind: "message", T: Reference, repeated: true },
    { no: 34, name: "used_code", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Procedure {
    return new Procedure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Procedure {
    return new Procedure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Procedure {
    return new Procedure().fromJsonString(jsonString, options);
  }

  static equals(a: Procedure | PlainMessage<Procedure> | undefined, b: Procedure | PlainMessage<Procedure> | undefined): boolean {
    return proto3.util.equals(Procedure, a, b);
  }
}

/**
 * Date/Period the procedure was performed
 *
 * @generated from message google.fhir.stu3.proto.Procedure.Performed
 */
export class Procedure_Performed extends Message<Procedure_Performed> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Procedure.Performed.performed
   */
  performed: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Procedure_Performed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Procedure.Performed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "performed" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "performed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Procedure_Performed {
    return new Procedure_Performed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Procedure_Performed {
    return new Procedure_Performed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Procedure_Performed {
    return new Procedure_Performed().fromJsonString(jsonString, options);
  }

  static equals(a: Procedure_Performed | PlainMessage<Procedure_Performed> | undefined, b: Procedure_Performed | PlainMessage<Procedure_Performed> | undefined): boolean {
    return proto3.util.equals(Procedure_Performed, a, b);
  }
}

/**
 * The people who performed the procedure
 *
 * @generated from message google.fhir.stu3.proto.Procedure.Performer
 */
export class Procedure_Performer extends Message<Procedure_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The role the actor was in
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * The reference to the practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  /**
   * Organization the device or practitioner was acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<Procedure_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Procedure.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Procedure_Performer {
    return new Procedure_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Procedure_Performer {
    return new Procedure_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Procedure_Performer {
    return new Procedure_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: Procedure_Performer | PlainMessage<Procedure_Performer> | undefined, b: Procedure_Performer | PlainMessage<Procedure_Performer> | undefined): boolean {
    return proto3.util.equals(Procedure_Performer, a, b);
  }
}

/**
 * Device changed in procedure
 *
 * @generated from message google.fhir.stu3.proto.Procedure.FocalDevice
 */
export class Procedure_FocalDevice extends Message<Procedure_FocalDevice> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Kind of change to device
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Device that was changed
   *
   * @generated from field: google.fhir.stu3.proto.Reference manipulated = 5;
   */
  manipulated?: Reference;

  constructor(data?: PartialMessage<Procedure_FocalDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Procedure.FocalDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: CodeableConcept },
    { no: 5, name: "manipulated", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Procedure_FocalDevice {
    return new Procedure_FocalDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Procedure_FocalDevice {
    return new Procedure_FocalDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Procedure_FocalDevice {
    return new Procedure_FocalDevice().fromJsonString(jsonString, options);
  }

  static equals(a: Procedure_FocalDevice | PlainMessage<Procedure_FocalDevice> | undefined, b: Procedure_FocalDevice | PlainMessage<Procedure_FocalDevice> | undefined): boolean {
    return proto3.util.equals(Procedure_FocalDevice, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ProcedureRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. A request for a procedure or diagnostic to be
 * performed. See http://hl7.org/fhir/StructureDefinition/ProcedureRequest
 *
 * @generated from message google.fhir.stu3.proto.ProcedureRequest
 */
export class ProcedureRequest extends Message<ProcedureRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifiers assigned to this order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * What request replaces
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 12;
   */
  replaces: Reference[] = [];

  /**
   * Composite Request ID
   *
   * @generated from field: google.fhir.stu3.proto.Identifier requisition = 13;
   */
  requisition?: Identifier;

  /**
   * draft | active | suspended | completed | entered-in-error | cancelled
   *
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode status = 14;
   */
  status?: RequestStatusCode;

  /**
   * proposal | plan | order +
   *
   * @generated from field: google.fhir.stu3.proto.RequestIntentCode intent = 15;
   */
  intent?: RequestIntentCode;

  /**
   * routine | urgent | asap | stat
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 16;
   */
  priority?: RequestPriorityCode;

  /**
   * True if procedure should not be performed
   *
   * @generated from field: google.fhir.stu3.proto.Boolean do_not_perform = 17;
   */
  doNotPerform?: Boolean;

  /**
   * Classification of procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 18;
   */
  category: CodeableConcept[] = [];

  /**
   * What is being requested/ordered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 19;
   */
  code?: CodeableConcept;

  /**
   * Individual the service is ordered for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 20;
   */
  subject?: Reference;

  /**
   * Encounter or Episode during which request was created
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 21;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ProcedureRequest.Occurrence occurrence = 22;
   */
  occurrence?: ProcedureRequest_Occurrence;

  /**
   * @generated from field: google.fhir.stu3.proto.ProcedureRequest.AsNeeded as_needed = 23;
   */
  asNeeded?: ProcedureRequest_AsNeeded;

  /**
   * Date request signed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 24;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.ProcedureRequest.Requester requester = 25;
   */
  requester?: ProcedureRequest_Requester;

  /**
   * Performer role
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept performer_type = 26;
   */
  performerType?: CodeableConcept;

  /**
   * Requested perfomer
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 27;
   */
  performer?: Reference;

  /**
   * Explanation/Justification for test
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 28;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Explanation/Justification for test
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 29;
   */
  reasonReference: Reference[] = [];

  /**
   * Additional clinical information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_info = 30;
   */
  supportingInfo: Reference[] = [];

  /**
   * Procedure Samples
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 31;
   */
  specimen: Reference[] = [];

  /**
   * Location on Body
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 32;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * Comments
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 33;
   */
  note: Annotation[] = [];

  /**
   * Request provenance
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference relevant_history = 34;
   */
  relevantHistory: Reference[] = [];

  constructor(data?: PartialMessage<ProcedureRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedureRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "requisition", kind: "message", T: Identifier },
    { no: 14, name: "status", kind: "message", T: RequestStatusCode },
    { no: 15, name: "intent", kind: "message", T: RequestIntentCode },
    { no: 16, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 17, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 18, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "code", kind: "message", T: CodeableConcept },
    { no: 20, name: "subject", kind: "message", T: Reference },
    { no: 21, name: "context", kind: "message", T: Reference },
    { no: 22, name: "occurrence", kind: "message", T: ProcedureRequest_Occurrence },
    { no: 23, name: "as_needed", kind: "message", T: ProcedureRequest_AsNeeded },
    { no: 24, name: "authored_on", kind: "message", T: DateTime },
    { no: 25, name: "requester", kind: "message", T: ProcedureRequest_Requester },
    { no: 26, name: "performer_type", kind: "message", T: CodeableConcept },
    { no: 27, name: "performer", kind: "message", T: Reference },
    { no: 28, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 33, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 34, name: "relevant_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureRequest {
    return new ProcedureRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureRequest {
    return new ProcedureRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureRequest {
    return new ProcedureRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureRequest | PlainMessage<ProcedureRequest> | undefined, b: ProcedureRequest | PlainMessage<ProcedureRequest> | undefined): boolean {
    return proto3.util.equals(ProcedureRequest, a, b);
  }
}

/**
 * When procedure should occur
 *
 * @generated from message google.fhir.stu3.proto.ProcedureRequest.Occurrence
 */
export class ProcedureRequest_Occurrence extends Message<ProcedureRequest_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ProcedureRequest.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ProcedureRequest_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedureRequest.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureRequest_Occurrence {
    return new ProcedureRequest_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureRequest_Occurrence {
    return new ProcedureRequest_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureRequest_Occurrence {
    return new ProcedureRequest_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureRequest_Occurrence | PlainMessage<ProcedureRequest_Occurrence> | undefined, b: ProcedureRequest_Occurrence | PlainMessage<ProcedureRequest_Occurrence> | undefined): boolean {
    return proto3.util.equals(ProcedureRequest_Occurrence, a, b);
  }
}

/**
 * Preconditions for procedure or diagnostic
 *
 * @generated from message google.fhir.stu3.proto.ProcedureRequest.AsNeeded
 */
export class ProcedureRequest_AsNeeded extends Message<ProcedureRequest_AsNeeded> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ProcedureRequest.AsNeeded.as_needed
   */
  asNeeded: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ProcedureRequest_AsNeeded>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedureRequest.AsNeeded";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "as_needed" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "as_needed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureRequest_AsNeeded {
    return new ProcedureRequest_AsNeeded().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureRequest_AsNeeded {
    return new ProcedureRequest_AsNeeded().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureRequest_AsNeeded {
    return new ProcedureRequest_AsNeeded().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureRequest_AsNeeded | PlainMessage<ProcedureRequest_AsNeeded> | undefined, b: ProcedureRequest_AsNeeded | PlainMessage<ProcedureRequest_AsNeeded> | undefined): boolean {
    return proto3.util.equals(ProcedureRequest_AsNeeded, a, b);
  }
}

/**
 * Who/what is requesting procedure or diagnostic
 *
 * @generated from message google.fhir.stu3.proto.ProcedureRequest.Requester
 */
export class ProcedureRequest_Requester extends Message<ProcedureRequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual making the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<ProcedureRequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedureRequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureRequest_Requester {
    return new ProcedureRequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureRequest_Requester {
    return new ProcedureRequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureRequest_Requester {
    return new ProcedureRequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureRequest_Requester | PlainMessage<ProcedureRequest_Requester> | undefined, b: ProcedureRequest_Requester | PlainMessage<ProcedureRequest_Requester> | undefined): boolean {
    return proto3.util.equals(ProcedureRequest_Requester, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ProcessRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. Request to perform some action on or in
 * regards to an existing resource. See
 * http://hl7.org/fhir/StructureDefinition/ProcessRequest
 *
 * @generated from message google.fhir.stu3.proto.ProcessRequest
 */
export class ProcessRequest extends Message<ProcessRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * cancel | poll | reprocess | status
   *
   * @generated from field: google.fhir.stu3.proto.ActionListCode action = 11;
   */
  action?: ActionListCode;

  /**
   * Party which is the target of the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 12;
   */
  target?: Reference;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 13;
   */
  created?: DateTime;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference provider = 14;
   */
  provider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 15;
   */
  organization?: Reference;

  /**
   * Reference to the Request resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 16;
   */
  request?: Reference;

  /**
   * Reference to the Response resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference response = 17;
   */
  response?: Reference;

  /**
   * Remove history
   *
   * @generated from field: google.fhir.stu3.proto.Boolean nullify = 18;
   */
  nullify?: Boolean;

  /**
   * Reference number/string
   *
   * @generated from field: google.fhir.stu3.proto.String reference = 19;
   */
  reference?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ProcessRequest.Items item = 20;
   */
  item: ProcessRequest_Items[] = [];

  /**
   * Resource type(s) to include
   *
   * @generated from field: repeated google.fhir.stu3.proto.String include = 21;
   */
  include: String[] = [];

  /**
   * Resource type(s) to exclude
   *
   * @generated from field: repeated google.fhir.stu3.proto.String exclude = 22;
   */
  exclude: String[] = [];

  /**
   * Selection period
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 23;
   */
  period?: Period;

  constructor(data?: PartialMessage<ProcessRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcessRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "action", kind: "message", T: ActionListCode },
    { no: 12, name: "target", kind: "message", T: Reference },
    { no: 13, name: "created", kind: "message", T: DateTime },
    { no: 14, name: "provider", kind: "message", T: Reference },
    { no: 15, name: "organization", kind: "message", T: Reference },
    { no: 16, name: "request", kind: "message", T: Reference },
    { no: 17, name: "response", kind: "message", T: Reference },
    { no: 18, name: "nullify", kind: "message", T: Boolean },
    { no: 19, name: "reference", kind: "message", T: String },
    { no: 20, name: "item", kind: "message", T: ProcessRequest_Items, repeated: true },
    { no: 21, name: "include", kind: "message", T: String, repeated: true },
    { no: 22, name: "exclude", kind: "message", T: String, repeated: true },
    { no: 23, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessRequest {
    return new ProcessRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessRequest {
    return new ProcessRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessRequest {
    return new ProcessRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessRequest | PlainMessage<ProcessRequest> | undefined, b: ProcessRequest | PlainMessage<ProcessRequest> | undefined): boolean {
    return proto3.util.equals(ProcessRequest, a, b);
  }
}

/**
 * Items to re-adjudicate
 *
 * @generated from message google.fhir.stu3.proto.ProcessRequest.Items
 */
export class ProcessRequest_Items extends Message<ProcessRequest_Items> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Service instance
   *
   * @generated from field: google.fhir.stu3.proto.Integer sequence_link_id = 4;
   */
  sequenceLinkId?: Integer;

  constructor(data?: PartialMessage<ProcessRequest_Items>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcessRequest.Items";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence_link_id", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessRequest_Items {
    return new ProcessRequest_Items().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessRequest_Items {
    return new ProcessRequest_Items().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessRequest_Items {
    return new ProcessRequest_Items().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessRequest_Items | PlainMessage<ProcessRequest_Items> | undefined, b: ProcessRequest_Items | PlainMessage<ProcessRequest_Items> | undefined): boolean {
    return proto3.util.equals(ProcessRequest_Items, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ProcessResponse, last updated
 * 2017-04-19T07:44:43.294+10:00. ProcessResponse resource. See
 * http://hl7.org/fhir/StructureDefinition/ProcessResponse
 *
 * @generated from message google.fhir.stu3.proto.ProcessResponse
 */
export class ProcessResponse extends Message<ProcessResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 11;
   */
  created?: DateTime;

  /**
   * Authoring Organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 12;
   */
  organization?: Reference;

  /**
   * Request reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference request = 13;
   */
  request?: Reference;

  /**
   * Processing outcome
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 14;
   */
  outcome?: CodeableConcept;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.stu3.proto.String disposition = 15;
   */
  disposition?: String;

  /**
   * Responsible Practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_provider = 16;
   */
  requestProvider?: Reference;

  /**
   * Responsible organization
   *
   * @generated from field: google.fhir.stu3.proto.Reference request_organization = 17;
   */
  requestOrganization?: Reference;

  /**
   * Printed Form Identifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 18;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ProcessResponse.ProcessNote process_note = 19;
   */
  processNote: ProcessResponse_ProcessNote[] = [];

  /**
   * Error code
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept error = 20;
   */
  error: CodeableConcept[] = [];

  /**
   * Request for additional information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference communication_request = 21;
   */
  communicationRequest: Reference[] = [];

  constructor(data?: PartialMessage<ProcessResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcessResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "created", kind: "message", T: DateTime },
    { no: 12, name: "organization", kind: "message", T: Reference },
    { no: 13, name: "request", kind: "message", T: Reference },
    { no: 14, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 15, name: "disposition", kind: "message", T: String },
    { no: 16, name: "request_provider", kind: "message", T: Reference },
    { no: 17, name: "request_organization", kind: "message", T: Reference },
    { no: 18, name: "form", kind: "message", T: CodeableConcept },
    { no: 19, name: "process_note", kind: "message", T: ProcessResponse_ProcessNote, repeated: true },
    { no: 20, name: "error", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "communication_request", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessResponse {
    return new ProcessResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessResponse {
    return new ProcessResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessResponse {
    return new ProcessResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessResponse | PlainMessage<ProcessResponse> | undefined, b: ProcessResponse | PlainMessage<ProcessResponse> | undefined): boolean {
    return proto3.util.equals(ProcessResponse, a, b);
  }
}

/**
 * Processing comments or additional requirements
 *
 * @generated from message google.fhir.stu3.proto.ProcessResponse.ProcessNote
 */
export class ProcessResponse_ProcessNote extends Message<ProcessResponse_ProcessNote> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * display | print | printoper
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Comment on the processing
   *
   * @generated from field: google.fhir.stu3.proto.String text = 5;
   */
  text?: String;

  constructor(data?: PartialMessage<ProcessResponse_ProcessNote>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcessResponse.ProcessNote";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessResponse_ProcessNote {
    return new ProcessResponse_ProcessNote().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessResponse_ProcessNote {
    return new ProcessResponse_ProcessNote().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessResponse_ProcessNote {
    return new ProcessResponse_ProcessNote().fromJsonString(jsonString, options);
  }

  static equals(a: ProcessResponse_ProcessNote | PlainMessage<ProcessResponse_ProcessNote> | undefined, b: ProcessResponse_ProcessNote | PlainMessage<ProcessResponse_ProcessNote> | undefined): boolean {
    return proto3.util.equals(ProcessResponse_ProcessNote, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Provenance, last updated
 * 2017-04-19T07:44:43.294+10:00. Who, What, When for a set of resources. See
 * http://hl7.org/fhir/StructureDefinition/Provenance
 *
 * @generated from message google.fhir.stu3.proto.Provenance
 */
export class Provenance extends Message<Provenance> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Target Reference(s) (usually version specific)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference target = 9;
   */
  target: Reference[] = [];

  /**
   * When the activity occurred
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 10;
   */
  period?: Period;

  /**
   * When the activity was recorded / updated
   *
   * @generated from field: google.fhir.stu3.proto.Instant recorded = 11;
   */
  recorded?: Instant;

  /**
   * Policy or plan the activity was defined by
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri policy = 12;
   */
  policy: Uri[] = [];

  /**
   * Where the activity occurred, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 13;
   */
  location?: Reference;

  /**
   * Reason the activity is occurring
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding reason = 14;
   */
  reason: Coding[] = [];

  /**
   * Activity that occurred
   *
   * @generated from field: google.fhir.stu3.proto.Coding activity = 15;
   */
  activity?: Coding;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Provenance.Agent agent = 16;
   */
  agent: Provenance_Agent[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Provenance.Entity entity = 17;
   */
  entity: Provenance_Entity[] = [];

  /**
   * Signature on target
   *
   * @generated from field: repeated google.fhir.stu3.proto.Signature signature = 18;
   */
  signature: Signature[] = [];

  constructor(data?: PartialMessage<Provenance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Provenance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "target", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "period", kind: "message", T: Period },
    { no: 11, name: "recorded", kind: "message", T: Instant },
    { no: 12, name: "policy", kind: "message", T: Uri, repeated: true },
    { no: 13, name: "location", kind: "message", T: Reference },
    { no: 14, name: "reason", kind: "message", T: Coding, repeated: true },
    { no: 15, name: "activity", kind: "message", T: Coding },
    { no: 16, name: "agent", kind: "message", T: Provenance_Agent, repeated: true },
    { no: 17, name: "entity", kind: "message", T: Provenance_Entity, repeated: true },
    { no: 18, name: "signature", kind: "message", T: Signature, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provenance {
    return new Provenance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provenance {
    return new Provenance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provenance {
    return new Provenance().fromJsonString(jsonString, options);
  }

  static equals(a: Provenance | PlainMessage<Provenance> | undefined, b: Provenance | PlainMessage<Provenance> | undefined): boolean {
    return proto3.util.equals(Provenance, a, b);
  }
}

/**
 * Actor involved
 *
 * @generated from message google.fhir.stu3.proto.Provenance.Agent
 */
export class Provenance_Agent extends Message<Provenance_Agent> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What the agents role was
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Provenance.Agent.Who who = 5;
   */
  who?: Provenance_Agent_Who;

  /**
   * @generated from field: google.fhir.stu3.proto.Provenance.Agent.OnBehalfOf on_behalf_of = 6;
   */
  onBehalfOf?: Provenance_Agent_OnBehalfOf;

  /**
   * Type of relationship between agents
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept related_agent_type = 7;
   */
  relatedAgentType?: CodeableConcept;

  constructor(data?: PartialMessage<Provenance_Agent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Provenance.Agent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "who", kind: "message", T: Provenance_Agent_Who },
    { no: 6, name: "on_behalf_of", kind: "message", T: Provenance_Agent_OnBehalfOf },
    { no: 7, name: "related_agent_type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provenance_Agent {
    return new Provenance_Agent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provenance_Agent {
    return new Provenance_Agent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provenance_Agent {
    return new Provenance_Agent().fromJsonString(jsonString, options);
  }

  static equals(a: Provenance_Agent | PlainMessage<Provenance_Agent> | undefined, b: Provenance_Agent | PlainMessage<Provenance_Agent> | undefined): boolean {
    return proto3.util.equals(Provenance_Agent, a, b);
  }
}

/**
 * Who participated
 *
 * @generated from message google.fhir.stu3.proto.Provenance.Agent.Who
 */
export class Provenance_Agent_Who extends Message<Provenance_Agent_Who> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Provenance.Agent.Who.who
   */
  who: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Provenance_Agent_Who>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Provenance.Agent.Who";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "who" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "who" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provenance_Agent_Who {
    return new Provenance_Agent_Who().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provenance_Agent_Who {
    return new Provenance_Agent_Who().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provenance_Agent_Who {
    return new Provenance_Agent_Who().fromJsonString(jsonString, options);
  }

  static equals(a: Provenance_Agent_Who | PlainMessage<Provenance_Agent_Who> | undefined, b: Provenance_Agent_Who | PlainMessage<Provenance_Agent_Who> | undefined): boolean {
    return proto3.util.equals(Provenance_Agent_Who, a, b);
  }
}

/**
 * Who the agent is representing
 *
 * @generated from message google.fhir.stu3.proto.Provenance.Agent.OnBehalfOf
 */
export class Provenance_Agent_OnBehalfOf extends Message<Provenance_Agent_OnBehalfOf> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Provenance.Agent.OnBehalfOf.on_behalf_of
   */
  onBehalfOf: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Provenance_Agent_OnBehalfOf>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Provenance.Agent.OnBehalfOf";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "on_behalf_of" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "on_behalf_of" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provenance_Agent_OnBehalfOf {
    return new Provenance_Agent_OnBehalfOf().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provenance_Agent_OnBehalfOf {
    return new Provenance_Agent_OnBehalfOf().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provenance_Agent_OnBehalfOf {
    return new Provenance_Agent_OnBehalfOf().fromJsonString(jsonString, options);
  }

  static equals(a: Provenance_Agent_OnBehalfOf | PlainMessage<Provenance_Agent_OnBehalfOf> | undefined, b: Provenance_Agent_OnBehalfOf | PlainMessage<Provenance_Agent_OnBehalfOf> | undefined): boolean {
    return proto3.util.equals(Provenance_Agent_OnBehalfOf, a, b);
  }
}

/**
 * An entity used in this activity
 *
 * @generated from message google.fhir.stu3.proto.Provenance.Entity
 */
export class Provenance_Entity extends Message<Provenance_Entity> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * derivation | revision | quotation | source | removal
   *
   * @generated from field: google.fhir.stu3.proto.ProvenanceEntityRoleCode role = 4;
   */
  role?: ProvenanceEntityRoleCode;

  /**
   * @generated from field: google.fhir.stu3.proto.Provenance.Entity.What what = 5;
   */
  what?: Provenance_Entity_What;

  /**
   * Entity is attributed to this agent
   *
   * @generated from field: repeated google.fhir.stu3.proto.Provenance.Agent agent = 6;
   */
  agent: Provenance_Agent[] = [];

  constructor(data?: PartialMessage<Provenance_Entity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Provenance.Entity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: ProvenanceEntityRoleCode },
    { no: 5, name: "what", kind: "message", T: Provenance_Entity_What },
    { no: 6, name: "agent", kind: "message", T: Provenance_Agent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provenance_Entity {
    return new Provenance_Entity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provenance_Entity {
    return new Provenance_Entity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provenance_Entity {
    return new Provenance_Entity().fromJsonString(jsonString, options);
  }

  static equals(a: Provenance_Entity | PlainMessage<Provenance_Entity> | undefined, b: Provenance_Entity | PlainMessage<Provenance_Entity> | undefined): boolean {
    return proto3.util.equals(Provenance_Entity, a, b);
  }
}

/**
 * Identity of entity
 *
 * @generated from message google.fhir.stu3.proto.Provenance.Entity.What
 */
export class Provenance_Entity_What extends Message<Provenance_Entity_What> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Provenance.Entity.What.what
   */
  what: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 3;
     */
    value: Identifier;
    case: "identifier";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Provenance_Entity_What>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Provenance.Entity.What";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "what" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "what" },
    { no: 3, name: "identifier", kind: "message", T: Identifier, oneof: "what" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provenance_Entity_What {
    return new Provenance_Entity_What().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provenance_Entity_What {
    return new Provenance_Entity_What().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provenance_Entity_What {
    return new Provenance_Entity_What().fromJsonString(jsonString, options);
  }

  static equals(a: Provenance_Entity_What | PlainMessage<Provenance_Entity_What> | undefined, b: Provenance_Entity_What | PlainMessage<Provenance_Entity_What> | undefined): boolean {
    return proto3.util.equals(Provenance_Entity_What, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Questionnaire, last updated
 * 2017-04-19T07:44:43.294+10:00. A structured set of questions. See
 * http://hl7.org/fhir/StructureDefinition/Questionnaire
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire
 */
export class Questionnaire extends Message<Questionnaire> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this questionnaire (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the questionnaire
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the questionnaire
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this questionnaire (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this questionnaire (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Natural language description of the questionnaire
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Why this questionnaire is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 19;
   */
  purpose?: Markdown;

  /**
   * When the questionnaire was approved by publisher
   *
   * @generated from field: google.fhir.stu3.proto.Date approval_date = 20;
   */
  approvalDate?: Date;

  /**
   * When the questionnaire was last reviewed
   *
   * @generated from field: google.fhir.stu3.proto.Date last_review_date = 21;
   */
  lastReviewDate?: Date;

  /**
   * When the questionnaire is expected to be used
   *
   * @generated from field: google.fhir.stu3.proto.Period effective_period = 22;
   */
  effectivePeriod?: Period;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 23;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for questionnaire (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 24;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 25;
   */
  contact: ContactDetail[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 26;
   */
  copyright?: Markdown;

  /**
   * Concept that represents the overall questionnaire
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding code = 27;
   */
  code: Coding[] = [];

  /**
   * Resource that can be subject of QuestionnaireResponse
   *
   * @generated from field: repeated google.fhir.stu3.proto.ResourceTypeCode subject_type = 28;
   */
  subjectType: ResourceTypeCode[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Questionnaire.Item item = 29;
   */
  item: Questionnaire_Item[] = [];

  constructor(data?: PartialMessage<Questionnaire>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "purpose", kind: "message", T: Markdown },
    { no: 20, name: "approval_date", kind: "message", T: Date },
    { no: 21, name: "last_review_date", kind: "message", T: Date },
    { no: 22, name: "effective_period", kind: "message", T: Period },
    { no: 23, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 24, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 26, name: "copyright", kind: "message", T: Markdown },
    { no: 27, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 28, name: "subject_type", kind: "message", T: ResourceTypeCode, repeated: true },
    { no: 29, name: "item", kind: "message", T: Questionnaire_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire {
    return new Questionnaire().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire {
    return new Questionnaire().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire {
    return new Questionnaire().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire | PlainMessage<Questionnaire> | undefined, b: Questionnaire | PlainMessage<Questionnaire> | undefined): boolean {
    return proto3.util.equals(Questionnaire, a, b);
  }
}

/**
 * Questions and sections within the Questionnaire
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire.Item
 */
export class Questionnaire_Item extends Message<Questionnaire_Item> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id for item in questionnaire
   *
   * @generated from field: google.fhir.stu3.proto.String link_id = 4;
   */
  linkId?: String;

  /**
   * ElementDefinition - details for the item
   *
   * @generated from field: google.fhir.stu3.proto.Uri definition = 5;
   */
  definition?: Uri;

  /**
   * Corresponding concept for this item in a terminology
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding code = 6;
   */
  code: Coding[] = [];

  /**
   * E.g. "1(a)", "2.5.3"
   *
   * @generated from field: google.fhir.stu3.proto.String prefix = 7;
   */
  prefix?: String;

  /**
   * Primary text for the item
   *
   * @generated from field: google.fhir.stu3.proto.String text = 8;
   */
  text?: String;

  /**
   * group | display | boolean | decimal | integer | date | dateTime +
   *
   * @generated from field: google.fhir.stu3.proto.QuestionnaireItemTypeCode type = 9;
   */
  type?: QuestionnaireItemTypeCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Questionnaire.Item.EnableWhen enable_when = 10;
   */
  enableWhen: Questionnaire_Item_EnableWhen[] = [];

  /**
   * Whether the item must be included in data results
   *
   * @generated from field: google.fhir.stu3.proto.Boolean required = 11;
   */
  required?: Boolean;

  /**
   * Whether the item may repeat
   *
   * @generated from field: google.fhir.stu3.proto.Boolean repeats = 12;
   */
  repeats?: Boolean;

  /**
   * Don't allow human editing
   *
   * @generated from field: google.fhir.stu3.proto.Boolean read_only = 13;
   */
  readOnly?: Boolean;

  /**
   * No more than this many characters
   *
   * @generated from field: google.fhir.stu3.proto.Integer max_length = 14;
   */
  maxLength?: Integer;

  /**
   * Valueset containing permitted answers
   *
   * @generated from field: google.fhir.stu3.proto.Reference options = 15;
   */
  options?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Questionnaire.Item.Option option = 16;
   */
  option: Questionnaire_Item_Option[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Questionnaire.Item.Initial initial = 17;
   */
  initial?: Questionnaire_Item_Initial;

  /**
   * Nested questionnaire items
   *
   * @generated from field: repeated google.fhir.stu3.proto.Questionnaire.Item item = 18;
   */
  item: Questionnaire_Item[] = [];

  constructor(data?: PartialMessage<Questionnaire_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link_id", kind: "message", T: String },
    { no: 5, name: "definition", kind: "message", T: Uri },
    { no: 6, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 7, name: "prefix", kind: "message", T: String },
    { no: 8, name: "text", kind: "message", T: String },
    { no: 9, name: "type", kind: "message", T: QuestionnaireItemTypeCode },
    { no: 10, name: "enable_when", kind: "message", T: Questionnaire_Item_EnableWhen, repeated: true },
    { no: 11, name: "required", kind: "message", T: Boolean },
    { no: 12, name: "repeats", kind: "message", T: Boolean },
    { no: 13, name: "read_only", kind: "message", T: Boolean },
    { no: 14, name: "max_length", kind: "message", T: Integer },
    { no: 15, name: "options", kind: "message", T: Reference },
    { no: 16, name: "option", kind: "message", T: Questionnaire_Item_Option, repeated: true },
    { no: 17, name: "initial", kind: "message", T: Questionnaire_Item_Initial },
    { no: 18, name: "item", kind: "message", T: Questionnaire_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire_Item {
    return new Questionnaire_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire_Item {
    return new Questionnaire_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire_Item {
    return new Questionnaire_Item().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire_Item | PlainMessage<Questionnaire_Item> | undefined, b: Questionnaire_Item | PlainMessage<Questionnaire_Item> | undefined): boolean {
    return proto3.util.equals(Questionnaire_Item, a, b);
  }
}

/**
 * Only allow data when
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire.Item.EnableWhen
 */
export class Questionnaire_Item_EnableWhen extends Message<Questionnaire_Item_EnableWhen> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Question that determines whether item is enabled
   *
   * @generated from field: google.fhir.stu3.proto.String question = 4;
   */
  question?: String;

  /**
   * Enable when answered or not
   *
   * @generated from field: google.fhir.stu3.proto.Boolean has_answer_value = 5 [json_name = "hasAnswer"];
   */
  hasAnswerValue?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.Questionnaire.Item.EnableWhen.Answer answer = 6;
   */
  answer?: Questionnaire_Item_EnableWhen_Answer;

  constructor(data?: PartialMessage<Questionnaire_Item_EnableWhen>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire.Item.EnableWhen";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "question", kind: "message", T: String },
    { no: 5, name: "has_answer_value", jsonName: "hasAnswer", kind: "message", T: Boolean },
    { no: 6, name: "answer", kind: "message", T: Questionnaire_Item_EnableWhen_Answer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire_Item_EnableWhen {
    return new Questionnaire_Item_EnableWhen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire_Item_EnableWhen {
    return new Questionnaire_Item_EnableWhen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire_Item_EnableWhen {
    return new Questionnaire_Item_EnableWhen().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire_Item_EnableWhen | PlainMessage<Questionnaire_Item_EnableWhen> | undefined, b: Questionnaire_Item_EnableWhen | PlainMessage<Questionnaire_Item_EnableWhen> | undefined): boolean {
    return proto3.util.equals(Questionnaire_Item_EnableWhen, a, b);
  }
}

/**
 * Value question must have
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire.Item.EnableWhen.Answer
 */
export class Questionnaire_Item_EnableWhen_Answer extends Message<Questionnaire_Item_EnableWhen_Answer> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Questionnaire.Item.EnableWhen.Answer.answer
   */
  answer: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 2;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 6;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 7 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 8;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 9;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 10;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 11;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 12;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Questionnaire_Item_EnableWhen_Answer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire.Item.EnableWhen.Answer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "answer" },
    { no: 2, name: "decimal", kind: "message", T: Decimal, oneof: "answer" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "answer" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "answer" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "answer" },
    { no: 6, name: "time", kind: "message", T: Time, oneof: "answer" },
    { no: 7, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "answer" },
    { no: 8, name: "uri", kind: "message", T: Uri, oneof: "answer" },
    { no: 9, name: "attachment", kind: "message", T: Attachment, oneof: "answer" },
    { no: 10, name: "coding", kind: "message", T: Coding, oneof: "answer" },
    { no: 11, name: "quantity", kind: "message", T: Quantity, oneof: "answer" },
    { no: 12, name: "reference", kind: "message", T: Reference, oneof: "answer" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire_Item_EnableWhen_Answer {
    return new Questionnaire_Item_EnableWhen_Answer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire_Item_EnableWhen_Answer {
    return new Questionnaire_Item_EnableWhen_Answer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire_Item_EnableWhen_Answer {
    return new Questionnaire_Item_EnableWhen_Answer().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire_Item_EnableWhen_Answer | PlainMessage<Questionnaire_Item_EnableWhen_Answer> | undefined, b: Questionnaire_Item_EnableWhen_Answer | PlainMessage<Questionnaire_Item_EnableWhen_Answer> | undefined): boolean {
    return proto3.util.equals(Questionnaire_Item_EnableWhen_Answer, a, b);
  }
}

/**
 * Permitted answer
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire.Item.Option
 */
export class Questionnaire_Item_Option extends Message<Questionnaire_Item_Option> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Questionnaire.Item.Option.Value value = 4;
   */
  value?: Questionnaire_Item_Option_Value;

  constructor(data?: PartialMessage<Questionnaire_Item_Option>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire.Item.Option";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: Questionnaire_Item_Option_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire_Item_Option {
    return new Questionnaire_Item_Option().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire_Item_Option {
    return new Questionnaire_Item_Option().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire_Item_Option {
    return new Questionnaire_Item_Option().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire_Item_Option | PlainMessage<Questionnaire_Item_Option> | undefined, b: Questionnaire_Item_Option | PlainMessage<Questionnaire_Item_Option> | undefined): boolean {
    return proto3.util.equals(Questionnaire_Item_Option, a, b);
  }
}

/**
 * Answer value
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire.Item.Option.Value
 */
export class Questionnaire_Item_Option_Value extends Message<Questionnaire_Item_Option_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Questionnaire.Item.Option.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 1;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 2;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 3;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 4 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 5;
     */
    value: Coding;
    case: "coding";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Questionnaire_Item_Option_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire.Item.Option.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 2, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 3, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 4, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 5, name: "coding", kind: "message", T: Coding, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire_Item_Option_Value {
    return new Questionnaire_Item_Option_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire_Item_Option_Value {
    return new Questionnaire_Item_Option_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire_Item_Option_Value {
    return new Questionnaire_Item_Option_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire_Item_Option_Value | PlainMessage<Questionnaire_Item_Option_Value> | undefined, b: Questionnaire_Item_Option_Value | PlainMessage<Questionnaire_Item_Option_Value> | undefined): boolean {
    return proto3.util.equals(Questionnaire_Item_Option_Value, a, b);
  }
}

/**
 * Default value when item is first rendered
 *
 * @generated from message google.fhir.stu3.proto.Questionnaire.Item.Initial
 */
export class Questionnaire_Item_Initial extends Message<Questionnaire_Item_Initial> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Questionnaire.Item.Initial.initial
   */
  initial: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 2;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 6;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 7 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 8;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 9;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 10;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 11;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 12;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Questionnaire_Item_Initial>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Questionnaire.Item.Initial";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "initial" },
    { no: 2, name: "decimal", kind: "message", T: Decimal, oneof: "initial" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "initial" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "initial" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "initial" },
    { no: 6, name: "time", kind: "message", T: Time, oneof: "initial" },
    { no: 7, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "initial" },
    { no: 8, name: "uri", kind: "message", T: Uri, oneof: "initial" },
    { no: 9, name: "attachment", kind: "message", T: Attachment, oneof: "initial" },
    { no: 10, name: "coding", kind: "message", T: Coding, oneof: "initial" },
    { no: 11, name: "quantity", kind: "message", T: Quantity, oneof: "initial" },
    { no: 12, name: "reference", kind: "message", T: Reference, oneof: "initial" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Questionnaire_Item_Initial {
    return new Questionnaire_Item_Initial().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Questionnaire_Item_Initial {
    return new Questionnaire_Item_Initial().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Questionnaire_Item_Initial {
    return new Questionnaire_Item_Initial().fromJsonString(jsonString, options);
  }

  static equals(a: Questionnaire_Item_Initial | PlainMessage<Questionnaire_Item_Initial> | undefined, b: Questionnaire_Item_Initial | PlainMessage<Questionnaire_Item_Initial> | undefined): boolean {
    return proto3.util.equals(Questionnaire_Item_Initial, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for QuestionnaireResponse, last
 * updated 2017-04-19T07:44:43.294+10:00. A structured set of questions and
 * their answers. See
 * http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireResponse
 */
export class QuestionnaireResponse extends Message<QuestionnaireResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id for this set of answers
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Request fulfilled by this QuestionnaireResponse
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * Part of this action
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference parent = 11;
   */
  parent: Reference[] = [];

  /**
   * Form being answered
   *
   * @generated from field: google.fhir.stu3.proto.Reference questionnaire = 12;
   */
  questionnaire?: Reference;

  /**
   * in-progress | completed | amended | entered-in-error | stopped
   *
   * @generated from field: google.fhir.stu3.proto.QuestionnaireResponseStatusCode status = 13;
   */
  status?: QuestionnaireResponseStatusCode;

  /**
   * The subject of the questions
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Encounter or Episode during which questionnaire was completed
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * Date the answers were gathered
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored = 16;
   */
  authored?: DateTime;

  /**
   * Person who received and recorded the answers
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 17;
   */
  author?: Reference;

  /**
   * The person who answered the questions
   *
   * @generated from field: google.fhir.stu3.proto.Reference source = 18;
   */
  source?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.QuestionnaireResponse.Item item = 19;
   */
  item: QuestionnaireResponse_Item[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "parent", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "questionnaire", kind: "message", T: Reference },
    { no: 13, name: "status", kind: "message", T: QuestionnaireResponseStatusCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "authored", kind: "message", T: DateTime },
    { no: 17, name: "author", kind: "message", T: Reference },
    { no: 18, name: "source", kind: "message", T: Reference },
    { no: 19, name: "item", kind: "message", T: QuestionnaireResponse_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse {
    return new QuestionnaireResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse {
    return new QuestionnaireResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse {
    return new QuestionnaireResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse | PlainMessage<QuestionnaireResponse> | undefined, b: QuestionnaireResponse | PlainMessage<QuestionnaireResponse> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse, a, b);
  }
}

/**
 * Groups and questions
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireResponse.Item
 */
export class QuestionnaireResponse_Item extends Message<QuestionnaireResponse_Item> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Pointer to specific item from Questionnaire
   *
   * @generated from field: google.fhir.stu3.proto.String link_id = 4;
   */
  linkId?: String;

  /**
   * ElementDefinition - details for the item
   *
   * @generated from field: google.fhir.stu3.proto.Uri definition = 5;
   */
  definition?: Uri;

  /**
   * Name for group or question text
   *
   * @generated from field: google.fhir.stu3.proto.String text = 6;
   */
  text?: String;

  /**
   * The subject this group's answers are about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 7;
   */
  subject?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer answer = 8;
   */
  answer: QuestionnaireResponse_Item_Answer[] = [];

  /**
   * Nested questionnaire response items
   *
   * @generated from field: repeated google.fhir.stu3.proto.QuestionnaireResponse.Item item = 9;
   */
  item: QuestionnaireResponse_Item[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireResponse.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link_id", kind: "message", T: String },
    { no: 5, name: "definition", kind: "message", T: Uri },
    { no: 6, name: "text", kind: "message", T: String },
    { no: 7, name: "subject", kind: "message", T: Reference },
    { no: 8, name: "answer", kind: "message", T: QuestionnaireResponse_Item_Answer, repeated: true },
    { no: 9, name: "item", kind: "message", T: QuestionnaireResponse_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_Item {
    return new QuestionnaireResponse_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item {
    return new QuestionnaireResponse_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item {
    return new QuestionnaireResponse_Item().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_Item | PlainMessage<QuestionnaireResponse_Item> | undefined, b: QuestionnaireResponse_Item | PlainMessage<QuestionnaireResponse_Item> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_Item, a, b);
  }
}

/**
 * The response(s) to the question
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer
 */
export class QuestionnaireResponse_Item_Answer extends Message<QuestionnaireResponse_Item_Answer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer.Value value = 4;
   */
  value?: QuestionnaireResponse_Item_Answer_Value;

  /**
   * Nested groups and questions
   *
   * @generated from field: repeated google.fhir.stu3.proto.QuestionnaireResponse.Item item = 5;
   */
  item: QuestionnaireResponse_Item[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse_Item_Answer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: QuestionnaireResponse_Item_Answer_Value },
    { no: 5, name: "item", kind: "message", T: QuestionnaireResponse_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_Item_Answer {
    return new QuestionnaireResponse_Item_Answer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer {
    return new QuestionnaireResponse_Item_Answer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer {
    return new QuestionnaireResponse_Item_Answer().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_Item_Answer | PlainMessage<QuestionnaireResponse_Item_Answer> | undefined, b: QuestionnaireResponse_Item_Answer | PlainMessage<QuestionnaireResponse_Item_Answer> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_Item_Answer, a, b);
  }
}

/**
 * Single-valued answer to the question
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer.Value
 */
export class QuestionnaireResponse_Item_Answer_Value extends Message<QuestionnaireResponse_Item_Answer_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 2;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 6;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 7 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 8;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 9;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 10;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 11;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 12;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<QuestionnaireResponse_Item_Answer_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireResponse.Item.Answer.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 2, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 6, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 7, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 8, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 9, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 10, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 11, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 12, name: "reference", kind: "message", T: Reference, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_Item_Answer_Value {
    return new QuestionnaireResponse_Item_Answer_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer_Value {
    return new QuestionnaireResponse_Item_Answer_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer_Value {
    return new QuestionnaireResponse_Item_Answer_Value().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_Item_Answer_Value | PlainMessage<QuestionnaireResponse_Item_Answer_Value> | undefined, b: QuestionnaireResponse_Item_Answer_Value | PlainMessage<QuestionnaireResponse_Item_Answer_Value> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_Item_Answer_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ReferralRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. A request for referral or transfer of care.
 * See http://hl7.org/fhir/StructureDefinition/ReferralRequest
 *
 * @generated from message google.fhir.stu3.proto.ReferralRequest
 */
export class ReferralRequest extends Message<ReferralRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * Request fulfilled by this request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Request(s) replaced by this request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 12;
   */
  replaces: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 13;
   */
  groupIdentifier?: Identifier;

  /**
   * draft | active | suspended | cancelled | completed | entered-in-error |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode status = 14;
   */
  status?: RequestStatusCode;

  /**
   * proposal | plan | order
   *
   * @generated from field: google.fhir.stu3.proto.RequestIntentCode intent = 15;
   */
  intent?: RequestIntentCode;

  /**
   * Referral/Transition of care request type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 16;
   */
  type?: CodeableConcept;

  /**
   * Urgency of referral / transfer of care request
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 17;
   */
  priority?: RequestPriorityCode;

  /**
   * Actions requested as part of the referral
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept service_requested = 18;
   */
  serviceRequested: CodeableConcept[] = [];

  /**
   * Patient referred to care or transfer
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Originating encounter
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 20;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ReferralRequest.Occurrence occurrence = 21;
   */
  occurrence?: ReferralRequest_Occurrence;

  /**
   * Date of creation/activation
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 22;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.ReferralRequest.Requester requester = 23;
   */
  requester?: ReferralRequest_Requester;

  /**
   * The clinical specialty (discipline) that the referral is requested for
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept specialty = 24;
   */
  specialty?: CodeableConcept;

  /**
   * Receiver of referral / transfer of care request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference recipient = 25;
   */
  recipient: Reference[] = [];

  /**
   * Reason for referral / transfer of care request
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 26;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why is service needed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 27;
   */
  reasonReference: Reference[] = [];

  /**
   * A textual description of the referral
   *
   * @generated from field: google.fhir.stu3.proto.String description = 28;
   */
  description?: String;

  /**
   * Additonal information to support referral or transfer of care request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_info = 29;
   */
  supportingInfo: Reference[] = [];

  /**
   * Comments made about referral request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 30;
   */
  note: Annotation[] = [];

  /**
   * Key events in history of request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference relevant_history = 31;
   */
  relevantHistory: Reference[] = [];

  constructor(data?: PartialMessage<ReferralRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReferralRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "group_identifier", kind: "message", T: Identifier },
    { no: 14, name: "status", kind: "message", T: RequestStatusCode },
    { no: 15, name: "intent", kind: "message", T: RequestIntentCode },
    { no: 16, name: "type", kind: "message", T: CodeableConcept },
    { no: 17, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 18, name: "service_requested", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "context", kind: "message", T: Reference },
    { no: 21, name: "occurrence", kind: "message", T: ReferralRequest_Occurrence },
    { no: 22, name: "authored_on", kind: "message", T: DateTime },
    { no: 23, name: "requester", kind: "message", T: ReferralRequest_Requester },
    { no: 24, name: "specialty", kind: "message", T: CodeableConcept },
    { no: 25, name: "recipient", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "description", kind: "message", T: String },
    { no: 29, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 31, name: "relevant_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralRequest {
    return new ReferralRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralRequest {
    return new ReferralRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralRequest {
    return new ReferralRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReferralRequest | PlainMessage<ReferralRequest> | undefined, b: ReferralRequest | PlainMessage<ReferralRequest> | undefined): boolean {
    return proto3.util.equals(ReferralRequest, a, b);
  }
}

/**
 * When the service(s) requested in the referral should occur
 *
 * @generated from message google.fhir.stu3.proto.ReferralRequest.Occurrence
 */
export class ReferralRequest_Occurrence extends Message<ReferralRequest_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ReferralRequest.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ReferralRequest_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReferralRequest.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralRequest_Occurrence {
    return new ReferralRequest_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralRequest_Occurrence {
    return new ReferralRequest_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralRequest_Occurrence {
    return new ReferralRequest_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: ReferralRequest_Occurrence | PlainMessage<ReferralRequest_Occurrence> | undefined, b: ReferralRequest_Occurrence | PlainMessage<ReferralRequest_Occurrence> | undefined): boolean {
    return proto3.util.equals(ReferralRequest_Occurrence, a, b);
  }
}

/**
 * Who/what is requesting service
 *
 * @generated from message google.fhir.stu3.proto.ReferralRequest.Requester
 */
export class ReferralRequest_Requester extends Message<ReferralRequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual making the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<ReferralRequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReferralRequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralRequest_Requester {
    return new ReferralRequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralRequest_Requester {
    return new ReferralRequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralRequest_Requester {
    return new ReferralRequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: ReferralRequest_Requester | PlainMessage<ReferralRequest_Requester> | undefined, b: ReferralRequest_Requester | PlainMessage<ReferralRequest_Requester> | undefined): boolean {
    return proto3.util.equals(ReferralRequest_Requester, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for RelatedPerson, last updated
 * 2017-04-19T07:44:43.294+10:00. An person that is related to a patient, but
 * who is not a direct target of care. See
 * http://hl7.org/fhir/StructureDefinition/RelatedPerson
 *
 * @generated from message google.fhir.stu3.proto.RelatedPerson
 */
export class RelatedPerson extends Message<RelatedPerson> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * A human identifier for this person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this related person's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * The patient this person is related to
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 11;
   */
  patient?: Reference;

  /**
   * The nature of the relationship
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept relationship = 12;
   */
  relationship?: CodeableConcept;

  /**
   * A name associated with the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.HumanName name = 13;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 14;
   */
  telecom: ContactPoint[] = [];

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 15;
   */
  gender?: AdministrativeGenderCode;

  /**
   * The date on which the related person was born
   *
   * @generated from field: google.fhir.stu3.proto.Date birth_date = 16;
   */
  birthDate?: Date;

  /**
   * Address where the related person can be contacted or visited
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 17;
   */
  address: Address[] = [];

  /**
   * Image of the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment photo = 18;
   */
  photo: Attachment[] = [];

  /**
   * Period of time that this relationship is considered valid
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 19;
   */
  period?: Period;

  constructor(data?: PartialMessage<RelatedPerson>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RelatedPerson";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "patient", kind: "message", T: Reference },
    { no: 12, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 13, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 14, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 15, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 16, name: "birth_date", kind: "message", T: Date },
    { no: 17, name: "address", kind: "message", T: Address, repeated: true },
    { no: 18, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 19, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedPerson {
    return new RelatedPerson().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedPerson {
    return new RelatedPerson().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedPerson {
    return new RelatedPerson().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedPerson | PlainMessage<RelatedPerson> | undefined, b: RelatedPerson | PlainMessage<RelatedPerson> | undefined): boolean {
    return proto3.util.equals(RelatedPerson, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for RequestGroup, last updated
 * 2017-04-19T07:44:43.294+10:00. A group of related requests. See
 * http://hl7.org/fhir/StructureDefinition/RequestGroup
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup
 */
export class RequestGroup extends Message<RequestGroup> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * Fulfills plan, proposal, or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Request(s) replaced by this request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 12;
   */
  replaces: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 13;
   */
  groupIdentifier?: Identifier;

  /**
   * draft | active | suspended | cancelled | completed | entered-in-error |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode status = 14;
   */
  status?: RequestStatusCode;

  /**
   * proposal | plan | order
   *
   * @generated from field: google.fhir.stu3.proto.RequestIntentCode intent = 15;
   */
  intent?: RequestIntentCode;

  /**
   * routine | urgent | asap | stat
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 16;
   */
  priority?: RequestPriorityCode;

  /**
   * Who the request group is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 17;
   */
  subject?: Reference;

  /**
   * Encounter or Episode for the request group
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 18;
   */
  context?: Reference;

  /**
   * When the request group was authored
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 19;
   */
  authoredOn?: DateTime;

  /**
   * Device or practitioner that authored the request group
   *
   * @generated from field: google.fhir.stu3.proto.Reference author = 20;
   */
  author?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.RequestGroup.Reason reason = 21;
   */
  reason?: RequestGroup_Reason;

  /**
   * Additional notes about the response
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 22;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.RequestGroup.Action action = 23;
   */
  action: RequestGroup_Action[] = [];

  constructor(data?: PartialMessage<RequestGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "group_identifier", kind: "message", T: Identifier },
    { no: 14, name: "status", kind: "message", T: RequestStatusCode },
    { no: 15, name: "intent", kind: "message", T: RequestIntentCode },
    { no: 16, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 17, name: "subject", kind: "message", T: Reference },
    { no: 18, name: "context", kind: "message", T: Reference },
    { no: 19, name: "authored_on", kind: "message", T: DateTime },
    { no: 20, name: "author", kind: "message", T: Reference },
    { no: 21, name: "reason", kind: "message", T: RequestGroup_Reason },
    { no: 22, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 23, name: "action", kind: "message", T: RequestGroup_Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup {
    return new RequestGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup {
    return new RequestGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup {
    return new RequestGroup().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup | PlainMessage<RequestGroup> | undefined, b: RequestGroup | PlainMessage<RequestGroup> | undefined): boolean {
    return proto3.util.equals(RequestGroup, a, b);
  }
}

/**
 * Reason for the request group
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup.Reason
 */
export class RequestGroup_Reason extends Message<RequestGroup_Reason> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RequestGroup.Reason.reason
   */
  reason: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RequestGroup_Reason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup.Reason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "reason" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "reason" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup_Reason {
    return new RequestGroup_Reason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup_Reason {
    return new RequestGroup_Reason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup_Reason {
    return new RequestGroup_Reason().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup_Reason | PlainMessage<RequestGroup_Reason> | undefined, b: RequestGroup_Reason | PlainMessage<RequestGroup_Reason> | undefined): boolean {
    return proto3.util.equals(RequestGroup_Reason, a, b);
  }
}

/**
 * Proposed actions, if any
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup.Action
 */
export class RequestGroup_Action extends Message<RequestGroup_Action> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * User-visible label for the action (e.g. 1. or A.)
   *
   * @generated from field: google.fhir.stu3.proto.String label = 4;
   */
  label?: String;

  /**
   * User-visible title
   *
   * @generated from field: google.fhir.stu3.proto.String title = 5;
   */
  title?: String;

  /**
   * Short description of the action
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * Static text equivalent of the action, used if the dynamic aspects cannot
   * be interpreted by the receiving system
   *
   * @generated from field: google.fhir.stu3.proto.String text_equivalent = 7;
   */
  textEquivalent?: String;

  /**
   * Code representing the meaning of the action or sub-actions
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 8;
   */
  code: CodeableConcept[] = [];

  /**
   * Supporting documentation for the intended performer of the action
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact documentation = 9;
   */
  documentation: RelatedArtifact[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.RequestGroup.Action.Condition condition = 10;
   */
  condition: RequestGroup_Action_Condition[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.RequestGroup.Action.RelatedAction related_action = 11;
   */
  relatedAction: RequestGroup_Action_RelatedAction[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.RequestGroup.Action.TimingType timing = 12;
   */
  timing?: RequestGroup_Action_TimingType;

  /**
   * Who should perform the action
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference participant = 13;
   */
  participant: Reference[] = [];

  /**
   * create | update | remove | fire-event
   *
   * @generated from field: google.fhir.stu3.proto.Coding type = 14;
   */
  type?: Coding;

  /**
   * visual-group | logical-group | sentence-group
   *
   * @generated from field: google.fhir.stu3.proto.ActionGroupingBehaviorCode grouping_behavior = 15;
   */
  groupingBehavior?: ActionGroupingBehaviorCode;

  /**
   * any | all | all-or-none | exactly-one | at-most-one | one-or-more
   *
   * @generated from field: google.fhir.stu3.proto.ActionSelectionBehaviorCode selection_behavior = 16;
   */
  selectionBehavior?: ActionSelectionBehaviorCode;

  /**
   * must | could | must-unless-documented
   *
   * @generated from field: google.fhir.stu3.proto.ActionRequiredBehaviorCode required_behavior = 17;
   */
  requiredBehavior?: ActionRequiredBehaviorCode;

  /**
   * yes | no
   *
   * @generated from field: google.fhir.stu3.proto.ActionPrecheckBehaviorCode precheck_behavior = 18;
   */
  precheckBehavior?: ActionPrecheckBehaviorCode;

  /**
   * single | multiple
   *
   * @generated from field: google.fhir.stu3.proto.ActionCardinalityBehaviorCode cardinality_behavior = 19;
   */
  cardinalityBehavior?: ActionCardinalityBehaviorCode;

  /**
   * The target of the action
   *
   * @generated from field: google.fhir.stu3.proto.Reference resource = 20;
   */
  resource?: Reference;

  /**
   * Sub action
   *
   * @generated from field: repeated google.fhir.stu3.proto.RequestGroup.Action action = 21;
   */
  action: RequestGroup_Action[] = [];

  constructor(data?: PartialMessage<RequestGroup_Action>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup.Action";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "label", kind: "message", T: String },
    { no: 5, name: "title", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "text_equivalent", kind: "message", T: String },
    { no: 8, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "documentation", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 10, name: "condition", kind: "message", T: RequestGroup_Action_Condition, repeated: true },
    { no: 11, name: "related_action", kind: "message", T: RequestGroup_Action_RelatedAction, repeated: true },
    { no: 12, name: "timing", kind: "message", T: RequestGroup_Action_TimingType },
    { no: 13, name: "participant", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "type", kind: "message", T: Coding },
    { no: 15, name: "grouping_behavior", kind: "message", T: ActionGroupingBehaviorCode },
    { no: 16, name: "selection_behavior", kind: "message", T: ActionSelectionBehaviorCode },
    { no: 17, name: "required_behavior", kind: "message", T: ActionRequiredBehaviorCode },
    { no: 18, name: "precheck_behavior", kind: "message", T: ActionPrecheckBehaviorCode },
    { no: 19, name: "cardinality_behavior", kind: "message", T: ActionCardinalityBehaviorCode },
    { no: 20, name: "resource", kind: "message", T: Reference },
    { no: 21, name: "action", kind: "message", T: RequestGroup_Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup_Action {
    return new RequestGroup_Action().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup_Action {
    return new RequestGroup_Action().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup_Action {
    return new RequestGroup_Action().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup_Action | PlainMessage<RequestGroup_Action> | undefined, b: RequestGroup_Action | PlainMessage<RequestGroup_Action> | undefined): boolean {
    return proto3.util.equals(RequestGroup_Action, a, b);
  }
}

/**
 * Whether or not the action is applicable
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup.Action.Condition
 */
export class RequestGroup_Action_Condition extends Message<RequestGroup_Action_Condition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * applicability | start | stop
   *
   * @generated from field: google.fhir.stu3.proto.ActionConditionKindCode kind = 4;
   */
  kind?: ActionConditionKindCode;

  /**
   * Natural language description of the condition
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Language of the expression
   *
   * @generated from field: google.fhir.stu3.proto.String language = 6;
   */
  language?: String;

  /**
   * Boolean-valued expression
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  constructor(data?: PartialMessage<RequestGroup_Action_Condition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup.Action.Condition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "kind", kind: "message", T: ActionConditionKindCode },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "language", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup_Action_Condition {
    return new RequestGroup_Action_Condition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup_Action_Condition {
    return new RequestGroup_Action_Condition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup_Action_Condition {
    return new RequestGroup_Action_Condition().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup_Action_Condition | PlainMessage<RequestGroup_Action_Condition> | undefined, b: RequestGroup_Action_Condition | PlainMessage<RequestGroup_Action_Condition> | undefined): boolean {
    return proto3.util.equals(RequestGroup_Action_Condition, a, b);
  }
}

/**
 * Relationship to another action
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup.Action.RelatedAction
 */
export class RequestGroup_Action_RelatedAction extends Message<RequestGroup_Action_RelatedAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What action this is related to
   *
   * @generated from field: google.fhir.stu3.proto.Id action_id = 4;
   */
  actionId?: Id;

  /**
   * before-start | before | before-end | concurrent-with-start | concurrent
   * | concurrent-with-end | after-start | after | after-end
   *
   * @generated from field: google.fhir.stu3.proto.ActionRelationshipTypeCode relationship = 5;
   */
  relationship?: ActionRelationshipTypeCode;

  /**
   * @generated from field: google.fhir.stu3.proto.RequestGroup.Action.RelatedAction.Offset offset = 6;
   */
  offset?: RequestGroup_Action_RelatedAction_Offset;

  constructor(data?: PartialMessage<RequestGroup_Action_RelatedAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup.Action.RelatedAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action_id", kind: "message", T: Id },
    { no: 5, name: "relationship", kind: "message", T: ActionRelationshipTypeCode },
    { no: 6, name: "offset", kind: "message", T: RequestGroup_Action_RelatedAction_Offset },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup_Action_RelatedAction {
    return new RequestGroup_Action_RelatedAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup_Action_RelatedAction {
    return new RequestGroup_Action_RelatedAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup_Action_RelatedAction {
    return new RequestGroup_Action_RelatedAction().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup_Action_RelatedAction | PlainMessage<RequestGroup_Action_RelatedAction> | undefined, b: RequestGroup_Action_RelatedAction | PlainMessage<RequestGroup_Action_RelatedAction> | undefined): boolean {
    return proto3.util.equals(RequestGroup_Action_RelatedAction, a, b);
  }
}

/**
 * Time offset for the relationship
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup.Action.RelatedAction.Offset
 */
export class RequestGroup_Action_RelatedAction_Offset extends Message<RequestGroup_Action_RelatedAction_Offset> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RequestGroup.Action.RelatedAction.Offset.offset
   */
  offset: {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 1;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RequestGroup_Action_RelatedAction_Offset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup.Action.RelatedAction.Offset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "message", T: Duration, oneof: "offset" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "offset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup_Action_RelatedAction_Offset {
    return new RequestGroup_Action_RelatedAction_Offset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup_Action_RelatedAction_Offset {
    return new RequestGroup_Action_RelatedAction_Offset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup_Action_RelatedAction_Offset {
    return new RequestGroup_Action_RelatedAction_Offset().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup_Action_RelatedAction_Offset | PlainMessage<RequestGroup_Action_RelatedAction_Offset> | undefined, b: RequestGroup_Action_RelatedAction_Offset | PlainMessage<RequestGroup_Action_RelatedAction_Offset> | undefined): boolean {
    return proto3.util.equals(RequestGroup_Action_RelatedAction_Offset, a, b);
  }
}

/**
 * When the action should take place
 *
 * @generated from message google.fhir.stu3.proto.RequestGroup.Action.TimingType
 */
export class RequestGroup_Action_TimingType extends Message<RequestGroup_Action_TimingType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RequestGroup.Action.TimingType.timing
   */
  timing: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 3;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing_value = 5 [json_name = "timing"];
     */
    value: Timing;
    case: "timingValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RequestGroup_Action_TimingType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestGroup.Action.TimingType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "timing" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "timing" },
    { no: 3, name: "duration", kind: "message", T: Duration, oneof: "timing" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "timing" },
    { no: 5, name: "timing_value", jsonName: "timing", kind: "message", T: Timing, oneof: "timing" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestGroup_Action_TimingType {
    return new RequestGroup_Action_TimingType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestGroup_Action_TimingType {
    return new RequestGroup_Action_TimingType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestGroup_Action_TimingType {
    return new RequestGroup_Action_TimingType().fromJsonString(jsonString, options);
  }

  static equals(a: RequestGroup_Action_TimingType | PlainMessage<RequestGroup_Action_TimingType> | undefined, b: RequestGroup_Action_TimingType | PlainMessage<RequestGroup_Action_TimingType> | undefined): boolean {
    return proto3.util.equals(RequestGroup_Action_TimingType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ResearchStudy, last updated
 * 2017-04-19T07:44:43.294+10:00. Investigation to increase healthcare-related
 * patient-independent knowledge. See
 * http://hl7.org/fhir/StructureDefinition/ResearchStudy
 *
 * @generated from message google.fhir.stu3.proto.ResearchStudy
 */
export class ResearchStudy extends Message<ResearchStudy> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for study
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Name for this study
   *
   * @generated from field: google.fhir.stu3.proto.String title = 10;
   */
  title?: String;

  /**
   * Steps followed in executing study
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference protocol = 11;
   */
  protocol: Reference[] = [];

  /**
   * Part of larger study
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * draft | in-progress | suspended | stopped | completed | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ResearchStudyStatusCode status = 13;
   */
  status?: ResearchStudyStatusCode;

  /**
   * Classifications for the study
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * Drugs, devices, conditions, etc. under study
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept focus = 15;
   */
  focus: CodeableConcept[] = [];

  /**
   * Contact details for the study
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 16;
   */
  contact: ContactDetail[] = [];

  /**
   * References and dependencies
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact related_artifact = 17;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Used to search for the study
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept keyword = 18;
   */
  keyword: CodeableConcept[] = [];

  /**
   * Geographic region(s) for study
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 19;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * What this is study doing
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * Inclusion & exclusion criteria
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference enrollment = 21;
   */
  enrollment: Reference[] = [];

  /**
   * When the study began and ended
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 22;
   */
  period?: Period;

  /**
   * Organization responsible for the study
   *
   * @generated from field: google.fhir.stu3.proto.Reference sponsor = 23;
   */
  sponsor?: Reference;

  /**
   * The individual responsible for the study
   *
   * @generated from field: google.fhir.stu3.proto.Reference principal_investigator = 24;
   */
  principalInvestigator?: Reference;

  /**
   * Location involved in study execution
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference site = 25;
   */
  site: Reference[] = [];

  /**
   * Reason for terminating study early
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason_stopped = 26;
   */
  reasonStopped?: CodeableConcept;

  /**
   * Comments made about the event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 27;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ResearchStudy.Arm arm = 28;
   */
  arm: ResearchStudy_Arm[] = [];

  constructor(data?: PartialMessage<ResearchStudy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResearchStudy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "title", kind: "message", T: String },
    { no: 11, name: "protocol", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: ResearchStudyStatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "focus", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 17, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 18, name: "keyword", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "description", kind: "message", T: Markdown },
    { no: 21, name: "enrollment", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "period", kind: "message", T: Period },
    { no: 23, name: "sponsor", kind: "message", T: Reference },
    { no: 24, name: "principal_investigator", kind: "message", T: Reference },
    { no: 25, name: "site", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "reason_stopped", kind: "message", T: CodeableConcept },
    { no: 27, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 28, name: "arm", kind: "message", T: ResearchStudy_Arm, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchStudy {
    return new ResearchStudy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchStudy {
    return new ResearchStudy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchStudy {
    return new ResearchStudy().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchStudy | PlainMessage<ResearchStudy> | undefined, b: ResearchStudy | PlainMessage<ResearchStudy> | undefined): boolean {
    return proto3.util.equals(ResearchStudy, a, b);
  }
}

/**
 * Defined path through the study for a subject
 *
 * @generated from message google.fhir.stu3.proto.ResearchStudy.Arm
 */
export class ResearchStudy_Arm extends Message<ResearchStudy_Arm> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for study arm
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Categorization of study arm
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Short explanation of study path
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  constructor(data?: PartialMessage<ResearchStudy_Arm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResearchStudy.Arm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchStudy_Arm {
    return new ResearchStudy_Arm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchStudy_Arm {
    return new ResearchStudy_Arm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchStudy_Arm {
    return new ResearchStudy_Arm().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchStudy_Arm | PlainMessage<ResearchStudy_Arm> | undefined, b: ResearchStudy_Arm | PlainMessage<ResearchStudy_Arm> | undefined): boolean {
    return proto3.util.equals(ResearchStudy_Arm, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ResearchSubject, last updated
 * 2017-04-19T07:44:43.294+10:00. Investigation to increase healthcare-related
 * patient-independent knowledge. See
 * http://hl7.org/fhir/StructureDefinition/ResearchSubject
 *
 * @generated from message google.fhir.stu3.proto.ResearchSubject
 */
export class ResearchSubject extends Message<ResearchSubject> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for research subject
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * candidate | enrolled | active | suspended | withdrawn | completed
   *
   * @generated from field: google.fhir.stu3.proto.ResearchSubjectStatusCode status = 10;
   */
  status?: ResearchSubjectStatusCode;

  /**
   * Start and end of participation
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 11;
   */
  period?: Period;

  /**
   * Study subject is part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference study = 12;
   */
  study?: Reference;

  /**
   * Who is part of study
   *
   * @generated from field: google.fhir.stu3.proto.Reference individual = 13;
   */
  individual?: Reference;

  /**
   * What path should be followed
   *
   * @generated from field: google.fhir.stu3.proto.String assigned_arm = 14;
   */
  assignedArm?: String;

  /**
   * What path was followed
   *
   * @generated from field: google.fhir.stu3.proto.String actual_arm = 15;
   */
  actualArm?: String;

  /**
   * Agreement to participate in study
   *
   * @generated from field: google.fhir.stu3.proto.Reference consent = 16;
   */
  consent?: Reference;

  constructor(data?: PartialMessage<ResearchSubject>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResearchSubject";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: ResearchSubjectStatusCode },
    { no: 11, name: "period", kind: "message", T: Period },
    { no: 12, name: "study", kind: "message", T: Reference },
    { no: 13, name: "individual", kind: "message", T: Reference },
    { no: 14, name: "assigned_arm", kind: "message", T: String },
    { no: 15, name: "actual_arm", kind: "message", T: String },
    { no: 16, name: "consent", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchSubject {
    return new ResearchSubject().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchSubject {
    return new ResearchSubject().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchSubject {
    return new ResearchSubject().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchSubject | PlainMessage<ResearchSubject> | undefined, b: ResearchSubject | PlainMessage<ResearchSubject> | undefined): boolean {
    return proto3.util.equals(ResearchSubject, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for RiskAssessment, last updated
 * 2017-04-19T07:44:43.294+10:00. Potential outcomes for a subject with
 * likelihood. See http://hl7.org/fhir/StructureDefinition/RiskAssessment
 *
 * @generated from message google.fhir.stu3.proto.RiskAssessment
 */
export class RiskAssessment extends Message<RiskAssessment> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier for the assessment
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Request fulfilled by this assessment
   *
   * @generated from field: google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn?: Reference;

  /**
   * Part of this occurrence
   *
   * @generated from field: google.fhir.stu3.proto.Reference parent = 11;
   */
  parent?: Reference;

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 12;
   */
  status?: ObservationStatusCode;

  /**
   * Evaluation mechanism
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 13;
   */
  method?: CodeableConcept;

  /**
   * Type of assessment
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * Who/what does assessment apply to?
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Where was assessment performed?
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 16;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.RiskAssessment.Occurrence occurrence = 17;
   */
  occurrence?: RiskAssessment_Occurrence;

  /**
   * Condition assessed
   *
   * @generated from field: google.fhir.stu3.proto.Reference condition = 18;
   */
  condition?: Reference;

  /**
   * Who did assessment?
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 19;
   */
  performer?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.RiskAssessment.Reason reason = 20;
   */
  reason?: RiskAssessment_Reason;

  /**
   * Information used in assessment
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference basis = 21;
   */
  basis: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.RiskAssessment.Prediction prediction = 22;
   */
  prediction: RiskAssessment_Prediction[] = [];

  /**
   * How to reduce risk
   *
   * @generated from field: google.fhir.stu3.proto.String mitigation = 23;
   */
  mitigation?: String;

  /**
   * Comments on the risk assessment
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 24;
   */
  comment?: String;

  constructor(data?: PartialMessage<RiskAssessment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskAssessment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "based_on", kind: "message", T: Reference },
    { no: 11, name: "parent", kind: "message", T: Reference },
    { no: 12, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 13, name: "method", kind: "message", T: CodeableConcept },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "context", kind: "message", T: Reference },
    { no: 17, name: "occurrence", kind: "message", T: RiskAssessment_Occurrence },
    { no: 18, name: "condition", kind: "message", T: Reference },
    { no: 19, name: "performer", kind: "message", T: Reference },
    { no: 20, name: "reason", kind: "message", T: RiskAssessment_Reason },
    { no: 21, name: "basis", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "prediction", kind: "message", T: RiskAssessment_Prediction, repeated: true },
    { no: 23, name: "mitigation", kind: "message", T: String },
    { no: 24, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskAssessment {
    return new RiskAssessment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskAssessment {
    return new RiskAssessment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskAssessment {
    return new RiskAssessment().fromJsonString(jsonString, options);
  }

  static equals(a: RiskAssessment | PlainMessage<RiskAssessment> | undefined, b: RiskAssessment | PlainMessage<RiskAssessment> | undefined): boolean {
    return proto3.util.equals(RiskAssessment, a, b);
  }
}

/**
 * When was assessment made?
 *
 * @generated from message google.fhir.stu3.proto.RiskAssessment.Occurrence
 */
export class RiskAssessment_Occurrence extends Message<RiskAssessment_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RiskAssessment.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RiskAssessment_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskAssessment.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskAssessment_Occurrence {
    return new RiskAssessment_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskAssessment_Occurrence {
    return new RiskAssessment_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskAssessment_Occurrence {
    return new RiskAssessment_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: RiskAssessment_Occurrence | PlainMessage<RiskAssessment_Occurrence> | undefined, b: RiskAssessment_Occurrence | PlainMessage<RiskAssessment_Occurrence> | undefined): boolean {
    return proto3.util.equals(RiskAssessment_Occurrence, a, b);
  }
}

/**
 * Why the assessment was necessary?
 *
 * @generated from message google.fhir.stu3.proto.RiskAssessment.Reason
 */
export class RiskAssessment_Reason extends Message<RiskAssessment_Reason> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RiskAssessment.Reason.reason
   */
  reason: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RiskAssessment_Reason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskAssessment.Reason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "reason" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "reason" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskAssessment_Reason {
    return new RiskAssessment_Reason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskAssessment_Reason {
    return new RiskAssessment_Reason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskAssessment_Reason {
    return new RiskAssessment_Reason().fromJsonString(jsonString, options);
  }

  static equals(a: RiskAssessment_Reason | PlainMessage<RiskAssessment_Reason> | undefined, b: RiskAssessment_Reason | PlainMessage<RiskAssessment_Reason> | undefined): boolean {
    return proto3.util.equals(RiskAssessment_Reason, a, b);
  }
}

/**
 * Outcome predicted
 *
 * @generated from message google.fhir.stu3.proto.RiskAssessment.Prediction
 */
export class RiskAssessment_Prediction extends Message<RiskAssessment_Prediction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Possible outcome for the subject
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 4;
   */
  outcome?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.RiskAssessment.Prediction.Probability probability = 5;
   */
  probability?: RiskAssessment_Prediction_Probability;

  /**
   * Likelihood of specified outcome as a qualitative value
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept qualitative_risk = 6;
   */
  qualitativeRisk?: CodeableConcept;

  /**
   * Relative likelihood
   *
   * @generated from field: google.fhir.stu3.proto.Decimal relative_risk = 7;
   */
  relativeRisk?: Decimal;

  /**
   * @generated from field: google.fhir.stu3.proto.RiskAssessment.Prediction.When when = 8;
   */
  when?: RiskAssessment_Prediction_When;

  /**
   * Explanation of prediction
   *
   * @generated from field: google.fhir.stu3.proto.String rationale = 9;
   */
  rationale?: String;

  constructor(data?: PartialMessage<RiskAssessment_Prediction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskAssessment.Prediction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 5, name: "probability", kind: "message", T: RiskAssessment_Prediction_Probability },
    { no: 6, name: "qualitative_risk", kind: "message", T: CodeableConcept },
    { no: 7, name: "relative_risk", kind: "message", T: Decimal },
    { no: 8, name: "when", kind: "message", T: RiskAssessment_Prediction_When },
    { no: 9, name: "rationale", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskAssessment_Prediction {
    return new RiskAssessment_Prediction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskAssessment_Prediction {
    return new RiskAssessment_Prediction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskAssessment_Prediction {
    return new RiskAssessment_Prediction().fromJsonString(jsonString, options);
  }

  static equals(a: RiskAssessment_Prediction | PlainMessage<RiskAssessment_Prediction> | undefined, b: RiskAssessment_Prediction | PlainMessage<RiskAssessment_Prediction> | undefined): boolean {
    return proto3.util.equals(RiskAssessment_Prediction, a, b);
  }
}

/**
 * Likelihood of specified outcome
 *
 * @generated from message google.fhir.stu3.proto.RiskAssessment.Prediction.Probability
 */
export class RiskAssessment_Prediction_Probability extends Message<RiskAssessment_Prediction_Probability> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RiskAssessment.Prediction.Probability.probability
   */
  probability: {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 1;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RiskAssessment_Prediction_Probability>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskAssessment.Prediction.Probability";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "decimal", kind: "message", T: Decimal, oneof: "probability" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "probability" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskAssessment_Prediction_Probability {
    return new RiskAssessment_Prediction_Probability().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskAssessment_Prediction_Probability {
    return new RiskAssessment_Prediction_Probability().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskAssessment_Prediction_Probability {
    return new RiskAssessment_Prediction_Probability().fromJsonString(jsonString, options);
  }

  static equals(a: RiskAssessment_Prediction_Probability | PlainMessage<RiskAssessment_Prediction_Probability> | undefined, b: RiskAssessment_Prediction_Probability | PlainMessage<RiskAssessment_Prediction_Probability> | undefined): boolean {
    return proto3.util.equals(RiskAssessment_Prediction_Probability, a, b);
  }
}

/**
 * Timeframe or age range
 *
 * @generated from message google.fhir.stu3.proto.RiskAssessment.Prediction.When
 */
export class RiskAssessment_Prediction_When extends Message<RiskAssessment_Prediction_When> {
  /**
   * @generated from oneof google.fhir.stu3.proto.RiskAssessment.Prediction.When.when
   */
  when: {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 1;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RiskAssessment_Prediction_When>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskAssessment.Prediction.When";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: Period, oneof: "when" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "when" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskAssessment_Prediction_When {
    return new RiskAssessment_Prediction_When().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskAssessment_Prediction_When {
    return new RiskAssessment_Prediction_When().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskAssessment_Prediction_When {
    return new RiskAssessment_Prediction_When().fromJsonString(jsonString, options);
  }

  static equals(a: RiskAssessment_Prediction_When | PlainMessage<RiskAssessment_Prediction_When> | undefined, b: RiskAssessment_Prediction_When | PlainMessage<RiskAssessment_Prediction_When> | undefined): boolean {
    return proto3.util.equals(RiskAssessment_Prediction_When, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Schedule, last updated
 * 2017-04-19T07:44:43.294+10:00. A container for slots of time that may be
 * available for booking appointments. See
 * http://hl7.org/fhir/StructureDefinition/Schedule
 *
 * @generated from message google.fhir.stu3.proto.Schedule
 */
export class Schedule extends Message<Schedule> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this schedule is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * A broad categorisation of the service that is to be performed during this
   * appointment
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service_category = 11;
   */
  serviceCategory?: CodeableConcept;

  /**
   * The specific service that is to be performed during this appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept service_type = 12;
   */
  serviceType: CodeableConcept[] = [];

  /**
   * The specialty of a practitioner that would be required to perform the
   * service requested in this appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept specialty = 13;
   */
  specialty: CodeableConcept[] = [];

  /**
   * The resource this Schedule resource is providing availability information
   * for. These are expected to usually be one of HealthcareService, Location,
   * Practitioner, PractitionerRole, Device, Patient or RelatedPerson
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference actor = 14;
   */
  actor: Reference[] = [];

  /**
   * The period of time that the slots that are attached to this Schedule
   * resource cover (even if none exist). These  cover the amount of time that
   * an organization's planning horizon; the interval for which they are
   * currently accepting appointments. This does not define a "template" for
   * planning outside these dates
   *
   * @generated from field: google.fhir.stu3.proto.Period planning_horizon = 15;
   */
  planningHorizon?: Period;

  /**
   * Comments on the availability to describe any extended information. Such as
   * custom constraints on the slots that may be associated
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 16;
   */
  comment?: String;

  constructor(data?: PartialMessage<Schedule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Schedule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "service_category", kind: "message", T: CodeableConcept },
    { no: 12, name: "service_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "specialty", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "actor", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "planning_horizon", kind: "message", T: Period },
    { no: 16, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Schedule {
    return new Schedule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Schedule {
    return new Schedule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Schedule {
    return new Schedule().fromJsonString(jsonString, options);
  }

  static equals(a: Schedule | PlainMessage<Schedule> | undefined, b: Schedule | PlainMessage<Schedule> | undefined): boolean {
    return proto3.util.equals(Schedule, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SearchParameter, last updated
 * 2017-04-19T07:44:43.294+10:00. Search Parameter for a resource. See
 * http://hl7.org/fhir/StructureDefinition/SearchParameter
 *
 * @generated from message google.fhir.stu3.proto.SearchParameter
 */
export class SearchParameter extends Message<SearchParameter> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this search parameter (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Business version of the search parameter
   *
   * @generated from field: google.fhir.stu3.proto.String version = 10;
   */
  version?: String;

  /**
   * Name for this search parameter (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 11;
   */
  name?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 12;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 13;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 14;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 15;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 16;
   */
  contact: ContactDetail[] = [];

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 17;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for search parameter (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 18;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this search parameter is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 19;
   */
  purpose?: Markdown;

  /**
   * Code used in URL
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 20;
   */
  code?: Code;

  /**
   * The resource type(s) this search parameter applies to
   *
   * @generated from field: repeated google.fhir.stu3.proto.ResourceTypeCode base = 21;
   */
  base: ResourceTypeCode[] = [];

  /**
   * number | date | string | token | reference | composite | quantity | uri
   *
   * @generated from field: google.fhir.stu3.proto.SearchParamTypeCode type = 22;
   */
  type?: SearchParamTypeCode;

  /**
   * Original Definition for the search parameter
   *
   * @generated from field: google.fhir.stu3.proto.Uri derived_from = 23;
   */
  derivedFrom?: Uri;

  /**
   * Natural language description of the search parameter
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 24;
   */
  description?: Markdown;

  /**
   * FHIRPath expression that extracts the values
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 25;
   */
  expression?: String;

  /**
   * XPath that extracts the values
   *
   * @generated from field: google.fhir.stu3.proto.String xpath = 26;
   */
  xpath?: String;

  /**
   * normal | phonetic | nearby | distance | other
   *
   * @generated from field: google.fhir.stu3.proto.XPathUsageTypeCode xpath_usage = 27;
   */
  xpathUsage?: XPathUsageTypeCode;

  /**
   * Types of resource (if a resource reference)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ResourceTypeCode target = 28;
   */
  target: ResourceTypeCode[] = [];

  /**
   * eq | ne | gt | lt | ge | le | sa | eb | ap
   *
   * @generated from field: repeated google.fhir.stu3.proto.SearchComparatorCode comparator = 29;
   */
  comparator: SearchComparatorCode[] = [];

  /**
   * missing | exact | contains | not | text | in | not-in | below | above |
   * type
   *
   * @generated from field: repeated google.fhir.stu3.proto.SearchModifierCodeCode modifier = 30;
   */
  modifier: SearchModifierCodeCode[] = [];

  /**
   * Chained names supported
   *
   * @generated from field: repeated google.fhir.stu3.proto.String chain = 31;
   */
  chain: String[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.SearchParameter.Component component = 32;
   */
  component: SearchParameter_Component[] = [];

  constructor(data?: PartialMessage<SearchParameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SearchParameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "version", kind: "message", T: String },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 13, name: "experimental", kind: "message", T: Boolean },
    { no: 14, name: "date", kind: "message", T: DateTime },
    { no: 15, name: "publisher", kind: "message", T: String },
    { no: 16, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 17, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 18, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "purpose", kind: "message", T: Markdown },
    { no: 20, name: "code", kind: "message", T: Code },
    { no: 21, name: "base", kind: "message", T: ResourceTypeCode, repeated: true },
    { no: 22, name: "type", kind: "message", T: SearchParamTypeCode },
    { no: 23, name: "derived_from", kind: "message", T: Uri },
    { no: 24, name: "description", kind: "message", T: Markdown },
    { no: 25, name: "expression", kind: "message", T: String },
    { no: 26, name: "xpath", kind: "message", T: String },
    { no: 27, name: "xpath_usage", kind: "message", T: XPathUsageTypeCode },
    { no: 28, name: "target", kind: "message", T: ResourceTypeCode, repeated: true },
    { no: 29, name: "comparator", kind: "message", T: SearchComparatorCode, repeated: true },
    { no: 30, name: "modifier", kind: "message", T: SearchModifierCodeCode, repeated: true },
    { no: 31, name: "chain", kind: "message", T: String, repeated: true },
    { no: 32, name: "component", kind: "message", T: SearchParameter_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter {
    return new SearchParameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter {
    return new SearchParameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter {
    return new SearchParameter().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter | PlainMessage<SearchParameter> | undefined, b: SearchParameter | PlainMessage<SearchParameter> | undefined): boolean {
    return proto3.util.equals(SearchParameter, a, b);
  }
}

/**
 * For Composite resources to define the parts
 *
 * @generated from message google.fhir.stu3.proto.SearchParameter.Component
 */
export class SearchParameter_Component extends Message<SearchParameter_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Defines how the part works
   *
   * @generated from field: google.fhir.stu3.proto.Reference definition = 4;
   */
  definition?: Reference;

  /**
   * Subexpression relative to main expression
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 5;
   */
  expression?: String;

  constructor(data?: PartialMessage<SearchParameter_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SearchParameter.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "definition", kind: "message", T: Reference },
    { no: 5, name: "expression", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_Component {
    return new SearchParameter_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_Component {
    return new SearchParameter_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_Component {
    return new SearchParameter_Component().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_Component | PlainMessage<SearchParameter_Component> | undefined, b: SearchParameter_Component | PlainMessage<SearchParameter_Component> | undefined): boolean {
    return proto3.util.equals(SearchParameter_Component, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Sequence, last updated
 * 2017-04-19T07:44:43.294+10:00. Information about a biological sequence. See
 * http://hl7.org/fhir/StructureDefinition/Sequence
 *
 * @generated from message google.fhir.stu3.proto.Sequence
 */
export class Sequence extends Message<Sequence> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique ID for this particular sequence. This is a FHIR-defined id
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * aa | dna | rna
   *
   * @generated from field: google.fhir.stu3.proto.SequenceTypeCode type = 10;
   */
  type?: SequenceTypeCode;

  /**
   * Base number of coordinate system (0 for 0-based numbering or coordinates,
   * inclusive start, exclusive end, 1 for 1-based numbering, inclusive start,
   * inclusive end)
   *
   * @generated from field: google.fhir.stu3.proto.Integer coordinate_system = 11;
   */
  coordinateSystem?: Integer;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 12;
   */
  patient?: Reference;

  /**
   * Specimen used for sequencing
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 13;
   */
  specimen?: Reference;

  /**
   * The method for sequencing
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 14;
   */
  device?: Reference;

  /**
   * Who should be responsible for test result
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 15;
   */
  performer?: Reference;

  /**
   * The number of copies of the seqeunce of interest.  (RNASeq)
   *
   * @generated from field: google.fhir.stu3.proto.Quantity quantity = 16;
   */
  quantity?: Quantity;

  /**
   * @generated from field: google.fhir.stu3.proto.Sequence.ReferenceSeq reference_seq = 17;
   */
  referenceSeq?: Sequence_ReferenceSeq;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Sequence.Variant variant = 18;
   */
  variant: Sequence_Variant[] = [];

  /**
   * Sequence that was observed
   *
   * @generated from field: google.fhir.stu3.proto.String observed_seq = 19;
   */
  observedSeq?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Sequence.Quality quality = 20;
   */
  quality: Sequence_Quality[] = [];

  /**
   * Average number of reads representing a given nucleotide in the
   * reconstructed sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer read_coverage = 21;
   */
  readCoverage?: Integer;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Sequence.Repository repository = 22;
   */
  repository: Sequence_Repository[] = [];

  /**
   * Pointer to next atomic sequence
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference pointer = 23;
   */
  pointer: Reference[] = [];

  constructor(data?: PartialMessage<Sequence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Sequence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "type", kind: "message", T: SequenceTypeCode },
    { no: 11, name: "coordinate_system", kind: "message", T: Integer },
    { no: 12, name: "patient", kind: "message", T: Reference },
    { no: 13, name: "specimen", kind: "message", T: Reference },
    { no: 14, name: "device", kind: "message", T: Reference },
    { no: 15, name: "performer", kind: "message", T: Reference },
    { no: 16, name: "quantity", kind: "message", T: Quantity },
    { no: 17, name: "reference_seq", kind: "message", T: Sequence_ReferenceSeq },
    { no: 18, name: "variant", kind: "message", T: Sequence_Variant, repeated: true },
    { no: 19, name: "observed_seq", kind: "message", T: String },
    { no: 20, name: "quality", kind: "message", T: Sequence_Quality, repeated: true },
    { no: 21, name: "read_coverage", kind: "message", T: Integer },
    { no: 22, name: "repository", kind: "message", T: Sequence_Repository, repeated: true },
    { no: 23, name: "pointer", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sequence {
    return new Sequence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sequence {
    return new Sequence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sequence {
    return new Sequence().fromJsonString(jsonString, options);
  }

  static equals(a: Sequence | PlainMessage<Sequence> | undefined, b: Sequence | PlainMessage<Sequence> | undefined): boolean {
    return proto3.util.equals(Sequence, a, b);
  }
}

/**
 * A sequence used as reference
 *
 * @generated from message google.fhir.stu3.proto.Sequence.ReferenceSeq
 */
export class Sequence_ReferenceSeq extends Message<Sequence_ReferenceSeq> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Chromosome containing genetic finding
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept chromosome = 4;
   */
  chromosome?: CodeableConcept;

  /**
   * The Genome Build used for reference, following GRCh build versions e.g.
   * 'GRCh 37'
   *
   * @generated from field: google.fhir.stu3.proto.String genome_build = 5;
   */
  genomeBuild?: String;

  /**
   * Reference identifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reference_seq_id = 6;
   */
  referenceSeqId?: CodeableConcept;

  /**
   * A Pointer to another Sequence entity as reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference_seq_pointer = 7;
   */
  referenceSeqPointer?: Reference;

  /**
   * A string to represent reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.String reference_seq_string = 8;
   */
  referenceSeqString?: String;

  /**
   * Directionality of DNA ( +1/-1)
   *
   * @generated from field: google.fhir.stu3.proto.Integer strand = 9;
   */
  strand?: Integer;

  /**
   * Start position of the window on the  reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer window_start = 10;
   */
  windowStart?: Integer;

  /**
   * End position of the window on the reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer window_end = 11;
   */
  windowEnd?: Integer;

  constructor(data?: PartialMessage<Sequence_ReferenceSeq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Sequence.ReferenceSeq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "chromosome", kind: "message", T: CodeableConcept },
    { no: 5, name: "genome_build", kind: "message", T: String },
    { no: 6, name: "reference_seq_id", kind: "message", T: CodeableConcept },
    { no: 7, name: "reference_seq_pointer", kind: "message", T: Reference },
    { no: 8, name: "reference_seq_string", kind: "message", T: String },
    { no: 9, name: "strand", kind: "message", T: Integer },
    { no: 10, name: "window_start", kind: "message", T: Integer },
    { no: 11, name: "window_end", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sequence_ReferenceSeq {
    return new Sequence_ReferenceSeq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sequence_ReferenceSeq {
    return new Sequence_ReferenceSeq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sequence_ReferenceSeq {
    return new Sequence_ReferenceSeq().fromJsonString(jsonString, options);
  }

  static equals(a: Sequence_ReferenceSeq | PlainMessage<Sequence_ReferenceSeq> | undefined, b: Sequence_ReferenceSeq | PlainMessage<Sequence_ReferenceSeq> | undefined): boolean {
    return proto3.util.equals(Sequence_ReferenceSeq, a, b);
  }
}

/**
 * Variant in sequence
 *
 * @generated from message google.fhir.stu3.proto.Sequence.Variant
 */
export class Sequence_Variant extends Message<Sequence_Variant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Start position of the variant on the  reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer start = 4;
   */
  start?: Integer;

  /**
   * End position of the variant on the reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer end = 5;
   */
  end?: Integer;

  /**
   * Allele that was observed
   *
   * @generated from field: google.fhir.stu3.proto.String observed_allele = 6;
   */
  observedAllele?: String;

  /**
   * Allele in the reference sequence
   *
   * @generated from field: google.fhir.stu3.proto.String reference_allele = 7;
   */
  referenceAllele?: String;

  /**
   * Extended CIGAR string for aligning the sequence with reference bases
   *
   * @generated from field: google.fhir.stu3.proto.String cigar = 8;
   */
  cigar?: String;

  /**
   * Pointer to observed variant information
   *
   * @generated from field: google.fhir.stu3.proto.Reference variant_pointer = 9;
   */
  variantPointer?: Reference;

  constructor(data?: PartialMessage<Sequence_Variant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Sequence.Variant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "start", kind: "message", T: Integer },
    { no: 5, name: "end", kind: "message", T: Integer },
    { no: 6, name: "observed_allele", kind: "message", T: String },
    { no: 7, name: "reference_allele", kind: "message", T: String },
    { no: 8, name: "cigar", kind: "message", T: String },
    { no: 9, name: "variant_pointer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sequence_Variant {
    return new Sequence_Variant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sequence_Variant {
    return new Sequence_Variant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sequence_Variant {
    return new Sequence_Variant().fromJsonString(jsonString, options);
  }

  static equals(a: Sequence_Variant | PlainMessage<Sequence_Variant> | undefined, b: Sequence_Variant | PlainMessage<Sequence_Variant> | undefined): boolean {
    return proto3.util.equals(Sequence_Variant, a, b);
  }
}

/**
 * An set of value as quality of sequence
 *
 * @generated from message google.fhir.stu3.proto.Sequence.Quality
 */
export class Sequence_Quality extends Message<Sequence_Quality> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * indel | snp | unknown
   *
   * @generated from field: google.fhir.stu3.proto.QualityTypeCode type = 4;
   */
  type?: QualityTypeCode;

  /**
   * Standard sequence for comparison
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept standard_sequence = 5;
   */
  standardSequence?: CodeableConcept;

  /**
   * Start position of the sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer start = 6;
   */
  start?: Integer;

  /**
   * End position of the sequence
   *
   * @generated from field: google.fhir.stu3.proto.Integer end = 7;
   */
  end?: Integer;

  /**
   * Quality score for the comparison
   *
   * @generated from field: google.fhir.stu3.proto.Quantity score = 8;
   */
  score?: Quantity;

  /**
   * Method to get quality
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 9;
   */
  method?: CodeableConcept;

  /**
   * True positives from the perspective of the truth data
   *
   * @generated from field: google.fhir.stu3.proto.Decimal truth_tp = 10 [json_name = "truthTP"];
   */
  truthTp?: Decimal;

  /**
   * True positives from the perspective of the query data
   *
   * @generated from field: google.fhir.stu3.proto.Decimal query_tp = 11 [json_name = "queryTP"];
   */
  queryTp?: Decimal;

  /**
   * False negatives
   *
   * @generated from field: google.fhir.stu3.proto.Decimal truth_fn = 12 [json_name = "truthFN"];
   */
  truthFn?: Decimal;

  /**
   * False positives
   *
   * @generated from field: google.fhir.stu3.proto.Decimal query_fp = 13 [json_name = "queryFP"];
   */
  queryFp?: Decimal;

  /**
   * False positives where the non-REF alleles in the Truth and Query Call
   * Sets match
   *
   * @generated from field: google.fhir.stu3.proto.Decimal gt_fp = 14 [json_name = "gtFP"];
   */
  gtFp?: Decimal;

  /**
   * Precision of comparison
   *
   * @generated from field: google.fhir.stu3.proto.Decimal precision = 15;
   */
  precision?: Decimal;

  /**
   * Recall of comparison
   *
   * @generated from field: google.fhir.stu3.proto.Decimal recall = 16;
   */
  recall?: Decimal;

  /**
   * F-score
   *
   * @generated from field: google.fhir.stu3.proto.Decimal f_score = 17;
   */
  fScore?: Decimal;

  constructor(data?: PartialMessage<Sequence_Quality>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Sequence.Quality";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: QualityTypeCode },
    { no: 5, name: "standard_sequence", kind: "message", T: CodeableConcept },
    { no: 6, name: "start", kind: "message", T: Integer },
    { no: 7, name: "end", kind: "message", T: Integer },
    { no: 8, name: "score", kind: "message", T: Quantity },
    { no: 9, name: "method", kind: "message", T: CodeableConcept },
    { no: 10, name: "truth_tp", jsonName: "truthTP", kind: "message", T: Decimal },
    { no: 11, name: "query_tp", jsonName: "queryTP", kind: "message", T: Decimal },
    { no: 12, name: "truth_fn", jsonName: "truthFN", kind: "message", T: Decimal },
    { no: 13, name: "query_fp", jsonName: "queryFP", kind: "message", T: Decimal },
    { no: 14, name: "gt_fp", jsonName: "gtFP", kind: "message", T: Decimal },
    { no: 15, name: "precision", kind: "message", T: Decimal },
    { no: 16, name: "recall", kind: "message", T: Decimal },
    { no: 17, name: "f_score", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sequence_Quality {
    return new Sequence_Quality().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sequence_Quality {
    return new Sequence_Quality().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sequence_Quality {
    return new Sequence_Quality().fromJsonString(jsonString, options);
  }

  static equals(a: Sequence_Quality | PlainMessage<Sequence_Quality> | undefined, b: Sequence_Quality | PlainMessage<Sequence_Quality> | undefined): boolean {
    return proto3.util.equals(Sequence_Quality, a, b);
  }
}

/**
 * External repository which contains detailed report related with observedSeq
 * in this resource
 *
 * @generated from message google.fhir.stu3.proto.Sequence.Repository
 */
export class Sequence_Repository extends Message<Sequence_Repository> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * directlink | openapi | login | oauth | other
   *
   * @generated from field: google.fhir.stu3.proto.RepositoryTypeCode type = 4;
   */
  type?: RepositoryTypeCode;

  /**
   * URI of the repository
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 5;
   */
  url?: Uri;

  /**
   * Repository's name
   *
   * @generated from field: google.fhir.stu3.proto.String name = 6;
   */
  name?: String;

  /**
   * Id of the dataset that used to call for dataset in repository
   *
   * @generated from field: google.fhir.stu3.proto.String dataset_id = 7;
   */
  datasetId?: String;

  /**
   * Id of the variantset that used to call for variantset in repository
   *
   * @generated from field: google.fhir.stu3.proto.String variantset_id = 8;
   */
  variantsetId?: String;

  /**
   * Id of the read
   *
   * @generated from field: google.fhir.stu3.proto.String readset_id = 9;
   */
  readsetId?: String;

  constructor(data?: PartialMessage<Sequence_Repository>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Sequence.Repository";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: RepositoryTypeCode },
    { no: 5, name: "url", kind: "message", T: Uri },
    { no: 6, name: "name", kind: "message", T: String },
    { no: 7, name: "dataset_id", kind: "message", T: String },
    { no: 8, name: "variantset_id", kind: "message", T: String },
    { no: 9, name: "readset_id", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sequence_Repository {
    return new Sequence_Repository().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sequence_Repository {
    return new Sequence_Repository().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sequence_Repository {
    return new Sequence_Repository().fromJsonString(jsonString, options);
  }

  static equals(a: Sequence_Repository | PlainMessage<Sequence_Repository> | undefined, b: Sequence_Repository | PlainMessage<Sequence_Repository> | undefined): boolean {
    return proto3.util.equals(Sequence_Repository, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ServiceDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. A description of decision support service
 * functionality. See http://hl7.org/fhir/StructureDefinition/ServiceDefinition
 *
 * @generated from message google.fhir.stu3.proto.ServiceDefinition
 */
export class ServiceDefinition extends Message<ServiceDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this service definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the service definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the service definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this service definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this service definition (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Natural language description of the service definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * Why this service definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 19;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the module
   *
   * @generated from field: google.fhir.stu3.proto.String usage = 20;
   */
  usage?: String;

  /**
   * When the service definition was approved by publisher
   *
   * @generated from field: google.fhir.stu3.proto.Date approval_date = 21;
   */
  approvalDate?: Date;

  /**
   * When the service definition was last reviewed
   *
   * @generated from field: google.fhir.stu3.proto.Date last_review_date = 22;
   */
  lastReviewDate?: Date;

  /**
   * When the service definition is expected to be used
   *
   * @generated from field: google.fhir.stu3.proto.Period effective_period = 23;
   */
  effectivePeriod?: Period;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 24;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for service definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 25;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * E.g. Education, Treatment, Assessment, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept topic = 26;
   */
  topic: CodeableConcept[] = [];

  /**
   * A content contributor
   *
   * @generated from field: repeated google.fhir.stu3.proto.Contributor contributor = 27;
   */
  contributor: Contributor[] = [];

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 28;
   */
  contact: ContactDetail[] = [];

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 29;
   */
  copyright?: Markdown;

  /**
   * Additional documentation, citations, etc
   *
   * @generated from field: repeated google.fhir.stu3.proto.RelatedArtifact related_artifact = 30;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * "when" the module should be invoked
   *
   * @generated from field: repeated google.fhir.stu3.proto.TriggerDefinition trigger = 31;
   */
  trigger: TriggerDefinition[] = [];

  /**
   * What data is used by the module
   *
   * @generated from field: repeated google.fhir.stu3.proto.DataRequirement data_requirement = 32;
   */
  dataRequirement: DataRequirement[] = [];

  /**
   * Operation to invoke
   *
   * @generated from field: google.fhir.stu3.proto.Reference operation_definition = 33;
   */
  operationDefinition?: Reference;

  constructor(data?: PartialMessage<ServiceDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ServiceDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "purpose", kind: "message", T: Markdown },
    { no: 20, name: "usage", kind: "message", T: String },
    { no: 21, name: "approval_date", kind: "message", T: Date },
    { no: 22, name: "last_review_date", kind: "message", T: Date },
    { no: 23, name: "effective_period", kind: "message", T: Period },
    { no: 24, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 25, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "contributor", kind: "message", T: Contributor, repeated: true },
    { no: 28, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 29, name: "copyright", kind: "message", T: Markdown },
    { no: 30, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 31, name: "trigger", kind: "message", T: TriggerDefinition, repeated: true },
    { no: 32, name: "data_requirement", kind: "message", T: DataRequirement, repeated: true },
    { no: 33, name: "operation_definition", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceDefinition {
    return new ServiceDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceDefinition {
    return new ServiceDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceDefinition {
    return new ServiceDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceDefinition | PlainMessage<ServiceDefinition> | undefined, b: ServiceDefinition | PlainMessage<ServiceDefinition> | undefined): boolean {
    return proto3.util.equals(ServiceDefinition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Slot, last updated
 * 2017-04-19T07:44:43.294+10:00. A slot of time on a schedule that may be
 * available for booking appointments. See
 * http://hl7.org/fhir/StructureDefinition/Slot
 *
 * @generated from message google.fhir.stu3.proto.Slot
 */
export class Slot extends Message<Slot> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * A broad categorisation of the service that is to be performed during this
   * appointment
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept service_category = 10;
   */
  serviceCategory?: CodeableConcept;

  /**
   * The type of appointments that can be booked into this slot (ideally this
   * would be an identifiable service - which is at a location, rather than the
   * location itself). If provided then this overrides the value provided on the
   * availability resource
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept service_type = 11;
   */
  serviceType: CodeableConcept[] = [];

  /**
   * The specialty of a practitioner that would be required to perform the
   * service requested in this appointment
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept specialty = 12;
   */
  specialty: CodeableConcept[] = [];

  /**
   * The style of appointment or patient that may be booked in the slot (not
   * service type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept appointment_type = 13;
   */
  appointmentType?: CodeableConcept;

  /**
   * The schedule resource that this slot defines an interval of status
   * information
   *
   * @generated from field: google.fhir.stu3.proto.Reference schedule = 14;
   */
  schedule?: Reference;

  /**
   * busy | free | busy-unavailable | busy-tentative | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.SlotStatusCode status = 15;
   */
  status?: SlotStatusCode;

  /**
   * Date/Time that the slot is to begin
   *
   * @generated from field: google.fhir.stu3.proto.Instant start = 16;
   */
  start?: Instant;

  /**
   * Date/Time that the slot is to conclude
   *
   * @generated from field: google.fhir.stu3.proto.Instant end = 17;
   */
  end?: Instant;

  /**
   * This slot has already been overbooked, appointments are unlikely to be
   * accepted for this time
   *
   * @generated from field: google.fhir.stu3.proto.Boolean overbooked = 18;
   */
  overbooked?: Boolean;

  /**
   * Comments on the slot to describe any extended information. Such as custom
   * constraints on the slot
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 19;
   */
  comment?: String;

  constructor(data?: PartialMessage<Slot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Slot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "service_category", kind: "message", T: CodeableConcept },
    { no: 11, name: "service_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "specialty", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "appointment_type", kind: "message", T: CodeableConcept },
    { no: 14, name: "schedule", kind: "message", T: Reference },
    { no: 15, name: "status", kind: "message", T: SlotStatusCode },
    { no: 16, name: "start", kind: "message", T: Instant },
    { no: 17, name: "end", kind: "message", T: Instant },
    { no: 18, name: "overbooked", kind: "message", T: Boolean },
    { no: 19, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Slot {
    return new Slot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Slot {
    return new Slot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Slot {
    return new Slot().fromJsonString(jsonString, options);
  }

  static equals(a: Slot | PlainMessage<Slot> | undefined, b: Slot | PlainMessage<Slot> | undefined): boolean {
    return proto3.util.equals(Slot, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Specimen, last updated
 * 2017-04-19T07:44:43.294+10:00. Sample for analysis. See
 * http://hl7.org/fhir/StructureDefinition/Specimen
 *
 * @generated from message google.fhir.stu3.proto.Specimen
 */
export class Specimen extends Message<Specimen> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Identifier assigned by the lab
   *
   * @generated from field: google.fhir.stu3.proto.Identifier accession_identifier = 10;
   */
  accessionIdentifier?: Identifier;

  /**
   * available | unavailable | unsatisfactory | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.SpecimenStatusCode status = 11;
   */
  status?: SpecimenStatusCode;

  /**
   * Kind of material that forms the specimen
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * Where the specimen came from. This may be from the patient(s) or from the
   * environment or a device
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * The time when specimen was received for processing
   *
   * @generated from field: google.fhir.stu3.proto.DateTime received_time = 14;
   */
  receivedTime?: DateTime;

  /**
   * Specimen from which this specimen originated
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference parent = 15;
   */
  parent: Reference[] = [];

  /**
   * Why the specimen was collected
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference request = 16;
   */
  request: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Specimen.Collection collection = 17;
   */
  collection?: Specimen_Collection;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Specimen.Processing processing = 18;
   */
  processing: Specimen_Processing[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Specimen.Container container = 19;
   */
  container: Specimen_Container[] = [];

  /**
   * Comments
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 20;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<Specimen>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "accession_identifier", kind: "message", T: Identifier },
    { no: 11, name: "status", kind: "message", T: SpecimenStatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "received_time", kind: "message", T: DateTime },
    { no: 15, name: "parent", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "request", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "collection", kind: "message", T: Specimen_Collection },
    { no: 18, name: "processing", kind: "message", T: Specimen_Processing, repeated: true },
    { no: 19, name: "container", kind: "message", T: Specimen_Container, repeated: true },
    { no: 20, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen {
    return new Specimen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen {
    return new Specimen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen {
    return new Specimen().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen | PlainMessage<Specimen> | undefined, b: Specimen | PlainMessage<Specimen> | undefined): boolean {
    return proto3.util.equals(Specimen, a, b);
  }
}

/**
 * Collection details
 *
 * @generated from message google.fhir.stu3.proto.Specimen.Collection
 */
export class Specimen_Collection extends Message<Specimen_Collection> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Who collected the specimen
   *
   * @generated from field: google.fhir.stu3.proto.Reference collector = 4;
   */
  collector?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Specimen.Collection.Collected collected = 5;
   */
  collected?: Specimen_Collection_Collected;

  /**
   * The quantity of specimen collected
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Technique used to perform collection
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 7;
   */
  method?: CodeableConcept;

  /**
   * Anatomical collection site
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 8;
   */
  bodySite?: CodeableConcept;

  constructor(data?: PartialMessage<Specimen_Collection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen.Collection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "collector", kind: "message", T: Reference },
    { no: 5, name: "collected", kind: "message", T: Specimen_Collection_Collected },
    { no: 6, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 7, name: "method", kind: "message", T: CodeableConcept },
    { no: 8, name: "body_site", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen_Collection {
    return new Specimen_Collection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen_Collection {
    return new Specimen_Collection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen_Collection {
    return new Specimen_Collection().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen_Collection | PlainMessage<Specimen_Collection> | undefined, b: Specimen_Collection | PlainMessage<Specimen_Collection> | undefined): boolean {
    return proto3.util.equals(Specimen_Collection, a, b);
  }
}

/**
 * Collection time
 *
 * @generated from message google.fhir.stu3.proto.Specimen.Collection.Collected
 */
export class Specimen_Collection_Collected extends Message<Specimen_Collection_Collected> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Specimen.Collection.Collected.collected
   */
  collected: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Specimen_Collection_Collected>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen.Collection.Collected";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "collected" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "collected" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen_Collection_Collected {
    return new Specimen_Collection_Collected().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen_Collection_Collected {
    return new Specimen_Collection_Collected().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen_Collection_Collected {
    return new Specimen_Collection_Collected().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen_Collection_Collected | PlainMessage<Specimen_Collection_Collected> | undefined, b: Specimen_Collection_Collected | PlainMessage<Specimen_Collection_Collected> | undefined): boolean {
    return proto3.util.equals(Specimen_Collection_Collected, a, b);
  }
}

/**
 * Processing and processing step details
 *
 * @generated from message google.fhir.stu3.proto.Specimen.Processing
 */
export class Specimen_Processing extends Message<Specimen_Processing> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Textual description of procedure
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * Indicates the treatment step  applied to the specimen
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept procedure = 5;
   */
  procedure?: CodeableConcept;

  /**
   * Material used in the processing step
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference additive = 6;
   */
  additive: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Specimen.Processing.Time time = 7;
   */
  time?: Specimen_Processing_Time;

  constructor(data?: PartialMessage<Specimen_Processing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen.Processing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "procedure", kind: "message", T: CodeableConcept },
    { no: 6, name: "additive", kind: "message", T: Reference, repeated: true },
    { no: 7, name: "time", kind: "message", T: Specimen_Processing_Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen_Processing {
    return new Specimen_Processing().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen_Processing {
    return new Specimen_Processing().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen_Processing {
    return new Specimen_Processing().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen_Processing | PlainMessage<Specimen_Processing> | undefined, b: Specimen_Processing | PlainMessage<Specimen_Processing> | undefined): boolean {
    return proto3.util.equals(Specimen_Processing, a, b);
  }
}

/**
 * Date and time of specimen processing
 *
 * @generated from message google.fhir.stu3.proto.Specimen.Processing.Time
 */
export class Specimen_Processing_Time extends Message<Specimen_Processing_Time> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Specimen.Processing.Time.time
   */
  time: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Specimen_Processing_Time>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen.Processing.Time";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "time" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "time" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen_Processing_Time {
    return new Specimen_Processing_Time().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen_Processing_Time {
    return new Specimen_Processing_Time().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen_Processing_Time {
    return new Specimen_Processing_Time().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen_Processing_Time | PlainMessage<Specimen_Processing_Time> | undefined, b: Specimen_Processing_Time | PlainMessage<Specimen_Processing_Time> | undefined): boolean {
    return proto3.util.equals(Specimen_Processing_Time, a, b);
  }
}

/**
 * Direct container of specimen (tube/slide, etc.)
 *
 * @generated from message google.fhir.stu3.proto.Specimen.Container
 */
export class Specimen_Container extends Message<Specimen_Container> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Id for the container
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier: Identifier[] = [];

  /**
   * Textual description of the container
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Kind of container directly associated with specimen
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Container volume or size
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity capacity = 7;
   */
  capacity?: SimpleQuantity;

  /**
   * Quantity of specimen within container
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity specimen_quantity = 8;
   */
  specimenQuantity?: SimpleQuantity;

  /**
   * @generated from field: google.fhir.stu3.proto.Specimen.Container.Additive additive = 9;
   */
  additive?: Specimen_Container_Additive;

  constructor(data?: PartialMessage<Specimen_Container>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen.Container";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "capacity", kind: "message", T: SimpleQuantity },
    { no: 8, name: "specimen_quantity", kind: "message", T: SimpleQuantity },
    { no: 9, name: "additive", kind: "message", T: Specimen_Container_Additive },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen_Container {
    return new Specimen_Container().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen_Container {
    return new Specimen_Container().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen_Container {
    return new Specimen_Container().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen_Container | PlainMessage<Specimen_Container> | undefined, b: Specimen_Container | PlainMessage<Specimen_Container> | undefined): boolean {
    return proto3.util.equals(Specimen_Container, a, b);
  }
}

/**
 * Additive associated with container
 *
 * @generated from message google.fhir.stu3.proto.Specimen.Container.Additive
 */
export class Specimen_Container_Additive extends Message<Specimen_Container_Additive> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Specimen.Container.Additive.additive
   */
  additive: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Specimen_Container_Additive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Specimen.Container.Additive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "additive" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "additive" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Specimen_Container_Additive {
    return new Specimen_Container_Additive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Specimen_Container_Additive {
    return new Specimen_Container_Additive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Specimen_Container_Additive {
    return new Specimen_Container_Additive().fromJsonString(jsonString, options);
  }

  static equals(a: Specimen_Container_Additive | PlainMessage<Specimen_Container_Additive> | undefined, b: Specimen_Container_Additive | PlainMessage<Specimen_Container_Additive> | undefined): boolean {
    return proto3.util.equals(Specimen_Container_Additive, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for StructureDefinition, last updated
 * 2017-04-19T07:44:43.294+10:00. Structural Definition. See
 * http://hl7.org/fhir/StructureDefinition/StructureDefinition
 *
 * @generated from message google.fhir.stu3.proto.StructureDefinition
 */
export class StructureDefinition extends Message<StructureDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this structure definition (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the structure definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the structure definition
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this structure definition (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this structure definition (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the structure definition
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for structure definition (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this structure definition is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * Assist with indexing and finding
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding keyword = 24;
   */
  keyword: Coding[] = [];

  /**
   * FHIR Version this StructureDefinition targets
   *
   * @generated from field: google.fhir.stu3.proto.Id fhir_version = 25;
   */
  fhirVersion?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureDefinition.Mapping mapping = 26;
   */
  mapping: StructureDefinition_Mapping[] = [];

  /**
   * primitive-type | complex-type | resource | logical
   *
   * @generated from field: google.fhir.stu3.proto.StructureDefinitionKindCode kind = 27;
   */
  kind?: StructureDefinitionKindCode;

  /**
   * Whether the structure is abstract
   *
   * @generated from field: google.fhir.stu3.proto.Boolean abstract = 28;
   */
  abstract?: Boolean;

  /**
   * resource | datatype | extension
   *
   * @generated from field: google.fhir.stu3.proto.ExtensionContextCode context_type = 29;
   */
  contextType?: ExtensionContextCode;

  /**
   * Where the extension can be used in instances
   *
   * @generated from field: repeated google.fhir.stu3.proto.String context = 30;
   */
  context: String[] = [];

  /**
   * FHIRPath invariants - when the extension can be used
   *
   * @generated from field: repeated google.fhir.stu3.proto.String context_invariant = 31;
   */
  contextInvariant: String[] = [];

  /**
   * Type defined or constrained by this structure
   *
   * @generated from field: google.fhir.stu3.proto.FHIRDefinedTypeExtCode type = 32;
   */
  type?: FHIRDefinedTypeExtCode;

  /**
   * Definition that this type is constrained/specialized from
   *
   * @generated from field: google.fhir.stu3.proto.Uri base_definition = 33;
   */
  baseDefinition?: Uri;

  /**
   * specialization | constraint - How relates to base definition
   *
   * @generated from field: google.fhir.stu3.proto.TypeDerivationRuleCode derivation = 34;
   */
  derivation?: TypeDerivationRuleCode;

  /**
   * @generated from field: google.fhir.stu3.proto.StructureDefinition.Snapshot snapshot = 35;
   */
  snapshot?: StructureDefinition_Snapshot;

  /**
   * @generated from field: google.fhir.stu3.proto.StructureDefinition.Differential differential = 36;
   */
  differential?: StructureDefinition_Differential;

  constructor(data?: PartialMessage<StructureDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "keyword", kind: "message", T: Coding, repeated: true },
    { no: 25, name: "fhir_version", kind: "message", T: Id },
    { no: 26, name: "mapping", kind: "message", T: StructureDefinition_Mapping, repeated: true },
    { no: 27, name: "kind", kind: "message", T: StructureDefinitionKindCode },
    { no: 28, name: "abstract", kind: "message", T: Boolean },
    { no: 29, name: "context_type", kind: "message", T: ExtensionContextCode },
    { no: 30, name: "context", kind: "message", T: String, repeated: true },
    { no: 31, name: "context_invariant", kind: "message", T: String, repeated: true },
    { no: 32, name: "type", kind: "message", T: FHIRDefinedTypeExtCode },
    { no: 33, name: "base_definition", kind: "message", T: Uri },
    { no: 34, name: "derivation", kind: "message", T: TypeDerivationRuleCode },
    { no: 35, name: "snapshot", kind: "message", T: StructureDefinition_Snapshot },
    { no: 36, name: "differential", kind: "message", T: StructureDefinition_Differential },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinition {
    return new StructureDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinition {
    return new StructureDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinition {
    return new StructureDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinition | PlainMessage<StructureDefinition> | undefined, b: StructureDefinition | PlainMessage<StructureDefinition> | undefined): boolean {
    return proto3.util.equals(StructureDefinition, a, b);
  }
}

/**
 * External specification that the content is mapped to
 *
 * @generated from message google.fhir.stu3.proto.StructureDefinition.Mapping
 */
export class StructureDefinition_Mapping extends Message<StructureDefinition_Mapping> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Internal id when this mapping is used
   *
   * @generated from field: google.fhir.stu3.proto.Id identity = 4;
   */
  identity?: Id;

  /**
   * Identifies what this mapping refers to
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * Names what this mapping refers to
   *
   * @generated from field: google.fhir.stu3.proto.String name = 6;
   */
  name?: String;

  /**
   * Versions, Issues, Scope limitations etc.
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 7;
   */
  comment?: String;

  constructor(data?: PartialMessage<StructureDefinition_Mapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureDefinition.Mapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identity", kind: "message", T: Id },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "name", kind: "message", T: String },
    { no: 7, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinition_Mapping {
    return new StructureDefinition_Mapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinition_Mapping {
    return new StructureDefinition_Mapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinition_Mapping {
    return new StructureDefinition_Mapping().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinition_Mapping | PlainMessage<StructureDefinition_Mapping> | undefined, b: StructureDefinition_Mapping | PlainMessage<StructureDefinition_Mapping> | undefined): boolean {
    return proto3.util.equals(StructureDefinition_Mapping, a, b);
  }
}

/**
 * Snapshot view of the structure
 *
 * @generated from message google.fhir.stu3.proto.StructureDefinition.Snapshot
 */
export class StructureDefinition_Snapshot extends Message<StructureDefinition_Snapshot> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Definition of elements in the resource (if no StructureDefinition)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition element = 4;
   */
  element: ElementDefinition[] = [];

  constructor(data?: PartialMessage<StructureDefinition_Snapshot>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureDefinition.Snapshot";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "element", kind: "message", T: ElementDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinition_Snapshot {
    return new StructureDefinition_Snapshot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinition_Snapshot {
    return new StructureDefinition_Snapshot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinition_Snapshot {
    return new StructureDefinition_Snapshot().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinition_Snapshot | PlainMessage<StructureDefinition_Snapshot> | undefined, b: StructureDefinition_Snapshot | PlainMessage<StructureDefinition_Snapshot> | undefined): boolean {
    return proto3.util.equals(StructureDefinition_Snapshot, a, b);
  }
}

/**
 * Differential view of the structure
 *
 * @generated from message google.fhir.stu3.proto.StructureDefinition.Differential
 */
export class StructureDefinition_Differential extends Message<StructureDefinition_Differential> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Definition of elements in the resource (if no StructureDefinition)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ElementDefinition element = 4;
   */
  element: ElementDefinition[] = [];

  constructor(data?: PartialMessage<StructureDefinition_Differential>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureDefinition.Differential";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "element", kind: "message", T: ElementDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinition_Differential {
    return new StructureDefinition_Differential().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinition_Differential {
    return new StructureDefinition_Differential().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinition_Differential {
    return new StructureDefinition_Differential().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinition_Differential | PlainMessage<StructureDefinition_Differential> | undefined, b: StructureDefinition_Differential | PlainMessage<StructureDefinition_Differential> | undefined): boolean {
    return proto3.util.equals(StructureDefinition_Differential, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for StructureMap, last updated
 * 2017-04-19T07:44:43.294+10:00. A Map of relationships between 2 structures
 * that can be used to transform data. See
 * http://hl7.org/fhir/StructureDefinition/StructureMap
 *
 * @generated from message google.fhir.stu3.proto.StructureMap
 */
export class StructureMap extends Message<StructureMap> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this structure map (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the structure map
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the structure map
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this structure map (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this structure map (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the structure map
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for structure map (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this structure map is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Structure structure = 24;
   */
  structure: StructureMap_Structure[] = [];

  /**
   * Other maps used by this map (canonical URLs)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri import = 25;
   */
  import: Uri[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group group = 26;
   */
  group: StructureMap_Group[] = [];

  constructor(data?: PartialMessage<StructureMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "structure", kind: "message", T: StructureMap_Structure, repeated: true },
    { no: 25, name: "import", kind: "message", T: Uri, repeated: true },
    { no: 26, name: "group", kind: "message", T: StructureMap_Group, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap {
    return new StructureMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap {
    return new StructureMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap {
    return new StructureMap().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap | PlainMessage<StructureMap> | undefined, b: StructureMap | PlainMessage<StructureMap> | undefined): boolean {
    return proto3.util.equals(StructureMap, a, b);
  }
}

/**
 * Structure Definition used by this map
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Structure
 */
export class StructureMap_Structure extends Message<StructureMap_Structure> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical URL for structure definition
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 4;
   */
  url?: Uri;

  /**
   * source | queried | target | produced
   *
   * @generated from field: google.fhir.stu3.proto.StructureMapModelModeCode mode = 5;
   */
  mode?: StructureMapModelModeCode;

  /**
   * Name for type in this map
   *
   * @generated from field: google.fhir.stu3.proto.String alias = 6;
   */
  alias?: String;

  /**
   * Documentation on use of structure
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 7;
   */
  documentation?: String;

  constructor(data?: PartialMessage<StructureMap_Structure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Structure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "url", kind: "message", T: Uri },
    { no: 5, name: "mode", kind: "message", T: StructureMapModelModeCode },
    { no: 6, name: "alias", kind: "message", T: String },
    { no: 7, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Structure {
    return new StructureMap_Structure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Structure {
    return new StructureMap_Structure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Structure {
    return new StructureMap_Structure().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Structure | PlainMessage<StructureMap_Structure> | undefined, b: StructureMap_Structure | PlainMessage<StructureMap_Structure> | undefined): boolean {
    return proto3.util.equals(StructureMap_Structure, a, b);
  }
}

/**
 * Named sections for reader convenience
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group
 */
export class StructureMap_Group extends Message<StructureMap_Group> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human-readable label
   *
   * @generated from field: google.fhir.stu3.proto.Id name = 4;
   */
  name?: Id;

  /**
   * Another group that this group adds rules to
   *
   * @generated from field: google.fhir.stu3.proto.Id extends = 5;
   */
  extends?: Id;

  /**
   * none | types | type-and-types
   *
   * @generated from field: google.fhir.stu3.proto.StructureMapGroupTypeModeCode type_mode = 6;
   */
  typeMode?: StructureMapGroupTypeModeCode;

  /**
   * Additional description/explaination for group
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 7;
   */
  documentation?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Input input = 8;
   */
  input: StructureMap_Group_Input[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Rule rule = 9;
   */
  rule: StructureMap_Group_Rule[] = [];

  constructor(data?: PartialMessage<StructureMap_Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "extends", kind: "message", T: Id },
    { no: 6, name: "type_mode", kind: "message", T: StructureMapGroupTypeModeCode },
    { no: 7, name: "documentation", kind: "message", T: String },
    { no: 8, name: "input", kind: "message", T: StructureMap_Group_Input, repeated: true },
    { no: 9, name: "rule", kind: "message", T: StructureMap_Group_Rule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group {
    return new StructureMap_Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group {
    return new StructureMap_Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group {
    return new StructureMap_Group().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group | PlainMessage<StructureMap_Group> | undefined, b: StructureMap_Group | PlainMessage<StructureMap_Group> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group, a, b);
  }
}

/**
 * Named instance provided when invoking the map
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Input
 */
export class StructureMap_Group_Input extends Message<StructureMap_Group_Input> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name for this instance of data
   *
   * @generated from field: google.fhir.stu3.proto.Id name = 4;
   */
  name?: Id;

  /**
   * Type for this instance of data
   *
   * @generated from field: google.fhir.stu3.proto.String type = 5;
   */
  type?: String;

  /**
   * source | target
   *
   * @generated from field: google.fhir.stu3.proto.StructureMapInputModeCode mode = 6;
   */
  mode?: StructureMapInputModeCode;

  /**
   * Documentation for this instance of data
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 7;
   */
  documentation?: String;

  constructor(data?: PartialMessage<StructureMap_Group_Input>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Input";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "type", kind: "message", T: String },
    { no: 6, name: "mode", kind: "message", T: StructureMapInputModeCode },
    { no: 7, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Input {
    return new StructureMap_Group_Input().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Input {
    return new StructureMap_Group_Input().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Input {
    return new StructureMap_Group_Input().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Input | PlainMessage<StructureMap_Group_Input> | undefined, b: StructureMap_Group_Input | PlainMessage<StructureMap_Group_Input> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Input, a, b);
  }
}

/**
 * Transform Rule from source to target
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule
 */
export class StructureMap_Group_Rule extends Message<StructureMap_Group_Rule> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of the rule for internal references
   *
   * @generated from field: google.fhir.stu3.proto.Id name = 4;
   */
  name?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Rule.Source source = 5;
   */
  source: StructureMap_Group_Rule_Source[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Rule.Target target = 6;
   */
  target: StructureMap_Group_Rule_Target[] = [];

  /**
   * Rules contained in this rule
   *
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Rule rule = 7;
   */
  rule: StructureMap_Group_Rule[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Rule.Dependent dependent = 8;
   */
  dependent: StructureMap_Group_Rule_Dependent[] = [];

  /**
   * Documentation for this instance of data
   *
   * @generated from field: google.fhir.stu3.proto.String documentation = 9;
   */
  documentation?: String;

  constructor(data?: PartialMessage<StructureMap_Group_Rule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "source", kind: "message", T: StructureMap_Group_Rule_Source, repeated: true },
    { no: 6, name: "target", kind: "message", T: StructureMap_Group_Rule_Target, repeated: true },
    { no: 7, name: "rule", kind: "message", T: StructureMap_Group_Rule, repeated: true },
    { no: 8, name: "dependent", kind: "message", T: StructureMap_Group_Rule_Dependent, repeated: true },
    { no: 9, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule {
    return new StructureMap_Group_Rule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule {
    return new StructureMap_Group_Rule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule {
    return new StructureMap_Group_Rule().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule | PlainMessage<StructureMap_Group_Rule> | undefined, b: StructureMap_Group_Rule | PlainMessage<StructureMap_Group_Rule> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule, a, b);
  }
}

/**
 * Source inputs to the mapping
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule.Source
 */
export class StructureMap_Group_Rule_Source extends Message<StructureMap_Group_Rule_Source> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type or variable this rule applies to
   *
   * @generated from field: google.fhir.stu3.proto.Id context = 4;
   */
  context?: Id;

  /**
   * Specified minimum cardinality
   *
   * @generated from field: google.fhir.stu3.proto.Integer min = 5;
   */
  min?: Integer;

  /**
   * Specified maximum cardinality (number or *)
   *
   * @generated from field: google.fhir.stu3.proto.String max = 6;
   */
  max?: String;

  /**
   * Rule only applies if source has this type
   *
   * @generated from field: google.fhir.stu3.proto.String type = 7;
   */
  type?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.StructureMap.Group.Rule.Source.DefaultValue default_value = 8;
   */
  defaultValue?: StructureMap_Group_Rule_Source_DefaultValue;

  /**
   * Optional field for this source
   *
   * @generated from field: google.fhir.stu3.proto.String element = 9;
   */
  element?: String;

  /**
   * first | not_first | last | not_last | only_one
   *
   * @generated from field: google.fhir.stu3.proto.StructureMapSourceListModeCode list_mode = 10;
   */
  listMode?: StructureMapSourceListModeCode;

  /**
   * Named context for field, if a field is specified
   *
   * @generated from field: google.fhir.stu3.proto.Id variable = 11;
   */
  variable?: Id;

  /**
   * FHIRPath expression  - must be true or the rule does not apply
   *
   * @generated from field: google.fhir.stu3.proto.String condition = 12;
   */
  condition?: String;

  /**
   * FHIRPath expression  - must be true or the mapping engine throws an
   * error instead of completing
   *
   * @generated from field: google.fhir.stu3.proto.String check = 13;
   */
  check?: String;

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Source>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule.Source";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "context", kind: "message", T: Id },
    { no: 5, name: "min", kind: "message", T: Integer },
    { no: 6, name: "max", kind: "message", T: String },
    { no: 7, name: "type", kind: "message", T: String },
    { no: 8, name: "default_value", kind: "message", T: StructureMap_Group_Rule_Source_DefaultValue },
    { no: 9, name: "element", kind: "message", T: String },
    { no: 10, name: "list_mode", kind: "message", T: StructureMapSourceListModeCode },
    { no: 11, name: "variable", kind: "message", T: Id },
    { no: 12, name: "condition", kind: "message", T: String },
    { no: 13, name: "check", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Source {
    return new StructureMap_Group_Rule_Source().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source {
    return new StructureMap_Group_Rule_Source().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source {
    return new StructureMap_Group_Rule_Source().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Source | PlainMessage<StructureMap_Group_Rule_Source> | undefined, b: StructureMap_Group_Rule_Source | PlainMessage<StructureMap_Group_Rule_Source> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Source, a, b);
  }
}

/**
 * Default value if no value exists
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule.Source.DefaultValue
 */
export class StructureMap_Group_Rule_Source_DefaultValue extends Message<StructureMap_Group_Rule_Source_DefaultValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.StructureMap.Group.Rule.Source.DefaultValue.default_value
   */
  defaultValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Source_DefaultValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule.Source.DefaultValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "default_value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "default_value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "default_value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "default_value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "default_value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "default_value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "default_value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "default_value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "default_value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "default_value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "default_value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "default_value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "default_value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "default_value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "default_value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "default_value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "default_value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "default_value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "default_value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "default_value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "default_value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "default_value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "default_value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "default_value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "default_value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "default_value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "default_value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "default_value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "default_value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "default_value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "default_value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "default_value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "default_value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "default_value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "default_value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "default_value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "default_value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "default_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Source_DefaultValue {
    return new StructureMap_Group_Rule_Source_DefaultValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source_DefaultValue {
    return new StructureMap_Group_Rule_Source_DefaultValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source_DefaultValue {
    return new StructureMap_Group_Rule_Source_DefaultValue().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Source_DefaultValue | PlainMessage<StructureMap_Group_Rule_Source_DefaultValue> | undefined, b: StructureMap_Group_Rule_Source_DefaultValue | PlainMessage<StructureMap_Group_Rule_Source_DefaultValue> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Source_DefaultValue, a, b);
  }
}

/**
 * Content to create because of this mapping rule
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule.Target
 */
export class StructureMap_Group_Rule_Target extends Message<StructureMap_Group_Rule_Target> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type or variable this rule applies to
   *
   * @generated from field: google.fhir.stu3.proto.Id context = 4;
   */
  context?: Id;

  /**
   * type | variable
   *
   * @generated from field: google.fhir.stu3.proto.StructureMapContextTypeCode context_type = 5;
   */
  contextType?: StructureMapContextTypeCode;

  /**
   * Field to create in the context
   *
   * @generated from field: google.fhir.stu3.proto.String element = 6;
   */
  element?: String;

  /**
   * Named context for field, if desired, and a field is specified
   *
   * @generated from field: google.fhir.stu3.proto.Id variable = 7;
   */
  variable?: Id;

  /**
   * first | share | last | collate
   *
   * @generated from field: repeated google.fhir.stu3.proto.StructureMapTargetListModeCode list_mode = 8;
   */
  listMode: StructureMapTargetListModeCode[] = [];

  /**
   * Internal rule reference for shared list items
   *
   * @generated from field: google.fhir.stu3.proto.Id list_rule_id = 9;
   */
  listRuleId?: Id;

  /**
   * create | copy +
   *
   * @generated from field: google.fhir.stu3.proto.StructureMapTransformCode transform = 10;
   */
  transform?: StructureMapTransformCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter parameter = 11;
   */
  parameter: StructureMap_Group_Rule_Target_Parameter[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "context", kind: "message", T: Id },
    { no: 5, name: "context_type", kind: "message", T: StructureMapContextTypeCode },
    { no: 6, name: "element", kind: "message", T: String },
    { no: 7, name: "variable", kind: "message", T: Id },
    { no: 8, name: "list_mode", kind: "message", T: StructureMapTargetListModeCode, repeated: true },
    { no: 9, name: "list_rule_id", kind: "message", T: Id },
    { no: 10, name: "transform", kind: "message", T: StructureMapTransformCode },
    { no: 11, name: "parameter", kind: "message", T: StructureMap_Group_Rule_Target_Parameter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target {
    return new StructureMap_Group_Rule_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target {
    return new StructureMap_Group_Rule_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target {
    return new StructureMap_Group_Rule_Target().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target | PlainMessage<StructureMap_Group_Rule_Target> | undefined, b: StructureMap_Group_Rule_Target | PlainMessage<StructureMap_Group_Rule_Target> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target, a, b);
  }
}

/**
 * Parameters to the transform
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter
 */
export class StructureMap_Group_Rule_Target_Parameter extends Message<StructureMap_Group_Rule_Target_Parameter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter.Value value = 4;
   */
  value?: StructureMap_Group_Rule_Target_Parameter_Value;

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: StructureMap_Group_Rule_Target_Parameter_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_Parameter {
    return new StructureMap_Group_Rule_Target_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter {
    return new StructureMap_Group_Rule_Target_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter {
    return new StructureMap_Group_Rule_Target_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_Parameter | PlainMessage<StructureMap_Group_Rule_Target_Parameter> | undefined, b: StructureMap_Group_Rule_Target_Parameter | PlainMessage<StructureMap_Group_Rule_Target_Parameter> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_Parameter, a, b);
  }
}

/**
 * Parameter value - variable or literal
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter.Value
 */
export class StructureMap_Group_Rule_Target_Parameter_Value extends Message<StructureMap_Group_Rule_Target_Parameter_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 1;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 3;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 4;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_Parameter_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule.Target.Parameter.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id, oneof: "value" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 3, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 4, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_Parameter_Value {
    return new StructureMap_Group_Rule_Target_Parameter_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter_Value {
    return new StructureMap_Group_Rule_Target_Parameter_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter_Value {
    return new StructureMap_Group_Rule_Target_Parameter_Value().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_Parameter_Value | PlainMessage<StructureMap_Group_Rule_Target_Parameter_Value> | undefined, b: StructureMap_Group_Rule_Target_Parameter_Value | PlainMessage<StructureMap_Group_Rule_Target_Parameter_Value> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_Parameter_Value, a, b);
  }
}

/**
 * Which other rules to apply in the context of this rule
 *
 * @generated from message google.fhir.stu3.proto.StructureMap.Group.Rule.Dependent
 */
export class StructureMap_Group_Rule_Dependent extends Message<StructureMap_Group_Rule_Dependent> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of a rule or group to apply
   *
   * @generated from field: google.fhir.stu3.proto.Id name = 4;
   */
  name?: Id;

  /**
   * Variable to pass to the rule or group
   *
   * @generated from field: repeated google.fhir.stu3.proto.String variable = 5;
   */
  variable: String[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Dependent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMap.Group.Rule.Dependent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "variable", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Dependent {
    return new StructureMap_Group_Rule_Dependent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Dependent {
    return new StructureMap_Group_Rule_Dependent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Dependent {
    return new StructureMap_Group_Rule_Dependent().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Dependent | PlainMessage<StructureMap_Group_Rule_Dependent> | undefined, b: StructureMap_Group_Rule_Dependent | PlainMessage<StructureMap_Group_Rule_Dependent> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Dependent, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Subscription, last updated
 * 2017-04-19T07:44:43.294+10:00. A server push subscription criteria. See
 * http://hl7.org/fhir/StructureDefinition/Subscription
 *
 * @generated from message google.fhir.stu3.proto.Subscription
 */
export class Subscription extends Message<Subscription> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * requested | active | error | off
   *
   * @generated from field: google.fhir.stu3.proto.SubscriptionStatusCode status = 9;
   */
  status?: SubscriptionStatusCode;

  /**
   * Contact details for source (e.g. troubleshooting)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint contact = 10;
   */
  contact: ContactPoint[] = [];

  /**
   * When to automatically delete the subscription
   *
   * @generated from field: google.fhir.stu3.proto.Instant end = 11;
   */
  end?: Instant;

  /**
   * Description of why this subscription was created
   *
   * @generated from field: google.fhir.stu3.proto.String reason = 12;
   */
  reason?: String;

  /**
   * Rule for server push criteria
   *
   * @generated from field: google.fhir.stu3.proto.String criteria = 13;
   */
  criteria?: String;

  /**
   * Latest error note
   *
   * @generated from field: google.fhir.stu3.proto.String error = 14;
   */
  error?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.Subscription.Channel channel = 15;
   */
  channel?: Subscription_Channel;

  /**
   * A tag to add to matching resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding tag = 16;
   */
  tag: Coding[] = [];

  constructor(data?: PartialMessage<Subscription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Subscription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "status", kind: "message", T: SubscriptionStatusCode },
    { no: 10, name: "contact", kind: "message", T: ContactPoint, repeated: true },
    { no: 11, name: "end", kind: "message", T: Instant },
    { no: 12, name: "reason", kind: "message", T: String },
    { no: 13, name: "criteria", kind: "message", T: String },
    { no: 14, name: "error", kind: "message", T: String },
    { no: 15, name: "channel", kind: "message", T: Subscription_Channel },
    { no: 16, name: "tag", kind: "message", T: Coding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Subscription {
    return new Subscription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Subscription {
    return new Subscription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Subscription {
    return new Subscription().fromJsonString(jsonString, options);
  }

  static equals(a: Subscription | PlainMessage<Subscription> | undefined, b: Subscription | PlainMessage<Subscription> | undefined): boolean {
    return proto3.util.equals(Subscription, a, b);
  }
}

/**
 * The channel on which to report matches to the criteria
 *
 * @generated from message google.fhir.stu3.proto.Subscription.Channel
 */
export class Subscription_Channel extends Message<Subscription_Channel> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * rest-hook | websocket | email | sms | message
   *
   * @generated from field: google.fhir.stu3.proto.SubscriptionChannelTypeCode type = 4;
   */
  type?: SubscriptionChannelTypeCode;

  /**
   * Where the channel points to
   *
   * @generated from field: google.fhir.stu3.proto.Uri endpoint = 5;
   */
  endpoint?: Uri;

  /**
   * Mimetype to send, or omit for no payload
   *
   * @generated from field: google.fhir.stu3.proto.String payload = 6;
   */
  payload?: String;

  /**
   * Usage depends on the channel type
   *
   * @generated from field: repeated google.fhir.stu3.proto.String header = 7;
   */
  header: String[] = [];

  constructor(data?: PartialMessage<Subscription_Channel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Subscription.Channel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: SubscriptionChannelTypeCode },
    { no: 5, name: "endpoint", kind: "message", T: Uri },
    { no: 6, name: "payload", kind: "message", T: String },
    { no: 7, name: "header", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Subscription_Channel {
    return new Subscription_Channel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Subscription_Channel {
    return new Subscription_Channel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Subscription_Channel {
    return new Subscription_Channel().fromJsonString(jsonString, options);
  }

  static equals(a: Subscription_Channel | PlainMessage<Subscription_Channel> | undefined, b: Subscription_Channel | PlainMessage<Subscription_Channel> | undefined): boolean {
    return proto3.util.equals(Subscription_Channel, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Substance, last updated
 * 2017-04-19T07:44:43.294+10:00. A homogeneous material with a definite
 * composition. See http://hl7.org/fhir/StructureDefinition/Substance
 *
 * @generated from message google.fhir.stu3.proto.Substance
 */
export class Substance extends Message<Substance> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FHIRSubstanceStatusCode status = 10;
   */
  status?: FHIRSubstanceStatusCode;

  /**
   * What class/type of substance this is
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category: CodeableConcept[] = [];

  /**
   * What substance this is
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 12;
   */
  code?: CodeableConcept;

  /**
   * Textual description of the substance, comments
   *
   * @generated from field: google.fhir.stu3.proto.String description = 13;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Substance.Instance instance = 14;
   */
  instance: Substance_Instance[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Substance.Ingredient ingredient = 15;
   */
  ingredient: Substance_Ingredient[] = [];

  constructor(data?: PartialMessage<Substance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Substance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FHIRSubstanceStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "code", kind: "message", T: CodeableConcept },
    { no: 13, name: "description", kind: "message", T: String },
    { no: 14, name: "instance", kind: "message", T: Substance_Instance, repeated: true },
    { no: 15, name: "ingredient", kind: "message", T: Substance_Ingredient, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Substance {
    return new Substance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Substance {
    return new Substance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Substance {
    return new Substance().fromJsonString(jsonString, options);
  }

  static equals(a: Substance | PlainMessage<Substance> | undefined, b: Substance | PlainMessage<Substance> | undefined): boolean {
    return proto3.util.equals(Substance, a, b);
  }
}

/**
 * If this describes a specific package/container of the substance
 *
 * @generated from message google.fhir.stu3.proto.Substance.Instance
 */
export class Substance_Instance extends Message<Substance_Instance> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier of the package/container
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * When no longer valid to use
   *
   * @generated from field: google.fhir.stu3.proto.DateTime expiry = 5;
   */
  expiry?: DateTime;

  /**
   * Amount of substance in the package
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  constructor(data?: PartialMessage<Substance_Instance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Substance.Instance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "expiry", kind: "message", T: DateTime },
    { no: 6, name: "quantity", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Substance_Instance {
    return new Substance_Instance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Substance_Instance {
    return new Substance_Instance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Substance_Instance {
    return new Substance_Instance().fromJsonString(jsonString, options);
  }

  static equals(a: Substance_Instance | PlainMessage<Substance_Instance> | undefined, b: Substance_Instance | PlainMessage<Substance_Instance> | undefined): boolean {
    return proto3.util.equals(Substance_Instance, a, b);
  }
}

/**
 * Composition information about the substance
 *
 * @generated from message google.fhir.stu3.proto.Substance.Ingredient
 */
export class Substance_Ingredient extends Message<Substance_Ingredient> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Optional amount (concentration)
   *
   * @generated from field: google.fhir.stu3.proto.Ratio quantity = 4;
   */
  quantity?: Ratio;

  /**
   * @generated from field: google.fhir.stu3.proto.Substance.Ingredient.SubstanceType substance = 5;
   */
  substance?: Substance_Ingredient_SubstanceType;

  constructor(data?: PartialMessage<Substance_Ingredient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Substance.Ingredient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "quantity", kind: "message", T: Ratio },
    { no: 5, name: "substance", kind: "message", T: Substance_Ingredient_SubstanceType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Substance_Ingredient {
    return new Substance_Ingredient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Substance_Ingredient {
    return new Substance_Ingredient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Substance_Ingredient {
    return new Substance_Ingredient().fromJsonString(jsonString, options);
  }

  static equals(a: Substance_Ingredient | PlainMessage<Substance_Ingredient> | undefined, b: Substance_Ingredient | PlainMessage<Substance_Ingredient> | undefined): boolean {
    return proto3.util.equals(Substance_Ingredient, a, b);
  }
}

/**
 * A component of the substance
 *
 * @generated from message google.fhir.stu3.proto.Substance.Ingredient.SubstanceType
 */
export class Substance_Ingredient_SubstanceType extends Message<Substance_Ingredient_SubstanceType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Substance.Ingredient.SubstanceType.substance
   */
  substance: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Substance_Ingredient_SubstanceType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Substance.Ingredient.SubstanceType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "substance" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "substance" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Substance_Ingredient_SubstanceType {
    return new Substance_Ingredient_SubstanceType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Substance_Ingredient_SubstanceType {
    return new Substance_Ingredient_SubstanceType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Substance_Ingredient_SubstanceType {
    return new Substance_Ingredient_SubstanceType().fromJsonString(jsonString, options);
  }

  static equals(a: Substance_Ingredient_SubstanceType | PlainMessage<Substance_Ingredient_SubstanceType> | undefined, b: Substance_Ingredient_SubstanceType | PlainMessage<Substance_Ingredient_SubstanceType> | undefined): boolean {
    return proto3.util.equals(Substance_Ingredient_SubstanceType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SupplyDelivery, last updated
 * 2017-04-19T07:44:43.294+10:00. Delivery of bulk Supplies. See
 * http://hl7.org/fhir/StructureDefinition/SupplyDelivery
 *
 * @generated from message google.fhir.stu3.proto.SupplyDelivery
 */
export class SupplyDelivery extends Message<SupplyDelivery> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 11;
   */
  partOf: Reference[] = [];

  /**
   * in-progress | completed | abandoned | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.SupplyDeliveryStatusCode status = 12;
   */
  status?: SupplyDeliveryStatusCode;

  /**
   * Patient for whom the item is supplied
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * Category of dispense event
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 14;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyDelivery.SuppliedItem supplied_item = 15;
   */
  suppliedItem?: SupplyDelivery_SuppliedItem;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyDelivery.Occurrence occurrence = 16;
   */
  occurrence?: SupplyDelivery_Occurrence;

  /**
   * Dispenser
   *
   * @generated from field: google.fhir.stu3.proto.Reference supplier = 17;
   */
  supplier?: Reference;

  /**
   * Where the Supply was sent
   *
   * @generated from field: google.fhir.stu3.proto.Reference destination = 18;
   */
  destination?: Reference;

  /**
   * Who collected the Supply
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference receiver = 19;
   */
  receiver: Reference[] = [];

  constructor(data?: PartialMessage<SupplyDelivery>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyDelivery";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "status", kind: "message", T: SupplyDeliveryStatusCode },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "type", kind: "message", T: CodeableConcept },
    { no: 15, name: "supplied_item", kind: "message", T: SupplyDelivery_SuppliedItem },
    { no: 16, name: "occurrence", kind: "message", T: SupplyDelivery_Occurrence },
    { no: 17, name: "supplier", kind: "message", T: Reference },
    { no: 18, name: "destination", kind: "message", T: Reference },
    { no: 19, name: "receiver", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyDelivery {
    return new SupplyDelivery().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyDelivery {
    return new SupplyDelivery().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyDelivery {
    return new SupplyDelivery().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyDelivery | PlainMessage<SupplyDelivery> | undefined, b: SupplyDelivery | PlainMessage<SupplyDelivery> | undefined): boolean {
    return proto3.util.equals(SupplyDelivery, a, b);
  }
}

/**
 * The item that is delivered or supplied
 *
 * @generated from message google.fhir.stu3.proto.SupplyDelivery.SuppliedItem
 */
export class SupplyDelivery_SuppliedItem extends Message<SupplyDelivery_SuppliedItem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Amount dispensed
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 4;
   */
  quantity?: SimpleQuantity;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyDelivery.SuppliedItem.Item item = 5;
   */
  item?: SupplyDelivery_SuppliedItem_Item;

  constructor(data?: PartialMessage<SupplyDelivery_SuppliedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyDelivery.SuppliedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 5, name: "item", kind: "message", T: SupplyDelivery_SuppliedItem_Item },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyDelivery_SuppliedItem {
    return new SupplyDelivery_SuppliedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyDelivery_SuppliedItem {
    return new SupplyDelivery_SuppliedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyDelivery_SuppliedItem {
    return new SupplyDelivery_SuppliedItem().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyDelivery_SuppliedItem | PlainMessage<SupplyDelivery_SuppliedItem> | undefined, b: SupplyDelivery_SuppliedItem | PlainMessage<SupplyDelivery_SuppliedItem> | undefined): boolean {
    return proto3.util.equals(SupplyDelivery_SuppliedItem, a, b);
  }
}

/**
 * Medication, Substance, or Device supplied
 *
 * @generated from message google.fhir.stu3.proto.SupplyDelivery.SuppliedItem.Item
 */
export class SupplyDelivery_SuppliedItem_Item extends Message<SupplyDelivery_SuppliedItem_Item> {
  /**
   * @generated from oneof google.fhir.stu3.proto.SupplyDelivery.SuppliedItem.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SupplyDelivery_SuppliedItem_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyDelivery.SuppliedItem.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyDelivery_SuppliedItem_Item {
    return new SupplyDelivery_SuppliedItem_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyDelivery_SuppliedItem_Item {
    return new SupplyDelivery_SuppliedItem_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyDelivery_SuppliedItem_Item {
    return new SupplyDelivery_SuppliedItem_Item().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyDelivery_SuppliedItem_Item | PlainMessage<SupplyDelivery_SuppliedItem_Item> | undefined, b: SupplyDelivery_SuppliedItem_Item | PlainMessage<SupplyDelivery_SuppliedItem_Item> | undefined): boolean {
    return proto3.util.equals(SupplyDelivery_SuppliedItem_Item, a, b);
  }
}

/**
 * When event occurred
 *
 * @generated from message google.fhir.stu3.proto.SupplyDelivery.Occurrence
 */
export class SupplyDelivery_Occurrence extends Message<SupplyDelivery_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.SupplyDelivery.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SupplyDelivery_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyDelivery.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyDelivery_Occurrence {
    return new SupplyDelivery_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyDelivery_Occurrence {
    return new SupplyDelivery_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyDelivery_Occurrence {
    return new SupplyDelivery_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyDelivery_Occurrence | PlainMessage<SupplyDelivery_Occurrence> | undefined, b: SupplyDelivery_Occurrence | PlainMessage<SupplyDelivery_Occurrence> | undefined): boolean {
    return proto3.util.equals(SupplyDelivery_Occurrence, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SupplyRequest, last updated
 * 2017-04-19T07:44:43.294+10:00. Request for a medication, substance or device.
 * See http://hl7.org/fhir/StructureDefinition/SupplyRequest
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequest
 */
export class SupplyRequest extends Message<SupplyRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * draft | active | suspended +
   *
   * @generated from field: google.fhir.stu3.proto.SupplyRequestStatusCode status = 10;
   */
  status?: SupplyRequestStatusCode;

  /**
   * The kind of supply (central, non-stock, etc.)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category?: CodeableConcept;

  /**
   * routine | urgent | asap | stat
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 12;
   */
  priority?: RequestPriorityCode;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequest.OrderedItem ordered_item = 13;
   */
  orderedItem?: SupplyRequest_OrderedItem;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequest.Occurrence occurrence = 14;
   */
  occurrence?: SupplyRequest_Occurrence;

  /**
   * When the request was made
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 15;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequest.Requester requester = 16;
   */
  requester?: SupplyRequest_Requester;

  /**
   * Who is intended to fulfill the request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supplier = 17;
   */
  supplier: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequest.Reason reason = 18;
   */
  reason?: SupplyRequest_Reason;

  /**
   * The origin of the supply
   *
   * @generated from field: google.fhir.stu3.proto.Reference deliver_from = 19;
   */
  deliverFrom?: Reference;

  /**
   * The destination of the supply
   *
   * @generated from field: google.fhir.stu3.proto.Reference deliver_to = 20;
   */
  deliverTo?: Reference;

  constructor(data?: PartialMessage<SupplyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: SupplyRequestStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept },
    { no: 12, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 13, name: "ordered_item", kind: "message", T: SupplyRequest_OrderedItem },
    { no: 14, name: "occurrence", kind: "message", T: SupplyRequest_Occurrence },
    { no: 15, name: "authored_on", kind: "message", T: DateTime },
    { no: 16, name: "requester", kind: "message", T: SupplyRequest_Requester },
    { no: 17, name: "supplier", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "reason", kind: "message", T: SupplyRequest_Reason },
    { no: 19, name: "deliver_from", kind: "message", T: Reference },
    { no: 20, name: "deliver_to", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequest {
    return new SupplyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequest {
    return new SupplyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequest {
    return new SupplyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequest | PlainMessage<SupplyRequest> | undefined, b: SupplyRequest | PlainMessage<SupplyRequest> | undefined): boolean {
    return proto3.util.equals(SupplyRequest, a, b);
  }
}

/**
 * The item being requested
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequest.OrderedItem
 */
export class SupplyRequest_OrderedItem extends Message<SupplyRequest_OrderedItem> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The requested amount of the item indicated
   *
   * @generated from field: google.fhir.stu3.proto.Quantity quantity = 4;
   */
  quantity?: Quantity;

  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequest.OrderedItem.Item item = 5;
   */
  item?: SupplyRequest_OrderedItem_Item;

  constructor(data?: PartialMessage<SupplyRequest_OrderedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequest.OrderedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "quantity", kind: "message", T: Quantity },
    { no: 5, name: "item", kind: "message", T: SupplyRequest_OrderedItem_Item },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequest_OrderedItem {
    return new SupplyRequest_OrderedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequest_OrderedItem {
    return new SupplyRequest_OrderedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequest_OrderedItem {
    return new SupplyRequest_OrderedItem().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequest_OrderedItem | PlainMessage<SupplyRequest_OrderedItem> | undefined, b: SupplyRequest_OrderedItem | PlainMessage<SupplyRequest_OrderedItem> | undefined): boolean {
    return proto3.util.equals(SupplyRequest_OrderedItem, a, b);
  }
}

/**
 * Medication, Substance, or Device requested to be supplied
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequest.OrderedItem.Item
 */
export class SupplyRequest_OrderedItem_Item extends Message<SupplyRequest_OrderedItem_Item> {
  /**
   * @generated from oneof google.fhir.stu3.proto.SupplyRequest.OrderedItem.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SupplyRequest_OrderedItem_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequest.OrderedItem.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequest_OrderedItem_Item {
    return new SupplyRequest_OrderedItem_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequest_OrderedItem_Item {
    return new SupplyRequest_OrderedItem_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequest_OrderedItem_Item {
    return new SupplyRequest_OrderedItem_Item().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequest_OrderedItem_Item | PlainMessage<SupplyRequest_OrderedItem_Item> | undefined, b: SupplyRequest_OrderedItem_Item | PlainMessage<SupplyRequest_OrderedItem_Item> | undefined): boolean {
    return proto3.util.equals(SupplyRequest_OrderedItem_Item, a, b);
  }
}

/**
 * When the request should be fulfilled
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequest.Occurrence
 */
export class SupplyRequest_Occurrence extends Message<SupplyRequest_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.SupplyRequest.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SupplyRequest_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequest.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequest_Occurrence {
    return new SupplyRequest_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequest_Occurrence {
    return new SupplyRequest_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequest_Occurrence {
    return new SupplyRequest_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequest_Occurrence | PlainMessage<SupplyRequest_Occurrence> | undefined, b: SupplyRequest_Occurrence | PlainMessage<SupplyRequest_Occurrence> | undefined): boolean {
    return proto3.util.equals(SupplyRequest_Occurrence, a, b);
  }
}

/**
 * Who/what is requesting service
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequest.Requester
 */
export class SupplyRequest_Requester extends Message<SupplyRequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual making the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<SupplyRequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequest_Requester {
    return new SupplyRequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequest_Requester {
    return new SupplyRequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequest_Requester {
    return new SupplyRequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequest_Requester | PlainMessage<SupplyRequest_Requester> | undefined, b: SupplyRequest_Requester | PlainMessage<SupplyRequest_Requester> | undefined): boolean {
    return proto3.util.equals(SupplyRequest_Requester, a, b);
  }
}

/**
 * Why the supply item was requested
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequest.Reason
 */
export class SupplyRequest_Reason extends Message<SupplyRequest_Reason> {
  /**
   * @generated from oneof google.fhir.stu3.proto.SupplyRequest.Reason.reason
   */
  reason: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SupplyRequest_Reason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequest.Reason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "reason" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "reason" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequest_Reason {
    return new SupplyRequest_Reason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequest_Reason {
    return new SupplyRequest_Reason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequest_Reason {
    return new SupplyRequest_Reason().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequest_Reason | PlainMessage<SupplyRequest_Reason> | undefined, b: SupplyRequest_Reason | PlainMessage<SupplyRequest_Reason> | undefined): boolean {
    return proto3.util.equals(SupplyRequest_Reason, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Task, last updated
 * 2017-04-19T07:44:43.294+10:00. A task to be performed. See
 * http://hl7.org/fhir/StructureDefinition/Task
 *
 * @generated from message google.fhir.stu3.proto.Task
 */
export class Task extends Message<Task> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Task Instance Identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Task.Definition definition = 10;
   */
  definition?: Task_Definition;

  /**
   * Request fulfilled by this task
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Requisition or grouper id
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 12;
   */
  groupIdentifier?: Identifier;

  /**
   * Composite task
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 13;
   */
  partOf: Reference[] = [];

  /**
   * draft | requested | received | accepted | +
   *
   * @generated from field: google.fhir.stu3.proto.TaskStatusCode status = 14;
   */
  status?: TaskStatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept status_reason = 15;
   */
  statusReason?: CodeableConcept;

  /**
   * E.g. "Specimen collected", "IV prepped"
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept business_status = 16;
   */
  businessStatus?: CodeableConcept;

  /**
   * proposal | plan | order +
   *
   * @generated from field: google.fhir.stu3.proto.RequestIntentCode intent = 17;
   */
  intent?: RequestIntentCode;

  /**
   * normal | urgent | asap | stat
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 18;
   */
  priority?: RequestPriorityCode;

  /**
   * Task Type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 19;
   */
  code?: CodeableConcept;

  /**
   * Human-readable explanation of task
   *
   * @generated from field: google.fhir.stu3.proto.String description = 20;
   */
  description?: String;

  /**
   * What task is acting on
   *
   * @generated from field: google.fhir.stu3.proto.Reference focus = 21;
   */
  focus?: Reference;

  /**
   * Beneficiary of the Task
   *
   * @generated from field: google.fhir.stu3.proto.Reference for_value = 22 [json_name = "for"];
   */
  forValue?: Reference;

  /**
   * Healthcare event during which this task originated
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 23;
   */
  context?: Reference;

  /**
   * Start and end time of execution
   *
   * @generated from field: google.fhir.stu3.proto.Period execution_period = 24;
   */
  executionPeriod?: Period;

  /**
   * Task Creation Date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 25;
   */
  authoredOn?: DateTime;

  /**
   * Task Last Modified Date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime last_modified = 26;
   */
  lastModified?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.Task.Requester requester = 27;
   */
  requester?: Task_Requester;

  /**
   * requester | dispatcher | scheduler | performer | monitor | manager |
   * acquirer | reviewer
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept performer_type = 28;
   */
  performerType: CodeableConcept[] = [];

  /**
   * Responsible individual
   *
   * @generated from field: google.fhir.stu3.proto.Reference owner = 29;
   */
  owner?: Reference;

  /**
   * Why task is needed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 30;
   */
  reason?: CodeableConcept;

  /**
   * Comments made about the task
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 31;
   */
  note: Annotation[] = [];

  /**
   * Key events in history of the Task
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference relevant_history = 32;
   */
  relevantHistory: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Task.Restriction restriction = 33;
   */
  restriction?: Task_Restriction;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Task.Parameter input = 34;
   */
  input: Task_Parameter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Task.Output output = 35;
   */
  output: Task_Output[] = [];

  constructor(data?: PartialMessage<Task>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Task_Definition },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "group_identifier", kind: "message", T: Identifier },
    { no: 13, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "status", kind: "message", T: TaskStatusCode },
    { no: 15, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 16, name: "business_status", kind: "message", T: CodeableConcept },
    { no: 17, name: "intent", kind: "message", T: RequestIntentCode },
    { no: 18, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 19, name: "code", kind: "message", T: CodeableConcept },
    { no: 20, name: "description", kind: "message", T: String },
    { no: 21, name: "focus", kind: "message", T: Reference },
    { no: 22, name: "for_value", jsonName: "for", kind: "message", T: Reference },
    { no: 23, name: "context", kind: "message", T: Reference },
    { no: 24, name: "execution_period", kind: "message", T: Period },
    { no: 25, name: "authored_on", kind: "message", T: DateTime },
    { no: 26, name: "last_modified", kind: "message", T: DateTime },
    { no: 27, name: "requester", kind: "message", T: Task_Requester },
    { no: 28, name: "performer_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "owner", kind: "message", T: Reference },
    { no: 30, name: "reason", kind: "message", T: CodeableConcept },
    { no: 31, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 32, name: "relevant_history", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "restriction", kind: "message", T: Task_Restriction },
    { no: 34, name: "input", kind: "message", T: Task_Parameter, repeated: true },
    { no: 35, name: "output", kind: "message", T: Task_Output, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task {
    return new Task().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task {
    return new Task().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task {
    return new Task().fromJsonString(jsonString, options);
  }

  static equals(a: Task | PlainMessage<Task> | undefined, b: Task | PlainMessage<Task> | undefined): boolean {
    return proto3.util.equals(Task, a, b);
  }
}

/**
 * Formal definition of task
 *
 * @generated from message google.fhir.stu3.proto.Task.Definition
 */
export class Task_Definition extends Message<Task_Definition> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Task.Definition.definition
   */
  definition: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Task_Definition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Definition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "definition" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "definition" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Definition {
    return new Task_Definition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Definition {
    return new Task_Definition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Definition {
    return new Task_Definition().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Definition | PlainMessage<Task_Definition> | undefined, b: Task_Definition | PlainMessage<Task_Definition> | undefined): boolean {
    return proto3.util.equals(Task_Definition, a, b);
  }
}

/**
 * Who is asking for task to be done
 *
 * @generated from message google.fhir.stu3.proto.Task.Requester
 */
export class Task_Requester extends Message<Task_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual asking for task
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization individual is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<Task_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Requester {
    return new Task_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Requester {
    return new Task_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Requester {
    return new Task_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Requester | PlainMessage<Task_Requester> | undefined, b: Task_Requester | PlainMessage<Task_Requester> | undefined): boolean {
    return proto3.util.equals(Task_Requester, a, b);
  }
}

/**
 * Constraints on fulfillment tasks
 *
 * @generated from message google.fhir.stu3.proto.Task.Restriction
 */
export class Task_Restriction extends Message<Task_Restriction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * How many times to repeat
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt repetitions = 4;
   */
  repetitions?: PositiveInt;

  /**
   * When fulfillment sought
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * For whom is fulfillment sought?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference recipient = 6;
   */
  recipient: Reference[] = [];

  constructor(data?: PartialMessage<Task_Restriction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Restriction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "repetitions", kind: "message", T: PositiveInt },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "recipient", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Restriction {
    return new Task_Restriction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Restriction {
    return new Task_Restriction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Restriction {
    return new Task_Restriction().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Restriction | PlainMessage<Task_Restriction> | undefined, b: Task_Restriction | PlainMessage<Task_Restriction> | undefined): boolean {
    return proto3.util.equals(Task_Restriction, a, b);
  }
}

/**
 * Information used to perform task
 *
 * @generated from message google.fhir.stu3.proto.Task.Parameter
 */
export class Task_Parameter extends Message<Task_Parameter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for the input
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Task.Parameter.Value value = 5;
   */
  value?: Task_Parameter_Value;

  constructor(data?: PartialMessage<Task_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Task_Parameter_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Parameter {
    return new Task_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Parameter {
    return new Task_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Parameter {
    return new Task_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Parameter | PlainMessage<Task_Parameter> | undefined, b: Task_Parameter | PlainMessage<Task_Parameter> | undefined): boolean {
    return proto3.util.equals(Task_Parameter, a, b);
  }
}

/**
 * Content to use in performing the task
 *
 * @generated from message google.fhir.stu3.proto.Task.Parameter.Value
 */
export class Task_Parameter_Value extends Message<Task_Parameter_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Task.Parameter.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Task_Parameter_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Parameter.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Parameter_Value {
    return new Task_Parameter_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Parameter_Value {
    return new Task_Parameter_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Parameter_Value {
    return new Task_Parameter_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Parameter_Value | PlainMessage<Task_Parameter_Value> | undefined, b: Task_Parameter_Value | PlainMessage<Task_Parameter_Value> | undefined): boolean {
    return proto3.util.equals(Task_Parameter_Value, a, b);
  }
}

/**
 * Information produced as part of task
 *
 * @generated from message google.fhir.stu3.proto.Task.Output
 */
export class Task_Output extends Message<Task_Output> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for output
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Task.Output.Value value = 5;
   */
  value?: Task_Output_Value;

  constructor(data?: PartialMessage<Task_Output>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Output";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Task_Output_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Output {
    return new Task_Output().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Output {
    return new Task_Output().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Output {
    return new Task_Output().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Output | PlainMessage<Task_Output> | undefined, b: Task_Output | PlainMessage<Task_Output> | undefined): boolean {
    return proto3.util.equals(Task_Output, a, b);
  }
}

/**
 * Result of output
 *
 * @generated from message google.fhir.stu3.proto.Task.Output.Value
 */
export class Task_Output_Value extends Message<Task_Output_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Task.Output.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Task_Output_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Task.Output.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Output_Value {
    return new Task_Output_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Output_Value {
    return new Task_Output_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Output_Value {
    return new Task_Output_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Output_Value | PlainMessage<Task_Output_Value> | undefined, b: Task_Output_Value | PlainMessage<Task_Output_Value> | undefined): boolean {
    return proto3.util.equals(Task_Output_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for TestReport, last updated
 * 2017-04-19T07:44:43.294+10:00. Describes the results of a TestScript
 * execution. See http://hl7.org/fhir/StructureDefinition/TestReport
 *
 * @generated from message google.fhir.stu3.proto.TestReport
 */
export class TestReport extends Message<TestReport> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * Informal name of the executed TestScript
   *
   * @generated from field: google.fhir.stu3.proto.String name = 10;
   */
  name?: String;

  /**
   * completed | in-progress | waiting | stopped | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.TestReportStatusCode status = 11;
   */
  status?: TestReportStatusCode;

  /**
   * Reference to the  version-specific TestScript that was executed to produce
   * this TestReport
   *
   * @generated from field: google.fhir.stu3.proto.Reference test_script = 12;
   */
  testScript?: Reference;

  /**
   * pass | fail | pending
   *
   * @generated from field: google.fhir.stu3.proto.TestReportResultCode result = 13;
   */
  result?: TestReportResultCode;

  /**
   * The final score (percentage of tests passed) resulting from the execution
   * of the TestScript
   *
   * @generated from field: google.fhir.stu3.proto.Decimal score = 14;
   */
  score?: Decimal;

  /**
   * Name of the tester producing this report (Organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String tester = 15;
   */
  tester?: String;

  /**
   * When the TestScript was executed and this TestReport was generated
   *
   * @generated from field: google.fhir.stu3.proto.DateTime issued = 16;
   */
  issued?: DateTime;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestReport.Participant participant = 17;
   */
  participant: TestReport_Participant[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestReport.Setup setup = 18;
   */
  setup?: TestReport_Setup;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestReport.Test test = 19;
   */
  test: TestReport_Test[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestReport.Teardown teardown = 20;
   */
  teardown?: TestReport_Teardown;

  constructor(data?: PartialMessage<TestReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "name", kind: "message", T: String },
    { no: 11, name: "status", kind: "message", T: TestReportStatusCode },
    { no: 12, name: "test_script", kind: "message", T: Reference },
    { no: 13, name: "result", kind: "message", T: TestReportResultCode },
    { no: 14, name: "score", kind: "message", T: Decimal },
    { no: 15, name: "tester", kind: "message", T: String },
    { no: 16, name: "issued", kind: "message", T: DateTime },
    { no: 17, name: "participant", kind: "message", T: TestReport_Participant, repeated: true },
    { no: 18, name: "setup", kind: "message", T: TestReport_Setup },
    { no: 19, name: "test", kind: "message", T: TestReport_Test, repeated: true },
    { no: 20, name: "teardown", kind: "message", T: TestReport_Teardown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport {
    return new TestReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport {
    return new TestReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport {
    return new TestReport().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport | PlainMessage<TestReport> | undefined, b: TestReport | PlainMessage<TestReport> | undefined): boolean {
    return proto3.util.equals(TestReport, a, b);
  }
}

/**
 * A participant in the test execution, either the execution engine, a client,
 * or a server
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Participant
 */
export class TestReport_Participant extends Message<TestReport_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * test-engine | client | server
   *
   * @generated from field: google.fhir.stu3.proto.TestReportParticipantTypeCode type = 4;
   */
  type?: TestReportParticipantTypeCode;

  /**
   * The uri of the participant. An absolute URL is preferred
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * The display name of the participant
   *
   * @generated from field: google.fhir.stu3.proto.String display = 6;
   */
  display?: String;

  constructor(data?: PartialMessage<TestReport_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: TestReportParticipantTypeCode },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "display", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Participant {
    return new TestReport_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Participant {
    return new TestReport_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Participant {
    return new TestReport_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Participant | PlainMessage<TestReport_Participant> | undefined, b: TestReport_Participant | PlainMessage<TestReport_Participant> | undefined): boolean {
    return proto3.util.equals(TestReport_Participant, a, b);
  }
}

/**
 * The results of the series of required setup operations before the tests
 * were executed
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Setup
 */
export class TestReport_Setup extends Message<TestReport_Setup> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestReport.Setup.SetupAction action = 4;
   */
  action: TestReport_Setup_SetupAction[] = [];

  constructor(data?: PartialMessage<TestReport_Setup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Setup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestReport_Setup_SetupAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup {
    return new TestReport_Setup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup {
    return new TestReport_Setup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup {
    return new TestReport_Setup().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup | PlainMessage<TestReport_Setup> | undefined, b: TestReport_Setup | PlainMessage<TestReport_Setup> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup, a, b);
  }
}

/**
 * A setup operation or assert that was executed
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Setup.SetupAction
 */
export class TestReport_Setup_SetupAction extends Message<TestReport_Setup_SetupAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestReport.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestReport_Setup_SetupAction_Operation;

  /**
   * @generated from field: google.fhir.stu3.proto.TestReport.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestReport_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Setup.SetupAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestReport_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestReport_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction {
    return new TestReport_Setup_SetupAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction {
    return new TestReport_Setup_SetupAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction {
    return new TestReport_Setup_SetupAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction | PlainMessage<TestReport_Setup_SetupAction> | undefined, b: TestReport_Setup_SetupAction | PlainMessage<TestReport_Setup_SetupAction> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction, a, b);
  }
}

/**
 * The operation to perform
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Setup.SetupAction.Operation
 */
export class TestReport_Setup_SetupAction_Operation extends Message<TestReport_Setup_SetupAction_Operation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * pass | skip | fail | warning | error
   *
   * @generated from field: google.fhir.stu3.proto.TestReportActionResultCode result = 4;
   */
  result?: TestReportActionResultCode;

  /**
   * A message associated with the result
   *
   * @generated from field: google.fhir.stu3.proto.Markdown message = 5;
   */
  message?: Markdown;

  /**
   * A link to further details on the result
   *
   * @generated from field: google.fhir.stu3.proto.Uri detail = 6;
   */
  detail?: Uri;

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction_Operation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Setup.SetupAction.Operation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "result", kind: "message", T: TestReportActionResultCode },
    { no: 5, name: "message", kind: "message", T: Markdown },
    { no: 6, name: "detail", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction_Operation {
    return new TestReport_Setup_SetupAction_Operation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Operation {
    return new TestReport_Setup_SetupAction_Operation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Operation {
    return new TestReport_Setup_SetupAction_Operation().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction_Operation | PlainMessage<TestReport_Setup_SetupAction_Operation> | undefined, b: TestReport_Setup_SetupAction_Operation | PlainMessage<TestReport_Setup_SetupAction_Operation> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction_Operation, a, b);
  }
}

/**
 * The assertion to perform
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Setup.SetupAction.Assert
 */
export class TestReport_Setup_SetupAction_Assert extends Message<TestReport_Setup_SetupAction_Assert> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * pass | skip | fail | warning | error
   *
   * @generated from field: google.fhir.stu3.proto.TestReportActionResultCode result = 4;
   */
  result?: TestReportActionResultCode;

  /**
   * A message associated with the result
   *
   * @generated from field: google.fhir.stu3.proto.Markdown message = 5;
   */
  message?: Markdown;

  /**
   * A link to further details on the result
   *
   * @generated from field: google.fhir.stu3.proto.String detail = 6;
   */
  detail?: String;

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction_Assert>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Setup.SetupAction.Assert";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "result", kind: "message", T: TestReportActionResultCode },
    { no: 5, name: "message", kind: "message", T: Markdown },
    { no: 6, name: "detail", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction_Assert {
    return new TestReport_Setup_SetupAction_Assert().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Assert {
    return new TestReport_Setup_SetupAction_Assert().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Assert {
    return new TestReport_Setup_SetupAction_Assert().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction_Assert | PlainMessage<TestReport_Setup_SetupAction_Assert> | undefined, b: TestReport_Setup_SetupAction_Assert | PlainMessage<TestReport_Setup_SetupAction_Assert> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction_Assert, a, b);
  }
}

/**
 * A test executed from the test script
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Test
 */
export class TestReport_Test extends Message<TestReport_Test> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Tracking/logging name of this test
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Tracking/reporting short description of the test
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestReport.Test.TestAction action = 6;
   */
  action: TestReport_Test_TestAction[] = [];

  constructor(data?: PartialMessage<TestReport_Test>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Test";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "action", kind: "message", T: TestReport_Test_TestAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Test {
    return new TestReport_Test().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Test {
    return new TestReport_Test().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Test {
    return new TestReport_Test().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Test | PlainMessage<TestReport_Test> | undefined, b: TestReport_Test | PlainMessage<TestReport_Test> | undefined): boolean {
    return proto3.util.equals(TestReport_Test, a, b);
  }
}

/**
 * A test operation or assert that was performed
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Test.TestAction
 */
export class TestReport_Test_TestAction extends Message<TestReport_Test_TestAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The operation performed
   *
   * @generated from field: google.fhir.stu3.proto.TestReport.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestReport_Setup_SetupAction_Operation;

  /**
   * The assertion performed
   *
   * @generated from field: google.fhir.stu3.proto.TestReport.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestReport_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestReport_Test_TestAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Test.TestAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestReport_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestReport_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Test_TestAction {
    return new TestReport_Test_TestAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Test_TestAction {
    return new TestReport_Test_TestAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Test_TestAction {
    return new TestReport_Test_TestAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Test_TestAction | PlainMessage<TestReport_Test_TestAction> | undefined, b: TestReport_Test_TestAction | PlainMessage<TestReport_Test_TestAction> | undefined): boolean {
    return proto3.util.equals(TestReport_Test_TestAction, a, b);
  }
}

/**
 * The results of running the series of required clean up steps
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Teardown
 */
export class TestReport_Teardown extends Message<TestReport_Teardown> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestReport.Teardown.TeardownAction action = 4;
   */
  action: TestReport_Teardown_TeardownAction[] = [];

  constructor(data?: PartialMessage<TestReport_Teardown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Teardown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestReport_Teardown_TeardownAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Teardown {
    return new TestReport_Teardown().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Teardown {
    return new TestReport_Teardown().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Teardown {
    return new TestReport_Teardown().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Teardown | PlainMessage<TestReport_Teardown> | undefined, b: TestReport_Teardown | PlainMessage<TestReport_Teardown> | undefined): boolean {
    return proto3.util.equals(TestReport_Teardown, a, b);
  }
}

/**
 * One or more teardown operations performed
 *
 * @generated from message google.fhir.stu3.proto.TestReport.Teardown.TeardownAction
 */
export class TestReport_Teardown_TeardownAction extends Message<TestReport_Teardown_TeardownAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The teardown operation performed
   *
   * @generated from field: google.fhir.stu3.proto.TestReport.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestReport_Setup_SetupAction_Operation;

  constructor(data?: PartialMessage<TestReport_Teardown_TeardownAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReport.Teardown.TeardownAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestReport_Setup_SetupAction_Operation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Teardown_TeardownAction {
    return new TestReport_Teardown_TeardownAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Teardown_TeardownAction {
    return new TestReport_Teardown_TeardownAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Teardown_TeardownAction {
    return new TestReport_Teardown_TeardownAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Teardown_TeardownAction | PlainMessage<TestReport_Teardown_TeardownAction> | undefined, b: TestReport_Teardown_TeardownAction | PlainMessage<TestReport_Teardown_TeardownAction> | undefined): boolean {
    return proto3.util.equals(TestReport_Teardown_TeardownAction, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for TestScript, last updated
 * 2017-04-19T07:44:43.294+10:00. Describes a set of tests. See
 * http://hl7.org/fhir/StructureDefinition/TestScript
 *
 * @generated from message google.fhir.stu3.proto.TestScript
 */
export class TestScript extends Message<TestScript> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this test script (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the test script
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Business version of the test script
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this test script (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this test script (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the test script
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for test script (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this test script is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Origin origin = 24;
   */
  origin: TestScript_Origin[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Destination destination = 25;
   */
  destination: TestScript_Destination[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Metadata metadata = 26;
   */
  metadata?: TestScript_Metadata;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Fixture fixture = 27;
   */
  fixture: TestScript_Fixture[] = [];

  /**
   * Reference of the validation profile
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference profile = 28;
   */
  profile: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Variable variable = 29;
   */
  variable: TestScript_Variable[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Rule rule = 30;
   */
  rule: TestScript_Rule[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Ruleset ruleset = 31;
   */
  ruleset: TestScript_Ruleset[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup setup = 32;
   */
  setup?: TestScript_Setup;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Test test = 33;
   */
  test: TestScript_Test[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Teardown teardown = 34;
   */
  teardown?: TestScript_Teardown;

  constructor(data?: PartialMessage<TestScript>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "origin", kind: "message", T: TestScript_Origin, repeated: true },
    { no: 25, name: "destination", kind: "message", T: TestScript_Destination, repeated: true },
    { no: 26, name: "metadata", kind: "message", T: TestScript_Metadata },
    { no: 27, name: "fixture", kind: "message", T: TestScript_Fixture, repeated: true },
    { no: 28, name: "profile", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "variable", kind: "message", T: TestScript_Variable, repeated: true },
    { no: 30, name: "rule", kind: "message", T: TestScript_Rule, repeated: true },
    { no: 31, name: "ruleset", kind: "message", T: TestScript_Ruleset, repeated: true },
    { no: 32, name: "setup", kind: "message", T: TestScript_Setup },
    { no: 33, name: "test", kind: "message", T: TestScript_Test, repeated: true },
    { no: 34, name: "teardown", kind: "message", T: TestScript_Teardown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript {
    return new TestScript().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript {
    return new TestScript().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript {
    return new TestScript().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript | PlainMessage<TestScript> | undefined, b: TestScript | PlainMessage<TestScript> | undefined): boolean {
    return proto3.util.equals(TestScript, a, b);
  }
}

/**
 * An abstract server representing a client or sender in a message exchange
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Origin
 */
export class TestScript_Origin extends Message<TestScript_Origin> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The index of the abstract origin server starting at 1
   *
   * @generated from field: google.fhir.stu3.proto.Integer index = 4;
   */
  index?: Integer;

  /**
   * FHIR-Client | FHIR-SDC-FormFiller
   *
   * @generated from field: google.fhir.stu3.proto.Coding profile = 5;
   */
  profile?: Coding;

  constructor(data?: PartialMessage<TestScript_Origin>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Origin";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "index", kind: "message", T: Integer },
    { no: 5, name: "profile", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Origin {
    return new TestScript_Origin().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Origin {
    return new TestScript_Origin().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Origin {
    return new TestScript_Origin().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Origin | PlainMessage<TestScript_Origin> | undefined, b: TestScript_Origin | PlainMessage<TestScript_Origin> | undefined): boolean {
    return proto3.util.equals(TestScript_Origin, a, b);
  }
}

/**
 * An abstract server representing a destination or receiver in a message
 * exchange
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Destination
 */
export class TestScript_Destination extends Message<TestScript_Destination> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The index of the abstract destination server starting at 1
   *
   * @generated from field: google.fhir.stu3.proto.Integer index = 4;
   */
  index?: Integer;

  /**
   * FHIR-Server | FHIR-SDC-FormManager | FHIR-SDC-FormReceiver |
   * FHIR-SDC-FormProcessor
   *
   * @generated from field: google.fhir.stu3.proto.Coding profile = 5;
   */
  profile?: Coding;

  constructor(data?: PartialMessage<TestScript_Destination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Destination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "index", kind: "message", T: Integer },
    { no: 5, name: "profile", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Destination {
    return new TestScript_Destination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Destination {
    return new TestScript_Destination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Destination {
    return new TestScript_Destination().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Destination | PlainMessage<TestScript_Destination> | undefined, b: TestScript_Destination | PlainMessage<TestScript_Destination> | undefined): boolean {
    return proto3.util.equals(TestScript_Destination, a, b);
  }
}

/**
 * Required capability that is assumed to function correctly on the FHIR
 * server being tested
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Metadata
 */
export class TestScript_Metadata extends Message<TestScript_Metadata> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Metadata.Link link = 4;
   */
  link: TestScript_Metadata_Link[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Metadata.Capability capability = 5;
   */
  capability: TestScript_Metadata_Capability[] = [];

  constructor(data?: PartialMessage<TestScript_Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link", kind: "message", T: TestScript_Metadata_Link, repeated: true },
    { no: 5, name: "capability", kind: "message", T: TestScript_Metadata_Capability, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Metadata {
    return new TestScript_Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Metadata {
    return new TestScript_Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Metadata {
    return new TestScript_Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Metadata | PlainMessage<TestScript_Metadata> | undefined, b: TestScript_Metadata | PlainMessage<TestScript_Metadata> | undefined): boolean {
    return proto3.util.equals(TestScript_Metadata, a, b);
  }
}

/**
 * Links to the FHIR specification
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Metadata.Link
 */
export class TestScript_Metadata_Link extends Message<TestScript_Metadata_Link> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * URL to the specification
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 4;
   */
  url?: Uri;

  /**
   * Short description
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  constructor(data?: PartialMessage<TestScript_Metadata_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Metadata.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "url", kind: "message", T: Uri },
    { no: 5, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Metadata_Link {
    return new TestScript_Metadata_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Metadata_Link {
    return new TestScript_Metadata_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Metadata_Link {
    return new TestScript_Metadata_Link().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Metadata_Link | PlainMessage<TestScript_Metadata_Link> | undefined, b: TestScript_Metadata_Link | PlainMessage<TestScript_Metadata_Link> | undefined): boolean {
    return proto3.util.equals(TestScript_Metadata_Link, a, b);
  }
}

/**
 * Capabilities  that are assumed to function correctly on the FHIR server
 * being tested
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Metadata.Capability
 */
export class TestScript_Metadata_Capability extends Message<TestScript_Metadata_Capability> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Are the capabilities required?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean required = 4;
   */
  required?: Boolean;

  /**
   * Are the capabilities validated?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean validated = 5;
   */
  validated?: Boolean;

  /**
   * The expected capabilities of the server
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * Which origin server these requirements apply to
   *
   * @generated from field: repeated google.fhir.stu3.proto.Integer origin = 7;
   */
  origin: Integer[] = [];

  /**
   * Which server these requirements apply to
   *
   * @generated from field: google.fhir.stu3.proto.Integer destination = 8;
   */
  destination?: Integer;

  /**
   * Links to the FHIR specification
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri link = 9;
   */
  link: Uri[] = [];

  /**
   * Required Capability Statement
   *
   * @generated from field: google.fhir.stu3.proto.Reference capabilities = 10;
   */
  capabilities?: Reference;

  constructor(data?: PartialMessage<TestScript_Metadata_Capability>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Metadata.Capability";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "required", kind: "message", T: Boolean },
    { no: 5, name: "validated", kind: "message", T: Boolean },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "origin", kind: "message", T: Integer, repeated: true },
    { no: 8, name: "destination", kind: "message", T: Integer },
    { no: 9, name: "link", kind: "message", T: Uri, repeated: true },
    { no: 10, name: "capabilities", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Metadata_Capability {
    return new TestScript_Metadata_Capability().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Metadata_Capability {
    return new TestScript_Metadata_Capability().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Metadata_Capability {
    return new TestScript_Metadata_Capability().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Metadata_Capability | PlainMessage<TestScript_Metadata_Capability> | undefined, b: TestScript_Metadata_Capability | PlainMessage<TestScript_Metadata_Capability> | undefined): boolean {
    return proto3.util.equals(TestScript_Metadata_Capability, a, b);
  }
}

/**
 * Fixture in the test script - by reference (uri)
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Fixture
 */
export class TestScript_Fixture extends Message<TestScript_Fixture> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether or not to implicitly create the fixture during setup
   *
   * @generated from field: google.fhir.stu3.proto.Boolean autocreate = 4;
   */
  autocreate?: Boolean;

  /**
   * Whether or not to implicitly delete the fixture during teardown
   *
   * @generated from field: google.fhir.stu3.proto.Boolean autodelete = 5;
   */
  autodelete?: Boolean;

  /**
   * Reference of the resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference resource = 6;
   */
  resource?: Reference;

  constructor(data?: PartialMessage<TestScript_Fixture>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Fixture";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "autocreate", kind: "message", T: Boolean },
    { no: 5, name: "autodelete", kind: "message", T: Boolean },
    { no: 6, name: "resource", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Fixture {
    return new TestScript_Fixture().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Fixture {
    return new TestScript_Fixture().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Fixture {
    return new TestScript_Fixture().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Fixture | PlainMessage<TestScript_Fixture> | undefined, b: TestScript_Fixture | PlainMessage<TestScript_Fixture> | undefined): boolean {
    return proto3.util.equals(TestScript_Fixture, a, b);
  }
}

/**
 * Placeholder for evaluated elements
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Variable
 */
export class TestScript_Variable extends Message<TestScript_Variable> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Descriptive name for this variable
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Default, hard-coded, or user-defined value for this variable
   *
   * @generated from field: google.fhir.stu3.proto.String default_value = 5;
   */
  defaultValue?: String;

  /**
   * Natural language description of the variable
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * The fluentpath expression against the fixture body
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  /**
   * HTTP header field name for source
   *
   * @generated from field: google.fhir.stu3.proto.String header_field = 8;
   */
  headerField?: String;

  /**
   * Hint help text for default value to enter
   *
   * @generated from field: google.fhir.stu3.proto.String hint = 9;
   */
  hint?: String;

  /**
   * XPath or JSONPath against the fixture body
   *
   * @generated from field: google.fhir.stu3.proto.String path = 10;
   */
  path?: String;

  /**
   * Fixture Id of source expression or headerField within this variable
   *
   * @generated from field: google.fhir.stu3.proto.Id source_id = 11;
   */
  sourceId?: Id;

  constructor(data?: PartialMessage<TestScript_Variable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Variable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "default_value", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
    { no: 8, name: "header_field", kind: "message", T: String },
    { no: 9, name: "hint", kind: "message", T: String },
    { no: 10, name: "path", kind: "message", T: String },
    { no: 11, name: "source_id", kind: "message", T: Id },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Variable {
    return new TestScript_Variable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Variable {
    return new TestScript_Variable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Variable {
    return new TestScript_Variable().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Variable | PlainMessage<TestScript_Variable> | undefined, b: TestScript_Variable | PlainMessage<TestScript_Variable> | undefined): boolean {
    return proto3.util.equals(TestScript_Variable, a, b);
  }
}

/**
 * Assert rule used within the test script
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Rule
 */
export class TestScript_Rule extends Message<TestScript_Rule> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Assert rule resource reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference resource = 4;
   */
  resource?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Rule.RuleParam param = 5;
   */
  param: TestScript_Rule_RuleParam[] = [];

  constructor(data?: PartialMessage<TestScript_Rule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Rule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "resource", kind: "message", T: Reference },
    { no: 5, name: "param", kind: "message", T: TestScript_Rule_RuleParam, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Rule {
    return new TestScript_Rule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Rule {
    return new TestScript_Rule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Rule {
    return new TestScript_Rule().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Rule | PlainMessage<TestScript_Rule> | undefined, b: TestScript_Rule | PlainMessage<TestScript_Rule> | undefined): boolean {
    return proto3.util.equals(TestScript_Rule, a, b);
  }
}

/**
 * Rule parameter template
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Rule.RuleParam
 */
export class TestScript_Rule_RuleParam extends Message<TestScript_Rule_RuleParam> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Parameter name matching external assert rule parameter
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Parameter value defined either explicitly or dynamically
   *
   * @generated from field: google.fhir.stu3.proto.String value = 5;
   */
  value?: String;

  constructor(data?: PartialMessage<TestScript_Rule_RuleParam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Rule.RuleParam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Rule_RuleParam {
    return new TestScript_Rule_RuleParam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Rule_RuleParam {
    return new TestScript_Rule_RuleParam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Rule_RuleParam {
    return new TestScript_Rule_RuleParam().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Rule_RuleParam | PlainMessage<TestScript_Rule_RuleParam> | undefined, b: TestScript_Rule_RuleParam | PlainMessage<TestScript_Rule_RuleParam> | undefined): boolean {
    return proto3.util.equals(TestScript_Rule_RuleParam, a, b);
  }
}

/**
 * Assert ruleset used within the test script
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Ruleset
 */
export class TestScript_Ruleset extends Message<TestScript_Ruleset> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Assert ruleset resource reference
   *
   * @generated from field: google.fhir.stu3.proto.Reference resource = 4;
   */
  resource?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule rule = 5;
   */
  rule: TestScript_Ruleset_RulesetRule[] = [];

  constructor(data?: PartialMessage<TestScript_Ruleset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Ruleset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "resource", kind: "message", T: Reference },
    { no: 5, name: "rule", kind: "message", T: TestScript_Ruleset_RulesetRule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Ruleset {
    return new TestScript_Ruleset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Ruleset {
    return new TestScript_Ruleset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Ruleset {
    return new TestScript_Ruleset().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Ruleset | PlainMessage<TestScript_Ruleset> | undefined, b: TestScript_Ruleset | PlainMessage<TestScript_Ruleset> | undefined): boolean {
    return proto3.util.equals(TestScript_Ruleset, a, b);
  }
}

/**
 * The referenced rule within the ruleset
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule
 */
export class TestScript_Ruleset_RulesetRule extends Message<TestScript_Ruleset_RulesetRule> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Id of referenced rule within the ruleset
   *
   * @generated from field: google.fhir.stu3.proto.Id rule_id = 4;
   */
  ruleId?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule.RulesetRuleParam param = 5;
   */
  param: TestScript_Ruleset_RulesetRule_RulesetRuleParam[] = [];

  constructor(data?: PartialMessage<TestScript_Ruleset_RulesetRule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "rule_id", kind: "message", T: Id },
    { no: 5, name: "param", kind: "message", T: TestScript_Ruleset_RulesetRule_RulesetRuleParam, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Ruleset_RulesetRule {
    return new TestScript_Ruleset_RulesetRule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Ruleset_RulesetRule {
    return new TestScript_Ruleset_RulesetRule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Ruleset_RulesetRule {
    return new TestScript_Ruleset_RulesetRule().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Ruleset_RulesetRule | PlainMessage<TestScript_Ruleset_RulesetRule> | undefined, b: TestScript_Ruleset_RulesetRule | PlainMessage<TestScript_Ruleset_RulesetRule> | undefined): boolean {
    return proto3.util.equals(TestScript_Ruleset_RulesetRule, a, b);
  }
}

/**
 * Ruleset rule parameter template
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule.RulesetRuleParam
 */
export class TestScript_Ruleset_RulesetRule_RulesetRuleParam extends Message<TestScript_Ruleset_RulesetRule_RulesetRuleParam> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Parameter name matching external assert ruleset rule parameter
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Parameter value defined either explicitly or dynamically
   *
   * @generated from field: google.fhir.stu3.proto.String value = 5;
   */
  value?: String;

  constructor(data?: PartialMessage<TestScript_Ruleset_RulesetRule_RulesetRuleParam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Ruleset.RulesetRule.RulesetRuleParam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Ruleset_RulesetRule_RulesetRuleParam {
    return new TestScript_Ruleset_RulesetRule_RulesetRuleParam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Ruleset_RulesetRule_RulesetRuleParam {
    return new TestScript_Ruleset_RulesetRule_RulesetRuleParam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Ruleset_RulesetRule_RulesetRuleParam {
    return new TestScript_Ruleset_RulesetRule_RulesetRuleParam().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Ruleset_RulesetRule_RulesetRuleParam | PlainMessage<TestScript_Ruleset_RulesetRule_RulesetRuleParam> | undefined, b: TestScript_Ruleset_RulesetRule_RulesetRuleParam | PlainMessage<TestScript_Ruleset_RulesetRule_RulesetRuleParam> | undefined): boolean {
    return proto3.util.equals(TestScript_Ruleset_RulesetRule_RulesetRuleParam, a, b);
  }
}

/**
 * A series of required setup operations before tests are executed
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup
 */
export class TestScript_Setup extends Message<TestScript_Setup> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Setup.SetupAction action = 4;
   */
  action: TestScript_Setup_SetupAction[] = [];

  constructor(data?: PartialMessage<TestScript_Setup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestScript_Setup_SetupAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup {
    return new TestScript_Setup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup {
    return new TestScript_Setup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup {
    return new TestScript_Setup().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup | PlainMessage<TestScript_Setup> | undefined, b: TestScript_Setup | PlainMessage<TestScript_Setup> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup, a, b);
  }
}

/**
 * A setup operation or assert to perform
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction
 */
export class TestScript_Setup_SetupAction extends Message<TestScript_Setup_SetupAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestScript_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestScript_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestScript_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction {
    return new TestScript_Setup_SetupAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction {
    return new TestScript_Setup_SetupAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction {
    return new TestScript_Setup_SetupAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction | PlainMessage<TestScript_Setup_SetupAction> | undefined, b: TestScript_Setup_SetupAction | PlainMessage<TestScript_Setup_SetupAction> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction, a, b);
  }
}

/**
 * The setup operation to perform
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation
 */
export class TestScript_Setup_SetupAction_Operation extends Message<TestScript_Setup_SetupAction_Operation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The operation code type that will be executed
   *
   * @generated from field: google.fhir.stu3.proto.Coding type = 4;
   */
  type?: Coding;

  /**
   * Resource type
   *
   * @generated from field: google.fhir.stu3.proto.FHIRDefinedTypeCode resource = 5;
   */
  resource?: FHIRDefinedTypeCode;

  /**
   * Tracking/logging operation label
   *
   * @generated from field: google.fhir.stu3.proto.String label = 6;
   */
  label?: String;

  /**
   * Tracking/reporting operation description
   *
   * @generated from field: google.fhir.stu3.proto.String description = 7;
   */
  description?: String;

  /**
   * xml | json | ttl | none
   *
   * @generated from field: google.fhir.stu3.proto.ContentTypeCode accept = 8;
   */
  accept?: ContentTypeCode;

  /**
   * xml | json | ttl | none
   *
   * @generated from field: google.fhir.stu3.proto.ContentTypeCode content_type = 9;
   */
  contentType?: ContentTypeCode;

  /**
   * Server responding to the request
   *
   * @generated from field: google.fhir.stu3.proto.Integer destination = 10;
   */
  destination?: Integer;

  /**
   * Whether or not to send the request url in encoded format
   *
   * @generated from field: google.fhir.stu3.proto.Boolean encode_request_url = 11;
   */
  encodeRequestUrl?: Boolean;

  /**
   * Server initiating the request
   *
   * @generated from field: google.fhir.stu3.proto.Integer origin = 12;
   */
  origin?: Integer;

  /**
   * Explicitly defined path parameters
   *
   * @generated from field: google.fhir.stu3.proto.String params = 13;
   */
  params?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation.RequestHeader request_header = 14;
   */
  requestHeader: TestScript_Setup_SetupAction_Operation_RequestHeader[] = [];

  /**
   * Fixture Id of mapped request
   *
   * @generated from field: google.fhir.stu3.proto.Id request_id = 15;
   */
  requestId?: Id;

  /**
   * Fixture Id of mapped response
   *
   * @generated from field: google.fhir.stu3.proto.Id response_id = 16;
   */
  responseId?: Id;

  /**
   * Fixture Id of body for PUT and POST requests
   *
   * @generated from field: google.fhir.stu3.proto.Id source_id = 17;
   */
  sourceId?: Id;

  /**
   * Id of fixture used for extracting the [id],  [type], and [vid] for
   * GET requests
   *
   * @generated from field: google.fhir.stu3.proto.Id target_id = 18;
   */
  targetId?: Id;

  /**
   * Request URL
   *
   * @generated from field: google.fhir.stu3.proto.String url = 19;
   */
  url?: String;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: Coding },
    { no: 5, name: "resource", kind: "message", T: FHIRDefinedTypeCode },
    { no: 6, name: "label", kind: "message", T: String },
    { no: 7, name: "description", kind: "message", T: String },
    { no: 8, name: "accept", kind: "message", T: ContentTypeCode },
    { no: 9, name: "content_type", kind: "message", T: ContentTypeCode },
    { no: 10, name: "destination", kind: "message", T: Integer },
    { no: 11, name: "encode_request_url", kind: "message", T: Boolean },
    { no: 12, name: "origin", kind: "message", T: Integer },
    { no: 13, name: "params", kind: "message", T: String },
    { no: 14, name: "request_header", kind: "message", T: TestScript_Setup_SetupAction_Operation_RequestHeader, repeated: true },
    { no: 15, name: "request_id", kind: "message", T: Id },
    { no: 16, name: "response_id", kind: "message", T: Id },
    { no: 17, name: "source_id", kind: "message", T: Id },
    { no: 18, name: "target_id", kind: "message", T: Id },
    { no: 19, name: "url", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation {
    return new TestScript_Setup_SetupAction_Operation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation {
    return new TestScript_Setup_SetupAction_Operation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation {
    return new TestScript_Setup_SetupAction_Operation().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation | PlainMessage<TestScript_Setup_SetupAction_Operation> | undefined, b: TestScript_Setup_SetupAction_Operation | PlainMessage<TestScript_Setup_SetupAction_Operation> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation, a, b);
  }
}

/**
 * Each operation can have one or more header elements
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation.RequestHeader
 */
export class TestScript_Setup_SetupAction_Operation_RequestHeader extends Message<TestScript_Setup_SetupAction_Operation_RequestHeader> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * HTTP header field name
   *
   * @generated from field: google.fhir.stu3.proto.String field = 4;
   */
  field?: String;

  /**
   * HTTP headerfield value
   *
   * @generated from field: google.fhir.stu3.proto.String value = 5;
   */
  value?: String;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation_RequestHeader>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation.RequestHeader";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "field", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation_RequestHeader {
    return new TestScript_Setup_SetupAction_Operation_RequestHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_RequestHeader {
    return new TestScript_Setup_SetupAction_Operation_RequestHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_RequestHeader {
    return new TestScript_Setup_SetupAction_Operation_RequestHeader().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation_RequestHeader | PlainMessage<TestScript_Setup_SetupAction_Operation_RequestHeader> | undefined, b: TestScript_Setup_SetupAction_Operation_RequestHeader | PlainMessage<TestScript_Setup_SetupAction_Operation_RequestHeader> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation_RequestHeader, a, b);
  }
}

/**
 * The assertion to perform
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert
 */
export class TestScript_Setup_SetupAction_Assert extends Message<TestScript_Setup_SetupAction_Assert> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Tracking/logging assertion label
   *
   * @generated from field: google.fhir.stu3.proto.String label = 4;
   */
  label?: String;

  /**
   * Tracking/reporting assertion description
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * response | request
   *
   * @generated from field: google.fhir.stu3.proto.AssertionDirectionTypeCode direction = 6;
   */
  direction?: AssertionDirectionTypeCode;

  /**
   * Id of the source fixture to be evaluated
   *
   * @generated from field: google.fhir.stu3.proto.String compare_to_source_id = 7;
   */
  compareToSourceId?: String;

  /**
   * The fluentpath expression to evaluate against the source fixture
   *
   * @generated from field: google.fhir.stu3.proto.String compare_to_source_expression = 8;
   */
  compareToSourceExpression?: String;

  /**
   * XPath or JSONPath expression to evaluate against the source fixture
   *
   * @generated from field: google.fhir.stu3.proto.String compare_to_source_path = 9;
   */
  compareToSourcePath?: String;

  /**
   * xml | json | ttl | none
   *
   * @generated from field: google.fhir.stu3.proto.ContentTypeCode content_type = 10;
   */
  contentType?: ContentTypeCode;

  /**
   * The fluentpath expression to be evaluated
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 11;
   */
  expression?: String;

  /**
   * HTTP header field name
   *
   * @generated from field: google.fhir.stu3.proto.String header_field = 12;
   */
  headerField?: String;

  /**
   * Fixture Id of minimum content resource
   *
   * @generated from field: google.fhir.stu3.proto.String minimum_id = 13;
   */
  minimumId?: String;

  /**
   * Perform validation on navigation links?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean navigation_links = 14;
   */
  navigationLinks?: Boolean;

  /**
   * equals | notEquals | in | notIn | greaterThan | lessThan | empty |
   * notEmpty | contains | notContains | eval
   *
   * @generated from field: google.fhir.stu3.proto.AssertionOperatorTypeCode operator = 15;
   */
  operator?: AssertionOperatorTypeCode;

  /**
   * XPath or JSONPath expression
   *
   * @generated from field: google.fhir.stu3.proto.String path = 16;
   */
  path?: String;

  /**
   * delete | get | options | patch | post | put
   *
   * @generated from field: google.fhir.stu3.proto.TestScriptRequestMethodCodeCode request_method = 17;
   */
  requestMethod?: TestScriptRequestMethodCodeCode;

  /**
   * Request URL comparison value
   *
   * @generated from field: google.fhir.stu3.proto.String request_url = 18 [json_name = "requestURL"];
   */
  requestUrl?: String;

  /**
   * Resource type
   *
   * @generated from field: google.fhir.stu3.proto.FHIRDefinedTypeCode resource = 19;
   */
  resource?: FHIRDefinedTypeCode;

  /**
   * okay | created | noContent | notModified | bad | forbidden | notFound
   * | methodNotAllowed | conflict | gone | preconditionFailed |
   * unprocessable
   *
   * @generated from field: google.fhir.stu3.proto.AssertionResponseTypesCode response = 20;
   */
  response?: AssertionResponseTypesCode;

  /**
   * HTTP response code to test
   *
   * @generated from field: google.fhir.stu3.proto.String response_code = 21;
   */
  responseCode?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule rule = 22;
   */
  rule?: TestScript_Setup_SetupAction_Assert_ActionAssertRule;

  /**
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset ruleset = 23;
   */
  ruleset?: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset;

  /**
   * Fixture Id of source expression or headerField
   *
   * @generated from field: google.fhir.stu3.proto.Id source_id = 24;
   */
  sourceId?: Id;

  /**
   * Profile Id of validation profile reference
   *
   * @generated from field: google.fhir.stu3.proto.Id validate_profile_id = 25;
   */
  validateProfileId?: Id;

  /**
   * The value to compare to
   *
   * @generated from field: google.fhir.stu3.proto.String value = 26;
   */
  value?: String;

  /**
   * Will this assert produce a warning only on error?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean warning_only = 27;
   */
  warningOnly?: Boolean;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "label", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "direction", kind: "message", T: AssertionDirectionTypeCode },
    { no: 7, name: "compare_to_source_id", kind: "message", T: String },
    { no: 8, name: "compare_to_source_expression", kind: "message", T: String },
    { no: 9, name: "compare_to_source_path", kind: "message", T: String },
    { no: 10, name: "content_type", kind: "message", T: ContentTypeCode },
    { no: 11, name: "expression", kind: "message", T: String },
    { no: 12, name: "header_field", kind: "message", T: String },
    { no: 13, name: "minimum_id", kind: "message", T: String },
    { no: 14, name: "navigation_links", kind: "message", T: Boolean },
    { no: 15, name: "operator", kind: "message", T: AssertionOperatorTypeCode },
    { no: 16, name: "path", kind: "message", T: String },
    { no: 17, name: "request_method", kind: "message", T: TestScriptRequestMethodCodeCode },
    { no: 18, name: "request_url", jsonName: "requestURL", kind: "message", T: String },
    { no: 19, name: "resource", kind: "message", T: FHIRDefinedTypeCode },
    { no: 20, name: "response", kind: "message", T: AssertionResponseTypesCode },
    { no: 21, name: "response_code", kind: "message", T: String },
    { no: 22, name: "rule", kind: "message", T: TestScript_Setup_SetupAction_Assert_ActionAssertRule },
    { no: 23, name: "ruleset", kind: "message", T: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset },
    { no: 24, name: "source_id", kind: "message", T: Id },
    { no: 25, name: "validate_profile_id", kind: "message", T: Id },
    { no: 26, name: "value", kind: "message", T: String },
    { no: 27, name: "warning_only", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert {
    return new TestScript_Setup_SetupAction_Assert().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert {
    return new TestScript_Setup_SetupAction_Assert().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert {
    return new TestScript_Setup_SetupAction_Assert().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert | PlainMessage<TestScript_Setup_SetupAction_Assert> | undefined, b: TestScript_Setup_SetupAction_Assert | PlainMessage<TestScript_Setup_SetupAction_Assert> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert, a, b);
  }
}

/**
 * The reference to a TestScript.rule
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule
 */
export class TestScript_Setup_SetupAction_Assert_ActionAssertRule extends Message<TestScript_Setup_SetupAction_Assert_ActionAssertRule> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Id of the TestScript.rule
   *
   * @generated from field: google.fhir.stu3.proto.Id rule_id = 4;
   */
  ruleId?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule.ActionAssertRuleParam param = 5;
   */
  param: TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "rule_id", kind: "message", T: Id },
    { no: 5, name: "param", kind: "message", T: TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRule {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRule {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRule {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRule().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ActionAssertRule | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRule> | undefined, b: TestScript_Setup_SetupAction_Assert_ActionAssertRule | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRule> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ActionAssertRule, a, b);
  }
}

/**
 * Rule parameter template
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule.ActionAssertRuleParam
 */
export class TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam extends Message<TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Parameter name matching external assert rule parameter
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Parameter value defined either explicitly or dynamically
   *
   * @generated from field: google.fhir.stu3.proto.String value = 5;
   */
  value?: String;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRule.ActionAssertRuleParam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam> | undefined, b: TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ActionAssertRule_ActionAssertRuleParam, a, b);
  }
}

/**
 * The reference to a TestScript.ruleset
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset
 */
export class TestScript_Setup_SetupAction_Assert_ActionAssertRuleset extends Message<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Id of the TestScript.ruleset
   *
   * @generated from field: google.fhir.stu3.proto.Id ruleset_id = 4;
   */
  rulesetId?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule rule = 5;
   */
  rule: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "ruleset_id", kind: "message", T: Id },
    { no: 5, name: "rule", kind: "message", T: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset> | undefined, b: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ActionAssertRuleset, a, b);
  }
}

/**
 * The referenced rule within the ruleset
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule
 */
export class TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule extends Message<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Id of referenced rule within the ruleset
   *
   * @generated from field: google.fhir.stu3.proto.Id rule_id = 4;
   */
  ruleId?: Id;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule.Param param = 5;
   */
  param: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "rule_id", kind: "message", T: Id },
    { no: 5, name: "param", kind: "message", T: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule> | undefined, b: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule, a, b);
  }
}

/**
 * Rule parameter template
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule.Param
 */
export class TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param extends Message<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Parameter name matching external assert ruleset rule parameter
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Parameter value defined either explicitly or dynamically
   *
   * @generated from field: google.fhir.stu3.proto.String value = 5;
   */
  value?: String;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert.ActionAssertRuleset.ActionAssertRulesetRule.Param";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param {
    return new TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param> | undefined, b: TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param | PlainMessage<TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ActionAssertRuleset_ActionAssertRulesetRule_Param, a, b);
  }
}

/**
 * A test in this script
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Test
 */
export class TestScript_Test extends Message<TestScript_Test> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Tracking/logging name of this test
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * Tracking/reporting short description of the test
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Test.TestAction action = 6;
   */
  action: TestScript_Test_TestAction[] = [];

  constructor(data?: PartialMessage<TestScript_Test>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Test";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "action", kind: "message", T: TestScript_Test_TestAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Test {
    return new TestScript_Test().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Test {
    return new TestScript_Test().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Test {
    return new TestScript_Test().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Test | PlainMessage<TestScript_Test> | undefined, b: TestScript_Test | PlainMessage<TestScript_Test> | undefined): boolean {
    return proto3.util.equals(TestScript_Test, a, b);
  }
}

/**
 * A test operation or assert to perform
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Test.TestAction
 */
export class TestScript_Test_TestAction extends Message<TestScript_Test_TestAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The setup operation to perform
   *
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  /**
   * The setup assertion to perform
   *
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestScript_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestScript_Test_TestAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Test.TestAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestScript_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestScript_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Test_TestAction {
    return new TestScript_Test_TestAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Test_TestAction {
    return new TestScript_Test_TestAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Test_TestAction {
    return new TestScript_Test_TestAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Test_TestAction | PlainMessage<TestScript_Test_TestAction> | undefined, b: TestScript_Test_TestAction | PlainMessage<TestScript_Test_TestAction> | undefined): boolean {
    return proto3.util.equals(TestScript_Test_TestAction, a, b);
  }
}

/**
 * A series of required clean up steps
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Teardown
 */
export class TestScript_Teardown extends Message<TestScript_Teardown> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.TestScript.Teardown.TeardownAction action = 4;
   */
  action: TestScript_Teardown_TeardownAction[] = [];

  constructor(data?: PartialMessage<TestScript_Teardown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Teardown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestScript_Teardown_TeardownAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Teardown {
    return new TestScript_Teardown().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Teardown {
    return new TestScript_Teardown().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Teardown {
    return new TestScript_Teardown().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Teardown | PlainMessage<TestScript_Teardown> | undefined, b: TestScript_Teardown | PlainMessage<TestScript_Teardown> | undefined): boolean {
    return proto3.util.equals(TestScript_Teardown, a, b);
  }
}

/**
 * One or more teardown operations to perform
 *
 * @generated from message google.fhir.stu3.proto.TestScript.Teardown.TeardownAction
 */
export class TestScript_Teardown_TeardownAction extends Message<TestScript_Teardown_TeardownAction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The teardown operation to perform
   *
   * @generated from field: google.fhir.stu3.proto.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  constructor(data?: PartialMessage<TestScript_Teardown_TeardownAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScript.Teardown.TeardownAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestScript_Setup_SetupAction_Operation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Teardown_TeardownAction {
    return new TestScript_Teardown_TeardownAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Teardown_TeardownAction {
    return new TestScript_Teardown_TeardownAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Teardown_TeardownAction {
    return new TestScript_Teardown_TeardownAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Teardown_TeardownAction | PlainMessage<TestScript_Teardown_TeardownAction> | undefined, b: TestScript_Teardown_TeardownAction | PlainMessage<TestScript_Teardown_TeardownAction> | undefined): boolean {
    return proto3.util.equals(TestScript_Teardown_TeardownAction, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ValueSet, last updated
 * 2017-04-19T07:44:43.294+10:00. A set of codes drawn from one or more code
 * systems. See http://hl7.org/fhir/StructureDefinition/ValueSet
 *
 * @generated from message google.fhir.stu3.proto.ValueSet
 */
export class ValueSet extends Message<ValueSet> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this value set (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the value set
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the value set
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this value set (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this value set (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the value set
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for value set (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Indicates whether or not any change to the content logical definition may
   * occur
   *
   * @generated from field: google.fhir.stu3.proto.Boolean immutable = 22;
   */
  immutable?: Boolean;

  /**
   * Why this value set is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * Whether this is intended to be used with an extensible binding
   *
   * @generated from field: google.fhir.stu3.proto.Boolean extensible = 25;
   */
  extensible?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.ValueSet.Compose compose = 26;
   */
  compose?: ValueSet_Compose;

  /**
   * @generated from field: google.fhir.stu3.proto.ValueSet.Expansion expansion = 27;
   */
  expansion?: ValueSet_Expansion;

  constructor(data?: PartialMessage<ValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "immutable", kind: "message", T: Boolean },
    { no: 23, name: "purpose", kind: "message", T: Markdown },
    { no: 24, name: "copyright", kind: "message", T: Markdown },
    { no: 25, name: "extensible", kind: "message", T: Boolean },
    { no: 26, name: "compose", kind: "message", T: ValueSet_Compose },
    { no: 27, name: "expansion", kind: "message", T: ValueSet_Expansion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet {
    return new ValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet {
    return new ValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet {
    return new ValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet | PlainMessage<ValueSet> | undefined, b: ValueSet | PlainMessage<ValueSet> | undefined): boolean {
    return proto3.util.equals(ValueSet, a, b);
  }
}

/**
 * Definition of the content of the value set (CLD)
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Compose
 */
export class ValueSet_Compose extends Message<ValueSet_Compose> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Fixed date for version-less references (transitive)
   *
   * @generated from field: google.fhir.stu3.proto.Date locked_date = 4;
   */
  lockedDate?: Date;

  /**
   * Whether inactive codes are in the value set
   *
   * @generated from field: google.fhir.stu3.proto.Boolean inactive = 5;
   */
  inactive?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Compose.ConceptSet include = 6;
   */
  include: ValueSet_Compose_ConceptSet[] = [];

  /**
   * Explicitly exclude codes from a code system or other value sets
   *
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Compose.ConceptSet exclude = 7;
   */
  exclude: ValueSet_Compose_ConceptSet[] = [];

  constructor(data?: PartialMessage<ValueSet_Compose>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Compose";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "locked_date", kind: "message", T: Date },
    { no: 5, name: "inactive", kind: "message", T: Boolean },
    { no: 6, name: "include", kind: "message", T: ValueSet_Compose_ConceptSet, repeated: true },
    { no: 7, name: "exclude", kind: "message", T: ValueSet_Compose_ConceptSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Compose {
    return new ValueSet_Compose().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Compose {
    return new ValueSet_Compose().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Compose {
    return new ValueSet_Compose().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Compose | PlainMessage<ValueSet_Compose> | undefined, b: ValueSet_Compose | PlainMessage<ValueSet_Compose> | undefined): boolean {
    return proto3.util.equals(ValueSet_Compose, a, b);
  }
}

/**
 * Include one or more codes from a code system or other value set(s)
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Compose.ConceptSet
 */
export class ValueSet_Compose_ConceptSet extends Message<ValueSet_Compose_ConceptSet> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The system the codes come from
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 4;
   */
  system?: Uri;

  /**
   * Specific version of the code system referred to
   *
   * @generated from field: google.fhir.stu3.proto.String version = 5;
   */
  version?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference concept = 6;
   */
  concept: ValueSet_Compose_ConceptSet_ConceptReference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.Filter filter = 7;
   */
  filter: ValueSet_Compose_ConceptSet_Filter[] = [];

  /**
   * Select only contents included in this value set
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri value_set = 8;
   */
  valueSet: Uri[] = [];

  constructor(data?: PartialMessage<ValueSet_Compose_ConceptSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "version", kind: "message", T: String },
    { no: 6, name: "concept", kind: "message", T: ValueSet_Compose_ConceptSet_ConceptReference, repeated: true },
    { no: 7, name: "filter", kind: "message", T: ValueSet_Compose_ConceptSet_Filter, repeated: true },
    { no: 8, name: "value_set", kind: "message", T: Uri, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Compose_ConceptSet {
    return new ValueSet_Compose_ConceptSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet {
    return new ValueSet_Compose_ConceptSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet {
    return new ValueSet_Compose_ConceptSet().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Compose_ConceptSet | PlainMessage<ValueSet_Compose_ConceptSet> | undefined, b: ValueSet_Compose_ConceptSet | PlainMessage<ValueSet_Compose_ConceptSet> | undefined): boolean {
    return proto3.util.equals(ValueSet_Compose_ConceptSet, a, b);
  }
}

/**
 * A concept defined in the system
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference
 */
export class ValueSet_Compose_ConceptSet_ConceptReference extends Message<ValueSet_Compose_ConceptSet_ConceptReference> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code or expression from system
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Text to display for this code for this value set in this valueset
   *
   * @generated from field: google.fhir.stu3.proto.String display = 5;
   */
  display?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference.Designation designation = 6;
   */
  designation: ValueSet_Compose_ConceptSet_ConceptReference_Designation[] = [];

  constructor(data?: PartialMessage<ValueSet_Compose_ConceptSet_ConceptReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "designation", kind: "message", T: ValueSet_Compose_ConceptSet_ConceptReference_Designation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Compose_ConceptSet_ConceptReference {
    return new ValueSet_Compose_ConceptSet_ConceptReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet_ConceptReference {
    return new ValueSet_Compose_ConceptSet_ConceptReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet_ConceptReference {
    return new ValueSet_Compose_ConceptSet_ConceptReference().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Compose_ConceptSet_ConceptReference | PlainMessage<ValueSet_Compose_ConceptSet_ConceptReference> | undefined, b: ValueSet_Compose_ConceptSet_ConceptReference | PlainMessage<ValueSet_Compose_ConceptSet_ConceptReference> | undefined): boolean {
    return proto3.util.equals(ValueSet_Compose_ConceptSet_ConceptReference, a, b);
  }
}

/**
 * Additional representations for this concept
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference.Designation
 */
export class ValueSet_Compose_ConceptSet_ConceptReference_Designation extends Message<ValueSet_Compose_ConceptSet_ConceptReference_Designation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Details how this designation would be used
   *
   * @generated from field: google.fhir.stu3.proto.Coding use = 5;
   */
  use?: Coding;

  /**
   * The text value for this designation
   *
   * @generated from field: google.fhir.stu3.proto.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<ValueSet_Compose_ConceptSet_ConceptReference_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "use", kind: "message", T: Coding },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Compose_ConceptSet_ConceptReference_Designation {
    return new ValueSet_Compose_ConceptSet_ConceptReference_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet_ConceptReference_Designation {
    return new ValueSet_Compose_ConceptSet_ConceptReference_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet_ConceptReference_Designation {
    return new ValueSet_Compose_ConceptSet_ConceptReference_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Compose_ConceptSet_ConceptReference_Designation | PlainMessage<ValueSet_Compose_ConceptSet_ConceptReference_Designation> | undefined, b: ValueSet_Compose_ConceptSet_ConceptReference_Designation | PlainMessage<ValueSet_Compose_ConceptSet_ConceptReference_Designation> | undefined): boolean {
    return proto3.util.equals(ValueSet_Compose_ConceptSet_ConceptReference_Designation, a, b);
  }
}

/**
 * Select codes/concepts by their properties (including relationships)
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.Filter
 */
export class ValueSet_Compose_ConceptSet_Filter extends Message<ValueSet_Compose_ConceptSet_Filter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A property defined by the code system
   *
   * @generated from field: google.fhir.stu3.proto.Code property = 4;
   */
  property?: Code;

  /**
   * = | is-a | descendent-of | is-not-a | regex | in | not-in |
   * generalizes | exists
   *
   * @generated from field: google.fhir.stu3.proto.FilterOperatorCode op = 5;
   */
  op?: FilterOperatorCode;

  /**
   * Code from the system, or regex criteria, or boolean value for exists
   *
   * @generated from field: google.fhir.stu3.proto.Code value = 6;
   */
  value?: Code;

  constructor(data?: PartialMessage<ValueSet_Compose_ConceptSet_Filter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.Filter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "property", kind: "message", T: Code },
    { no: 5, name: "op", kind: "message", T: FilterOperatorCode },
    { no: 6, name: "value", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Compose_ConceptSet_Filter {
    return new ValueSet_Compose_ConceptSet_Filter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet_Filter {
    return new ValueSet_Compose_ConceptSet_Filter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Compose_ConceptSet_Filter {
    return new ValueSet_Compose_ConceptSet_Filter().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Compose_ConceptSet_Filter | PlainMessage<ValueSet_Compose_ConceptSet_Filter> | undefined, b: ValueSet_Compose_ConceptSet_Filter | PlainMessage<ValueSet_Compose_ConceptSet_Filter> | undefined): boolean {
    return proto3.util.equals(ValueSet_Compose_ConceptSet_Filter, a, b);
  }
}

/**
 * Used when the value set is "expanded"
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Expansion
 */
export class ValueSet_Expansion extends Message<ValueSet_Expansion> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Uniquely identifies this expansion
   *
   * @generated from field: google.fhir.stu3.proto.Uri identifier = 4;
   */
  identifier?: Uri;

  /**
   * Time ValueSet expansion happened
   *
   * @generated from field: google.fhir.stu3.proto.DateTime timestamp = 5;
   */
  timestamp?: DateTime;

  /**
   * Total number of codes in the expansion
   *
   * @generated from field: google.fhir.stu3.proto.Integer total = 6;
   */
  total?: Integer;

  /**
   * Offset at which this resource starts
   *
   * @generated from field: google.fhir.stu3.proto.Integer offset = 7;
   */
  offset?: Integer;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Expansion.Parameter parameter = 8;
   */
  parameter: ValueSet_Expansion_Parameter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Expansion.Contains contains = 9;
   */
  contains: ValueSet_Expansion_Contains[] = [];

  constructor(data?: PartialMessage<ValueSet_Expansion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Expansion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Uri },
    { no: 5, name: "timestamp", kind: "message", T: DateTime },
    { no: 6, name: "total", kind: "message", T: Integer },
    { no: 7, name: "offset", kind: "message", T: Integer },
    { no: 8, name: "parameter", kind: "message", T: ValueSet_Expansion_Parameter, repeated: true },
    { no: 9, name: "contains", kind: "message", T: ValueSet_Expansion_Contains, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Expansion {
    return new ValueSet_Expansion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Expansion {
    return new ValueSet_Expansion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Expansion {
    return new ValueSet_Expansion().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Expansion | PlainMessage<ValueSet_Expansion> | undefined, b: ValueSet_Expansion | PlainMessage<ValueSet_Expansion> | undefined): boolean {
    return proto3.util.equals(ValueSet_Expansion, a, b);
  }
}

/**
 * Parameter that controlled the expansion process
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Expansion.Parameter
 */
export class ValueSet_Expansion_Parameter extends Message<ValueSet_Expansion_Parameter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name as assigned by the server
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ValueSet.Expansion.Parameter.Value value = 5;
   */
  value?: ValueSet_Expansion_Parameter_Value;

  constructor(data?: PartialMessage<ValueSet_Expansion_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Expansion.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: ValueSet_Expansion_Parameter_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Expansion_Parameter {
    return new ValueSet_Expansion_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Expansion_Parameter {
    return new ValueSet_Expansion_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Expansion_Parameter {
    return new ValueSet_Expansion_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Expansion_Parameter | PlainMessage<ValueSet_Expansion_Parameter> | undefined, b: ValueSet_Expansion_Parameter | PlainMessage<ValueSet_Expansion_Parameter> | undefined): boolean {
    return proto3.util.equals(ValueSet_Expansion_Parameter, a, b);
  }
}

/**
 * Value of the named parameter
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Expansion.Parameter.Value
 */
export class ValueSet_Expansion_Parameter_Value extends Message<ValueSet_Expansion_Parameter_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ValueSet.Expansion.Parameter.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 4;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 6;
     */
    value: Code;
    case: "code";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ValueSet_Expansion_Parameter_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Expansion.Parameter.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 4, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 5, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 6, name: "code", kind: "message", T: Code, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Expansion_Parameter_Value {
    return new ValueSet_Expansion_Parameter_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Expansion_Parameter_Value {
    return new ValueSet_Expansion_Parameter_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Expansion_Parameter_Value {
    return new ValueSet_Expansion_Parameter_Value().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Expansion_Parameter_Value | PlainMessage<ValueSet_Expansion_Parameter_Value> | undefined, b: ValueSet_Expansion_Parameter_Value | PlainMessage<ValueSet_Expansion_Parameter_Value> | undefined): boolean {
    return proto3.util.equals(ValueSet_Expansion_Parameter_Value, a, b);
  }
}

/**
 * Codes in the value set
 *
 * @generated from message google.fhir.stu3.proto.ValueSet.Expansion.Contains
 */
export class ValueSet_Expansion_Contains extends Message<ValueSet_Expansion_Contains> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * System value for the code
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 4;
   */
  system?: Uri;

  /**
   * If user cannot select this entry
   *
   * @generated from field: google.fhir.stu3.proto.Boolean abstract = 5;
   */
  abstract?: Boolean;

  /**
   * If concept is inactive in the code system
   *
   * @generated from field: google.fhir.stu3.proto.Boolean inactive = 6;
   */
  inactive?: Boolean;

  /**
   * Version in which this code/display is defined
   *
   * @generated from field: google.fhir.stu3.proto.String version = 7;
   */
  version?: String;

  /**
   * Code - if blank, this is not a selectable code
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 8;
   */
  code?: Code;

  /**
   * User display for the concept
   *
   * @generated from field: google.fhir.stu3.proto.String display = 9;
   */
  display?: String;

  /**
   * Additional representations for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Compose.ConceptSet.ConceptReference.Designation designation = 10;
   */
  designation: ValueSet_Compose_ConceptSet_ConceptReference_Designation[] = [];

  /**
   * Codes contained under this entry
   *
   * @generated from field: repeated google.fhir.stu3.proto.ValueSet.Expansion.Contains contains = 11;
   */
  contains: ValueSet_Expansion_Contains[] = [];

  constructor(data?: PartialMessage<ValueSet_Expansion_Contains>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ValueSet.Expansion.Contains";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "abstract", kind: "message", T: Boolean },
    { no: 6, name: "inactive", kind: "message", T: Boolean },
    { no: 7, name: "version", kind: "message", T: String },
    { no: 8, name: "code", kind: "message", T: Code },
    { no: 9, name: "display", kind: "message", T: String },
    { no: 10, name: "designation", kind: "message", T: ValueSet_Compose_ConceptSet_ConceptReference_Designation, repeated: true },
    { no: 11, name: "contains", kind: "message", T: ValueSet_Expansion_Contains, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSet_Expansion_Contains {
    return new ValueSet_Expansion_Contains().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSet_Expansion_Contains {
    return new ValueSet_Expansion_Contains().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSet_Expansion_Contains {
    return new ValueSet_Expansion_Contains().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSet_Expansion_Contains | PlainMessage<ValueSet_Expansion_Contains> | undefined, b: ValueSet_Expansion_Contains | PlainMessage<ValueSet_Expansion_Contains> | undefined): boolean {
    return proto3.util.equals(ValueSet_Expansion_Contains, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for VisionPrescription, last updated
 * 2017-04-19T07:44:43.294+10:00. Prescription for vision correction products
 * for a patient. See http://hl7.org/fhir/StructureDefinition/VisionPrescription
 *
 * @generated from message google.fhir.stu3.proto.VisionPrescription
 */
export class VisionPrescription extends Message<VisionPrescription> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | cancelled | draft | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode status = 10;
   */
  status?: FinancialResourceStatusCode;

  /**
   * Who prescription is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 11;
   */
  patient?: Reference;

  /**
   * Created during encounter / admission / stay
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 12;
   */
  encounter?: Reference;

  /**
   * When prescription was authorized
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date_written = 13;
   */
  dateWritten?: DateTime;

  /**
   * Who authorizes the vision product
   *
   * @generated from field: google.fhir.stu3.proto.Reference prescriber = 14;
   */
  prescriber?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.VisionPrescription.Reason reason = 15;
   */
  reason?: VisionPrescription_Reason;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.VisionPrescription.Dispense dispense = 16;
   */
  dispense: VisionPrescription_Dispense[] = [];

  constructor(data?: PartialMessage<VisionPrescription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VisionPrescription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: FinancialResourceStatusCode },
    { no: 11, name: "patient", kind: "message", T: Reference },
    { no: 12, name: "encounter", kind: "message", T: Reference },
    { no: 13, name: "date_written", kind: "message", T: DateTime },
    { no: 14, name: "prescriber", kind: "message", T: Reference },
    { no: 15, name: "reason", kind: "message", T: VisionPrescription_Reason },
    { no: 16, name: "dispense", kind: "message", T: VisionPrescription_Dispense, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionPrescription {
    return new VisionPrescription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionPrescription {
    return new VisionPrescription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionPrescription {
    return new VisionPrescription().fromJsonString(jsonString, options);
  }

  static equals(a: VisionPrescription | PlainMessage<VisionPrescription> | undefined, b: VisionPrescription | PlainMessage<VisionPrescription> | undefined): boolean {
    return proto3.util.equals(VisionPrescription, a, b);
  }
}

/**
 * Reason or indication for writing the prescription
 *
 * @generated from message google.fhir.stu3.proto.VisionPrescription.Reason
 */
export class VisionPrescription_Reason extends Message<VisionPrescription_Reason> {
  /**
   * @generated from oneof google.fhir.stu3.proto.VisionPrescription.Reason.reason
   */
  reason: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<VisionPrescription_Reason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VisionPrescription.Reason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "reason" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "reason" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionPrescription_Reason {
    return new VisionPrescription_Reason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionPrescription_Reason {
    return new VisionPrescription_Reason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionPrescription_Reason {
    return new VisionPrescription_Reason().fromJsonString(jsonString, options);
  }

  static equals(a: VisionPrescription_Reason | PlainMessage<VisionPrescription_Reason> | undefined, b: VisionPrescription_Reason | PlainMessage<VisionPrescription_Reason> | undefined): boolean {
    return proto3.util.equals(VisionPrescription_Reason, a, b);
  }
}

/**
 * Vision supply authorization
 *
 * @generated from message google.fhir.stu3.proto.VisionPrescription.Dispense
 */
export class VisionPrescription_Dispense extends Message<VisionPrescription_Dispense> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Product to be supplied
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept product = 4;
   */
  product?: CodeableConcept;

  /**
   * right | left
   *
   * @generated from field: google.fhir.stu3.proto.VisionEyesCode eye = 5;
   */
  eye?: VisionEyesCode;

  /**
   * Lens sphere
   *
   * @generated from field: google.fhir.stu3.proto.Decimal sphere = 6;
   */
  sphere?: Decimal;

  /**
   * Lens cylinder
   *
   * @generated from field: google.fhir.stu3.proto.Decimal cylinder = 7;
   */
  cylinder?: Decimal;

  /**
   * Lens axis
   *
   * @generated from field: google.fhir.stu3.proto.Integer axis = 8;
   */
  axis?: Integer;

  /**
   * Lens prism
   *
   * @generated from field: google.fhir.stu3.proto.Decimal prism = 9;
   */
  prism?: Decimal;

  /**
   * up | down | in | out
   *
   * @generated from field: google.fhir.stu3.proto.VisionBaseCode base = 10;
   */
  base?: VisionBaseCode;

  /**
   * Lens add
   *
   * @generated from field: google.fhir.stu3.proto.Decimal add = 11;
   */
  add?: Decimal;

  /**
   * Contact lens power
   *
   * @generated from field: google.fhir.stu3.proto.Decimal power = 12;
   */
  power?: Decimal;

  /**
   * Contact lens back curvature
   *
   * @generated from field: google.fhir.stu3.proto.Decimal back_curve = 13;
   */
  backCurve?: Decimal;

  /**
   * Contact lens diameter
   *
   * @generated from field: google.fhir.stu3.proto.Decimal diameter = 14;
   */
  diameter?: Decimal;

  /**
   * Lens wear duration
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity duration = 15;
   */
  duration?: SimpleQuantity;

  /**
   * Color required
   *
   * @generated from field: google.fhir.stu3.proto.String color = 16;
   */
  color?: String;

  /**
   * Brand required
   *
   * @generated from field: google.fhir.stu3.proto.String brand = 17;
   */
  brand?: String;

  /**
   * Notes for coatings
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 18;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<VisionPrescription_Dispense>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VisionPrescription.Dispense";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "product", kind: "message", T: CodeableConcept },
    { no: 5, name: "eye", kind: "message", T: VisionEyesCode },
    { no: 6, name: "sphere", kind: "message", T: Decimal },
    { no: 7, name: "cylinder", kind: "message", T: Decimal },
    { no: 8, name: "axis", kind: "message", T: Integer },
    { no: 9, name: "prism", kind: "message", T: Decimal },
    { no: 10, name: "base", kind: "message", T: VisionBaseCode },
    { no: 11, name: "add", kind: "message", T: Decimal },
    { no: 12, name: "power", kind: "message", T: Decimal },
    { no: 13, name: "back_curve", kind: "message", T: Decimal },
    { no: 14, name: "diameter", kind: "message", T: Decimal },
    { no: 15, name: "duration", kind: "message", T: SimpleQuantity },
    { no: 16, name: "color", kind: "message", T: String },
    { no: 17, name: "brand", kind: "message", T: String },
    { no: 18, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionPrescription_Dispense {
    return new VisionPrescription_Dispense().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionPrescription_Dispense {
    return new VisionPrescription_Dispense().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionPrescription_Dispense {
    return new VisionPrescription_Dispense().fromJsonString(jsonString, options);
  }

  static equals(a: VisionPrescription_Dispense | PlainMessage<VisionPrescription_Dispense> | undefined, b: VisionPrescription_Dispense | PlainMessage<VisionPrescription_Dispense> | undefined): boolean {
    return proto3.util.equals(VisionPrescription_Dispense, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Resource, last updated
 * 2017-04-19T07:44:43.294+10:00. Base Resource. See
 * http://hl7.org/fhir/StructureDefinition/Resource
 *
 * @generated from message google.fhir.stu3.proto.Resource
 */
export class Resource extends Message<Resource> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  constructor(data?: PartialMessage<Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resource {
    return new Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resource {
    return new Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resource {
    return new Resource().fromJsonString(jsonString, options);
  }

  static equals(a: Resource | PlainMessage<Resource> | undefined, b: Resource | PlainMessage<Resource> | undefined): boolean {
    return proto3.util.equals(Resource, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DomainResource, last updated
 * 2017-04-19T07:44:43.294+10:00. A resource with narrative, extensions, and
 * contained resources. See
 * http://hl7.org/fhir/StructureDefinition/DomainResource
 *
 * @generated from message google.fhir.stu3.proto.DomainResource
 */
export class DomainResource extends Message<DomainResource> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  constructor(data?: PartialMessage<DomainResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DomainResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DomainResource {
    return new DomainResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DomainResource {
    return new DomainResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DomainResource {
    return new DomainResource().fromJsonString(jsonString, options);
  }

  static equals(a: DomainResource | PlainMessage<DomainResource> | undefined, b: DomainResource | PlainMessage<DomainResource> | undefined): boolean {
    return proto3.util.equals(DomainResource, a, b);
  }
}

/**
 * @generated from message google.fhir.stu3.proto.ContainedResource
 */
export class ContainedResource extends Message<ContainedResource> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ContainedResource.oneof_resource
   */
  oneofResource: {
    /**
     * @generated from field: google.fhir.stu3.proto.Account account = 1;
     */
    value: Account;
    case: "account";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ActivityDefinition activity_definition = 2;
     */
    value: ActivityDefinition;
    case: "activityDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.AdverseEvent adverse_event = 3;
     */
    value: AdverseEvent;
    case: "adverseEvent";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.AllergyIntolerance allergy_intolerance = 4;
     */
    value: AllergyIntolerance;
    case: "allergyIntolerance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Appointment appointment = 5;
     */
    value: Appointment;
    case: "appointment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.AppointmentResponse appointment_response = 6;
     */
    value: AppointmentResponse;
    case: "appointmentResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.AuditEvent audit_event = 7;
     */
    value: AuditEvent;
    case: "auditEvent";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Basic basic = 8;
     */
    value: Basic;
    case: "basic";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Binary binary = 9;
     */
    value: Binary;
    case: "binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.BodySite body_site = 10;
     */
    value: BodySite;
    case: "bodySite";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Bundle bundle = 11;
     */
    value: Bundle;
    case: "bundle";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CapabilityStatement capability_statement = 12;
     */
    value: CapabilityStatement;
    case: "capabilityStatement";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CarePlan care_plan = 13;
     */
    value: CarePlan;
    case: "carePlan";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CareTeam care_team = 14;
     */
    value: CareTeam;
    case: "careTeam";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ChargeItem charge_item = 15;
     */
    value: ChargeItem;
    case: "chargeItem";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Claim claim = 16;
     */
    value: Claim;
    case: "claim";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ClaimResponse claim_response = 17;
     */
    value: ClaimResponse;
    case: "claimResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ClinicalImpression clinical_impression = 18;
     */
    value: ClinicalImpression;
    case: "clinicalImpression";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeSystem code_system = 19;
     */
    value: CodeSystem;
    case: "codeSystem";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Communication communication = 20;
     */
    value: Communication;
    case: "communication";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CommunicationRequest communication_request = 21;
     */
    value: CommunicationRequest;
    case: "communicationRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CompartmentDefinition compartment_definition = 22;
     */
    value: CompartmentDefinition;
    case: "compartmentDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Composition composition = 23;
     */
    value: Composition;
    case: "composition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ConceptMap concept_map = 24;
     */
    value: ConceptMap;
    case: "conceptMap";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Condition condition = 25;
     */
    value: Condition;
    case: "condition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Consent consent = 26;
     */
    value: Consent;
    case: "consent";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Contract contract = 27;
     */
    value: Contract;
    case: "contract";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coverage coverage = 28;
     */
    value: Coverage;
    case: "coverage";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DataElement data_element = 29;
     */
    value: DataElement;
    case: "dataElement";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DetectedIssue detected_issue = 30;
     */
    value: DetectedIssue;
    case: "detectedIssue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Device device = 31;
     */
    value: Device;
    case: "device";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DeviceComponent device_component = 32;
     */
    value: DeviceComponent;
    case: "deviceComponent";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DeviceMetric device_metric = 33;
     */
    value: DeviceMetric;
    case: "deviceMetric";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DeviceRequest device_request = 34;
     */
    value: DeviceRequest;
    case: "deviceRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DeviceUseStatement device_use_statement = 35;
     */
    value: DeviceUseStatement;
    case: "deviceUseStatement";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DiagnosticReport diagnostic_report = 36;
     */
    value: DiagnosticReport;
    case: "diagnosticReport";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DocumentManifest document_manifest = 37;
     */
    value: DocumentManifest;
    case: "documentManifest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DocumentReference document_reference = 38;
     */
    value: DocumentReference;
    case: "documentReference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.EligibilityRequest eligibility_request = 39;
     */
    value: EligibilityRequest;
    case: "eligibilityRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.EligibilityResponse eligibility_response = 40;
     */
    value: EligibilityResponse;
    case: "eligibilityResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Encounter encounter = 41;
     */
    value: Encounter;
    case: "encounter";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Endpoint endpoint = 42;
     */
    value: Endpoint;
    case: "endpoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.EnrollmentRequest enrollment_request = 43;
     */
    value: EnrollmentRequest;
    case: "enrollmentRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.EnrollmentResponse enrollment_response = 44;
     */
    value: EnrollmentResponse;
    case: "enrollmentResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.EpisodeOfCare episode_of_care = 45;
     */
    value: EpisodeOfCare;
    case: "episodeOfCare";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ExpansionProfile expansion_profile = 46;
     */
    value: ExpansionProfile;
    case: "expansionProfile";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefit explanation_of_benefit = 47;
     */
    value: ExplanationOfBenefit;
    case: "explanationOfBenefit";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.FamilyMemberHistory family_member_history = 48;
     */
    value: FamilyMemberHistory;
    case: "familyMemberHistory";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Flag flag = 49;
     */
    value: Flag;
    case: "flag";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Goal goal = 50;
     */
    value: Goal;
    case: "goal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.GraphDefinition graph_definition = 51;
     */
    value: GraphDefinition;
    case: "graphDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Group group = 52;
     */
    value: Group;
    case: "group";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.GuidanceResponse guidance_response = 53;
     */
    value: GuidanceResponse;
    case: "guidanceResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HealthcareService healthcare_service = 54;
     */
    value: HealthcareService;
    case: "healthcareService";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ImagingManifest imaging_manifest = 55;
     */
    value: ImagingManifest;
    case: "imagingManifest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ImagingStudy imaging_study = 56;
     */
    value: ImagingStudy;
    case: "imagingStudy";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Immunization immunization = 57;
     */
    value: Immunization;
    case: "immunization";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ImmunizationRecommendation immunization_recommendation = 58;
     */
    value: ImmunizationRecommendation;
    case: "immunizationRecommendation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ImplementationGuide implementation_guide = 59;
     */
    value: ImplementationGuide;
    case: "implementationGuide";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Library library = 60;
     */
    value: Library;
    case: "library";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Linkage linkage = 61;
     */
    value: Linkage;
    case: "linkage";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.List list = 62;
     */
    value: List;
    case: "list";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Location location = 63;
     */
    value: Location;
    case: "location";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Measure measure = 64;
     */
    value: Measure;
    case: "measure";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MeasureReport measure_report = 65;
     */
    value: MeasureReport;
    case: "measureReport";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Media media = 66;
     */
    value: Media;
    case: "media";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Medication medication = 67;
     */
    value: Medication;
    case: "medication";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MedicationAdministration medication_administration = 68;
     */
    value: MedicationAdministration;
    case: "medicationAdministration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MedicationDispense medication_dispense = 69;
     */
    value: MedicationDispense;
    case: "medicationDispense";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MedicationRequest medication_request = 70;
     */
    value: MedicationRequest;
    case: "medicationRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MedicationStatement medication_statement = 71;
     */
    value: MedicationStatement;
    case: "medicationStatement";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MessageDefinition message_definition = 72;
     */
    value: MessageDefinition;
    case: "messageDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.MessageHeader message_header = 73;
     */
    value: MessageHeader;
    case: "messageHeader";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.NamingSystem naming_system = 74;
     */
    value: NamingSystem;
    case: "namingSystem";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.NutritionOrder nutrition_order = 75;
     */
    value: NutritionOrder;
    case: "nutritionOrder";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Observation observation = 76;
     */
    value: Observation;
    case: "observation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.OperationDefinition operation_definition = 77;
     */
    value: OperationDefinition;
    case: "operationDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.OperationOutcome operation_outcome = 78;
     */
    value: OperationOutcome;
    case: "operationOutcome";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Organization organization = 79;
     */
    value: Organization;
    case: "organization";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Parameters parameters = 80;
     */
    value: Parameters;
    case: "parameters";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Patient patient = 81;
     */
    value: Patient;
    case: "patient";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PaymentNotice payment_notice = 82;
     */
    value: PaymentNotice;
    case: "paymentNotice";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PaymentReconciliation payment_reconciliation = 83;
     */
    value: PaymentReconciliation;
    case: "paymentReconciliation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Person person = 84;
     */
    value: Person;
    case: "person";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PlanDefinition plan_definition = 85;
     */
    value: PlanDefinition;
    case: "planDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Practitioner practitioner = 86;
     */
    value: Practitioner;
    case: "practitioner";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PractitionerRole practitioner_role = 87;
     */
    value: PractitionerRole;
    case: "practitionerRole";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Procedure procedure = 88;
     */
    value: Procedure;
    case: "procedure";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ProcedureRequest procedure_request = 89;
     */
    value: ProcedureRequest;
    case: "procedureRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ProcessRequest process_request = 90;
     */
    value: ProcessRequest;
    case: "processRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ProcessResponse process_response = 91;
     */
    value: ProcessResponse;
    case: "processResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Provenance provenance = 92;
     */
    value: Provenance;
    case: "provenance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Questionnaire questionnaire = 93;
     */
    value: Questionnaire;
    case: "questionnaire";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.QuestionnaireResponse questionnaire_response = 94;
     */
    value: QuestionnaireResponse;
    case: "questionnaireResponse";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ReferralRequest referral_request = 95;
     */
    value: ReferralRequest;
    case: "referralRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.RelatedPerson related_person = 96;
     */
    value: RelatedPerson;
    case: "relatedPerson";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.RequestGroup request_group = 97;
     */
    value: RequestGroup;
    case: "requestGroup";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ResearchStudy research_study = 98;
     */
    value: ResearchStudy;
    case: "researchStudy";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ResearchSubject research_subject = 99;
     */
    value: ResearchSubject;
    case: "researchSubject";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.RiskAssessment risk_assessment = 100;
     */
    value: RiskAssessment;
    case: "riskAssessment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Schedule schedule = 101;
     */
    value: Schedule;
    case: "schedule";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SearchParameter search_parameter = 102;
     */
    value: SearchParameter;
    case: "searchParameter";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Sequence sequence = 103;
     */
    value: Sequence;
    case: "sequence";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ServiceDefinition service_definition = 104;
     */
    value: ServiceDefinition;
    case: "serviceDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Slot slot = 105;
     */
    value: Slot;
    case: "slot";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Specimen specimen = 106;
     */
    value: Specimen;
    case: "specimen";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.StructureDefinition structure_definition = 107;
     */
    value: StructureDefinition;
    case: "structureDefinition";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.StructureMap structure_map = 108;
     */
    value: StructureMap;
    case: "structureMap";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Subscription subscription = 109;
     */
    value: Subscription;
    case: "subscription";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Substance substance = 110;
     */
    value: Substance;
    case: "substance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SupplyDelivery supply_delivery = 111;
     */
    value: SupplyDelivery;
    case: "supplyDelivery";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SupplyRequest supply_request = 112;
     */
    value: SupplyRequest;
    case: "supplyRequest";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Task task = 113;
     */
    value: Task;
    case: "task";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.TestReport test_report = 114;
     */
    value: TestReport;
    case: "testReport";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.TestScript test_script = 115;
     */
    value: TestScript;
    case: "testScript";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ValueSet value_set = 116;
     */
    value: ValueSet;
    case: "valueSet";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.VisionPrescription vision_prescription = 117;
     */
    value: VisionPrescription;
    case: "visionPrescription";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ContainedResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ContainedResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "account", kind: "message", T: Account, oneof: "oneof_resource" },
    { no: 2, name: "activity_definition", kind: "message", T: ActivityDefinition, oneof: "oneof_resource" },
    { no: 3, name: "adverse_event", kind: "message", T: AdverseEvent, oneof: "oneof_resource" },
    { no: 4, name: "allergy_intolerance", kind: "message", T: AllergyIntolerance, oneof: "oneof_resource" },
    { no: 5, name: "appointment", kind: "message", T: Appointment, oneof: "oneof_resource" },
    { no: 6, name: "appointment_response", kind: "message", T: AppointmentResponse, oneof: "oneof_resource" },
    { no: 7, name: "audit_event", kind: "message", T: AuditEvent, oneof: "oneof_resource" },
    { no: 8, name: "basic", kind: "message", T: Basic, oneof: "oneof_resource" },
    { no: 9, name: "binary", kind: "message", T: Binary, oneof: "oneof_resource" },
    { no: 10, name: "body_site", kind: "message", T: BodySite, oneof: "oneof_resource" },
    { no: 11, name: "bundle", kind: "message", T: Bundle, oneof: "oneof_resource" },
    { no: 12, name: "capability_statement", kind: "message", T: CapabilityStatement, oneof: "oneof_resource" },
    { no: 13, name: "care_plan", kind: "message", T: CarePlan, oneof: "oneof_resource" },
    { no: 14, name: "care_team", kind: "message", T: CareTeam, oneof: "oneof_resource" },
    { no: 15, name: "charge_item", kind: "message", T: ChargeItem, oneof: "oneof_resource" },
    { no: 16, name: "claim", kind: "message", T: Claim, oneof: "oneof_resource" },
    { no: 17, name: "claim_response", kind: "message", T: ClaimResponse, oneof: "oneof_resource" },
    { no: 18, name: "clinical_impression", kind: "message", T: ClinicalImpression, oneof: "oneof_resource" },
    { no: 19, name: "code_system", kind: "message", T: CodeSystem, oneof: "oneof_resource" },
    { no: 20, name: "communication", kind: "message", T: Communication, oneof: "oneof_resource" },
    { no: 21, name: "communication_request", kind: "message", T: CommunicationRequest, oneof: "oneof_resource" },
    { no: 22, name: "compartment_definition", kind: "message", T: CompartmentDefinition, oneof: "oneof_resource" },
    { no: 23, name: "composition", kind: "message", T: Composition, oneof: "oneof_resource" },
    { no: 24, name: "concept_map", kind: "message", T: ConceptMap, oneof: "oneof_resource" },
    { no: 25, name: "condition", kind: "message", T: Condition, oneof: "oneof_resource" },
    { no: 26, name: "consent", kind: "message", T: Consent, oneof: "oneof_resource" },
    { no: 27, name: "contract", kind: "message", T: Contract, oneof: "oneof_resource" },
    { no: 28, name: "coverage", kind: "message", T: Coverage, oneof: "oneof_resource" },
    { no: 29, name: "data_element", kind: "message", T: DataElement, oneof: "oneof_resource" },
    { no: 30, name: "detected_issue", kind: "message", T: DetectedIssue, oneof: "oneof_resource" },
    { no: 31, name: "device", kind: "message", T: Device, oneof: "oneof_resource" },
    { no: 32, name: "device_component", kind: "message", T: DeviceComponent, oneof: "oneof_resource" },
    { no: 33, name: "device_metric", kind: "message", T: DeviceMetric, oneof: "oneof_resource" },
    { no: 34, name: "device_request", kind: "message", T: DeviceRequest, oneof: "oneof_resource" },
    { no: 35, name: "device_use_statement", kind: "message", T: DeviceUseStatement, oneof: "oneof_resource" },
    { no: 36, name: "diagnostic_report", kind: "message", T: DiagnosticReport, oneof: "oneof_resource" },
    { no: 37, name: "document_manifest", kind: "message", T: DocumentManifest, oneof: "oneof_resource" },
    { no: 38, name: "document_reference", kind: "message", T: DocumentReference, oneof: "oneof_resource" },
    { no: 39, name: "eligibility_request", kind: "message", T: EligibilityRequest, oneof: "oneof_resource" },
    { no: 40, name: "eligibility_response", kind: "message", T: EligibilityResponse, oneof: "oneof_resource" },
    { no: 41, name: "encounter", kind: "message", T: Encounter, oneof: "oneof_resource" },
    { no: 42, name: "endpoint", kind: "message", T: Endpoint, oneof: "oneof_resource" },
    { no: 43, name: "enrollment_request", kind: "message", T: EnrollmentRequest, oneof: "oneof_resource" },
    { no: 44, name: "enrollment_response", kind: "message", T: EnrollmentResponse, oneof: "oneof_resource" },
    { no: 45, name: "episode_of_care", kind: "message", T: EpisodeOfCare, oneof: "oneof_resource" },
    { no: 46, name: "expansion_profile", kind: "message", T: ExpansionProfile, oneof: "oneof_resource" },
    { no: 47, name: "explanation_of_benefit", kind: "message", T: ExplanationOfBenefit, oneof: "oneof_resource" },
    { no: 48, name: "family_member_history", kind: "message", T: FamilyMemberHistory, oneof: "oneof_resource" },
    { no: 49, name: "flag", kind: "message", T: Flag, oneof: "oneof_resource" },
    { no: 50, name: "goal", kind: "message", T: Goal, oneof: "oneof_resource" },
    { no: 51, name: "graph_definition", kind: "message", T: GraphDefinition, oneof: "oneof_resource" },
    { no: 52, name: "group", kind: "message", T: Group, oneof: "oneof_resource" },
    { no: 53, name: "guidance_response", kind: "message", T: GuidanceResponse, oneof: "oneof_resource" },
    { no: 54, name: "healthcare_service", kind: "message", T: HealthcareService, oneof: "oneof_resource" },
    { no: 55, name: "imaging_manifest", kind: "message", T: ImagingManifest, oneof: "oneof_resource" },
    { no: 56, name: "imaging_study", kind: "message", T: ImagingStudy, oneof: "oneof_resource" },
    { no: 57, name: "immunization", kind: "message", T: Immunization, oneof: "oneof_resource" },
    { no: 58, name: "immunization_recommendation", kind: "message", T: ImmunizationRecommendation, oneof: "oneof_resource" },
    { no: 59, name: "implementation_guide", kind: "message", T: ImplementationGuide, oneof: "oneof_resource" },
    { no: 60, name: "library", kind: "message", T: Library, oneof: "oneof_resource" },
    { no: 61, name: "linkage", kind: "message", T: Linkage, oneof: "oneof_resource" },
    { no: 62, name: "list", kind: "message", T: List, oneof: "oneof_resource" },
    { no: 63, name: "location", kind: "message", T: Location, oneof: "oneof_resource" },
    { no: 64, name: "measure", kind: "message", T: Measure, oneof: "oneof_resource" },
    { no: 65, name: "measure_report", kind: "message", T: MeasureReport, oneof: "oneof_resource" },
    { no: 66, name: "media", kind: "message", T: Media, oneof: "oneof_resource" },
    { no: 67, name: "medication", kind: "message", T: Medication, oneof: "oneof_resource" },
    { no: 68, name: "medication_administration", kind: "message", T: MedicationAdministration, oneof: "oneof_resource" },
    { no: 69, name: "medication_dispense", kind: "message", T: MedicationDispense, oneof: "oneof_resource" },
    { no: 70, name: "medication_request", kind: "message", T: MedicationRequest, oneof: "oneof_resource" },
    { no: 71, name: "medication_statement", kind: "message", T: MedicationStatement, oneof: "oneof_resource" },
    { no: 72, name: "message_definition", kind: "message", T: MessageDefinition, oneof: "oneof_resource" },
    { no: 73, name: "message_header", kind: "message", T: MessageHeader, oneof: "oneof_resource" },
    { no: 74, name: "naming_system", kind: "message", T: NamingSystem, oneof: "oneof_resource" },
    { no: 75, name: "nutrition_order", kind: "message", T: NutritionOrder, oneof: "oneof_resource" },
    { no: 76, name: "observation", kind: "message", T: Observation, oneof: "oneof_resource" },
    { no: 77, name: "operation_definition", kind: "message", T: OperationDefinition, oneof: "oneof_resource" },
    { no: 78, name: "operation_outcome", kind: "message", T: OperationOutcome, oneof: "oneof_resource" },
    { no: 79, name: "organization", kind: "message", T: Organization, oneof: "oneof_resource" },
    { no: 80, name: "parameters", kind: "message", T: Parameters, oneof: "oneof_resource" },
    { no: 81, name: "patient", kind: "message", T: Patient, oneof: "oneof_resource" },
    { no: 82, name: "payment_notice", kind: "message", T: PaymentNotice, oneof: "oneof_resource" },
    { no: 83, name: "payment_reconciliation", kind: "message", T: PaymentReconciliation, oneof: "oneof_resource" },
    { no: 84, name: "person", kind: "message", T: Person, oneof: "oneof_resource" },
    { no: 85, name: "plan_definition", kind: "message", T: PlanDefinition, oneof: "oneof_resource" },
    { no: 86, name: "practitioner", kind: "message", T: Practitioner, oneof: "oneof_resource" },
    { no: 87, name: "practitioner_role", kind: "message", T: PractitionerRole, oneof: "oneof_resource" },
    { no: 88, name: "procedure", kind: "message", T: Procedure, oneof: "oneof_resource" },
    { no: 89, name: "procedure_request", kind: "message", T: ProcedureRequest, oneof: "oneof_resource" },
    { no: 90, name: "process_request", kind: "message", T: ProcessRequest, oneof: "oneof_resource" },
    { no: 91, name: "process_response", kind: "message", T: ProcessResponse, oneof: "oneof_resource" },
    { no: 92, name: "provenance", kind: "message", T: Provenance, oneof: "oneof_resource" },
    { no: 93, name: "questionnaire", kind: "message", T: Questionnaire, oneof: "oneof_resource" },
    { no: 94, name: "questionnaire_response", kind: "message", T: QuestionnaireResponse, oneof: "oneof_resource" },
    { no: 95, name: "referral_request", kind: "message", T: ReferralRequest, oneof: "oneof_resource" },
    { no: 96, name: "related_person", kind: "message", T: RelatedPerson, oneof: "oneof_resource" },
    { no: 97, name: "request_group", kind: "message", T: RequestGroup, oneof: "oneof_resource" },
    { no: 98, name: "research_study", kind: "message", T: ResearchStudy, oneof: "oneof_resource" },
    { no: 99, name: "research_subject", kind: "message", T: ResearchSubject, oneof: "oneof_resource" },
    { no: 100, name: "risk_assessment", kind: "message", T: RiskAssessment, oneof: "oneof_resource" },
    { no: 101, name: "schedule", kind: "message", T: Schedule, oneof: "oneof_resource" },
    { no: 102, name: "search_parameter", kind: "message", T: SearchParameter, oneof: "oneof_resource" },
    { no: 103, name: "sequence", kind: "message", T: Sequence, oneof: "oneof_resource" },
    { no: 104, name: "service_definition", kind: "message", T: ServiceDefinition, oneof: "oneof_resource" },
    { no: 105, name: "slot", kind: "message", T: Slot, oneof: "oneof_resource" },
    { no: 106, name: "specimen", kind: "message", T: Specimen, oneof: "oneof_resource" },
    { no: 107, name: "structure_definition", kind: "message", T: StructureDefinition, oneof: "oneof_resource" },
    { no: 108, name: "structure_map", kind: "message", T: StructureMap, oneof: "oneof_resource" },
    { no: 109, name: "subscription", kind: "message", T: Subscription, oneof: "oneof_resource" },
    { no: 110, name: "substance", kind: "message", T: Substance, oneof: "oneof_resource" },
    { no: 111, name: "supply_delivery", kind: "message", T: SupplyDelivery, oneof: "oneof_resource" },
    { no: 112, name: "supply_request", kind: "message", T: SupplyRequest, oneof: "oneof_resource" },
    { no: 113, name: "task", kind: "message", T: Task, oneof: "oneof_resource" },
    { no: 114, name: "test_report", kind: "message", T: TestReport, oneof: "oneof_resource" },
    { no: 115, name: "test_script", kind: "message", T: TestScript, oneof: "oneof_resource" },
    { no: 116, name: "value_set", kind: "message", T: ValueSet, oneof: "oneof_resource" },
    { no: 117, name: "vision_prescription", kind: "message", T: VisionPrescription, oneof: "oneof_resource" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContainedResource {
    return new ContainedResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContainedResource {
    return new ContainedResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContainedResource {
    return new ContainedResource().fromJsonString(jsonString, options);
  }

  static equals(a: ContainedResource | PlainMessage<ContainedResource> | undefined, b: ContainedResource | PlainMessage<ContainedResource> | undefined): boolean {
    return proto3.util.equals(ContainedResource, a, b);
  }
}

