//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/stu3/codes.proto (package google.fhir.stu3.proto, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Extension, String } from "./datatypes_pb.js";

/**
 * A type defined by FHIR that is an abstract type
 * See http://hl7.org/fhir/ValueSet/abstract-types
 *
 * @generated from message google.fhir.stu3.proto.AbstractTypeCode
 */
export class AbstractTypeCode extends Message<AbstractTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AbstractTypeCode.Value value = 1;
   */
  value = AbstractTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AbstractTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AbstractTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AbstractTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbstractTypeCode {
    return new AbstractTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbstractTypeCode {
    return new AbstractTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbstractTypeCode {
    return new AbstractTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AbstractTypeCode | PlainMessage<AbstractTypeCode> | undefined, b: AbstractTypeCode | PlainMessage<AbstractTypeCode> | undefined): boolean {
    return proto3.util.equals(AbstractTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AbstractTypeCode.Value
 */
export enum AbstractTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TYPE = 1;
   */
  TYPE = 1,

  /**
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AbstractTypeCode_Value)
proto3.util.setEnumType(AbstractTypeCode_Value, "google.fhir.stu3.proto.AbstractTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TYPE" },
  { no: 2, name: "ANY" },
]);

/**
 * How resource references can be aggregated.
 * See http://hl7.org/fhir/ValueSet/resource-aggregation-mode
 *
 * @generated from message google.fhir.stu3.proto.AggregationModeCode
 */
export class AggregationModeCode extends Message<AggregationModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AggregationModeCode.Value value = 1;
   */
  value = AggregationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AggregationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AggregationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AggregationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AggregationModeCode {
    return new AggregationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AggregationModeCode {
    return new AggregationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AggregationModeCode {
    return new AggregationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AggregationModeCode | PlainMessage<AggregationModeCode> | undefined, b: AggregationModeCode | PlainMessage<AggregationModeCode> | undefined): boolean {
    return proto3.util.equals(AggregationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AggregationModeCode.Value
 */
export enum AggregationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONTAINED = 1;
   */
  CONTAINED = 1,

  /**
   * @generated from enum value: REFERENCED = 2;
   */
  REFERENCED = 2,

  /**
   * @generated from enum value: BUNDLED = 3;
   */
  BUNDLED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AggregationModeCode_Value)
proto3.util.setEnumType(AggregationModeCode_Value, "google.fhir.stu3.proto.AggregationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONTAINED" },
  { no: 2, name: "REFERENCED" },
  { no: 3, name: "BUNDLED" },
]);

/**
 * Indication of the degree of conformance expectations associated with a
 * binding. See http://hl7.org/fhir/ValueSet/binding-strength
 *
 * @generated from message google.fhir.stu3.proto.BindingStrengthCode
 */
export class BindingStrengthCode extends Message<BindingStrengthCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.BindingStrengthCode.Value value = 1;
   */
  value = BindingStrengthCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<BindingStrengthCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.BindingStrengthCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(BindingStrengthCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindingStrengthCode {
    return new BindingStrengthCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindingStrengthCode {
    return new BindingStrengthCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindingStrengthCode {
    return new BindingStrengthCode().fromJsonString(jsonString, options);
  }

  static equals(a: BindingStrengthCode | PlainMessage<BindingStrengthCode> | undefined, b: BindingStrengthCode | PlainMessage<BindingStrengthCode> | undefined): boolean {
    return proto3.util.equals(BindingStrengthCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.BindingStrengthCode.Value
 */
export enum BindingStrengthCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUIRED = 1;
   */
  REQUIRED = 1,

  /**
   * @generated from enum value: EXTENSIBLE = 2;
   */
  EXTENSIBLE = 2,

  /**
   * @generated from enum value: PREFERRED = 3;
   */
  PREFERRED = 3,

  /**
   * @generated from enum value: EXAMPLE = 4;
   */
  EXAMPLE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(BindingStrengthCode_Value)
proto3.util.setEnumType(BindingStrengthCode_Value, "google.fhir.stu3.proto.BindingStrengthCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUIRED" },
  { no: 2, name: "EXTENSIBLE" },
  { no: 3, name: "PREFERRED" },
  { no: 4, name: "EXAMPLE" },
]);

/**
 * SHALL applications comply with this constraint?
 * See http://hl7.org/fhir/ValueSet/constraint-severity
 *
 * @generated from message google.fhir.stu3.proto.ConstraintSeverityCode
 */
export class ConstraintSeverityCode extends Message<ConstraintSeverityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConstraintSeverityCode.Value value = 1;
   */
  value = ConstraintSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConstraintSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConstraintSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConstraintSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConstraintSeverityCode {
    return new ConstraintSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConstraintSeverityCode {
    return new ConstraintSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConstraintSeverityCode {
    return new ConstraintSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConstraintSeverityCode | PlainMessage<ConstraintSeverityCode> | undefined, b: ConstraintSeverityCode | PlainMessage<ConstraintSeverityCode> | undefined): boolean {
    return proto3.util.equals(ConstraintSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConstraintSeverityCode.Value
 */
export enum ConstraintSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ERROR = 1;
   */
  ERROR = 1,

  /**
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConstraintSeverityCode_Value)
proto3.util.setEnumType(ConstraintSeverityCode_Value, "google.fhir.stu3.proto.ConstraintSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ERROR" },
  { no: 2, name: "WARNING" },
]);

/**
 * How slices are interpreted when evaluating an instance.
 * See http://hl7.org/fhir/ValueSet/resource-slicing-rules
 *
 * @generated from message google.fhir.stu3.proto.SlicingRulesCode
 */
export class SlicingRulesCode extends Message<SlicingRulesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SlicingRulesCode.Value value = 1;
   */
  value = SlicingRulesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SlicingRulesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SlicingRulesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SlicingRulesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlicingRulesCode {
    return new SlicingRulesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlicingRulesCode {
    return new SlicingRulesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlicingRulesCode {
    return new SlicingRulesCode().fromJsonString(jsonString, options);
  }

  static equals(a: SlicingRulesCode | PlainMessage<SlicingRulesCode> | undefined, b: SlicingRulesCode | PlainMessage<SlicingRulesCode> | undefined): boolean {
    return proto3.util.equals(SlicingRulesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SlicingRulesCode.Value
 */
export enum SlicingRulesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CLOSED = 1;
   */
  CLOSED = 1,

  /**
   * @generated from enum value: OPEN = 2;
   */
  OPEN = 2,

  /**
   * @generated from enum value: OPEN_AT_END = 3;
   */
  OPEN_AT_END = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SlicingRulesCode_Value)
proto3.util.setEnumType(SlicingRulesCode_Value, "google.fhir.stu3.proto.SlicingRulesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CLOSED" },
  { no: 2, name: "OPEN" },
  { no: 3, name: "OPEN_AT_END" },
]);

/**
 * How an element value is interpreted when discrimination is evaluated
 * See http://hl7.org/fhir/ValueSet/discriminator-type
 *
 * @generated from message google.fhir.stu3.proto.DiscriminatorTypeCode
 */
export class DiscriminatorTypeCode extends Message<DiscriminatorTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DiscriminatorTypeCode.Value value = 1;
   */
  value = DiscriminatorTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DiscriminatorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiscriminatorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DiscriminatorTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiscriminatorTypeCode {
    return new DiscriminatorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiscriminatorTypeCode {
    return new DiscriminatorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiscriminatorTypeCode {
    return new DiscriminatorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DiscriminatorTypeCode | PlainMessage<DiscriminatorTypeCode> | undefined, b: DiscriminatorTypeCode | PlainMessage<DiscriminatorTypeCode> | undefined): boolean {
    return proto3.util.equals(DiscriminatorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DiscriminatorTypeCode.Value
 */
export enum DiscriminatorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: VALUE = 1;
   */
  VALUE = 1,

  /**
   * @generated from enum value: EXISTS = 2;
   */
  EXISTS = 2,

  /**
   * @generated from enum value: PATTERN = 3;
   */
  PATTERN = 3,

  /**
   * @generated from enum value: TYPE = 4;
   */
  TYPE = 4,

  /**
   * @generated from enum value: PROFILE = 5;
   */
  PROFILE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(DiscriminatorTypeCode_Value)
proto3.util.setEnumType(DiscriminatorTypeCode_Value, "google.fhir.stu3.proto.DiscriminatorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "VALUE" },
  { no: 2, name: "EXISTS" },
  { no: 3, name: "PATTERN" },
  { no: 4, name: "TYPE" },
  { no: 5, name: "PROFILE" },
]);

/**
 * How a property is represented when serialized.
 * See http://hl7.org/fhir/ValueSet/property-representation
 *
 * @generated from message google.fhir.stu3.proto.PropertyRepresentationCode
 */
export class PropertyRepresentationCode extends Message<PropertyRepresentationCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PropertyRepresentationCode.Value value = 1;
   */
  value = PropertyRepresentationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PropertyRepresentationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PropertyRepresentationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PropertyRepresentationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PropertyRepresentationCode {
    return new PropertyRepresentationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PropertyRepresentationCode {
    return new PropertyRepresentationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PropertyRepresentationCode {
    return new PropertyRepresentationCode().fromJsonString(jsonString, options);
  }

  static equals(a: PropertyRepresentationCode | PlainMessage<PropertyRepresentationCode> | undefined, b: PropertyRepresentationCode | PlainMessage<PropertyRepresentationCode> | undefined): boolean {
    return proto3.util.equals(PropertyRepresentationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PropertyRepresentationCode.Value
 */
export enum PropertyRepresentationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: XML_ATTR = 1;
   */
  XML_ATTR = 1,

  /**
   * @generated from enum value: XML_TEXT = 2;
   */
  XML_TEXT = 2,

  /**
   * @generated from enum value: TYPE_ATTR = 3;
   */
  TYPE_ATTR = 3,

  /**
   * @generated from enum value: CDA_TEXT = 4;
   */
  CDA_TEXT = 4,

  /**
   * @generated from enum value: XHTML = 5;
   */
  XHTML = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(PropertyRepresentationCode_Value)
proto3.util.setEnumType(PropertyRepresentationCode_Value, "google.fhir.stu3.proto.PropertyRepresentationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "XML_ATTR" },
  { no: 2, name: "XML_TEXT" },
  { no: 3, name: "TYPE_ATTR" },
  { no: 4, name: "CDA_TEXT" },
  { no: 5, name: "XHTML" },
]);

/**
 * Whether a reference needs to be version specific or version independent, or
 * whether either can be used See
 * http://hl7.org/fhir/ValueSet/reference-version-rules
 *
 * @generated from message google.fhir.stu3.proto.ReferenceVersionRulesCode
 */
export class ReferenceVersionRulesCode extends Message<ReferenceVersionRulesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ReferenceVersionRulesCode.Value value = 1;
   */
  value = ReferenceVersionRulesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ReferenceVersionRulesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReferenceVersionRulesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ReferenceVersionRulesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceVersionRulesCode {
    return new ReferenceVersionRulesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceVersionRulesCode {
    return new ReferenceVersionRulesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceVersionRulesCode {
    return new ReferenceVersionRulesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReferenceVersionRulesCode | PlainMessage<ReferenceVersionRulesCode> | undefined, b: ReferenceVersionRulesCode | PlainMessage<ReferenceVersionRulesCode> | undefined): boolean {
    return proto3.util.equals(ReferenceVersionRulesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ReferenceVersionRulesCode.Value
 */
export enum ReferenceVersionRulesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EITHER = 1;
   */
  EITHER = 1,

  /**
   * @generated from enum value: INDEPENDENT = 2;
   */
  INDEPENDENT = 2,

  /**
   * @generated from enum value: SPECIFIC = 3;
   */
  SPECIFIC = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ReferenceVersionRulesCode_Value)
proto3.util.setEnumType(ReferenceVersionRulesCode_Value, "google.fhir.stu3.proto.ReferenceVersionRulesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EITHER" },
  { no: 2, name: "INDEPENDENT" },
  { no: 3, name: "SPECIFIC" },
]);

/**
 * Indicates whether the account is available to be used.
 * See http://hl7.org/fhir/ValueSet/account-status
 *
 * @generated from message google.fhir.stu3.proto.AccountStatusCode
 */
export class AccountStatusCode extends Message<AccountStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AccountStatusCode.Value value = 1;
   */
  value = AccountStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AccountStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AccountStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AccountStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountStatusCode {
    return new AccountStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountStatusCode {
    return new AccountStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountStatusCode {
    return new AccountStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AccountStatusCode | PlainMessage<AccountStatusCode> | undefined, b: AccountStatusCode | PlainMessage<AccountStatusCode> | undefined): boolean {
    return proto3.util.equals(AccountStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AccountStatusCode.Value
 */
export enum AccountStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AccountStatusCode_Value)
proto3.util.setEnumType(AccountStatusCode_Value, "google.fhir.stu3.proto.AccountStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * Defines behavior for an action or a group for how many times that item may
 * be repeated See http://hl7.org/fhir/ValueSet/action-cardinality-behavior
 *
 * @generated from message google.fhir.stu3.proto.ActionCardinalityBehaviorCode
 */
export class ActionCardinalityBehaviorCode extends Message<ActionCardinalityBehaviorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionCardinalityBehaviorCode.Value value = 1;
   */
  value = ActionCardinalityBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionCardinalityBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionCardinalityBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionCardinalityBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionCardinalityBehaviorCode {
    return new ActionCardinalityBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionCardinalityBehaviorCode {
    return new ActionCardinalityBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionCardinalityBehaviorCode {
    return new ActionCardinalityBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionCardinalityBehaviorCode | PlainMessage<ActionCardinalityBehaviorCode> | undefined, b: ActionCardinalityBehaviorCode | PlainMessage<ActionCardinalityBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionCardinalityBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionCardinalityBehaviorCode.Value
 */
export enum ActionCardinalityBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SINGLE = 1;
   */
  SINGLE = 1,

  /**
   * @generated from enum value: MULTIPLE = 2;
   */
  MULTIPLE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionCardinalityBehaviorCode_Value)
proto3.util.setEnumType(ActionCardinalityBehaviorCode_Value, "google.fhir.stu3.proto.ActionCardinalityBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SINGLE" },
  { no: 2, name: "MULTIPLE" },
]);

/**
 * Defines the kinds of conditions that can appear on actions
 * See http://hl7.org/fhir/ValueSet/action-condition-kind
 *
 * @generated from message google.fhir.stu3.proto.ActionConditionKindCode
 */
export class ActionConditionKindCode extends Message<ActionConditionKindCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionConditionKindCode.Value value = 1;
   */
  value = ActionConditionKindCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionConditionKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionConditionKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionConditionKindCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionConditionKindCode {
    return new ActionConditionKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionConditionKindCode {
    return new ActionConditionKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionConditionKindCode {
    return new ActionConditionKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionConditionKindCode | PlainMessage<ActionConditionKindCode> | undefined, b: ActionConditionKindCode | PlainMessage<ActionConditionKindCode> | undefined): boolean {
    return proto3.util.equals(ActionConditionKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionConditionKindCode.Value
 */
export enum ActionConditionKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: APPLICABILITY = 1;
   */
  APPLICABILITY = 1,

  /**
   * @generated from enum value: START = 2;
   */
  START = 2,

  /**
   * @generated from enum value: STOP = 3;
   */
  STOP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionConditionKindCode_Value)
proto3.util.setEnumType(ActionConditionKindCode_Value, "google.fhir.stu3.proto.ActionConditionKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "APPLICABILITY" },
  { no: 2, name: "START" },
  { no: 3, name: "STOP" },
]);

/**
 * Defines organization behavior of a group
 * See http://hl7.org/fhir/ValueSet/action-grouping-behavior
 *
 * @generated from message google.fhir.stu3.proto.ActionGroupingBehaviorCode
 */
export class ActionGroupingBehaviorCode extends Message<ActionGroupingBehaviorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionGroupingBehaviorCode.Value value = 1;
   */
  value = ActionGroupingBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionGroupingBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionGroupingBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionGroupingBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionGroupingBehaviorCode {
    return new ActionGroupingBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionGroupingBehaviorCode {
    return new ActionGroupingBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionGroupingBehaviorCode {
    return new ActionGroupingBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionGroupingBehaviorCode | PlainMessage<ActionGroupingBehaviorCode> | undefined, b: ActionGroupingBehaviorCode | PlainMessage<ActionGroupingBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionGroupingBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionGroupingBehaviorCode.Value
 */
export enum ActionGroupingBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: VISUAL_GROUP = 1;
   */
  VISUAL_GROUP = 1,

  /**
   * @generated from enum value: LOGICAL_GROUP = 2;
   */
  LOGICAL_GROUP = 2,

  /**
   * @generated from enum value: SENTENCE_GROUP = 3;
   */
  SENTENCE_GROUP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionGroupingBehaviorCode_Value)
proto3.util.setEnumType(ActionGroupingBehaviorCode_Value, "google.fhir.stu3.proto.ActionGroupingBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "VISUAL_GROUP" },
  { no: 2, name: "LOGICAL_GROUP" },
  { no: 3, name: "SENTENCE_GROUP" },
]);

/**
 * List of allowable action which this resource can request.
 * See http://hl7.org/fhir/ValueSet/actionlist
 *
 * @generated from message google.fhir.stu3.proto.ActionListCode
 */
export class ActionListCode extends Message<ActionListCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionListCode.Value value = 1;
   */
  value = ActionListCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionListCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionListCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionListCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionListCode {
    return new ActionListCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionListCode {
    return new ActionListCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionListCode {
    return new ActionListCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionListCode | PlainMessage<ActionListCode> | undefined, b: ActionListCode | PlainMessage<ActionListCode> | undefined): boolean {
    return proto3.util.equals(ActionListCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionListCode.Value
 */
export enum ActionListCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CANCEL = 1;
   */
  CANCEL = 1,

  /**
   * @generated from enum value: POLL = 2;
   */
  POLL = 2,

  /**
   * @generated from enum value: REPROCESS = 3;
   */
  REPROCESS = 3,

  /**
   * @generated from enum value: STATUS = 4;
   */
  STATUS = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionListCode_Value)
proto3.util.setEnumType(ActionListCode_Value, "google.fhir.stu3.proto.ActionListCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CANCEL" },
  { no: 2, name: "POLL" },
  { no: 3, name: "REPROCESS" },
  { no: 4, name: "STATUS" },
]);

/**
 * The type of participant for the action
 * See http://hl7.org/fhir/ValueSet/action-participant-type
 *
 * @generated from message google.fhir.stu3.proto.ActionParticipantTypeCode
 */
export class ActionParticipantTypeCode extends Message<ActionParticipantTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionParticipantTypeCode.Value value = 1;
   */
  value = ActionParticipantTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionParticipantTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionParticipantTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionParticipantTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionParticipantTypeCode {
    return new ActionParticipantTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionParticipantTypeCode {
    return new ActionParticipantTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionParticipantTypeCode {
    return new ActionParticipantTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionParticipantTypeCode | PlainMessage<ActionParticipantTypeCode> | undefined, b: ActionParticipantTypeCode | PlainMessage<ActionParticipantTypeCode> | undefined): boolean {
    return proto3.util.equals(ActionParticipantTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionParticipantTypeCode.Value
 */
export enum ActionParticipantTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PATIENT = 1;
   */
  PATIENT = 1,

  /**
   * @generated from enum value: PRACTITIONER = 2;
   */
  PRACTITIONER = 2,

  /**
   * @generated from enum value: RELATED_PERSON = 3;
   */
  RELATED_PERSON = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionParticipantTypeCode_Value)
proto3.util.setEnumType(ActionParticipantTypeCode_Value, "google.fhir.stu3.proto.ActionParticipantTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PATIENT" },
  { no: 2, name: "PRACTITIONER" },
  { no: 3, name: "RELATED_PERSON" },
]);

/**
 * Defines selection frequency behavior for an action or group
 * See http://hl7.org/fhir/ValueSet/action-precheck-behavior
 *
 * @generated from message google.fhir.stu3.proto.ActionPrecheckBehaviorCode
 */
export class ActionPrecheckBehaviorCode extends Message<ActionPrecheckBehaviorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionPrecheckBehaviorCode.Value value = 1;
   */
  value = ActionPrecheckBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionPrecheckBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionPrecheckBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionPrecheckBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionPrecheckBehaviorCode {
    return new ActionPrecheckBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionPrecheckBehaviorCode {
    return new ActionPrecheckBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionPrecheckBehaviorCode {
    return new ActionPrecheckBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionPrecheckBehaviorCode | PlainMessage<ActionPrecheckBehaviorCode> | undefined, b: ActionPrecheckBehaviorCode | PlainMessage<ActionPrecheckBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionPrecheckBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionPrecheckBehaviorCode.Value
 */
export enum ActionPrecheckBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: YES = 1;
   */
  YES = 1,

  /**
   * @generated from enum value: NO = 2;
   */
  NO = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionPrecheckBehaviorCode_Value)
proto3.util.setEnumType(ActionPrecheckBehaviorCode_Value, "google.fhir.stu3.proto.ActionPrecheckBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "YES" },
  { no: 2, name: "NO" },
]);

/**
 * Defines the types of relationships between actions
 * See http://hl7.org/fhir/ValueSet/action-relationship-type
 *
 * @generated from message google.fhir.stu3.proto.ActionRelationshipTypeCode
 */
export class ActionRelationshipTypeCode extends Message<ActionRelationshipTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionRelationshipTypeCode.Value value = 1;
   */
  value = ActionRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionRelationshipTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionRelationshipTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionRelationshipTypeCode {
    return new ActionRelationshipTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionRelationshipTypeCode {
    return new ActionRelationshipTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionRelationshipTypeCode {
    return new ActionRelationshipTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionRelationshipTypeCode | PlainMessage<ActionRelationshipTypeCode> | undefined, b: ActionRelationshipTypeCode | PlainMessage<ActionRelationshipTypeCode> | undefined): boolean {
    return proto3.util.equals(ActionRelationshipTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionRelationshipTypeCode.Value
 */
export enum ActionRelationshipTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BEFORE_START = 1;
   */
  BEFORE_START = 1,

  /**
   * @generated from enum value: BEFORE = 2;
   */
  BEFORE = 2,

  /**
   * @generated from enum value: BEFORE_END = 3;
   */
  BEFORE_END = 3,

  /**
   * @generated from enum value: CONCURRENT_WITH_START = 4;
   */
  CONCURRENT_WITH_START = 4,

  /**
   * @generated from enum value: CONCURRENT = 5;
   */
  CONCURRENT = 5,

  /**
   * @generated from enum value: CONCURRENT_WITH_END = 6;
   */
  CONCURRENT_WITH_END = 6,

  /**
   * @generated from enum value: AFTER_START = 7;
   */
  AFTER_START = 7,

  /**
   * @generated from enum value: AFTER = 8;
   */
  AFTER = 8,

  /**
   * @generated from enum value: AFTER_END = 9;
   */
  AFTER_END = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionRelationshipTypeCode_Value)
proto3.util.setEnumType(ActionRelationshipTypeCode_Value, "google.fhir.stu3.proto.ActionRelationshipTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BEFORE_START" },
  { no: 2, name: "BEFORE" },
  { no: 3, name: "BEFORE_END" },
  { no: 4, name: "CONCURRENT_WITH_START" },
  { no: 5, name: "CONCURRENT" },
  { no: 6, name: "CONCURRENT_WITH_END" },
  { no: 7, name: "AFTER_START" },
  { no: 8, name: "AFTER" },
  { no: 9, name: "AFTER_END" },
]);

/**
 * Defines requiredness behavior for selecting an action or an action group
 * See http://hl7.org/fhir/ValueSet/action-required-behavior
 *
 * @generated from message google.fhir.stu3.proto.ActionRequiredBehaviorCode
 */
export class ActionRequiredBehaviorCode extends Message<ActionRequiredBehaviorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionRequiredBehaviorCode.Value value = 1;
   */
  value = ActionRequiredBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionRequiredBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionRequiredBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionRequiredBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionRequiredBehaviorCode {
    return new ActionRequiredBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionRequiredBehaviorCode {
    return new ActionRequiredBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionRequiredBehaviorCode {
    return new ActionRequiredBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionRequiredBehaviorCode | PlainMessage<ActionRequiredBehaviorCode> | undefined, b: ActionRequiredBehaviorCode | PlainMessage<ActionRequiredBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionRequiredBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionRequiredBehaviorCode.Value
 */
export enum ActionRequiredBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MUST = 1;
   */
  MUST = 1,

  /**
   * @generated from enum value: COULD = 2;
   */
  COULD = 2,

  /**
   * @generated from enum value: MUST_UNLESS_DOCUMENTED = 3;
   */
  MUST_UNLESS_DOCUMENTED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionRequiredBehaviorCode_Value)
proto3.util.setEnumType(ActionRequiredBehaviorCode_Value, "google.fhir.stu3.proto.ActionRequiredBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MUST" },
  { no: 2, name: "COULD" },
  { no: 3, name: "MUST_UNLESS_DOCUMENTED" },
]);

/**
 * Defines selection behavior of a group
 * See http://hl7.org/fhir/ValueSet/action-selection-behavior
 *
 * @generated from message google.fhir.stu3.proto.ActionSelectionBehaviorCode
 */
export class ActionSelectionBehaviorCode extends Message<ActionSelectionBehaviorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionSelectionBehaviorCode.Value value = 1;
   */
  value = ActionSelectionBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionSelectionBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionSelectionBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionSelectionBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionSelectionBehaviorCode {
    return new ActionSelectionBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionSelectionBehaviorCode {
    return new ActionSelectionBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionSelectionBehaviorCode {
    return new ActionSelectionBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionSelectionBehaviorCode | PlainMessage<ActionSelectionBehaviorCode> | undefined, b: ActionSelectionBehaviorCode | PlainMessage<ActionSelectionBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionSelectionBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionSelectionBehaviorCode.Value
 */
export enum ActionSelectionBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ANY = 1;
   */
  ANY = 1,

  /**
   * @generated from enum value: ALL = 2;
   */
  ALL = 2,

  /**
   * @generated from enum value: ALL_OR_NONE = 3;
   */
  ALL_OR_NONE = 3,

  /**
   * @generated from enum value: EXACTLY_ONE = 4;
   */
  EXACTLY_ONE = 4,

  /**
   * @generated from enum value: AT_MOST_ONE = 5;
   */
  AT_MOST_ONE = 5,

  /**
   * @generated from enum value: ONE_OR_MORE = 6;
   */
  ONE_OR_MORE = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionSelectionBehaviorCode_Value)
proto3.util.setEnumType(ActionSelectionBehaviorCode_Value, "google.fhir.stu3.proto.ActionSelectionBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ANY" },
  { no: 2, name: "ALL" },
  { no: 3, name: "ALL_OR_NONE" },
  { no: 4, name: "EXACTLY_ONE" },
  { no: 5, name: "AT_MOST_ONE" },
  { no: 6, name: "ONE_OR_MORE" },
]);

/**
 * The type of action to be performed
 * See http://hl7.org/fhir/ValueSet/action-type
 *
 * @generated from message google.fhir.stu3.proto.ActionTypeCode
 */
export class ActionTypeCode extends Message<ActionTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActionTypeCode.Value value = 1;
   */
  value = ActionTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionTypeCode {
    return new ActionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionTypeCode {
    return new ActionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionTypeCode {
    return new ActionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionTypeCode | PlainMessage<ActionTypeCode> | undefined, b: ActionTypeCode | PlainMessage<ActionTypeCode> | undefined): boolean {
    return proto3.util.equals(ActionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActionTypeCode.Value
 */
export enum ActionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: UPDATE = 2;
   */
  UPDATE = 2,

  /**
   * @generated from enum value: REMOVE = 3;
   */
  REMOVE = 3,

  /**
   * @generated from enum value: FIRE_EVENT = 4;
   */
  FIRE_EVENT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionTypeCode_Value)
proto3.util.setEnumType(ActionTypeCode_Value, "google.fhir.stu3.proto.ActionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CREATE" },
  { no: 2, name: "UPDATE" },
  { no: 3, name: "REMOVE" },
  { no: 4, name: "FIRE_EVENT" },
]);

/**
 * High-level categorization of the type of activity
 * See http://hl7.org/fhir/ValueSet/activity-definition-category
 *
 * @generated from message google.fhir.stu3.proto.ActivityDefinitionCategoryCode
 */
export class ActivityDefinitionCategoryCode extends Message<ActivityDefinitionCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ActivityDefinitionCategoryCode.Value value = 1;
   */
  value = ActivityDefinitionCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ActivityDefinitionCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ActivityDefinitionCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActivityDefinitionCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActivityDefinitionCategoryCode {
    return new ActivityDefinitionCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActivityDefinitionCategoryCode {
    return new ActivityDefinitionCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActivityDefinitionCategoryCode {
    return new ActivityDefinitionCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActivityDefinitionCategoryCode | PlainMessage<ActivityDefinitionCategoryCode> | undefined, b: ActivityDefinitionCategoryCode | PlainMessage<ActivityDefinitionCategoryCode> | undefined): boolean {
    return proto3.util.equals(ActivityDefinitionCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ActivityDefinitionCategoryCode.Value
 */
export enum ActivityDefinitionCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TREATMENT = 1;
   */
  TREATMENT = 1,

  /**
   * @generated from enum value: EDUCATION = 2;
   */
  EDUCATION = 2,

  /**
   * @generated from enum value: ASSESSMENT = 3;
   */
  ASSESSMENT = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActivityDefinitionCategoryCode_Value)
proto3.util.setEnumType(ActivityDefinitionCategoryCode_Value, "google.fhir.stu3.proto.ActivityDefinitionCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TREATMENT" },
  { no: 2, name: "EDUCATION" },
  { no: 3, name: "ASSESSMENT" },
]);

/**
 * The gender of a person used for administrative purposes.
 * See http://hl7.org/fhir/ValueSet/administrative-gender
 *
 * @generated from message google.fhir.stu3.proto.AdministrativeGenderCode
 */
export class AdministrativeGenderCode extends Message<AdministrativeGenderCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode.Value value = 1;
   */
  value = AdministrativeGenderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdministrativeGenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdministrativeGenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdministrativeGenderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdministrativeGenderCode {
    return new AdministrativeGenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdministrativeGenderCode {
    return new AdministrativeGenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdministrativeGenderCode {
    return new AdministrativeGenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdministrativeGenderCode | PlainMessage<AdministrativeGenderCode> | undefined, b: AdministrativeGenderCode | PlainMessage<AdministrativeGenderCode> | undefined): boolean {
    return proto3.util.equals(AdministrativeGenderCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdministrativeGenderCode.Value
 */
export enum AdministrativeGenderCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MALE = 1;
   */
  MALE = 1,

  /**
   * @generated from enum value: FEMALE = 2;
   */
  FEMALE = 2,

  /**
   * @generated from enum value: OTHER = 3;
   */
  OTHER = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AdministrativeGenderCode_Value)
proto3.util.setEnumType(AdministrativeGenderCode_Value, "google.fhir.stu3.proto.AdministrativeGenderCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MALE" },
  { no: 2, name: "FEMALE" },
  { no: 3, name: "OTHER" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Overall categorization of the event, e.g. real or potential
 * See http://hl7.org/fhir/ValueSet/adverse-event-category
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventCategoryCode
 */
export class AdverseEventCategoryCode extends Message<AdverseEventCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventCategoryCode.Value value = 1;
   */
  value = AdverseEventCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventCategoryCode {
    return new AdverseEventCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventCategoryCode {
    return new AdverseEventCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventCategoryCode {
    return new AdverseEventCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventCategoryCode | PlainMessage<AdverseEventCategoryCode> | undefined, b: AdverseEventCategoryCode | PlainMessage<AdverseEventCategoryCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventCategoryCode.Value
 */
export enum AdverseEventCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AE = 1;
   */
  AE = 1,

  /**
   * @generated from enum value: PAE = 2;
   */
  PAE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventCategoryCode_Value)
proto3.util.setEnumType(AdverseEventCategoryCode_Value, "google.fhir.stu3.proto.AdverseEventCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AE" },
  { no: 2, name: "PAE" },
]);

/**
 * TODO
 * See http://hl7.org/fhir/ValueSet/adverse-event-causality-assess
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode
 */
export class AdverseEventCausalityAssessmentCode extends Message<AdverseEventCausalityAssessmentCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.Value value = 1;
   */
  value = AdverseEventCausalityAssessmentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventCausalityAssessmentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventCausalityAssessmentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventCausalityAssessmentCode {
    return new AdverseEventCausalityAssessmentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventCausalityAssessmentCode {
    return new AdverseEventCausalityAssessmentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventCausalityAssessmentCode {
    return new AdverseEventCausalityAssessmentCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventCausalityAssessmentCode | PlainMessage<AdverseEventCausalityAssessmentCode> | undefined, b: AdverseEventCausalityAssessmentCode | PlainMessage<AdverseEventCausalityAssessmentCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventCausalityAssessmentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.Value
 */
export enum AdverseEventCausalityAssessmentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ASSESS1 = 1;
   */
  ASSESS1 = 1,

  /**
   * @generated from enum value: ASSESS2 = 2;
   */
  ASSESS2 = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventCausalityAssessmentCode_Value)
proto3.util.setEnumType(AdverseEventCausalityAssessmentCode_Value, "google.fhir.stu3.proto.AdverseEventCausalityAssessmentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ASSESS1" },
  { no: 2, name: "ASSESS2" },
]);

/**
 * TODO
 * See http://hl7.org/fhir/ValueSet/adverse-event-causality
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventCausalityCode
 */
export class AdverseEventCausalityCode extends Message<AdverseEventCausalityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventCausalityCode.Value value = 1;
   */
  value = AdverseEventCausalityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventCausalityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventCausalityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventCausalityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventCausalityCode {
    return new AdverseEventCausalityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventCausalityCode {
    return new AdverseEventCausalityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventCausalityCode {
    return new AdverseEventCausalityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventCausalityCode | PlainMessage<AdverseEventCausalityCode> | undefined, b: AdverseEventCausalityCode | PlainMessage<AdverseEventCausalityCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventCausalityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventCausalityCode.Value
 */
export enum AdverseEventCausalityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CAUSALITY1 = 1;
   */
  CAUSALITY1 = 1,

  /**
   * @generated from enum value: CAUSALITY2 = 2;
   */
  CAUSALITY2 = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventCausalityCode_Value)
proto3.util.setEnumType(AdverseEventCausalityCode_Value, "google.fhir.stu3.proto.AdverseEventCausalityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CAUSALITY1" },
  { no: 2, name: "CAUSALITY2" },
]);

/**
 * TODO
 * See http://hl7.org/fhir/ValueSet/adverse-event-causality-method
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventCausalityMethodCode
 */
export class AdverseEventCausalityMethodCode extends Message<AdverseEventCausalityMethodCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventCausalityMethodCode.Value value = 1;
   */
  value = AdverseEventCausalityMethodCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventCausalityMethodCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventCausalityMethodCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventCausalityMethodCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventCausalityMethodCode {
    return new AdverseEventCausalityMethodCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventCausalityMethodCode {
    return new AdverseEventCausalityMethodCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventCausalityMethodCode {
    return new AdverseEventCausalityMethodCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventCausalityMethodCode | PlainMessage<AdverseEventCausalityMethodCode> | undefined, b: AdverseEventCausalityMethodCode | PlainMessage<AdverseEventCausalityMethodCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventCausalityMethodCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventCausalityMethodCode.Value
 */
export enum AdverseEventCausalityMethodCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: METHOD1 = 1;
   */
  METHOD1 = 1,

  /**
   * @generated from enum value: METHOD2 = 2;
   */
  METHOD2 = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventCausalityMethodCode_Value)
proto3.util.setEnumType(AdverseEventCausalityMethodCode_Value, "google.fhir.stu3.proto.AdverseEventCausalityMethodCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "METHOD1" },
  { no: 2, name: "METHOD2" },
]);

/**
 * TODO
 * See http://hl7.org/fhir/ValueSet/adverse-event-causality-result
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventCausalityResultCode
 */
export class AdverseEventCausalityResultCode extends Message<AdverseEventCausalityResultCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventCausalityResultCode.Value value = 1;
   */
  value = AdverseEventCausalityResultCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventCausalityResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventCausalityResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventCausalityResultCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventCausalityResultCode {
    return new AdverseEventCausalityResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventCausalityResultCode {
    return new AdverseEventCausalityResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventCausalityResultCode {
    return new AdverseEventCausalityResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventCausalityResultCode | PlainMessage<AdverseEventCausalityResultCode> | undefined, b: AdverseEventCausalityResultCode | PlainMessage<AdverseEventCausalityResultCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventCausalityResultCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventCausalityResultCode.Value
 */
export enum AdverseEventCausalityResultCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RESULT1 = 1;
   */
  RESULT1 = 1,

  /**
   * @generated from enum value: RESULT2 = 2;
   */
  RESULT2 = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventCausalityResultCode_Value)
proto3.util.setEnumType(AdverseEventCausalityResultCode_Value, "google.fhir.stu3.proto.AdverseEventCausalityResultCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RESULT1" },
  { no: 2, name: "RESULT2" },
]);

/**
 * TODO (and should this be required?)
 * See http://hl7.org/fhir/ValueSet/adverse-event-outcome
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventOutcomeCode
 */
export class AdverseEventOutcomeCode extends Message<AdverseEventOutcomeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventOutcomeCode.Value value = 1;
   */
  value = AdverseEventOutcomeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventOutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventOutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventOutcomeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventOutcomeCode {
    return new AdverseEventOutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventOutcomeCode {
    return new AdverseEventOutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventOutcomeCode {
    return new AdverseEventOutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventOutcomeCode | PlainMessage<AdverseEventOutcomeCode> | undefined, b: AdverseEventOutcomeCode | PlainMessage<AdverseEventOutcomeCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventOutcomeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventOutcomeCode.Value
 */
export enum AdverseEventOutcomeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RESOLVED = 1;
   */
  RESOLVED = 1,

  /**
   * @generated from enum value: RECOVERING = 2;
   */
  RECOVERING = 2,

  /**
   * @generated from enum value: ONGOING = 3;
   */
  ONGOING = 3,

  /**
   * @generated from enum value: RESOLVEDWITHSEQUELAE = 4;
   */
  RESOLVEDWITHSEQUELAE = 4,

  /**
   * @generated from enum value: FATAL = 5;
   */
  FATAL = 5,

  /**
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventOutcomeCode_Value)
proto3.util.setEnumType(AdverseEventOutcomeCode_Value, "google.fhir.stu3.proto.AdverseEventOutcomeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RESOLVED" },
  { no: 2, name: "RECOVERING" },
  { no: 3, name: "ONGOING" },
  { no: 4, name: "RESOLVEDWITHSEQUELAE" },
  { no: 5, name: "FATAL" },
  { no: 6, name: "UNKNOWN" },
]);

/**
 * Overall seriousness of this event for the patient
 * See http://hl7.org/fhir/ValueSet/adverse-event-seriousness
 *
 * @generated from message google.fhir.stu3.proto.AdverseEventSeriousnessCode
 */
export class AdverseEventSeriousnessCode extends Message<AdverseEventSeriousnessCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdverseEventSeriousnessCode.Value value = 1;
   */
  value = AdverseEventSeriousnessCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEventSeriousnessCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdverseEventSeriousnessCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventSeriousnessCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventSeriousnessCode {
    return new AdverseEventSeriousnessCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventSeriousnessCode {
    return new AdverseEventSeriousnessCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventSeriousnessCode {
    return new AdverseEventSeriousnessCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventSeriousnessCode | PlainMessage<AdverseEventSeriousnessCode> | undefined, b: AdverseEventSeriousnessCode | PlainMessage<AdverseEventSeriousnessCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventSeriousnessCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdverseEventSeriousnessCode.Value
 */
export enum AdverseEventSeriousnessCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MILD = 1;
   */
  MILD = 1,

  /**
   * @generated from enum value: MODERATE = 2;
   */
  MODERATE = 2,

  /**
   * @generated from enum value: SEVERE = 3;
   */
  SEVERE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventSeriousnessCode_Value)
proto3.util.setEnumType(AdverseEventSeriousnessCode_Value, "google.fhir.stu3.proto.AdverseEventSeriousnessCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MILD" },
  { no: 2, name: "MODERATE" },
  { no: 3, name: "SEVERE" },
]);

/**
 * The risk of an adverse reaction (allergy or intolerance) for this patient
 * upon exposure to the substance (including pharmaceutical products). See
 * http://hl7.org/fhir/ValueSet/allerg-intol-substance-exp-risk
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode
 */
export class AllergyIntoleranceSubstanceExposureRiskCode extends Message<AllergyIntoleranceSubstanceExposureRiskCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.Value value = 1;
   */
  value = AllergyIntoleranceSubstanceExposureRiskCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceSubstanceExposureRiskCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceSubstanceExposureRiskCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceSubstanceExposureRiskCode {
    return new AllergyIntoleranceSubstanceExposureRiskCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceSubstanceExposureRiskCode {
    return new AllergyIntoleranceSubstanceExposureRiskCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceSubstanceExposureRiskCode {
    return new AllergyIntoleranceSubstanceExposureRiskCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceSubstanceExposureRiskCode | PlainMessage<AllergyIntoleranceSubstanceExposureRiskCode> | undefined, b: AllergyIntoleranceSubstanceExposureRiskCode | PlainMessage<AllergyIntoleranceSubstanceExposureRiskCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceSubstanceExposureRiskCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.Value
 */
export enum AllergyIntoleranceSubstanceExposureRiskCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: KNOWN_REACTION_RISK = 1;
   */
  KNOWN_REACTION_RISK = 1,

  /**
   * @generated from enum value: NO_KNOWN_REACTION_RISK = 2;
   */
  NO_KNOWN_REACTION_RISK = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceSubstanceExposureRiskCode_Value)
proto3.util.setEnumType(AllergyIntoleranceSubstanceExposureRiskCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceSubstanceExposureRiskCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "KNOWN_REACTION_RISK" },
  { no: 2, name: "NO_KNOWN_REACTION_RISK" },
]);

/**
 * The clinical status of the allergy or intolerance.
 * See http://hl7.org/fhir/ValueSet/allergy-clinical-status
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode
 */
export class AllergyIntoleranceClinicalStatusCode extends Message<AllergyIntoleranceClinicalStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.Value value = 1;
   */
  value = AllergyIntoleranceClinicalStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceClinicalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceClinicalStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceClinicalStatusCode {
    return new AllergyIntoleranceClinicalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceClinicalStatusCode {
    return new AllergyIntoleranceClinicalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceClinicalStatusCode {
    return new AllergyIntoleranceClinicalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceClinicalStatusCode | PlainMessage<AllergyIntoleranceClinicalStatusCode> | undefined, b: AllergyIntoleranceClinicalStatusCode | PlainMessage<AllergyIntoleranceClinicalStatusCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceClinicalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.Value
 */
export enum AllergyIntoleranceClinicalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: RESOLVED = 3;
   */
  RESOLVED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceClinicalStatusCode_Value)
proto3.util.setEnumType(AllergyIntoleranceClinicalStatusCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "RESOLVED" },
]);

/**
 * Category of an identified substance.
 * See http://hl7.org/fhir/ValueSet/allergy-intolerance-category
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceCategoryCode
 */
export class AllergyIntoleranceCategoryCode extends Message<AllergyIntoleranceCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.Value value = 1;
   */
  value = AllergyIntoleranceCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCategoryCode {
    return new AllergyIntoleranceCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCategoryCode {
    return new AllergyIntoleranceCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCategoryCode {
    return new AllergyIntoleranceCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCategoryCode | PlainMessage<AllergyIntoleranceCategoryCode> | undefined, b: AllergyIntoleranceCategoryCode | PlainMessage<AllergyIntoleranceCategoryCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.Value
 */
export enum AllergyIntoleranceCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FOOD = 1;
   */
  FOOD = 1,

  /**
   * @generated from enum value: MEDICATION = 2;
   */
  MEDICATION = 2,

  /**
   * @generated from enum value: ENVIRONMENT = 3;
   */
  ENVIRONMENT = 3,

  /**
   * @generated from enum value: BIOLOGIC = 4;
   */
  BIOLOGIC = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceCategoryCode_Value)
proto3.util.setEnumType(AllergyIntoleranceCategoryCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FOOD" },
  { no: 2, name: "MEDICATION" },
  { no: 3, name: "ENVIRONMENT" },
  { no: 4, name: "BIOLOGIC" },
]);

/**
 * Estimate of the potential clinical harm, or seriousness, of a reaction to
 * an identified substance. See
 * http://hl7.org/fhir/ValueSet/allergy-intolerance-criticality
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode
 */
export class AllergyIntoleranceCriticalityCode extends Message<AllergyIntoleranceCriticalityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.Value value = 1;
   */
  value = AllergyIntoleranceCriticalityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceCriticalityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceCriticalityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCriticalityCode {
    return new AllergyIntoleranceCriticalityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCriticalityCode {
    return new AllergyIntoleranceCriticalityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCriticalityCode {
    return new AllergyIntoleranceCriticalityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCriticalityCode | PlainMessage<AllergyIntoleranceCriticalityCode> | undefined, b: AllergyIntoleranceCriticalityCode | PlainMessage<AllergyIntoleranceCriticalityCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCriticalityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.Value
 */
export enum AllergyIntoleranceCriticalityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LOW = 1;
   */
  LOW = 1,

  /**
   * @generated from enum value: HIGH = 2;
   */
  HIGH = 2,

  /**
   * @generated from enum value: UNABLE_TO_ASSESS = 3;
   */
  UNABLE_TO_ASSESS = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceCriticalityCode_Value)
proto3.util.setEnumType(AllergyIntoleranceCriticalityCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LOW" },
  { no: 2, name: "HIGH" },
  { no: 3, name: "UNABLE_TO_ASSESS" },
]);

/**
 * Identification of the underlying physiological mechanism for a Reaction
 * Risk. See http://hl7.org/fhir/ValueSet/allergy-intolerance-type
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceTypeCode
 */
export class AllergyIntoleranceTypeCode extends Message<AllergyIntoleranceTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceTypeCode.Value value = 1;
   */
  value = AllergyIntoleranceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceTypeCode {
    return new AllergyIntoleranceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceTypeCode {
    return new AllergyIntoleranceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceTypeCode {
    return new AllergyIntoleranceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceTypeCode | PlainMessage<AllergyIntoleranceTypeCode> | undefined, b: AllergyIntoleranceTypeCode | PlainMessage<AllergyIntoleranceTypeCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceTypeCode.Value
 */
export enum AllergyIntoleranceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALLERGY = 1;
   */
  ALLERGY = 1,

  /**
   * @generated from enum value: INTOLERANCE = 2;
   */
  INTOLERANCE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceTypeCode_Value)
proto3.util.setEnumType(AllergyIntoleranceTypeCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALLERGY" },
  { no: 2, name: "INTOLERANCE" },
]);

/**
 * Assertion about certainty associated with a propensity, or potential risk,
 * of a reaction to the identified substance. See
 * http://hl7.org/fhir/ValueSet/allergy-verification-status
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode
 */
export class AllergyIntoleranceVerificationStatusCode extends Message<AllergyIntoleranceVerificationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.Value value = 1;
   */
  value = AllergyIntoleranceVerificationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceVerificationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceVerificationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceVerificationStatusCode {
    return new AllergyIntoleranceVerificationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceVerificationStatusCode {
    return new AllergyIntoleranceVerificationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceVerificationStatusCode {
    return new AllergyIntoleranceVerificationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceVerificationStatusCode | PlainMessage<AllergyIntoleranceVerificationStatusCode> | undefined, b: AllergyIntoleranceVerificationStatusCode | PlainMessage<AllergyIntoleranceVerificationStatusCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceVerificationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.Value
 */
export enum AllergyIntoleranceVerificationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNCONFIRMED = 1;
   */
  UNCONFIRMED = 1,

  /**
   * @generated from enum value: CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * @generated from enum value: REFUTED = 3;
   */
  REFUTED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceVerificationStatusCode_Value)
proto3.util.setEnumType(AllergyIntoleranceVerificationStatusCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNCONFIRMED" },
  { no: 2, name: "CONFIRMED" },
  { no: 3, name: "REFUTED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * the current state of the animal's reproductive organs. See
 * http://hl7.org/fhir/ValueSet/animal-genderstatus
 *
 * @generated from message google.fhir.stu3.proto.GenderStatusCode
 */
export class GenderStatusCode extends Message<GenderStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GenderStatusCode.Value value = 1;
   */
  value = GenderStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GenderStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GenderStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GenderStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenderStatusCode {
    return new GenderStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenderStatusCode {
    return new GenderStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenderStatusCode {
    return new GenderStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GenderStatusCode | PlainMessage<GenderStatusCode> | undefined, b: GenderStatusCode | PlainMessage<GenderStatusCode> | undefined): boolean {
    return proto3.util.equals(GenderStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GenderStatusCode.Value
 */
export enum GenderStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NEUTERED = 1;
   */
  NEUTERED = 1,

  /**
   * @generated from enum value: INTACT = 2;
   */
  INTACT = 2,

  /**
   * @generated from enum value: UNKNOWN = 3;
   */
  UNKNOWN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GenderStatusCode_Value)
proto3.util.setEnumType(GenderStatusCode_Value, "google.fhir.stu3.proto.GenderStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NEUTERED" },
  { no: 2, name: "INTACT" },
  { no: 3, name: "UNKNOWN" },
]);

/**
 * The free/busy status of an appointment.
 * See http://hl7.org/fhir/ValueSet/appointmentstatus
 *
 * @generated from message google.fhir.stu3.proto.AppointmentStatusCode
 */
export class AppointmentStatusCode extends Message<AppointmentStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AppointmentStatusCode.Value value = 1;
   */
  value = AppointmentStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AppointmentStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AppointmentStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AppointmentStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppointmentStatusCode {
    return new AppointmentStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppointmentStatusCode {
    return new AppointmentStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppointmentStatusCode {
    return new AppointmentStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AppointmentStatusCode | PlainMessage<AppointmentStatusCode> | undefined, b: AppointmentStatusCode | PlainMessage<AppointmentStatusCode> | undefined): boolean {
    return proto3.util.equals(AppointmentStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AppointmentStatusCode.Value
 */
export enum AppointmentStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: BOOKED = 3;
   */
  BOOKED = 3,

  /**
   * @generated from enum value: ARRIVED = 4;
   */
  ARRIVED = 4,

  /**
   * @generated from enum value: FULFILLED = 5;
   */
  FULFILLED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: NOSHOW = 7;
   */
  NOSHOW = 7,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 8;
   */
  ENTERED_IN_ERROR = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(AppointmentStatusCode_Value)
proto3.util.setEnumType(AppointmentStatusCode_Value, "google.fhir.stu3.proto.AppointmentStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "BOOKED" },
  { no: 4, name: "ARRIVED" },
  { no: 5, name: "FULFILLED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "NOSHOW" },
  { no: 8, name: "ENTERED_IN_ERROR" },
]);

/**
 * The type of direction to use for assertion.
 * See http://hl7.org/fhir/ValueSet/assert-direction-codes
 *
 * @generated from message google.fhir.stu3.proto.AssertionDirectionTypeCode
 */
export class AssertionDirectionTypeCode extends Message<AssertionDirectionTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AssertionDirectionTypeCode.Value value = 1;
   */
  value = AssertionDirectionTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AssertionDirectionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AssertionDirectionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AssertionDirectionTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssertionDirectionTypeCode {
    return new AssertionDirectionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssertionDirectionTypeCode {
    return new AssertionDirectionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssertionDirectionTypeCode {
    return new AssertionDirectionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AssertionDirectionTypeCode | PlainMessage<AssertionDirectionTypeCode> | undefined, b: AssertionDirectionTypeCode | PlainMessage<AssertionDirectionTypeCode> | undefined): boolean {
    return proto3.util.equals(AssertionDirectionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AssertionDirectionTypeCode.Value
 */
export enum AssertionDirectionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RESPONSE = 1;
   */
  RESPONSE = 1,

  /**
   * @generated from enum value: REQUEST = 2;
   */
  REQUEST = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AssertionDirectionTypeCode_Value)
proto3.util.setEnumType(AssertionDirectionTypeCode_Value, "google.fhir.stu3.proto.AssertionDirectionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RESPONSE" },
  { no: 2, name: "REQUEST" },
]);

/**
 * The type of operator to use for assertion.
 * See http://hl7.org/fhir/ValueSet/assert-operator-codes
 *
 * @generated from message google.fhir.stu3.proto.AssertionOperatorTypeCode
 */
export class AssertionOperatorTypeCode extends Message<AssertionOperatorTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AssertionOperatorTypeCode.Value value = 1;
   */
  value = AssertionOperatorTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AssertionOperatorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AssertionOperatorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AssertionOperatorTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssertionOperatorTypeCode {
    return new AssertionOperatorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssertionOperatorTypeCode {
    return new AssertionOperatorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssertionOperatorTypeCode {
    return new AssertionOperatorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AssertionOperatorTypeCode | PlainMessage<AssertionOperatorTypeCode> | undefined, b: AssertionOperatorTypeCode | PlainMessage<AssertionOperatorTypeCode> | undefined): boolean {
    return proto3.util.equals(AssertionOperatorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AssertionOperatorTypeCode.Value
 */
export enum AssertionOperatorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EQUALS = 1;
   */
  EQUALS = 1,

  /**
   * @generated from enum value: NOTEQUALS = 2;
   */
  NOTEQUALS = 2,

  /**
   * @generated from enum value: IN = 3;
   */
  IN = 3,

  /**
   * @generated from enum value: NOTIN = 4;
   */
  NOTIN = 4,

  /**
   * @generated from enum value: GREATERTHAN = 5;
   */
  GREATERTHAN = 5,

  /**
   * @generated from enum value: LESSTHAN = 6;
   */
  LESSTHAN = 6,

  /**
   * @generated from enum value: EMPTY = 7;
   */
  EMPTY = 7,

  /**
   * @generated from enum value: NOTEMPTY = 8;
   */
  NOTEMPTY = 8,

  /**
   * @generated from enum value: CONTAINS = 9;
   */
  CONTAINS = 9,

  /**
   * @generated from enum value: NOTCONTAINS = 10;
   */
  NOTCONTAINS = 10,

  /**
   * @generated from enum value: EVAL = 11;
   */
  EVAL = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(AssertionOperatorTypeCode_Value)
proto3.util.setEnumType(AssertionOperatorTypeCode_Value, "google.fhir.stu3.proto.AssertionOperatorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EQUALS" },
  { no: 2, name: "NOTEQUALS" },
  { no: 3, name: "IN" },
  { no: 4, name: "NOTIN" },
  { no: 5, name: "GREATERTHAN" },
  { no: 6, name: "LESSTHAN" },
  { no: 7, name: "EMPTY" },
  { no: 8, name: "NOTEMPTY" },
  { no: 9, name: "CONTAINS" },
  { no: 10, name: "NOTCONTAINS" },
  { no: 11, name: "EVAL" },
]);

/**
 * The type of response code to use for assertion.
 * See http://hl7.org/fhir/ValueSet/assert-response-code-types
 *
 * @generated from message google.fhir.stu3.proto.AssertionResponseTypesCode
 */
export class AssertionResponseTypesCode extends Message<AssertionResponseTypesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AssertionResponseTypesCode.Value value = 1;
   */
  value = AssertionResponseTypesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AssertionResponseTypesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AssertionResponseTypesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AssertionResponseTypesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssertionResponseTypesCode {
    return new AssertionResponseTypesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssertionResponseTypesCode {
    return new AssertionResponseTypesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssertionResponseTypesCode {
    return new AssertionResponseTypesCode().fromJsonString(jsonString, options);
  }

  static equals(a: AssertionResponseTypesCode | PlainMessage<AssertionResponseTypesCode> | undefined, b: AssertionResponseTypesCode | PlainMessage<AssertionResponseTypesCode> | undefined): boolean {
    return proto3.util.equals(AssertionResponseTypesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AssertionResponseTypesCode.Value
 */
export enum AssertionResponseTypesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OKAY = 1;
   */
  OKAY = 1,

  /**
   * @generated from enum value: CREATED = 2;
   */
  CREATED = 2,

  /**
   * @generated from enum value: NOCONTENT = 3;
   */
  NOCONTENT = 3,

  /**
   * @generated from enum value: NOTMODIFIED = 4;
   */
  NOTMODIFIED = 4,

  /**
   * @generated from enum value: BAD = 5;
   */
  BAD = 5,

  /**
   * @generated from enum value: FORBIDDEN = 6;
   */
  FORBIDDEN = 6,

  /**
   * @generated from enum value: NOTFOUND = 7;
   */
  NOTFOUND = 7,

  /**
   * @generated from enum value: METHODNOTALLOWED = 8;
   */
  METHODNOTALLOWED = 8,

  /**
   * @generated from enum value: CONFLICT = 9;
   */
  CONFLICT = 9,

  /**
   * @generated from enum value: GONE = 10;
   */
  GONE = 10,

  /**
   * @generated from enum value: PRECONDITIONFAILED = 11;
   */
  PRECONDITIONFAILED = 11,

  /**
   * @generated from enum value: UNPROCESSABLE = 12;
   */
  UNPROCESSABLE = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(AssertionResponseTypesCode_Value)
proto3.util.setEnumType(AssertionResponseTypesCode_Value, "google.fhir.stu3.proto.AssertionResponseTypesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OKAY" },
  { no: 2, name: "CREATED" },
  { no: 3, name: "NOCONTENT" },
  { no: 4, name: "NOTMODIFIED" },
  { no: 5, name: "BAD" },
  { no: 6, name: "FORBIDDEN" },
  { no: 7, name: "NOTFOUND" },
  { no: 8, name: "METHODNOTALLOWED" },
  { no: 9, name: "CONFLICT" },
  { no: 10, name: "GONE" },
  { no: 11, name: "PRECONDITIONFAILED" },
  { no: 12, name: "UNPROCESSABLE" },
]);

/**
 * Indicator for type of action performed during the event that generated the
 * event See http://hl7.org/fhir/ValueSet/audit-event-action
 *
 * @generated from message google.fhir.stu3.proto.AuditEventActionCode
 */
export class AuditEventActionCode extends Message<AuditEventActionCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AuditEventActionCode.Value value = 1;
   */
  value = AuditEventActionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AuditEventActionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEventActionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AuditEventActionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventActionCode {
    return new AuditEventActionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventActionCode {
    return new AuditEventActionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventActionCode {
    return new AuditEventActionCode().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventActionCode | PlainMessage<AuditEventActionCode> | undefined, b: AuditEventActionCode | PlainMessage<AuditEventActionCode> | undefined): boolean {
    return proto3.util.equals(AuditEventActionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AuditEventActionCode.Value
 */
export enum AuditEventActionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: C = 1;
   */
  C = 1,

  /**
   * @generated from enum value: R = 2;
   */
  R = 2,

  /**
   * @generated from enum value: U = 3;
   */
  U = 3,

  /**
   * @generated from enum value: D = 4;
   */
  D = 4,

  /**
   * @generated from enum value: E = 5;
   */
  E = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(AuditEventActionCode_Value)
proto3.util.setEnumType(AuditEventActionCode_Value, "google.fhir.stu3.proto.AuditEventActionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "C" },
  { no: 2, name: "R" },
  { no: 3, name: "U" },
  { no: 4, name: "D" },
  { no: 5, name: "E" },
]);

/**
 * Indicates whether the event succeeded or failed
 * See http://hl7.org/fhir/ValueSet/audit-event-outcome
 *
 * @generated from message google.fhir.stu3.proto.AuditEventOutcomeCode
 */
export class AuditEventOutcomeCode extends Message<AuditEventOutcomeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AuditEventOutcomeCode.Value value = 1;
   */
  value = AuditEventOutcomeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AuditEventOutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEventOutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AuditEventOutcomeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventOutcomeCode {
    return new AuditEventOutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventOutcomeCode {
    return new AuditEventOutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventOutcomeCode {
    return new AuditEventOutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventOutcomeCode | PlainMessage<AuditEventOutcomeCode> | undefined, b: AuditEventOutcomeCode | PlainMessage<AuditEventOutcomeCode> | undefined): boolean {
    return proto3.util.equals(AuditEventOutcomeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AuditEventOutcomeCode.Value
 */
export enum AuditEventOutcomeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: MINOR_FAILURE = 2;
   */
  MINOR_FAILURE = 2,

  /**
   * @generated from enum value: SERIOUS_FAILURE = 3;
   */
  SERIOUS_FAILURE = 3,

  /**
   * @generated from enum value: MAJOR_FAILURE = 4;
   */
  MAJOR_FAILURE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AuditEventOutcomeCode_Value)
proto3.util.setEnumType(AuditEventOutcomeCode_Value, "google.fhir.stu3.proto.AuditEventOutcomeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SUCCESS" },
  { no: 2, name: "MINOR_FAILURE" },
  { no: 3, name: "SERIOUS_FAILURE" },
  { no: 4, name: "MAJOR_FAILURE" },
]);

/**
 * This value set defines codes for resources not yet supported by (or which
 * will never be supported by) FHIR.  Many of the codes listed here will
 * eventually be turned into official resources.  However, there is no
 * guarantee that any particular resource will be created nor that the scope
 * will be exactly as defined by the codes presented here.  Codes in this set
 * will be deprecated if/when formal resources are defined that encompass
 * these concepts. See http://hl7.org/fhir/ValueSet/basic-resource-type
 *
 * @generated from message google.fhir.stu3.proto.BasicResourceTypesCode
 */
export class BasicResourceTypesCode extends Message<BasicResourceTypesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.BasicResourceTypesCode.Value value = 1;
   */
  value = BasicResourceTypesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<BasicResourceTypesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.BasicResourceTypesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(BasicResourceTypesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicResourceTypesCode {
    return new BasicResourceTypesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicResourceTypesCode {
    return new BasicResourceTypesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicResourceTypesCode {
    return new BasicResourceTypesCode().fromJsonString(jsonString, options);
  }

  static equals(a: BasicResourceTypesCode | PlainMessage<BasicResourceTypesCode> | undefined, b: BasicResourceTypesCode | PlainMessage<BasicResourceTypesCode> | undefined): boolean {
    return proto3.util.equals(BasicResourceTypesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.BasicResourceTypesCode.Value
 */
export enum BasicResourceTypesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONSENT = 1;
   */
  CONSENT = 1,

  /**
   * @generated from enum value: REFERRAL = 2;
   */
  REFERRAL = 2,

  /**
   * @generated from enum value: ADVEVENT = 3;
   */
  ADVEVENT = 3,

  /**
   * @generated from enum value: APTMTREQ = 4;
   */
  APTMTREQ = 4,

  /**
   * @generated from enum value: TRANSFER = 5;
   */
  TRANSFER = 5,

  /**
   * @generated from enum value: DIET = 6;
   */
  DIET = 6,

  /**
   * @generated from enum value: ADMINACT = 7;
   */
  ADMINACT = 7,

  /**
   * @generated from enum value: EXPOSURE = 8;
   */
  EXPOSURE = 8,

  /**
   * @generated from enum value: INVESTIGATION = 9;
   */
  INVESTIGATION = 9,

  /**
   * @generated from enum value: ACCOUNT = 10;
   */
  ACCOUNT = 10,

  /**
   * @generated from enum value: INVOICE = 11;
   */
  INVOICE = 11,

  /**
   * @generated from enum value: ADJUDICAT = 12;
   */
  ADJUDICAT = 12,

  /**
   * @generated from enum value: PREDETREQ = 13;
   */
  PREDETREQ = 13,

  /**
   * @generated from enum value: PREDETERMINE = 14;
   */
  PREDETERMINE = 14,

  /**
   * @generated from enum value: STUDY = 15;
   */
  STUDY = 15,

  /**
   * @generated from enum value: PROTOCOL = 16;
   */
  PROTOCOL = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(BasicResourceTypesCode_Value)
proto3.util.setEnumType(BasicResourceTypesCode_Value, "google.fhir.stu3.proto.BasicResourceTypesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONSENT" },
  { no: 2, name: "REFERRAL" },
  { no: 3, name: "ADVEVENT" },
  { no: 4, name: "APTMTREQ" },
  { no: 5, name: "TRANSFER" },
  { no: 6, name: "DIET" },
  { no: 7, name: "ADMINACT" },
  { no: 8, name: "EXPOSURE" },
  { no: 9, name: "INVESTIGATION" },
  { no: 10, name: "ACCOUNT" },
  { no: 11, name: "INVOICE" },
  { no: 12, name: "ADJUDICAT" },
  { no: 13, name: "PREDETREQ" },
  { no: 14, name: "PREDETERMINE" },
  { no: 15, name: "STUDY" },
  { no: 16, name: "PROTOCOL" },
]);

/**
 * Indicates the purpose of a bundle - how it was intended to be used.
 * See http://hl7.org/fhir/ValueSet/bundle-type
 *
 * @generated from message google.fhir.stu3.proto.BundleTypeCode
 */
export class BundleTypeCode extends Message<BundleTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.BundleTypeCode.Value value = 1;
   */
  value = BundleTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<BundleTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.BundleTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(BundleTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BundleTypeCode {
    return new BundleTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BundleTypeCode {
    return new BundleTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BundleTypeCode {
    return new BundleTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: BundleTypeCode | PlainMessage<BundleTypeCode> | undefined, b: BundleTypeCode | PlainMessage<BundleTypeCode> | undefined): boolean {
    return proto3.util.equals(BundleTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.BundleTypeCode.Value
 */
export enum BundleTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DOCUMENT = 1;
   */
  DOCUMENT = 1,

  /**
   * @generated from enum value: MESSAGE = 2;
   */
  MESSAGE = 2,

  /**
   * @generated from enum value: TRANSACTION = 3;
   */
  TRANSACTION = 3,

  /**
   * @generated from enum value: TRANSACTION_RESPONSE = 4;
   */
  TRANSACTION_RESPONSE = 4,

  /**
   * @generated from enum value: BATCH = 5;
   */
  BATCH = 5,

  /**
   * @generated from enum value: BATCH_RESPONSE = 6;
   */
  BATCH_RESPONSE = 6,

  /**
   * @generated from enum value: HISTORY = 7;
   */
  HISTORY = 7,

  /**
   * @generated from enum value: SEARCHSET = 8;
   */
  SEARCHSET = 8,

  /**
   * @generated from enum value: COLLECTION = 9;
   */
  COLLECTION = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(BundleTypeCode_Value)
proto3.util.setEnumType(BundleTypeCode_Value, "google.fhir.stu3.proto.BundleTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DOCUMENT" },
  { no: 2, name: "MESSAGE" },
  { no: 3, name: "TRANSACTION" },
  { no: 4, name: "TRANSACTION_RESPONSE" },
  { no: 5, name: "BATCH" },
  { no: 6, name: "BATCH_RESPONSE" },
  { no: 7, name: "HISTORY" },
  { no: 8, name: "SEARCHSET" },
  { no: 9, name: "COLLECTION" },
]);

/**
 * How a capability statement is intended to be used.
 * See http://hl7.org/fhir/ValueSet/capability-statement-kind
 *
 * @generated from message google.fhir.stu3.proto.CapabilityStatementKindCode
 */
export class CapabilityStatementKindCode extends Message<CapabilityStatementKindCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CapabilityStatementKindCode.Value value = 1;
   */
  value = CapabilityStatementKindCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CapabilityStatementKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CapabilityStatementKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CapabilityStatementKindCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementKindCode {
    return new CapabilityStatementKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementKindCode {
    return new CapabilityStatementKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementKindCode {
    return new CapabilityStatementKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementKindCode | PlainMessage<CapabilityStatementKindCode> | undefined, b: CapabilityStatementKindCode | PlainMessage<CapabilityStatementKindCode> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CapabilityStatementKindCode.Value
 */
export enum CapabilityStatementKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: CAPABILITY = 2;
   */
  CAPABILITY = 2,

  /**
   * @generated from enum value: REQUIREMENTS = 3;
   */
  REQUIREMENTS = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(CapabilityStatementKindCode_Value)
proto3.util.setEnumType(CapabilityStatementKindCode_Value, "google.fhir.stu3.proto.CapabilityStatementKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTANCE" },
  { no: 2, name: "CAPABILITY" },
  { no: 3, name: "REQUIREMENTS" },
]);

/**
 * High-level categorization of the type of activity in a care plan.
 * See http://hl7.org/fhir/ValueSet/care-plan-activity-category
 *
 * @generated from message google.fhir.stu3.proto.CarePlanActivityCategoryCode
 */
export class CarePlanActivityCategoryCode extends Message<CarePlanActivityCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CarePlanActivityCategoryCode.Value value = 1;
   */
  value = CarePlanActivityCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlanActivityCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlanActivityCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanActivityCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlanActivityCategoryCode {
    return new CarePlanActivityCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlanActivityCategoryCode {
    return new CarePlanActivityCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlanActivityCategoryCode {
    return new CarePlanActivityCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlanActivityCategoryCode | PlainMessage<CarePlanActivityCategoryCode> | undefined, b: CarePlanActivityCategoryCode | PlainMessage<CarePlanActivityCategoryCode> | undefined): boolean {
    return proto3.util.equals(CarePlanActivityCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CarePlanActivityCategoryCode.Value
 */
export enum CarePlanActivityCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DIET = 1;
   */
  DIET = 1,

  /**
   * @generated from enum value: DRUG = 2;
   */
  DRUG = 2,

  /**
   * @generated from enum value: ENCOUNTER = 3;
   */
  ENCOUNTER = 3,

  /**
   * @generated from enum value: OBSERVATION = 4;
   */
  OBSERVATION = 4,

  /**
   * @generated from enum value: PROCEDURE = 5;
   */
  PROCEDURE = 5,

  /**
   * @generated from enum value: SUPPLY = 6;
   */
  SUPPLY = 6,

  /**
   * @generated from enum value: OTHER = 7;
   */
  OTHER = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(CarePlanActivityCategoryCode_Value)
proto3.util.setEnumType(CarePlanActivityCategoryCode_Value, "google.fhir.stu3.proto.CarePlanActivityCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DIET" },
  { no: 2, name: "DRUG" },
  { no: 3, name: "ENCOUNTER" },
  { no: 4, name: "OBSERVATION" },
  { no: 5, name: "PROCEDURE" },
  { no: 6, name: "SUPPLY" },
  { no: 7, name: "OTHER" },
]);

/**
 * Indicates where the activity is at in its overall life cycle.
 * See http://hl7.org/fhir/ValueSet/care-plan-activity-status
 *
 * @generated from message google.fhir.stu3.proto.CarePlanActivityStatusCode
 */
export class CarePlanActivityStatusCode extends Message<CarePlanActivityStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CarePlanActivityStatusCode.Value value = 1;
   */
  value = CarePlanActivityStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlanActivityStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlanActivityStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanActivityStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlanActivityStatusCode {
    return new CarePlanActivityStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlanActivityStatusCode {
    return new CarePlanActivityStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlanActivityStatusCode {
    return new CarePlanActivityStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlanActivityStatusCode | PlainMessage<CarePlanActivityStatusCode> | undefined, b: CarePlanActivityStatusCode | PlainMessage<CarePlanActivityStatusCode> | undefined): boolean {
    return proto3.util.equals(CarePlanActivityStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CarePlanActivityStatusCode.Value
 */
export enum CarePlanActivityStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_STARTED = 1;
   */
  NOT_STARTED = 1,

  /**
   * @generated from enum value: SCHEDULED = 2;
   */
  SCHEDULED = 2,

  /**
   * @generated from enum value: IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,

  /**
   * @generated from enum value: ON_HOLD = 4;
   */
  ON_HOLD = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(CarePlanActivityStatusCode_Value)
proto3.util.setEnumType(CarePlanActivityStatusCode_Value, "google.fhir.stu3.proto.CarePlanActivityStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_STARTED" },
  { no: 2, name: "SCHEDULED" },
  { no: 3, name: "IN_PROGRESS" },
  { no: 4, name: "ON_HOLD" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Codes indicating the degree of authority/intentionality associated with a
 * care plan See http://hl7.org/fhir/ValueSet/care-plan-intent
 *
 * @generated from message google.fhir.stu3.proto.CarePlanIntentCode
 */
export class CarePlanIntentCode extends Message<CarePlanIntentCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CarePlanIntentCode.Value value = 1;
   */
  value = CarePlanIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlanIntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlanIntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlanIntentCode {
    return new CarePlanIntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlanIntentCode {
    return new CarePlanIntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlanIntentCode {
    return new CarePlanIntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlanIntentCode | PlainMessage<CarePlanIntentCode> | undefined, b: CarePlanIntentCode | PlainMessage<CarePlanIntentCode> | undefined): boolean {
    return proto3.util.equals(CarePlanIntentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CarePlanIntentCode.Value
 */
export enum CarePlanIntentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSAL = 1;
   */
  PROPOSAL = 1,

  /**
   * @generated from enum value: PLAN = 2;
   */
  PLAN = 2,

  /**
   * @generated from enum value: ORDER = 3;
   */
  ORDER = 3,

  /**
   * @generated from enum value: OPTION = 4;
   */
  OPTION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CarePlanIntentCode_Value)
proto3.util.setEnumType(CarePlanIntentCode_Value, "google.fhir.stu3.proto.CarePlanIntentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSAL" },
  { no: 2, name: "PLAN" },
  { no: 3, name: "ORDER" },
  { no: 4, name: "OPTION" },
]);

/**
 * Indicates whether the plan is currently being acted upon, represents future
 * intentions or is now a historical record. See
 * http://hl7.org/fhir/ValueSet/care-plan-status
 *
 * @generated from message google.fhir.stu3.proto.CarePlanStatusCode
 */
export class CarePlanStatusCode extends Message<CarePlanStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CarePlanStatusCode.Value value = 1;
   */
  value = CarePlanStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlanStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CarePlanStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlanStatusCode {
    return new CarePlanStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlanStatusCode {
    return new CarePlanStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlanStatusCode {
    return new CarePlanStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlanStatusCode | PlainMessage<CarePlanStatusCode> | undefined, b: CarePlanStatusCode | PlainMessage<CarePlanStatusCode> | undefined): boolean {
    return proto3.util.equals(CarePlanStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CarePlanStatusCode.Value
 */
export enum CarePlanStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(CarePlanStatusCode_Value)
proto3.util.setEnumType(CarePlanStatusCode_Value, "google.fhir.stu3.proto.CarePlanStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "COMPLETED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Indicates the type of care team.
 * See http://hl7.org/fhir/ValueSet/care-team-category
 *
 * @generated from message google.fhir.stu3.proto.CareTeamCategoryCode
 */
export class CareTeamCategoryCode extends Message<CareTeamCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CareTeamCategoryCode.Value value = 1;
   */
  value = CareTeamCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CareTeamCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CareTeamCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CareTeamCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CareTeamCategoryCode {
    return new CareTeamCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CareTeamCategoryCode {
    return new CareTeamCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CareTeamCategoryCode {
    return new CareTeamCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: CareTeamCategoryCode | PlainMessage<CareTeamCategoryCode> | undefined, b: CareTeamCategoryCode | PlainMessage<CareTeamCategoryCode> | undefined): boolean {
    return proto3.util.equals(CareTeamCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CareTeamCategoryCode.Value
 */
export enum CareTeamCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EVENT = 1;
   */
  EVENT = 1,

  /**
   * @generated from enum value: ENCOUNTER = 2;
   */
  ENCOUNTER = 2,

  /**
   * @generated from enum value: EPISODE = 3;
   */
  EPISODE = 3,

  /**
   * @generated from enum value: LONGITUDINAL = 4;
   */
  LONGITUDINAL = 4,

  /**
   * @generated from enum value: CONDITION = 5;
   */
  CONDITION = 5,

  /**
   * @generated from enum value: CLINICAL_RESEARCH = 6;
   */
  CLINICAL_RESEARCH = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(CareTeamCategoryCode_Value)
proto3.util.setEnumType(CareTeamCategoryCode_Value, "google.fhir.stu3.proto.CareTeamCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EVENT" },
  { no: 2, name: "ENCOUNTER" },
  { no: 3, name: "EPISODE" },
  { no: 4, name: "LONGITUDINAL" },
  { no: 5, name: "CONDITION" },
  { no: 6, name: "CLINICAL_RESEARCH" },
]);

/**
 * Indicates the status of the care team.
 * See http://hl7.org/fhir/ValueSet/care-team-status
 *
 * @generated from message google.fhir.stu3.proto.CareTeamStatusCode
 */
export class CareTeamStatusCode extends Message<CareTeamStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CareTeamStatusCode.Value value = 1;
   */
  value = CareTeamStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CareTeamStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CareTeamStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CareTeamStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CareTeamStatusCode {
    return new CareTeamStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CareTeamStatusCode {
    return new CareTeamStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CareTeamStatusCode {
    return new CareTeamStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CareTeamStatusCode | PlainMessage<CareTeamStatusCode> | undefined, b: CareTeamStatusCode | PlainMessage<CareTeamStatusCode> | undefined): boolean {
    return proto3.util.equals(CareTeamStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CareTeamStatusCode.Value
 */
export enum CareTeamStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: INACTIVE = 4;
   */
  INACTIVE = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(CareTeamStatusCode_Value)
proto3.util.setEnumType(CareTeamStatusCode_Value, "google.fhir.stu3.proto.CareTeamStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "INACTIVE" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * Codes identifying the stage lifecycle stage of a ChargeItem
 * See http://hl7.org/fhir/ValueSet/chargeitem-status
 *
 * @generated from message google.fhir.stu3.proto.ChargeItemStatusCode
 */
export class ChargeItemStatusCode extends Message<ChargeItemStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ChargeItemStatusCode.Value value = 1;
   */
  value = ChargeItemStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ChargeItemStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ChargeItemStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ChargeItemStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItemStatusCode {
    return new ChargeItemStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItemStatusCode {
    return new ChargeItemStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItemStatusCode {
    return new ChargeItemStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItemStatusCode | PlainMessage<ChargeItemStatusCode> | undefined, b: ChargeItemStatusCode | PlainMessage<ChargeItemStatusCode> | undefined): boolean {
    return proto3.util.equals(ChargeItemStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ChargeItemStatusCode.Value
 */
export enum ChargeItemStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: BILLABLE = 2;
   */
  BILLABLE = 2,

  /**
   * @generated from enum value: NOT_BILLABLE = 3;
   */
  NOT_BILLABLE = 3,

  /**
   * @generated from enum value: ABORTED = 4;
   */
  ABORTED = 4,

  /**
   * @generated from enum value: BILLED = 5;
   */
  BILLED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(ChargeItemStatusCode_Value)
proto3.util.setEnumType(ChargeItemStatusCode_Value, "google.fhir.stu3.proto.ChargeItemStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "BILLABLE" },
  { no: 3, name: "NOT_BILLABLE" },
  { no: 4, name: "ABORTED" },
  { no: 5, name: "BILLED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Direction in which lists of question options should be displayed
 * See http://hl7.org/fhir/ValueSet/choice-list-orientation
 *
 * @generated from message google.fhir.stu3.proto.ChoiceListOrientationCode
 */
export class ChoiceListOrientationCode extends Message<ChoiceListOrientationCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ChoiceListOrientationCode.Value value = 1;
   */
  value = ChoiceListOrientationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ChoiceListOrientationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ChoiceListOrientationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ChoiceListOrientationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChoiceListOrientationCode {
    return new ChoiceListOrientationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChoiceListOrientationCode {
    return new ChoiceListOrientationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChoiceListOrientationCode {
    return new ChoiceListOrientationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ChoiceListOrientationCode | PlainMessage<ChoiceListOrientationCode> | undefined, b: ChoiceListOrientationCode | PlainMessage<ChoiceListOrientationCode> | undefined): boolean {
    return proto3.util.equals(ChoiceListOrientationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ChoiceListOrientationCode.Value
 */
export enum ChoiceListOrientationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HORIZONTAL = 1;
   */
  HORIZONTAL = 1,

  /**
   * @generated from enum value: VERTICAL = 2;
   */
  VERTICAL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ChoiceListOrientationCode_Value)
proto3.util.setEnumType(ChoiceListOrientationCode_Value, "google.fhir.stu3.proto.ChoiceListOrientationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HORIZONTAL" },
  { no: 2, name: "VERTICAL" },
]);

/**
 * Complete, proposed, exploratory, other
 * See http://hl7.org/fhir/ValueSet/claim-use
 *
 * @generated from message google.fhir.stu3.proto.UseCode
 */
export class UseCode extends Message<UseCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.UseCode.Value value = 1;
   */
  value = UseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UseCode {
    return new UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UseCode {
    return new UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UseCode {
    return new UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: UseCode | PlainMessage<UseCode> | undefined, b: UseCode | PlainMessage<UseCode> | undefined): boolean {
    return proto3.util.equals(UseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.UseCode.Value
 */
export enum UseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,

  /**
   * @generated from enum value: PROPOSED = 2;
   */
  PROPOSED = 2,

  /**
   * @generated from enum value: EXPLORATORY = 3;
   */
  EXPLORATORY = 3,

  /**
   * @generated from enum value: OTHER = 4;
   */
  OTHER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(UseCode_Value)
proto3.util.setEnumType(UseCode_Value, "google.fhir.stu3.proto.UseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPLETE" },
  { no: 2, name: "PROPOSED" },
  { no: 3, name: "EXPLORATORY" },
  { no: 4, name: "OTHER" },
]);

/**
 * Identifies whether a useContext represents a context or classification for
 * the element See http://hl7.org/fhir/ValueSet/classification-or-context
 *
 * @generated from message google.fhir.stu3.proto.ClassificationOrContextCode
 */
export class ClassificationOrContextCode extends Message<ClassificationOrContextCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ClassificationOrContextCode.Value value = 1;
   */
  value = ClassificationOrContextCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ClassificationOrContextCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClassificationOrContextCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ClassificationOrContextCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassificationOrContextCode {
    return new ClassificationOrContextCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassificationOrContextCode {
    return new ClassificationOrContextCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassificationOrContextCode {
    return new ClassificationOrContextCode().fromJsonString(jsonString, options);
  }

  static equals(a: ClassificationOrContextCode | PlainMessage<ClassificationOrContextCode> | undefined, b: ClassificationOrContextCode | PlainMessage<ClassificationOrContextCode> | undefined): boolean {
    return proto3.util.equals(ClassificationOrContextCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ClassificationOrContextCode.Value
 */
export enum ClassificationOrContextCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CLASSIFICATION = 1;
   */
  CLASSIFICATION = 1,

  /**
   * @generated from enum value: CONTEXT = 2;
   */
  CONTEXT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ClassificationOrContextCode_Value)
proto3.util.setEnumType(ClassificationOrContextCode_Value, "google.fhir.stu3.proto.ClassificationOrContextCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CLASSIFICATION" },
  { no: 2, name: "CONTEXT" },
]);

/**
 * The workflow state of a clinical impression.
 * See http://hl7.org/fhir/ValueSet/clinical-impression-status
 *
 * @generated from message google.fhir.stu3.proto.ClinicalImpressionStatusCode
 */
export class ClinicalImpressionStatusCode extends Message<ClinicalImpressionStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ClinicalImpressionStatusCode.Value value = 1;
   */
  value = ClinicalImpressionStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ClinicalImpressionStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClinicalImpressionStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ClinicalImpressionStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClinicalImpressionStatusCode {
    return new ClinicalImpressionStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClinicalImpressionStatusCode {
    return new ClinicalImpressionStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClinicalImpressionStatusCode {
    return new ClinicalImpressionStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ClinicalImpressionStatusCode | PlainMessage<ClinicalImpressionStatusCode> | undefined, b: ClinicalImpressionStatusCode | PlainMessage<ClinicalImpressionStatusCode> | undefined): boolean {
    return proto3.util.equals(ClinicalImpressionStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ClinicalImpressionStatusCode.Value
 */
export enum ClinicalImpressionStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ClinicalImpressionStatusCode_Value)
proto3.util.setEnumType(ClinicalImpressionStatusCode_Value, "google.fhir.stu3.proto.ClinicalImpressionStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * How much of the content of the code system - the concepts and codes it
 * defines - are represented in a code system resource See
 * http://hl7.org/fhir/ValueSet/codesystem-content-mode
 *
 * @generated from message google.fhir.stu3.proto.CodeSystemContentModeCode
 */
export class CodeSystemContentModeCode extends Message<CodeSystemContentModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CodeSystemContentModeCode.Value value = 1;
   */
  value = CodeSystemContentModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CodeSystemContentModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystemContentModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CodeSystemContentModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemContentModeCode {
    return new CodeSystemContentModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemContentModeCode {
    return new CodeSystemContentModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemContentModeCode {
    return new CodeSystemContentModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemContentModeCode | PlainMessage<CodeSystemContentModeCode> | undefined, b: CodeSystemContentModeCode | PlainMessage<CodeSystemContentModeCode> | undefined): boolean {
    return proto3.util.equals(CodeSystemContentModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CodeSystemContentModeCode.Value
 */
export enum CodeSystemContentModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_PRESENT = 1;
   */
  NOT_PRESENT = 1,

  /**
   * @generated from enum value: EXAMPLE = 2;
   */
  EXAMPLE = 2,

  /**
   * @generated from enum value: FRAGMENT = 3;
   */
  FRAGMENT = 3,

  /**
   * @generated from enum value: COMPLETE = 4;
   */
  COMPLETE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CodeSystemContentModeCode_Value)
proto3.util.setEnumType(CodeSystemContentModeCode_Value, "google.fhir.stu3.proto.CodeSystemContentModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_PRESENT" },
  { no: 2, name: "EXAMPLE" },
  { no: 3, name: "FRAGMENT" },
  { no: 4, name: "COMPLETE" },
]);

/**
 * The meaning of the hierarchy of concepts in a code system
 * See http://hl7.org/fhir/ValueSet/codesystem-hierarchy-meaning
 *
 * @generated from message google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode
 */
export class CodeSystemHierarchyMeaningCode extends Message<CodeSystemHierarchyMeaningCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.Value value = 1;
   */
  value = CodeSystemHierarchyMeaningCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CodeSystemHierarchyMeaningCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CodeSystemHierarchyMeaningCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemHierarchyMeaningCode {
    return new CodeSystemHierarchyMeaningCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemHierarchyMeaningCode {
    return new CodeSystemHierarchyMeaningCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemHierarchyMeaningCode {
    return new CodeSystemHierarchyMeaningCode().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemHierarchyMeaningCode | PlainMessage<CodeSystemHierarchyMeaningCode> | undefined, b: CodeSystemHierarchyMeaningCode | PlainMessage<CodeSystemHierarchyMeaningCode> | undefined): boolean {
    return proto3.util.equals(CodeSystemHierarchyMeaningCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.Value
 */
export enum CodeSystemHierarchyMeaningCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GROUPED_BY = 1;
   */
  GROUPED_BY = 1,

  /**
   * @generated from enum value: IS_A = 2;
   */
  IS_A = 2,

  /**
   * @generated from enum value: PART_OF = 3;
   */
  PART_OF = 3,

  /**
   * @generated from enum value: CLASSIFIED_WITH = 4;
   */
  CLASSIFIED_WITH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CodeSystemHierarchyMeaningCode_Value)
proto3.util.setEnumType(CodeSystemHierarchyMeaningCode_Value, "google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GROUPED_BY" },
  { no: 2, name: "IS_A" },
  { no: 3, name: "PART_OF" },
  { no: 4, name: "CLASSIFIED_WITH" },
]);

/**
 * Common Tag Codes defined by FHIR project
 * See http://hl7.org/fhir/ValueSet/common-tags
 *
 * @generated from message google.fhir.stu3.proto.CommonTagsCode
 */
export class CommonTagsCode extends Message<CommonTagsCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CommonTagsCode.Value value = 1;
   */
  value = CommonTagsCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CommonTagsCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommonTagsCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CommonTagsCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommonTagsCode {
    return new CommonTagsCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommonTagsCode {
    return new CommonTagsCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommonTagsCode {
    return new CommonTagsCode().fromJsonString(jsonString, options);
  }

  static equals(a: CommonTagsCode | PlainMessage<CommonTagsCode> | undefined, b: CommonTagsCode | PlainMessage<CommonTagsCode> | undefined): boolean {
    return proto3.util.equals(CommonTagsCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CommonTagsCode.Value
 */
export enum CommonTagsCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIONABLE = 1;
   */
  ACTIONABLE = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(CommonTagsCode_Value)
proto3.util.setEnumType(CommonTagsCode_Value, "google.fhir.stu3.proto.CommonTagsCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIONABLE" },
]);

/**
 * Codes for general categories of communications such as alerts, instruction,
 * etc. See http://hl7.org/fhir/ValueSet/communication-category
 *
 * @generated from message google.fhir.stu3.proto.CommunicationCategoryCode
 */
export class CommunicationCategoryCode extends Message<CommunicationCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CommunicationCategoryCode.Value value = 1;
   */
  value = CommunicationCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CommunicationCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CommunicationCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationCategoryCode {
    return new CommunicationCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationCategoryCode {
    return new CommunicationCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationCategoryCode {
    return new CommunicationCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationCategoryCode | PlainMessage<CommunicationCategoryCode> | undefined, b: CommunicationCategoryCode | PlainMessage<CommunicationCategoryCode> | undefined): boolean {
    return proto3.util.equals(CommunicationCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CommunicationCategoryCode.Value
 */
export enum CommunicationCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALERT = 1;
   */
  ALERT = 1,

  /**
   * @generated from enum value: NOTIFICATION = 2;
   */
  NOTIFICATION = 2,

  /**
   * @generated from enum value: REMINDER = 3;
   */
  REMINDER = 3,

  /**
   * @generated from enum value: INSTRUCTION = 4;
   */
  INSTRUCTION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CommunicationCategoryCode_Value)
proto3.util.setEnumType(CommunicationCategoryCode_Value, "google.fhir.stu3.proto.CommunicationCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALERT" },
  { no: 2, name: "NOTIFICATION" },
  { no: 3, name: "REMINDER" },
  { no: 4, name: "INSTRUCTION" },
]);

/**
 * Codes for the reason why a communication was not done.
 * See http://hl7.org/fhir/ValueSet/communication-not-done-reason
 *
 * @generated from message google.fhir.stu3.proto.CommunicationNotDoneReasonCode
 */
export class CommunicationNotDoneReasonCode extends Message<CommunicationNotDoneReasonCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CommunicationNotDoneReasonCode.Value value = 1;
   */
  value = CommunicationNotDoneReasonCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CommunicationNotDoneReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CommunicationNotDoneReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CommunicationNotDoneReasonCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationNotDoneReasonCode {
    return new CommunicationNotDoneReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationNotDoneReasonCode {
    return new CommunicationNotDoneReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationNotDoneReasonCode {
    return new CommunicationNotDoneReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationNotDoneReasonCode | PlainMessage<CommunicationNotDoneReasonCode> | undefined, b: CommunicationNotDoneReasonCode | PlainMessage<CommunicationNotDoneReasonCode> | undefined): boolean {
    return proto3.util.equals(CommunicationNotDoneReasonCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CommunicationNotDoneReasonCode.Value
 */
export enum CommunicationNotDoneReasonCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNKNOWN = 1;
   */
  UNKNOWN = 1,

  /**
   * @generated from enum value: SYSTEM_ERROR = 2;
   */
  SYSTEM_ERROR = 2,

  /**
   * @generated from enum value: INVALID_PHONE_NUMBER = 3;
   */
  INVALID_PHONE_NUMBER = 3,

  /**
   * @generated from enum value: RECIPIENT_UNAVAILABLE = 4;
   */
  RECIPIENT_UNAVAILABLE = 4,

  /**
   * @generated from enum value: FAMILY_OBJECTION = 5;
   */
  FAMILY_OBJECTION = 5,

  /**
   * @generated from enum value: PATIENT_OBJECTION = 6;
   */
  PATIENT_OBJECTION = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(CommunicationNotDoneReasonCode_Value)
proto3.util.setEnumType(CommunicationNotDoneReasonCode_Value, "google.fhir.stu3.proto.CommunicationNotDoneReasonCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNKNOWN" },
  { no: 2, name: "SYSTEM_ERROR" },
  { no: 3, name: "INVALID_PHONE_NUMBER" },
  { no: 4, name: "RECIPIENT_UNAVAILABLE" },
  { no: 5, name: "FAMILY_OBJECTION" },
  { no: 6, name: "PATIENT_OBJECTION" },
]);

/**
 * Which compartment a compartment definition describes
 * See http://hl7.org/fhir/ValueSet/compartment-type
 *
 * @generated from message google.fhir.stu3.proto.CompartmentTypeCode
 */
export class CompartmentTypeCode extends Message<CompartmentTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CompartmentTypeCode.Value value = 1;
   */
  value = CompartmentTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompartmentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CompartmentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompartmentTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentTypeCode {
    return new CompartmentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentTypeCode {
    return new CompartmentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentTypeCode {
    return new CompartmentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentTypeCode | PlainMessage<CompartmentTypeCode> | undefined, b: CompartmentTypeCode | PlainMessage<CompartmentTypeCode> | undefined): boolean {
    return proto3.util.equals(CompartmentTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CompartmentTypeCode.Value
 */
export enum CompartmentTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PATIENT = 1;
   */
  PATIENT = 1,

  /**
   * @generated from enum value: ENCOUNTER = 2;
   */
  ENCOUNTER = 2,

  /**
   * @generated from enum value: RELATEDPERSON = 3;
   */
  RELATEDPERSON = 3,

  /**
   * @generated from enum value: PRACTITIONER = 4;
   */
  PRACTITIONER = 4,

  /**
   * @generated from enum value: DEVICE = 5;
   */
  DEVICE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(CompartmentTypeCode_Value)
proto3.util.setEnumType(CompartmentTypeCode_Value, "google.fhir.stu3.proto.CompartmentTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PATIENT" },
  { no: 2, name: "ENCOUNTER" },
  { no: 3, name: "RELATEDPERSON" },
  { no: 4, name: "PRACTITIONER" },
  { no: 5, name: "DEVICE" },
]);

/**
 * The composite scoring method of the measure
 * See http://hl7.org/fhir/ValueSet/composite-measure-scoring
 *
 * @generated from message google.fhir.stu3.proto.CompositeMeasureScoringCode
 */
export class CompositeMeasureScoringCode extends Message<CompositeMeasureScoringCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CompositeMeasureScoringCode.Value value = 1;
   */
  value = CompositeMeasureScoringCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompositeMeasureScoringCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CompositeMeasureScoringCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompositeMeasureScoringCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositeMeasureScoringCode {
    return new CompositeMeasureScoringCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositeMeasureScoringCode {
    return new CompositeMeasureScoringCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositeMeasureScoringCode {
    return new CompositeMeasureScoringCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompositeMeasureScoringCode | PlainMessage<CompositeMeasureScoringCode> | undefined, b: CompositeMeasureScoringCode | PlainMessage<CompositeMeasureScoringCode> | undefined): boolean {
    return proto3.util.equals(CompositeMeasureScoringCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CompositeMeasureScoringCode.Value
 */
export enum CompositeMeasureScoringCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OPPORTUNITY = 1;
   */
  OPPORTUNITY = 1,

  /**
   * @generated from enum value: ALL_OR_NOTHING = 2;
   */
  ALL_OR_NOTHING = 2,

  /**
   * @generated from enum value: LINEAR = 3;
   */
  LINEAR = 3,

  /**
   * @generated from enum value: WEIGHTED = 4;
   */
  WEIGHTED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CompositeMeasureScoringCode_Value)
proto3.util.setEnumType(CompositeMeasureScoringCode_Value, "google.fhir.stu3.proto.CompositeMeasureScoringCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OPPORTUNITY" },
  { no: 2, name: "ALL_OR_NOTHING" },
  { no: 3, name: "LINEAR" },
  { no: 4, name: "WEIGHTED" },
]);

/**
 * The way in which a person authenticated a composition.
 * See http://hl7.org/fhir/ValueSet/composition-attestation-mode
 *
 * @generated from message google.fhir.stu3.proto.CompositionAttestationModeCode
 */
export class CompositionAttestationModeCode extends Message<CompositionAttestationModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CompositionAttestationModeCode.Value value = 1;
   */
  value = CompositionAttestationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompositionAttestationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CompositionAttestationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompositionAttestationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionAttestationModeCode {
    return new CompositionAttestationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionAttestationModeCode {
    return new CompositionAttestationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionAttestationModeCode {
    return new CompositionAttestationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionAttestationModeCode | PlainMessage<CompositionAttestationModeCode> | undefined, b: CompositionAttestationModeCode | PlainMessage<CompositionAttestationModeCode> | undefined): boolean {
    return proto3.util.equals(CompositionAttestationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CompositionAttestationModeCode.Value
 */
export enum CompositionAttestationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PERSONAL = 1;
   */
  PERSONAL = 1,

  /**
   * @generated from enum value: PROFESSIONAL = 2;
   */
  PROFESSIONAL = 2,

  /**
   * @generated from enum value: LEGAL = 3;
   */
  LEGAL = 3,

  /**
   * @generated from enum value: OFFICIAL = 4;
   */
  OFFICIAL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CompositionAttestationModeCode_Value)
proto3.util.setEnumType(CompositionAttestationModeCode_Value, "google.fhir.stu3.proto.CompositionAttestationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PERSONAL" },
  { no: 2, name: "PROFESSIONAL" },
  { no: 3, name: "LEGAL" },
  { no: 4, name: "OFFICIAL" },
]);

/**
 * The workflow/clinical status of the composition.
 * See http://hl7.org/fhir/ValueSet/composition-status
 *
 * @generated from message google.fhir.stu3.proto.CompositionStatusCode
 */
export class CompositionStatusCode extends Message<CompositionStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CompositionStatusCode.Value value = 1;
   */
  value = CompositionStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompositionStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CompositionStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompositionStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionStatusCode {
    return new CompositionStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionStatusCode {
    return new CompositionStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionStatusCode {
    return new CompositionStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionStatusCode | PlainMessage<CompositionStatusCode> | undefined, b: CompositionStatusCode | PlainMessage<CompositionStatusCode> | undefined): boolean {
    return proto3.util.equals(CompositionStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CompositionStatusCode.Value
 */
export enum CompositionStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PRELIMINARY = 1;
   */
  PRELIMINARY = 1,

  /**
   * @generated from enum value: FINAL = 2;
   */
  FINAL = 2,

  /**
   * @generated from enum value: AMENDED = 3;
   */
  AMENDED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CompositionStatusCode_Value)
proto3.util.setEnumType(CompositionStatusCode_Value, "google.fhir.stu3.proto.CompositionStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PRELIMINARY" },
  { no: 2, name: "FINAL" },
  { no: 3, name: "AMENDED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * The degree of equivalence between concepts.
 * See http://hl7.org/fhir/ValueSet/concept-map-equivalence
 *
 * @generated from message google.fhir.stu3.proto.ConceptMapEquivalenceCode
 */
export class ConceptMapEquivalenceCode extends Message<ConceptMapEquivalenceCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConceptMapEquivalenceCode.Value value = 1;
   */
  value = ConceptMapEquivalenceCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConceptMapEquivalenceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMapEquivalenceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConceptMapEquivalenceCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMapEquivalenceCode {
    return new ConceptMapEquivalenceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMapEquivalenceCode {
    return new ConceptMapEquivalenceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMapEquivalenceCode {
    return new ConceptMapEquivalenceCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMapEquivalenceCode | PlainMessage<ConceptMapEquivalenceCode> | undefined, b: ConceptMapEquivalenceCode | PlainMessage<ConceptMapEquivalenceCode> | undefined): boolean {
    return proto3.util.equals(ConceptMapEquivalenceCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConceptMapEquivalenceCode.Value
 */
export enum ConceptMapEquivalenceCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RELATEDTO = 1;
   */
  RELATEDTO = 1,

  /**
   * @generated from enum value: EQUIVALENT = 2;
   */
  EQUIVALENT = 2,

  /**
   * @generated from enum value: EQUAL = 3;
   */
  EQUAL = 3,

  /**
   * @generated from enum value: WIDER = 4;
   */
  WIDER = 4,

  /**
   * @generated from enum value: SUBSUMES = 5;
   */
  SUBSUMES = 5,

  /**
   * @generated from enum value: NARROWER = 6;
   */
  NARROWER = 6,

  /**
   * @generated from enum value: SPECIALIZES = 7;
   */
  SPECIALIZES = 7,

  /**
   * @generated from enum value: INEXACT = 8;
   */
  INEXACT = 8,

  /**
   * @generated from enum value: UNMATCHED = 9;
   */
  UNMATCHED = 9,

  /**
   * @generated from enum value: DISJOINT = 10;
   */
  DISJOINT = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(ConceptMapEquivalenceCode_Value)
proto3.util.setEnumType(ConceptMapEquivalenceCode_Value, "google.fhir.stu3.proto.ConceptMapEquivalenceCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RELATEDTO" },
  { no: 2, name: "EQUIVALENT" },
  { no: 3, name: "EQUAL" },
  { no: 4, name: "WIDER" },
  { no: 5, name: "SUBSUMES" },
  { no: 6, name: "NARROWER" },
  { no: 7, name: "SPECIALIZES" },
  { no: 8, name: "INEXACT" },
  { no: 9, name: "UNMATCHED" },
  { no: 10, name: "DISJOINT" },
]);

/**
 * Defines which action to take if there is no match in the group.
 * See http://hl7.org/fhir/ValueSet/conceptmap-unmapped-mode
 *
 * @generated from message google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode
 */
export class ConceptMapGroupUnmappedModeCode extends Message<ConceptMapGroupUnmappedModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.Value value = 1;
   */
  value = ConceptMapGroupUnmappedModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConceptMapGroupUnmappedModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConceptMapGroupUnmappedModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMapGroupUnmappedModeCode {
    return new ConceptMapGroupUnmappedModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMapGroupUnmappedModeCode {
    return new ConceptMapGroupUnmappedModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMapGroupUnmappedModeCode {
    return new ConceptMapGroupUnmappedModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMapGroupUnmappedModeCode | PlainMessage<ConceptMapGroupUnmappedModeCode> | undefined, b: ConceptMapGroupUnmappedModeCode | PlainMessage<ConceptMapGroupUnmappedModeCode> | undefined): boolean {
    return proto3.util.equals(ConceptMapGroupUnmappedModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.Value
 */
export enum ConceptMapGroupUnmappedModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROVIDED = 1;
   */
  PROVIDED = 1,

  /**
   * @generated from enum value: FIXED = 2;
   */
  FIXED = 2,

  /**
   * @generated from enum value: OTHER_MAP = 3;
   */
  OTHER_MAP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConceptMapGroupUnmappedModeCode_Value)
proto3.util.setEnumType(ConceptMapGroupUnmappedModeCode_Value, "google.fhir.stu3.proto.ConceptMapGroupUnmappedModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROVIDED" },
  { no: 2, name: "FIXED" },
  { no: 3, name: "OTHER_MAP" },
]);

/**
 * The type of a property value
 * See http://hl7.org/fhir/ValueSet/concept-property-type
 *
 * @generated from message google.fhir.stu3.proto.PropertyTypeCode
 */
export class PropertyTypeCode extends Message<PropertyTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PropertyTypeCode.Value value = 1;
   */
  value = PropertyTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PropertyTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PropertyTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PropertyTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PropertyTypeCode {
    return new PropertyTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PropertyTypeCode {
    return new PropertyTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PropertyTypeCode {
    return new PropertyTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PropertyTypeCode | PlainMessage<PropertyTypeCode> | undefined, b: PropertyTypeCode | PlainMessage<PropertyTypeCode> | undefined): boolean {
    return proto3.util.equals(PropertyTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PropertyTypeCode.Value
 */
export enum PropertyTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CODE = 1;
   */
  CODE = 1,

  /**
   * @generated from enum value: CODING = 2;
   */
  CODING = 2,

  /**
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * @generated from enum value: INTEGER = 4;
   */
  INTEGER = 4,

  /**
   * @generated from enum value: BOOLEAN = 5;
   */
  BOOLEAN = 5,

  /**
   * @generated from enum value: DATETIME = 6;
   */
  DATETIME = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(PropertyTypeCode_Value)
proto3.util.setEnumType(PropertyTypeCode_Value, "google.fhir.stu3.proto.PropertyTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CODE" },
  { no: 2, name: "CODING" },
  { no: 3, name: "STRING" },
  { no: 4, name: "INTEGER" },
  { no: 5, name: "BOOLEAN" },
  { no: 6, name: "DATETIME" },
]);

/**
 * A code that indicates how the server supports conditional delete.
 * See http://hl7.org/fhir/ValueSet/conditional-delete-status
 *
 * @generated from message google.fhir.stu3.proto.ConditionalDeleteStatusCode
 */
export class ConditionalDeleteStatusCode extends Message<ConditionalDeleteStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConditionalDeleteStatusCode.Value value = 1;
   */
  value = ConditionalDeleteStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConditionalDeleteStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConditionalDeleteStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConditionalDeleteStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionalDeleteStatusCode {
    return new ConditionalDeleteStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionalDeleteStatusCode {
    return new ConditionalDeleteStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionalDeleteStatusCode {
    return new ConditionalDeleteStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionalDeleteStatusCode | PlainMessage<ConditionalDeleteStatusCode> | undefined, b: ConditionalDeleteStatusCode | PlainMessage<ConditionalDeleteStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionalDeleteStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConditionalDeleteStatusCode.Value
 */
export enum ConditionalDeleteStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_SUPPORTED = 1;
   */
  NOT_SUPPORTED = 1,

  /**
   * @generated from enum value: SINGLE = 2;
   */
  SINGLE = 2,

  /**
   * @generated from enum value: MULTIPLE = 3;
   */
  MULTIPLE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionalDeleteStatusCode_Value)
proto3.util.setEnumType(ConditionalDeleteStatusCode_Value, "google.fhir.stu3.proto.ConditionalDeleteStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_SUPPORTED" },
  { no: 2, name: "SINGLE" },
  { no: 3, name: "MULTIPLE" },
]);

/**
 * A code that indicates how the server supports conditional read.
 * See http://hl7.org/fhir/ValueSet/conditional-read-status
 *
 * @generated from message google.fhir.stu3.proto.ConditionalReadStatusCode
 */
export class ConditionalReadStatusCode extends Message<ConditionalReadStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConditionalReadStatusCode.Value value = 1;
   */
  value = ConditionalReadStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConditionalReadStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConditionalReadStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConditionalReadStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionalReadStatusCode {
    return new ConditionalReadStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionalReadStatusCode {
    return new ConditionalReadStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionalReadStatusCode {
    return new ConditionalReadStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionalReadStatusCode | PlainMessage<ConditionalReadStatusCode> | undefined, b: ConditionalReadStatusCode | PlainMessage<ConditionalReadStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionalReadStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConditionalReadStatusCode.Value
 */
export enum ConditionalReadStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_SUPPORTED = 1;
   */
  NOT_SUPPORTED = 1,

  /**
   * @generated from enum value: MODIFIED_SINCE = 2;
   */
  MODIFIED_SINCE = 2,

  /**
   * @generated from enum value: NOT_MATCH = 3;
   */
  NOT_MATCH = 3,

  /**
   * @generated from enum value: FULL_SUPPORT = 4;
   */
  FULL_SUPPORT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionalReadStatusCode_Value)
proto3.util.setEnumType(ConditionalReadStatusCode_Value, "google.fhir.stu3.proto.ConditionalReadStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_SUPPORTED" },
  { no: 2, name: "MODIFIED_SINCE" },
  { no: 3, name: "NOT_MATCH" },
  { no: 4, name: "FULL_SUPPORT" },
]);

/**
 * Preferred value set for Condition Categories.
 * See http://hl7.org/fhir/ValueSet/condition-category
 *
 * @generated from message google.fhir.stu3.proto.ConditionCategoryCodesCode
 */
export class ConditionCategoryCodesCode extends Message<ConditionCategoryCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConditionCategoryCodesCode.Value value = 1;
   */
  value = ConditionCategoryCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConditionCategoryCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConditionCategoryCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConditionCategoryCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionCategoryCodesCode {
    return new ConditionCategoryCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionCategoryCodesCode {
    return new ConditionCategoryCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionCategoryCodesCode {
    return new ConditionCategoryCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionCategoryCodesCode | PlainMessage<ConditionCategoryCodesCode> | undefined, b: ConditionCategoryCodesCode | PlainMessage<ConditionCategoryCodesCode> | undefined): boolean {
    return proto3.util.equals(ConditionCategoryCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConditionCategoryCodesCode.Value
 */
export enum ConditionCategoryCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROBLEM_LIST_ITEM = 1;
   */
  PROBLEM_LIST_ITEM = 1,

  /**
   * @generated from enum value: ENCOUNTER_DIAGNOSIS = 2;
   */
  ENCOUNTER_DIAGNOSIS = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionCategoryCodesCode_Value)
proto3.util.setEnumType(ConditionCategoryCodesCode_Value, "google.fhir.stu3.proto.ConditionCategoryCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROBLEM_LIST_ITEM" },
  { no: 2, name: "ENCOUNTER_DIAGNOSIS" },
]);

/**
 * Preferred value set for Condition Clinical Status.
 * See http://hl7.org/fhir/ValueSet/condition-clinical
 *
 * @generated from message google.fhir.stu3.proto.ConditionClinicalStatusCodesCode
 */
export class ConditionClinicalStatusCodesCode extends Message<ConditionClinicalStatusCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.Value value = 1;
   */
  value = ConditionClinicalStatusCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConditionClinicalStatusCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConditionClinicalStatusCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConditionClinicalStatusCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionClinicalStatusCodesCode {
    return new ConditionClinicalStatusCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionClinicalStatusCodesCode {
    return new ConditionClinicalStatusCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionClinicalStatusCodesCode {
    return new ConditionClinicalStatusCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionClinicalStatusCodesCode | PlainMessage<ConditionClinicalStatusCodesCode> | undefined, b: ConditionClinicalStatusCodesCode | PlainMessage<ConditionClinicalStatusCodesCode> | undefined): boolean {
    return proto3.util.equals(ConditionClinicalStatusCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.Value
 */
export enum ConditionClinicalStatusCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: RECURRENCE = 2;
   */
  RECURRENCE = 2,

  /**
   * @generated from enum value: INACTIVE = 3;
   */
  INACTIVE = 3,

  /**
   * @generated from enum value: REMISSION = 4;
   */
  REMISSION = 4,

  /**
   * @generated from enum value: RESOLVED = 5;
   */
  RESOLVED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionClinicalStatusCodesCode_Value)
proto3.util.setEnumType(ConditionClinicalStatusCodesCode_Value, "google.fhir.stu3.proto.ConditionClinicalStatusCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "RECURRENCE" },
  { no: 3, name: "INACTIVE" },
  { no: 4, name: "REMISSION" },
  { no: 5, name: "RESOLVED" },
]);

/**
 * Enumeration indicating whether the condition is currently active, inactive,
 * or has been resolved. See http://hl7.org/fhir/ValueSet/condition-state
 *
 * @generated from message google.fhir.stu3.proto.ConditionStateCode
 */
export class ConditionStateCode extends Message<ConditionStateCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConditionStateCode.Value value = 1;
   */
  value = ConditionStateCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConditionStateCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConditionStateCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConditionStateCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionStateCode {
    return new ConditionStateCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionStateCode {
    return new ConditionStateCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionStateCode {
    return new ConditionStateCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionStateCode | PlainMessage<ConditionStateCode> | undefined, b: ConditionStateCode | PlainMessage<ConditionStateCode> | undefined): boolean {
    return proto3.util.equals(ConditionStateCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConditionStateCode.Value
 */
export enum ConditionStateCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: RESOLVED = 3;
   */
  RESOLVED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionStateCode_Value)
proto3.util.setEnumType(ConditionStateCode_Value, "google.fhir.stu3.proto.ConditionStateCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "RESOLVED" },
]);

/**
 * The verification status to support or decline the clinical status of the
 * condition or diagnosis. See
 * http://hl7.org/fhir/ValueSet/condition-ver-status
 *
 * @generated from message google.fhir.stu3.proto.ConditionVerificationStatusCode
 */
export class ConditionVerificationStatusCode extends Message<ConditionVerificationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConditionVerificationStatusCode.Value value = 1;
   */
  value = ConditionVerificationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConditionVerificationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConditionVerificationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConditionVerificationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionVerificationStatusCode {
    return new ConditionVerificationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionVerificationStatusCode {
    return new ConditionVerificationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionVerificationStatusCode {
    return new ConditionVerificationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionVerificationStatusCode | PlainMessage<ConditionVerificationStatusCode> | undefined, b: ConditionVerificationStatusCode | PlainMessage<ConditionVerificationStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionVerificationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConditionVerificationStatusCode.Value
 */
export enum ConditionVerificationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROVISIONAL = 1;
   */
  PROVISIONAL = 1,

  /**
   * @generated from enum value: DIFFERENTIAL = 2;
   */
  DIFFERENTIAL = 2,

  /**
   * @generated from enum value: CONFIRMED = 3;
   */
  CONFIRMED = 3,

  /**
   * @generated from enum value: REFUTED = 4;
   */
  REFUTED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionVerificationStatusCode_Value)
proto3.util.setEnumType(ConditionVerificationStatusCode_Value, "google.fhir.stu3.proto.ConditionVerificationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROVISIONAL" },
  { no: 2, name: "DIFFERENTIAL" },
  { no: 3, name: "CONFIRMED" },
  { no: 4, name: "REFUTED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "UNKNOWN" },
]);

/**
 * Indicates the degree of adherence to a specified behavior or capability
 * expected for a system to be deemed conformant with a specification. See
 * http://hl7.org/fhir/ValueSet/conformance-expectation
 *
 * @generated from message google.fhir.stu3.proto.ConformanceExpectationCode
 */
export class ConformanceExpectationCode extends Message<ConformanceExpectationCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConformanceExpectationCode.Value value = 1;
   */
  value = ConformanceExpectationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConformanceExpectationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConformanceExpectationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConformanceExpectationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConformanceExpectationCode {
    return new ConformanceExpectationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConformanceExpectationCode {
    return new ConformanceExpectationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConformanceExpectationCode {
    return new ConformanceExpectationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConformanceExpectationCode | PlainMessage<ConformanceExpectationCode> | undefined, b: ConformanceExpectationCode | PlainMessage<ConformanceExpectationCode> | undefined): boolean {
    return proto3.util.equals(ConformanceExpectationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConformanceExpectationCode.Value
 */
export enum ConformanceExpectationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SHALL = 1;
   */
  SHALL = 1,

  /**
   * @generated from enum value: SHOULD = 2;
   */
  SHOULD = 2,

  /**
   * @generated from enum value: MAY = 3;
   */
  MAY = 3,

  /**
   * @generated from enum value: SHOULD_NOT = 4;
   */
  SHOULD_NOT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConformanceExpectationCode_Value)
proto3.util.setEnumType(ConformanceExpectationCode_Value, "google.fhir.stu3.proto.ConformanceExpectationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SHALL" },
  { no: 2, name: "SHOULD" },
  { no: 3, name: "MAY" },
  { no: 4, name: "SHOULD_NOT" },
]);

/**
 * How a resource reference is interpreted when testing consent restrictions
 * See http://hl7.org/fhir/ValueSet/consent-data-meaning
 *
 * @generated from message google.fhir.stu3.proto.ConsentDataMeaningCode
 */
export class ConsentDataMeaningCode extends Message<ConsentDataMeaningCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConsentDataMeaningCode.Value value = 1;
   */
  value = ConsentDataMeaningCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConsentDataMeaningCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConsentDataMeaningCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConsentDataMeaningCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentDataMeaningCode {
    return new ConsentDataMeaningCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentDataMeaningCode {
    return new ConsentDataMeaningCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentDataMeaningCode {
    return new ConsentDataMeaningCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentDataMeaningCode | PlainMessage<ConsentDataMeaningCode> | undefined, b: ConsentDataMeaningCode | PlainMessage<ConsentDataMeaningCode> | undefined): boolean {
    return proto3.util.equals(ConsentDataMeaningCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConsentDataMeaningCode.Value
 */
export enum ConsentDataMeaningCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: RELATED = 2;
   */
  RELATED = 2,

  /**
   * @generated from enum value: DEPENDENTS = 3;
   */
  DEPENDENTS = 3,

  /**
   * @generated from enum value: AUTHOREDBY = 4;
   */
  AUTHOREDBY = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConsentDataMeaningCode_Value)
proto3.util.setEnumType(ConsentDataMeaningCode_Value, "google.fhir.stu3.proto.ConsentDataMeaningCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTANCE" },
  { no: 2, name: "RELATED" },
  { no: 3, name: "DEPENDENTS" },
  { no: 4, name: "AUTHOREDBY" },
]);

/**
 * How an exception statement is applied, such as adding additional consent or
 * removing consent See http://hl7.org/fhir/ValueSet/consent-except-type
 *
 * @generated from message google.fhir.stu3.proto.ConsentExceptTypeCode
 */
export class ConsentExceptTypeCode extends Message<ConsentExceptTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConsentExceptTypeCode.Value value = 1;
   */
  value = ConsentExceptTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConsentExceptTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConsentExceptTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConsentExceptTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentExceptTypeCode {
    return new ConsentExceptTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentExceptTypeCode {
    return new ConsentExceptTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentExceptTypeCode {
    return new ConsentExceptTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentExceptTypeCode | PlainMessage<ConsentExceptTypeCode> | undefined, b: ConsentExceptTypeCode | PlainMessage<ConsentExceptTypeCode> | undefined): boolean {
    return proto3.util.equals(ConsentExceptTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConsentExceptTypeCode.Value
 */
export enum ConsentExceptTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DENY = 1;
   */
  DENY = 1,

  /**
   * @generated from enum value: PERMIT = 2;
   */
  PERMIT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConsentExceptTypeCode_Value)
proto3.util.setEnumType(ConsentExceptTypeCode_Value, "google.fhir.stu3.proto.ConsentExceptTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DENY" },
  { no: 2, name: "PERMIT" },
]);

/**
 * Indicates the state of the consent
 * See http://hl7.org/fhir/ValueSet/consent-state-codes
 *
 * @generated from message google.fhir.stu3.proto.ConsentStateCode
 */
export class ConsentStateCode extends Message<ConsentStateCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConsentStateCode.Value value = 1;
   */
  value = ConsentStateCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConsentStateCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConsentStateCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConsentStateCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentStateCode {
    return new ConsentStateCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentStateCode {
    return new ConsentStateCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentStateCode {
    return new ConsentStateCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentStateCode | PlainMessage<ConsentStateCode> | undefined, b: ConsentStateCode | PlainMessage<ConsentStateCode> | undefined): boolean {
    return proto3.util.equals(ConsentStateCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConsentStateCode.Value
 */
export enum ConsentStateCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: PROPOSED = 2;
   */
  PROPOSED = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: REJECTED = 4;
   */
  REJECTED = 4,

  /**
   * @generated from enum value: INACTIVE = 5;
   */
  INACTIVE = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConsentStateCode_Value)
proto3.util.setEnumType(ConsentStateCode_Value, "google.fhir.stu3.proto.ConsentStateCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "PROPOSED" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "REJECTED" },
  { no: 5, name: "INACTIVE" },
  { no: 6, name: "ENTERED_IN_ERROR" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * the purpose for which you would contact a contact party. See
 * http://hl7.org/fhir/ValueSet/contactentity-type
 *
 * @generated from message google.fhir.stu3.proto.ContactEntityTypeCode
 */
export class ContactEntityTypeCode extends Message<ContactEntityTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ContactEntityTypeCode.Value value = 1;
   */
  value = ContactEntityTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ContactEntityTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ContactEntityTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContactEntityTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactEntityTypeCode {
    return new ContactEntityTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactEntityTypeCode {
    return new ContactEntityTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactEntityTypeCode {
    return new ContactEntityTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContactEntityTypeCode | PlainMessage<ContactEntityTypeCode> | undefined, b: ContactEntityTypeCode | PlainMessage<ContactEntityTypeCode> | undefined): boolean {
    return proto3.util.equals(ContactEntityTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ContactEntityTypeCode.Value
 */
export enum ContactEntityTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BILL = 1;
   */
  BILL = 1,

  /**
   * @generated from enum value: ADMIN = 2;
   */
  ADMIN = 2,

  /**
   * @generated from enum value: HR = 3;
   */
  HR = 3,

  /**
   * @generated from enum value: PAYOR = 4;
   */
  PAYOR = 4,

  /**
   * @generated from enum value: PATINF = 5;
   */
  PATINF = 5,

  /**
   * @generated from enum value: PRESS = 6;
   */
  PRESS = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ContactEntityTypeCode_Value)
proto3.util.setEnumType(ContactEntityTypeCode_Value, "google.fhir.stu3.proto.ContactEntityTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BILL" },
  { no: 2, name: "ADMIN" },
  { no: 3, name: "HR" },
  { no: 4, name: "PAYOR" },
  { no: 5, name: "PATINF" },
  { no: 6, name: "PRESS" },
]);

/**
 * The content or mime type.
 * See http://hl7.org/fhir/ValueSet/content-type
 *
 * @generated from message google.fhir.stu3.proto.ContentTypeCode
 */
export class ContentTypeCode extends Message<ContentTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ContentTypeCode.Value value = 1;
   */
  value = ContentTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ContentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ContentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContentTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentTypeCode {
    return new ContentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentTypeCode {
    return new ContentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentTypeCode {
    return new ContentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContentTypeCode | PlainMessage<ContentTypeCode> | undefined, b: ContentTypeCode | PlainMessage<ContentTypeCode> | undefined): boolean {
    return proto3.util.equals(ContentTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ContentTypeCode.Value
 */
export enum ContentTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: XML = 1;
   */
  XML = 1,

  /**
   * @generated from enum value: JSON = 2;
   */
  JSON = 2,

  /**
   * @generated from enum value: TTL = 3;
   */
  TTL = 3,

  /**
   * @generated from enum value: NONE = 4;
   */
  NONE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ContentTypeCode_Value)
proto3.util.setEnumType(ContentTypeCode_Value, "google.fhir.stu3.proto.ContentTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "XML" },
  { no: 2, name: "JSON" },
  { no: 3, name: "TTL" },
  { no: 4, name: "NONE" },
]);

/**
 * This value set contract specific codes for status.
 * See http://hl7.org/fhir/ValueSet/contract-status
 *
 * @generated from message google.fhir.stu3.proto.ContractResourceStatusCode
 */
export class ContractResourceStatusCode extends Message<ContractResourceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ContractResourceStatusCode.Value value = 1;
   */
  value = ContractResourceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ContractResourceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ContractResourceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContractResourceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContractResourceStatusCode {
    return new ContractResourceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContractResourceStatusCode {
    return new ContractResourceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContractResourceStatusCode {
    return new ContractResourceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContractResourceStatusCode | PlainMessage<ContractResourceStatusCode> | undefined, b: ContractResourceStatusCode | PlainMessage<ContractResourceStatusCode> | undefined): boolean {
    return proto3.util.equals(ContractResourceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ContractResourceStatusCode.Value
 */
export enum ContractResourceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AMENDED = 1;
   */
  AMENDED = 1,

  /**
   * @generated from enum value: APPENDED = 2;
   */
  APPENDED = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: DISPUTED = 4;
   */
  DISPUTED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: EXECUTABLE = 6;
   */
  EXECUTABLE = 6,

  /**
   * @generated from enum value: EXECUTED = 7;
   */
  EXECUTED = 7,

  /**
   * @generated from enum value: NEGOTIABLE = 8;
   */
  NEGOTIABLE = 8,

  /**
   * @generated from enum value: OFFERED = 9;
   */
  OFFERED = 9,

  /**
   * @generated from enum value: POLICY = 10;
   */
  POLICY = 10,

  /**
   * @generated from enum value: REJECTED = 11;
   */
  REJECTED = 11,

  /**
   * @generated from enum value: RENEWED = 12;
   */
  RENEWED = 12,

  /**
   * @generated from enum value: REVOKED = 13;
   */
  REVOKED = 13,

  /**
   * @generated from enum value: RESOLVED = 14;
   */
  RESOLVED = 14,

  /**
   * @generated from enum value: TERMINATED = 15;
   */
  TERMINATED = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(ContractResourceStatusCode_Value)
proto3.util.setEnumType(ContractResourceStatusCode_Value, "google.fhir.stu3.proto.ContractResourceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AMENDED" },
  { no: 2, name: "APPENDED" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "DISPUTED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "EXECUTABLE" },
  { no: 7, name: "EXECUTED" },
  { no: 8, name: "NEGOTIABLE" },
  { no: 9, name: "OFFERED" },
  { no: 10, name: "POLICY" },
  { no: 11, name: "REJECTED" },
  { no: 12, name: "RENEWED" },
  { no: 13, name: "REVOKED" },
  { no: 14, name: "RESOLVED" },
  { no: 15, name: "TERMINATED" },
]);

/**
 * The type of contributor
 * See http://hl7.org/fhir/ValueSet/contributor-type
 *
 * @generated from message google.fhir.stu3.proto.ContributorTypeCode
 */
export class ContributorTypeCode extends Message<ContributorTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ContributorTypeCode.Value value = 1;
   */
  value = ContributorTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ContributorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ContributorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContributorTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributorTypeCode {
    return new ContributorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributorTypeCode {
    return new ContributorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributorTypeCode {
    return new ContributorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContributorTypeCode | PlainMessage<ContributorTypeCode> | undefined, b: ContributorTypeCode | PlainMessage<ContributorTypeCode> | undefined): boolean {
    return proto3.util.equals(ContributorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ContributorTypeCode.Value
 */
export enum ContributorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AUTHOR = 1;
   */
  AUTHOR = 1,

  /**
   * @generated from enum value: EDITOR = 2;
   */
  EDITOR = 2,

  /**
   * @generated from enum value: REVIEWER = 3;
   */
  REVIEWER = 3,

  /**
   * @generated from enum value: ENDORSER = 4;
   */
  ENDORSER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ContributorTypeCode_Value)
proto3.util.setEnumType(ContributorTypeCode_Value, "google.fhir.stu3.proto.ContributorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AUTHOR" },
  { no: 2, name: "EDITOR" },
  { no: 3, name: "REVIEWER" },
  { no: 4, name: "ENDORSER" },
]);

/**
 * Copy Number Event
 * See http://hl7.org/fhir/ValueSet/copy-number-event
 *
 * @generated from message google.fhir.stu3.proto.CopyNumberEventCode
 */
export class CopyNumberEventCode extends Message<CopyNumberEventCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.CopyNumberEventCode.Value value = 1;
   */
  value = CopyNumberEventCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CopyNumberEventCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.CopyNumberEventCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CopyNumberEventCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CopyNumberEventCode {
    return new CopyNumberEventCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CopyNumberEventCode {
    return new CopyNumberEventCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CopyNumberEventCode {
    return new CopyNumberEventCode().fromJsonString(jsonString, options);
  }

  static equals(a: CopyNumberEventCode | PlainMessage<CopyNumberEventCode> | undefined, b: CopyNumberEventCode | PlainMessage<CopyNumberEventCode> | undefined): boolean {
    return proto3.util.equals(CopyNumberEventCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.CopyNumberEventCode.Value
 */
export enum CopyNumberEventCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AMP = 1;
   */
  AMP = 1,

  /**
   * @generated from enum value: DEL = 2;
   */
  DEL = 2,

  /**
   * @generated from enum value: LOF = 3;
   */
  LOF = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(CopyNumberEventCode_Value)
proto3.util.setEnumType(CopyNumberEventCode_Value, "google.fhir.stu3.proto.CopyNumberEventCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AMP" },
  { no: 2, name: "DEL" },
  { no: 3, name: "LOF" },
]);

/**
 * Used to specify why the normally expected content of the data element is
 * missing. See http://hl7.org/fhir/ValueSet/data-absent-reason
 *
 * @generated from message google.fhir.stu3.proto.DataAbsentReasonCode
 */
export class DataAbsentReasonCode extends Message<DataAbsentReasonCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DataAbsentReasonCode.Value value = 1;
   */
  value = DataAbsentReasonCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DataAbsentReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataAbsentReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DataAbsentReasonCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAbsentReasonCode {
    return new DataAbsentReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAbsentReasonCode {
    return new DataAbsentReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAbsentReasonCode {
    return new DataAbsentReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataAbsentReasonCode | PlainMessage<DataAbsentReasonCode> | undefined, b: DataAbsentReasonCode | PlainMessage<DataAbsentReasonCode> | undefined): boolean {
    return proto3.util.equals(DataAbsentReasonCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DataAbsentReasonCode.Value
 */
export enum DataAbsentReasonCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNKNOWN = 1;
   */
  UNKNOWN = 1,

  /**
   * @generated from enum value: ASKED = 2;
   */
  ASKED = 2,

  /**
   * @generated from enum value: TEMP = 3;
   */
  TEMP = 3,

  /**
   * @generated from enum value: NOT_ASKED = 4;
   */
  NOT_ASKED = 4,

  /**
   * @generated from enum value: MASKED = 5;
   */
  MASKED = 5,

  /**
   * @generated from enum value: UNSUPPORTED = 6;
   */
  UNSUPPORTED = 6,

  /**
   * @generated from enum value: ASTEXT = 7;
   */
  ASTEXT = 7,

  /**
   * @generated from enum value: ERROR = 8;
   */
  ERROR = 8,

  /**
   * @generated from enum value: NOT_A_NUMBER = 9;
   */
  NOT_A_NUMBER = 9,

  /**
   * @generated from enum value: NOT_PERFORMED = 10;
   */
  NOT_PERFORMED = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(DataAbsentReasonCode_Value)
proto3.util.setEnumType(DataAbsentReasonCode_Value, "google.fhir.stu3.proto.DataAbsentReasonCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNKNOWN" },
  { no: 2, name: "ASKED" },
  { no: 3, name: "TEMP" },
  { no: 4, name: "NOT_ASKED" },
  { no: 5, name: "MASKED" },
  { no: 6, name: "UNSUPPORTED" },
  { no: 7, name: "ASTEXT" },
  { no: 8, name: "ERROR" },
  { no: 9, name: "NOT_A_NUMBER" },
  { no: 10, name: "NOT_PERFORMED" },
]);

/**
 * Indicates the degree of precision of the data element definition.
 * See http://hl7.org/fhir/ValueSet/dataelement-stringency
 *
 * @generated from message google.fhir.stu3.proto.DataElementStringencyCode
 */
export class DataElementStringencyCode extends Message<DataElementStringencyCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DataElementStringencyCode.Value value = 1;
   */
  value = DataElementStringencyCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DataElementStringencyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataElementStringencyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DataElementStringencyCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataElementStringencyCode {
    return new DataElementStringencyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataElementStringencyCode {
    return new DataElementStringencyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataElementStringencyCode {
    return new DataElementStringencyCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataElementStringencyCode | PlainMessage<DataElementStringencyCode> | undefined, b: DataElementStringencyCode | PlainMessage<DataElementStringencyCode> | undefined): boolean {
    return proto3.util.equals(DataElementStringencyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DataElementStringencyCode.Value
 */
export enum DataElementStringencyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPARABLE = 1;
   */
  COMPARABLE = 1,

  /**
   * @generated from enum value: FULLY_SPECIFIED = 2;
   */
  FULLY_SPECIFIED = 2,

  /**
   * @generated from enum value: EQUIVALENT = 3;
   */
  EQUIVALENT = 3,

  /**
   * @generated from enum value: CONVERTABLE = 4;
   */
  CONVERTABLE = 4,

  /**
   * @generated from enum value: SCALEABLE = 5;
   */
  SCALEABLE = 5,

  /**
   * @generated from enum value: FLEXIBLE = 6;
   */
  FLEXIBLE = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(DataElementStringencyCode_Value)
proto3.util.setEnumType(DataElementStringencyCode_Value, "google.fhir.stu3.proto.DataElementStringencyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPARABLE" },
  { no: 2, name: "FULLY_SPECIFIED" },
  { no: 3, name: "EQUIVALENT" },
  { no: 4, name: "CONVERTABLE" },
  { no: 5, name: "SCALEABLE" },
  { no: 6, name: "FLEXIBLE" },
]);

/**
 * The type of trigger
 * See http://hl7.org/fhir/ValueSet/trigger-type
 *
 * @generated from message google.fhir.stu3.proto.TriggerTypeCode
 */
export class TriggerTypeCode extends Message<TriggerTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TriggerTypeCode.Value value = 1;
   */
  value = TriggerTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TriggerTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TriggerTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TriggerTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerTypeCode {
    return new TriggerTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerTypeCode {
    return new TriggerTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerTypeCode {
    return new TriggerTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerTypeCode | PlainMessage<TriggerTypeCode> | undefined, b: TriggerTypeCode | PlainMessage<TriggerTypeCode> | undefined): boolean {
    return proto3.util.equals(TriggerTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TriggerTypeCode.Value
 */
export enum TriggerTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NAMED_EVENT = 1;
   */
  NAMED_EVENT = 1,

  /**
   * @generated from enum value: PERIODIC = 2;
   */
  PERIODIC = 2,

  /**
   * @generated from enum value: DATA_ADDED = 3;
   */
  DATA_ADDED = 3,

  /**
   * @generated from enum value: DATA_MODIFIED = 4;
   */
  DATA_MODIFIED = 4,

  /**
   * @generated from enum value: DATA_REMOVED = 5;
   */
  DATA_REMOVED = 5,

  /**
   * @generated from enum value: DATA_ACCESSED = 6;
   */
  DATA_ACCESSED = 6,

  /**
   * @generated from enum value: DATA_ACCESS_ENDED = 7;
   */
  DATA_ACCESS_ENDED = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(TriggerTypeCode_Value)
proto3.util.setEnumType(TriggerTypeCode_Value, "google.fhir.stu3.proto.TriggerTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NAMED_EVENT" },
  { no: 2, name: "PERIODIC" },
  { no: 3, name: "DATA_ADDED" },
  { no: 4, name: "DATA_MODIFIED" },
  { no: 5, name: "DATA_REMOVED" },
  { no: 6, name: "DATA_ACCESSED" },
  { no: 7, name: "DATA_ACCESS_ENDED" },
]);

/**
 * The type of an element - one of the FHIR data types.
 * See http://hl7.org/fhir/ValueSet/data-types
 *
 * @generated from message google.fhir.stu3.proto.DataTypeCode
 */
export class DataTypeCode extends Message<DataTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DataTypeCode.Value value = 1;
   */
  value = DataTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DataTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DataTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DataTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataTypeCode {
    return new DataTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataTypeCode {
    return new DataTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataTypeCode {
    return new DataTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataTypeCode | PlainMessage<DataTypeCode> | undefined, b: DataTypeCode | PlainMessage<DataTypeCode> | undefined): boolean {
    return proto3.util.equals(DataTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DataTypeCode.Value
 */
export enum DataTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADDRESS = 1;
   */
  ADDRESS = 1,

  /**
   * @generated from enum value: AGE = 2;
   */
  AGE = 2,

  /**
   * @generated from enum value: ANNOTATION = 3;
   */
  ANNOTATION = 3,

  /**
   * @generated from enum value: ATTACHMENT = 4;
   */
  ATTACHMENT = 4,

  /**
   * @generated from enum value: BACKBONE_ELEMENT = 5;
   */
  BACKBONE_ELEMENT = 5,

  /**
   * @generated from enum value: CODEABLE_CONCEPT = 6;
   */
  CODEABLE_CONCEPT = 6,

  /**
   * @generated from enum value: CODING = 7;
   */
  CODING = 7,

  /**
   * @generated from enum value: CONTACT_DETAIL = 8;
   */
  CONTACT_DETAIL = 8,

  /**
   * @generated from enum value: CONTACT_POINT = 9;
   */
  CONTACT_POINT = 9,

  /**
   * @generated from enum value: CONTRIBUTOR = 10;
   */
  CONTRIBUTOR = 10,

  /**
   * @generated from enum value: COUNT = 11;
   */
  COUNT = 11,

  /**
   * @generated from enum value: DATA_REQUIREMENT = 12;
   */
  DATA_REQUIREMENT = 12,

  /**
   * @generated from enum value: DISTANCE = 13;
   */
  DISTANCE = 13,

  /**
   * @generated from enum value: DOSAGE = 14;
   */
  DOSAGE = 14,

  /**
   * @generated from enum value: DURATION = 15;
   */
  DURATION = 15,

  /**
   * @generated from enum value: ELEMENT = 16;
   */
  ELEMENT = 16,

  /**
   * @generated from enum value: ELEMENT_DEFINITION = 17;
   */
  ELEMENT_DEFINITION = 17,

  /**
   * @generated from enum value: EXTENSION = 18;
   */
  EXTENSION = 18,

  /**
   * @generated from enum value: HUMAN_NAME = 19;
   */
  HUMAN_NAME = 19,

  /**
   * @generated from enum value: IDENTIFIER = 20;
   */
  IDENTIFIER = 20,

  /**
   * @generated from enum value: META = 21;
   */
  META = 21,

  /**
   * @generated from enum value: MONEY = 22;
   */
  MONEY = 22,

  /**
   * @generated from enum value: NARRATIVE = 23;
   */
  NARRATIVE = 23,

  /**
   * @generated from enum value: PARAMETER_DEFINITION = 24;
   */
  PARAMETER_DEFINITION = 24,

  /**
   * @generated from enum value: PERIOD = 25;
   */
  PERIOD = 25,

  /**
   * @generated from enum value: QUANTITY = 26;
   */
  QUANTITY = 26,

  /**
   * @generated from enum value: RANGE = 27;
   */
  RANGE = 27,

  /**
   * @generated from enum value: RATIO = 28;
   */
  RATIO = 28,

  /**
   * @generated from enum value: REFERENCE = 29;
   */
  REFERENCE = 29,

  /**
   * @generated from enum value: RELATED_ARTIFACT = 30;
   */
  RELATED_ARTIFACT = 30,

  /**
   * @generated from enum value: SAMPLED_DATA = 31;
   */
  SAMPLED_DATA = 31,

  /**
   * @generated from enum value: SIGNATURE = 32;
   */
  SIGNATURE = 32,

  /**
   * @generated from enum value: SIMPLE_QUANTITY = 33;
   */
  SIMPLE_QUANTITY = 33,

  /**
   * @generated from enum value: TIMING = 34;
   */
  TIMING = 34,

  /**
   * @generated from enum value: TRIGGER_DEFINITION = 35;
   */
  TRIGGER_DEFINITION = 35,

  /**
   * @generated from enum value: USAGE_CONTEXT = 36;
   */
  USAGE_CONTEXT = 36,

  /**
   * @generated from enum value: BASE64_BINARY = 37;
   */
  BASE64_BINARY = 37,

  /**
   * @generated from enum value: BOOLEAN = 38;
   */
  BOOLEAN = 38,

  /**
   * @generated from enum value: CODE = 39;
   */
  CODE = 39,

  /**
   * @generated from enum value: DATE = 40;
   */
  DATE = 40,

  /**
   * @generated from enum value: DATE_TIME = 41;
   */
  DATE_TIME = 41,

  /**
   * @generated from enum value: DECIMAL = 42;
   */
  DECIMAL = 42,

  /**
   * @generated from enum value: ID = 43;
   */
  ID = 43,

  /**
   * @generated from enum value: INSTANT = 44;
   */
  INSTANT = 44,

  /**
   * @generated from enum value: INTEGER = 45;
   */
  INTEGER = 45,

  /**
   * @generated from enum value: MARKDOWN = 46;
   */
  MARKDOWN = 46,

  /**
   * @generated from enum value: OID = 47;
   */
  OID = 47,

  /**
   * @generated from enum value: POSITIVE_INT = 48;
   */
  POSITIVE_INT = 48,

  /**
   * @generated from enum value: STRING = 49;
   */
  STRING = 49,

  /**
   * @generated from enum value: TIME = 50;
   */
  TIME = 50,

  /**
   * @generated from enum value: UNSIGNED_INT = 51;
   */
  UNSIGNED_INT = 51,

  /**
   * @generated from enum value: URI = 52;
   */
  URI = 52,

  /**
   * @generated from enum value: UUID = 53;
   */
  UUID = 53,

  /**
   * @generated from enum value: XHTML = 54;
   */
  XHTML = 54,
}
// Retrieve enum metadata with: proto3.getEnumType(DataTypeCode_Value)
proto3.util.setEnumType(DataTypeCode_Value, "google.fhir.stu3.proto.DataTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADDRESS" },
  { no: 2, name: "AGE" },
  { no: 3, name: "ANNOTATION" },
  { no: 4, name: "ATTACHMENT" },
  { no: 5, name: "BACKBONE_ELEMENT" },
  { no: 6, name: "CODEABLE_CONCEPT" },
  { no: 7, name: "CODING" },
  { no: 8, name: "CONTACT_DETAIL" },
  { no: 9, name: "CONTACT_POINT" },
  { no: 10, name: "CONTRIBUTOR" },
  { no: 11, name: "COUNT" },
  { no: 12, name: "DATA_REQUIREMENT" },
  { no: 13, name: "DISTANCE" },
  { no: 14, name: "DOSAGE" },
  { no: 15, name: "DURATION" },
  { no: 16, name: "ELEMENT" },
  { no: 17, name: "ELEMENT_DEFINITION" },
  { no: 18, name: "EXTENSION" },
  { no: 19, name: "HUMAN_NAME" },
  { no: 20, name: "IDENTIFIER" },
  { no: 21, name: "META" },
  { no: 22, name: "MONEY" },
  { no: 23, name: "NARRATIVE" },
  { no: 24, name: "PARAMETER_DEFINITION" },
  { no: 25, name: "PERIOD" },
  { no: 26, name: "QUANTITY" },
  { no: 27, name: "RANGE" },
  { no: 28, name: "RATIO" },
  { no: 29, name: "REFERENCE" },
  { no: 30, name: "RELATED_ARTIFACT" },
  { no: 31, name: "SAMPLED_DATA" },
  { no: 32, name: "SIGNATURE" },
  { no: 33, name: "SIMPLE_QUANTITY" },
  { no: 34, name: "TIMING" },
  { no: 35, name: "TRIGGER_DEFINITION" },
  { no: 36, name: "USAGE_CONTEXT" },
  { no: 37, name: "BASE64_BINARY" },
  { no: 38, name: "BOOLEAN" },
  { no: 39, name: "CODE" },
  { no: 40, name: "DATE" },
  { no: 41, name: "DATE_TIME" },
  { no: 42, name: "DECIMAL" },
  { no: 43, name: "ID" },
  { no: 44, name: "INSTANT" },
  { no: 45, name: "INTEGER" },
  { no: 46, name: "MARKDOWN" },
  { no: 47, name: "OID" },
  { no: 48, name: "POSITIVE_INT" },
  { no: 49, name: "STRING" },
  { no: 50, name: "TIME" },
  { no: 51, name: "UNSIGNED_INT" },
  { no: 52, name: "URI" },
  { no: 53, name: "UUID" },
  { no: 54, name: "XHTML" },
]);

/**
 * Either an abstract type, a resource or a data type.
 * See http://hl7.org/fhir/ValueSet/all-types
 *
 * @generated from message google.fhir.stu3.proto.FHIRAllTypesCode
 */
export class FHIRAllTypesCode extends Message<FHIRAllTypesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FHIRAllTypesCode.Value value = 1;
   */
  value = FHIRAllTypesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FHIRAllTypesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FHIRAllTypesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRAllTypesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRAllTypesCode {
    return new FHIRAllTypesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRAllTypesCode {
    return new FHIRAllTypesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRAllTypesCode {
    return new FHIRAllTypesCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRAllTypesCode | PlainMessage<FHIRAllTypesCode> | undefined, b: FHIRAllTypesCode | PlainMessage<FHIRAllTypesCode> | undefined): boolean {
    return proto3.util.equals(FHIRAllTypesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FHIRAllTypesCode.Value
 */
export enum FHIRAllTypesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADDRESS = 1;
   */
  ADDRESS = 1,

  /**
   * @generated from enum value: AGE = 2;
   */
  AGE = 2,

  /**
   * @generated from enum value: ANNOTATION = 3;
   */
  ANNOTATION = 3,

  /**
   * @generated from enum value: ATTACHMENT = 4;
   */
  ATTACHMENT = 4,

  /**
   * @generated from enum value: BACKBONE_ELEMENT = 5;
   */
  BACKBONE_ELEMENT = 5,

  /**
   * @generated from enum value: CODEABLE_CONCEPT = 6;
   */
  CODEABLE_CONCEPT = 6,

  /**
   * @generated from enum value: CODING = 7;
   */
  CODING = 7,

  /**
   * @generated from enum value: CONTACT_DETAIL = 8;
   */
  CONTACT_DETAIL = 8,

  /**
   * @generated from enum value: CONTACT_POINT = 9;
   */
  CONTACT_POINT = 9,

  /**
   * @generated from enum value: CONTRIBUTOR = 10;
   */
  CONTRIBUTOR = 10,

  /**
   * @generated from enum value: COUNT = 11;
   */
  COUNT = 11,

  /**
   * @generated from enum value: DATA_REQUIREMENT = 12;
   */
  DATA_REQUIREMENT = 12,

  /**
   * @generated from enum value: DISTANCE = 13;
   */
  DISTANCE = 13,

  /**
   * @generated from enum value: DOSAGE = 14;
   */
  DOSAGE = 14,

  /**
   * @generated from enum value: DURATION = 15;
   */
  DURATION = 15,

  /**
   * @generated from enum value: ELEMENT = 16;
   */
  ELEMENT = 16,

  /**
   * @generated from enum value: ELEMENT_DEFINITION = 17;
   */
  ELEMENT_DEFINITION = 17,

  /**
   * @generated from enum value: EXTENSION = 18;
   */
  EXTENSION = 18,

  /**
   * @generated from enum value: HUMAN_NAME = 19;
   */
  HUMAN_NAME = 19,

  /**
   * @generated from enum value: IDENTIFIER = 20;
   */
  IDENTIFIER = 20,

  /**
   * @generated from enum value: META = 21;
   */
  META = 21,

  /**
   * @generated from enum value: MONEY = 22;
   */
  MONEY = 22,

  /**
   * @generated from enum value: NARRATIVE = 23;
   */
  NARRATIVE = 23,

  /**
   * @generated from enum value: PARAMETER_DEFINITION = 24;
   */
  PARAMETER_DEFINITION = 24,

  /**
   * @generated from enum value: PERIOD = 25;
   */
  PERIOD = 25,

  /**
   * @generated from enum value: QUANTITY = 26;
   */
  QUANTITY = 26,

  /**
   * @generated from enum value: RANGE = 27;
   */
  RANGE = 27,

  /**
   * @generated from enum value: RATIO = 28;
   */
  RATIO = 28,

  /**
   * @generated from enum value: REFERENCE = 29;
   */
  REFERENCE = 29,

  /**
   * @generated from enum value: RELATED_ARTIFACT = 30;
   */
  RELATED_ARTIFACT = 30,

  /**
   * @generated from enum value: SAMPLED_DATA = 31;
   */
  SAMPLED_DATA = 31,

  /**
   * @generated from enum value: SIGNATURE = 32;
   */
  SIGNATURE = 32,

  /**
   * @generated from enum value: SIMPLE_QUANTITY = 33;
   */
  SIMPLE_QUANTITY = 33,

  /**
   * @generated from enum value: TIMING = 34;
   */
  TIMING = 34,

  /**
   * @generated from enum value: TRIGGER_DEFINITION = 35;
   */
  TRIGGER_DEFINITION = 35,

  /**
   * @generated from enum value: USAGE_CONTEXT = 36;
   */
  USAGE_CONTEXT = 36,

  /**
   * @generated from enum value: BASE64_BINARY = 37;
   */
  BASE64_BINARY = 37,

  /**
   * @generated from enum value: BOOLEAN = 38;
   */
  BOOLEAN = 38,

  /**
   * @generated from enum value: CODE = 39;
   */
  CODE = 39,

  /**
   * @generated from enum value: DATE = 40;
   */
  DATE = 40,

  /**
   * @generated from enum value: DATE_TIME = 41;
   */
  DATE_TIME = 41,

  /**
   * @generated from enum value: DECIMAL = 42;
   */
  DECIMAL = 42,

  /**
   * @generated from enum value: ID = 43;
   */
  ID = 43,

  /**
   * @generated from enum value: INSTANT = 44;
   */
  INSTANT = 44,

  /**
   * @generated from enum value: INTEGER = 45;
   */
  INTEGER = 45,

  /**
   * @generated from enum value: MARKDOWN = 46;
   */
  MARKDOWN = 46,

  /**
   * @generated from enum value: OID = 47;
   */
  OID = 47,

  /**
   * @generated from enum value: POSITIVE_INT = 48;
   */
  POSITIVE_INT = 48,

  /**
   * @generated from enum value: STRING = 49;
   */
  STRING = 49,

  /**
   * @generated from enum value: TIME = 50;
   */
  TIME = 50,

  /**
   * @generated from enum value: UNSIGNED_INT = 51;
   */
  UNSIGNED_INT = 51,

  /**
   * @generated from enum value: URI = 52;
   */
  URI = 52,

  /**
   * @generated from enum value: UUID = 53;
   */
  UUID = 53,

  /**
   * @generated from enum value: XHTML = 54;
   */
  XHTML = 54,

  /**
   * @generated from enum value: ACCOUNT = 55;
   */
  ACCOUNT = 55,

  /**
   * @generated from enum value: ACTIVITY_DEFINITION = 56;
   */
  ACTIVITY_DEFINITION = 56,

  /**
   * @generated from enum value: ADVERSE_EVENT = 57;
   */
  ADVERSE_EVENT = 57,

  /**
   * @generated from enum value: ALLERGY_INTOLERANCE = 58;
   */
  ALLERGY_INTOLERANCE = 58,

  /**
   * @generated from enum value: APPOINTMENT = 59;
   */
  APPOINTMENT = 59,

  /**
   * @generated from enum value: APPOINTMENT_RESPONSE = 60;
   */
  APPOINTMENT_RESPONSE = 60,

  /**
   * @generated from enum value: AUDIT_EVENT = 61;
   */
  AUDIT_EVENT = 61,

  /**
   * @generated from enum value: BASIC = 62;
   */
  BASIC = 62,

  /**
   * @generated from enum value: BINARY = 63;
   */
  BINARY = 63,

  /**
   * @generated from enum value: BODY_SITE = 64;
   */
  BODY_SITE = 64,

  /**
   * @generated from enum value: BUNDLE = 65;
   */
  BUNDLE = 65,

  /**
   * @generated from enum value: CAPABILITY_STATEMENT = 66;
   */
  CAPABILITY_STATEMENT = 66,

  /**
   * @generated from enum value: CARE_PLAN = 67;
   */
  CARE_PLAN = 67,

  /**
   * @generated from enum value: CARE_TEAM = 68;
   */
  CARE_TEAM = 68,

  /**
   * @generated from enum value: CHARGE_ITEM = 69;
   */
  CHARGE_ITEM = 69,

  /**
   * @generated from enum value: CLAIM = 70;
   */
  CLAIM = 70,

  /**
   * @generated from enum value: CLAIM_RESPONSE = 71;
   */
  CLAIM_RESPONSE = 71,

  /**
   * @generated from enum value: CLINICAL_IMPRESSION = 72;
   */
  CLINICAL_IMPRESSION = 72,

  /**
   * @generated from enum value: CODE_SYSTEM = 73;
   */
  CODE_SYSTEM = 73,

  /**
   * @generated from enum value: COMMUNICATION = 74;
   */
  COMMUNICATION = 74,

  /**
   * @generated from enum value: COMMUNICATION_REQUEST = 75;
   */
  COMMUNICATION_REQUEST = 75,

  /**
   * @generated from enum value: COMPARTMENT_DEFINITION = 76;
   */
  COMPARTMENT_DEFINITION = 76,

  /**
   * @generated from enum value: COMPOSITION = 77;
   */
  COMPOSITION = 77,

  /**
   * @generated from enum value: CONCEPT_MAP = 78;
   */
  CONCEPT_MAP = 78,

  /**
   * @generated from enum value: CONDITION = 79;
   */
  CONDITION = 79,

  /**
   * @generated from enum value: CONSENT = 80;
   */
  CONSENT = 80,

  /**
   * @generated from enum value: CONTRACT = 81;
   */
  CONTRACT = 81,

  /**
   * @generated from enum value: COVERAGE = 82;
   */
  COVERAGE = 82,

  /**
   * @generated from enum value: DATA_ELEMENT = 83;
   */
  DATA_ELEMENT = 83,

  /**
   * @generated from enum value: DETECTED_ISSUE = 84;
   */
  DETECTED_ISSUE = 84,

  /**
   * @generated from enum value: DEVICE = 85;
   */
  DEVICE = 85,

  /**
   * @generated from enum value: DEVICE_COMPONENT = 86;
   */
  DEVICE_COMPONENT = 86,

  /**
   * @generated from enum value: DEVICE_METRIC = 87;
   */
  DEVICE_METRIC = 87,

  /**
   * @generated from enum value: DEVICE_REQUEST = 88;
   */
  DEVICE_REQUEST = 88,

  /**
   * @generated from enum value: DEVICE_USE_STATEMENT = 89;
   */
  DEVICE_USE_STATEMENT = 89,

  /**
   * @generated from enum value: DIAGNOSTIC_REPORT = 90;
   */
  DIAGNOSTIC_REPORT = 90,

  /**
   * @generated from enum value: DOCUMENT_MANIFEST = 91;
   */
  DOCUMENT_MANIFEST = 91,

  /**
   * @generated from enum value: DOCUMENT_REFERENCE = 92;
   */
  DOCUMENT_REFERENCE = 92,

  /**
   * @generated from enum value: DOMAIN_RESOURCE = 93;
   */
  DOMAIN_RESOURCE = 93,

  /**
   * @generated from enum value: ELIGIBILITY_REQUEST = 94;
   */
  ELIGIBILITY_REQUEST = 94,

  /**
   * @generated from enum value: ELIGIBILITY_RESPONSE = 95;
   */
  ELIGIBILITY_RESPONSE = 95,

  /**
   * @generated from enum value: ENCOUNTER = 96;
   */
  ENCOUNTER = 96,

  /**
   * @generated from enum value: ENDPOINT = 97;
   */
  ENDPOINT = 97,

  /**
   * @generated from enum value: ENROLLMENT_REQUEST = 98;
   */
  ENROLLMENT_REQUEST = 98,

  /**
   * @generated from enum value: ENROLLMENT_RESPONSE = 99;
   */
  ENROLLMENT_RESPONSE = 99,

  /**
   * @generated from enum value: EPISODE_OF_CARE = 100;
   */
  EPISODE_OF_CARE = 100,

  /**
   * @generated from enum value: EXPANSION_PROFILE = 101;
   */
  EXPANSION_PROFILE = 101,

  /**
   * @generated from enum value: EXPLANATION_OF_BENEFIT = 102;
   */
  EXPLANATION_OF_BENEFIT = 102,

  /**
   * @generated from enum value: FAMILY_MEMBER_HISTORY = 103;
   */
  FAMILY_MEMBER_HISTORY = 103,

  /**
   * @generated from enum value: FLAG = 104;
   */
  FLAG = 104,

  /**
   * @generated from enum value: GOAL = 105;
   */
  GOAL = 105,

  /**
   * @generated from enum value: GRAPH_DEFINITION = 106;
   */
  GRAPH_DEFINITION = 106,

  /**
   * @generated from enum value: GROUP = 107;
   */
  GROUP = 107,

  /**
   * @generated from enum value: GUIDANCE_RESPONSE = 108;
   */
  GUIDANCE_RESPONSE = 108,

  /**
   * @generated from enum value: HEALTHCARE_SERVICE = 109;
   */
  HEALTHCARE_SERVICE = 109,

  /**
   * @generated from enum value: IMAGING_MANIFEST = 110;
   */
  IMAGING_MANIFEST = 110,

  /**
   * @generated from enum value: IMAGING_STUDY = 111;
   */
  IMAGING_STUDY = 111,

  /**
   * @generated from enum value: IMMUNIZATION = 112;
   */
  IMMUNIZATION = 112,

  /**
   * @generated from enum value: IMMUNIZATION_RECOMMENDATION = 113;
   */
  IMMUNIZATION_RECOMMENDATION = 113,

  /**
   * @generated from enum value: IMPLEMENTATION_GUIDE = 114;
   */
  IMPLEMENTATION_GUIDE = 114,

  /**
   * @generated from enum value: LIBRARY = 115;
   */
  LIBRARY = 115,

  /**
   * @generated from enum value: LINKAGE = 116;
   */
  LINKAGE = 116,

  /**
   * @generated from enum value: LIST = 117;
   */
  LIST = 117,

  /**
   * @generated from enum value: LOCATION = 118;
   */
  LOCATION = 118,

  /**
   * @generated from enum value: MEASURE = 119;
   */
  MEASURE = 119,

  /**
   * @generated from enum value: MEASURE_REPORT = 120;
   */
  MEASURE_REPORT = 120,

  /**
   * @generated from enum value: MEDIA = 121;
   */
  MEDIA = 121,

  /**
   * @generated from enum value: MEDICATION = 122;
   */
  MEDICATION = 122,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION = 123;
   */
  MEDICATION_ADMINISTRATION = 123,

  /**
   * @generated from enum value: MEDICATION_DISPENSE = 124;
   */
  MEDICATION_DISPENSE = 124,

  /**
   * @generated from enum value: MEDICATION_REQUEST = 125;
   */
  MEDICATION_REQUEST = 125,

  /**
   * @generated from enum value: MEDICATION_STATEMENT = 126;
   */
  MEDICATION_STATEMENT = 126,

  /**
   * @generated from enum value: MESSAGE_DEFINITION = 127;
   */
  MESSAGE_DEFINITION = 127,

  /**
   * @generated from enum value: MESSAGE_HEADER = 128;
   */
  MESSAGE_HEADER = 128,

  /**
   * @generated from enum value: NAMING_SYSTEM = 129;
   */
  NAMING_SYSTEM = 129,

  /**
   * @generated from enum value: NUTRITION_ORDER = 130;
   */
  NUTRITION_ORDER = 130,

  /**
   * @generated from enum value: OBSERVATION = 131;
   */
  OBSERVATION = 131,

  /**
   * @generated from enum value: OPERATION_DEFINITION = 132;
   */
  OPERATION_DEFINITION = 132,

  /**
   * @generated from enum value: OPERATION_OUTCOME = 133;
   */
  OPERATION_OUTCOME = 133,

  /**
   * @generated from enum value: ORGANIZATION = 134;
   */
  ORGANIZATION = 134,

  /**
   * @generated from enum value: PARAMETERS = 135;
   */
  PARAMETERS = 135,

  /**
   * @generated from enum value: PATIENT = 136;
   */
  PATIENT = 136,

  /**
   * @generated from enum value: PAYMENT_NOTICE = 137;
   */
  PAYMENT_NOTICE = 137,

  /**
   * @generated from enum value: PAYMENT_RECONCILIATION = 138;
   */
  PAYMENT_RECONCILIATION = 138,

  /**
   * @generated from enum value: PERSON = 139;
   */
  PERSON = 139,

  /**
   * @generated from enum value: PLAN_DEFINITION = 140;
   */
  PLAN_DEFINITION = 140,

  /**
   * @generated from enum value: PRACTITIONER = 141;
   */
  PRACTITIONER = 141,

  /**
   * @generated from enum value: PRACTITIONER_ROLE = 142;
   */
  PRACTITIONER_ROLE = 142,

  /**
   * @generated from enum value: PROCEDURE = 143;
   */
  PROCEDURE = 143,

  /**
   * @generated from enum value: PROCEDURE_REQUEST = 144;
   */
  PROCEDURE_REQUEST = 144,

  /**
   * @generated from enum value: PROCESS_REQUEST = 145;
   */
  PROCESS_REQUEST = 145,

  /**
   * @generated from enum value: PROCESS_RESPONSE = 146;
   */
  PROCESS_RESPONSE = 146,

  /**
   * @generated from enum value: PROVENANCE = 147;
   */
  PROVENANCE = 147,

  /**
   * @generated from enum value: QUESTIONNAIRE = 148;
   */
  QUESTIONNAIRE = 148,

  /**
   * @generated from enum value: QUESTIONNAIRE_RESPONSE = 149;
   */
  QUESTIONNAIRE_RESPONSE = 149,

  /**
   * @generated from enum value: REFERRAL_REQUEST = 150;
   */
  REFERRAL_REQUEST = 150,

  /**
   * @generated from enum value: RELATED_PERSON = 151;
   */
  RELATED_PERSON = 151,

  /**
   * @generated from enum value: REQUEST_GROUP = 152;
   */
  REQUEST_GROUP = 152,

  /**
   * @generated from enum value: RESEARCH_STUDY = 153;
   */
  RESEARCH_STUDY = 153,

  /**
   * @generated from enum value: RESEARCH_SUBJECT = 154;
   */
  RESEARCH_SUBJECT = 154,

  /**
   * @generated from enum value: RESOURCE = 155;
   */
  RESOURCE = 155,

  /**
   * @generated from enum value: RISK_ASSESSMENT = 156;
   */
  RISK_ASSESSMENT = 156,

  /**
   * @generated from enum value: SCHEDULE = 157;
   */
  SCHEDULE = 157,

  /**
   * @generated from enum value: SEARCH_PARAMETER = 158;
   */
  SEARCH_PARAMETER = 158,

  /**
   * @generated from enum value: SEQUENCE = 159;
   */
  SEQUENCE = 159,

  /**
   * @generated from enum value: SERVICE_DEFINITION = 160;
   */
  SERVICE_DEFINITION = 160,

  /**
   * @generated from enum value: SLOT = 161;
   */
  SLOT = 161,

  /**
   * @generated from enum value: SPECIMEN = 162;
   */
  SPECIMEN = 162,

  /**
   * @generated from enum value: STRUCTURE_DEFINITION = 163;
   */
  STRUCTURE_DEFINITION = 163,

  /**
   * @generated from enum value: STRUCTURE_MAP = 164;
   */
  STRUCTURE_MAP = 164,

  /**
   * @generated from enum value: SUBSCRIPTION = 165;
   */
  SUBSCRIPTION = 165,

  /**
   * @generated from enum value: SUBSTANCE = 166;
   */
  SUBSTANCE = 166,

  /**
   * @generated from enum value: SUPPLY_DELIVERY = 167;
   */
  SUPPLY_DELIVERY = 167,

  /**
   * @generated from enum value: SUPPLY_REQUEST = 168;
   */
  SUPPLY_REQUEST = 168,

  /**
   * @generated from enum value: TASK = 169;
   */
  TASK = 169,

  /**
   * @generated from enum value: TEST_REPORT = 170;
   */
  TEST_REPORT = 170,

  /**
   * @generated from enum value: TEST_SCRIPT = 171;
   */
  TEST_SCRIPT = 171,

  /**
   * @generated from enum value: VALUE_SET = 172;
   */
  VALUE_SET = 172,

  /**
   * @generated from enum value: VISION_PRESCRIPTION = 173;
   */
  VISION_PRESCRIPTION = 173,

  /**
   * @generated from enum value: TYPE = 174;
   */
  TYPE = 174,

  /**
   * @generated from enum value: ANY = 175;
   */
  ANY = 175,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRAllTypesCode_Value)
proto3.util.setEnumType(FHIRAllTypesCode_Value, "google.fhir.stu3.proto.FHIRAllTypesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADDRESS" },
  { no: 2, name: "AGE" },
  { no: 3, name: "ANNOTATION" },
  { no: 4, name: "ATTACHMENT" },
  { no: 5, name: "BACKBONE_ELEMENT" },
  { no: 6, name: "CODEABLE_CONCEPT" },
  { no: 7, name: "CODING" },
  { no: 8, name: "CONTACT_DETAIL" },
  { no: 9, name: "CONTACT_POINT" },
  { no: 10, name: "CONTRIBUTOR" },
  { no: 11, name: "COUNT" },
  { no: 12, name: "DATA_REQUIREMENT" },
  { no: 13, name: "DISTANCE" },
  { no: 14, name: "DOSAGE" },
  { no: 15, name: "DURATION" },
  { no: 16, name: "ELEMENT" },
  { no: 17, name: "ELEMENT_DEFINITION" },
  { no: 18, name: "EXTENSION" },
  { no: 19, name: "HUMAN_NAME" },
  { no: 20, name: "IDENTIFIER" },
  { no: 21, name: "META" },
  { no: 22, name: "MONEY" },
  { no: 23, name: "NARRATIVE" },
  { no: 24, name: "PARAMETER_DEFINITION" },
  { no: 25, name: "PERIOD" },
  { no: 26, name: "QUANTITY" },
  { no: 27, name: "RANGE" },
  { no: 28, name: "RATIO" },
  { no: 29, name: "REFERENCE" },
  { no: 30, name: "RELATED_ARTIFACT" },
  { no: 31, name: "SAMPLED_DATA" },
  { no: 32, name: "SIGNATURE" },
  { no: 33, name: "SIMPLE_QUANTITY" },
  { no: 34, name: "TIMING" },
  { no: 35, name: "TRIGGER_DEFINITION" },
  { no: 36, name: "USAGE_CONTEXT" },
  { no: 37, name: "BASE64_BINARY" },
  { no: 38, name: "BOOLEAN" },
  { no: 39, name: "CODE" },
  { no: 40, name: "DATE" },
  { no: 41, name: "DATE_TIME" },
  { no: 42, name: "DECIMAL" },
  { no: 43, name: "ID" },
  { no: 44, name: "INSTANT" },
  { no: 45, name: "INTEGER" },
  { no: 46, name: "MARKDOWN" },
  { no: 47, name: "OID" },
  { no: 48, name: "POSITIVE_INT" },
  { no: 49, name: "STRING" },
  { no: 50, name: "TIME" },
  { no: 51, name: "UNSIGNED_INT" },
  { no: 52, name: "URI" },
  { no: 53, name: "UUID" },
  { no: 54, name: "XHTML" },
  { no: 55, name: "ACCOUNT" },
  { no: 56, name: "ACTIVITY_DEFINITION" },
  { no: 57, name: "ADVERSE_EVENT" },
  { no: 58, name: "ALLERGY_INTOLERANCE" },
  { no: 59, name: "APPOINTMENT" },
  { no: 60, name: "APPOINTMENT_RESPONSE" },
  { no: 61, name: "AUDIT_EVENT" },
  { no: 62, name: "BASIC" },
  { no: 63, name: "BINARY" },
  { no: 64, name: "BODY_SITE" },
  { no: 65, name: "BUNDLE" },
  { no: 66, name: "CAPABILITY_STATEMENT" },
  { no: 67, name: "CARE_PLAN" },
  { no: 68, name: "CARE_TEAM" },
  { no: 69, name: "CHARGE_ITEM" },
  { no: 70, name: "CLAIM" },
  { no: 71, name: "CLAIM_RESPONSE" },
  { no: 72, name: "CLINICAL_IMPRESSION" },
  { no: 73, name: "CODE_SYSTEM" },
  { no: 74, name: "COMMUNICATION" },
  { no: 75, name: "COMMUNICATION_REQUEST" },
  { no: 76, name: "COMPARTMENT_DEFINITION" },
  { no: 77, name: "COMPOSITION" },
  { no: 78, name: "CONCEPT_MAP" },
  { no: 79, name: "CONDITION" },
  { no: 80, name: "CONSENT" },
  { no: 81, name: "CONTRACT" },
  { no: 82, name: "COVERAGE" },
  { no: 83, name: "DATA_ELEMENT" },
  { no: 84, name: "DETECTED_ISSUE" },
  { no: 85, name: "DEVICE" },
  { no: 86, name: "DEVICE_COMPONENT" },
  { no: 87, name: "DEVICE_METRIC" },
  { no: 88, name: "DEVICE_REQUEST" },
  { no: 89, name: "DEVICE_USE_STATEMENT" },
  { no: 90, name: "DIAGNOSTIC_REPORT" },
  { no: 91, name: "DOCUMENT_MANIFEST" },
  { no: 92, name: "DOCUMENT_REFERENCE" },
  { no: 93, name: "DOMAIN_RESOURCE" },
  { no: 94, name: "ELIGIBILITY_REQUEST" },
  { no: 95, name: "ELIGIBILITY_RESPONSE" },
  { no: 96, name: "ENCOUNTER" },
  { no: 97, name: "ENDPOINT" },
  { no: 98, name: "ENROLLMENT_REQUEST" },
  { no: 99, name: "ENROLLMENT_RESPONSE" },
  { no: 100, name: "EPISODE_OF_CARE" },
  { no: 101, name: "EXPANSION_PROFILE" },
  { no: 102, name: "EXPLANATION_OF_BENEFIT" },
  { no: 103, name: "FAMILY_MEMBER_HISTORY" },
  { no: 104, name: "FLAG" },
  { no: 105, name: "GOAL" },
  { no: 106, name: "GRAPH_DEFINITION" },
  { no: 107, name: "GROUP" },
  { no: 108, name: "GUIDANCE_RESPONSE" },
  { no: 109, name: "HEALTHCARE_SERVICE" },
  { no: 110, name: "IMAGING_MANIFEST" },
  { no: 111, name: "IMAGING_STUDY" },
  { no: 112, name: "IMMUNIZATION" },
  { no: 113, name: "IMMUNIZATION_RECOMMENDATION" },
  { no: 114, name: "IMPLEMENTATION_GUIDE" },
  { no: 115, name: "LIBRARY" },
  { no: 116, name: "LINKAGE" },
  { no: 117, name: "LIST" },
  { no: 118, name: "LOCATION" },
  { no: 119, name: "MEASURE" },
  { no: 120, name: "MEASURE_REPORT" },
  { no: 121, name: "MEDIA" },
  { no: 122, name: "MEDICATION" },
  { no: 123, name: "MEDICATION_ADMINISTRATION" },
  { no: 124, name: "MEDICATION_DISPENSE" },
  { no: 125, name: "MEDICATION_REQUEST" },
  { no: 126, name: "MEDICATION_STATEMENT" },
  { no: 127, name: "MESSAGE_DEFINITION" },
  { no: 128, name: "MESSAGE_HEADER" },
  { no: 129, name: "NAMING_SYSTEM" },
  { no: 130, name: "NUTRITION_ORDER" },
  { no: 131, name: "OBSERVATION" },
  { no: 132, name: "OPERATION_DEFINITION" },
  { no: 133, name: "OPERATION_OUTCOME" },
  { no: 134, name: "ORGANIZATION" },
  { no: 135, name: "PARAMETERS" },
  { no: 136, name: "PATIENT" },
  { no: 137, name: "PAYMENT_NOTICE" },
  { no: 138, name: "PAYMENT_RECONCILIATION" },
  { no: 139, name: "PERSON" },
  { no: 140, name: "PLAN_DEFINITION" },
  { no: 141, name: "PRACTITIONER" },
  { no: 142, name: "PRACTITIONER_ROLE" },
  { no: 143, name: "PROCEDURE" },
  { no: 144, name: "PROCEDURE_REQUEST" },
  { no: 145, name: "PROCESS_REQUEST" },
  { no: 146, name: "PROCESS_RESPONSE" },
  { no: 147, name: "PROVENANCE" },
  { no: 148, name: "QUESTIONNAIRE" },
  { no: 149, name: "QUESTIONNAIRE_RESPONSE" },
  { no: 150, name: "REFERRAL_REQUEST" },
  { no: 151, name: "RELATED_PERSON" },
  { no: 152, name: "REQUEST_GROUP" },
  { no: 153, name: "RESEARCH_STUDY" },
  { no: 154, name: "RESEARCH_SUBJECT" },
  { no: 155, name: "RESOURCE" },
  { no: 156, name: "RISK_ASSESSMENT" },
  { no: 157, name: "SCHEDULE" },
  { no: 158, name: "SEARCH_PARAMETER" },
  { no: 159, name: "SEQUENCE" },
  { no: 160, name: "SERVICE_DEFINITION" },
  { no: 161, name: "SLOT" },
  { no: 162, name: "SPECIMEN" },
  { no: 163, name: "STRUCTURE_DEFINITION" },
  { no: 164, name: "STRUCTURE_MAP" },
  { no: 165, name: "SUBSCRIPTION" },
  { no: 166, name: "SUBSTANCE" },
  { no: 167, name: "SUPPLY_DELIVERY" },
  { no: 168, name: "SUPPLY_REQUEST" },
  { no: 169, name: "TASK" },
  { no: 170, name: "TEST_REPORT" },
  { no: 171, name: "TEST_SCRIPT" },
  { no: 172, name: "VALUE_SET" },
  { no: 173, name: "VISION_PRESCRIPTION" },
  { no: 174, name: "TYPE" },
  { no: 175, name: "ANY" },
]);

/**
 * Either a resource or a data type.
 * See http://hl7.org/fhir/ValueSet/defined-types
 *
 * @generated from message google.fhir.stu3.proto.FHIRDefinedTypeCode
 */
export class FHIRDefinedTypeCode extends Message<FHIRDefinedTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FHIRDefinedTypeCode.Value value = 1;
   */
  value = FHIRDefinedTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FHIRDefinedTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FHIRDefinedTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRDefinedTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRDefinedTypeCode {
    return new FHIRDefinedTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRDefinedTypeCode {
    return new FHIRDefinedTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRDefinedTypeCode {
    return new FHIRDefinedTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRDefinedTypeCode | PlainMessage<FHIRDefinedTypeCode> | undefined, b: FHIRDefinedTypeCode | PlainMessage<FHIRDefinedTypeCode> | undefined): boolean {
    return proto3.util.equals(FHIRDefinedTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FHIRDefinedTypeCode.Value
 */
export enum FHIRDefinedTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADDRESS = 1;
   */
  ADDRESS = 1,

  /**
   * @generated from enum value: AGE = 2;
   */
  AGE = 2,

  /**
   * @generated from enum value: ANNOTATION = 3;
   */
  ANNOTATION = 3,

  /**
   * @generated from enum value: ATTACHMENT = 4;
   */
  ATTACHMENT = 4,

  /**
   * @generated from enum value: BACKBONE_ELEMENT = 5;
   */
  BACKBONE_ELEMENT = 5,

  /**
   * @generated from enum value: CODEABLE_CONCEPT = 6;
   */
  CODEABLE_CONCEPT = 6,

  /**
   * @generated from enum value: CODING = 7;
   */
  CODING = 7,

  /**
   * @generated from enum value: CONTACT_DETAIL = 8;
   */
  CONTACT_DETAIL = 8,

  /**
   * @generated from enum value: CONTACT_POINT = 9;
   */
  CONTACT_POINT = 9,

  /**
   * @generated from enum value: CONTRIBUTOR = 10;
   */
  CONTRIBUTOR = 10,

  /**
   * @generated from enum value: COUNT = 11;
   */
  COUNT = 11,

  /**
   * @generated from enum value: DATA_REQUIREMENT = 12;
   */
  DATA_REQUIREMENT = 12,

  /**
   * @generated from enum value: DISTANCE = 13;
   */
  DISTANCE = 13,

  /**
   * @generated from enum value: DOSAGE = 14;
   */
  DOSAGE = 14,

  /**
   * @generated from enum value: DURATION = 15;
   */
  DURATION = 15,

  /**
   * @generated from enum value: ELEMENT = 16;
   */
  ELEMENT = 16,

  /**
   * @generated from enum value: ELEMENT_DEFINITION = 17;
   */
  ELEMENT_DEFINITION = 17,

  /**
   * @generated from enum value: EXTENSION = 18;
   */
  EXTENSION = 18,

  /**
   * @generated from enum value: HUMAN_NAME = 19;
   */
  HUMAN_NAME = 19,

  /**
   * @generated from enum value: IDENTIFIER = 20;
   */
  IDENTIFIER = 20,

  /**
   * @generated from enum value: META = 21;
   */
  META = 21,

  /**
   * @generated from enum value: MONEY = 22;
   */
  MONEY = 22,

  /**
   * @generated from enum value: NARRATIVE = 23;
   */
  NARRATIVE = 23,

  /**
   * @generated from enum value: PARAMETER_DEFINITION = 24;
   */
  PARAMETER_DEFINITION = 24,

  /**
   * @generated from enum value: PERIOD = 25;
   */
  PERIOD = 25,

  /**
   * @generated from enum value: QUANTITY = 26;
   */
  QUANTITY = 26,

  /**
   * @generated from enum value: RANGE = 27;
   */
  RANGE = 27,

  /**
   * @generated from enum value: RATIO = 28;
   */
  RATIO = 28,

  /**
   * @generated from enum value: REFERENCE = 29;
   */
  REFERENCE = 29,

  /**
   * @generated from enum value: RELATED_ARTIFACT = 30;
   */
  RELATED_ARTIFACT = 30,

  /**
   * @generated from enum value: SAMPLED_DATA = 31;
   */
  SAMPLED_DATA = 31,

  /**
   * @generated from enum value: SIGNATURE = 32;
   */
  SIGNATURE = 32,

  /**
   * @generated from enum value: SIMPLE_QUANTITY = 33;
   */
  SIMPLE_QUANTITY = 33,

  /**
   * @generated from enum value: TIMING = 34;
   */
  TIMING = 34,

  /**
   * @generated from enum value: TRIGGER_DEFINITION = 35;
   */
  TRIGGER_DEFINITION = 35,

  /**
   * @generated from enum value: USAGE_CONTEXT = 36;
   */
  USAGE_CONTEXT = 36,

  /**
   * @generated from enum value: BASE64_BINARY = 37;
   */
  BASE64_BINARY = 37,

  /**
   * @generated from enum value: BOOLEAN = 38;
   */
  BOOLEAN = 38,

  /**
   * @generated from enum value: CODE = 39;
   */
  CODE = 39,

  /**
   * @generated from enum value: DATE = 40;
   */
  DATE = 40,

  /**
   * @generated from enum value: DATE_TIME = 41;
   */
  DATE_TIME = 41,

  /**
   * @generated from enum value: DECIMAL = 42;
   */
  DECIMAL = 42,

  /**
   * @generated from enum value: ID = 43;
   */
  ID = 43,

  /**
   * @generated from enum value: INSTANT = 44;
   */
  INSTANT = 44,

  /**
   * @generated from enum value: INTEGER = 45;
   */
  INTEGER = 45,

  /**
   * @generated from enum value: MARKDOWN = 46;
   */
  MARKDOWN = 46,

  /**
   * @generated from enum value: OID = 47;
   */
  OID = 47,

  /**
   * @generated from enum value: POSITIVE_INT = 48;
   */
  POSITIVE_INT = 48,

  /**
   * @generated from enum value: STRING = 49;
   */
  STRING = 49,

  /**
   * @generated from enum value: TIME = 50;
   */
  TIME = 50,

  /**
   * @generated from enum value: UNSIGNED_INT = 51;
   */
  UNSIGNED_INT = 51,

  /**
   * @generated from enum value: URI = 52;
   */
  URI = 52,

  /**
   * @generated from enum value: UUID = 53;
   */
  UUID = 53,

  /**
   * @generated from enum value: XHTML = 54;
   */
  XHTML = 54,

  /**
   * @generated from enum value: ACCOUNT = 55;
   */
  ACCOUNT = 55,

  /**
   * @generated from enum value: ACTIVITY_DEFINITION = 56;
   */
  ACTIVITY_DEFINITION = 56,

  /**
   * @generated from enum value: ADVERSE_EVENT = 57;
   */
  ADVERSE_EVENT = 57,

  /**
   * @generated from enum value: ALLERGY_INTOLERANCE = 58;
   */
  ALLERGY_INTOLERANCE = 58,

  /**
   * @generated from enum value: APPOINTMENT = 59;
   */
  APPOINTMENT = 59,

  /**
   * @generated from enum value: APPOINTMENT_RESPONSE = 60;
   */
  APPOINTMENT_RESPONSE = 60,

  /**
   * @generated from enum value: AUDIT_EVENT = 61;
   */
  AUDIT_EVENT = 61,

  /**
   * @generated from enum value: BASIC = 62;
   */
  BASIC = 62,

  /**
   * @generated from enum value: BINARY = 63;
   */
  BINARY = 63,

  /**
   * @generated from enum value: BODY_SITE = 64;
   */
  BODY_SITE = 64,

  /**
   * @generated from enum value: BUNDLE = 65;
   */
  BUNDLE = 65,

  /**
   * @generated from enum value: CAPABILITY_STATEMENT = 66;
   */
  CAPABILITY_STATEMENT = 66,

  /**
   * @generated from enum value: CARE_PLAN = 67;
   */
  CARE_PLAN = 67,

  /**
   * @generated from enum value: CARE_TEAM = 68;
   */
  CARE_TEAM = 68,

  /**
   * @generated from enum value: CHARGE_ITEM = 69;
   */
  CHARGE_ITEM = 69,

  /**
   * @generated from enum value: CLAIM = 70;
   */
  CLAIM = 70,

  /**
   * @generated from enum value: CLAIM_RESPONSE = 71;
   */
  CLAIM_RESPONSE = 71,

  /**
   * @generated from enum value: CLINICAL_IMPRESSION = 72;
   */
  CLINICAL_IMPRESSION = 72,

  /**
   * @generated from enum value: CODE_SYSTEM = 73;
   */
  CODE_SYSTEM = 73,

  /**
   * @generated from enum value: COMMUNICATION = 74;
   */
  COMMUNICATION = 74,

  /**
   * @generated from enum value: COMMUNICATION_REQUEST = 75;
   */
  COMMUNICATION_REQUEST = 75,

  /**
   * @generated from enum value: COMPARTMENT_DEFINITION = 76;
   */
  COMPARTMENT_DEFINITION = 76,

  /**
   * @generated from enum value: COMPOSITION = 77;
   */
  COMPOSITION = 77,

  /**
   * @generated from enum value: CONCEPT_MAP = 78;
   */
  CONCEPT_MAP = 78,

  /**
   * @generated from enum value: CONDITION = 79;
   */
  CONDITION = 79,

  /**
   * @generated from enum value: CONSENT = 80;
   */
  CONSENT = 80,

  /**
   * @generated from enum value: CONTRACT = 81;
   */
  CONTRACT = 81,

  /**
   * @generated from enum value: COVERAGE = 82;
   */
  COVERAGE = 82,

  /**
   * @generated from enum value: DATA_ELEMENT = 83;
   */
  DATA_ELEMENT = 83,

  /**
   * @generated from enum value: DETECTED_ISSUE = 84;
   */
  DETECTED_ISSUE = 84,

  /**
   * @generated from enum value: DEVICE = 85;
   */
  DEVICE = 85,

  /**
   * @generated from enum value: DEVICE_COMPONENT = 86;
   */
  DEVICE_COMPONENT = 86,

  /**
   * @generated from enum value: DEVICE_METRIC = 87;
   */
  DEVICE_METRIC = 87,

  /**
   * @generated from enum value: DEVICE_REQUEST = 88;
   */
  DEVICE_REQUEST = 88,

  /**
   * @generated from enum value: DEVICE_USE_STATEMENT = 89;
   */
  DEVICE_USE_STATEMENT = 89,

  /**
   * @generated from enum value: DIAGNOSTIC_REPORT = 90;
   */
  DIAGNOSTIC_REPORT = 90,

  /**
   * @generated from enum value: DOCUMENT_MANIFEST = 91;
   */
  DOCUMENT_MANIFEST = 91,

  /**
   * @generated from enum value: DOCUMENT_REFERENCE = 92;
   */
  DOCUMENT_REFERENCE = 92,

  /**
   * @generated from enum value: DOMAIN_RESOURCE = 93;
   */
  DOMAIN_RESOURCE = 93,

  /**
   * @generated from enum value: ELIGIBILITY_REQUEST = 94;
   */
  ELIGIBILITY_REQUEST = 94,

  /**
   * @generated from enum value: ELIGIBILITY_RESPONSE = 95;
   */
  ELIGIBILITY_RESPONSE = 95,

  /**
   * @generated from enum value: ENCOUNTER = 96;
   */
  ENCOUNTER = 96,

  /**
   * @generated from enum value: ENDPOINT = 97;
   */
  ENDPOINT = 97,

  /**
   * @generated from enum value: ENROLLMENT_REQUEST = 98;
   */
  ENROLLMENT_REQUEST = 98,

  /**
   * @generated from enum value: ENROLLMENT_RESPONSE = 99;
   */
  ENROLLMENT_RESPONSE = 99,

  /**
   * @generated from enum value: EPISODE_OF_CARE = 100;
   */
  EPISODE_OF_CARE = 100,

  /**
   * @generated from enum value: EXPANSION_PROFILE = 101;
   */
  EXPANSION_PROFILE = 101,

  /**
   * @generated from enum value: EXPLANATION_OF_BENEFIT = 102;
   */
  EXPLANATION_OF_BENEFIT = 102,

  /**
   * @generated from enum value: FAMILY_MEMBER_HISTORY = 103;
   */
  FAMILY_MEMBER_HISTORY = 103,

  /**
   * @generated from enum value: FLAG = 104;
   */
  FLAG = 104,

  /**
   * @generated from enum value: GOAL = 105;
   */
  GOAL = 105,

  /**
   * @generated from enum value: GRAPH_DEFINITION = 106;
   */
  GRAPH_DEFINITION = 106,

  /**
   * @generated from enum value: GROUP = 107;
   */
  GROUP = 107,

  /**
   * @generated from enum value: GUIDANCE_RESPONSE = 108;
   */
  GUIDANCE_RESPONSE = 108,

  /**
   * @generated from enum value: HEALTHCARE_SERVICE = 109;
   */
  HEALTHCARE_SERVICE = 109,

  /**
   * @generated from enum value: IMAGING_MANIFEST = 110;
   */
  IMAGING_MANIFEST = 110,

  /**
   * @generated from enum value: IMAGING_STUDY = 111;
   */
  IMAGING_STUDY = 111,

  /**
   * @generated from enum value: IMMUNIZATION = 112;
   */
  IMMUNIZATION = 112,

  /**
   * @generated from enum value: IMMUNIZATION_RECOMMENDATION = 113;
   */
  IMMUNIZATION_RECOMMENDATION = 113,

  /**
   * @generated from enum value: IMPLEMENTATION_GUIDE = 114;
   */
  IMPLEMENTATION_GUIDE = 114,

  /**
   * @generated from enum value: LIBRARY = 115;
   */
  LIBRARY = 115,

  /**
   * @generated from enum value: LINKAGE = 116;
   */
  LINKAGE = 116,

  /**
   * @generated from enum value: LIST = 117;
   */
  LIST = 117,

  /**
   * @generated from enum value: LOCATION = 118;
   */
  LOCATION = 118,

  /**
   * @generated from enum value: MEASURE = 119;
   */
  MEASURE = 119,

  /**
   * @generated from enum value: MEASURE_REPORT = 120;
   */
  MEASURE_REPORT = 120,

  /**
   * @generated from enum value: MEDIA = 121;
   */
  MEDIA = 121,

  /**
   * @generated from enum value: MEDICATION = 122;
   */
  MEDICATION = 122,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION = 123;
   */
  MEDICATION_ADMINISTRATION = 123,

  /**
   * @generated from enum value: MEDICATION_DISPENSE = 124;
   */
  MEDICATION_DISPENSE = 124,

  /**
   * @generated from enum value: MEDICATION_REQUEST = 125;
   */
  MEDICATION_REQUEST = 125,

  /**
   * @generated from enum value: MEDICATION_STATEMENT = 126;
   */
  MEDICATION_STATEMENT = 126,

  /**
   * @generated from enum value: MESSAGE_DEFINITION = 127;
   */
  MESSAGE_DEFINITION = 127,

  /**
   * @generated from enum value: MESSAGE_HEADER = 128;
   */
  MESSAGE_HEADER = 128,

  /**
   * @generated from enum value: NAMING_SYSTEM = 129;
   */
  NAMING_SYSTEM = 129,

  /**
   * @generated from enum value: NUTRITION_ORDER = 130;
   */
  NUTRITION_ORDER = 130,

  /**
   * @generated from enum value: OBSERVATION = 131;
   */
  OBSERVATION = 131,

  /**
   * @generated from enum value: OPERATION_DEFINITION = 132;
   */
  OPERATION_DEFINITION = 132,

  /**
   * @generated from enum value: OPERATION_OUTCOME = 133;
   */
  OPERATION_OUTCOME = 133,

  /**
   * @generated from enum value: ORGANIZATION = 134;
   */
  ORGANIZATION = 134,

  /**
   * @generated from enum value: PARAMETERS = 135;
   */
  PARAMETERS = 135,

  /**
   * @generated from enum value: PATIENT = 136;
   */
  PATIENT = 136,

  /**
   * @generated from enum value: PAYMENT_NOTICE = 137;
   */
  PAYMENT_NOTICE = 137,

  /**
   * @generated from enum value: PAYMENT_RECONCILIATION = 138;
   */
  PAYMENT_RECONCILIATION = 138,

  /**
   * @generated from enum value: PERSON = 139;
   */
  PERSON = 139,

  /**
   * @generated from enum value: PLAN_DEFINITION = 140;
   */
  PLAN_DEFINITION = 140,

  /**
   * @generated from enum value: PRACTITIONER = 141;
   */
  PRACTITIONER = 141,

  /**
   * @generated from enum value: PRACTITIONER_ROLE = 142;
   */
  PRACTITIONER_ROLE = 142,

  /**
   * @generated from enum value: PROCEDURE = 143;
   */
  PROCEDURE = 143,

  /**
   * @generated from enum value: PROCEDURE_REQUEST = 144;
   */
  PROCEDURE_REQUEST = 144,

  /**
   * @generated from enum value: PROCESS_REQUEST = 145;
   */
  PROCESS_REQUEST = 145,

  /**
   * @generated from enum value: PROCESS_RESPONSE = 146;
   */
  PROCESS_RESPONSE = 146,

  /**
   * @generated from enum value: PROVENANCE = 147;
   */
  PROVENANCE = 147,

  /**
   * @generated from enum value: QUESTIONNAIRE = 148;
   */
  QUESTIONNAIRE = 148,

  /**
   * @generated from enum value: QUESTIONNAIRE_RESPONSE = 149;
   */
  QUESTIONNAIRE_RESPONSE = 149,

  /**
   * @generated from enum value: REFERRAL_REQUEST = 150;
   */
  REFERRAL_REQUEST = 150,

  /**
   * @generated from enum value: RELATED_PERSON = 151;
   */
  RELATED_PERSON = 151,

  /**
   * @generated from enum value: REQUEST_GROUP = 152;
   */
  REQUEST_GROUP = 152,

  /**
   * @generated from enum value: RESEARCH_STUDY = 153;
   */
  RESEARCH_STUDY = 153,

  /**
   * @generated from enum value: RESEARCH_SUBJECT = 154;
   */
  RESEARCH_SUBJECT = 154,

  /**
   * @generated from enum value: RESOURCE = 155;
   */
  RESOURCE = 155,

  /**
   * @generated from enum value: RISK_ASSESSMENT = 156;
   */
  RISK_ASSESSMENT = 156,

  /**
   * @generated from enum value: SCHEDULE = 157;
   */
  SCHEDULE = 157,

  /**
   * @generated from enum value: SEARCH_PARAMETER = 158;
   */
  SEARCH_PARAMETER = 158,

  /**
   * @generated from enum value: SEQUENCE = 159;
   */
  SEQUENCE = 159,

  /**
   * @generated from enum value: SERVICE_DEFINITION = 160;
   */
  SERVICE_DEFINITION = 160,

  /**
   * @generated from enum value: SLOT = 161;
   */
  SLOT = 161,

  /**
   * @generated from enum value: SPECIMEN = 162;
   */
  SPECIMEN = 162,

  /**
   * @generated from enum value: STRUCTURE_DEFINITION = 163;
   */
  STRUCTURE_DEFINITION = 163,

  /**
   * @generated from enum value: STRUCTURE_MAP = 164;
   */
  STRUCTURE_MAP = 164,

  /**
   * @generated from enum value: SUBSCRIPTION = 165;
   */
  SUBSCRIPTION = 165,

  /**
   * @generated from enum value: SUBSTANCE = 166;
   */
  SUBSTANCE = 166,

  /**
   * @generated from enum value: SUPPLY_DELIVERY = 167;
   */
  SUPPLY_DELIVERY = 167,

  /**
   * @generated from enum value: SUPPLY_REQUEST = 168;
   */
  SUPPLY_REQUEST = 168,

  /**
   * @generated from enum value: TASK = 169;
   */
  TASK = 169,

  /**
   * @generated from enum value: TEST_REPORT = 170;
   */
  TEST_REPORT = 170,

  /**
   * @generated from enum value: TEST_SCRIPT = 171;
   */
  TEST_SCRIPT = 171,

  /**
   * @generated from enum value: VALUE_SET = 172;
   */
  VALUE_SET = 172,

  /**
   * @generated from enum value: VISION_PRESCRIPTION = 173;
   */
  VISION_PRESCRIPTION = 173,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRDefinedTypeCode_Value)
proto3.util.setEnumType(FHIRDefinedTypeCode_Value, "google.fhir.stu3.proto.FHIRDefinedTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADDRESS" },
  { no: 2, name: "AGE" },
  { no: 3, name: "ANNOTATION" },
  { no: 4, name: "ATTACHMENT" },
  { no: 5, name: "BACKBONE_ELEMENT" },
  { no: 6, name: "CODEABLE_CONCEPT" },
  { no: 7, name: "CODING" },
  { no: 8, name: "CONTACT_DETAIL" },
  { no: 9, name: "CONTACT_POINT" },
  { no: 10, name: "CONTRIBUTOR" },
  { no: 11, name: "COUNT" },
  { no: 12, name: "DATA_REQUIREMENT" },
  { no: 13, name: "DISTANCE" },
  { no: 14, name: "DOSAGE" },
  { no: 15, name: "DURATION" },
  { no: 16, name: "ELEMENT" },
  { no: 17, name: "ELEMENT_DEFINITION" },
  { no: 18, name: "EXTENSION" },
  { no: 19, name: "HUMAN_NAME" },
  { no: 20, name: "IDENTIFIER" },
  { no: 21, name: "META" },
  { no: 22, name: "MONEY" },
  { no: 23, name: "NARRATIVE" },
  { no: 24, name: "PARAMETER_DEFINITION" },
  { no: 25, name: "PERIOD" },
  { no: 26, name: "QUANTITY" },
  { no: 27, name: "RANGE" },
  { no: 28, name: "RATIO" },
  { no: 29, name: "REFERENCE" },
  { no: 30, name: "RELATED_ARTIFACT" },
  { no: 31, name: "SAMPLED_DATA" },
  { no: 32, name: "SIGNATURE" },
  { no: 33, name: "SIMPLE_QUANTITY" },
  { no: 34, name: "TIMING" },
  { no: 35, name: "TRIGGER_DEFINITION" },
  { no: 36, name: "USAGE_CONTEXT" },
  { no: 37, name: "BASE64_BINARY" },
  { no: 38, name: "BOOLEAN" },
  { no: 39, name: "CODE" },
  { no: 40, name: "DATE" },
  { no: 41, name: "DATE_TIME" },
  { no: 42, name: "DECIMAL" },
  { no: 43, name: "ID" },
  { no: 44, name: "INSTANT" },
  { no: 45, name: "INTEGER" },
  { no: 46, name: "MARKDOWN" },
  { no: 47, name: "OID" },
  { no: 48, name: "POSITIVE_INT" },
  { no: 49, name: "STRING" },
  { no: 50, name: "TIME" },
  { no: 51, name: "UNSIGNED_INT" },
  { no: 52, name: "URI" },
  { no: 53, name: "UUID" },
  { no: 54, name: "XHTML" },
  { no: 55, name: "ACCOUNT" },
  { no: 56, name: "ACTIVITY_DEFINITION" },
  { no: 57, name: "ADVERSE_EVENT" },
  { no: 58, name: "ALLERGY_INTOLERANCE" },
  { no: 59, name: "APPOINTMENT" },
  { no: 60, name: "APPOINTMENT_RESPONSE" },
  { no: 61, name: "AUDIT_EVENT" },
  { no: 62, name: "BASIC" },
  { no: 63, name: "BINARY" },
  { no: 64, name: "BODY_SITE" },
  { no: 65, name: "BUNDLE" },
  { no: 66, name: "CAPABILITY_STATEMENT" },
  { no: 67, name: "CARE_PLAN" },
  { no: 68, name: "CARE_TEAM" },
  { no: 69, name: "CHARGE_ITEM" },
  { no: 70, name: "CLAIM" },
  { no: 71, name: "CLAIM_RESPONSE" },
  { no: 72, name: "CLINICAL_IMPRESSION" },
  { no: 73, name: "CODE_SYSTEM" },
  { no: 74, name: "COMMUNICATION" },
  { no: 75, name: "COMMUNICATION_REQUEST" },
  { no: 76, name: "COMPARTMENT_DEFINITION" },
  { no: 77, name: "COMPOSITION" },
  { no: 78, name: "CONCEPT_MAP" },
  { no: 79, name: "CONDITION" },
  { no: 80, name: "CONSENT" },
  { no: 81, name: "CONTRACT" },
  { no: 82, name: "COVERAGE" },
  { no: 83, name: "DATA_ELEMENT" },
  { no: 84, name: "DETECTED_ISSUE" },
  { no: 85, name: "DEVICE" },
  { no: 86, name: "DEVICE_COMPONENT" },
  { no: 87, name: "DEVICE_METRIC" },
  { no: 88, name: "DEVICE_REQUEST" },
  { no: 89, name: "DEVICE_USE_STATEMENT" },
  { no: 90, name: "DIAGNOSTIC_REPORT" },
  { no: 91, name: "DOCUMENT_MANIFEST" },
  { no: 92, name: "DOCUMENT_REFERENCE" },
  { no: 93, name: "DOMAIN_RESOURCE" },
  { no: 94, name: "ELIGIBILITY_REQUEST" },
  { no: 95, name: "ELIGIBILITY_RESPONSE" },
  { no: 96, name: "ENCOUNTER" },
  { no: 97, name: "ENDPOINT" },
  { no: 98, name: "ENROLLMENT_REQUEST" },
  { no: 99, name: "ENROLLMENT_RESPONSE" },
  { no: 100, name: "EPISODE_OF_CARE" },
  { no: 101, name: "EXPANSION_PROFILE" },
  { no: 102, name: "EXPLANATION_OF_BENEFIT" },
  { no: 103, name: "FAMILY_MEMBER_HISTORY" },
  { no: 104, name: "FLAG" },
  { no: 105, name: "GOAL" },
  { no: 106, name: "GRAPH_DEFINITION" },
  { no: 107, name: "GROUP" },
  { no: 108, name: "GUIDANCE_RESPONSE" },
  { no: 109, name: "HEALTHCARE_SERVICE" },
  { no: 110, name: "IMAGING_MANIFEST" },
  { no: 111, name: "IMAGING_STUDY" },
  { no: 112, name: "IMMUNIZATION" },
  { no: 113, name: "IMMUNIZATION_RECOMMENDATION" },
  { no: 114, name: "IMPLEMENTATION_GUIDE" },
  { no: 115, name: "LIBRARY" },
  { no: 116, name: "LINKAGE" },
  { no: 117, name: "LIST" },
  { no: 118, name: "LOCATION" },
  { no: 119, name: "MEASURE" },
  { no: 120, name: "MEASURE_REPORT" },
  { no: 121, name: "MEDIA" },
  { no: 122, name: "MEDICATION" },
  { no: 123, name: "MEDICATION_ADMINISTRATION" },
  { no: 124, name: "MEDICATION_DISPENSE" },
  { no: 125, name: "MEDICATION_REQUEST" },
  { no: 126, name: "MEDICATION_STATEMENT" },
  { no: 127, name: "MESSAGE_DEFINITION" },
  { no: 128, name: "MESSAGE_HEADER" },
  { no: 129, name: "NAMING_SYSTEM" },
  { no: 130, name: "NUTRITION_ORDER" },
  { no: 131, name: "OBSERVATION" },
  { no: 132, name: "OPERATION_DEFINITION" },
  { no: 133, name: "OPERATION_OUTCOME" },
  { no: 134, name: "ORGANIZATION" },
  { no: 135, name: "PARAMETERS" },
  { no: 136, name: "PATIENT" },
  { no: 137, name: "PAYMENT_NOTICE" },
  { no: 138, name: "PAYMENT_RECONCILIATION" },
  { no: 139, name: "PERSON" },
  { no: 140, name: "PLAN_DEFINITION" },
  { no: 141, name: "PRACTITIONER" },
  { no: 142, name: "PRACTITIONER_ROLE" },
  { no: 143, name: "PROCEDURE" },
  { no: 144, name: "PROCEDURE_REQUEST" },
  { no: 145, name: "PROCESS_REQUEST" },
  { no: 146, name: "PROCESS_RESPONSE" },
  { no: 147, name: "PROVENANCE" },
  { no: 148, name: "QUESTIONNAIRE" },
  { no: 149, name: "QUESTIONNAIRE_RESPONSE" },
  { no: 150, name: "REFERRAL_REQUEST" },
  { no: 151, name: "RELATED_PERSON" },
  { no: 152, name: "REQUEST_GROUP" },
  { no: 153, name: "RESEARCH_STUDY" },
  { no: 154, name: "RESEARCH_SUBJECT" },
  { no: 155, name: "RESOURCE" },
  { no: 156, name: "RISK_ASSESSMENT" },
  { no: 157, name: "SCHEDULE" },
  { no: 158, name: "SEARCH_PARAMETER" },
  { no: 159, name: "SEQUENCE" },
  { no: 160, name: "SERVICE_DEFINITION" },
  { no: 161, name: "SLOT" },
  { no: 162, name: "SPECIMEN" },
  { no: 163, name: "STRUCTURE_DEFINITION" },
  { no: 164, name: "STRUCTURE_MAP" },
  { no: 165, name: "SUBSCRIPTION" },
  { no: 166, name: "SUBSTANCE" },
  { no: 167, name: "SUPPLY_DELIVERY" },
  { no: 168, name: "SUPPLY_REQUEST" },
  { no: 169, name: "TASK" },
  { no: 170, name: "TEST_REPORT" },
  { no: 171, name: "TEST_SCRIPT" },
  { no: 172, name: "VALUE_SET" },
  { no: 173, name: "VISION_PRESCRIPTION" },
]);

/**
 * Either a resource or a data type, extended to allow arbitrary other codes
 * representing FHIR resources. See http://hl7.org/fhir/ValueSet/defined-types
 * Due to
 * https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&tracker_item_id=15559
 * there are two value sets with valueset url:
 * http://hl7.org/fhir/ValueSet/defined-types.
 * Fragment added here to disambiguate.
 *
 * @generated from message google.fhir.stu3.proto.FHIRDefinedTypeExtCode
 */
export class FHIRDefinedTypeExtCode extends Message<FHIRDefinedTypeExtCode> {
  /**
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FHIRDefinedTypeExtCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FHIRDefinedTypeExtCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRDefinedTypeExtCode {
    return new FHIRDefinedTypeExtCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRDefinedTypeExtCode {
    return new FHIRDefinedTypeExtCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRDefinedTypeExtCode {
    return new FHIRDefinedTypeExtCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRDefinedTypeExtCode | PlainMessage<FHIRDefinedTypeExtCode> | undefined, b: FHIRDefinedTypeExtCode | PlainMessage<FHIRDefinedTypeExtCode> | undefined): boolean {
    return proto3.util.equals(FHIRDefinedTypeExtCode, a, b);
  }
}

/**
 * Codes identifying the lifecycle stage of a definition
 * See http://hl7.org/fhir/ValueSet/definition-status
 *
 * @generated from message google.fhir.stu3.proto.DefinitionStatusCode
 */
export class DefinitionStatusCode extends Message<DefinitionStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DefinitionStatusCode.Value value = 1;
   */
  value = DefinitionStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DefinitionStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DefinitionStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DefinitionStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DefinitionStatusCode {
    return new DefinitionStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DefinitionStatusCode {
    return new DefinitionStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DefinitionStatusCode {
    return new DefinitionStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DefinitionStatusCode | PlainMessage<DefinitionStatusCode> | undefined, b: DefinitionStatusCode | PlainMessage<DefinitionStatusCode> | undefined): boolean {
    return proto3.util.equals(DefinitionStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DefinitionStatusCode.Value
 */
export enum DefinitionStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: WITHDRAWN = 3;
   */
  WITHDRAWN = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DefinitionStatusCode_Value)
proto3.util.setEnumType(DefinitionStatusCode_Value, "google.fhir.stu3.proto.DefinitionStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "WITHDRAWN" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * High-level categorization of the definition, used for searching, sorting,
 * and filtering See http://hl7.org/fhir/ValueSet/definition-topic
 *
 * @generated from message google.fhir.stu3.proto.DefinitionTopicCode
 */
export class DefinitionTopicCode extends Message<DefinitionTopicCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DefinitionTopicCode.Value value = 1;
   */
  value = DefinitionTopicCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DefinitionTopicCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DefinitionTopicCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DefinitionTopicCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DefinitionTopicCode {
    return new DefinitionTopicCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DefinitionTopicCode {
    return new DefinitionTopicCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DefinitionTopicCode {
    return new DefinitionTopicCode().fromJsonString(jsonString, options);
  }

  static equals(a: DefinitionTopicCode | PlainMessage<DefinitionTopicCode> | undefined, b: DefinitionTopicCode | PlainMessage<DefinitionTopicCode> | undefined): boolean {
    return proto3.util.equals(DefinitionTopicCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DefinitionTopicCode.Value
 */
export enum DefinitionTopicCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TREATMENT = 1;
   */
  TREATMENT = 1,

  /**
   * @generated from enum value: EDUCATION = 2;
   */
  EDUCATION = 2,

  /**
   * @generated from enum value: ASSESSMENT = 3;
   */
  ASSESSMENT = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DefinitionTopicCode_Value)
proto3.util.setEnumType(DefinitionTopicCode_Value, "google.fhir.stu3.proto.DefinitionTopicCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TREATMENT" },
  { no: 2, name: "EDUCATION" },
  { no: 3, name: "ASSESSMENT" },
]);

/**
 * Indicates the potential degree of impact of the identified issue on the
 * patient. See http://hl7.org/fhir/ValueSet/detectedissue-severity
 *
 * @generated from message google.fhir.stu3.proto.DetectedIssueSeverityCode
 */
export class DetectedIssueSeverityCode extends Message<DetectedIssueSeverityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DetectedIssueSeverityCode.Value value = 1;
   */
  value = DetectedIssueSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DetectedIssueSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DetectedIssueSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DetectedIssueSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssueSeverityCode {
    return new DetectedIssueSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssueSeverityCode {
    return new DetectedIssueSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssueSeverityCode {
    return new DetectedIssueSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssueSeverityCode | PlainMessage<DetectedIssueSeverityCode> | undefined, b: DetectedIssueSeverityCode | PlainMessage<DetectedIssueSeverityCode> | undefined): boolean {
    return proto3.util.equals(DetectedIssueSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DetectedIssueSeverityCode.Value
 */
export enum DetectedIssueSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HIGH = 1;
   */
  HIGH = 1,

  /**
   * @generated from enum value: MODERATE = 2;
   */
  MODERATE = 2,

  /**
   * @generated from enum value: LOW = 3;
   */
  LOW = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DetectedIssueSeverityCode_Value)
proto3.util.setEnumType(DetectedIssueSeverityCode_Value, "google.fhir.stu3.proto.DetectedIssueSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HIGH" },
  { no: 2, name: "MODERATE" },
  { no: 3, name: "LOW" },
]);

/**
 * A coded concept indicating the current status of a the Device Usage
 * See http://hl7.org/fhir/ValueSet/device-statement-status
 *
 * @generated from message google.fhir.stu3.proto.DeviceUseStatementStatusCode
 */
export class DeviceUseStatementStatusCode extends Message<DeviceUseStatementStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceUseStatementStatusCode.Value value = 1;
   */
  value = DeviceUseStatementStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceUseStatementStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceUseStatementStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceUseStatementStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatementStatusCode {
    return new DeviceUseStatementStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatementStatusCode {
    return new DeviceUseStatementStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatementStatusCode {
    return new DeviceUseStatementStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatementStatusCode | PlainMessage<DeviceUseStatementStatusCode> | undefined, b: DeviceUseStatementStatusCode | PlainMessage<DeviceUseStatementStatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatementStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceUseStatementStatusCode.Value
 */
export enum DeviceUseStatementStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: INTENDED = 4;
   */
  INTENDED = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * @generated from enum value: ON_HOLD = 6;
   */
  ON_HOLD = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceUseStatementStatusCode_Value)
proto3.util.setEnumType(DeviceUseStatementStatusCode_Value, "google.fhir.stu3.proto.DeviceUseStatementStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "INTENDED" },
  { no: 5, name: "STOPPED" },
  { no: 6, name: "ON_HOLD" },
]);

/**
 * The availability status of the device.
 * See http://hl7.org/fhir/ValueSet/device-status
 *
 * @generated from message google.fhir.stu3.proto.FHIRDeviceStatusCode
 */
export class FHIRDeviceStatusCode extends Message<FHIRDeviceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FHIRDeviceStatusCode.Value value = 1;
   */
  value = FHIRDeviceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FHIRDeviceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FHIRDeviceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRDeviceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRDeviceStatusCode {
    return new FHIRDeviceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRDeviceStatusCode {
    return new FHIRDeviceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRDeviceStatusCode {
    return new FHIRDeviceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRDeviceStatusCode | PlainMessage<FHIRDeviceStatusCode> | undefined, b: FHIRDeviceStatusCode | PlainMessage<FHIRDeviceStatusCode> | undefined): boolean {
    return proto3.util.equals(FHIRDeviceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FHIRDeviceStatusCode.Value
 */
export enum FHIRDeviceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRDeviceStatusCode_Value)
proto3.util.setEnumType(FHIRDeviceStatusCode_Value, "google.fhir.stu3.proto.FHIRDeviceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * This value set defines a set of codes that can be used to express the role
 * of a diagnosis on the Encounter or EpisodeOfCare record. See
 * http://hl7.org/fhir/ValueSet/diagnosis-role
 *
 * @generated from message google.fhir.stu3.proto.DiagnosisRoleCode
 */
export class DiagnosisRoleCode extends Message<DiagnosisRoleCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DiagnosisRoleCode.Value value = 1;
   */
  value = DiagnosisRoleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DiagnosisRoleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosisRoleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DiagnosisRoleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosisRoleCode {
    return new DiagnosisRoleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosisRoleCode {
    return new DiagnosisRoleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosisRoleCode {
    return new DiagnosisRoleCode().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosisRoleCode | PlainMessage<DiagnosisRoleCode> | undefined, b: DiagnosisRoleCode | PlainMessage<DiagnosisRoleCode> | undefined): boolean {
    return proto3.util.equals(DiagnosisRoleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DiagnosisRoleCode.Value
 */
export enum DiagnosisRoleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AD = 1;
   */
  AD = 1,

  /**
   * @generated from enum value: DD = 2;
   */
  DD = 2,

  /**
   * @generated from enum value: CC = 3;
   */
  CC = 3,

  /**
   * @generated from enum value: CM = 4;
   */
  CM = 4,

  /**
   * @generated from enum value: PRE_OP = 5;
   */
  PRE_OP = 5,

  /**
   * @generated from enum value: POST_OP = 6;
   */
  POST_OP = 6,

  /**
   * @generated from enum value: BILLING = 7;
   */
  BILLING = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(DiagnosisRoleCode_Value)
proto3.util.setEnumType(DiagnosisRoleCode_Value, "google.fhir.stu3.proto.DiagnosisRoleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AD" },
  { no: 2, name: "DD" },
  { no: 3, name: "CC" },
  { no: 4, name: "CM" },
  { no: 5, name: "PRE_OP" },
  { no: 6, name: "POST_OP" },
  { no: 7, name: "BILLING" },
]);

/**
 * The status of the diagnostic report as a whole.
 * See http://hl7.org/fhir/ValueSet/diagnostic-report-status
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticReportStatusCode
 */
export class DiagnosticReportStatusCode extends Message<DiagnosticReportStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportStatusCode.Value value = 1;
   */
  value = DiagnosticReportStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DiagnosticReportStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticReportStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DiagnosticReportStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportStatusCode {
    return new DiagnosticReportStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportStatusCode {
    return new DiagnosticReportStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportStatusCode {
    return new DiagnosticReportStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportStatusCode | PlainMessage<DiagnosticReportStatusCode> | undefined, b: DiagnosticReportStatusCode | PlainMessage<DiagnosticReportStatusCode> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DiagnosticReportStatusCode.Value
 */
export enum DiagnosticReportStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REGISTERED = 1;
   */
  REGISTERED = 1,

  /**
   * @generated from enum value: PARTIAL = 2;
   */
  PARTIAL = 2,

  /**
   * @generated from enum value: PRELIMINARY = 3;
   */
  PRELIMINARY = 3,

  /**
   * @generated from enum value: FINAL = 4;
   */
  FINAL = 4,

  /**
   * @generated from enum value: AMENDED = 5;
   */
  AMENDED = 5,

  /**
   * @generated from enum value: CORRECTED = 6;
   */
  CORRECTED = 6,

  /**
   * @generated from enum value: APPENDED = 7;
   */
  APPENDED = 7,

  /**
   * @generated from enum value: CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 9;
   */
  ENTERED_IN_ERROR = 9,

  /**
   * @generated from enum value: UNKNOWN = 10;
   */
  UNKNOWN = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(DiagnosticReportStatusCode_Value)
proto3.util.setEnumType(DiagnosticReportStatusCode_Value, "google.fhir.stu3.proto.DiagnosticReportStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REGISTERED" },
  { no: 2, name: "PARTIAL" },
  { no: 3, name: "PRELIMINARY" },
  { no: 4, name: "FINAL" },
  { no: 5, name: "AMENDED" },
  { no: 6, name: "CORRECTED" },
  { no: 7, name: "APPENDED" },
  { no: 8, name: "CANCELLED" },
  { no: 9, name: "ENTERED_IN_ERROR" },
  { no: 10, name: "UNKNOWN" },
]);

/**
 * Whether the media is a photo, video, or audio
 * See http://hl7.org/fhir/ValueSet/digital-media-type
 *
 * @generated from message google.fhir.stu3.proto.DigitalMediaTypeCode
 */
export class DigitalMediaTypeCode extends Message<DigitalMediaTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DigitalMediaTypeCode.Value value = 1;
   */
  value = DigitalMediaTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DigitalMediaTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DigitalMediaTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DigitalMediaTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DigitalMediaTypeCode {
    return new DigitalMediaTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DigitalMediaTypeCode {
    return new DigitalMediaTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DigitalMediaTypeCode {
    return new DigitalMediaTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DigitalMediaTypeCode | PlainMessage<DigitalMediaTypeCode> | undefined, b: DigitalMediaTypeCode | PlainMessage<DigitalMediaTypeCode> | undefined): boolean {
    return proto3.util.equals(DigitalMediaTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DigitalMediaTypeCode.Value
 */
export enum DigitalMediaTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PHOTO = 1;
   */
  PHOTO = 1,

  /**
   * @generated from enum value: VIDEO = 2;
   */
  VIDEO = 2,

  /**
   * @generated from enum value: AUDIO = 3;
   */
  AUDIO = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DigitalMediaTypeCode_Value)
proto3.util.setEnumType(DigitalMediaTypeCode_Value, "google.fhir.stu3.proto.DigitalMediaTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PHOTO" },
  { no: 2, name: "VIDEO" },
  { no: 3, name: "AUDIO" },
]);

/**
 * Whether the application produces or consumes documents.
 * See http://hl7.org/fhir/ValueSet/document-mode
 *
 * @generated from message google.fhir.stu3.proto.DocumentModeCode
 */
export class DocumentModeCode extends Message<DocumentModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DocumentModeCode.Value value = 1;
   */
  value = DocumentModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DocumentModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentModeCode {
    return new DocumentModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentModeCode {
    return new DocumentModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentModeCode {
    return new DocumentModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentModeCode | PlainMessage<DocumentModeCode> | undefined, b: DocumentModeCode | PlainMessage<DocumentModeCode> | undefined): boolean {
    return proto3.util.equals(DocumentModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DocumentModeCode.Value
 */
export enum DocumentModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PRODUCER = 1;
   */
  PRODUCER = 1,

  /**
   * @generated from enum value: CONSUMER = 2;
   */
  CONSUMER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(DocumentModeCode_Value)
proto3.util.setEnumType(DocumentModeCode_Value, "google.fhir.stu3.proto.DocumentModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PRODUCER" },
  { no: 2, name: "CONSUMER" },
]);

/**
 * The status of the document reference.
 * See http://hl7.org/fhir/ValueSet/document-reference-status
 *
 * @generated from message google.fhir.stu3.proto.DocumentReferenceStatusCode
 */
export class DocumentReferenceStatusCode extends Message<DocumentReferenceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DocumentReferenceStatusCode.Value value = 1;
   */
  value = DocumentReferenceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DocumentReferenceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentReferenceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentReferenceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReferenceStatusCode {
    return new DocumentReferenceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReferenceStatusCode {
    return new DocumentReferenceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReferenceStatusCode {
    return new DocumentReferenceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReferenceStatusCode | PlainMessage<DocumentReferenceStatusCode> | undefined, b: DocumentReferenceStatusCode | PlainMessage<DocumentReferenceStatusCode> | undefined): boolean {
    return proto3.util.equals(DocumentReferenceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DocumentReferenceStatusCode.Value
 */
export enum DocumentReferenceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CURRENT = 1;
   */
  CURRENT = 1,

  /**
   * @generated from enum value: SUPERSEDED = 2;
   */
  SUPERSEDED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DocumentReferenceStatusCode_Value)
proto3.util.setEnumType(DocumentReferenceStatusCode_Value, "google.fhir.stu3.proto.DocumentReferenceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CURRENT" },
  { no: 2, name: "SUPERSEDED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * The type of relationship between documents.
 * See http://hl7.org/fhir/ValueSet/document-relationship-type
 *
 * @generated from message google.fhir.stu3.proto.DocumentRelationshipTypeCode
 */
export class DocumentRelationshipTypeCode extends Message<DocumentRelationshipTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DocumentRelationshipTypeCode.Value value = 1;
   */
  value = DocumentRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DocumentRelationshipTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DocumentRelationshipTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentRelationshipTypeCode {
    return new DocumentRelationshipTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentRelationshipTypeCode {
    return new DocumentRelationshipTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentRelationshipTypeCode {
    return new DocumentRelationshipTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentRelationshipTypeCode | PlainMessage<DocumentRelationshipTypeCode> | undefined, b: DocumentRelationshipTypeCode | PlainMessage<DocumentRelationshipTypeCode> | undefined): boolean {
    return proto3.util.equals(DocumentRelationshipTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DocumentRelationshipTypeCode.Value
 */
export enum DocumentRelationshipTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REPLACES = 1;
   */
  REPLACES = 1,

  /**
   * @generated from enum value: TRANSFORMS = 2;
   */
  TRANSFORMS = 2,

  /**
   * @generated from enum value: SIGNS = 3;
   */
  SIGNS = 3,

  /**
   * @generated from enum value: APPENDS = 4;
   */
  APPENDS = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DocumentRelationshipTypeCode_Value)
proto3.util.setEnumType(DocumentRelationshipTypeCode_Value, "google.fhir.stu3.proto.DocumentRelationshipTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REPLACES" },
  { no: 2, name: "TRANSFORMS" },
  { no: 3, name: "SIGNS" },
  { no: 4, name: "APPENDS" },
]);

/**
 * This value set defines a set of codes that can be used to indicate from
 * where the patient came in. See
 * http://hl7.org/fhir/ValueSet/encounter-admit-source
 *
 * @generated from message google.fhir.stu3.proto.AdmitSourceCode
 */
export class AdmitSourceCode extends Message<AdmitSourceCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AdmitSourceCode.Value value = 1;
   */
  value = AdmitSourceCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdmitSourceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AdmitSourceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdmitSourceCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdmitSourceCode {
    return new AdmitSourceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdmitSourceCode {
    return new AdmitSourceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdmitSourceCode {
    return new AdmitSourceCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdmitSourceCode | PlainMessage<AdmitSourceCode> | undefined, b: AdmitSourceCode | PlainMessage<AdmitSourceCode> | undefined): boolean {
    return proto3.util.equals(AdmitSourceCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AdmitSourceCode.Value
 */
export enum AdmitSourceCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HOSP_TRANS = 1;
   */
  HOSP_TRANS = 1,

  /**
   * @generated from enum value: EMD = 2;
   */
  EMD = 2,

  /**
   * @generated from enum value: OUTP = 3;
   */
  OUTP = 3,

  /**
   * @generated from enum value: BORN = 4;
   */
  BORN = 4,

  /**
   * @generated from enum value: GP = 5;
   */
  GP = 5,

  /**
   * @generated from enum value: MP = 6;
   */
  MP = 6,

  /**
   * @generated from enum value: NURSING = 7;
   */
  NURSING = 7,

  /**
   * @generated from enum value: PSYCH = 8;
   */
  PSYCH = 8,

  /**
   * @generated from enum value: REHAB = 9;
   */
  REHAB = 9,

  /**
   * @generated from enum value: OTHER = 10;
   */
  OTHER = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(AdmitSourceCode_Value)
proto3.util.setEnumType(AdmitSourceCode_Value, "google.fhir.stu3.proto.AdmitSourceCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HOSP_TRANS" },
  { no: 2, name: "EMD" },
  { no: 3, name: "OUTP" },
  { no: 4, name: "BORN" },
  { no: 5, name: "GP" },
  { no: 6, name: "MP" },
  { no: 7, name: "NURSING" },
  { no: 8, name: "PSYCH" },
  { no: 9, name: "REHAB" },
  { no: 10, name: "OTHER" },
]);

/**
 * This value set defines a set of codes that can be used to indicate dietary
 * preferences or restrictions a patient may have. See
 * http://hl7.org/fhir/ValueSet/encounter-diet
 *
 * @generated from message google.fhir.stu3.proto.DietCode
 */
export class DietCode extends Message<DietCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DietCode.Value value = 1;
   */
  value = DietCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DietCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DietCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DietCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DietCode {
    return new DietCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DietCode {
    return new DietCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DietCode {
    return new DietCode().fromJsonString(jsonString, options);
  }

  static equals(a: DietCode | PlainMessage<DietCode> | undefined, b: DietCode | PlainMessage<DietCode> | undefined): boolean {
    return proto3.util.equals(DietCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DietCode.Value
 */
export enum DietCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: VEGETARIAN = 1;
   */
  VEGETARIAN = 1,

  /**
   * @generated from enum value: DAIRY_FREE = 2;
   */
  DAIRY_FREE = 2,

  /**
   * @generated from enum value: NUT_FREE = 3;
   */
  NUT_FREE = 3,

  /**
   * @generated from enum value: GLUTEN_FREE = 4;
   */
  GLUTEN_FREE = 4,

  /**
   * @generated from enum value: VEGAN = 5;
   */
  VEGAN = 5,

  /**
   * @generated from enum value: HALAL = 6;
   */
  HALAL = 6,

  /**
   * @generated from enum value: KOSHER = 7;
   */
  KOSHER = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(DietCode_Value)
proto3.util.setEnumType(DietCode_Value, "google.fhir.stu3.proto.DietCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "VEGETARIAN" },
  { no: 2, name: "DAIRY_FREE" },
  { no: 3, name: "NUT_FREE" },
  { no: 4, name: "GLUTEN_FREE" },
  { no: 5, name: "VEGAN" },
  { no: 6, name: "HALAL" },
  { no: 7, name: "KOSHER" },
]);

/**
 * This value set defines a set of codes that can be used to where the patient
 * left the hospital. See
 * http://hl7.org/fhir/ValueSet/encounter-discharge-disposition
 *
 * @generated from message google.fhir.stu3.proto.DischargeDispositionCode
 */
export class DischargeDispositionCode extends Message<DischargeDispositionCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DischargeDispositionCode.Value value = 1;
   */
  value = DischargeDispositionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DischargeDispositionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DischargeDispositionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DischargeDispositionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DischargeDispositionCode {
    return new DischargeDispositionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DischargeDispositionCode {
    return new DischargeDispositionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DischargeDispositionCode {
    return new DischargeDispositionCode().fromJsonString(jsonString, options);
  }

  static equals(a: DischargeDispositionCode | PlainMessage<DischargeDispositionCode> | undefined, b: DischargeDispositionCode | PlainMessage<DischargeDispositionCode> | undefined): boolean {
    return proto3.util.equals(DischargeDispositionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DischargeDispositionCode.Value
 */
export enum DischargeDispositionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HOME = 1;
   */
  HOME = 1,

  /**
   * @generated from enum value: OTHER_HCF = 2;
   */
  OTHER_HCF = 2,

  /**
   * @generated from enum value: HOSP = 3;
   */
  HOSP = 3,

  /**
   * @generated from enum value: LONG = 4;
   */
  LONG = 4,

  /**
   * @generated from enum value: AADVICE = 5;
   */
  AADVICE = 5,

  /**
   * @generated from enum value: EXP = 6;
   */
  EXP = 6,

  /**
   * @generated from enum value: PSY = 7;
   */
  PSY = 7,

  /**
   * @generated from enum value: REHAB = 8;
   */
  REHAB = 8,

  /**
   * @generated from enum value: SNF = 9;
   */
  SNF = 9,

  /**
   * @generated from enum value: OTH = 10;
   */
  OTH = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(DischargeDispositionCode_Value)
proto3.util.setEnumType(DischargeDispositionCode_Value, "google.fhir.stu3.proto.DischargeDispositionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HOME" },
  { no: 2, name: "OTHER_HCF" },
  { no: 3, name: "HOSP" },
  { no: 4, name: "LONG" },
  { no: 5, name: "AADVICE" },
  { no: 6, name: "EXP" },
  { no: 7, name: "PSY" },
  { no: 8, name: "REHAB" },
  { no: 9, name: "SNF" },
  { no: 10, name: "OTH" },
]);

/**
 * The status of the location.
 * See http://hl7.org/fhir/ValueSet/encounter-location-status
 *
 * @generated from message google.fhir.stu3.proto.EncounterLocationStatusCode
 */
export class EncounterLocationStatusCode extends Message<EncounterLocationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EncounterLocationStatusCode.Value value = 1;
   */
  value = EncounterLocationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EncounterLocationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EncounterLocationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EncounterLocationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterLocationStatusCode {
    return new EncounterLocationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterLocationStatusCode {
    return new EncounterLocationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterLocationStatusCode {
    return new EncounterLocationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterLocationStatusCode | PlainMessage<EncounterLocationStatusCode> | undefined, b: EncounterLocationStatusCode | PlainMessage<EncounterLocationStatusCode> | undefined): boolean {
    return proto3.util.equals(EncounterLocationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EncounterLocationStatusCode.Value
 */
export enum EncounterLocationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: RESERVED = 3;
   */
  RESERVED = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(EncounterLocationStatusCode_Value)
proto3.util.setEnumType(EncounterLocationStatusCode_Value, "google.fhir.stu3.proto.EncounterLocationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "RESERVED" },
  { no: 4, name: "COMPLETED" },
]);

/**
 * This value set defines a set of codes that can be used to indicate the
 * kinds of special arrangements in place for a patients visit. See
 * http://hl7.org/fhir/ValueSet/encounter-special-arrangements
 *
 * @generated from message google.fhir.stu3.proto.SpecialArrangementsCode
 */
export class SpecialArrangementsCode extends Message<SpecialArrangementsCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SpecialArrangementsCode.Value value = 1;
   */
  value = SpecialArrangementsCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SpecialArrangementsCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SpecialArrangementsCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SpecialArrangementsCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecialArrangementsCode {
    return new SpecialArrangementsCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecialArrangementsCode {
    return new SpecialArrangementsCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecialArrangementsCode {
    return new SpecialArrangementsCode().fromJsonString(jsonString, options);
  }

  static equals(a: SpecialArrangementsCode | PlainMessage<SpecialArrangementsCode> | undefined, b: SpecialArrangementsCode | PlainMessage<SpecialArrangementsCode> | undefined): boolean {
    return proto3.util.equals(SpecialArrangementsCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SpecialArrangementsCode.Value
 */
export enum SpecialArrangementsCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: WHEEL = 1;
   */
  WHEEL = 1,

  /**
   * @generated from enum value: ADD_BED = 2;
   */
  ADD_BED = 2,

  /**
   * @generated from enum value: INT = 3;
   */
  INT = 3,

  /**
   * @generated from enum value: ATT = 4;
   */
  ATT = 4,

  /**
   * @generated from enum value: DOG = 5;
   */
  DOG = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(SpecialArrangementsCode_Value)
proto3.util.setEnumType(SpecialArrangementsCode_Value, "google.fhir.stu3.proto.SpecialArrangementsCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "WHEEL" },
  { no: 2, name: "ADD_BED" },
  { no: 3, name: "INT" },
  { no: 4, name: "ATT" },
  { no: 5, name: "DOG" },
]);

/**
 * Current state of the encounter
 * See http://hl7.org/fhir/ValueSet/encounter-status
 *
 * @generated from message google.fhir.stu3.proto.EncounterStatusCode
 */
export class EncounterStatusCode extends Message<EncounterStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EncounterStatusCode.Value value = 1;
   */
  value = EncounterStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EncounterStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EncounterStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EncounterStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterStatusCode {
    return new EncounterStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterStatusCode {
    return new EncounterStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterStatusCode {
    return new EncounterStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterStatusCode | PlainMessage<EncounterStatusCode> | undefined, b: EncounterStatusCode | PlainMessage<EncounterStatusCode> | undefined): boolean {
    return proto3.util.equals(EncounterStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EncounterStatusCode.Value
 */
export enum EncounterStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: ARRIVED = 2;
   */
  ARRIVED = 2,

  /**
   * @generated from enum value: TRIAGED = 3;
   */
  TRIAGED = 3,

  /**
   * @generated from enum value: IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * @generated from enum value: ONLEAVE = 5;
   */
  ONLEAVE = 5,

  /**
   * @generated from enum value: FINISHED = 6;
   */
  FINISHED = 6,

  /**
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 8;
   */
  ENTERED_IN_ERROR = 8,

  /**
   * @generated from enum value: UNKNOWN = 9;
   */
  UNKNOWN = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(EncounterStatusCode_Value)
proto3.util.setEnumType(EncounterStatusCode_Value, "google.fhir.stu3.proto.EncounterStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "ARRIVED" },
  { no: 3, name: "TRIAGED" },
  { no: 4, name: "IN_PROGRESS" },
  { no: 5, name: "ONLEAVE" },
  { no: 6, name: "FINISHED" },
  { no: 7, name: "CANCELLED" },
  { no: 8, name: "ENTERED_IN_ERROR" },
  { no: 9, name: "UNKNOWN" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * the type of encounter: a specific code indicating type of service provided.
 * See http://hl7.org/fhir/ValueSet/encounter-type
 *
 * @generated from message google.fhir.stu3.proto.EncounterTypeCode
 */
export class EncounterTypeCode extends Message<EncounterTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EncounterTypeCode.Value value = 1;
   */
  value = EncounterTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EncounterTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EncounterTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EncounterTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterTypeCode {
    return new EncounterTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterTypeCode {
    return new EncounterTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterTypeCode {
    return new EncounterTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterTypeCode | PlainMessage<EncounterTypeCode> | undefined, b: EncounterTypeCode | PlainMessage<EncounterTypeCode> | undefined): boolean {
    return proto3.util.equals(EncounterTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EncounterTypeCode.Value
 */
export enum EncounterTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADMS = 1;
   */
  ADMS = 1,

  /**
   * @generated from enum value: BD_BM_CLIN = 2;
   */
  BD_BM_CLIN = 2,

  /**
   * @generated from enum value: CCS60 = 3;
   */
  CCS60 = 3,

  /**
   * @generated from enum value: OKI = 4;
   */
  OKI = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(EncounterTypeCode_Value)
proto3.util.setEnumType(EncounterTypeCode_Value, "google.fhir.stu3.proto.EncounterTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADMS" },
  { no: 2, name: "BD_BM_CLIN" },
  { no: 3, name: "CCS60" },
  { no: 4, name: "OKI" },
]);

/**
 * The status of the endpoint
 * See http://hl7.org/fhir/ValueSet/endpoint-status
 *
 * @generated from message google.fhir.stu3.proto.EndpointStatusCode
 */
export class EndpointStatusCode extends Message<EndpointStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EndpointStatusCode.Value value = 1;
   */
  value = EndpointStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EndpointStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EndpointStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EndpointStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndpointStatusCode {
    return new EndpointStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndpointStatusCode {
    return new EndpointStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndpointStatusCode {
    return new EndpointStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EndpointStatusCode | PlainMessage<EndpointStatusCode> | undefined, b: EndpointStatusCode | PlainMessage<EndpointStatusCode> | undefined): boolean {
    return proto3.util.equals(EndpointStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EndpointStatusCode.Value
 */
export enum EndpointStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: OFF = 4;
   */
  OFF = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: TEST = 6;
   */
  TEST = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(EndpointStatusCode_Value)
proto3.util.setEnumType(EndpointStatusCode_Value, "google.fhir.stu3.proto.EndpointStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "SUSPENDED" },
  { no: 3, name: "ERROR" },
  { no: 4, name: "OFF" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "TEST" },
]);

/**
 * A set of codes each of which specifies a certain subcategory of the name part
 * in addition to the main name part type See
 * http://hl7.org/fhir/ValueSet/name-part-qualifier
 *
 * @generated from message google.fhir.stu3.proto.EntityNamePartQualifierCode
 */
export class EntityNamePartQualifierCode extends Message<EntityNamePartQualifierCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EntityNamePartQualifierCode.Value value = 1;
   */
  value = EntityNamePartQualifierCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EntityNamePartQualifierCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EntityNamePartQualifierCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EntityNamePartQualifierCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntityNamePartQualifierCode {
    return new EntityNamePartQualifierCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntityNamePartQualifierCode {
    return new EntityNamePartQualifierCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntityNamePartQualifierCode {
    return new EntityNamePartQualifierCode().fromJsonString(jsonString, options);
  }

  static equals(a: EntityNamePartQualifierCode | PlainMessage<EntityNamePartQualifierCode> | undefined, b: EntityNamePartQualifierCode | PlainMessage<EntityNamePartQualifierCode> | undefined): boolean {
    return proto3.util.equals(EntityNamePartQualifierCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EntityNamePartQualifierCode.Value
 */
export enum EntityNamePartQualifierCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LS = 1;
   */
  LS = 1,

  /**
   * @generated from enum value: AC = 2;
   */
  AC = 2,

  /**
   * @generated from enum value: NB = 3;
   */
  NB = 3,

  /**
   * @generated from enum value: PR = 4;
   */
  PR = 4,

  /**
   * @generated from enum value: HON = 5;
   */
  HON = 5,

  /**
   * @generated from enum value: BR = 6;
   */
  BR = 6,

  /**
   * @generated from enum value: AD = 7;
   */
  AD = 7,

  /**
   * @generated from enum value: SP = 8;
   */
  SP = 8,

  /**
   * @generated from enum value: MID = 9;
   */
  MID = 9,

  /**
   * @generated from enum value: CL = 10;
   */
  CL = 10,

  /**
   * @generated from enum value: IN = 11;
   */
  IN = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(EntityNamePartQualifierCode_Value)
proto3.util.setEnumType(EntityNamePartQualifierCode_Value, "google.fhir.stu3.proto.EntityNamePartQualifierCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LS" },
  { no: 2, name: "AC" },
  { no: 3, name: "NB" },
  { no: 4, name: "PR" },
  { no: 5, name: "HON" },
  { no: 6, name: "BR" },
  { no: 7, name: "AD" },
  { no: 8, name: "SP" },
  { no: 9, name: "MID" },
  { no: 10, name: "CL" },
  { no: 11, name: "IN" },
]);

/**
 * EnteralFormulaAdditiveType: Codes for the type of modular component such as
 * protein, carbohydrate or fiber to be provided in addition to or mixed with
 * the base formula. This value set is provided as a suggestive example. See
 * http://hl7.org/fhir/ValueSet/entformula-additive
 *
 * @generated from message google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode
 */
export class EnteralFormulaAdditiveTypeCodeCode extends Message<EnteralFormulaAdditiveTypeCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.Value value = 1;
   */
  value = EnteralFormulaAdditiveTypeCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EnteralFormulaAdditiveTypeCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EnteralFormulaAdditiveTypeCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnteralFormulaAdditiveTypeCodeCode {
    return new EnteralFormulaAdditiveTypeCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnteralFormulaAdditiveTypeCodeCode {
    return new EnteralFormulaAdditiveTypeCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnteralFormulaAdditiveTypeCodeCode {
    return new EnteralFormulaAdditiveTypeCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EnteralFormulaAdditiveTypeCodeCode | PlainMessage<EnteralFormulaAdditiveTypeCodeCode> | undefined, b: EnteralFormulaAdditiveTypeCodeCode | PlainMessage<EnteralFormulaAdditiveTypeCodeCode> | undefined): boolean {
    return proto3.util.equals(EnteralFormulaAdditiveTypeCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.Value
 */
export enum EnteralFormulaAdditiveTypeCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LIPID = 1;
   */
  LIPID = 1,

  /**
   * @generated from enum value: PROTEIN = 2;
   */
  PROTEIN = 2,

  /**
   * @generated from enum value: CARBOHYDRATE = 3;
   */
  CARBOHYDRATE = 3,

  /**
   * @generated from enum value: FIBER = 4;
   */
  FIBER = 4,

  /**
   * @generated from enum value: WATER = 5;
   */
  WATER = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(EnteralFormulaAdditiveTypeCodeCode_Value)
proto3.util.setEnumType(EnteralFormulaAdditiveTypeCodeCode_Value, "google.fhir.stu3.proto.EnteralFormulaAdditiveTypeCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LIPID" },
  { no: 2, name: "PROTEIN" },
  { no: 3, name: "CARBOHYDRATE" },
  { no: 4, name: "FIBER" },
  { no: 5, name: "WATER" },
]);

/**
 * The status of the episode of care.
 * See http://hl7.org/fhir/ValueSet/episode-of-care-status
 *
 * @generated from message google.fhir.stu3.proto.EpisodeOfCareStatusCode
 */
export class EpisodeOfCareStatusCode extends Message<EpisodeOfCareStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EpisodeOfCareStatusCode.Value value = 1;
   */
  value = EpisodeOfCareStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EpisodeOfCareStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EpisodeOfCareStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EpisodeOfCareStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCareStatusCode {
    return new EpisodeOfCareStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCareStatusCode {
    return new EpisodeOfCareStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCareStatusCode {
    return new EpisodeOfCareStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCareStatusCode | PlainMessage<EpisodeOfCareStatusCode> | undefined, b: EpisodeOfCareStatusCode | PlainMessage<EpisodeOfCareStatusCode> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCareStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EpisodeOfCareStatusCode.Value
 */
export enum EpisodeOfCareStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: WAITLIST = 2;
   */
  WAITLIST = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: ONHOLD = 4;
   */
  ONHOLD = 4,

  /**
   * @generated from enum value: FINISHED = 5;
   */
  FINISHED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 7;
   */
  ENTERED_IN_ERROR = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(EpisodeOfCareStatusCode_Value)
proto3.util.setEnumType(EpisodeOfCareStatusCode_Value, "google.fhir.stu3.proto.EpisodeOfCareStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "WAITLIST" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "ONHOLD" },
  { no: 5, name: "FINISHED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "ENTERED_IN_ERROR" },
]);

/**
 * This example value set defines a set of codes that can be used to express
 * the usage type of an EpisodeOfCare record. See
 * http://hl7.org/fhir/ValueSet/episodeofcare-type
 *
 * @generated from message google.fhir.stu3.proto.EpisodeOfCareTypeCode
 */
export class EpisodeOfCareTypeCode extends Message<EpisodeOfCareTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EpisodeOfCareTypeCode.Value value = 1;
   */
  value = EpisodeOfCareTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EpisodeOfCareTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EpisodeOfCareTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EpisodeOfCareTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCareTypeCode {
    return new EpisodeOfCareTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCareTypeCode {
    return new EpisodeOfCareTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCareTypeCode {
    return new EpisodeOfCareTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCareTypeCode | PlainMessage<EpisodeOfCareTypeCode> | undefined, b: EpisodeOfCareTypeCode | PlainMessage<EpisodeOfCareTypeCode> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCareTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EpisodeOfCareTypeCode.Value
 */
export enum EpisodeOfCareTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HACC = 1;
   */
  HACC = 1,

  /**
   * @generated from enum value: PAC = 2;
   */
  PAC = 2,

  /**
   * @generated from enum value: DIAB = 3;
   */
  DIAB = 3,

  /**
   * @generated from enum value: DA = 4;
   */
  DA = 4,

  /**
   * @generated from enum value: CACP = 5;
   */
  CACP = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(EpisodeOfCareTypeCode_Value)
proto3.util.setEnumType(EpisodeOfCareTypeCode_Value, "google.fhir.stu3.proto.EpisodeOfCareTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HACC" },
  { no: 2, name: "PAC" },
  { no: 3, name: "DIAB" },
  { no: 4, name: "DA" },
  { no: 5, name: "CACP" },
]);

/**
 * The mode of a message capability statement.
 * See http://hl7.org/fhir/ValueSet/event-capability-mode
 *
 * @generated from message google.fhir.stu3.proto.EventCapabilityModeCode
 */
export class EventCapabilityModeCode extends Message<EventCapabilityModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EventCapabilityModeCode.Value value = 1;
   */
  value = EventCapabilityModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EventCapabilityModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EventCapabilityModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EventCapabilityModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventCapabilityModeCode {
    return new EventCapabilityModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventCapabilityModeCode {
    return new EventCapabilityModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventCapabilityModeCode {
    return new EventCapabilityModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EventCapabilityModeCode | PlainMessage<EventCapabilityModeCode> | undefined, b: EventCapabilityModeCode | PlainMessage<EventCapabilityModeCode> | undefined): boolean {
    return proto3.util.equals(EventCapabilityModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EventCapabilityModeCode.Value
 */
export enum EventCapabilityModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SENDER = 1;
   */
  SENDER = 1,

  /**
   * @generated from enum value: RECEIVER = 2;
   */
  RECEIVER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(EventCapabilityModeCode_Value)
proto3.util.setEnumType(EventCapabilityModeCode_Value, "google.fhir.stu3.proto.EventCapabilityModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SENDER" },
  { no: 2, name: "RECEIVER" },
]);

/**
 * Codes identifying the stage lifecycle stage of a event
 * See http://hl7.org/fhir/ValueSet/event-status
 *
 * @generated from message google.fhir.stu3.proto.EventStatusCode
 */
export class EventStatusCode extends Message<EventStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.EventStatusCode.Value value = 1;
   */
  value = EventStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EventStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.EventStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EventStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventStatusCode {
    return new EventStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventStatusCode {
    return new EventStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventStatusCode {
    return new EventStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EventStatusCode | PlainMessage<EventStatusCode> | undefined, b: EventStatusCode | PlainMessage<EventStatusCode> | undefined): boolean {
    return proto3.util.equals(EventStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.EventStatusCode.Value
 */
export enum EventStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PREPARATION = 1;
   */
  PREPARATION = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: ABORTED = 4;
   */
  ABORTED = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(EventStatusCode_Value)
proto3.util.setEnumType(EventStatusCode_Value, "google.fhir.stu3.proto.EventStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PREPARATION" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "ABORTED" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * The type of Claim payee Resource
 * See http://hl7.org/fhir/ValueSet/ex-payee-resource-type
 *
 * @generated from message google.fhir.stu3.proto.ClaimPayeeResourceTypeCode
 */
export class ClaimPayeeResourceTypeCode extends Message<ClaimPayeeResourceTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.Value value = 1;
   */
  value = ClaimPayeeResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ClaimPayeeResourceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ClaimPayeeResourceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ClaimPayeeResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimPayeeResourceTypeCode {
    return new ClaimPayeeResourceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimPayeeResourceTypeCode {
    return new ClaimPayeeResourceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimPayeeResourceTypeCode {
    return new ClaimPayeeResourceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimPayeeResourceTypeCode | PlainMessage<ClaimPayeeResourceTypeCode> | undefined, b: ClaimPayeeResourceTypeCode | PlainMessage<ClaimPayeeResourceTypeCode> | undefined): boolean {
    return proto3.util.equals(ClaimPayeeResourceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.Value
 */
export enum ClaimPayeeResourceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ORGANIZATION = 1;
   */
  ORGANIZATION = 1,

  /**
   * @generated from enum value: PATIENT = 2;
   */
  PATIENT = 2,

  /**
   * @generated from enum value: PRACTITIONER = 3;
   */
  PRACTITIONER = 3,

  /**
   * @generated from enum value: RELATEDPERSON = 4;
   */
  RELATEDPERSON = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ClaimPayeeResourceTypeCode_Value)
proto3.util.setEnumType(ClaimPayeeResourceTypeCode_Value, "google.fhir.stu3.proto.ClaimPayeeResourceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ORGANIZATION" },
  { no: 2, name: "PATIENT" },
  { no: 3, name: "PRACTITIONER" },
  { no: 4, name: "RELATEDPERSON" },
]);

/**
 * A code specifying the state of the resource instance.
 * See http://hl7.org/fhir/ValueSet/explanationofbenefit-status
 *
 * @generated from message google.fhir.stu3.proto.ExplanationOfBenefitStatusCode
 */
export class ExplanationOfBenefitStatusCode extends Message<ExplanationOfBenefitStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.Value value = 1;
   */
  value = ExplanationOfBenefitStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefitStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExplanationOfBenefitStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExplanationOfBenefitStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefitStatusCode {
    return new ExplanationOfBenefitStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefitStatusCode {
    return new ExplanationOfBenefitStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefitStatusCode {
    return new ExplanationOfBenefitStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefitStatusCode | PlainMessage<ExplanationOfBenefitStatusCode> | undefined, b: ExplanationOfBenefitStatusCode | PlainMessage<ExplanationOfBenefitStatusCode> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefitStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.Value
 */
export enum ExplanationOfBenefitStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * @generated from enum value: DRAFT = 3;
   */
  DRAFT = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ExplanationOfBenefitStatusCode_Value)
proto3.util.setEnumType(ExplanationOfBenefitStatusCode_Value, "google.fhir.stu3.proto.ExplanationOfBenefitStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "CANCELLED" },
  { no: 3, name: "DRAFT" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * How an extension context is interpreted.
 * See http://hl7.org/fhir/ValueSet/extension-context
 *
 * @generated from message google.fhir.stu3.proto.ExtensionContextCode
 */
export class ExtensionContextCode extends Message<ExtensionContextCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ExtensionContextCode.Value value = 1;
   */
  value = ExtensionContextCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExtensionContextCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExtensionContextCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExtensionContextCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExtensionContextCode {
    return new ExtensionContextCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExtensionContextCode {
    return new ExtensionContextCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExtensionContextCode {
    return new ExtensionContextCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExtensionContextCode | PlainMessage<ExtensionContextCode> | undefined, b: ExtensionContextCode | PlainMessage<ExtensionContextCode> | undefined): boolean {
    return proto3.util.equals(ExtensionContextCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ExtensionContextCode.Value
 */
export enum ExtensionContextCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RESOURCE = 1;
   */
  RESOURCE = 1,

  /**
   * @generated from enum value: DATATYPE = 2;
   */
  DATATYPE = 2,

  /**
   * @generated from enum value: EXTENSION = 3;
   */
  EXTENSION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ExtensionContextCode_Value)
proto3.util.setEnumType(ExtensionContextCode_Value, "google.fhir.stu3.proto.ExtensionContextCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RESOURCE" },
  { no: 2, name: "DATATYPE" },
  { no: 3, name: "EXTENSION" },
]);

/**
 * The kind of operation to perform as a part of a property based filter.
 * See http://hl7.org/fhir/ValueSet/filter-operator
 *
 * @generated from message google.fhir.stu3.proto.FilterOperatorCode
 */
export class FilterOperatorCode extends Message<FilterOperatorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FilterOperatorCode.Value value = 1;
   */
  value = FilterOperatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FilterOperatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FilterOperatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FilterOperatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterOperatorCode {
    return new FilterOperatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterOperatorCode {
    return new FilterOperatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterOperatorCode {
    return new FilterOperatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: FilterOperatorCode | PlainMessage<FilterOperatorCode> | undefined, b: FilterOperatorCode | PlainMessage<FilterOperatorCode> | undefined): boolean {
    return proto3.util.equals(FilterOperatorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FilterOperatorCode.Value
 */
export enum FilterOperatorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EQUALS = 1;
   */
  EQUALS = 1,

  /**
   * @generated from enum value: IS_A = 2;
   */
  IS_A = 2,

  /**
   * @generated from enum value: DESCENDENT_OF = 3;
   */
  DESCENDENT_OF = 3,

  /**
   * @generated from enum value: IS_NOT_A = 4;
   */
  IS_NOT_A = 4,

  /**
   * @generated from enum value: REGEX = 5;
   */
  REGEX = 5,

  /**
   * @generated from enum value: IN = 6;
   */
  IN = 6,

  /**
   * @generated from enum value: NOT_IN = 7;
   */
  NOT_IN = 7,

  /**
   * @generated from enum value: GENERALIZES = 8;
   */
  GENERALIZES = 8,

  /**
   * @generated from enum value: EXISTS = 9;
   */
  EXISTS = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(FilterOperatorCode_Value)
proto3.util.setEnumType(FilterOperatorCode_Value, "google.fhir.stu3.proto.FilterOperatorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EQUALS" },
  { no: 2, name: "IS_A" },
  { no: 3, name: "DESCENDENT_OF" },
  { no: 4, name: "IS_NOT_A" },
  { no: 5, name: "REGEX" },
  { no: 6, name: "IN" },
  { no: 7, name: "NOT_IN" },
  { no: 8, name: "GENERALIZES" },
  { no: 9, name: "EXISTS" },
]);

/**
 * Example list of general categories for flagged issues. (Not complete or
 * necessarily appropriate.) See http://hl7.org/fhir/ValueSet/flag-category
 *
 * @generated from message google.fhir.stu3.proto.FlagCategoryCode
 */
export class FlagCategoryCode extends Message<FlagCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FlagCategoryCode.Value value = 1;
   */
  value = FlagCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FlagCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FlagCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FlagCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagCategoryCode {
    return new FlagCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagCategoryCode {
    return new FlagCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagCategoryCode {
    return new FlagCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: FlagCategoryCode | PlainMessage<FlagCategoryCode> | undefined, b: FlagCategoryCode | PlainMessage<FlagCategoryCode> | undefined): boolean {
    return proto3.util.equals(FlagCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FlagCategoryCode.Value
 */
export enum FlagCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DIET = 1;
   */
  DIET = 1,

  /**
   * @generated from enum value: DRUG = 2;
   */
  DRUG = 2,

  /**
   * @generated from enum value: LAB = 3;
   */
  LAB = 3,

  /**
   * @generated from enum value: ADMIN = 4;
   */
  ADMIN = 4,

  /**
   * @generated from enum value: CONTACT = 5;
   */
  CONTACT = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(FlagCategoryCode_Value)
proto3.util.setEnumType(FlagCategoryCode_Value, "google.fhir.stu3.proto.FlagCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DIET" },
  { no: 2, name: "DRUG" },
  { no: 3, name: "LAB" },
  { no: 4, name: "ADMIN" },
  { no: 5, name: "CONTACT" },
]);

/**
 * This value set is provided as an exemplar. The value set is driven by IHE
 * Table B.8-4: Abnormal Flags, Alert Priority. See
 * http://hl7.org/fhir/ValueSet/flag-priority
 *
 * @generated from message google.fhir.stu3.proto.FlagPriorityCodesCode
 */
export class FlagPriorityCodesCode extends Message<FlagPriorityCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FlagPriorityCodesCode.Value value = 1;
   */
  value = FlagPriorityCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FlagPriorityCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FlagPriorityCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FlagPriorityCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagPriorityCodesCode {
    return new FlagPriorityCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagPriorityCodesCode {
    return new FlagPriorityCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagPriorityCodesCode {
    return new FlagPriorityCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: FlagPriorityCodesCode | PlainMessage<FlagPriorityCodesCode> | undefined, b: FlagPriorityCodesCode | PlainMessage<FlagPriorityCodesCode> | undefined): boolean {
    return proto3.util.equals(FlagPriorityCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FlagPriorityCodesCode.Value
 */
export enum FlagPriorityCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PN = 1;
   */
  PN = 1,

  /**
   * @generated from enum value: PL = 2;
   */
  PL = 2,

  /**
   * @generated from enum value: PM = 3;
   */
  PM = 3,

  /**
   * @generated from enum value: PH = 4;
   */
  PH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FlagPriorityCodesCode_Value)
proto3.util.setEnumType(FlagPriorityCodesCode_Value, "google.fhir.stu3.proto.FlagPriorityCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PN" },
  { no: 2, name: "PL" },
  { no: 3, name: "PM" },
  { no: 4, name: "PH" },
]);

/**
 * Indicates whether this flag is active and needs to be displayed to a user,
 * or whether it is no longer needed or entered in error. See
 * http://hl7.org/fhir/ValueSet/flag-status
 *
 * @generated from message google.fhir.stu3.proto.FlagStatusCode
 */
export class FlagStatusCode extends Message<FlagStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FlagStatusCode.Value value = 1;
   */
  value = FlagStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FlagStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FlagStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FlagStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagStatusCode {
    return new FlagStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagStatusCode {
    return new FlagStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagStatusCode {
    return new FlagStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FlagStatusCode | PlainMessage<FlagStatusCode> | undefined, b: FlagStatusCode | PlainMessage<FlagStatusCode> | undefined): boolean {
    return proto3.util.equals(FlagStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FlagStatusCode.Value
 */
export enum FlagStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(FlagStatusCode_Value)
proto3.util.setEnumType(FlagStatusCode_Value, "google.fhir.stu3.proto.FlagStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * This value set includes Status codes.
 * See http://hl7.org/fhir/ValueSet/fm-status
 *
 * @generated from message google.fhir.stu3.proto.FinancialResourceStatusCode
 */
export class FinancialResourceStatusCode extends Message<FinancialResourceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FinancialResourceStatusCode.Value value = 1;
   */
  value = FinancialResourceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FinancialResourceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FinancialResourceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FinancialResourceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FinancialResourceStatusCode {
    return new FinancialResourceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FinancialResourceStatusCode {
    return new FinancialResourceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FinancialResourceStatusCode {
    return new FinancialResourceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FinancialResourceStatusCode | PlainMessage<FinancialResourceStatusCode> | undefined, b: FinancialResourceStatusCode | PlainMessage<FinancialResourceStatusCode> | undefined): boolean {
    return proto3.util.equals(FinancialResourceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FinancialResourceStatusCode.Value
 */
export enum FinancialResourceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * @generated from enum value: DRAFT = 3;
   */
  DRAFT = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FinancialResourceStatusCode_Value)
proto3.util.setEnumType(FinancialResourceStatusCode_Value, "google.fhir.stu3.proto.FinancialResourceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "CANCELLED" },
  { no: 3, name: "DRAFT" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * Codes indicating whether the goal has been accepted by a stakeholder
 * See http://hl7.org/fhir/ValueSet/goal-acceptance-status
 *
 * @generated from message google.fhir.stu3.proto.GoalAcceptanceStatusCode
 */
export class GoalAcceptanceStatusCode extends Message<GoalAcceptanceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GoalAcceptanceStatusCode.Value value = 1;
   */
  value = GoalAcceptanceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalAcceptanceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GoalAcceptanceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalAcceptanceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalAcceptanceStatusCode {
    return new GoalAcceptanceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalAcceptanceStatusCode {
    return new GoalAcceptanceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalAcceptanceStatusCode {
    return new GoalAcceptanceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalAcceptanceStatusCode | PlainMessage<GoalAcceptanceStatusCode> | undefined, b: GoalAcceptanceStatusCode | PlainMessage<GoalAcceptanceStatusCode> | undefined): boolean {
    return proto3.util.equals(GoalAcceptanceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GoalAcceptanceStatusCode.Value
 */
export enum GoalAcceptanceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AGREE = 1;
   */
  AGREE = 1,

  /**
   * @generated from enum value: DISAGREE = 2;
   */
  DISAGREE = 2,

  /**
   * @generated from enum value: PENDING = 3;
   */
  PENDING = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalAcceptanceStatusCode_Value)
proto3.util.setEnumType(GoalAcceptanceStatusCode_Value, "google.fhir.stu3.proto.GoalAcceptanceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AGREE" },
  { no: 2, name: "DISAGREE" },
  { no: 3, name: "PENDING" },
]);

/**
 * Example codes for grouping goals for filtering or presentation.
 * See http://hl7.org/fhir/ValueSet/goal-category
 *
 * @generated from message google.fhir.stu3.proto.GoalCategoryCode
 */
export class GoalCategoryCode extends Message<GoalCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GoalCategoryCode.Value value = 1;
   */
  value = GoalCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GoalCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalCategoryCode {
    return new GoalCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalCategoryCode {
    return new GoalCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalCategoryCode {
    return new GoalCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalCategoryCode | PlainMessage<GoalCategoryCode> | undefined, b: GoalCategoryCode | PlainMessage<GoalCategoryCode> | undefined): boolean {
    return proto3.util.equals(GoalCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GoalCategoryCode.Value
 */
export enum GoalCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DIETARY = 1;
   */
  DIETARY = 1,

  /**
   * @generated from enum value: SAFETY = 2;
   */
  SAFETY = 2,

  /**
   * @generated from enum value: BEHAVIORAL = 3;
   */
  BEHAVIORAL = 3,

  /**
   * @generated from enum value: NURSING = 4;
   */
  NURSING = 4,

  /**
   * @generated from enum value: PHYSIOTHERAPY = 5;
   */
  PHYSIOTHERAPY = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalCategoryCode_Value)
proto3.util.setEnumType(GoalCategoryCode_Value, "google.fhir.stu3.proto.GoalCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DIETARY" },
  { no: 2, name: "SAFETY" },
  { no: 3, name: "BEHAVIORAL" },
  { no: 4, name: "NURSING" },
  { no: 5, name: "PHYSIOTHERAPY" },
]);

/**
 * Indicates the level of importance associated with reaching or sustaining a
 * goal. See http://hl7.org/fhir/ValueSet/goal-priority
 *
 * @generated from message google.fhir.stu3.proto.GoalPriorityCode
 */
export class GoalPriorityCode extends Message<GoalPriorityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GoalPriorityCode.Value value = 1;
   */
  value = GoalPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalPriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GoalPriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalPriorityCode {
    return new GoalPriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalPriorityCode {
    return new GoalPriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalPriorityCode {
    return new GoalPriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalPriorityCode | PlainMessage<GoalPriorityCode> | undefined, b: GoalPriorityCode | PlainMessage<GoalPriorityCode> | undefined): boolean {
    return proto3.util.equals(GoalPriorityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GoalPriorityCode.Value
 */
export enum GoalPriorityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HIGH_PRIORITY = 1;
   */
  HIGH_PRIORITY = 1,

  /**
   * @generated from enum value: MEDIUM_PRIORITY = 2;
   */
  MEDIUM_PRIORITY = 2,

  /**
   * @generated from enum value: LOW_PRIORITY = 3;
   */
  LOW_PRIORITY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalPriorityCode_Value)
proto3.util.setEnumType(GoalPriorityCode_Value, "google.fhir.stu3.proto.GoalPriorityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HIGH_PRIORITY" },
  { no: 2, name: "MEDIUM_PRIORITY" },
  { no: 3, name: "LOW_PRIORITY" },
]);

/**
 * Types of relationships between two goals
 * See http://hl7.org/fhir/ValueSet/goal-relationship-type
 *
 * @generated from message google.fhir.stu3.proto.GoalRelationshipTypeCode
 */
export class GoalRelationshipTypeCode extends Message<GoalRelationshipTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GoalRelationshipTypeCode.Value value = 1;
   */
  value = GoalRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalRelationshipTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GoalRelationshipTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalRelationshipTypeCode {
    return new GoalRelationshipTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalRelationshipTypeCode {
    return new GoalRelationshipTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalRelationshipTypeCode {
    return new GoalRelationshipTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalRelationshipTypeCode | PlainMessage<GoalRelationshipTypeCode> | undefined, b: GoalRelationshipTypeCode | PlainMessage<GoalRelationshipTypeCode> | undefined): boolean {
    return proto3.util.equals(GoalRelationshipTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GoalRelationshipTypeCode.Value
 */
export enum GoalRelationshipTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PREDECESSOR = 1;
   */
  PREDECESSOR = 1,

  /**
   * @generated from enum value: SUCCESSOR = 2;
   */
  SUCCESSOR = 2,

  /**
   * @generated from enum value: REPLACEMENT = 3;
   */
  REPLACEMENT = 3,

  /**
   * @generated from enum value: MILESTONE = 4;
   */
  MILESTONE = 4,

  /**
   * @generated from enum value: OTHER = 5;
   */
  OTHER = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalRelationshipTypeCode_Value)
proto3.util.setEnumType(GoalRelationshipTypeCode_Value, "google.fhir.stu3.proto.GoalRelationshipTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PREDECESSOR" },
  { no: 2, name: "SUCCESSOR" },
  { no: 3, name: "REPLACEMENT" },
  { no: 4, name: "MILESTONE" },
  { no: 5, name: "OTHER" },
]);

/**
 * Indicates whether the goal has been met and is still being targeted
 * See http://hl7.org/fhir/ValueSet/goal-status
 *
 * @generated from message google.fhir.stu3.proto.GoalStatusCode
 */
export class GoalStatusCode extends Message<GoalStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GoalStatusCode.Value value = 1;
   */
  value = GoalStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GoalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalStatusCode {
    return new GoalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalStatusCode {
    return new GoalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalStatusCode {
    return new GoalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalStatusCode | PlainMessage<GoalStatusCode> | undefined, b: GoalStatusCode | PlainMessage<GoalStatusCode> | undefined): boolean {
    return proto3.util.equals(GoalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GoalStatusCode.Value
 */
export enum GoalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: ACCEPTED = 2;
   */
  ACCEPTED = 2,

  /**
   * @generated from enum value: PLANNED = 3;
   */
  PLANNED = 3,

  /**
   * @generated from enum value: IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * @generated from enum value: ON_TARGET = 5;
   */
  ON_TARGET = 5,

  /**
   * @generated from enum value: AHEAD_OF_TARGET = 6;
   */
  AHEAD_OF_TARGET = 6,

  /**
   * @generated from enum value: BEHIND_TARGET = 7;
   */
  BEHIND_TARGET = 7,

  /**
   * @generated from enum value: SUSTAINING = 8;
   */
  SUSTAINING = 8,

  /**
   * @generated from enum value: ACHIEVED = 9;
   */
  ACHIEVED = 9,

  /**
   * @generated from enum value: ON_HOLD = 10;
   */
  ON_HOLD = 10,

  /**
   * @generated from enum value: CANCELLED = 11;
   */
  CANCELLED = 11,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 12;
   */
  ENTERED_IN_ERROR = 12,

  /**
   * @generated from enum value: REJECTED = 13;
   */
  REJECTED = 13,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalStatusCode_Value)
proto3.util.setEnumType(GoalStatusCode_Value, "google.fhir.stu3.proto.GoalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "ACCEPTED" },
  { no: 3, name: "PLANNED" },
  { no: 4, name: "IN_PROGRESS" },
  { no: 5, name: "ON_TARGET" },
  { no: 6, name: "AHEAD_OF_TARGET" },
  { no: 7, name: "BEHIND_TARGET" },
  { no: 8, name: "SUSTAINING" },
  { no: 9, name: "ACHIEVED" },
  { no: 10, name: "ON_HOLD" },
  { no: 11, name: "CANCELLED" },
  { no: 12, name: "ENTERED_IN_ERROR" },
  { no: 13, name: "REJECTED" },
]);

/**
 * Example codes indicating the reason for a current status.  Note that these
 * are in no way complete and may not even be appropriate for some uses. See
 * http://hl7.org/fhir/ValueSet/goal-status-reason
 *
 * @generated from message google.fhir.stu3.proto.GoalStatusReasonCode
 */
export class GoalStatusReasonCode extends Message<GoalStatusReasonCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GoalStatusReasonCode.Value value = 1;
   */
  value = GoalStatusReasonCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalStatusReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GoalStatusReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalStatusReasonCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalStatusReasonCode {
    return new GoalStatusReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalStatusReasonCode {
    return new GoalStatusReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalStatusReasonCode {
    return new GoalStatusReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalStatusReasonCode | PlainMessage<GoalStatusReasonCode> | undefined, b: GoalStatusReasonCode | PlainMessage<GoalStatusReasonCode> | undefined): boolean {
    return proto3.util.equals(GoalStatusReasonCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GoalStatusReasonCode.Value
 */
export enum GoalStatusReasonCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SURGERY = 1;
   */
  SURGERY = 1,

  /**
   * @generated from enum value: LIFE_EVENT = 2;
   */
  LIFE_EVENT = 2,

  /**
   * @generated from enum value: REPLACED = 3;
   */
  REPLACED = 3,

  /**
   * @generated from enum value: PATIENT_REQUEST = 4;
   */
  PATIENT_REQUEST = 4,

  /**
   * @generated from enum value: TEMP_NOT_ATTAINABLE = 5;
   */
  TEMP_NOT_ATTAINABLE = 5,

  /**
   * @generated from enum value: PERMANENT_NOT_ATTAINABLE = 6;
   */
  PERMANENT_NOT_ATTAINABLE = 6,

  /**
   * @generated from enum value: FINANCIAL_BARRIER = 7;
   */
  FINANCIAL_BARRIER = 7,

  /**
   * @generated from enum value: LACK_OF_TRANSPORTATION = 8;
   */
  LACK_OF_TRANSPORTATION = 8,

  /**
   * @generated from enum value: LACK_OF_SOCIAL_SUPPORT = 9;
   */
  LACK_OF_SOCIAL_SUPPORT = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalStatusReasonCode_Value)
proto3.util.setEnumType(GoalStatusReasonCode_Value, "google.fhir.stu3.proto.GoalStatusReasonCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SURGERY" },
  { no: 2, name: "LIFE_EVENT" },
  { no: 3, name: "REPLACED" },
  { no: 4, name: "PATIENT_REQUEST" },
  { no: 5, name: "TEMP_NOT_ATTAINABLE" },
  { no: 6, name: "PERMANENT_NOT_ATTAINABLE" },
  { no: 7, name: "FINANCIAL_BARRIER" },
  { no: 8, name: "LACK_OF_TRANSPORTATION" },
  { no: 9, name: "LACK_OF_SOCIAL_SUPPORT" },
]);

/**
 * How a compartment must be linked
 * See http://hl7.org/fhir/ValueSet/graph-compartment-rule
 *
 * @generated from message google.fhir.stu3.proto.GraphCompartmentRuleCode
 */
export class GraphCompartmentRuleCode extends Message<GraphCompartmentRuleCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GraphCompartmentRuleCode.Value value = 1;
   */
  value = GraphCompartmentRuleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GraphCompartmentRuleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GraphCompartmentRuleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GraphCompartmentRuleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphCompartmentRuleCode {
    return new GraphCompartmentRuleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphCompartmentRuleCode {
    return new GraphCompartmentRuleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphCompartmentRuleCode {
    return new GraphCompartmentRuleCode().fromJsonString(jsonString, options);
  }

  static equals(a: GraphCompartmentRuleCode | PlainMessage<GraphCompartmentRuleCode> | undefined, b: GraphCompartmentRuleCode | PlainMessage<GraphCompartmentRuleCode> | undefined): boolean {
    return proto3.util.equals(GraphCompartmentRuleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GraphCompartmentRuleCode.Value
 */
export enum GraphCompartmentRuleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IDENTICAL = 1;
   */
  IDENTICAL = 1,

  /**
   * @generated from enum value: MATCHING = 2;
   */
  MATCHING = 2,

  /**
   * @generated from enum value: DIFFERENT = 3;
   */
  DIFFERENT = 3,

  /**
   * @generated from enum value: CUSTOM = 4;
   */
  CUSTOM = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(GraphCompartmentRuleCode_Value)
proto3.util.setEnumType(GraphCompartmentRuleCode_Value, "google.fhir.stu3.proto.GraphCompartmentRuleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IDENTICAL" },
  { no: 2, name: "MATCHING" },
  { no: 3, name: "DIFFERENT" },
  { no: 4, name: "CUSTOM" },
]);

/**
 * Types of resources that are part of group
 * See http://hl7.org/fhir/ValueSet/group-type
 *
 * @generated from message google.fhir.stu3.proto.GroupTypeCode
 */
export class GroupTypeCode extends Message<GroupTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GroupTypeCode.Value value = 1;
   */
  value = GroupTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GroupTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GroupTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GroupTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupTypeCode {
    return new GroupTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupTypeCode {
    return new GroupTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupTypeCode {
    return new GroupTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: GroupTypeCode | PlainMessage<GroupTypeCode> | undefined, b: GroupTypeCode | PlainMessage<GroupTypeCode> | undefined): boolean {
    return proto3.util.equals(GroupTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GroupTypeCode.Value
 */
export enum GroupTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PERSON = 1;
   */
  PERSON = 1,

  /**
   * @generated from enum value: ANIMAL = 2;
   */
  ANIMAL = 2,

  /**
   * @generated from enum value: PRACTITIONER = 3;
   */
  PRACTITIONER = 3,

  /**
   * @generated from enum value: DEVICE = 4;
   */
  DEVICE = 4,

  /**
   * @generated from enum value: MEDICATION = 5;
   */
  MEDICATION = 5,

  /**
   * @generated from enum value: SUBSTANCE = 6;
   */
  SUBSTANCE = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(GroupTypeCode_Value)
proto3.util.setEnumType(GroupTypeCode_Value, "google.fhir.stu3.proto.GroupTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PERSON" },
  { no: 2, name: "ANIMAL" },
  { no: 3, name: "PRACTITIONER" },
  { no: 4, name: "DEVICE" },
  { no: 5, name: "MEDICATION" },
  { no: 6, name: "SUBSTANCE" },
]);

/**
 * The status of a guidance response
 * See http://hl7.org/fhir/ValueSet/guidance-response-status
 *
 * @generated from message google.fhir.stu3.proto.GuidanceResponseStatusCode
 */
export class GuidanceResponseStatusCode extends Message<GuidanceResponseStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GuidanceResponseStatusCode.Value value = 1;
   */
  value = GuidanceResponseStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GuidanceResponseStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GuidanceResponseStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GuidanceResponseStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceResponseStatusCode {
    return new GuidanceResponseStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceResponseStatusCode {
    return new GuidanceResponseStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceResponseStatusCode {
    return new GuidanceResponseStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GuidanceResponseStatusCode | PlainMessage<GuidanceResponseStatusCode> | undefined, b: GuidanceResponseStatusCode | PlainMessage<GuidanceResponseStatusCode> | undefined): boolean {
    return proto3.util.equals(GuidanceResponseStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GuidanceResponseStatusCode.Value
 */
export enum GuidanceResponseStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: DATA_REQUESTED = 2;
   */
  DATA_REQUESTED = 2,

  /**
   * @generated from enum value: DATA_REQUIRED = 3;
   */
  DATA_REQUIRED = 3,

  /**
   * @generated from enum value: IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * @generated from enum value: FAILURE = 5;
   */
  FAILURE = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(GuidanceResponseStatusCode_Value)
proto3.util.setEnumType(GuidanceResponseStatusCode_Value, "google.fhir.stu3.proto.GuidanceResponseStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SUCCESS" },
  { no: 2, name: "DATA_REQUESTED" },
  { no: 3, name: "DATA_REQUIRED" },
  { no: 4, name: "IN_PROGRESS" },
  { no: 5, name: "FAILURE" },
  { no: 6, name: "ENTERED_IN_ERROR" },
]);

/**
 * How a dependency is represented when the guide is published.
 * See http://hl7.org/fhir/ValueSet/guide-dependency-type
 *
 * @generated from message google.fhir.stu3.proto.GuideDependencyTypeCode
 */
export class GuideDependencyTypeCode extends Message<GuideDependencyTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GuideDependencyTypeCode.Value value = 1;
   */
  value = GuideDependencyTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GuideDependencyTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GuideDependencyTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GuideDependencyTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuideDependencyTypeCode {
    return new GuideDependencyTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuideDependencyTypeCode {
    return new GuideDependencyTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuideDependencyTypeCode {
    return new GuideDependencyTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: GuideDependencyTypeCode | PlainMessage<GuideDependencyTypeCode> | undefined, b: GuideDependencyTypeCode | PlainMessage<GuideDependencyTypeCode> | undefined): boolean {
    return proto3.util.equals(GuideDependencyTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GuideDependencyTypeCode.Value
 */
export enum GuideDependencyTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REFERENCE = 1;
   */
  REFERENCE = 1,

  /**
   * @generated from enum value: INCLUSION = 2;
   */
  INCLUSION = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(GuideDependencyTypeCode_Value)
proto3.util.setEnumType(GuideDependencyTypeCode_Value, "google.fhir.stu3.proto.GuideDependencyTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REFERENCE" },
  { no: 2, name: "INCLUSION" },
]);

/**
 * The kind of an included page.
 * See http://hl7.org/fhir/ValueSet/guide-page-kind
 *
 * @generated from message google.fhir.stu3.proto.GuidePageKindCode
 */
export class GuidePageKindCode extends Message<GuidePageKindCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.GuidePageKindCode.Value value = 1;
   */
  value = GuidePageKindCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GuidePageKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.GuidePageKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GuidePageKindCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidePageKindCode {
    return new GuidePageKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidePageKindCode {
    return new GuidePageKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidePageKindCode {
    return new GuidePageKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: GuidePageKindCode | PlainMessage<GuidePageKindCode> | undefined, b: GuidePageKindCode | PlainMessage<GuidePageKindCode> | undefined): boolean {
    return proto3.util.equals(GuidePageKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.GuidePageKindCode.Value
 */
export enum GuidePageKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PAGE = 1;
   */
  PAGE = 1,

  /**
   * @generated from enum value: EXAMPLE = 2;
   */
  EXAMPLE = 2,

  /**
   * @generated from enum value: LIST = 3;
   */
  LIST = 3,

  /**
   * @generated from enum value: INCLUDE = 4;
   */
  INCLUDE = 4,

  /**
   * @generated from enum value: DIRECTORY = 5;
   */
  DIRECTORY = 5,

  /**
   * @generated from enum value: DICTIONARY = 6;
   */
  DICTIONARY = 6,

  /**
   * @generated from enum value: TOC = 7;
   */
  TOC = 7,

  /**
   * @generated from enum value: RESOURCE = 8;
   */
  RESOURCE = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(GuidePageKindCode_Value)
proto3.util.setEnumType(GuidePageKindCode_Value, "google.fhir.stu3.proto.GuidePageKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PAGE" },
  { no: 2, name: "EXAMPLE" },
  { no: 3, name: "LIST" },
  { no: 4, name: "INCLUDE" },
  { no: 5, name: "DIRECTORY" },
  { no: 6, name: "DICTIONARY" },
  { no: 7, name: "TOC" },
  { no: 8, name: "RESOURCE" },
]);

/**
 * Codes describing the reason why a family member history was not done.
 * See http://hl7.org/fhir/ValueSet/history-not-done-reason
 *
 * @generated from message google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode
 */
export class FamilyHistoryNotDoneReasonCode extends Message<FamilyHistoryNotDoneReasonCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.Value value = 1;
   */
  value = FamilyHistoryNotDoneReasonCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FamilyHistoryNotDoneReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FamilyHistoryNotDoneReasonCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyHistoryNotDoneReasonCode {
    return new FamilyHistoryNotDoneReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyHistoryNotDoneReasonCode {
    return new FamilyHistoryNotDoneReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyHistoryNotDoneReasonCode {
    return new FamilyHistoryNotDoneReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyHistoryNotDoneReasonCode | PlainMessage<FamilyHistoryNotDoneReasonCode> | undefined, b: FamilyHistoryNotDoneReasonCode | PlainMessage<FamilyHistoryNotDoneReasonCode> | undefined): boolean {
    return proto3.util.equals(FamilyHistoryNotDoneReasonCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.Value
 */
export enum FamilyHistoryNotDoneReasonCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SUBJECT_UNKNOWN = 1;
   */
  SUBJECT_UNKNOWN = 1,

  /**
   * @generated from enum value: WITHHELD = 2;
   */
  WITHHELD = 2,

  /**
   * @generated from enum value: UNABLE_TO_OBTAIN = 3;
   */
  UNABLE_TO_OBTAIN = 3,

  /**
   * @generated from enum value: DEFERRED = 4;
   */
  DEFERRED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FamilyHistoryNotDoneReasonCode_Value)
proto3.util.setEnumType(FamilyHistoryNotDoneReasonCode_Value, "google.fhir.stu3.proto.FamilyHistoryNotDoneReasonCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SUBJECT_UNKNOWN" },
  { no: 2, name: "WITHHELD" },
  { no: 3, name: "UNABLE_TO_OBTAIN" },
  { no: 4, name: "DEFERRED" },
]);

/**
 * A code that identifies the status of the family history record.
 * See http://hl7.org/fhir/ValueSet/history-status
 *
 * @generated from message google.fhir.stu3.proto.FamilyHistoryStatusCode
 */
export class FamilyHistoryStatusCode extends Message<FamilyHistoryStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FamilyHistoryStatusCode.Value value = 1;
   */
  value = FamilyHistoryStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FamilyHistoryStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilyHistoryStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FamilyHistoryStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyHistoryStatusCode {
    return new FamilyHistoryStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyHistoryStatusCode {
    return new FamilyHistoryStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyHistoryStatusCode {
    return new FamilyHistoryStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyHistoryStatusCode | PlainMessage<FamilyHistoryStatusCode> | undefined, b: FamilyHistoryStatusCode | PlainMessage<FamilyHistoryStatusCode> | undefined): boolean {
    return proto3.util.equals(FamilyHistoryStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FamilyHistoryStatusCode.Value
 */
export enum FamilyHistoryStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PARTIAL = 1;
   */
  PARTIAL = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: HEALTH_UNKNOWN = 4;
   */
  HEALTH_UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FamilyHistoryStatusCode_Value)
proto3.util.setEnumType(FamilyHistoryStatusCode_Value, "google.fhir.stu3.proto.FamilyHistoryStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PARTIAL" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "HEALTH_UNKNOWN" },
]);

/**
 * An HL7 administrative unit that owns artifacts in the FHIR specification
 * See http://hl7.org/fhir/ValueSet/hl7-work-group
 *
 * @generated from message google.fhir.stu3.proto.HL7WorkgroupCode
 */
export class HL7WorkgroupCode extends Message<HL7WorkgroupCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.HL7WorkgroupCode.Value value = 1;
   */
  value = HL7WorkgroupCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HL7WorkgroupCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HL7WorkgroupCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(HL7WorkgroupCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HL7WorkgroupCode {
    return new HL7WorkgroupCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HL7WorkgroupCode {
    return new HL7WorkgroupCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HL7WorkgroupCode {
    return new HL7WorkgroupCode().fromJsonString(jsonString, options);
  }

  static equals(a: HL7WorkgroupCode | PlainMessage<HL7WorkgroupCode> | undefined, b: HL7WorkgroupCode | PlainMessage<HL7WorkgroupCode> | undefined): boolean {
    return proto3.util.equals(HL7WorkgroupCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.HL7WorkgroupCode.Value
 */
export enum HL7WorkgroupCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CBCC = 1;
   */
  CBCC = 1,

  /**
   * @generated from enum value: CDS = 2;
   */
  CDS = 2,

  /**
   * @generated from enum value: CQI = 3;
   */
  CQI = 3,

  /**
   * @generated from enum value: CG = 4;
   */
  CG = 4,

  /**
   * @generated from enum value: DEV = 5;
   */
  DEV = 5,

  /**
   * @generated from enum value: EHR = 6;
   */
  EHR = 6,

  /**
   * @generated from enum value: FHIR = 7;
   */
  FHIR = 7,

  /**
   * @generated from enum value: FM = 8;
   */
  FM = 8,

  /**
   * @generated from enum value: HSI = 9;
   */
  HSI = 9,

  /**
   * @generated from enum value: II = 10;
   */
  II = 10,

  /**
   * @generated from enum value: INM = 11;
   */
  INM = 11,

  /**
   * @generated from enum value: ITS = 12;
   */
  ITS = 12,

  /**
   * @generated from enum value: OO = 13;
   */
  OO = 13,

  /**
   * @generated from enum value: PA = 14;
   */
  PA = 14,

  /**
   * @generated from enum value: PC = 15;
   */
  PC = 15,

  /**
   * @generated from enum value: PHER = 16;
   */
  PHER = 16,

  /**
   * @generated from enum value: PHX = 17;
   */
  PHX = 17,

  /**
   * @generated from enum value: RCRIM = 18;
   */
  RCRIM = 18,

  /**
   * @generated from enum value: SD = 19;
   */
  SD = 19,

  /**
   * @generated from enum value: SEC = 20;
   */
  SEC = 20,

  /**
   * @generated from enum value: US = 21;
   */
  US = 21,

  /**
   * @generated from enum value: VOCAB = 22;
   */
  VOCAB = 22,

  /**
   * @generated from enum value: AID = 23;
   */
  AID = 23,
}
// Retrieve enum metadata with: proto3.getEnumType(HL7WorkgroupCode_Value)
proto3.util.setEnumType(HL7WorkgroupCode_Value, "google.fhir.stu3.proto.HL7WorkgroupCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CBCC" },
  { no: 2, name: "CDS" },
  { no: 3, name: "CQI" },
  { no: 4, name: "CG" },
  { no: 5, name: "DEV" },
  { no: 6, name: "EHR" },
  { no: 7, name: "FHIR" },
  { no: 8, name: "FM" },
  { no: 9, name: "HSI" },
  { no: 10, name: "II" },
  { no: 11, name: "INM" },
  { no: 12, name: "ITS" },
  { no: 13, name: "OO" },
  { no: 14, name: "PA" },
  { no: 15, name: "PC" },
  { no: 16, name: "PHER" },
  { no: 17, name: "PHX" },
  { no: 18, name: "RCRIM" },
  { no: 19, name: "SD" },
  { no: 20, name: "SEC" },
  { no: 21, name: "US" },
  { no: 22, name: "VOCAB" },
  { no: 23, name: "AID" },
]);

/**
 * The allowable request method or HTTP operation codes.
 * See http://hl7.org/fhir/ValueSet/http-operations
 *
 * @generated from message google.fhir.stu3.proto.TestScriptRequestMethodCodeCode
 */
export class TestScriptRequestMethodCodeCode extends Message<TestScriptRequestMethodCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.Value value = 1;
   */
  value = TestScriptRequestMethodCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScriptRequestMethodCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScriptRequestMethodCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestScriptRequestMethodCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScriptRequestMethodCodeCode {
    return new TestScriptRequestMethodCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScriptRequestMethodCodeCode {
    return new TestScriptRequestMethodCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScriptRequestMethodCodeCode {
    return new TestScriptRequestMethodCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScriptRequestMethodCodeCode | PlainMessage<TestScriptRequestMethodCodeCode> | undefined, b: TestScriptRequestMethodCodeCode | PlainMessage<TestScriptRequestMethodCodeCode> | undefined): boolean {
    return proto3.util.equals(TestScriptRequestMethodCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.Value
 */
export enum TestScriptRequestMethodCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DELETE = 1;
   */
  DELETE = 1,

  /**
   * @generated from enum value: GET = 2;
   */
  GET = 2,

  /**
   * @generated from enum value: OPTIONS = 3;
   */
  OPTIONS = 3,

  /**
   * @generated from enum value: PATCH = 4;
   */
  PATCH = 4,

  /**
   * @generated from enum value: POST = 5;
   */
  POST = 5,

  /**
   * @generated from enum value: PUT = 6;
   */
  PUT = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(TestScriptRequestMethodCodeCode_Value)
proto3.util.setEnumType(TestScriptRequestMethodCodeCode_Value, "google.fhir.stu3.proto.TestScriptRequestMethodCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DELETE" },
  { no: 2, name: "GET" },
  { no: 3, name: "OPTIONS" },
  { no: 4, name: "PATCH" },
  { no: 5, name: "POST" },
  { no: 6, name: "PUT" },
]);

/**
 * HTTP verbs (in the HTTP command line).
 * See http://hl7.org/fhir/ValueSet/http-verb
 *
 * @generated from message google.fhir.stu3.proto.HTTPVerbCode
 */
export class HTTPVerbCode extends Message<HTTPVerbCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.HTTPVerbCode.Value value = 1;
   */
  value = HTTPVerbCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HTTPVerbCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HTTPVerbCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(HTTPVerbCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTTPVerbCode {
    return new HTTPVerbCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTTPVerbCode {
    return new HTTPVerbCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTTPVerbCode {
    return new HTTPVerbCode().fromJsonString(jsonString, options);
  }

  static equals(a: HTTPVerbCode | PlainMessage<HTTPVerbCode> | undefined, b: HTTPVerbCode | PlainMessage<HTTPVerbCode> | undefined): boolean {
    return proto3.util.equals(HTTPVerbCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.HTTPVerbCode.Value
 */
export enum HTTPVerbCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GET = 1;
   */
  GET = 1,

  /**
   * @generated from enum value: POST = 2;
   */
  POST = 2,

  /**
   * @generated from enum value: PUT = 3;
   */
  PUT = 3,

  /**
   * @generated from enum value: DELETE = 4;
   */
  DELETE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(HTTPVerbCode_Value)
proto3.util.setEnumType(HTTPVerbCode_Value, "google.fhir.stu3.proto.HTTPVerbCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GET" },
  { no: 2, name: "POST" },
  { no: 3, name: "PUT" },
  { no: 4, name: "DELETE" },
]);

/**
 * The level of confidence that this link represents the same actual person,
 * based on NIST Authentication Levels. See
 * http://hl7.org/fhir/ValueSet/identity-assuranceLevel
 *
 * @generated from message google.fhir.stu3.proto.IdentityAssuranceLevelCode
 */
export class IdentityAssuranceLevelCode extends Message<IdentityAssuranceLevelCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.IdentityAssuranceLevelCode.Value value = 1;
   */
  value = IdentityAssuranceLevelCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<IdentityAssuranceLevelCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.IdentityAssuranceLevelCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(IdentityAssuranceLevelCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdentityAssuranceLevelCode {
    return new IdentityAssuranceLevelCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdentityAssuranceLevelCode {
    return new IdentityAssuranceLevelCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdentityAssuranceLevelCode {
    return new IdentityAssuranceLevelCode().fromJsonString(jsonString, options);
  }

  static equals(a: IdentityAssuranceLevelCode | PlainMessage<IdentityAssuranceLevelCode> | undefined, b: IdentityAssuranceLevelCode | PlainMessage<IdentityAssuranceLevelCode> | undefined): boolean {
    return proto3.util.equals(IdentityAssuranceLevelCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.IdentityAssuranceLevelCode.Value
 */
export enum IdentityAssuranceLevelCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LEVEL1 = 1;
   */
  LEVEL1 = 1,

  /**
   * @generated from enum value: LEVEL2 = 2;
   */
  LEVEL2 = 2,

  /**
   * @generated from enum value: LEVEL3 = 3;
   */
  LEVEL3 = 3,

  /**
   * @generated from enum value: LEVEL4 = 4;
   */
  LEVEL4 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(IdentityAssuranceLevelCode_Value)
proto3.util.setEnumType(IdentityAssuranceLevelCode_Value, "google.fhir.stu3.proto.IdentityAssuranceLevelCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LEVEL1" },
  { no: 2, name: "LEVEL2" },
  { no: 3, name: "LEVEL3" },
  { no: 4, name: "LEVEL4" },
]);

/**
 * The value set to instantiate this attribute should be drawn from a
 * terminologically robust code system that consists of or contains concepts
 * to support describing the source of the data when the report of the
 * immunization event is not based on information from the person, entity or
 * organization who administered the vaccine. This value set is provided as a
 * suggestive example. See http://hl7.org/fhir/ValueSet/immunization-origin
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationOriginCodesCode
 */
export class ImmunizationOriginCodesCode extends Message<ImmunizationOriginCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ImmunizationOriginCodesCode.Value value = 1;
   */
  value = ImmunizationOriginCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ImmunizationOriginCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationOriginCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationOriginCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationOriginCodesCode {
    return new ImmunizationOriginCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationOriginCodesCode {
    return new ImmunizationOriginCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationOriginCodesCode {
    return new ImmunizationOriginCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationOriginCodesCode | PlainMessage<ImmunizationOriginCodesCode> | undefined, b: ImmunizationOriginCodesCode | PlainMessage<ImmunizationOriginCodesCode> | undefined): boolean {
    return proto3.util.equals(ImmunizationOriginCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ImmunizationOriginCodesCode.Value
 */
export enum ImmunizationOriginCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROVIDER = 1;
   */
  PROVIDER = 1,

  /**
   * @generated from enum value: RECORD = 2;
   */
  RECORD = 2,

  /**
   * @generated from enum value: RECALL = 3;
   */
  RECALL = 3,

  /**
   * @generated from enum value: SCHOOL = 4;
   */
  SCHOOL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ImmunizationOriginCodesCode_Value)
proto3.util.setEnumType(ImmunizationOriginCodesCode_Value, "google.fhir.stu3.proto.ImmunizationOriginCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROVIDER" },
  { no: 2, name: "RECORD" },
  { no: 3, name: "RECALL" },
  { no: 4, name: "SCHOOL" },
]);

/**
 * The value set to instantiate this attribute should be drawn from a
 * terminologically robust code system that consists of or contains concepts
 * to support the definition of dates relevant to recommendations for future
 * doses of vaccines. This value set is provided as a suggestive example. See
 * http://hl7.org/fhir/ValueSet/immunization-recommendation-date-criterion
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode
 */
export class ImmunizationRecommendationDateCriterionCodesCode extends Message<ImmunizationRecommendationDateCriterionCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.Value value = 1;
   */
  value = ImmunizationRecommendationDateCriterionCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ImmunizationRecommendationDateCriterionCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationRecommendationDateCriterionCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendationDateCriterionCodesCode {
    return new ImmunizationRecommendationDateCriterionCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendationDateCriterionCodesCode {
    return new ImmunizationRecommendationDateCriterionCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendationDateCriterionCodesCode {
    return new ImmunizationRecommendationDateCriterionCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendationDateCriterionCodesCode | PlainMessage<ImmunizationRecommendationDateCriterionCodesCode> | undefined, b: ImmunizationRecommendationDateCriterionCodesCode | PlainMessage<ImmunizationRecommendationDateCriterionCodesCode> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendationDateCriterionCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.Value
 */
export enum ImmunizationRecommendationDateCriterionCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DUE = 1;
   */
  DUE = 1,

  /**
   * @generated from enum value: RECOMMENDED = 2;
   */
  RECOMMENDED = 2,

  /**
   * @generated from enum value: EARLIEST = 3;
   */
  EARLIEST = 3,

  /**
   * @generated from enum value: OVERDUE = 4;
   */
  OVERDUE = 4,

  /**
   * @generated from enum value: LATEST = 5;
   */
  LATEST = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ImmunizationRecommendationDateCriterionCodesCode_Value)
proto3.util.setEnumType(ImmunizationRecommendationDateCriterionCodesCode_Value, "google.fhir.stu3.proto.ImmunizationRecommendationDateCriterionCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DUE" },
  { no: 2, name: "RECOMMENDED" },
  { no: 3, name: "EARLIEST" },
  { no: 4, name: "OVERDUE" },
  { no: 5, name: "LATEST" },
]);

/**
 * The value set to instantiate this attribute should be drawn from a
 * terminologically robust code system that consists of or contains concepts
 * to support describing the status of the patient towards perceived immunity
 * against a vaccine preventable disease. This value set is provided as a
 * suggestive example. See
 * http://hl7.org/fhir/ValueSet/immunization-recommendation-status
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode
 */
export class ImmunizationRecommendationStatusCodesCode extends Message<ImmunizationRecommendationStatusCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.Value value = 1;
   */
  value = ImmunizationRecommendationStatusCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ImmunizationRecommendationStatusCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationRecommendationStatusCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendationStatusCodesCode {
    return new ImmunizationRecommendationStatusCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendationStatusCodesCode {
    return new ImmunizationRecommendationStatusCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendationStatusCodesCode {
    return new ImmunizationRecommendationStatusCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendationStatusCodesCode | PlainMessage<ImmunizationRecommendationStatusCodesCode> | undefined, b: ImmunizationRecommendationStatusCodesCode | PlainMessage<ImmunizationRecommendationStatusCodesCode> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendationStatusCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.Value
 */
export enum ImmunizationRecommendationStatusCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DUE = 1;
   */
  DUE = 1,

  /**
   * @generated from enum value: OVERDUE = 2;
   */
  OVERDUE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ImmunizationRecommendationStatusCodesCode_Value)
proto3.util.setEnumType(ImmunizationRecommendationStatusCodesCode_Value, "google.fhir.stu3.proto.ImmunizationRecommendationStatusCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DUE" },
  { no: 2, name: "OVERDUE" },
]);

/**
 * The value set to instantiate this attribute should be drawn from a
 * terminologically robust code system that consists of or contains concepts
 * to support describing the current status of the administered dose of
 * vaccine. See http://hl7.org/fhir/ValueSet/immunization-status
 *
 * @generated from message google.fhir.stu3.proto.ImmunizationStatusCodesCode
 */
export class ImmunizationStatusCodesCode extends Message<ImmunizationStatusCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ImmunizationStatusCodesCode.Value value = 1;
   */
  value = ImmunizationStatusCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ImmunizationStatusCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImmunizationStatusCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationStatusCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationStatusCodesCode {
    return new ImmunizationStatusCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationStatusCodesCode {
    return new ImmunizationStatusCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationStatusCodesCode {
    return new ImmunizationStatusCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationStatusCodesCode | PlainMessage<ImmunizationStatusCodesCode> | undefined, b: ImmunizationStatusCodesCode | PlainMessage<ImmunizationStatusCodesCode> | undefined): boolean {
    return proto3.util.equals(ImmunizationStatusCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ImmunizationStatusCodesCode.Value
 */
export enum ImmunizationStatusCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPLETED = 1;
   */
  COMPLETED = 1,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 2;
   */
  ENTERED_IN_ERROR = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ImmunizationStatusCodesCode_Value)
proto3.util.setEnumType(ImmunizationStatusCodesCode_Value, "google.fhir.stu3.proto.ImmunizationStatusCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPLETED" },
  { no: 2, name: "ENTERED_IN_ERROR" },
]);

/**
 * A set codes that define the functional status of an implanted device.
 * See http://hl7.org/fhir/ValueSet/implant-status
 *
 * @generated from message google.fhir.stu3.proto.ImplantStatusCode
 */
export class ImplantStatusCode extends Message<ImplantStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ImplantStatusCode.Value value = 1;
   */
  value = ImplantStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ImplantStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ImplantStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImplantStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplantStatusCode {
    return new ImplantStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplantStatusCode {
    return new ImplantStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplantStatusCode {
    return new ImplantStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImplantStatusCode | PlainMessage<ImplantStatusCode> | undefined, b: ImplantStatusCode | PlainMessage<ImplantStatusCode> | undefined): boolean {
    return proto3.util.equals(ImplantStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ImplantStatusCode.Value
 */
export enum ImplantStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FUNCTIONAL = 1;
   */
  FUNCTIONAL = 1,

  /**
   * @generated from enum value: NON_FUNCTIONAL = 2;
   */
  NON_FUNCTIONAL = 2,

  /**
   * @generated from enum value: DISABLED = 3;
   */
  DISABLED = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ImplantStatusCode_Value)
proto3.util.setEnumType(ImplantStatusCode_Value, "google.fhir.stu3.proto.ImplantStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FUNCTIONAL" },
  { no: 2, name: "NON_FUNCTIONAL" },
  { no: 3, name: "DISABLED" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Availability of the resource
 * See http://hl7.org/fhir/ValueSet/instance-availability
 *
 * @generated from message google.fhir.stu3.proto.InstanceAvailabilityCode
 */
export class InstanceAvailabilityCode extends Message<InstanceAvailabilityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.InstanceAvailabilityCode.Value value = 1;
   */
  value = InstanceAvailabilityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<InstanceAvailabilityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.InstanceAvailabilityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(InstanceAvailabilityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstanceAvailabilityCode {
    return new InstanceAvailabilityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstanceAvailabilityCode {
    return new InstanceAvailabilityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstanceAvailabilityCode {
    return new InstanceAvailabilityCode().fromJsonString(jsonString, options);
  }

  static equals(a: InstanceAvailabilityCode | PlainMessage<InstanceAvailabilityCode> | undefined, b: InstanceAvailabilityCode | PlainMessage<InstanceAvailabilityCode> | undefined): boolean {
    return proto3.util.equals(InstanceAvailabilityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.InstanceAvailabilityCode.Value
 */
export enum InstanceAvailabilityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ONLINE = 1;
   */
  ONLINE = 1,

  /**
   * @generated from enum value: OFFLINE = 2;
   */
  OFFLINE = 2,

  /**
   * @generated from enum value: NEARLINE = 3;
   */
  NEARLINE = 3,

  /**
   * @generated from enum value: UNAVAILABLE = 4;
   */
  UNAVAILABLE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(InstanceAvailabilityCode_Value)
proto3.util.setEnumType(InstanceAvailabilityCode_Value, "google.fhir.stu3.proto.InstanceAvailabilityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ONLINE" },
  { no: 2, name: "OFFLINE" },
  { no: 3, name: "NEARLINE" },
  { no: 4, name: "UNAVAILABLE" },
]);

/**
 * How the issue affects the success of the action.
 * See http://hl7.org/fhir/ValueSet/issue-severity
 *
 * @generated from message google.fhir.stu3.proto.IssueSeverityCode
 */
export class IssueSeverityCode extends Message<IssueSeverityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.IssueSeverityCode.Value value = 1;
   */
  value = IssueSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<IssueSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.IssueSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(IssueSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IssueSeverityCode {
    return new IssueSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IssueSeverityCode {
    return new IssueSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IssueSeverityCode {
    return new IssueSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: IssueSeverityCode | PlainMessage<IssueSeverityCode> | undefined, b: IssueSeverityCode | PlainMessage<IssueSeverityCode> | undefined): boolean {
    return proto3.util.equals(IssueSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.IssueSeverityCode.Value
 */
export enum IssueSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FATAL = 1;
   */
  FATAL = 1,

  /**
   * @generated from enum value: ERROR = 2;
   */
  ERROR = 2,

  /**
   * @generated from enum value: WARNING = 3;
   */
  WARNING = 3,

  /**
   * @generated from enum value: INFORMATION = 4;
   */
  INFORMATION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(IssueSeverityCode_Value)
proto3.util.setEnumType(IssueSeverityCode_Value, "google.fhir.stu3.proto.IssueSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FATAL" },
  { no: 2, name: "ERROR" },
  { no: 3, name: "WARNING" },
  { no: 4, name: "INFORMATION" },
]);

/**
 * A code that describes the type of issue.
 * See http://hl7.org/fhir/ValueSet/issue-type
 *
 * @generated from message google.fhir.stu3.proto.IssueTypeCode
 */
export class IssueTypeCode extends Message<IssueTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.IssueTypeCode.Value value = 1;
   */
  value = IssueTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<IssueTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.IssueTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(IssueTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IssueTypeCode {
    return new IssueTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IssueTypeCode {
    return new IssueTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IssueTypeCode {
    return new IssueTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: IssueTypeCode | PlainMessage<IssueTypeCode> | undefined, b: IssueTypeCode | PlainMessage<IssueTypeCode> | undefined): boolean {
    return proto3.util.equals(IssueTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.IssueTypeCode.Value
 */
export enum IssueTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INVALID = 1;
   */
  INVALID = 1,

  /**
   * @generated from enum value: STRUCTURE = 2;
   */
  STRUCTURE = 2,

  /**
   * @generated from enum value: REQUIRED = 3;
   */
  REQUIRED = 3,

  /**
   * @generated from enum value: VALUE = 4;
   */
  VALUE = 4,

  /**
   * @generated from enum value: INVARIANT = 5;
   */
  INVARIANT = 5,

  /**
   * @generated from enum value: SECURITY = 6;
   */
  SECURITY = 6,

  /**
   * @generated from enum value: LOGIN = 7;
   */
  LOGIN = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,

  /**
   * @generated from enum value: EXPIRED = 9;
   */
  EXPIRED = 9,

  /**
   * @generated from enum value: FORBIDDEN = 10;
   */
  FORBIDDEN = 10,

  /**
   * @generated from enum value: SUPPRESSED = 11;
   */
  SUPPRESSED = 11,

  /**
   * @generated from enum value: PROCESSING = 12;
   */
  PROCESSING = 12,

  /**
   * @generated from enum value: NOT_SUPPORTED = 13;
   */
  NOT_SUPPORTED = 13,

  /**
   * @generated from enum value: DUPLICATE = 14;
   */
  DUPLICATE = 14,

  /**
   * @generated from enum value: NOT_FOUND = 15;
   */
  NOT_FOUND = 15,

  /**
   * @generated from enum value: TOO_LONG = 16;
   */
  TOO_LONG = 16,

  /**
   * @generated from enum value: CODE_INVALID = 17;
   */
  CODE_INVALID = 17,

  /**
   * @generated from enum value: EXTENSION = 18;
   */
  EXTENSION = 18,

  /**
   * @generated from enum value: TOO_COSTLY = 19;
   */
  TOO_COSTLY = 19,

  /**
   * @generated from enum value: BUSINESS_RULE = 20;
   */
  BUSINESS_RULE = 20,

  /**
   * @generated from enum value: CONFLICT = 21;
   */
  CONFLICT = 21,

  /**
   * @generated from enum value: INCOMPLETE = 22;
   */
  INCOMPLETE = 22,

  /**
   * @generated from enum value: TRANSIENT = 23;
   */
  TRANSIENT = 23,

  /**
   * @generated from enum value: LOCK_ERROR = 24;
   */
  LOCK_ERROR = 24,

  /**
   * @generated from enum value: NO_STORE = 25;
   */
  NO_STORE = 25,

  /**
   * @generated from enum value: EXCEPTION = 26;
   */
  EXCEPTION = 26,

  /**
   * @generated from enum value: TIMEOUT = 27;
   */
  TIMEOUT = 27,

  /**
   * @generated from enum value: THROTTLED = 28;
   */
  THROTTLED = 28,

  /**
   * @generated from enum value: INFORMATIONAL = 29;
   */
  INFORMATIONAL = 29,
}
// Retrieve enum metadata with: proto3.getEnumType(IssueTypeCode_Value)
proto3.util.setEnumType(IssueTypeCode_Value, "google.fhir.stu3.proto.IssueTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INVALID" },
  { no: 2, name: "STRUCTURE" },
  { no: 3, name: "REQUIRED" },
  { no: 4, name: "VALUE" },
  { no: 5, name: "INVARIANT" },
  { no: 6, name: "SECURITY" },
  { no: 7, name: "LOGIN" },
  { no: 8, name: "UNKNOWN" },
  { no: 9, name: "EXPIRED" },
  { no: 10, name: "FORBIDDEN" },
  { no: 11, name: "SUPPRESSED" },
  { no: 12, name: "PROCESSING" },
  { no: 13, name: "NOT_SUPPORTED" },
  { no: 14, name: "DUPLICATE" },
  { no: 15, name: "NOT_FOUND" },
  { no: 16, name: "TOO_LONG" },
  { no: 17, name: "CODE_INVALID" },
  { no: 18, name: "EXTENSION" },
  { no: 19, name: "TOO_COSTLY" },
  { no: 20, name: "BUSINESS_RULE" },
  { no: 21, name: "CONFLICT" },
  { no: 22, name: "INCOMPLETE" },
  { no: 23, name: "TRANSIENT" },
  { no: 24, name: "LOCK_ERROR" },
  { no: 25, name: "NO_STORE" },
  { no: 26, name: "EXCEPTION" },
  { no: 27, name: "TIMEOUT" },
  { no: 28, name: "THROTTLED" },
  { no: 29, name: "INFORMATIONAL" },
]);

/**
 * Distinguishes groups from questions and display text and indicates data
 * type for questions See http://hl7.org/fhir/ValueSet/item-type
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireItemTypeCode
 */
export class QuestionnaireItemTypeCode extends Message<QuestionnaireItemTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.QuestionnaireItemTypeCode.Value value = 1;
   */
  value = QuestionnaireItemTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireItemTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireItemTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireItemTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemTypeCode {
    return new QuestionnaireItemTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemTypeCode {
    return new QuestionnaireItemTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemTypeCode {
    return new QuestionnaireItemTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemTypeCode | PlainMessage<QuestionnaireItemTypeCode> | undefined, b: QuestionnaireItemTypeCode | PlainMessage<QuestionnaireItemTypeCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.QuestionnaireItemTypeCode.Value
 */
export enum QuestionnaireItemTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GROUP = 1;
   */
  GROUP = 1,

  /**
   * @generated from enum value: DISPLAY = 2;
   */
  DISPLAY = 2,

  /**
   * @generated from enum value: QUESTION = 3;
   */
  QUESTION = 3,

  /**
   * @generated from enum value: BOOLEAN = 4;
   */
  BOOLEAN = 4,

  /**
   * @generated from enum value: DECIMAL = 5;
   */
  DECIMAL = 5,

  /**
   * @generated from enum value: INTEGER = 6;
   */
  INTEGER = 6,

  /**
   * @generated from enum value: DATE = 7;
   */
  DATE = 7,

  /**
   * @generated from enum value: DATE_TIME = 8;
   */
  DATE_TIME = 8,

  /**
   * @generated from enum value: TIME = 9;
   */
  TIME = 9,

  /**
   * @generated from enum value: STRING = 10;
   */
  STRING = 10,

  /**
   * @generated from enum value: TEXT = 11;
   */
  TEXT = 11,

  /**
   * @generated from enum value: URL = 12;
   */
  URL = 12,

  /**
   * @generated from enum value: CHOICE = 13;
   */
  CHOICE = 13,

  /**
   * @generated from enum value: OPEN_CHOICE = 14;
   */
  OPEN_CHOICE = 14,

  /**
   * @generated from enum value: ATTACHMENT = 15;
   */
  ATTACHMENT = 15,

  /**
   * @generated from enum value: REFERENCE = 16;
   */
  REFERENCE = 16,

  /**
   * @generated from enum value: QUANTITY = 17;
   */
  QUANTITY = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireItemTypeCode_Value)
proto3.util.setEnumType(QuestionnaireItemTypeCode_Value, "google.fhir.stu3.proto.QuestionnaireItemTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GROUP" },
  { no: 2, name: "DISPLAY" },
  { no: 3, name: "QUESTION" },
  { no: 4, name: "BOOLEAN" },
  { no: 5, name: "DECIMAL" },
  { no: 6, name: "INTEGER" },
  { no: 7, name: "DATE" },
  { no: 8, name: "DATE_TIME" },
  { no: 9, name: "TIME" },
  { no: 10, name: "STRING" },
  { no: 11, name: "TEXT" },
  { no: 12, name: "URL" },
  { no: 13, name: "CHOICE" },
  { no: 14, name: "OPEN_CHOICE" },
  { no: 15, name: "ATTACHMENT" },
  { no: 16, name: "REFERENCE" },
  { no: 17, name: "QUANTITY" },
]);

/**
 * The type of knowledge asset this library contains
 * See http://hl7.org/fhir/ValueSet/library-type
 *
 * @generated from message google.fhir.stu3.proto.LibraryTypeCode
 */
export class LibraryTypeCode extends Message<LibraryTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.LibraryTypeCode.Value value = 1;
   */
  value = LibraryTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<LibraryTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LibraryTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LibraryTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LibraryTypeCode {
    return new LibraryTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LibraryTypeCode {
    return new LibraryTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LibraryTypeCode {
    return new LibraryTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LibraryTypeCode | PlainMessage<LibraryTypeCode> | undefined, b: LibraryTypeCode | PlainMessage<LibraryTypeCode> | undefined): boolean {
    return proto3.util.equals(LibraryTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.LibraryTypeCode.Value
 */
export enum LibraryTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LOGIC_LIBRARY = 1;
   */
  LOGIC_LIBRARY = 1,

  /**
   * @generated from enum value: MODEL_DEFINITION = 2;
   */
  MODEL_DEFINITION = 2,

  /**
   * @generated from enum value: ASSET_COLLECTION = 3;
   */
  ASSET_COLLECTION = 3,

  /**
   * @generated from enum value: MODULE_DEFINITION = 4;
   */
  MODULE_DEFINITION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(LibraryTypeCode_Value)
proto3.util.setEnumType(LibraryTypeCode_Value, "google.fhir.stu3.proto.LibraryTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LOGIC_LIBRARY" },
  { no: 2, name: "MODEL_DEFINITION" },
  { no: 3, name: "ASSET_COLLECTION" },
  { no: 4, name: "MODULE_DEFINITION" },
]);

/**
 * Used to distinguish different roles a resource can play within a set of
 * linked resources See http://hl7.org/fhir/ValueSet/linkage-type
 *
 * @generated from message google.fhir.stu3.proto.LinkageTypeCode
 */
export class LinkageTypeCode extends Message<LinkageTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.LinkageTypeCode.Value value = 1;
   */
  value = LinkageTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<LinkageTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LinkageTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LinkageTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinkageTypeCode {
    return new LinkageTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinkageTypeCode {
    return new LinkageTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinkageTypeCode {
    return new LinkageTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LinkageTypeCode | PlainMessage<LinkageTypeCode> | undefined, b: LinkageTypeCode | PlainMessage<LinkageTypeCode> | undefined): boolean {
    return proto3.util.equals(LinkageTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.LinkageTypeCode.Value
 */
export enum LinkageTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOURCE = 1;
   */
  SOURCE = 1,

  /**
   * @generated from enum value: ALTERNATE = 2;
   */
  ALTERNATE = 2,

  /**
   * @generated from enum value: HISTORICAL = 3;
   */
  HISTORICAL = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LinkageTypeCode_Value)
proto3.util.setEnumType(LinkageTypeCode_Value, "google.fhir.stu3.proto.LinkageTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOURCE" },
  { no: 2, name: "ALTERNATE" },
  { no: 3, name: "HISTORICAL" },
]);

/**
 * The type of link between this patient resource and another patient
 * resource. See http://hl7.org/fhir/ValueSet/link-type
 *
 * @generated from message google.fhir.stu3.proto.LinkTypeCode
 */
export class LinkTypeCode extends Message<LinkTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.LinkTypeCode.Value value = 1;
   */
  value = LinkTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<LinkTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LinkTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LinkTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinkTypeCode {
    return new LinkTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinkTypeCode {
    return new LinkTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinkTypeCode {
    return new LinkTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LinkTypeCode | PlainMessage<LinkTypeCode> | undefined, b: LinkTypeCode | PlainMessage<LinkTypeCode> | undefined): boolean {
    return proto3.util.equals(LinkTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.LinkTypeCode.Value
 */
export enum LinkTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REPLACED_BY = 1;
   */
  REPLACED_BY = 1,

  /**
   * @generated from enum value: REPLACES = 2;
   */
  REPLACES = 2,

  /**
   * @generated from enum value: REFER = 3;
   */
  REFER = 3,

  /**
   * @generated from enum value: SEEALSO = 4;
   */
  SEEALSO = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(LinkTypeCode_Value)
proto3.util.setEnumType(LinkTypeCode_Value, "google.fhir.stu3.proto.LinkTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REPLACED_BY" },
  { no: 2, name: "REPLACES" },
  { no: 3, name: "REFER" },
  { no: 4, name: "SEEALSO" },
]);

/**
 * General reasons for a list to be empty. Reasons are either related to a
 * summary list (i.e. problem or medication list) or to a workflow related
 * list (i.e. consultation list). See
 * http://hl7.org/fhir/ValueSet/list-empty-reason
 *
 * @generated from message google.fhir.stu3.proto.ListEmptyReasonsCode
 */
export class ListEmptyReasonsCode extends Message<ListEmptyReasonsCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ListEmptyReasonsCode.Value value = 1;
   */
  value = ListEmptyReasonsCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ListEmptyReasonsCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ListEmptyReasonsCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ListEmptyReasonsCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEmptyReasonsCode {
    return new ListEmptyReasonsCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEmptyReasonsCode {
    return new ListEmptyReasonsCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEmptyReasonsCode {
    return new ListEmptyReasonsCode().fromJsonString(jsonString, options);
  }

  static equals(a: ListEmptyReasonsCode | PlainMessage<ListEmptyReasonsCode> | undefined, b: ListEmptyReasonsCode | PlainMessage<ListEmptyReasonsCode> | undefined): boolean {
    return proto3.util.equals(ListEmptyReasonsCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ListEmptyReasonsCode.Value
 */
export enum ListEmptyReasonsCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NILKNOWN = 1;
   */
  NILKNOWN = 1,

  /**
   * @generated from enum value: NOTASKED = 2;
   */
  NOTASKED = 2,

  /**
   * @generated from enum value: WITHHELD = 3;
   */
  WITHHELD = 3,

  /**
   * @generated from enum value: UNAVAILABLE = 4;
   */
  UNAVAILABLE = 4,

  /**
   * @generated from enum value: NOTSTARTED = 5;
   */
  NOTSTARTED = 5,

  /**
   * @generated from enum value: CLOSED = 6;
   */
  CLOSED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ListEmptyReasonsCode_Value)
proto3.util.setEnumType(ListEmptyReasonsCode_Value, "google.fhir.stu3.proto.ListEmptyReasonsCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NILKNOWN" },
  { no: 2, name: "NOTASKED" },
  { no: 3, name: "WITHHELD" },
  { no: 4, name: "UNAVAILABLE" },
  { no: 5, name: "NOTSTARTED" },
  { no: 6, name: "CLOSED" },
]);

/**
 * Example use codes for the List resource - typical kinds of use.
 * See http://hl7.org/fhir/ValueSet/list-example-codes
 *
 * @generated from message google.fhir.stu3.proto.ExampleUseCodesforListCode
 */
export class ExampleUseCodesforListCode extends Message<ExampleUseCodesforListCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ExampleUseCodesforListCode.Value value = 1;
   */
  value = ExampleUseCodesforListCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExampleUseCodesforListCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExampleUseCodesforListCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExampleUseCodesforListCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExampleUseCodesforListCode {
    return new ExampleUseCodesforListCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExampleUseCodesforListCode {
    return new ExampleUseCodesforListCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExampleUseCodesforListCode {
    return new ExampleUseCodesforListCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExampleUseCodesforListCode | PlainMessage<ExampleUseCodesforListCode> | undefined, b: ExampleUseCodesforListCode | PlainMessage<ExampleUseCodesforListCode> | undefined): boolean {
    return proto3.util.equals(ExampleUseCodesforListCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ExampleUseCodesforListCode.Value
 */
export enum ExampleUseCodesforListCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALERTS = 1;
   */
  ALERTS = 1,

  /**
   * @generated from enum value: ADVERSERXNS = 2;
   */
  ADVERSERXNS = 2,

  /**
   * @generated from enum value: ALLERGIES = 3;
   */
  ALLERGIES = 3,

  /**
   * @generated from enum value: MEDICATIONS = 4;
   */
  MEDICATIONS = 4,

  /**
   * @generated from enum value: PROBLEMS = 5;
   */
  PROBLEMS = 5,

  /**
   * @generated from enum value: WORKLIST = 6;
   */
  WORKLIST = 6,

  /**
   * @generated from enum value: WAITING = 7;
   */
  WAITING = 7,

  /**
   * @generated from enum value: PROTOCOLS = 8;
   */
  PROTOCOLS = 8,

  /**
   * @generated from enum value: PLANS = 9;
   */
  PLANS = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(ExampleUseCodesforListCode_Value)
proto3.util.setEnumType(ExampleUseCodesforListCode_Value, "google.fhir.stu3.proto.ExampleUseCodesforListCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALERTS" },
  { no: 2, name: "ADVERSERXNS" },
  { no: 3, name: "ALLERGIES" },
  { no: 4, name: "MEDICATIONS" },
  { no: 5, name: "PROBLEMS" },
  { no: 6, name: "WORKLIST" },
  { no: 7, name: "WAITING" },
  { no: 8, name: "PROTOCOLS" },
  { no: 9, name: "PLANS" },
]);

/**
 * The processing mode that applies to this list
 * See http://hl7.org/fhir/ValueSet/list-mode
 *
 * @generated from message google.fhir.stu3.proto.ListModeCode
 */
export class ListModeCode extends Message<ListModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ListModeCode.Value value = 1;
   */
  value = ListModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ListModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListModeCode {
    return new ListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListModeCode {
    return new ListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListModeCode {
    return new ListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ListModeCode | PlainMessage<ListModeCode> | undefined, b: ListModeCode | PlainMessage<ListModeCode> | undefined): boolean {
    return proto3.util.equals(ListModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ListModeCode.Value
 */
export enum ListModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: WORKING = 1;
   */
  WORKING = 1,

  /**
   * @generated from enum value: SNAPSHOT = 2;
   */
  SNAPSHOT = 2,

  /**
   * @generated from enum value: CHANGES = 3;
   */
  CHANGES = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListModeCode_Value)
proto3.util.setEnumType(ListModeCode_Value, "google.fhir.stu3.proto.ListModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "WORKING" },
  { no: 2, name: "SNAPSHOT" },
  { no: 3, name: "CHANGES" },
]);

/**
 * Base values for the order of the items in a list resource.
 * See http://hl7.org/fhir/ValueSet/list-order
 *
 * @generated from message google.fhir.stu3.proto.ListOrderCodesCode
 */
export class ListOrderCodesCode extends Message<ListOrderCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ListOrderCodesCode.Value value = 1;
   */
  value = ListOrderCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ListOrderCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ListOrderCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ListOrderCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrderCodesCode {
    return new ListOrderCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrderCodesCode {
    return new ListOrderCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrderCodesCode {
    return new ListOrderCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrderCodesCode | PlainMessage<ListOrderCodesCode> | undefined, b: ListOrderCodesCode | PlainMessage<ListOrderCodesCode> | undefined): boolean {
    return proto3.util.equals(ListOrderCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ListOrderCodesCode.Value
 */
export enum ListOrderCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: USER = 1;
   */
  USER = 1,

  /**
   * @generated from enum value: SYSTEM = 2;
   */
  SYSTEM = 2,

  /**
   * @generated from enum value: EVENT_DATE = 3;
   */
  EVENT_DATE = 3,

  /**
   * @generated from enum value: ENTRY_DATE = 4;
   */
  ENTRY_DATE = 4,

  /**
   * @generated from enum value: PRIORITY = 5;
   */
  PRIORITY = 5,

  /**
   * @generated from enum value: ALPHABETIC = 6;
   */
  ALPHABETIC = 6,

  /**
   * @generated from enum value: CATEGORY = 7;
   */
  CATEGORY = 7,

  /**
   * @generated from enum value: PATIENT = 8;
   */
  PATIENT = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(ListOrderCodesCode_Value)
proto3.util.setEnumType(ListOrderCodesCode_Value, "google.fhir.stu3.proto.ListOrderCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "USER" },
  { no: 2, name: "SYSTEM" },
  { no: 3, name: "EVENT_DATE" },
  { no: 4, name: "ENTRY_DATE" },
  { no: 5, name: "PRIORITY" },
  { no: 6, name: "ALPHABETIC" },
  { no: 7, name: "CATEGORY" },
  { no: 8, name: "PATIENT" },
]);

/**
 * The current state of the list
 * See http://hl7.org/fhir/ValueSet/list-status
 *
 * @generated from message google.fhir.stu3.proto.ListStatusCode
 */
export class ListStatusCode extends Message<ListStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ListStatusCode.Value value = 1;
   */
  value = ListStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ListStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ListStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ListStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStatusCode {
    return new ListStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStatusCode {
    return new ListStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStatusCode {
    return new ListStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ListStatusCode | PlainMessage<ListStatusCode> | undefined, b: ListStatusCode | PlainMessage<ListStatusCode> | undefined): boolean {
    return proto3.util.equals(ListStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ListStatusCode.Value
 */
export enum ListStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CURRENT = 1;
   */
  CURRENT = 1,

  /**
   * @generated from enum value: RETIRED = 2;
   */
  RETIRED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListStatusCode_Value)
proto3.util.setEnumType(ListStatusCode_Value, "google.fhir.stu3.proto.ListStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CURRENT" },
  { no: 2, name: "RETIRED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * Indicates whether a resource instance represents a specific location or a
 * class of locations. See http://hl7.org/fhir/ValueSet/location-mode
 *
 * @generated from message google.fhir.stu3.proto.LocationModeCode
 */
export class LocationModeCode extends Message<LocationModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.LocationModeCode.Value value = 1;
   */
  value = LocationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<LocationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LocationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationModeCode {
    return new LocationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationModeCode {
    return new LocationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationModeCode {
    return new LocationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LocationModeCode | PlainMessage<LocationModeCode> | undefined, b: LocationModeCode | PlainMessage<LocationModeCode> | undefined): boolean {
    return proto3.util.equals(LocationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.LocationModeCode.Value
 */
export enum LocationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: KIND = 2;
   */
  KIND = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(LocationModeCode_Value)
proto3.util.setEnumType(LocationModeCode_Value, "google.fhir.stu3.proto.LocationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTANCE" },
  { no: 2, name: "KIND" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * the physical form of the Location. See
 * http://hl7.org/fhir/ValueSet/location-physical-type
 *
 * @generated from message google.fhir.stu3.proto.LocationTypeCode
 */
export class LocationTypeCode extends Message<LocationTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.LocationTypeCode.Value value = 1;
   */
  value = LocationTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<LocationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LocationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationTypeCode {
    return new LocationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationTypeCode {
    return new LocationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationTypeCode {
    return new LocationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LocationTypeCode | PlainMessage<LocationTypeCode> | undefined, b: LocationTypeCode | PlainMessage<LocationTypeCode> | undefined): boolean {
    return proto3.util.equals(LocationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.LocationTypeCode.Value
 */
export enum LocationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SI = 1;
   */
  SI = 1,

  /**
   * @generated from enum value: BU = 2;
   */
  BU = 2,

  /**
   * @generated from enum value: WI = 3;
   */
  WI = 3,

  /**
   * @generated from enum value: WA = 4;
   */
  WA = 4,

  /**
   * @generated from enum value: LVL = 5;
   */
  LVL = 5,

  /**
   * @generated from enum value: CO = 6;
   */
  CO = 6,

  /**
   * @generated from enum value: RO = 7;
   */
  RO = 7,

  /**
   * @generated from enum value: BD = 8;
   */
  BD = 8,

  /**
   * @generated from enum value: VE = 9;
   */
  VE = 9,

  /**
   * @generated from enum value: HO = 10;
   */
  HO = 10,

  /**
   * @generated from enum value: CA = 11;
   */
  CA = 11,

  /**
   * @generated from enum value: RD = 12;
   */
  RD = 12,

  /**
   * @generated from enum value: AREA = 13;
   */
  AREA = 13,

  /**
   * @generated from enum value: JDN = 14;
   */
  JDN = 14,
}
// Retrieve enum metadata with: proto3.getEnumType(LocationTypeCode_Value)
proto3.util.setEnumType(LocationTypeCode_Value, "google.fhir.stu3.proto.LocationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SI" },
  { no: 2, name: "BU" },
  { no: 3, name: "WI" },
  { no: 4, name: "WA" },
  { no: 5, name: "LVL" },
  { no: 6, name: "CO" },
  { no: 7, name: "RO" },
  { no: 8, name: "BD" },
  { no: 9, name: "VE" },
  { no: 10, name: "HO" },
  { no: 11, name: "CA" },
  { no: 12, name: "RD" },
  { no: 13, name: "AREA" },
  { no: 14, name: "JDN" },
]);

/**
 * Indicates whether the location is still in use.
 * See http://hl7.org/fhir/ValueSet/location-status
 *
 * @generated from message google.fhir.stu3.proto.LocationStatusCode
 */
export class LocationStatusCode extends Message<LocationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.LocationStatusCode.Value value = 1;
   */
  value = LocationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<LocationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LocationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationStatusCode {
    return new LocationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationStatusCode {
    return new LocationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationStatusCode {
    return new LocationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: LocationStatusCode | PlainMessage<LocationStatusCode> | undefined, b: LocationStatusCode | PlainMessage<LocationStatusCode> | undefined): boolean {
    return proto3.util.equals(LocationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.LocationStatusCode.Value
 */
export enum LocationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * @generated from enum value: INACTIVE = 3;
   */
  INACTIVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LocationStatusCode_Value)
proto3.util.setEnumType(LocationStatusCode_Value, "google.fhir.stu3.proto.LocationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "SUSPENDED" },
  { no: 3, name: "INACTIVE" },
]);

/**
 * Codes specifying the type of probability distribution.
 * See http://hl7.org/fhir/ValueSet/probability-distribution-type
 *
 * @generated from message google.fhir.stu3.proto.ProbabilityDistributionTypeCode
 */
export class ProbabilityDistributionTypeCode extends Message<ProbabilityDistributionTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ProbabilityDistributionTypeCode.Value value = 1;
   */
  value = ProbabilityDistributionTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ProbabilityDistributionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProbabilityDistributionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ProbabilityDistributionTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProbabilityDistributionTypeCode {
    return new ProbabilityDistributionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProbabilityDistributionTypeCode {
    return new ProbabilityDistributionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProbabilityDistributionTypeCode {
    return new ProbabilityDistributionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ProbabilityDistributionTypeCode | PlainMessage<ProbabilityDistributionTypeCode> | undefined, b: ProbabilityDistributionTypeCode | PlainMessage<ProbabilityDistributionTypeCode> | undefined): boolean {
    return proto3.util.equals(ProbabilityDistributionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ProbabilityDistributionTypeCode.Value
 */
export enum ProbabilityDistributionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: B = 1;
   */
  B = 1,

  /**
   * @generated from enum value: E = 2;
   */
  E = 2,

  /**
   * @generated from enum value: F = 3;
   */
  F = 3,

  /**
   * @generated from enum value: G = 4;
   */
  G = 4,

  /**
   * @generated from enum value: LN = 5;
   */
  LN = 5,

  /**
   * @generated from enum value: N = 6;
   */
  N = 6,

  /**
   * @generated from enum value: T = 7;
   */
  T = 7,

  /**
   * @generated from enum value: U = 8;
   */
  U = 8,

  /**
   * @generated from enum value: X2 = 9;
   */
  X2 = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(ProbabilityDistributionTypeCode_Value)
proto3.util.setEnumType(ProbabilityDistributionTypeCode_Value, "google.fhir.stu3.proto.ProbabilityDistributionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "B" },
  { no: 2, name: "E" },
  { no: 3, name: "F" },
  { no: 4, name: "G" },
  { no: 5, name: "LN" },
  { no: 6, name: "N" },
  { no: 7, name: "T" },
  { no: 8, name: "U" },
  { no: 9, name: "X2" },
]);

/**
 * How to interpret the context
 * See http://hl7.org/fhir/ValueSet/map-context-type
 *
 * @generated from message google.fhir.stu3.proto.StructureMapContextTypeCode
 */
export class StructureMapContextTypeCode extends Message<StructureMapContextTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapContextTypeCode.Value value = 1;
   */
  value = StructureMapContextTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapContextTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapContextTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapContextTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapContextTypeCode {
    return new StructureMapContextTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapContextTypeCode {
    return new StructureMapContextTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapContextTypeCode {
    return new StructureMapContextTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapContextTypeCode | PlainMessage<StructureMapContextTypeCode> | undefined, b: StructureMapContextTypeCode | PlainMessage<StructureMapContextTypeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapContextTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapContextTypeCode.Value
 */
export enum StructureMapContextTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TYPE = 1;
   */
  TYPE = 1,

  /**
   * @generated from enum value: VARIABLE = 2;
   */
  VARIABLE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapContextTypeCode_Value)
proto3.util.setEnumType(StructureMapContextTypeCode_Value, "google.fhir.stu3.proto.StructureMapContextTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TYPE" },
  { no: 2, name: "VARIABLE" },
]);

/**
 * If this is the default rule set to apply for the source type, or this
 * combination of types See http://hl7.org/fhir/ValueSet/map-group-type-mode
 *
 * @generated from message google.fhir.stu3.proto.StructureMapGroupTypeModeCode
 */
export class StructureMapGroupTypeModeCode extends Message<StructureMapGroupTypeModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapGroupTypeModeCode.Value value = 1;
   */
  value = StructureMapGroupTypeModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapGroupTypeModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapGroupTypeModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapGroupTypeModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapGroupTypeModeCode {
    return new StructureMapGroupTypeModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapGroupTypeModeCode {
    return new StructureMapGroupTypeModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapGroupTypeModeCode {
    return new StructureMapGroupTypeModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapGroupTypeModeCode | PlainMessage<StructureMapGroupTypeModeCode> | undefined, b: StructureMapGroupTypeModeCode | PlainMessage<StructureMapGroupTypeModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapGroupTypeModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapGroupTypeModeCode.Value
 */
export enum StructureMapGroupTypeModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * @generated from enum value: TYPES = 2;
   */
  TYPES = 2,

  /**
   * @generated from enum value: TYPE_AND_TYPES = 3;
   */
  TYPE_AND_TYPES = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapGroupTypeModeCode_Value)
proto3.util.setEnumType(StructureMapGroupTypeModeCode_Value, "google.fhir.stu3.proto.StructureMapGroupTypeModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NONE" },
  { no: 2, name: "TYPES" },
  { no: 3, name: "TYPE_AND_TYPES" },
]);

/**
 * Mode for this instance of data
 * See http://hl7.org/fhir/ValueSet/map-input-mode
 *
 * @generated from message google.fhir.stu3.proto.StructureMapInputModeCode
 */
export class StructureMapInputModeCode extends Message<StructureMapInputModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapInputModeCode.Value value = 1;
   */
  value = StructureMapInputModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapInputModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapInputModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapInputModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapInputModeCode {
    return new StructureMapInputModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapInputModeCode {
    return new StructureMapInputModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapInputModeCode {
    return new StructureMapInputModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapInputModeCode | PlainMessage<StructureMapInputModeCode> | undefined, b: StructureMapInputModeCode | PlainMessage<StructureMapInputModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapInputModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapInputModeCode.Value
 */
export enum StructureMapInputModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOURCE = 1;
   */
  SOURCE = 1,

  /**
   * @generated from enum value: TARGET = 2;
   */
  TARGET = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapInputModeCode_Value)
proto3.util.setEnumType(StructureMapInputModeCode_Value, "google.fhir.stu3.proto.StructureMapInputModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOURCE" },
  { no: 2, name: "TARGET" },
]);

/**
 * How the referenced structure is used in this mapping
 * See http://hl7.org/fhir/ValueSet/map-model-mode
 *
 * @generated from message google.fhir.stu3.proto.StructureMapModelModeCode
 */
export class StructureMapModelModeCode extends Message<StructureMapModelModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapModelModeCode.Value value = 1;
   */
  value = StructureMapModelModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapModelModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapModelModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapModelModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapModelModeCode {
    return new StructureMapModelModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapModelModeCode {
    return new StructureMapModelModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapModelModeCode {
    return new StructureMapModelModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapModelModeCode | PlainMessage<StructureMapModelModeCode> | undefined, b: StructureMapModelModeCode | PlainMessage<StructureMapModelModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapModelModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapModelModeCode.Value
 */
export enum StructureMapModelModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOURCE = 1;
   */
  SOURCE = 1,

  /**
   * @generated from enum value: QUERIED = 2;
   */
  QUERIED = 2,

  /**
   * @generated from enum value: TARGET = 3;
   */
  TARGET = 3,

  /**
   * @generated from enum value: PRODUCED = 4;
   */
  PRODUCED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapModelModeCode_Value)
proto3.util.setEnumType(StructureMapModelModeCode_Value, "google.fhir.stu3.proto.StructureMapModelModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOURCE" },
  { no: 2, name: "QUERIED" },
  { no: 3, name: "TARGET" },
  { no: 4, name: "PRODUCED" },
]);

/**
 * If field is a list, how to manage the source
 * See http://hl7.org/fhir/ValueSet/map-source-list-mode
 *
 * @generated from message google.fhir.stu3.proto.StructureMapSourceListModeCode
 */
export class StructureMapSourceListModeCode extends Message<StructureMapSourceListModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapSourceListModeCode.Value value = 1;
   */
  value = StructureMapSourceListModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapSourceListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapSourceListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapSourceListModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapSourceListModeCode {
    return new StructureMapSourceListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapSourceListModeCode {
    return new StructureMapSourceListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapSourceListModeCode {
    return new StructureMapSourceListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapSourceListModeCode | PlainMessage<StructureMapSourceListModeCode> | undefined, b: StructureMapSourceListModeCode | PlainMessage<StructureMapSourceListModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapSourceListModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapSourceListModeCode.Value
 */
export enum StructureMapSourceListModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FIRST = 1;
   */
  FIRST = 1,

  /**
   * @generated from enum value: NOT_FIRST = 2;
   */
  NOT_FIRST = 2,

  /**
   * @generated from enum value: LAST = 3;
   */
  LAST = 3,

  /**
   * @generated from enum value: NOT_LAST = 4;
   */
  NOT_LAST = 4,

  /**
   * @generated from enum value: ONLY_ONE = 5;
   */
  ONLY_ONE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapSourceListModeCode_Value)
proto3.util.setEnumType(StructureMapSourceListModeCode_Value, "google.fhir.stu3.proto.StructureMapSourceListModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FIRST" },
  { no: 2, name: "NOT_FIRST" },
  { no: 3, name: "LAST" },
  { no: 4, name: "NOT_LAST" },
  { no: 5, name: "ONLY_ONE" },
]);

/**
 * If field is a list, how to manage the production
 * See http://hl7.org/fhir/ValueSet/map-target-list-mode
 *
 * @generated from message google.fhir.stu3.proto.StructureMapTargetListModeCode
 */
export class StructureMapTargetListModeCode extends Message<StructureMapTargetListModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapTargetListModeCode.Value value = 1;
   */
  value = StructureMapTargetListModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapTargetListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapTargetListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapTargetListModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapTargetListModeCode {
    return new StructureMapTargetListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapTargetListModeCode {
    return new StructureMapTargetListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapTargetListModeCode {
    return new StructureMapTargetListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapTargetListModeCode | PlainMessage<StructureMapTargetListModeCode> | undefined, b: StructureMapTargetListModeCode | PlainMessage<StructureMapTargetListModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapTargetListModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapTargetListModeCode.Value
 */
export enum StructureMapTargetListModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FIRST = 1;
   */
  FIRST = 1,

  /**
   * @generated from enum value: SHARE = 2;
   */
  SHARE = 2,

  /**
   * @generated from enum value: LAST = 3;
   */
  LAST = 3,

  /**
   * @generated from enum value: COLLATE = 4;
   */
  COLLATE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapTargetListModeCode_Value)
proto3.util.setEnumType(StructureMapTargetListModeCode_Value, "google.fhir.stu3.proto.StructureMapTargetListModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FIRST" },
  { no: 2, name: "SHARE" },
  { no: 3, name: "LAST" },
  { no: 4, name: "COLLATE" },
]);

/**
 * How data is copied/created
 * See http://hl7.org/fhir/ValueSet/map-transform
 *
 * @generated from message google.fhir.stu3.proto.StructureMapTransformCode
 */
export class StructureMapTransformCode extends Message<StructureMapTransformCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureMapTransformCode.Value value = 1;
   */
  value = StructureMapTransformCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMapTransformCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureMapTransformCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapTransformCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapTransformCode {
    return new StructureMapTransformCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapTransformCode {
    return new StructureMapTransformCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapTransformCode {
    return new StructureMapTransformCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapTransformCode | PlainMessage<StructureMapTransformCode> | undefined, b: StructureMapTransformCode | PlainMessage<StructureMapTransformCode> | undefined): boolean {
    return proto3.util.equals(StructureMapTransformCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureMapTransformCode.Value
 */
export enum StructureMapTransformCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: COPY = 2;
   */
  COPY = 2,

  /**
   * @generated from enum value: TRUNCATE = 3;
   */
  TRUNCATE = 3,

  /**
   * @generated from enum value: ESCAPE = 4;
   */
  ESCAPE = 4,

  /**
   * @generated from enum value: CAST = 5;
   */
  CAST = 5,

  /**
   * @generated from enum value: APPEND = 6;
   */
  APPEND = 6,

  /**
   * @generated from enum value: TRANSLATE = 7;
   */
  TRANSLATE = 7,

  /**
   * @generated from enum value: REFERENCE = 8;
   */
  REFERENCE = 8,

  /**
   * @generated from enum value: DATE_OP = 9;
   */
  DATE_OP = 9,

  /**
   * @generated from enum value: UUID = 10;
   */
  UUID = 10,

  /**
   * @generated from enum value: POINTER = 11;
   */
  POINTER = 11,

  /**
   * @generated from enum value: EVALUATE = 12;
   */
  EVALUATE = 12,

  /**
   * @generated from enum value: CC = 13;
   */
  CC = 13,

  /**
   * @generated from enum value: C = 14;
   */
  C = 14,

  /**
   * @generated from enum value: QTY = 15;
   */
  QTY = 15,

  /**
   * @generated from enum value: ID = 16;
   */
  ID = 16,

  /**
   * @generated from enum value: CP = 17;
   */
  CP = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapTransformCode_Value)
proto3.util.setEnumType(StructureMapTransformCode_Value, "google.fhir.stu3.proto.StructureMapTransformCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CREATE" },
  { no: 2, name: "COPY" },
  { no: 3, name: "TRUNCATE" },
  { no: 4, name: "ESCAPE" },
  { no: 5, name: "CAST" },
  { no: 6, name: "APPEND" },
  { no: 7, name: "TRANSLATE" },
  { no: 8, name: "REFERENCE" },
  { no: 9, name: "DATE_OP" },
  { no: 10, name: "UUID" },
  { no: 11, name: "POINTER" },
  { no: 12, name: "EVALUATE" },
  { no: 13, name: "CC" },
  { no: 14, name: "C" },
  { no: 15, name: "QTY" },
  { no: 16, name: "ID" },
  { no: 17, name: "CP" },
]);

/**
 * A Master Patient Index (MPI) assessment of whether a candidate patient
 * record is a match or not. See http://hl7.org/fhir/ValueSet/match-grade
 *
 * @generated from message google.fhir.stu3.proto.MatchGradeCode
 */
export class MatchGradeCode extends Message<MatchGradeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MatchGradeCode.Value value = 1;
   */
  value = MatchGradeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MatchGradeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MatchGradeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MatchGradeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MatchGradeCode {
    return new MatchGradeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MatchGradeCode {
    return new MatchGradeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MatchGradeCode {
    return new MatchGradeCode().fromJsonString(jsonString, options);
  }

  static equals(a: MatchGradeCode | PlainMessage<MatchGradeCode> | undefined, b: MatchGradeCode | PlainMessage<MatchGradeCode> | undefined): boolean {
    return proto3.util.equals(MatchGradeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MatchGradeCode.Value
 */
export enum MatchGradeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CERTAIN = 1;
   */
  CERTAIN = 1,

  /**
   * @generated from enum value: PROBABLE = 2;
   */
  PROBABLE = 2,

  /**
   * @generated from enum value: POSSIBLE = 3;
   */
  POSSIBLE = 3,

  /**
   * @generated from enum value: CERTAINLY_NOT = 4;
   */
  CERTAINLY_NOT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MatchGradeCode_Value)
proto3.util.setEnumType(MatchGradeCode_Value, "google.fhir.stu3.proto.MatchGradeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CERTAIN" },
  { no: 2, name: "PROBABLE" },
  { no: 3, name: "POSSIBLE" },
  { no: 4, name: "CERTAINLY_NOT" },
]);

/**
 * The intended usage for supplemental data elements in the measure
 * See http://hl7.org/fhir/ValueSet/measure-data-usage
 *
 * @generated from message google.fhir.stu3.proto.MeasureDataUsageCode
 */
export class MeasureDataUsageCode extends Message<MeasureDataUsageCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasureDataUsageCode.Value value = 1;
   */
  value = MeasureDataUsageCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasureDataUsageCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureDataUsageCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasureDataUsageCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureDataUsageCode {
    return new MeasureDataUsageCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureDataUsageCode {
    return new MeasureDataUsageCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureDataUsageCode {
    return new MeasureDataUsageCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureDataUsageCode | PlainMessage<MeasureDataUsageCode> | undefined, b: MeasureDataUsageCode | PlainMessage<MeasureDataUsageCode> | undefined): boolean {
    return proto3.util.equals(MeasureDataUsageCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasureDataUsageCode.Value
 */
export enum MeasureDataUsageCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SUPPLEMENTAL_DATA = 1;
   */
  SUPPLEMENTAL_DATA = 1,

  /**
   * @generated from enum value: RISK_ADJUSTMENT_FACTOR = 2;
   */
  RISK_ADJUSTMENT_FACTOR = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureDataUsageCode_Value)
proto3.util.setEnumType(MeasureDataUsageCode_Value, "google.fhir.stu3.proto.MeasureDataUsageCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SUPPLEMENTAL_DATA" },
  { no: 2, name: "RISK_ADJUSTMENT_FACTOR" },
]);

/**
 * Different measurement principle supported by the device.
 * See http://hl7.org/fhir/ValueSet/measurement-principle
 *
 * @generated from message google.fhir.stu3.proto.MeasmntPrincipleCode
 */
export class MeasmntPrincipleCode extends Message<MeasmntPrincipleCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasmntPrincipleCode.Value value = 1;
   */
  value = MeasmntPrincipleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasmntPrincipleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasmntPrincipleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasmntPrincipleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasmntPrincipleCode {
    return new MeasmntPrincipleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasmntPrincipleCode {
    return new MeasmntPrincipleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasmntPrincipleCode {
    return new MeasmntPrincipleCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasmntPrincipleCode | PlainMessage<MeasmntPrincipleCode> | undefined, b: MeasmntPrincipleCode | PlainMessage<MeasmntPrincipleCode> | undefined): boolean {
    return proto3.util.equals(MeasmntPrincipleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasmntPrincipleCode.Value
 */
export enum MeasmntPrincipleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OTHER = 1;
   */
  OTHER = 1,

  /**
   * @generated from enum value: CHEMICAL = 2;
   */
  CHEMICAL = 2,

  /**
   * @generated from enum value: ELECTRICAL = 3;
   */
  ELECTRICAL = 3,

  /**
   * @generated from enum value: IMPEDANCE = 4;
   */
  IMPEDANCE = 4,

  /**
   * @generated from enum value: NUCLEAR = 5;
   */
  NUCLEAR = 5,

  /**
   * @generated from enum value: OPTICAL = 6;
   */
  OPTICAL = 6,

  /**
   * @generated from enum value: THERMAL = 7;
   */
  THERMAL = 7,

  /**
   * @generated from enum value: BIOLOGICAL = 8;
   */
  BIOLOGICAL = 8,

  /**
   * @generated from enum value: MECHANICAL = 9;
   */
  MECHANICAL = 9,

  /**
   * @generated from enum value: ACOUSTICAL = 10;
   */
  ACOUSTICAL = 10,

  /**
   * @generated from enum value: MANUAL = 11;
   */
  MANUAL = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasmntPrincipleCode_Value)
proto3.util.setEnumType(MeasmntPrincipleCode_Value, "google.fhir.stu3.proto.MeasmntPrincipleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OTHER" },
  { no: 2, name: "CHEMICAL" },
  { no: 3, name: "ELECTRICAL" },
  { no: 4, name: "IMPEDANCE" },
  { no: 5, name: "NUCLEAR" },
  { no: 6, name: "OPTICAL" },
  { no: 7, name: "THERMAL" },
  { no: 8, name: "BIOLOGICAL" },
  { no: 9, name: "MECHANICAL" },
  { no: 10, name: "ACOUSTICAL" },
  { no: 11, name: "MANUAL" },
]);

/**
 * The type of population
 * See http://hl7.org/fhir/ValueSet/measure-population
 *
 * @generated from message google.fhir.stu3.proto.MeasurePopulationTypeCode
 */
export class MeasurePopulationTypeCode extends Message<MeasurePopulationTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasurePopulationTypeCode.Value value = 1;
   */
  value = MeasurePopulationTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasurePopulationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasurePopulationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasurePopulationTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasurePopulationTypeCode {
    return new MeasurePopulationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasurePopulationTypeCode {
    return new MeasurePopulationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasurePopulationTypeCode {
    return new MeasurePopulationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasurePopulationTypeCode | PlainMessage<MeasurePopulationTypeCode> | undefined, b: MeasurePopulationTypeCode | PlainMessage<MeasurePopulationTypeCode> | undefined): boolean {
    return proto3.util.equals(MeasurePopulationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasurePopulationTypeCode.Value
 */
export enum MeasurePopulationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INITIAL_POPULATION = 1;
   */
  INITIAL_POPULATION = 1,

  /**
   * @generated from enum value: NUMERATOR = 2;
   */
  NUMERATOR = 2,

  /**
   * @generated from enum value: NUMERATOR_EXCLUSION = 3;
   */
  NUMERATOR_EXCLUSION = 3,

  /**
   * @generated from enum value: DENOMINATOR = 4;
   */
  DENOMINATOR = 4,

  /**
   * @generated from enum value: DENOMINATOR_EXCLUSION = 5;
   */
  DENOMINATOR_EXCLUSION = 5,

  /**
   * @generated from enum value: DENOMINATOR_EXCEPTION = 6;
   */
  DENOMINATOR_EXCEPTION = 6,

  /**
   * @generated from enum value: MEASURE_POPULATION = 7;
   */
  MEASURE_POPULATION = 7,

  /**
   * @generated from enum value: MEASURE_POPULATION_EXCLUSION = 8;
   */
  MEASURE_POPULATION_EXCLUSION = 8,

  /**
   * @generated from enum value: MEASURE_OBSERVATION = 9;
   */
  MEASURE_OBSERVATION = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasurePopulationTypeCode_Value)
proto3.util.setEnumType(MeasurePopulationTypeCode_Value, "google.fhir.stu3.proto.MeasurePopulationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INITIAL_POPULATION" },
  { no: 2, name: "NUMERATOR" },
  { no: 3, name: "NUMERATOR_EXCLUSION" },
  { no: 4, name: "DENOMINATOR" },
  { no: 5, name: "DENOMINATOR_EXCLUSION" },
  { no: 6, name: "DENOMINATOR_EXCEPTION" },
  { no: 7, name: "MEASURE_POPULATION" },
  { no: 8, name: "MEASURE_POPULATION_EXCLUSION" },
  { no: 9, name: "MEASURE_OBSERVATION" },
]);

/**
 * The status of the measure report
 * See http://hl7.org/fhir/ValueSet/measure-report-status
 *
 * @generated from message google.fhir.stu3.proto.MeasureReportStatusCode
 */
export class MeasureReportStatusCode extends Message<MeasureReportStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasureReportStatusCode.Value value = 1;
   */
  value = MeasureReportStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasureReportStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReportStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasureReportStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReportStatusCode {
    return new MeasureReportStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReportStatusCode {
    return new MeasureReportStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReportStatusCode {
    return new MeasureReportStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReportStatusCode | PlainMessage<MeasureReportStatusCode> | undefined, b: MeasureReportStatusCode | PlainMessage<MeasureReportStatusCode> | undefined): boolean {
    return proto3.util.equals(MeasureReportStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasureReportStatusCode.Value
 */
export enum MeasureReportStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,

  /**
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureReportStatusCode_Value)
proto3.util.setEnumType(MeasureReportStatusCode_Value, "google.fhir.stu3.proto.MeasureReportStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPLETE" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ERROR" },
]);

/**
 * The type of the measure report
 * See http://hl7.org/fhir/ValueSet/measure-report-type
 *
 * @generated from message google.fhir.stu3.proto.MeasureReportTypeCode
 */
export class MeasureReportTypeCode extends Message<MeasureReportTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasureReportTypeCode.Value value = 1;
   */
  value = MeasureReportTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasureReportTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureReportTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasureReportTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReportTypeCode {
    return new MeasureReportTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReportTypeCode {
    return new MeasureReportTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReportTypeCode {
    return new MeasureReportTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReportTypeCode | PlainMessage<MeasureReportTypeCode> | undefined, b: MeasureReportTypeCode | PlainMessage<MeasureReportTypeCode> | undefined): boolean {
    return proto3.util.equals(MeasureReportTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasureReportTypeCode.Value
 */
export enum MeasureReportTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INDIVIDUAL = 1;
   */
  INDIVIDUAL = 1,

  /**
   * @generated from enum value: PATIENT_LIST = 2;
   */
  PATIENT_LIST = 2,

  /**
   * @generated from enum value: SUMMARY = 3;
   */
  SUMMARY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureReportTypeCode_Value)
proto3.util.setEnumType(MeasureReportTypeCode_Value, "google.fhir.stu3.proto.MeasureReportTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INDIVIDUAL" },
  { no: 2, name: "PATIENT_LIST" },
  { no: 3, name: "SUMMARY" },
]);

/**
 * The scoring type of the measure
 * See http://hl7.org/fhir/ValueSet/measure-scoring
 *
 * @generated from message google.fhir.stu3.proto.MeasureScoringCode
 */
export class MeasureScoringCode extends Message<MeasureScoringCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasureScoringCode.Value value = 1;
   */
  value = MeasureScoringCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasureScoringCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureScoringCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasureScoringCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureScoringCode {
    return new MeasureScoringCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureScoringCode {
    return new MeasureScoringCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureScoringCode {
    return new MeasureScoringCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureScoringCode | PlainMessage<MeasureScoringCode> | undefined, b: MeasureScoringCode | PlainMessage<MeasureScoringCode> | undefined): boolean {
    return proto3.util.equals(MeasureScoringCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasureScoringCode.Value
 */
export enum MeasureScoringCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPORTION = 1;
   */
  PROPORTION = 1,

  /**
   * @generated from enum value: RATIO = 2;
   */
  RATIO = 2,

  /**
   * @generated from enum value: CONTINUOUS_VARIABLE = 3;
   */
  CONTINUOUS_VARIABLE = 3,

  /**
   * @generated from enum value: COHORT = 4;
   */
  COHORT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureScoringCode_Value)
proto3.util.setEnumType(MeasureScoringCode_Value, "google.fhir.stu3.proto.MeasureScoringCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPORTION" },
  { no: 2, name: "RATIO" },
  { no: 3, name: "CONTINUOUS_VARIABLE" },
  { no: 4, name: "COHORT" },
]);

/**
 * The type of measure (includes codes from 2.16.840.1.113883.1.11.20368)
 * See http://hl7.org/fhir/ValueSet/measure-type
 *
 * @generated from message google.fhir.stu3.proto.MeasureTypeCode
 */
export class MeasureTypeCode extends Message<MeasureTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MeasureTypeCode.Value value = 1;
   */
  value = MeasureTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MeasureTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MeasureTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MeasureTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureTypeCode {
    return new MeasureTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureTypeCode {
    return new MeasureTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureTypeCode {
    return new MeasureTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureTypeCode | PlainMessage<MeasureTypeCode> | undefined, b: MeasureTypeCode | PlainMessage<MeasureTypeCode> | undefined): boolean {
    return proto3.util.equals(MeasureTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MeasureTypeCode.Value
 */
export enum MeasureTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROCESS = 1;
   */
  PROCESS = 1,

  /**
   * @generated from enum value: OUTCOME = 2;
   */
  OUTCOME = 2,

  /**
   * @generated from enum value: STRUCTURE = 3;
   */
  STRUCTURE = 3,

  /**
   * @generated from enum value: PATIENT_REPORTED_OUTCOME = 4;
   */
  PATIENT_REPORTED_OUTCOME = 4,

  /**
   * @generated from enum value: COMPOSITE = 5;
   */
  COMPOSITE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureTypeCode_Value)
proto3.util.setEnumType(MeasureTypeCode_Value, "google.fhir.stu3.proto.MeasureTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROCESS" },
  { no: 2, name: "OUTCOME" },
  { no: 3, name: "STRUCTURE" },
  { no: 4, name: "PATIENT_REPORTED_OUTCOME" },
  { no: 5, name: "COMPOSITE" },
]);

/**
 * A coded concept describing where the medication administered is expected to
 * occur See http://hl7.org/fhir/ValueSet/medication-admin-category
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministrationCategoryCode
 */
export class MedicationAdministrationCategoryCode extends Message<MedicationAdministrationCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationAdministrationCategoryCode.Value value = 1;
   */
  value = MedicationAdministrationCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationAdministrationCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministrationCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationAdministrationCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministrationCategoryCode {
    return new MedicationAdministrationCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministrationCategoryCode {
    return new MedicationAdministrationCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministrationCategoryCode {
    return new MedicationAdministrationCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministrationCategoryCode | PlainMessage<MedicationAdministrationCategoryCode> | undefined, b: MedicationAdministrationCategoryCode | PlainMessage<MedicationAdministrationCategoryCode> | undefined): boolean {
    return proto3.util.equals(MedicationAdministrationCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationAdministrationCategoryCode.Value
 */
export enum MedicationAdministrationCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INPATIENT = 1;
   */
  INPATIENT = 1,

  /**
   * @generated from enum value: OUTPATIENT = 2;
   */
  OUTPATIENT = 2,

  /**
   * @generated from enum value: COMMUNITY = 3;
   */
  COMMUNITY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationAdministrationCategoryCode_Value)
proto3.util.setEnumType(MedicationAdministrationCategoryCode_Value, "google.fhir.stu3.proto.MedicationAdministrationCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INPATIENT" },
  { no: 2, name: "OUTPATIENT" },
  { no: 3, name: "COMMUNITY" },
]);

/**
 * A set of codes indicating the current status of a MedicationAdministration.
 * See http://hl7.org/fhir/ValueSet/medication-admin-status
 *
 * @generated from message google.fhir.stu3.proto.MedicationAdministrationStatusCode
 */
export class MedicationAdministrationStatusCode extends Message<MedicationAdministrationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationAdministrationStatusCode.Value value = 1;
   */
  value = MedicationAdministrationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationAdministrationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationAdministrationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationAdministrationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministrationStatusCode {
    return new MedicationAdministrationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministrationStatusCode {
    return new MedicationAdministrationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministrationStatusCode {
    return new MedicationAdministrationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministrationStatusCode | PlainMessage<MedicationAdministrationStatusCode> | undefined, b: MedicationAdministrationStatusCode | PlainMessage<MedicationAdministrationStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationAdministrationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationAdministrationStatusCode.Value
 */
export enum MedicationAdministrationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: ON_HOLD = 2;
   */
  ON_HOLD = 2,

  /**
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationAdministrationStatusCode_Value)
proto3.util.setEnumType(MedicationAdministrationStatusCode_Value, "google.fhir.stu3.proto.MedicationAdministrationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "ON_HOLD" },
  { no: 3, name: "COMPLETED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
  { no: 5, name: "STOPPED" },
  { no: 6, name: "UNKNOWN" },
]);

/**
 * A code describing where the dispensed medication is expected to be consumed
 * or administered See
 * http://hl7.org/fhir/ValueSet/medication-dispense-category
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispenseCategoryCode
 */
export class MedicationDispenseCategoryCode extends Message<MedicationDispenseCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationDispenseCategoryCode.Value value = 1;
   */
  value = MedicationDispenseCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationDispenseCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispenseCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationDispenseCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispenseCategoryCode {
    return new MedicationDispenseCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispenseCategoryCode {
    return new MedicationDispenseCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispenseCategoryCode {
    return new MedicationDispenseCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispenseCategoryCode | PlainMessage<MedicationDispenseCategoryCode> | undefined, b: MedicationDispenseCategoryCode | PlainMessage<MedicationDispenseCategoryCode> | undefined): boolean {
    return proto3.util.equals(MedicationDispenseCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationDispenseCategoryCode.Value
 */
export enum MedicationDispenseCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INPATIENT = 1;
   */
  INPATIENT = 1,

  /**
   * @generated from enum value: OUTPATIENT = 2;
   */
  OUTPATIENT = 2,

  /**
   * @generated from enum value: COMMUNITY = 3;
   */
  COMMUNITY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationDispenseCategoryCode_Value)
proto3.util.setEnumType(MedicationDispenseCategoryCode_Value, "google.fhir.stu3.proto.MedicationDispenseCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INPATIENT" },
  { no: 2, name: "OUTPATIENT" },
  { no: 3, name: "COMMUNITY" },
]);

/**
 * A coded concept specifying the state of the dispense event.
 * See http://hl7.org/fhir/ValueSet/medication-dispense-status
 *
 * @generated from message google.fhir.stu3.proto.MedicationDispenseStatusCode
 */
export class MedicationDispenseStatusCode extends Message<MedicationDispenseStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationDispenseStatusCode.Value value = 1;
   */
  value = MedicationDispenseStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationDispenseStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationDispenseStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationDispenseStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispenseStatusCode {
    return new MedicationDispenseStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispenseStatusCode {
    return new MedicationDispenseStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispenseStatusCode {
    return new MedicationDispenseStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispenseStatusCode | PlainMessage<MedicationDispenseStatusCode> | undefined, b: MedicationDispenseStatusCode | PlainMessage<MedicationDispenseStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationDispenseStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationDispenseStatusCode.Value
 */
export enum MedicationDispenseStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PREPARATION = 1;
   */
  PREPARATION = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: ON_HOLD = 3;
   */
  ON_HOLD = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: STOPPED = 6;
   */
  STOPPED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationDispenseStatusCode_Value)
proto3.util.setEnumType(MedicationDispenseStatusCode_Value, "google.fhir.stu3.proto.MedicationDispenseStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PREPARATION" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "ON_HOLD" },
  { no: 4, name: "COMPLETED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "STOPPED" },
]);

/**
 * A coded concept defining the kind of container a medication package is
 * packaged in See http://hl7.org/fhir/ValueSet/medication-package-form
 *
 * @generated from message google.fhir.stu3.proto.MedicationContainerCode
 */
export class MedicationContainerCode extends Message<MedicationContainerCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationContainerCode.Value value = 1;
   */
  value = MedicationContainerCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationContainerCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationContainerCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationContainerCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationContainerCode {
    return new MedicationContainerCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationContainerCode {
    return new MedicationContainerCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationContainerCode {
    return new MedicationContainerCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationContainerCode | PlainMessage<MedicationContainerCode> | undefined, b: MedicationContainerCode | PlainMessage<MedicationContainerCode> | undefined): boolean {
    return proto3.util.equals(MedicationContainerCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationContainerCode.Value
 */
export enum MedicationContainerCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AMPOULE = 1;
   */
  AMPOULE = 1,

  /**
   * @generated from enum value: BOTTLE = 2;
   */
  BOTTLE = 2,

  /**
   * @generated from enum value: BOX = 3;
   */
  BOX = 3,

  /**
   * @generated from enum value: CARTRIDGE = 4;
   */
  CARTRIDGE = 4,

  /**
   * @generated from enum value: CONTAINER = 5;
   */
  CONTAINER = 5,

  /**
   * @generated from enum value: TUBE = 6;
   */
  TUBE = 6,

  /**
   * @generated from enum value: UNITDOSE = 7;
   */
  UNITDOSE = 7,

  /**
   * @generated from enum value: VIAL = 8;
   */
  VIAL = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationContainerCode_Value)
proto3.util.setEnumType(MedicationContainerCode_Value, "google.fhir.stu3.proto.MedicationContainerCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AMPOULE" },
  { no: 2, name: "BOTTLE" },
  { no: 3, name: "BOX" },
  { no: 4, name: "CARTRIDGE" },
  { no: 5, name: "CONTAINER" },
  { no: 6, name: "TUBE" },
  { no: 7, name: "UNITDOSE" },
  { no: 8, name: "VIAL" },
]);

/**
 * A coded concept identifying where the medication ordered is expected to be
 * consumed or administered See
 * http://hl7.org/fhir/ValueSet/medication-request-category
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequestCategoryCode
 */
export class MedicationRequestCategoryCode extends Message<MedicationRequestCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequestCategoryCode.Value value = 1;
   */
  value = MedicationRequestCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequestCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequestCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationRequestCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequestCategoryCode {
    return new MedicationRequestCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequestCategoryCode {
    return new MedicationRequestCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequestCategoryCode {
    return new MedicationRequestCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequestCategoryCode | PlainMessage<MedicationRequestCategoryCode> | undefined, b: MedicationRequestCategoryCode | PlainMessage<MedicationRequestCategoryCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequestCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationRequestCategoryCode.Value
 */
export enum MedicationRequestCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INPATIENT = 1;
   */
  INPATIENT = 1,

  /**
   * @generated from enum value: OUTPATIENT = 2;
   */
  OUTPATIENT = 2,

  /**
   * @generated from enum value: COMMUNITY = 3;
   */
  COMMUNITY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationRequestCategoryCode_Value)
proto3.util.setEnumType(MedicationRequestCategoryCode_Value, "google.fhir.stu3.proto.MedicationRequestCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INPATIENT" },
  { no: 2, name: "OUTPATIENT" },
  { no: 3, name: "COMMUNITY" },
]);

/**
 * The kind of medication order
 * See http://hl7.org/fhir/ValueSet/medication-request-intent
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequestIntentCode
 */
export class MedicationRequestIntentCode extends Message<MedicationRequestIntentCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequestIntentCode.Value value = 1;
   */
  value = MedicationRequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequestIntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequestIntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationRequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequestIntentCode {
    return new MedicationRequestIntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequestIntentCode {
    return new MedicationRequestIntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequestIntentCode {
    return new MedicationRequestIntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequestIntentCode | PlainMessage<MedicationRequestIntentCode> | undefined, b: MedicationRequestIntentCode | PlainMessage<MedicationRequestIntentCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequestIntentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationRequestIntentCode.Value
 */
export enum MedicationRequestIntentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSAL = 1;
   */
  PROPOSAL = 1,

  /**
   * @generated from enum value: PLAN = 2;
   */
  PLAN = 2,

  /**
   * @generated from enum value: ORDER = 3;
   */
  ORDER = 3,

  /**
   * @generated from enum value: INSTANCE_ORDER = 4;
   */
  INSTANCE_ORDER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationRequestIntentCode_Value)
proto3.util.setEnumType(MedicationRequestIntentCode_Value, "google.fhir.stu3.proto.MedicationRequestIntentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSAL" },
  { no: 2, name: "PLAN" },
  { no: 3, name: "ORDER" },
  { no: 4, name: "INSTANCE_ORDER" },
]);

/**
 * Identifies the level of importance to be assigned to actioning the request
 * See http://hl7.org/fhir/ValueSet/medication-request-priority
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequestPriorityCode
 */
export class MedicationRequestPriorityCode extends Message<MedicationRequestPriorityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequestPriorityCode.Value value = 1;
   */
  value = MedicationRequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequestPriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequestPriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationRequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequestPriorityCode {
    return new MedicationRequestPriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequestPriorityCode {
    return new MedicationRequestPriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequestPriorityCode {
    return new MedicationRequestPriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequestPriorityCode | PlainMessage<MedicationRequestPriorityCode> | undefined, b: MedicationRequestPriorityCode | PlainMessage<MedicationRequestPriorityCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequestPriorityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationRequestPriorityCode.Value
 */
export enum MedicationRequestPriorityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ROUTINE = 1;
   */
  ROUTINE = 1,

  /**
   * @generated from enum value: URGENT = 2;
   */
  URGENT = 2,

  /**
   * @generated from enum value: STAT = 3;
   */
  STAT = 3,

  /**
   * @generated from enum value: ASAP = 4;
   */
  ASAP = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationRequestPriorityCode_Value)
proto3.util.setEnumType(MedicationRequestPriorityCode_Value, "google.fhir.stu3.proto.MedicationRequestPriorityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ROUTINE" },
  { no: 2, name: "URGENT" },
  { no: 3, name: "STAT" },
  { no: 4, name: "ASAP" },
]);

/**
 * A coded concept specifying the state of the prescribing event. Describes
 * the lifecycle of the prescription See
 * http://hl7.org/fhir/ValueSet/medication-request-status
 *
 * @generated from message google.fhir.stu3.proto.MedicationRequestStatusCode
 */
export class MedicationRequestStatusCode extends Message<MedicationRequestStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationRequestStatusCode.Value value = 1;
   */
  value = MedicationRequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequestStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationRequestStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationRequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequestStatusCode {
    return new MedicationRequestStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequestStatusCode {
    return new MedicationRequestStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequestStatusCode {
    return new MedicationRequestStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequestStatusCode | PlainMessage<MedicationRequestStatusCode> | undefined, b: MedicationRequestStatusCode | PlainMessage<MedicationRequestStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequestStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationRequestStatusCode.Value
 */
export enum MedicationRequestStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: ON_HOLD = 2;
   */
  ON_HOLD = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: STOPPED = 6;
   */
  STOPPED = 6,

  /**
   * @generated from enum value: DRAFT = 7;
   */
  DRAFT = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationRequestStatusCode_Value)
proto3.util.setEnumType(MedicationRequestStatusCode_Value, "google.fhir.stu3.proto.MedicationRequestStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "ON_HOLD" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "COMPLETED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "STOPPED" },
  { no: 7, name: "DRAFT" },
  { no: 8, name: "UNKNOWN" },
]);

/**
 * A coded concept identifying where the medication included in the
 * medicationstatement is expected to be consumed or administered See
 * http://hl7.org/fhir/ValueSet/medication-statement-category
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatementCategoryCode
 */
export class MedicationStatementCategoryCode extends Message<MedicationStatementCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationStatementCategoryCode.Value value = 1;
   */
  value = MedicationStatementCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationStatementCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatementCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationStatementCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatementCategoryCode {
    return new MedicationStatementCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatementCategoryCode {
    return new MedicationStatementCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatementCategoryCode {
    return new MedicationStatementCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatementCategoryCode | PlainMessage<MedicationStatementCategoryCode> | undefined, b: MedicationStatementCategoryCode | PlainMessage<MedicationStatementCategoryCode> | undefined): boolean {
    return proto3.util.equals(MedicationStatementCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationStatementCategoryCode.Value
 */
export enum MedicationStatementCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INPATIENT = 1;
   */
  INPATIENT = 1,

  /**
   * @generated from enum value: OUTPATIENT = 2;
   */
  OUTPATIENT = 2,

  /**
   * @generated from enum value: COMMUNITY = 3;
   */
  COMMUNITY = 3,

  /**
   * @generated from enum value: PATIENTSPECIFIED = 4;
   */
  PATIENTSPECIFIED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationStatementCategoryCode_Value)
proto3.util.setEnumType(MedicationStatementCategoryCode_Value, "google.fhir.stu3.proto.MedicationStatementCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INPATIENT" },
  { no: 2, name: "OUTPATIENT" },
  { no: 3, name: "COMMUNITY" },
  { no: 4, name: "PATIENTSPECIFIED" },
]);

/**
 * A coded concept indicating the current status of a MedicationStatement.
 * See http://hl7.org/fhir/ValueSet/medication-statement-status
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatementStatusCode
 */
export class MedicationStatementStatusCode extends Message<MedicationStatementStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationStatementStatusCode.Value value = 1;
   */
  value = MedicationStatementStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationStatementStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatementStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationStatementStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatementStatusCode {
    return new MedicationStatementStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatementStatusCode {
    return new MedicationStatementStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatementStatusCode {
    return new MedicationStatementStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatementStatusCode | PlainMessage<MedicationStatementStatusCode> | undefined, b: MedicationStatementStatusCode | PlainMessage<MedicationStatementStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationStatementStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationStatementStatusCode.Value
 */
export enum MedicationStatementStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: INTENDED = 4;
   */
  INTENDED = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * @generated from enum value: ON_HOLD = 6;
   */
  ON_HOLD = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationStatementStatusCode_Value)
proto3.util.setEnumType(MedicationStatementStatusCode_Value, "google.fhir.stu3.proto.MedicationStatementStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "INTENDED" },
  { no: 5, name: "STOPPED" },
  { no: 6, name: "ON_HOLD" },
]);

/**
 * A coded concept identifying level of certainty if patient has taken or has
 * not taken the medication See
 * http://hl7.org/fhir/ValueSet/medication-statement-taken
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatementTakenCode
 */
export class MedicationStatementTakenCode extends Message<MedicationStatementTakenCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationStatementTakenCode.Value value = 1;
   */
  value = MedicationStatementTakenCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationStatementTakenCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatementTakenCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationStatementTakenCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatementTakenCode {
    return new MedicationStatementTakenCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatementTakenCode {
    return new MedicationStatementTakenCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatementTakenCode {
    return new MedicationStatementTakenCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatementTakenCode | PlainMessage<MedicationStatementTakenCode> | undefined, b: MedicationStatementTakenCode | PlainMessage<MedicationStatementTakenCode> | undefined): boolean {
    return proto3.util.equals(MedicationStatementTakenCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationStatementTakenCode.Value
 */
export enum MedicationStatementTakenCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: Y = 1;
   */
  Y = 1,

  /**
   * @generated from enum value: N = 2;
   */
  N = 2,

  /**
   * @generated from enum value: UNK = 3;
   */
  UNK = 3,

  /**
   * @generated from enum value: NA = 4;
   */
  NA = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationStatementTakenCode_Value)
proto3.util.setEnumType(MedicationStatementTakenCode_Value, "google.fhir.stu3.proto.MedicationStatementTakenCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "Y" },
  { no: 2, name: "N" },
  { no: 3, name: "UNK" },
  { no: 4, name: "NA" },
]);

/**
 * A coded concept defining if the medication is in active use
 * See http://hl7.org/fhir/ValueSet/medication-status
 *
 * @generated from message google.fhir.stu3.proto.MedicationStatusCode
 */
export class MedicationStatusCode extends Message<MedicationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MedicationStatusCode.Value value = 1;
   */
  value = MedicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MedicationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatusCode {
    return new MedicationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatusCode {
    return new MedicationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatusCode {
    return new MedicationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatusCode | PlainMessage<MedicationStatusCode> | undefined, b: MedicationStatusCode | PlainMessage<MedicationStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MedicationStatusCode.Value
 */
export enum MedicationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationStatusCode_Value)
proto3.util.setEnumType(MedicationStatusCode_Value, "google.fhir.stu3.proto.MedicationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * One of the message events defined as part of FHIR.
 * See http://hl7.org/fhir/ValueSet/message-events
 *
 * @generated from message google.fhir.stu3.proto.MessageEventCode
 */
export class MessageEventCode extends Message<MessageEventCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MessageEventCode.Value value = 1;
   */
  value = MessageEventCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageEventCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageEventCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageEventCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageEventCode {
    return new MessageEventCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageEventCode {
    return new MessageEventCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageEventCode {
    return new MessageEventCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageEventCode | PlainMessage<MessageEventCode> | undefined, b: MessageEventCode | PlainMessage<MessageEventCode> | undefined): boolean {
    return proto3.util.equals(MessageEventCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MessageEventCode.Value
 */
export enum MessageEventCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CODE_SYSTEM_EXPAND = 1;
   */
  CODE_SYSTEM_EXPAND = 1,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION_COMPLETE = 2;
   */
  MEDICATION_ADMINISTRATION_COMPLETE = 2,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION_NULLIFICATION = 3;
   */
  MEDICATION_ADMINISTRATION_NULLIFICATION = 3,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION_RECORDING = 4;
   */
  MEDICATION_ADMINISTRATION_RECORDING = 4,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION_UPDATE = 5;
   */
  MEDICATION_ADMINISTRATION_UPDATE = 5,

  /**
   * @generated from enum value: ADMIN_NOTIFY = 6;
   */
  ADMIN_NOTIFY = 6,

  /**
   * @generated from enum value: COMMUNICATION_REQUEST = 7;
   */
  COMMUNICATION_REQUEST = 7,

  /**
   * @generated from enum value: DIAGNOSTICREPORT_PROVIDE = 8;
   */
  DIAGNOSTICREPORT_PROVIDE = 8,

  /**
   * @generated from enum value: OBSERVATION_PROVIDE = 9;
   */
  OBSERVATION_PROVIDE = 9,

  /**
   * @generated from enum value: PATIENT_LINK = 10;
   */
  PATIENT_LINK = 10,

  /**
   * @generated from enum value: PATIENT_UNLINK = 11;
   */
  PATIENT_UNLINK = 11,

  /**
   * @generated from enum value: VALUESET_EXPAND = 12;
   */
  VALUESET_EXPAND = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(MessageEventCode_Value)
proto3.util.setEnumType(MessageEventCode_Value, "google.fhir.stu3.proto.MessageEventCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CODE_SYSTEM_EXPAND" },
  { no: 2, name: "MEDICATION_ADMINISTRATION_COMPLETE" },
  { no: 3, name: "MEDICATION_ADMINISTRATION_NULLIFICATION" },
  { no: 4, name: "MEDICATION_ADMINISTRATION_RECORDING" },
  { no: 5, name: "MEDICATION_ADMINISTRATION_UPDATE" },
  { no: 6, name: "ADMIN_NOTIFY" },
  { no: 7, name: "COMMUNICATION_REQUEST" },
  { no: 8, name: "DIAGNOSTICREPORT_PROVIDE" },
  { no: 9, name: "OBSERVATION_PROVIDE" },
  { no: 10, name: "PATIENT_LINK" },
  { no: 11, name: "PATIENT_UNLINK" },
  { no: 12, name: "VALUESET_EXPAND" },
]);

/**
 * One of the message events defined as part of FHIR.
 * See http://hl7.org/fhir/ValueSet/messageheader-response-request
 *
 * @generated from message google.fhir.stu3.proto.MessageHeaderResponseRequestCode
 */
export class MessageHeaderResponseRequestCode extends Message<MessageHeaderResponseRequestCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MessageHeaderResponseRequestCode.Value value = 1;
   */
  value = MessageHeaderResponseRequestCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageHeaderResponseRequestCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageHeaderResponseRequestCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageHeaderResponseRequestCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeaderResponseRequestCode {
    return new MessageHeaderResponseRequestCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeaderResponseRequestCode {
    return new MessageHeaderResponseRequestCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeaderResponseRequestCode {
    return new MessageHeaderResponseRequestCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeaderResponseRequestCode | PlainMessage<MessageHeaderResponseRequestCode> | undefined, b: MessageHeaderResponseRequestCode | PlainMessage<MessageHeaderResponseRequestCode> | undefined): boolean {
    return proto3.util.equals(MessageHeaderResponseRequestCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MessageHeaderResponseRequestCode.Value
 */
export enum MessageHeaderResponseRequestCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALWAYS = 1;
   */
  ALWAYS = 1,

  /**
   * @generated from enum value: ON_ERROR = 2;
   */
  ON_ERROR = 2,

  /**
   * @generated from enum value: NEVER = 3;
   */
  NEVER = 3,

  /**
   * @generated from enum value: ON_SUCCESS = 4;
   */
  ON_SUCCESS = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MessageHeaderResponseRequestCode_Value)
proto3.util.setEnumType(MessageHeaderResponseRequestCode_Value, "google.fhir.stu3.proto.MessageHeaderResponseRequestCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALWAYS" },
  { no: 2, name: "ON_ERROR" },
  { no: 3, name: "NEVER" },
  { no: 4, name: "ON_SUCCESS" },
]);

/**
 * Example Message Reasons. These are the set of codes that might be used an
 * updating an encounter using admin-update. See
 * http://hl7.org/fhir/ValueSet/message-reason-encounter
 *
 * @generated from message google.fhir.stu3.proto.ExampleMessageReasonCodesCode
 */
export class ExampleMessageReasonCodesCode extends Message<ExampleMessageReasonCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ExampleMessageReasonCodesCode.Value value = 1;
   */
  value = ExampleMessageReasonCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExampleMessageReasonCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ExampleMessageReasonCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExampleMessageReasonCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExampleMessageReasonCodesCode {
    return new ExampleMessageReasonCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExampleMessageReasonCodesCode {
    return new ExampleMessageReasonCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExampleMessageReasonCodesCode {
    return new ExampleMessageReasonCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExampleMessageReasonCodesCode | PlainMessage<ExampleMessageReasonCodesCode> | undefined, b: ExampleMessageReasonCodesCode | PlainMessage<ExampleMessageReasonCodesCode> | undefined): boolean {
    return proto3.util.equals(ExampleMessageReasonCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ExampleMessageReasonCodesCode.Value
 */
export enum ExampleMessageReasonCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADMIT = 1;
   */
  ADMIT = 1,

  /**
   * @generated from enum value: DISCHARGE = 2;
   */
  DISCHARGE = 2,

  /**
   * @generated from enum value: ABSENT = 3;
   */
  ABSENT = 3,

  /**
   * @generated from enum value: RETURN = 4;
   */
  RETURN = 4,

  /**
   * @generated from enum value: MOVED = 5;
   */
  MOVED = 5,

  /**
   * @generated from enum value: EDIT = 6;
   */
  EDIT = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ExampleMessageReasonCodesCode_Value)
proto3.util.setEnumType(ExampleMessageReasonCodesCode_Value, "google.fhir.stu3.proto.ExampleMessageReasonCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADMIT" },
  { no: 2, name: "DISCHARGE" },
  { no: 3, name: "ABSENT" },
  { no: 4, name: "RETURN" },
  { no: 5, name: "MOVED" },
  { no: 6, name: "EDIT" },
]);

/**
 * The impact of the content of a message.
 * See http://hl7.org/fhir/ValueSet/message-significance-category
 *
 * @generated from message google.fhir.stu3.proto.MessageSignificanceCategoryCode
 */
export class MessageSignificanceCategoryCode extends Message<MessageSignificanceCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MessageSignificanceCategoryCode.Value value = 1;
   */
  value = MessageSignificanceCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageSignificanceCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageSignificanceCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageSignificanceCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageSignificanceCategoryCode {
    return new MessageSignificanceCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageSignificanceCategoryCode {
    return new MessageSignificanceCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageSignificanceCategoryCode {
    return new MessageSignificanceCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageSignificanceCategoryCode | PlainMessage<MessageSignificanceCategoryCode> | undefined, b: MessageSignificanceCategoryCode | PlainMessage<MessageSignificanceCategoryCode> | undefined): boolean {
    return proto3.util.equals(MessageSignificanceCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MessageSignificanceCategoryCode.Value
 */
export enum MessageSignificanceCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONSEQUENCE = 1;
   */
  CONSEQUENCE = 1,

  /**
   * @generated from enum value: CURRENCY = 2;
   */
  CURRENCY = 2,

  /**
   * @generated from enum value: NOTIFICATION = 3;
   */
  NOTIFICATION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MessageSignificanceCategoryCode_Value)
proto3.util.setEnumType(MessageSignificanceCategoryCode_Value, "google.fhir.stu3.proto.MessageSignificanceCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONSEQUENCE" },
  { no: 2, name: "CURRENCY" },
  { no: 3, name: "NOTIFICATION" },
]);

/**
 * The protocol used for message transport.
 * See http://hl7.org/fhir/ValueSet/message-transport
 *
 * @generated from message google.fhir.stu3.proto.MessageTransportCode
 */
export class MessageTransportCode extends Message<MessageTransportCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MessageTransportCode.Value value = 1;
   */
  value = MessageTransportCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageTransportCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MessageTransportCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageTransportCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageTransportCode {
    return new MessageTransportCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageTransportCode {
    return new MessageTransportCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageTransportCode {
    return new MessageTransportCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageTransportCode | PlainMessage<MessageTransportCode> | undefined, b: MessageTransportCode | PlainMessage<MessageTransportCode> | undefined): boolean {
    return proto3.util.equals(MessageTransportCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MessageTransportCode.Value
 */
export enum MessageTransportCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HTTP = 1;
   */
  HTTP = 1,

  /**
   * @generated from enum value: FTP = 2;
   */
  FTP = 2,

  /**
   * @generated from enum value: MLLP = 3;
   */
  MLLP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MessageTransportCode_Value)
proto3.util.setEnumType(MessageTransportCode_Value, "google.fhir.stu3.proto.MessageTransportCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HTTP" },
  { no: 2, name: "FTP" },
  { no: 3, name: "MLLP" },
]);

/**
 * Describes the state of a metric calibration.
 * See http://hl7.org/fhir/ValueSet/metric-calibration-state
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetricCalibrationStateCode
 */
export class DeviceMetricCalibrationStateCode extends Message<DeviceMetricCalibrationStateCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.Value value = 1;
   */
  value = DeviceMetricCalibrationStateCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceMetricCalibrationStateCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetricCalibrationStateCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceMetricCalibrationStateCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricCalibrationStateCode {
    return new DeviceMetricCalibrationStateCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationStateCode {
    return new DeviceMetricCalibrationStateCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationStateCode {
    return new DeviceMetricCalibrationStateCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricCalibrationStateCode | PlainMessage<DeviceMetricCalibrationStateCode> | undefined, b: DeviceMetricCalibrationStateCode | PlainMessage<DeviceMetricCalibrationStateCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricCalibrationStateCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.Value
 */
export enum DeviceMetricCalibrationStateCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_CALIBRATED = 1;
   */
  NOT_CALIBRATED = 1,

  /**
   * @generated from enum value: CALIBRATION_REQUIRED = 2;
   */
  CALIBRATION_REQUIRED = 2,

  /**
   * @generated from enum value: CALIBRATED = 3;
   */
  CALIBRATED = 3,

  /**
   * @generated from enum value: UNSPECIFIED = 4;
   */
  UNSPECIFIED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricCalibrationStateCode_Value)
proto3.util.setEnumType(DeviceMetricCalibrationStateCode_Value, "google.fhir.stu3.proto.DeviceMetricCalibrationStateCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_CALIBRATED" },
  { no: 2, name: "CALIBRATION_REQUIRED" },
  { no: 3, name: "CALIBRATED" },
  { no: 4, name: "UNSPECIFIED" },
]);

/**
 * Describes the type of a metric calibration.
 * See http://hl7.org/fhir/ValueSet/metric-calibration-type
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode
 */
export class DeviceMetricCalibrationTypeCode extends Message<DeviceMetricCalibrationTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.Value value = 1;
   */
  value = DeviceMetricCalibrationTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceMetricCalibrationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceMetricCalibrationTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricCalibrationTypeCode {
    return new DeviceMetricCalibrationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationTypeCode {
    return new DeviceMetricCalibrationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationTypeCode {
    return new DeviceMetricCalibrationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricCalibrationTypeCode | PlainMessage<DeviceMetricCalibrationTypeCode> | undefined, b: DeviceMetricCalibrationTypeCode | PlainMessage<DeviceMetricCalibrationTypeCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricCalibrationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.Value
 */
export enum DeviceMetricCalibrationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNSPECIFIED = 1;
   */
  UNSPECIFIED = 1,

  /**
   * @generated from enum value: OFFSET = 2;
   */
  OFFSET = 2,

  /**
   * @generated from enum value: GAIN = 3;
   */
  GAIN = 3,

  /**
   * @generated from enum value: TWO_POINT = 4;
   */
  TWO_POINT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricCalibrationTypeCode_Value)
proto3.util.setEnumType(DeviceMetricCalibrationTypeCode_Value, "google.fhir.stu3.proto.DeviceMetricCalibrationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNSPECIFIED" },
  { no: 2, name: "OFFSET" },
  { no: 3, name: "GAIN" },
  { no: 4, name: "TWO_POINT" },
]);

/**
 * Describes the category of the metric.
 * See http://hl7.org/fhir/ValueSet/metric-category
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetricCategoryCode
 */
export class DeviceMetricCategoryCode extends Message<DeviceMetricCategoryCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceMetricCategoryCode.Value value = 1;
   */
  value = DeviceMetricCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceMetricCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetricCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceMetricCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricCategoryCode {
    return new DeviceMetricCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricCategoryCode {
    return new DeviceMetricCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricCategoryCode {
    return new DeviceMetricCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricCategoryCode | PlainMessage<DeviceMetricCategoryCode> | undefined, b: DeviceMetricCategoryCode | PlainMessage<DeviceMetricCategoryCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceMetricCategoryCode.Value
 */
export enum DeviceMetricCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MEASUREMENT = 1;
   */
  MEASUREMENT = 1,

  /**
   * @generated from enum value: SETTING = 2;
   */
  SETTING = 2,

  /**
   * @generated from enum value: CALCULATION = 3;
   */
  CALCULATION = 3,

  /**
   * @generated from enum value: UNSPECIFIED = 4;
   */
  UNSPECIFIED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricCategoryCode_Value)
proto3.util.setEnumType(DeviceMetricCategoryCode_Value, "google.fhir.stu3.proto.DeviceMetricCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MEASUREMENT" },
  { no: 2, name: "SETTING" },
  { no: 3, name: "CALCULATION" },
  { no: 4, name: "UNSPECIFIED" },
]);

/**
 * Describes the typical color of representation.
 * See http://hl7.org/fhir/ValueSet/metric-color
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetricColorCode
 */
export class DeviceMetricColorCode extends Message<DeviceMetricColorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceMetricColorCode.Value value = 1;
   */
  value = DeviceMetricColorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceMetricColorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetricColorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceMetricColorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricColorCode {
    return new DeviceMetricColorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricColorCode {
    return new DeviceMetricColorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricColorCode {
    return new DeviceMetricColorCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricColorCode | PlainMessage<DeviceMetricColorCode> | undefined, b: DeviceMetricColorCode | PlainMessage<DeviceMetricColorCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricColorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceMetricColorCode.Value
 */
export enum DeviceMetricColorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BLACK = 1;
   */
  BLACK = 1,

  /**
   * @generated from enum value: RED = 2;
   */
  RED = 2,

  /**
   * @generated from enum value: GREEN = 3;
   */
  GREEN = 3,

  /**
   * @generated from enum value: YELLOW = 4;
   */
  YELLOW = 4,

  /**
   * @generated from enum value: BLUE = 5;
   */
  BLUE = 5,

  /**
   * @generated from enum value: MAGENTA = 6;
   */
  MAGENTA = 6,

  /**
   * @generated from enum value: CYAN = 7;
   */
  CYAN = 7,

  /**
   * @generated from enum value: WHITE = 8;
   */
  WHITE = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricColorCode_Value)
proto3.util.setEnumType(DeviceMetricColorCode_Value, "google.fhir.stu3.proto.DeviceMetricColorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BLACK" },
  { no: 2, name: "RED" },
  { no: 3, name: "GREEN" },
  { no: 4, name: "YELLOW" },
  { no: 5, name: "BLUE" },
  { no: 6, name: "MAGENTA" },
  { no: 7, name: "CYAN" },
  { no: 8, name: "WHITE" },
]);

/**
 * Describes the operational status of the DeviceMetric.
 * See http://hl7.org/fhir/ValueSet/metric-operational-status
 *
 * @generated from message google.fhir.stu3.proto.DeviceMetricOperationalStatusCode
 */
export class DeviceMetricOperationalStatusCode extends Message<DeviceMetricOperationalStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.Value value = 1;
   */
  value = DeviceMetricOperationalStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceMetricOperationalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceMetricOperationalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceMetricOperationalStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricOperationalStatusCode {
    return new DeviceMetricOperationalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricOperationalStatusCode {
    return new DeviceMetricOperationalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricOperationalStatusCode {
    return new DeviceMetricOperationalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricOperationalStatusCode | PlainMessage<DeviceMetricOperationalStatusCode> | undefined, b: DeviceMetricOperationalStatusCode | PlainMessage<DeviceMetricOperationalStatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricOperationalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.Value
 */
export enum DeviceMetricOperationalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ON = 1;
   */
  ON = 1,

  /**
   * @generated from enum value: OFF = 2;
   */
  OFF = 2,

  /**
   * @generated from enum value: STANDBY = 3;
   */
  STANDBY = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricOperationalStatusCode_Value)
proto3.util.setEnumType(DeviceMetricOperationalStatusCode_Value, "google.fhir.stu3.proto.DeviceMetricOperationalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ON" },
  { no: 2, name: "OFF" },
  { no: 3, name: "STANDBY" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * A code that represents the preferred display order of the components of a
 * human name See http://hl7.org/fhir/ValueSet/name-assembly-order
 *
 * @generated from message google.fhir.stu3.proto.HumanNameAssemblyOrderCode
 */
export class HumanNameAssemblyOrderCode extends Message<HumanNameAssemblyOrderCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.HumanNameAssemblyOrderCode.Value value = 1;
   */
  value = HumanNameAssemblyOrderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HumanNameAssemblyOrderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HumanNameAssemblyOrderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(HumanNameAssemblyOrderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameAssemblyOrderCode {
    return new HumanNameAssemblyOrderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrderCode {
    return new HumanNameAssemblyOrderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrderCode {
    return new HumanNameAssemblyOrderCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameAssemblyOrderCode | PlainMessage<HumanNameAssemblyOrderCode> | undefined, b: HumanNameAssemblyOrderCode | PlainMessage<HumanNameAssemblyOrderCode> | undefined): boolean {
    return proto3.util.equals(HumanNameAssemblyOrderCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.HumanNameAssemblyOrderCode.Value
 */
export enum HumanNameAssemblyOrderCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NL1 = 1;
   */
  NL1 = 1,

  /**
   * @generated from enum value: NL2 = 2;
   */
  NL2 = 2,

  /**
   * @generated from enum value: NL3 = 3;
   */
  NL3 = 3,

  /**
   * @generated from enum value: NL4 = 4;
   */
  NL4 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(HumanNameAssemblyOrderCode_Value)
proto3.util.setEnumType(HumanNameAssemblyOrderCode_Value, "google.fhir.stu3.proto.HumanNameAssemblyOrderCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NL1" },
  { no: 2, name: "NL2" },
  { no: 3, name: "NL3" },
  { no: 4, name: "NL4" },
]);

/**
 * A set of codes for each different representation of a name.
 * See http://hl7.org/fhir/ValueSet/name-v3-representation
 *
 * @generated from message google.fhir.stu3.proto.NameRepresentationUseCode
 */
export class NameRepresentationUseCode extends Message<NameRepresentationUseCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NameRepresentationUseCode.Value value = 1;
   */
  value = NameRepresentationUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NameRepresentationUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NameRepresentationUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NameRepresentationUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NameRepresentationUseCode {
    return new NameRepresentationUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NameRepresentationUseCode {
    return new NameRepresentationUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NameRepresentationUseCode {
    return new NameRepresentationUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: NameRepresentationUseCode | PlainMessage<NameRepresentationUseCode> | undefined, b: NameRepresentationUseCode | PlainMessage<NameRepresentationUseCode> | undefined): boolean {
    return proto3.util.equals(NameRepresentationUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NameRepresentationUseCode.Value
 */
export enum NameRepresentationUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ABC = 1;
   */
  ABC = 1,

  /**
   * @generated from enum value: IDE = 2;
   */
  IDE = 2,

  /**
   * @generated from enum value: SYL = 3;
   */
  SYL = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(NameRepresentationUseCode_Value)
proto3.util.setEnumType(NameRepresentationUseCode_Value, "google.fhir.stu3.proto.NameRepresentationUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ABC" },
  { no: 2, name: "IDE" },
  { no: 3, name: "SYL" },
]);

/**
 * Identifies the style of unique identifier used to identify a namespace.
 * See http://hl7.org/fhir/ValueSet/namingsystem-identifier-type
 *
 * @generated from message google.fhir.stu3.proto.NamingSystemIdentifierTypeCode
 */
export class NamingSystemIdentifierTypeCode extends Message<NamingSystemIdentifierTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.Value value = 1;
   */
  value = NamingSystemIdentifierTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NamingSystemIdentifierTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NamingSystemIdentifierTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NamingSystemIdentifierTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NamingSystemIdentifierTypeCode {
    return new NamingSystemIdentifierTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NamingSystemIdentifierTypeCode {
    return new NamingSystemIdentifierTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NamingSystemIdentifierTypeCode {
    return new NamingSystemIdentifierTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: NamingSystemIdentifierTypeCode | PlainMessage<NamingSystemIdentifierTypeCode> | undefined, b: NamingSystemIdentifierTypeCode | PlainMessage<NamingSystemIdentifierTypeCode> | undefined): boolean {
    return proto3.util.equals(NamingSystemIdentifierTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.Value
 */
export enum NamingSystemIdentifierTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OID = 1;
   */
  OID = 1,

  /**
   * @generated from enum value: UUID = 2;
   */
  UUID = 2,

  /**
   * @generated from enum value: URI = 3;
   */
  URI = 3,

  /**
   * @generated from enum value: OTHER = 4;
   */
  OTHER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(NamingSystemIdentifierTypeCode_Value)
proto3.util.setEnumType(NamingSystemIdentifierTypeCode_Value, "google.fhir.stu3.proto.NamingSystemIdentifierTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OID" },
  { no: 2, name: "UUID" },
  { no: 3, name: "URI" },
  { no: 4, name: "OTHER" },
]);

/**
 * Identifies the purpose of the naming system.
 * See http://hl7.org/fhir/ValueSet/namingsystem-type
 *
 * @generated from message google.fhir.stu3.proto.NamingSystemTypeCode
 */
export class NamingSystemTypeCode extends Message<NamingSystemTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NamingSystemTypeCode.Value value = 1;
   */
  value = NamingSystemTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NamingSystemTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NamingSystemTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NamingSystemTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NamingSystemTypeCode {
    return new NamingSystemTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NamingSystemTypeCode {
    return new NamingSystemTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NamingSystemTypeCode {
    return new NamingSystemTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: NamingSystemTypeCode | PlainMessage<NamingSystemTypeCode> | undefined, b: NamingSystemTypeCode | PlainMessage<NamingSystemTypeCode> | undefined): boolean {
    return proto3.util.equals(NamingSystemTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NamingSystemTypeCode.Value
 */
export enum NamingSystemTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CODESYSTEM = 1;
   */
  CODESYSTEM = 1,

  /**
   * @generated from enum value: IDENTIFIER = 2;
   */
  IDENTIFIER = 2,

  /**
   * @generated from enum value: ROOT = 3;
   */
  ROOT = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(NamingSystemTypeCode_Value)
proto3.util.setEnumType(NamingSystemTypeCode_Value, "google.fhir.stu3.proto.NamingSystemTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CODESYSTEM" },
  { no: 2, name: "IDENTIFIER" },
  { no: 3, name: "ROOT" },
]);

/**
 * The type of network access point of this agent in the audit event
 * See http://hl7.org/fhir/ValueSet/network-type
 *
 * @generated from message google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode
 */
export class AuditEventAgentNetworkTypeCode extends Message<AuditEventAgentNetworkTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.Value value = 1;
   */
  value = AuditEventAgentNetworkTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AuditEventAgentNetworkTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AuditEventAgentNetworkTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventAgentNetworkTypeCode {
    return new AuditEventAgentNetworkTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventAgentNetworkTypeCode {
    return new AuditEventAgentNetworkTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventAgentNetworkTypeCode {
    return new AuditEventAgentNetworkTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventAgentNetworkTypeCode | PlainMessage<AuditEventAgentNetworkTypeCode> | undefined, b: AuditEventAgentNetworkTypeCode | PlainMessage<AuditEventAgentNetworkTypeCode> | undefined): boolean {
    return proto3.util.equals(AuditEventAgentNetworkTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.Value
 */
export enum AuditEventAgentNetworkTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MACHINE_NAME = 1;
   */
  MACHINE_NAME = 1,

  /**
   * @generated from enum value: IP_ADDRESS = 2;
   */
  IP_ADDRESS = 2,

  /**
   * @generated from enum value: TELEPHONE_NUMBER = 3;
   */
  TELEPHONE_NUMBER = 3,

  /**
   * @generated from enum value: EMAIL_ADDRESS = 4;
   */
  EMAIL_ADDRESS = 4,

  /**
   * @generated from enum value: URI = 5;
   */
  URI = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(AuditEventAgentNetworkTypeCode_Value)
proto3.util.setEnumType(AuditEventAgentNetworkTypeCode_Value, "google.fhir.stu3.proto.AuditEventAgentNetworkTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MACHINE_NAME" },
  { no: 2, name: "IP_ADDRESS" },
  { no: 3, name: "TELEPHONE_NUMBER" },
  { no: 4, name: "EMAIL_ADDRESS" },
  { no: 5, name: "URI" },
]);

/**
 * The presentation types of notes.
 * See http://hl7.org/fhir/ValueSet/note-type
 *
 * @generated from message google.fhir.stu3.proto.NoteTypeCode
 */
export class NoteTypeCode extends Message<NoteTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NoteTypeCode.Value value = 1;
   */
  value = NoteTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NoteTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NoteTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NoteTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NoteTypeCode {
    return new NoteTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NoteTypeCode {
    return new NoteTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NoteTypeCode {
    return new NoteTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: NoteTypeCode | PlainMessage<NoteTypeCode> | undefined, b: NoteTypeCode | PlainMessage<NoteTypeCode> | undefined): boolean {
    return proto3.util.equals(NoteTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NoteTypeCode.Value
 */
export enum NoteTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DISPLAY = 1;
   */
  DISPLAY = 1,

  /**
   * @generated from enum value: PRINT = 2;
   */
  PRINT = 2,

  /**
   * @generated from enum value: PRINTOPER = 3;
   */
  PRINTOPER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(NoteTypeCode_Value)
proto3.util.setEnumType(NoteTypeCode_Value, "google.fhir.stu3.proto.NoteTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DISPLAY" },
  { no: 2, name: "PRINT" },
  { no: 3, name: "PRINTOPER" },
]);

/**
 * A collection of codes specifying why a valid value is not present.
 * See http://hl7.org/fhir/ValueSet/v3-NullFlavor
 *
 * @generated from message google.fhir.stu3.proto.NullFlavorCode
 */
export class NullFlavorCode extends Message<NullFlavorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NullFlavorCode.Value value = 1;
   */
  value = NullFlavorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NullFlavorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NullFlavorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NullFlavorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NullFlavorCode {
    return new NullFlavorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NullFlavorCode {
    return new NullFlavorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NullFlavorCode {
    return new NullFlavorCode().fromJsonString(jsonString, options);
  }

  static equals(a: NullFlavorCode | PlainMessage<NullFlavorCode> | undefined, b: NullFlavorCode | PlainMessage<NullFlavorCode> | undefined): boolean {
    return proto3.util.equals(NullFlavorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NullFlavorCode.Value
 */
export enum NullFlavorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NI = 1;
   */
  NI = 1,

  /**
   * @generated from enum value: INV = 2;
   */
  INV = 2,

  /**
   * @generated from enum value: DER = 3;
   */
  DER = 3,

  /**
   * @generated from enum value: OTH = 4;
   */
  OTH = 4,

  /**
   * @generated from enum value: NINF = 5;
   */
  NINF = 5,

  /**
   * @generated from enum value: PINF = 6;
   */
  PINF = 6,

  /**
   * @generated from enum value: UNC = 7;
   */
  UNC = 7,

  /**
   * @generated from enum value: MSK = 8;
   */
  MSK = 8,

  /**
   * @generated from enum value: NA = 9;
   */
  NA = 9,

  /**
   * @generated from enum value: UNK = 10;
   */
  UNK = 10,

  /**
   * @generated from enum value: ASKU = 11;
   */
  ASKU = 11,

  /**
   * @generated from enum value: NAV = 12;
   */
  NAV = 12,

  /**
   * @generated from enum value: NASK = 13;
   */
  NASK = 13,

  /**
   * @generated from enum value: NAVU = 14;
   */
  NAVU = 14,

  /**
   * @generated from enum value: QS = 15;
   */
  QS = 15,

  /**
   * @generated from enum value: TRC = 16;
   */
  TRC = 16,

  /**
   * @generated from enum value: NP = 17;
   */
  NP = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(NullFlavorCode_Value)
proto3.util.setEnumType(NullFlavorCode_Value, "google.fhir.stu3.proto.NullFlavorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NI" },
  { no: 2, name: "INV" },
  { no: 3, name: "DER" },
  { no: 4, name: "OTH" },
  { no: 5, name: "NINF" },
  { no: 6, name: "PINF" },
  { no: 7, name: "UNC" },
  { no: 8, name: "MSK" },
  { no: 9, name: "NA" },
  { no: 10, name: "UNK" },
  { no: 11, name: "ASKU" },
  { no: 12, name: "NAV" },
  { no: 13, name: "NASK" },
  { no: 14, name: "NAVU" },
  { no: 15, name: "QS" },
  { no: 16, name: "TRC" },
  { no: 17, name: "NP" },
]);

/**
 * Codes specifying the state of the request. Describes the lifecycle of the
 * nutrition order. See http://hl7.org/fhir/ValueSet/nutrition-request-status
 *
 * @generated from message google.fhir.stu3.proto.NutritionOrderStatusCode
 */
export class NutritionOrderStatusCode extends Message<NutritionOrderStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NutritionOrderStatusCode.Value value = 1;
   */
  value = NutritionOrderStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NutritionOrderStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NutritionOrderStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NutritionOrderStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrderStatusCode {
    return new NutritionOrderStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrderStatusCode {
    return new NutritionOrderStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrderStatusCode {
    return new NutritionOrderStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrderStatusCode | PlainMessage<NutritionOrderStatusCode> | undefined, b: NutritionOrderStatusCode | PlainMessage<NutritionOrderStatusCode> | undefined): boolean {
    return proto3.util.equals(NutritionOrderStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NutritionOrderStatusCode.Value
 */
export enum NutritionOrderStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: DRAFT = 2;
   */
  DRAFT = 2,

  /**
   * @generated from enum value: PLANNED = 3;
   */
  PLANNED = 3,

  /**
   * @generated from enum value: REQUESTED = 4;
   */
  REQUESTED = 4,

  /**
   * @generated from enum value: ACTIVE = 5;
   */
  ACTIVE = 5,

  /**
   * @generated from enum value: ON_HOLD = 6;
   */
  ON_HOLD = 6,

  /**
   * @generated from enum value: COMPLETED = 7;
   */
  COMPLETED = 7,

  /**
   * @generated from enum value: CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 9;
   */
  ENTERED_IN_ERROR = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(NutritionOrderStatusCode_Value)
proto3.util.setEnumType(NutritionOrderStatusCode_Value, "google.fhir.stu3.proto.NutritionOrderStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "DRAFT" },
  { no: 3, name: "PLANNED" },
  { no: 4, name: "REQUESTED" },
  { no: 5, name: "ACTIVE" },
  { no: 6, name: "ON_HOLD" },
  { no: 7, name: "COMPLETED" },
  { no: 8, name: "CANCELLED" },
  { no: 9, name: "ENTERED_IN_ERROR" },
]);

/**
 * Observation Category codes.
 * See http://hl7.org/fhir/ValueSet/observation-category
 *
 * @generated from message google.fhir.stu3.proto.ObservationCategoryCodesCode
 */
export class ObservationCategoryCodesCode extends Message<ObservationCategoryCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ObservationCategoryCodesCode.Value value = 1;
   */
  value = ObservationCategoryCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ObservationCategoryCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationCategoryCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationCategoryCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationCategoryCodesCode {
    return new ObservationCategoryCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationCategoryCodesCode {
    return new ObservationCategoryCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationCategoryCodesCode {
    return new ObservationCategoryCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationCategoryCodesCode | PlainMessage<ObservationCategoryCodesCode> | undefined, b: ObservationCategoryCodesCode | PlainMessage<ObservationCategoryCodesCode> | undefined): boolean {
    return proto3.util.equals(ObservationCategoryCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ObservationCategoryCodesCode.Value
 */
export enum ObservationCategoryCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOCIAL_HISTORY = 1;
   */
  SOCIAL_HISTORY = 1,

  /**
   * @generated from enum value: VITAL_SIGNS = 2;
   */
  VITAL_SIGNS = 2,

  /**
   * @generated from enum value: IMAGING = 3;
   */
  IMAGING = 3,

  /**
   * @generated from enum value: LABORATORY = 4;
   */
  LABORATORY = 4,

  /**
   * @generated from enum value: PROCEDURE = 5;
   */
  PROCEDURE = 5,

  /**
   * @generated from enum value: SURVEY = 6;
   */
  SURVEY = 6,

  /**
   * @generated from enum value: EXAM = 7;
   */
  EXAM = 7,

  /**
   * @generated from enum value: THERAPY = 8;
   */
  THERAPY = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationCategoryCodesCode_Value)
proto3.util.setEnumType(ObservationCategoryCodesCode_Value, "google.fhir.stu3.proto.ObservationCategoryCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOCIAL_HISTORY" },
  { no: 2, name: "VITAL_SIGNS" },
  { no: 3, name: "IMAGING" },
  { no: 4, name: "LABORATORY" },
  { no: 5, name: "PROCEDURE" },
  { no: 6, name: "SURVEY" },
  { no: 7, name: "EXAM" },
  { no: 8, name: "THERAPY" },
]);

/**
 * Codes specifying how two observations are related.
 * See http://hl7.org/fhir/ValueSet/observation-relationshiptypes
 *
 * @generated from message google.fhir.stu3.proto.ObservationRelationshipTypeCode
 */
export class ObservationRelationshipTypeCode extends Message<ObservationRelationshipTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode.Value value = 1;
   */
  value = ObservationRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ObservationRelationshipTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationRelationshipTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationRelationshipTypeCode {
    return new ObservationRelationshipTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationRelationshipTypeCode {
    return new ObservationRelationshipTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationRelationshipTypeCode {
    return new ObservationRelationshipTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationRelationshipTypeCode | PlainMessage<ObservationRelationshipTypeCode> | undefined, b: ObservationRelationshipTypeCode | PlainMessage<ObservationRelationshipTypeCode> | undefined): boolean {
    return proto3.util.equals(ObservationRelationshipTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ObservationRelationshipTypeCode.Value
 */
export enum ObservationRelationshipTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HAS_MEMBER = 1;
   */
  HAS_MEMBER = 1,

  /**
   * @generated from enum value: DERIVED_FROM = 2;
   */
  DERIVED_FROM = 2,

  /**
   * @generated from enum value: SEQUEL_TO = 3;
   */
  SEQUEL_TO = 3,

  /**
   * @generated from enum value: REPLACES = 4;
   */
  REPLACES = 4,

  /**
   * @generated from enum value: QUALIFIED_BY = 5;
   */
  QUALIFIED_BY = 5,

  /**
   * @generated from enum value: INTERFERED_BY = 6;
   */
  INTERFERED_BY = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationRelationshipTypeCode_Value)
proto3.util.setEnumType(ObservationRelationshipTypeCode_Value, "google.fhir.stu3.proto.ObservationRelationshipTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HAS_MEMBER" },
  { no: 2, name: "DERIVED_FROM" },
  { no: 3, name: "SEQUEL_TO" },
  { no: 4, name: "REPLACES" },
  { no: 5, name: "QUALIFIED_BY" },
  { no: 6, name: "INTERFERED_BY" },
]);

/**
 * The statistical operation parameter -\
 * See http://hl7.org/fhir/ValueSet/observation-statistics
 *
 * @generated from message google.fhir.stu3.proto.StatisticsCodeCode
 */
export class StatisticsCodeCode extends Message<StatisticsCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StatisticsCodeCode.Value value = 1;
   */
  value = StatisticsCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StatisticsCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StatisticsCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StatisticsCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatisticsCodeCode {
    return new StatisticsCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatisticsCodeCode {
    return new StatisticsCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatisticsCodeCode {
    return new StatisticsCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StatisticsCodeCode | PlainMessage<StatisticsCodeCode> | undefined, b: StatisticsCodeCode | PlainMessage<StatisticsCodeCode> | undefined): boolean {
    return proto3.util.equals(StatisticsCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StatisticsCodeCode.Value
 */
export enum StatisticsCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AVERAGE = 1;
   */
  AVERAGE = 1,

  /**
   * @generated from enum value: MAXIMUM = 2;
   */
  MAXIMUM = 2,

  /**
   * @generated from enum value: MINIMUM = 3;
   */
  MINIMUM = 3,

  /**
   * @generated from enum value: COUNT = 4;
   */
  COUNT = 4,

  /**
   * @generated from enum value: TOTALCOUNT = 5;
   */
  TOTALCOUNT = 5,

  /**
   * @generated from enum value: MEDIAN = 6;
   */
  MEDIAN = 6,

  /**
   * @generated from enum value: STD_DEV = 7;
   */
  STD_DEV = 7,

  /**
   * @generated from enum value: SUM = 8;
   */
  SUM = 8,

  /**
   * @generated from enum value: VARIANCE = 9;
   */
  VARIANCE = 9,

  /**
   * @generated from enum value: TWENTY_PERCENT = 10;
   */
  TWENTY_PERCENT = 10,

  /**
   * @generated from enum value: EIGHTY_PERCENT = 11;
   */
  EIGHTY_PERCENT = 11,

  /**
   * @generated from enum value: FOUR_LOWER = 12;
   */
  FOUR_LOWER = 12,

  /**
   * @generated from enum value: FOUR_UPPER = 13;
   */
  FOUR_UPPER = 13,

  /**
   * @generated from enum value: FOUR_DEV = 14;
   */
  FOUR_DEV = 14,

  /**
   * @generated from enum value: FIVE_ONE = 15;
   */
  FIVE_ONE = 15,

  /**
   * @generated from enum value: FIVE_TWO = 16;
   */
  FIVE_TWO = 16,

  /**
   * @generated from enum value: FIVE_THREE = 17;
   */
  FIVE_THREE = 17,

  /**
   * @generated from enum value: FIVE_FOUR = 18;
   */
  FIVE_FOUR = 18,

  /**
   * @generated from enum value: SKEW = 19;
   */
  SKEW = 19,

  /**
   * @generated from enum value: KURTOSIS = 20;
   */
  KURTOSIS = 20,

  /**
   * @generated from enum value: REGRESSION = 21;
   */
  REGRESSION = 21,
}
// Retrieve enum metadata with: proto3.getEnumType(StatisticsCodeCode_Value)
proto3.util.setEnumType(StatisticsCodeCode_Value, "google.fhir.stu3.proto.StatisticsCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AVERAGE" },
  { no: 2, name: "MAXIMUM" },
  { no: 3, name: "MINIMUM" },
  { no: 4, name: "COUNT" },
  { no: 5, name: "TOTALCOUNT" },
  { no: 6, name: "MEDIAN" },
  { no: 7, name: "STD_DEV" },
  { no: 8, name: "SUM" },
  { no: 9, name: "VARIANCE" },
  { no: 10, name: "TWENTY_PERCENT" },
  { no: 11, name: "EIGHTY_PERCENT" },
  { no: 12, name: "FOUR_LOWER" },
  { no: 13, name: "FOUR_UPPER" },
  { no: 14, name: "FOUR_DEV" },
  { no: 15, name: "FIVE_ONE" },
  { no: 16, name: "FIVE_TWO" },
  { no: 17, name: "FIVE_THREE" },
  { no: 18, name: "FIVE_FOUR" },
  { no: 19, name: "SKEW" },
  { no: 20, name: "KURTOSIS" },
  { no: 21, name: "REGRESSION" },
]);

/**
 * Codes providing the status of an observation.
 * See http://hl7.org/fhir/ValueSet/observation-status
 *
 * @generated from message google.fhir.stu3.proto.ObservationStatusCode
 */
export class ObservationStatusCode extends Message<ObservationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode.Value value = 1;
   */
  value = ObservationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ObservationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationStatusCode {
    return new ObservationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationStatusCode {
    return new ObservationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationStatusCode {
    return new ObservationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationStatusCode | PlainMessage<ObservationStatusCode> | undefined, b: ObservationStatusCode | PlainMessage<ObservationStatusCode> | undefined): boolean {
    return proto3.util.equals(ObservationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ObservationStatusCode.Value
 */
export enum ObservationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REGISTERED = 1;
   */
  REGISTERED = 1,

  /**
   * @generated from enum value: PRELIMINARY = 2;
   */
  PRELIMINARY = 2,

  /**
   * @generated from enum value: FINAL = 3;
   */
  FINAL = 3,

  /**
   * @generated from enum value: AMENDED = 4;
   */
  AMENDED = 4,

  /**
   * @generated from enum value: CORRECTED = 5;
   */
  CORRECTED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 7;
   */
  ENTERED_IN_ERROR = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationStatusCode_Value)
proto3.util.setEnumType(ObservationStatusCode_Value, "google.fhir.stu3.proto.ObservationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REGISTERED" },
  { no: 2, name: "PRELIMINARY" },
  { no: 3, name: "FINAL" },
  { no: 4, name: "AMENDED" },
  { no: 5, name: "CORRECTED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "ENTERED_IN_ERROR" },
  { no: 8, name: "UNKNOWN" },
]);

/**
 * Codes representing the current status of the device - on, off, suspended,
 * etc. See http://hl7.org/fhir/ValueSet/operational-status
 *
 * @generated from message google.fhir.stu3.proto.DeviceComponentOperationalStatusCode
 */
export class DeviceComponentOperationalStatusCode extends Message<DeviceComponentOperationalStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.Value value = 1;
   */
  value = DeviceComponentOperationalStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceComponentOperationalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceComponentOperationalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceComponentOperationalStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceComponentOperationalStatusCode {
    return new DeviceComponentOperationalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceComponentOperationalStatusCode {
    return new DeviceComponentOperationalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceComponentOperationalStatusCode {
    return new DeviceComponentOperationalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceComponentOperationalStatusCode | PlainMessage<DeviceComponentOperationalStatusCode> | undefined, b: DeviceComponentOperationalStatusCode | PlainMessage<DeviceComponentOperationalStatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceComponentOperationalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.Value
 */
export enum DeviceComponentOperationalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OFF = 1;
   */
  OFF = 1,

  /**
   * @generated from enum value: ON = 2;
   */
  ON = 2,

  /**
   * @generated from enum value: NOT_READY = 3;
   */
  NOT_READY = 3,

  /**
   * @generated from enum value: STANDBY = 4;
   */
  STANDBY = 4,

  /**
   * @generated from enum value: TRANSDUC_DISCON = 5;
   */
  TRANSDUC_DISCON = 5,

  /**
   * @generated from enum value: HW_DISCON = 6;
   */
  HW_DISCON = 6,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 7;
   */
  ENTERED_IN_ERROR = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceComponentOperationalStatusCode_Value)
proto3.util.setEnumType(DeviceComponentOperationalStatusCode_Value, "google.fhir.stu3.proto.DeviceComponentOperationalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OFF" },
  { no: 2, name: "ON" },
  { no: 3, name: "NOT_READY" },
  { no: 4, name: "STANDBY" },
  { no: 5, name: "TRANSDUC_DISCON" },
  { no: 6, name: "HW_DISCON" },
  { no: 7, name: "ENTERED_IN_ERROR" },
]);

/**
 * Whether an operation is a normal operation or a query.
 * See http://hl7.org/fhir/ValueSet/operation-kind
 *
 * @generated from message google.fhir.stu3.proto.OperationKindCode
 */
export class OperationKindCode extends Message<OperationKindCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.OperationKindCode.Value value = 1;
   */
  value = OperationKindCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<OperationKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OperationKindCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationKindCode {
    return new OperationKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationKindCode {
    return new OperationKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationKindCode {
    return new OperationKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: OperationKindCode | PlainMessage<OperationKindCode> | undefined, b: OperationKindCode | PlainMessage<OperationKindCode> | undefined): boolean {
    return proto3.util.equals(OperationKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.OperationKindCode.Value
 */
export enum OperationKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OPERATION = 1;
   */
  OPERATION = 1,

  /**
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(OperationKindCode_Value)
proto3.util.setEnumType(OperationKindCode_Value, "google.fhir.stu3.proto.OperationKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OPERATION" },
  { no: 2, name: "QUERY" },
]);

/**
 * Operation Outcome codes used by FHIR test servers (see Implementation file
 * translations.xml) See http://hl7.org/fhir/ValueSet/operation-outcome
 *
 * @generated from message google.fhir.stu3.proto.OperationOutcomeCodesCode
 */
export class OperationOutcomeCodesCode extends Message<OperationOutcomeCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.OperationOutcomeCodesCode.Value value = 1;
   */
  value = OperationOutcomeCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<OperationOutcomeCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationOutcomeCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OperationOutcomeCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationOutcomeCodesCode {
    return new OperationOutcomeCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationOutcomeCodesCode {
    return new OperationOutcomeCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationOutcomeCodesCode {
    return new OperationOutcomeCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: OperationOutcomeCodesCode | PlainMessage<OperationOutcomeCodesCode> | undefined, b: OperationOutcomeCodesCode | PlainMessage<OperationOutcomeCodesCode> | undefined): boolean {
    return proto3.util.equals(OperationOutcomeCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.OperationOutcomeCodesCode.Value
 */
export enum OperationOutcomeCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MSG_AUTH_REQUIRED = 1;
   */
  MSG_AUTH_REQUIRED = 1,

  /**
   * @generated from enum value: MSG_BAD_FORMAT = 2;
   */
  MSG_BAD_FORMAT = 2,

  /**
   * @generated from enum value: MSG_BAD_SYNTAX = 3;
   */
  MSG_BAD_SYNTAX = 3,

  /**
   * @generated from enum value: MSG_CANT_PARSE_CONTENT = 4;
   */
  MSG_CANT_PARSE_CONTENT = 4,

  /**
   * @generated from enum value: MSG_CANT_PARSE_ROOT = 5;
   */
  MSG_CANT_PARSE_ROOT = 5,

  /**
   * @generated from enum value: MSG_CREATED = 6;
   */
  MSG_CREATED = 6,

  /**
   * @generated from enum value: MSG_DATE_FORMAT = 7;
   */
  MSG_DATE_FORMAT = 7,

  /**
   * @generated from enum value: MSG_DELETED = 8;
   */
  MSG_DELETED = 8,

  /**
   * @generated from enum value: MSG_DELETED_DONE = 9;
   */
  MSG_DELETED_DONE = 9,

  /**
   * @generated from enum value: MSG_DELETED_ID = 10;
   */
  MSG_DELETED_ID = 10,

  /**
   * @generated from enum value: MSG_DUPLICATE_ID = 11;
   */
  MSG_DUPLICATE_ID = 11,

  /**
   * @generated from enum value: MSG_ERROR_PARSING = 12;
   */
  MSG_ERROR_PARSING = 12,

  /**
   * @generated from enum value: MSG_ID_INVALID = 13;
   */
  MSG_ID_INVALID = 13,

  /**
   * @generated from enum value: MSG_ID_TOO_LONG = 14;
   */
  MSG_ID_TOO_LONG = 14,

  /**
   * @generated from enum value: MSG_INVALID_ID = 15;
   */
  MSG_INVALID_ID = 15,

  /**
   * @generated from enum value: MSG_JSON_OBJECT = 16;
   */
  MSG_JSON_OBJECT = 16,

  /**
   * @generated from enum value: MSG_LOCAL_FAIL = 17;
   */
  MSG_LOCAL_FAIL = 17,

  /**
   * @generated from enum value: MSG_NO_MATCH = 18;
   */
  MSG_NO_MATCH = 18,

  /**
   * @generated from enum value: MSG_NO_EXIST = 19;
   */
  MSG_NO_EXIST = 19,

  /**
   * @generated from enum value: MSG_NO_MODULE = 20;
   */
  MSG_NO_MODULE = 20,

  /**
   * @generated from enum value: MSG_NO_SUMMARY = 21;
   */
  MSG_NO_SUMMARY = 21,

  /**
   * @generated from enum value: MSG_OP_NOT_ALLOWED = 22;
   */
  MSG_OP_NOT_ALLOWED = 22,

  /**
   * @generated from enum value: MSG_PARAM_CHAINED = 23;
   */
  MSG_PARAM_CHAINED = 23,

  /**
   * @generated from enum value: MSG_PARAM_NO_REPEAT = 24;
   */
  MSG_PARAM_NO_REPEAT = 24,

  /**
   * @generated from enum value: MSG_PARAM_UNKNOWN = 25;
   */
  MSG_PARAM_UNKNOWN = 25,

  /**
   * @generated from enum value: MSG_PARAM_INVALID = 26;
   */
  MSG_PARAM_INVALID = 26,

  /**
   * @generated from enum value: MSG_PARAM_MODIFIER_INVALID = 27;
   */
  MSG_PARAM_MODIFIER_INVALID = 27,

  /**
   * @generated from enum value: MSG_RESOURCE_EXAMPLE_PROTECTED = 28;
   */
  MSG_RESOURCE_EXAMPLE_PROTECTED = 28,

  /**
   * @generated from enum value: MSG_RESOURCE_ID_FAIL = 29;
   */
  MSG_RESOURCE_ID_FAIL = 29,

  /**
   * @generated from enum value: MSG_RESOURCE_NOT_ALLOWED = 30;
   */
  MSG_RESOURCE_NOT_ALLOWED = 30,

  /**
   * @generated from enum value: MSG_RESOURCE_REQUIRED = 31;
   */
  MSG_RESOURCE_REQUIRED = 31,

  /**
   * @generated from enum value: MSG_RESOURCE_ID_MISMATCH = 32;
   */
  MSG_RESOURCE_ID_MISMATCH = 32,

  /**
   * @generated from enum value: MSG_RESOURCE_ID_MISSING = 33;
   */
  MSG_RESOURCE_ID_MISSING = 33,

  /**
   * @generated from enum value: MSG_RESOURCE_TYPE_MISMATCH = 34;
   */
  MSG_RESOURCE_TYPE_MISMATCH = 34,

  /**
   * @generated from enum value: MSG_SORT_UNKNOWN = 35;
   */
  MSG_SORT_UNKNOWN = 35,

  /**
   * @generated from enum value: MSG_TRANSACTION_DUPLICATE_ID = 36;
   */
  MSG_TRANSACTION_DUPLICATE_ID = 36,

  /**
   * @generated from enum value: MSG_TRANSACTION_MISSING_ID = 37;
   */
  MSG_TRANSACTION_MISSING_ID = 37,

  /**
   * @generated from enum value: MSG_UNHANDLED_NODE_TYPE = 38;
   */
  MSG_UNHANDLED_NODE_TYPE = 38,

  /**
   * @generated from enum value: MSG_UNKNOWN_CONTENT = 39;
   */
  MSG_UNKNOWN_CONTENT = 39,

  /**
   * @generated from enum value: MSG_UNKNOWN_OPERATION = 40;
   */
  MSG_UNKNOWN_OPERATION = 40,

  /**
   * @generated from enum value: MSG_UNKNOWN_TYPE = 41;
   */
  MSG_UNKNOWN_TYPE = 41,

  /**
   * @generated from enum value: MSG_UPDATED = 42;
   */
  MSG_UPDATED = 42,

  /**
   * @generated from enum value: MSG_VERSION_AWARE = 43;
   */
  MSG_VERSION_AWARE = 43,

  /**
   * @generated from enum value: MSG_VERSION_AWARE_CONFLICT = 44;
   */
  MSG_VERSION_AWARE_CONFLICT = 44,

  /**
   * @generated from enum value: MSG_VERSION_AWARE_URL = 45;
   */
  MSG_VERSION_AWARE_URL = 45,

  /**
   * @generated from enum value: MSG_WRONG_NS = 46;
   */
  MSG_WRONG_NS = 46,

  /**
   * @generated from enum value: SEARCH_MULTIPLE = 47;
   */
  SEARCH_MULTIPLE = 47,

  /**
   * @generated from enum value: UPDATE_MULTIPLE_MATCHES = 48;
   */
  UPDATE_MULTIPLE_MATCHES = 48,

  /**
   * @generated from enum value: DELETE_MULTIPLE_MATCHES = 49;
   */
  DELETE_MULTIPLE_MATCHES = 49,

  /**
   * @generated from enum value: SEARCH_NONE = 50;
   */
  SEARCH_NONE = 50,
}
// Retrieve enum metadata with: proto3.getEnumType(OperationOutcomeCodesCode_Value)
proto3.util.setEnumType(OperationOutcomeCodesCode_Value, "google.fhir.stu3.proto.OperationOutcomeCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MSG_AUTH_REQUIRED" },
  { no: 2, name: "MSG_BAD_FORMAT" },
  { no: 3, name: "MSG_BAD_SYNTAX" },
  { no: 4, name: "MSG_CANT_PARSE_CONTENT" },
  { no: 5, name: "MSG_CANT_PARSE_ROOT" },
  { no: 6, name: "MSG_CREATED" },
  { no: 7, name: "MSG_DATE_FORMAT" },
  { no: 8, name: "MSG_DELETED" },
  { no: 9, name: "MSG_DELETED_DONE" },
  { no: 10, name: "MSG_DELETED_ID" },
  { no: 11, name: "MSG_DUPLICATE_ID" },
  { no: 12, name: "MSG_ERROR_PARSING" },
  { no: 13, name: "MSG_ID_INVALID" },
  { no: 14, name: "MSG_ID_TOO_LONG" },
  { no: 15, name: "MSG_INVALID_ID" },
  { no: 16, name: "MSG_JSON_OBJECT" },
  { no: 17, name: "MSG_LOCAL_FAIL" },
  { no: 18, name: "MSG_NO_MATCH" },
  { no: 19, name: "MSG_NO_EXIST" },
  { no: 20, name: "MSG_NO_MODULE" },
  { no: 21, name: "MSG_NO_SUMMARY" },
  { no: 22, name: "MSG_OP_NOT_ALLOWED" },
  { no: 23, name: "MSG_PARAM_CHAINED" },
  { no: 24, name: "MSG_PARAM_NO_REPEAT" },
  { no: 25, name: "MSG_PARAM_UNKNOWN" },
  { no: 26, name: "MSG_PARAM_INVALID" },
  { no: 27, name: "MSG_PARAM_MODIFIER_INVALID" },
  { no: 28, name: "MSG_RESOURCE_EXAMPLE_PROTECTED" },
  { no: 29, name: "MSG_RESOURCE_ID_FAIL" },
  { no: 30, name: "MSG_RESOURCE_NOT_ALLOWED" },
  { no: 31, name: "MSG_RESOURCE_REQUIRED" },
  { no: 32, name: "MSG_RESOURCE_ID_MISMATCH" },
  { no: 33, name: "MSG_RESOURCE_ID_MISSING" },
  { no: 34, name: "MSG_RESOURCE_TYPE_MISMATCH" },
  { no: 35, name: "MSG_SORT_UNKNOWN" },
  { no: 36, name: "MSG_TRANSACTION_DUPLICATE_ID" },
  { no: 37, name: "MSG_TRANSACTION_MISSING_ID" },
  { no: 38, name: "MSG_UNHANDLED_NODE_TYPE" },
  { no: 39, name: "MSG_UNKNOWN_CONTENT" },
  { no: 40, name: "MSG_UNKNOWN_OPERATION" },
  { no: 41, name: "MSG_UNKNOWN_TYPE" },
  { no: 42, name: "MSG_UPDATED" },
  { no: 43, name: "MSG_VERSION_AWARE" },
  { no: 44, name: "MSG_VERSION_AWARE_CONFLICT" },
  { no: 45, name: "MSG_VERSION_AWARE_URL" },
  { no: 46, name: "MSG_WRONG_NS" },
  { no: 47, name: "SEARCH_MULTIPLE" },
  { no: 48, name: "UPDATE_MULTIPLE_MATCHES" },
  { no: 49, name: "DELETE_MULTIPLE_MATCHES" },
  { no: 50, name: "SEARCH_NONE" },
]);

/**
 * The status of a resource narrative
 * See http://hl7.org/fhir/ValueSet/narrative-status
 *
 * @generated from message google.fhir.stu3.proto.NarrativeStatusCode
 */
export class NarrativeStatusCode extends Message<NarrativeStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.NarrativeStatusCode.Value value = 1;
   */
  value = NarrativeStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NarrativeStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.NarrativeStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NarrativeStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NarrativeStatusCode {
    return new NarrativeStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NarrativeStatusCode {
    return new NarrativeStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NarrativeStatusCode {
    return new NarrativeStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: NarrativeStatusCode | PlainMessage<NarrativeStatusCode> | undefined, b: NarrativeStatusCode | PlainMessage<NarrativeStatusCode> | undefined): boolean {
    return proto3.util.equals(NarrativeStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.NarrativeStatusCode.Value
 */
export enum NarrativeStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GENERATED = 1;
   */
  GENERATED = 1,

  /**
   * @generated from enum value: EXTENSIONS = 2;
   */
  EXTENSIONS = 2,

  /**
   * @generated from enum value: ADDITIONAL = 3;
   */
  ADDITIONAL = 3,

  /**
   * @generated from enum value: EMPTY = 4;
   */
  EMPTY = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(NarrativeStatusCode_Value)
proto3.util.setEnumType(NarrativeStatusCode_Value, "google.fhir.stu3.proto.NarrativeStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GENERATED" },
  { no: 2, name: "EXTENSIONS" },
  { no: 3, name: "ADDITIONAL" },
  { no: 4, name: "EMPTY" },
]);

/**
 * Whether an operation parameter is an input or an output parameter.
 * See http://hl7.org/fhir/ValueSet/operation-parameter-use
 *
 * @generated from message google.fhir.stu3.proto.OperationParameterUseCode
 */
export class OperationParameterUseCode extends Message<OperationParameterUseCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.OperationParameterUseCode.Value value = 1;
   */
  value = OperationParameterUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<OperationParameterUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OperationParameterUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OperationParameterUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationParameterUseCode {
    return new OperationParameterUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationParameterUseCode {
    return new OperationParameterUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationParameterUseCode {
    return new OperationParameterUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: OperationParameterUseCode | PlainMessage<OperationParameterUseCode> | undefined, b: OperationParameterUseCode | PlainMessage<OperationParameterUseCode> | undefined): boolean {
    return proto3.util.equals(OperationParameterUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.OperationParameterUseCode.Value
 */
export enum OperationParameterUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN = 1;
   */
  IN = 1,

  /**
   * @generated from enum value: OUT = 2;
   */
  OUT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(OperationParameterUseCode_Value)
proto3.util.setEnumType(OperationParameterUseCode_Value, "google.fhir.stu3.proto.OperationParameterUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN" },
  { no: 2, name: "OUT" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * a type of organization. See http://hl7.org/fhir/ValueSet/organization-type
 *
 * @generated from message google.fhir.stu3.proto.OrganizationTypeCode
 */
export class OrganizationTypeCode extends Message<OrganizationTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.OrganizationTypeCode.Value value = 1;
   */
  value = OrganizationTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<OrganizationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.OrganizationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OrganizationTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationTypeCode {
    return new OrganizationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationTypeCode {
    return new OrganizationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationTypeCode {
    return new OrganizationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationTypeCode | PlainMessage<OrganizationTypeCode> | undefined, b: OrganizationTypeCode | PlainMessage<OrganizationTypeCode> | undefined): boolean {
    return proto3.util.equals(OrganizationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.OrganizationTypeCode.Value
 */
export enum OrganizationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROV = 1;
   */
  PROV = 1,

  /**
   * @generated from enum value: DEPT = 2;
   */
  DEPT = 2,

  /**
   * @generated from enum value: TEAM = 3;
   */
  TEAM = 3,

  /**
   * @generated from enum value: GOVT = 4;
   */
  GOVT = 4,

  /**
   * @generated from enum value: INS = 5;
   */
  INS = 5,

  /**
   * @generated from enum value: EDU = 6;
   */
  EDU = 6,

  /**
   * @generated from enum value: RELI = 7;
   */
  RELI = 7,

  /**
   * @generated from enum value: CRS = 8;
   */
  CRS = 8,

  /**
   * @generated from enum value: CG = 9;
   */
  CG = 9,

  /**
   * @generated from enum value: BUS = 10;
   */
  BUS = 10,

  /**
   * @generated from enum value: OTHER = 11;
   */
  OTHER = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(OrganizationTypeCode_Value)
proto3.util.setEnumType(OrganizationTypeCode_Value, "google.fhir.stu3.proto.OrganizationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROV" },
  { no: 2, name: "DEPT" },
  { no: 3, name: "TEAM" },
  { no: 4, name: "GOVT" },
  { no: 5, name: "INS" },
  { no: 6, name: "EDU" },
  { no: 7, name: "RELI" },
  { no: 8, name: "CRS" },
  { no: 9, name: "CG" },
  { no: 10, name: "BUS" },
  { no: 11, name: "OTHER" },
]);

/**
 * Codes identifying groupings of parameters; e.g. Cardiovascular.
 * See http://hl7.org/fhir/ValueSet/parameter-group
 *
 * @generated from message google.fhir.stu3.proto.DeviceComponentParameterGroupCode
 */
export class DeviceComponentParameterGroupCode extends Message<DeviceComponentParameterGroupCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceComponentParameterGroupCode.Value value = 1;
   */
  value = DeviceComponentParameterGroupCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceComponentParameterGroupCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceComponentParameterGroupCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceComponentParameterGroupCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceComponentParameterGroupCode {
    return new DeviceComponentParameterGroupCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceComponentParameterGroupCode {
    return new DeviceComponentParameterGroupCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceComponentParameterGroupCode {
    return new DeviceComponentParameterGroupCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceComponentParameterGroupCode | PlainMessage<DeviceComponentParameterGroupCode> | undefined, b: DeviceComponentParameterGroupCode | PlainMessage<DeviceComponentParameterGroupCode> | undefined): boolean {
    return proto3.util.equals(DeviceComponentParameterGroupCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceComponentParameterGroupCode.Value
 */
export enum DeviceComponentParameterGroupCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HAEMODYNAMIC = 1;
   */
  HAEMODYNAMIC = 1,

  /**
   * @generated from enum value: ECG = 2;
   */
  ECG = 2,

  /**
   * @generated from enum value: RESPIRATORY = 3;
   */
  RESPIRATORY = 3,

  /**
   * @generated from enum value: VENTILATION = 4;
   */
  VENTILATION = 4,

  /**
   * @generated from enum value: NEUROLOGICAL = 5;
   */
  NEUROLOGICAL = 5,

  /**
   * @generated from enum value: DRUG_DELIVERY = 6;
   */
  DRUG_DELIVERY = 6,

  /**
   * @generated from enum value: FLUID_CHEMISTRY = 7;
   */
  FLUID_CHEMISTRY = 7,

  /**
   * @generated from enum value: BLOOD_CHEMISTRY = 8;
   */
  BLOOD_CHEMISTRY = 8,

  /**
   * @generated from enum value: MISCELLANEOUS = 9;
   */
  MISCELLANEOUS = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceComponentParameterGroupCode_Value)
proto3.util.setEnumType(DeviceComponentParameterGroupCode_Value, "google.fhir.stu3.proto.DeviceComponentParameterGroupCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HAEMODYNAMIC" },
  { no: 2, name: "ECG" },
  { no: 3, name: "RESPIRATORY" },
  { no: 4, name: "VENTILATION" },
  { no: 5, name: "NEUROLOGICAL" },
  { no: 6, name: "DRUG_DELIVERY" },
  { no: 7, name: "FLUID_CHEMISTRY" },
  { no: 8, name: "BLOOD_CHEMISTRY" },
  { no: 9, name: "MISCELLANEOUS" },
]);

/**
 * Is the Participant required to attend the appointment.
 * See http://hl7.org/fhir/ValueSet/participantrequired
 *
 * @generated from message google.fhir.stu3.proto.ParticipantRequiredCode
 */
export class ParticipantRequiredCode extends Message<ParticipantRequiredCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ParticipantRequiredCode.Value value = 1;
   */
  value = ParticipantRequiredCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ParticipantRequiredCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ParticipantRequiredCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ParticipantRequiredCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantRequiredCode {
    return new ParticipantRequiredCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantRequiredCode {
    return new ParticipantRequiredCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantRequiredCode {
    return new ParticipantRequiredCode().fromJsonString(jsonString, options);
  }

  static equals(a: ParticipantRequiredCode | PlainMessage<ParticipantRequiredCode> | undefined, b: ParticipantRequiredCode | PlainMessage<ParticipantRequiredCode> | undefined): boolean {
    return proto3.util.equals(ParticipantRequiredCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ParticipantRequiredCode.Value
 */
export enum ParticipantRequiredCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUIRED = 1;
   */
  REQUIRED = 1,

  /**
   * @generated from enum value: OPTIONAL = 2;
   */
  OPTIONAL = 2,

  /**
   * @generated from enum value: INFORMATION_ONLY = 3;
   */
  INFORMATION_ONLY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ParticipantRequiredCode_Value)
proto3.util.setEnumType(ParticipantRequiredCode_Value, "google.fhir.stu3.proto.ParticipantRequiredCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUIRED" },
  { no: 2, name: "OPTIONAL" },
  { no: 3, name: "INFORMATION_ONLY" },
]);

/**
 * The Participation status of an appointment.
 * See http://hl7.org/fhir/ValueSet/participationstatus
 *
 * @generated from message google.fhir.stu3.proto.ParticipationStatusCode
 */
export class ParticipationStatusCode extends Message<ParticipationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ParticipationStatusCode.Value value = 1;
   */
  value = ParticipationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ParticipationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ParticipationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ParticipationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipationStatusCode {
    return new ParticipationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipationStatusCode {
    return new ParticipationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipationStatusCode {
    return new ParticipationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ParticipationStatusCode | PlainMessage<ParticipationStatusCode> | undefined, b: ParticipationStatusCode | PlainMessage<ParticipationStatusCode> | undefined): boolean {
    return proto3.util.equals(ParticipationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ParticipationStatusCode.Value
 */
export enum ParticipationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACCEPTED = 1;
   */
  ACCEPTED = 1,

  /**
   * @generated from enum value: DECLINED = 2;
   */
  DECLINED = 2,

  /**
   * @generated from enum value: TENTATIVE = 3;
   */
  TENTATIVE = 3,

  /**
   * @generated from enum value: NEEDS_ACTION = 4;
   */
  NEEDS_ACTION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ParticipationStatusCode_Value)
proto3.util.setEnumType(ParticipationStatusCode_Value, "google.fhir.stu3.proto.ParticipationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACCEPTED" },
  { no: 2, name: "DECLINED" },
  { no: 3, name: "TENTATIVE" },
  { no: 4, name: "NEEDS_ACTION" },
]);

/**
 * The type of PlanDefinition
 * See http://hl7.org/fhir/ValueSet/plan-definition-type
 *
 * @generated from message google.fhir.stu3.proto.PlanDefinitionTypeCode
 */
export class PlanDefinitionTypeCode extends Message<PlanDefinitionTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PlanDefinitionTypeCode.Value value = 1;
   */
  value = PlanDefinitionTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinitionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PlanDefinitionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PlanDefinitionTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinitionTypeCode {
    return new PlanDefinitionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinitionTypeCode {
    return new PlanDefinitionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinitionTypeCode {
    return new PlanDefinitionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinitionTypeCode | PlainMessage<PlanDefinitionTypeCode> | undefined, b: PlanDefinitionTypeCode | PlainMessage<PlanDefinitionTypeCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinitionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PlanDefinitionTypeCode.Value
 */
export enum PlanDefinitionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ORDER_SET = 1;
   */
  ORDER_SET = 1,

  /**
   * @generated from enum value: PROTOCOL = 2;
   */
  PROTOCOL = 2,

  /**
   * @generated from enum value: ECA_RULE = 3;
   */
  ECA_RULE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(PlanDefinitionTypeCode_Value)
proto3.util.setEnumType(PlanDefinitionTypeCode_Value, "google.fhir.stu3.proto.PlanDefinitionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ORDER_SET" },
  { no: 2, name: "PROTOCOL" },
  { no: 3, name: "ECA_RULE" },
]);

/**
 * The type of PostalAddressUse
 * See http://hl7.org/fhir/ValueSet/postal-address-use
 *
 * @generated from message google.fhir.stu3.proto.PostalAddressUseTypeCode
 */
export class PostalAddressUseTypeCode extends Message<PostalAddressUseTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PostalAddressUseTypeCode.Value value = 1;
   */
  value = PostalAddressUseTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PostalAddressUseTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PostalAddressUseTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PostalAddressUseTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostalAddressUseTypeCode {
    return new PostalAddressUseTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostalAddressUseTypeCode {
    return new PostalAddressUseTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostalAddressUseTypeCode {
    return new PostalAddressUseTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PostalAddressUseTypeCode | PlainMessage<PostalAddressUseTypeCode> | undefined, b: PostalAddressUseTypeCode | PlainMessage<PostalAddressUseTypeCode> | undefined): boolean {
    return proto3.util.equals(PostalAddressUseTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PostalAddressUseTypeCode.Value
 */
export enum PostalAddressUseTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BAD_ADDRESS = 1;
   */
  BAD_ADDRESS = 1,

  /**
   * @generated from enum value: CONFIDENTIAL_ADDRESS = 2;
   */
  CONFIDENTIAL_ADDRESS = 2,

  /**
   * @generated from enum value: PRIMARY_HOME = 3;
   */
  PRIMARY_HOME = 3,

  /**
   * @generated from enum value: VACATION_HOME = 4;
   */
  VACATION_HOME = 4,

  /**
   * @generated from enum value: DIRECT = 5;
   */
  DIRECT = 5,

  /**
   * @generated from enum value: PUBLIC = 6;
   */
  PUBLIC = 6,

  /**
   * @generated from enum value: PHYSICAL_VISIT_ADDRESS = 7;
   */
  PHYSICAL_VISIT_ADDRESS = 7,

  /**
   * @generated from enum value: POSTAL_ADDRESS = 8;
   */
  POSTAL_ADDRESS = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(PostalAddressUseTypeCode_Value)
proto3.util.setEnumType(PostalAddressUseTypeCode_Value, "google.fhir.stu3.proto.PostalAddressUseTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BAD_ADDRESS" },
  { no: 2, name: "CONFIDENTIAL_ADDRESS" },
  { no: 3, name: "PRIMARY_HOME" },
  { no: 4, name: "VACATION_HOME" },
  { no: 5, name: "DIRECT" },
  { no: 6, name: "PUBLIC" },
  { no: 7, name: "PHYSICAL_VISIT_ADDRESS" },
  { no: 8, name: "POSTAL_ADDRESS" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * the role of a Practitioner. See
 * http://hl7.org/fhir/ValueSet/practitioner-role
 *
 * @generated from message google.fhir.stu3.proto.PractitionerRoleCode
 */
export class PractitionerRoleCode extends Message<PractitionerRoleCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PractitionerRoleCode.Value value = 1;
   */
  value = PractitionerRoleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PractitionerRoleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PractitionerRoleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PractitionerRoleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PractitionerRoleCode {
    return new PractitionerRoleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PractitionerRoleCode {
    return new PractitionerRoleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PractitionerRoleCode {
    return new PractitionerRoleCode().fromJsonString(jsonString, options);
  }

  static equals(a: PractitionerRoleCode | PlainMessage<PractitionerRoleCode> | undefined, b: PractitionerRoleCode | PlainMessage<PractitionerRoleCode> | undefined): boolean {
    return proto3.util.equals(PractitionerRoleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PractitionerRoleCode.Value
 */
export enum PractitionerRoleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DOCTOR = 1;
   */
  DOCTOR = 1,

  /**
   * @generated from enum value: NURSE = 2;
   */
  NURSE = 2,

  /**
   * @generated from enum value: PHARMACIST = 3;
   */
  PHARMACIST = 3,

  /**
   * @generated from enum value: RESEARCHER = 4;
   */
  RESEARCHER = 4,

  /**
   * @generated from enum value: TEACHER = 5;
   */
  TEACHER = 5,

  /**
   * @generated from enum value: ICT = 6;
   */
  ICT = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(PractitionerRoleCode_Value)
proto3.util.setEnumType(PractitionerRoleCode_Value, "google.fhir.stu3.proto.PractitionerRoleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DOCTOR" },
  { no: 2, name: "NURSE" },
  { no: 3, name: "PHARMACIST" },
  { no: 4, name: "RESEARCHER" },
  { no: 5, name: "TEACHER" },
  { no: 6, name: "ICT" },
]);

/**
 * This example value set defines a set of codes that can be used to indicate
 * the specialty of a Practitioner. See
 * http://hl7.org/fhir/ValueSet/practitioner-specialty
 *
 * @generated from message google.fhir.stu3.proto.PractitionerSpecialtyCode
 */
export class PractitionerSpecialtyCode extends Message<PractitionerSpecialtyCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PractitionerSpecialtyCode.Value value = 1;
   */
  value = PractitionerSpecialtyCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PractitionerSpecialtyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PractitionerSpecialtyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PractitionerSpecialtyCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PractitionerSpecialtyCode {
    return new PractitionerSpecialtyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PractitionerSpecialtyCode {
    return new PractitionerSpecialtyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PractitionerSpecialtyCode {
    return new PractitionerSpecialtyCode().fromJsonString(jsonString, options);
  }

  static equals(a: PractitionerSpecialtyCode | PlainMessage<PractitionerSpecialtyCode> | undefined, b: PractitionerSpecialtyCode | PlainMessage<PractitionerSpecialtyCode> | undefined): boolean {
    return proto3.util.equals(PractitionerSpecialtyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PractitionerSpecialtyCode.Value
 */
export enum PractitionerSpecialtyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CARDIO = 1;
   */
  CARDIO = 1,

  /**
   * @generated from enum value: DENT = 2;
   */
  DENT = 2,

  /**
   * @generated from enum value: DIETARY = 3;
   */
  DIETARY = 3,

  /**
   * @generated from enum value: MIDW = 4;
   */
  MIDW = 4,

  /**
   * @generated from enum value: SYSARCH = 5;
   */
  SYSARCH = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(PractitionerSpecialtyCode_Value)
proto3.util.setEnumType(PractitionerSpecialtyCode_Value, "google.fhir.stu3.proto.PractitionerSpecialtyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CARDIO" },
  { no: 2, name: "DENT" },
  { no: 3, name: "DIETARY" },
  { no: 4, name: "MIDW" },
  { no: 5, name: "SYSARCH" },
]);

/**
 * This value set is provided as an example. The value set to instantiate this
 * attribute should be drawn from a robust terminology code system that
 * consists of or contains concepts to support the procedure performance
 * process. See http://hl7.org/fhir/ValueSet/procedure-progress-status-codes
 *
 * @generated from message google.fhir.stu3.proto.ProcedureProgressStatusCodesCode
 */
export class ProcedureProgressStatusCodesCode extends Message<ProcedureProgressStatusCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.Value value = 1;
   */
  value = ProcedureProgressStatusCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ProcedureProgressStatusCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedureProgressStatusCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ProcedureProgressStatusCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureProgressStatusCodesCode {
    return new ProcedureProgressStatusCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureProgressStatusCodesCode {
    return new ProcedureProgressStatusCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureProgressStatusCodesCode {
    return new ProcedureProgressStatusCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureProgressStatusCodesCode | PlainMessage<ProcedureProgressStatusCodesCode> | undefined, b: ProcedureProgressStatusCodesCode | PlainMessage<ProcedureProgressStatusCodesCode> | undefined): boolean {
    return proto3.util.equals(ProcedureProgressStatusCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.Value
 */
export enum ProcedureProgressStatusCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_OPERATING_ROOM = 1;
   */
  IN_OPERATING_ROOM = 1,

  /**
   * @generated from enum value: PREPARED = 2;
   */
  PREPARED = 2,

  /**
   * @generated from enum value: ANESTHESIA_INDUCED = 3;
   */
  ANESTHESIA_INDUCED = 3,

  /**
   * @generated from enum value: OPEN_INCISION = 4;
   */
  OPEN_INCISION = 4,

  /**
   * @generated from enum value: CLOSED_INCISION = 5;
   */
  CLOSED_INCISION = 5,

  /**
   * @generated from enum value: IN_RECOVERY_ROOM = 6;
   */
  IN_RECOVERY_ROOM = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ProcedureProgressStatusCodesCode_Value)
proto3.util.setEnumType(ProcedureProgressStatusCodesCode_Value, "google.fhir.stu3.proto.ProcedureProgressStatusCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_OPERATING_ROOM" },
  { no: 2, name: "PREPARED" },
  { no: 3, name: "ANESTHESIA_INDUCED" },
  { no: 4, name: "OPEN_INCISION" },
  { no: 5, name: "CLOSED_INCISION" },
  { no: 6, name: "IN_RECOVERY_ROOM" },
]);

/**
 * How an entity was used in an activity.
 * See http://hl7.org/fhir/ValueSet/provenance-entity-role
 *
 * @generated from message google.fhir.stu3.proto.ProvenanceEntityRoleCode
 */
export class ProvenanceEntityRoleCode extends Message<ProvenanceEntityRoleCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ProvenanceEntityRoleCode.Value value = 1;
   */
  value = ProvenanceEntityRoleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ProvenanceEntityRoleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProvenanceEntityRoleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ProvenanceEntityRoleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProvenanceEntityRoleCode {
    return new ProvenanceEntityRoleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProvenanceEntityRoleCode {
    return new ProvenanceEntityRoleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProvenanceEntityRoleCode {
    return new ProvenanceEntityRoleCode().fromJsonString(jsonString, options);
  }

  static equals(a: ProvenanceEntityRoleCode | PlainMessage<ProvenanceEntityRoleCode> | undefined, b: ProvenanceEntityRoleCode | PlainMessage<ProvenanceEntityRoleCode> | undefined): boolean {
    return proto3.util.equals(ProvenanceEntityRoleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ProvenanceEntityRoleCode.Value
 */
export enum ProvenanceEntityRoleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DERIVATION = 1;
   */
  DERIVATION = 1,

  /**
   * @generated from enum value: REVISION = 2;
   */
  REVISION = 2,

  /**
   * @generated from enum value: QUOTATION = 3;
   */
  QUOTATION = 3,

  /**
   * @generated from enum value: SOURCE = 4;
   */
  SOURCE = 4,

  /**
   * @generated from enum value: REMOVAL = 5;
   */
  REMOVAL = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ProvenanceEntityRoleCode_Value)
proto3.util.setEnumType(ProvenanceEntityRoleCode_Value, "google.fhir.stu3.proto.ProvenanceEntityRoleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DERIVATION" },
  { no: 2, name: "REVISION" },
  { no: 3, name: "QUOTATION" },
  { no: 4, name: "SOURCE" },
  { no: 5, name: "REMOVAL" },
]);

/**
 * The lifecycle status of a Value Set or Concept Map.
 * See http://hl7.org/fhir/ValueSet/publication-status
 *
 * @generated from message google.fhir.stu3.proto.PublicationStatusCode
 */
export class PublicationStatusCode extends Message<PublicationStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PublicationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PublicationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicationStatusCode {
    return new PublicationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicationStatusCode {
    return new PublicationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicationStatusCode {
    return new PublicationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: PublicationStatusCode | PlainMessage<PublicationStatusCode> | undefined, b: PublicationStatusCode | PlainMessage<PublicationStatusCode> | undefined): boolean {
    return proto3.util.equals(PublicationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PublicationStatusCode.Value
 */
export enum PublicationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: RETIRED = 3;
   */
  RETIRED = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(PublicationStatusCode_Value)
proto3.util.setEnumType(PublicationStatusCode_Value, "google.fhir.stu3.proto.PublicationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "RETIRED" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Type for quality report
 * See http://hl7.org/fhir/ValueSet/quality-type
 *
 * @generated from message google.fhir.stu3.proto.QualityTypeCode
 */
export class QualityTypeCode extends Message<QualityTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.QualityTypeCode.Value value = 1;
   */
  value = QualityTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QualityTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QualityTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QualityTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QualityTypeCode {
    return new QualityTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QualityTypeCode {
    return new QualityTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QualityTypeCode {
    return new QualityTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: QualityTypeCode | PlainMessage<QualityTypeCode> | undefined, b: QualityTypeCode | PlainMessage<QualityTypeCode> | undefined): boolean {
    return proto3.util.equals(QualityTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.QualityTypeCode.Value
 */
export enum QualityTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INDEL = 1;
   */
  INDEL = 1,

  /**
   * @generated from enum value: SNP = 2;
   */
  SNP = 2,

  /**
   * @generated from enum value: UNKNOWN = 3;
   */
  UNKNOWN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(QualityTypeCode_Value)
proto3.util.setEnumType(QualityTypeCode_Value, "google.fhir.stu3.proto.QualityTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INDEL" },
  { no: 2, name: "SNP" },
  { no: 3, name: "UNKNOWN" },
]);

/**
 * Flags an element as having unlimited repetitions
 * See http://hl7.org/fhir/ValueSet/question-max-occurs
 *
 * @generated from message google.fhir.stu3.proto.MaxOccursCode
 */
export class MaxOccursCode extends Message<MaxOccursCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.MaxOccursCode.Value value = 1;
   */
  value = MaxOccursCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MaxOccursCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MaxOccursCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MaxOccursCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MaxOccursCode {
    return new MaxOccursCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MaxOccursCode {
    return new MaxOccursCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MaxOccursCode {
    return new MaxOccursCode().fromJsonString(jsonString, options);
  }

  static equals(a: MaxOccursCode | PlainMessage<MaxOccursCode> | undefined, b: MaxOccursCode | PlainMessage<MaxOccursCode> | undefined): boolean {
    return proto3.util.equals(MaxOccursCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.MaxOccursCode.Value
 */
export enum MaxOccursCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MAX = 1;
   */
  MAX = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(MaxOccursCode_Value)
proto3.util.setEnumType(MaxOccursCode_Value, "google.fhir.stu3.proto.MaxOccursCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MAX" },
]);

/**
 * Lifecycle status of the questionnaire response.
 * See http://hl7.org/fhir/ValueSet/questionnaire-answers-status
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireResponseStatusCode
 */
export class QuestionnaireResponseStatusCode extends Message<QuestionnaireResponseStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.QuestionnaireResponseStatusCode.Value value = 1;
   */
  value = QuestionnaireResponseStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponseStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireResponseStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireResponseStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseStatusCode {
    return new QuestionnaireResponseStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseStatusCode {
    return new QuestionnaireResponseStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseStatusCode {
    return new QuestionnaireResponseStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseStatusCode | PlainMessage<QuestionnaireResponseStatusCode> | undefined, b: QuestionnaireResponseStatusCode | PlainMessage<QuestionnaireResponseStatusCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.QuestionnaireResponseStatusCode.Value
 */
export enum QuestionnaireResponseStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: AMENDED = 3;
   */
  AMENDED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireResponseStatusCode_Value)
proto3.util.setEnumType(QuestionnaireResponseStatusCode_Value, "google.fhir.stu3.proto.QuestionnaireResponseStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "AMENDED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
  { no: 5, name: "STOPPED" },
]);

/**
 * Codes defining the purpose of a Questionnaire item of type 'text'.
 * See http://hl7.org/fhir/ValueSet/questionnaire-display-category
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireTextCategoriesCode
 */
export class QuestionnaireTextCategoriesCode extends Message<QuestionnaireTextCategoriesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.Value value = 1;
   */
  value = QuestionnaireTextCategoriesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireTextCategoriesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireTextCategoriesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireTextCategoriesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireTextCategoriesCode {
    return new QuestionnaireTextCategoriesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireTextCategoriesCode {
    return new QuestionnaireTextCategoriesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireTextCategoriesCode {
    return new QuestionnaireTextCategoriesCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireTextCategoriesCode | PlainMessage<QuestionnaireTextCategoriesCode> | undefined, b: QuestionnaireTextCategoriesCode | PlainMessage<QuestionnaireTextCategoriesCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireTextCategoriesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.Value
 */
export enum QuestionnaireTextCategoriesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTRUCTIONS = 1;
   */
  INSTRUCTIONS = 1,

  /**
   * @generated from enum value: SECURITY = 2;
   */
  SECURITY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireTextCategoriesCode_Value)
proto3.util.setEnumType(QuestionnaireTextCategoriesCode_Value, "google.fhir.stu3.proto.QuestionnaireTextCategoriesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTRUCTIONS" },
  { no: 2, name: "SECURITY" },
]);

/**
 * Starter set of user interface control/display mechanisms that might be used
 * when rendering an item in a questionnaire. See
 * http://hl7.org/fhir/ValueSet/questionnaire-item-control
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode
 */
export class QuestionnaireItemUIControlCodesCode extends Message<QuestionnaireItemUIControlCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.Value value = 1;
   */
  value = QuestionnaireItemUIControlCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireItemUIControlCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireItemUIControlCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemUIControlCodesCode {
    return new QuestionnaireItemUIControlCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemUIControlCodesCode {
    return new QuestionnaireItemUIControlCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemUIControlCodesCode {
    return new QuestionnaireItemUIControlCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemUIControlCodesCode | PlainMessage<QuestionnaireItemUIControlCodesCode> | undefined, b: QuestionnaireItemUIControlCodesCode | PlainMessage<QuestionnaireItemUIControlCodesCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemUIControlCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.Value
 */
export enum QuestionnaireItemUIControlCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LIST = 1;
   */
  LIST = 1,

  /**
   * @generated from enum value: TABLE = 2;
   */
  TABLE = 2,

  /**
   * @generated from enum value: HEADER = 3;
   */
  HEADER = 3,

  /**
   * @generated from enum value: FOOTER = 4;
   */
  FOOTER = 4,

  /**
   * @generated from enum value: INLINE = 5;
   */
  INLINE = 5,

  /**
   * @generated from enum value: PROMPT = 6;
   */
  PROMPT = 6,

  /**
   * @generated from enum value: UNIT = 7;
   */
  UNIT = 7,

  /**
   * @generated from enum value: LOWER = 8;
   */
  LOWER = 8,

  /**
   * @generated from enum value: UPPER = 9;
   */
  UPPER = 9,

  /**
   * @generated from enum value: FLYOVER = 10;
   */
  FLYOVER = 10,

  /**
   * @generated from enum value: HELP = 11;
   */
  HELP = 11,

  /**
   * @generated from enum value: AUTOCOMPLETE = 12;
   */
  AUTOCOMPLETE = 12,

  /**
   * @generated from enum value: DROP_DOWN = 13;
   */
  DROP_DOWN = 13,

  /**
   * @generated from enum value: CHECK_BOX = 14;
   */
  CHECK_BOX = 14,

  /**
   * @generated from enum value: LOOKUP = 15;
   */
  LOOKUP = 15,

  /**
   * @generated from enum value: RADIO_BUTTON = 16;
   */
  RADIO_BUTTON = 16,

  /**
   * @generated from enum value: SLIDER = 17;
   */
  SLIDER = 17,

  /**
   * @generated from enum value: SPINNER = 18;
   */
  SPINNER = 18,

  /**
   * @generated from enum value: TEXT_BOX = 19;
   */
  TEXT_BOX = 19,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireItemUIControlCodesCode_Value)
proto3.util.setEnumType(QuestionnaireItemUIControlCodesCode_Value, "google.fhir.stu3.proto.QuestionnaireItemUIControlCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LIST" },
  { no: 2, name: "TABLE" },
  { no: 3, name: "HEADER" },
  { no: 4, name: "FOOTER" },
  { no: 5, name: "INLINE" },
  { no: 6, name: "PROMPT" },
  { no: 7, name: "UNIT" },
  { no: 8, name: "LOWER" },
  { no: 9, name: "UPPER" },
  { no: 10, name: "FLYOVER" },
  { no: 11, name: "HELP" },
  { no: 12, name: "AUTOCOMPLETE" },
  { no: 13, name: "DROP_DOWN" },
  { no: 14, name: "CHECK_BOX" },
  { no: 15, name: "LOOKUP" },
  { no: 16, name: "RADIO_BUTTON" },
  { no: 17, name: "SLIDER" },
  { no: 18, name: "SPINNER" },
  { no: 19, name: "TEXT_BOX" },
]);

/**
 * Identifies the modes of usage of a questionnaire that should enable a
 * particular questionnaire item See
 * http://hl7.org/fhir/ValueSet/questionnaire-usage-mode
 *
 * @generated from message google.fhir.stu3.proto.QuestionnaireItemUsageModeCode
 */
export class QuestionnaireItemUsageModeCode extends Message<QuestionnaireItemUsageModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.Value value = 1;
   */
  value = QuestionnaireItemUsageModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireItemUsageModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.QuestionnaireItemUsageModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireItemUsageModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemUsageModeCode {
    return new QuestionnaireItemUsageModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemUsageModeCode {
    return new QuestionnaireItemUsageModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemUsageModeCode {
    return new QuestionnaireItemUsageModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemUsageModeCode | PlainMessage<QuestionnaireItemUsageModeCode> | undefined, b: QuestionnaireItemUsageModeCode | PlainMessage<QuestionnaireItemUsageModeCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemUsageModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.Value
 */
export enum QuestionnaireItemUsageModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CAPTURE_DISPLAY = 1;
   */
  CAPTURE_DISPLAY = 1,

  /**
   * @generated from enum value: CAPTURE = 2;
   */
  CAPTURE = 2,

  /**
   * @generated from enum value: DISPLAY = 3;
   */
  DISPLAY = 3,

  /**
   * @generated from enum value: DISPLAY_NON_EMPTY = 4;
   */
  DISPLAY_NON_EMPTY = 4,

  /**
   * @generated from enum value: CAPTURE_DISPLAY_NON_EMPTY = 5;
   */
  CAPTURE_DISPLAY_NON_EMPTY = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireItemUsageModeCode_Value)
proto3.util.setEnumType(QuestionnaireItemUsageModeCode_Value, "google.fhir.stu3.proto.QuestionnaireItemUsageModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CAPTURE_DISPLAY" },
  { no: 2, name: "CAPTURE" },
  { no: 3, name: "DISPLAY" },
  { no: 4, name: "DISPLAY_NON_EMPTY" },
  { no: 5, name: "CAPTURE_DISPLAY_NON_EMPTY" },
]);

/**
 * Statement about the degree of clinical certainty that a specific substance
 * was the cause of the manifestation in a reaction event. See
 * http://hl7.org/fhir/ValueSet/reaction-event-certainty
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode
 */
export class AllergyIntoleranceCertaintyCode extends Message<AllergyIntoleranceCertaintyCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.Value value = 1;
   */
  value = AllergyIntoleranceCertaintyCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceCertaintyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceCertaintyCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCertaintyCode {
    return new AllergyIntoleranceCertaintyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCertaintyCode {
    return new AllergyIntoleranceCertaintyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCertaintyCode {
    return new AllergyIntoleranceCertaintyCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCertaintyCode | PlainMessage<AllergyIntoleranceCertaintyCode> | undefined, b: AllergyIntoleranceCertaintyCode | PlainMessage<AllergyIntoleranceCertaintyCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCertaintyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.Value
 */
export enum AllergyIntoleranceCertaintyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNLIKELY = 1;
   */
  UNLIKELY = 1,

  /**
   * @generated from enum value: LIKELY = 2;
   */
  LIKELY = 2,

  /**
   * @generated from enum value: CONFIRMED = 3;
   */
  CONFIRMED = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceCertaintyCode_Value)
proto3.util.setEnumType(AllergyIntoleranceCertaintyCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceCertaintyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNLIKELY" },
  { no: 2, name: "LIKELY" },
  { no: 3, name: "CONFIRMED" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Clinical assessment of the severity of a reaction event as a whole,
 * potentially considering multiple different manifestations. See
 * http://hl7.org/fhir/ValueSet/reaction-event-severity
 *
 * @generated from message google.fhir.stu3.proto.AllergyIntoleranceSeverityCode
 */
export class AllergyIntoleranceSeverityCode extends Message<AllergyIntoleranceSeverityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.Value value = 1;
   */
  value = AllergyIntoleranceSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AllergyIntoleranceSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.AllergyIntoleranceSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceSeverityCode {
    return new AllergyIntoleranceSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceSeverityCode {
    return new AllergyIntoleranceSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceSeverityCode {
    return new AllergyIntoleranceSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceSeverityCode | PlainMessage<AllergyIntoleranceSeverityCode> | undefined, b: AllergyIntoleranceSeverityCode | PlainMessage<AllergyIntoleranceSeverityCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.Value
 */
export enum AllergyIntoleranceSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MILD = 1;
   */
  MILD = 1,

  /**
   * @generated from enum value: MODERATE = 2;
   */
  MODERATE = 2,

  /**
   * @generated from enum value: SEVERE = 3;
   */
  SEVERE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceSeverityCode_Value)
proto3.util.setEnumType(AllergyIntoleranceSeverityCode_Value, "google.fhir.stu3.proto.AllergyIntoleranceSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MILD" },
  { no: 2, name: "MODERATE" },
  { no: 3, name: "SEVERE" },
]);

/**
 * This value set is provided as an example. The value set to instantiate this
 * attribute should be drawn from a robust terminology code system that
 * consists of or contains concepts to support the medication process. See
 * http://hl7.org/fhir/ValueSet/reason-medication-given-codes
 *
 * @generated from message google.fhir.stu3.proto.ReasonMedicationGivenCodesCode
 */
export class ReasonMedicationGivenCodesCode extends Message<ReasonMedicationGivenCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.Value value = 1;
   */
  value = ReasonMedicationGivenCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ReasonMedicationGivenCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReasonMedicationGivenCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ReasonMedicationGivenCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReasonMedicationGivenCodesCode {
    return new ReasonMedicationGivenCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReasonMedicationGivenCodesCode {
    return new ReasonMedicationGivenCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReasonMedicationGivenCodesCode {
    return new ReasonMedicationGivenCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReasonMedicationGivenCodesCode | PlainMessage<ReasonMedicationGivenCodesCode> | undefined, b: ReasonMedicationGivenCodesCode | PlainMessage<ReasonMedicationGivenCodesCode> | undefined): boolean {
    return proto3.util.equals(ReasonMedicationGivenCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.Value
 */
export enum ReasonMedicationGivenCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: A = 1;
   */
  A = 1,

  /**
   * @generated from enum value: B = 2;
   */
  B = 2,

  /**
   * @generated from enum value: C = 3;
   */
  C = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ReasonMedicationGivenCodesCode_Value)
proto3.util.setEnumType(ReasonMedicationGivenCodesCode_Value, "google.fhir.stu3.proto.ReasonMedicationGivenCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "A" },
  { no: 2, name: "B" },
  { no: 3, name: "C" },
]);

/**
 * A set of flags that defines how references are supported.
 * See http://hl7.org/fhir/ValueSet/reference-handling-policy
 *
 * @generated from message google.fhir.stu3.proto.ReferenceHandlingPolicyCode
 */
export class ReferenceHandlingPolicyCode extends Message<ReferenceHandlingPolicyCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ReferenceHandlingPolicyCode.Value value = 1;
   */
  value = ReferenceHandlingPolicyCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ReferenceHandlingPolicyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReferenceHandlingPolicyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ReferenceHandlingPolicyCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceHandlingPolicyCode {
    return new ReferenceHandlingPolicyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceHandlingPolicyCode {
    return new ReferenceHandlingPolicyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceHandlingPolicyCode {
    return new ReferenceHandlingPolicyCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReferenceHandlingPolicyCode | PlainMessage<ReferenceHandlingPolicyCode> | undefined, b: ReferenceHandlingPolicyCode | PlainMessage<ReferenceHandlingPolicyCode> | undefined): boolean {
    return proto3.util.equals(ReferenceHandlingPolicyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ReferenceHandlingPolicyCode.Value
 */
export enum ReferenceHandlingPolicyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LITERAL = 1;
   */
  LITERAL = 1,

  /**
   * @generated from enum value: LOGICAL = 2;
   */
  LOGICAL = 2,

  /**
   * @generated from enum value: RESOLVES = 3;
   */
  RESOLVES = 3,

  /**
   * @generated from enum value: ENFORCED = 4;
   */
  ENFORCED = 4,

  /**
   * @generated from enum value: LOCAL = 5;
   */
  LOCAL = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ReferenceHandlingPolicyCode_Value)
proto3.util.setEnumType(ReferenceHandlingPolicyCode_Value, "google.fhir.stu3.proto.ReferenceHandlingPolicyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LITERAL" },
  { no: 2, name: "LOGICAL" },
  { no: 3, name: "RESOLVES" },
  { no: 4, name: "ENFORCED" },
  { no: 5, name: "LOCAL" },
]);

/**
 * The type of relationship to the related artifact
 * See http://hl7.org/fhir/ValueSet/related-artifact-type
 *
 * @generated from message google.fhir.stu3.proto.RelatedArtifactTypeCode
 */
export class RelatedArtifactTypeCode extends Message<RelatedArtifactTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RelatedArtifactTypeCode.Value value = 1;
   */
  value = RelatedArtifactTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RelatedArtifactTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RelatedArtifactTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RelatedArtifactTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedArtifactTypeCode {
    return new RelatedArtifactTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedArtifactTypeCode {
    return new RelatedArtifactTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedArtifactTypeCode {
    return new RelatedArtifactTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedArtifactTypeCode | PlainMessage<RelatedArtifactTypeCode> | undefined, b: RelatedArtifactTypeCode | PlainMessage<RelatedArtifactTypeCode> | undefined): boolean {
    return proto3.util.equals(RelatedArtifactTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RelatedArtifactTypeCode.Value
 */
export enum RelatedArtifactTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DOCUMENTATION = 1;
   */
  DOCUMENTATION = 1,

  /**
   * @generated from enum value: JUSTIFICATION = 2;
   */
  JUSTIFICATION = 2,

  /**
   * @generated from enum value: CITATION = 3;
   */
  CITATION = 3,

  /**
   * @generated from enum value: PREDECESSOR = 4;
   */
  PREDECESSOR = 4,

  /**
   * @generated from enum value: SUCCESSOR = 5;
   */
  SUCCESSOR = 5,

  /**
   * @generated from enum value: DERIVED_FROM = 6;
   */
  DERIVED_FROM = 6,

  /**
   * @generated from enum value: DEPENDS_ON = 7;
   */
  DEPENDS_ON = 7,

  /**
   * @generated from enum value: COMPOSED_OF = 8;
   */
  COMPOSED_OF = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(RelatedArtifactTypeCode_Value)
proto3.util.setEnumType(RelatedArtifactTypeCode_Value, "google.fhir.stu3.proto.RelatedArtifactTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DOCUMENTATION" },
  { no: 2, name: "JUSTIFICATION" },
  { no: 3, name: "CITATION" },
  { no: 4, name: "PREDECESSOR" },
  { no: 5, name: "SUCCESSOR" },
  { no: 6, name: "DERIVED_FROM" },
  { no: 7, name: "DEPENDS_ON" },
  { no: 8, name: "COMPOSED_OF" },
]);

/**
 * This value set defines a set of codes that can be used to indicate the
 * meaning/use of a reference range for a particular target population. See
 * http://hl7.org/fhir/ValueSet/referencerange-meaning
 *
 * @generated from message google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode
 */
export class ObservationReferenceRangeMeaningCodesCode extends Message<ObservationReferenceRangeMeaningCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.Value value = 1;
   */
  value = ObservationReferenceRangeMeaningCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ObservationReferenceRangeMeaningCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationReferenceRangeMeaningCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationReferenceRangeMeaningCodesCode {
    return new ObservationReferenceRangeMeaningCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationReferenceRangeMeaningCodesCode {
    return new ObservationReferenceRangeMeaningCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationReferenceRangeMeaningCodesCode {
    return new ObservationReferenceRangeMeaningCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationReferenceRangeMeaningCodesCode | PlainMessage<ObservationReferenceRangeMeaningCodesCode> | undefined, b: ObservationReferenceRangeMeaningCodesCode | PlainMessage<ObservationReferenceRangeMeaningCodesCode> | undefined): boolean {
    return proto3.util.equals(ObservationReferenceRangeMeaningCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.Value
 */
export enum ObservationReferenceRangeMeaningCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * @generated from enum value: RECOMMENDED = 2;
   */
  RECOMMENDED = 2,

  /**
   * @generated from enum value: TREATMENT = 3;
   */
  TREATMENT = 3,

  /**
   * @generated from enum value: THERAPEUTIC = 4;
   */
  THERAPEUTIC = 4,

  /**
   * @generated from enum value: PRE = 5;
   */
  PRE = 5,

  /**
   * @generated from enum value: POST = 6;
   */
  POST = 6,

  /**
   * @generated from enum value: PRE_PUBERTY = 7;
   */
  PRE_PUBERTY = 7,

  /**
   * @generated from enum value: FOLLICULAR = 8;
   */
  FOLLICULAR = 8,

  /**
   * @generated from enum value: MIDCYCLE = 9;
   */
  MIDCYCLE = 9,

  /**
   * @generated from enum value: LUTEAL = 10;
   */
  LUTEAL = 10,

  /**
   * @generated from enum value: POSTMEOPAUSAL = 11;
   */
  POSTMEOPAUSAL = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationReferenceRangeMeaningCodesCode_Value)
proto3.util.setEnumType(ObservationReferenceRangeMeaningCodesCode_Value, "google.fhir.stu3.proto.ObservationReferenceRangeMeaningCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NORMAL" },
  { no: 2, name: "RECOMMENDED" },
  { no: 3, name: "TREATMENT" },
  { no: 4, name: "THERAPEUTIC" },
  { no: 5, name: "PRE" },
  { no: 6, name: "POST" },
  { no: 7, name: "PRE_PUBERTY" },
  { no: 8, name: "FOLLICULAR" },
  { no: 9, name: "MIDCYCLE" },
  { no: 10, name: "LUTEAL" },
  { no: 11, name: "POSTMEOPAUSAL" },
]);

/**
 * The results of executing an action.
 * See http://hl7.org/fhir/ValueSet/report-action-result-codes
 *
 * @generated from message google.fhir.stu3.proto.TestReportActionResultCode
 */
export class TestReportActionResultCode extends Message<TestReportActionResultCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestReportActionResultCode.Value value = 1;
   */
  value = TestReportActionResultCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReportActionResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReportActionResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportActionResultCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportActionResultCode {
    return new TestReportActionResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportActionResultCode {
    return new TestReportActionResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportActionResultCode {
    return new TestReportActionResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportActionResultCode | PlainMessage<TestReportActionResultCode> | undefined, b: TestReportActionResultCode | PlainMessage<TestReportActionResultCode> | undefined): boolean {
    return proto3.util.equals(TestReportActionResultCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestReportActionResultCode.Value
 */
export enum TestReportActionResultCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PASS = 1;
   */
  PASS = 1,

  /**
   * @generated from enum value: SKIP = 2;
   */
  SKIP = 2,

  /**
   * @generated from enum value: FAIL = 3;
   */
  FAIL = 3,

  /**
   * @generated from enum value: WARNING = 4;
   */
  WARNING = 4,

  /**
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportActionResultCode_Value)
proto3.util.setEnumType(TestReportActionResultCode_Value, "google.fhir.stu3.proto.TestReportActionResultCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PASS" },
  { no: 2, name: "SKIP" },
  { no: 3, name: "FAIL" },
  { no: 4, name: "WARNING" },
  { no: 5, name: "ERROR" },
]);

/**
 * The type of participant.
 * See http://hl7.org/fhir/ValueSet/report-participant-type
 *
 * @generated from message google.fhir.stu3.proto.TestReportParticipantTypeCode
 */
export class TestReportParticipantTypeCode extends Message<TestReportParticipantTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestReportParticipantTypeCode.Value value = 1;
   */
  value = TestReportParticipantTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReportParticipantTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReportParticipantTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportParticipantTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportParticipantTypeCode {
    return new TestReportParticipantTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportParticipantTypeCode {
    return new TestReportParticipantTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportParticipantTypeCode {
    return new TestReportParticipantTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportParticipantTypeCode | PlainMessage<TestReportParticipantTypeCode> | undefined, b: TestReportParticipantTypeCode | PlainMessage<TestReportParticipantTypeCode> | undefined): boolean {
    return proto3.util.equals(TestReportParticipantTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestReportParticipantTypeCode.Value
 */
export enum TestReportParticipantTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TEST_ENGINE = 1;
   */
  TEST_ENGINE = 1,

  /**
   * @generated from enum value: CLIENT = 2;
   */
  CLIENT = 2,

  /**
   * @generated from enum value: SERVER = 3;
   */
  SERVER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportParticipantTypeCode_Value)
proto3.util.setEnumType(TestReportParticipantTypeCode_Value, "google.fhir.stu3.proto.TestReportParticipantTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TEST_ENGINE" },
  { no: 2, name: "CLIENT" },
  { no: 3, name: "SERVER" },
]);

/**
 * The reported execution result.
 * See http://hl7.org/fhir/ValueSet/report-result-codes
 *
 * @generated from message google.fhir.stu3.proto.TestReportResultCode
 */
export class TestReportResultCode extends Message<TestReportResultCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestReportResultCode.Value value = 1;
   */
  value = TestReportResultCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReportResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReportResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportResultCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportResultCode {
    return new TestReportResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportResultCode {
    return new TestReportResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportResultCode {
    return new TestReportResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportResultCode | PlainMessage<TestReportResultCode> | undefined, b: TestReportResultCode | PlainMessage<TestReportResultCode> | undefined): boolean {
    return proto3.util.equals(TestReportResultCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestReportResultCode.Value
 */
export enum TestReportResultCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PASS = 1;
   */
  PASS = 1,

  /**
   * @generated from enum value: FAIL = 2;
   */
  FAIL = 2,

  /**
   * @generated from enum value: PENDING = 3;
   */
  PENDING = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportResultCode_Value)
proto3.util.setEnumType(TestReportResultCode_Value, "google.fhir.stu3.proto.TestReportResultCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PASS" },
  { no: 2, name: "FAIL" },
  { no: 3, name: "PENDING" },
]);

/**
 * The current status of the test report.
 * See http://hl7.org/fhir/ValueSet/report-status-codes
 *
 * @generated from message google.fhir.stu3.proto.TestReportStatusCode
 */
export class TestReportStatusCode extends Message<TestReportStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestReportStatusCode.Value value = 1;
   */
  value = TestReportStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReportStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestReportStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportStatusCode {
    return new TestReportStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportStatusCode {
    return new TestReportStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportStatusCode {
    return new TestReportStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportStatusCode | PlainMessage<TestReportStatusCode> | undefined, b: TestReportStatusCode | PlainMessage<TestReportStatusCode> | undefined): boolean {
    return proto3.util.equals(TestReportStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestReportStatusCode.Value
 */
export enum TestReportStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPLETED = 1;
   */
  COMPLETED = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: WAITING = 3;
   */
  WAITING = 3,

  /**
   * @generated from enum value: STOPPED = 4;
   */
  STOPPED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportStatusCode_Value)
proto3.util.setEnumType(TestReportStatusCode_Value, "google.fhir.stu3.proto.TestReportStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPLETED" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "WAITING" },
  { no: 4, name: "STOPPED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * Type for access of external URI
 * See http://hl7.org/fhir/ValueSet/repository-type
 *
 * @generated from message google.fhir.stu3.proto.RepositoryTypeCode
 */
export class RepositoryTypeCode extends Message<RepositoryTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RepositoryTypeCode.Value value = 1;
   */
  value = RepositoryTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RepositoryTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RepositoryTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RepositoryTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RepositoryTypeCode {
    return new RepositoryTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RepositoryTypeCode {
    return new RepositoryTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RepositoryTypeCode {
    return new RepositoryTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RepositoryTypeCode | PlainMessage<RepositoryTypeCode> | undefined, b: RepositoryTypeCode | PlainMessage<RepositoryTypeCode> | undefined): boolean {
    return proto3.util.equals(RepositoryTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RepositoryTypeCode.Value
 */
export enum RepositoryTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DIRECTLINK = 1;
   */
  DIRECTLINK = 1,

  /**
   * @generated from enum value: OPENAPI = 2;
   */
  OPENAPI = 2,

  /**
   * @generated from enum value: LOGIN = 3;
   */
  LOGIN = 3,

  /**
   * @generated from enum value: OAUTH = 4;
   */
  OAUTH = 4,

  /**
   * @generated from enum value: OTHER = 5;
   */
  OTHER = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(RepositoryTypeCode_Value)
proto3.util.setEnumType(RepositoryTypeCode_Value, "google.fhir.stu3.proto.RepositoryTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DIRECTLINK" },
  { no: 2, name: "OPENAPI" },
  { no: 3, name: "LOGIN" },
  { no: 4, name: "OAUTH" },
  { no: 5, name: "OTHER" },
]);

/**
 * Codes indicating the degree of authority/intentionality associated with a
 * request See http://hl7.org/fhir/ValueSet/request-intent
 *
 * @generated from message google.fhir.stu3.proto.RequestIntentCode
 */
export class RequestIntentCode extends Message<RequestIntentCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RequestIntentCode.Value value = 1;
   */
  value = RequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RequestIntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestIntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestIntentCode {
    return new RequestIntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestIntentCode {
    return new RequestIntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestIntentCode {
    return new RequestIntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestIntentCode | PlainMessage<RequestIntentCode> | undefined, b: RequestIntentCode | PlainMessage<RequestIntentCode> | undefined): boolean {
    return proto3.util.equals(RequestIntentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RequestIntentCode.Value
 */
export enum RequestIntentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSAL = 1;
   */
  PROPOSAL = 1,

  /**
   * @generated from enum value: PLAN = 2;
   */
  PLAN = 2,

  /**
   * @generated from enum value: ORDER = 3;
   */
  ORDER = 3,

  /**
   * @generated from enum value: ORIGINAL_ORDER = 4;
   */
  ORIGINAL_ORDER = 4,

  /**
   * @generated from enum value: REFLEX_ORDER = 5;
   */
  REFLEX_ORDER = 5,

  /**
   * @generated from enum value: FILLER_ORDER = 6;
   */
  FILLER_ORDER = 6,

  /**
   * @generated from enum value: INSTANCE_ORDER = 7;
   */
  INSTANCE_ORDER = 7,

  /**
   * @generated from enum value: OPTION = 8;
   */
  OPTION = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestIntentCode_Value)
proto3.util.setEnumType(RequestIntentCode_Value, "google.fhir.stu3.proto.RequestIntentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSAL" },
  { no: 2, name: "PLAN" },
  { no: 3, name: "ORDER" },
  { no: 4, name: "ORIGINAL_ORDER" },
  { no: 5, name: "REFLEX_ORDER" },
  { no: 6, name: "FILLER_ORDER" },
  { no: 7, name: "INSTANCE_ORDER" },
  { no: 8, name: "OPTION" },
]);

/**
 * The clinical priority of a diagnostic order.
 * See http://hl7.org/fhir/ValueSet/request-priority
 *
 * @generated from message google.fhir.stu3.proto.RequestPriorityCode
 */
export class RequestPriorityCode extends Message<RequestPriorityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RequestPriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestPriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestPriorityCode {
    return new RequestPriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestPriorityCode {
    return new RequestPriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestPriorityCode {
    return new RequestPriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestPriorityCode | PlainMessage<RequestPriorityCode> | undefined, b: RequestPriorityCode | PlainMessage<RequestPriorityCode> | undefined): boolean {
    return proto3.util.equals(RequestPriorityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RequestPriorityCode.Value
 */
export enum RequestPriorityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ROUTINE = 1;
   */
  ROUTINE = 1,

  /**
   * @generated from enum value: URGENT = 2;
   */
  URGENT = 2,

  /**
   * @generated from enum value: ASAP = 3;
   */
  ASAP = 3,

  /**
   * @generated from enum value: STAT = 4;
   */
  STAT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestPriorityCode_Value)
proto3.util.setEnumType(RequestPriorityCode_Value, "google.fhir.stu3.proto.RequestPriorityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ROUTINE" },
  { no: 2, name: "URGENT" },
  { no: 3, name: "ASAP" },
  { no: 4, name: "STAT" },
]);

/**
 * Codes identifying the stage lifecycle stage of a request
 * See http://hl7.org/fhir/ValueSet/request-status
 *
 * @generated from message google.fhir.stu3.proto.RequestStatusCode
 */
export class RequestStatusCode extends Message<RequestStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode.Value value = 1;
   */
  value = RequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RequestStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RequestStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestStatusCode {
    return new RequestStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestStatusCode {
    return new RequestStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestStatusCode {
    return new RequestStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestStatusCode | PlainMessage<RequestStatusCode> | undefined, b: RequestStatusCode | PlainMessage<RequestStatusCode> | undefined): boolean {
    return proto3.util.equals(RequestStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RequestStatusCode.Value
 */
export enum RequestStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestStatusCode_Value)
proto3.util.setEnumType(RequestStatusCode_Value, "google.fhir.stu3.proto.RequestStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "CANCELLED" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Codes that convey the current status of the research study
 * See http://hl7.org/fhir/ValueSet/research-study-status
 *
 * @generated from message google.fhir.stu3.proto.ResearchStudyStatusCode
 */
export class ResearchStudyStatusCode extends Message<ResearchStudyStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ResearchStudyStatusCode.Value value = 1;
   */
  value = ResearchStudyStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ResearchStudyStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResearchStudyStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResearchStudyStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchStudyStatusCode {
    return new ResearchStudyStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchStudyStatusCode {
    return new ResearchStudyStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchStudyStatusCode {
    return new ResearchStudyStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchStudyStatusCode | PlainMessage<ResearchStudyStatusCode> | undefined, b: ResearchStudyStatusCode | PlainMessage<ResearchStudyStatusCode> | undefined): boolean {
    return proto3.util.equals(ResearchStudyStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ResearchStudyStatusCode.Value
 */
export enum ResearchStudyStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: STOPPED = 4;
   */
  STOPPED = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ResearchStudyStatusCode_Value)
proto3.util.setEnumType(ResearchStudyStatusCode_Value, "google.fhir.stu3.proto.ResearchStudyStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "STOPPED" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
]);

/**
 * Indicates the progression of a study subject through a study
 * See http://hl7.org/fhir/ValueSet/research-subject-status
 *
 * @generated from message google.fhir.stu3.proto.ResearchSubjectStatusCode
 */
export class ResearchSubjectStatusCode extends Message<ResearchSubjectStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ResearchSubjectStatusCode.Value value = 1;
   */
  value = ResearchSubjectStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ResearchSubjectStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResearchSubjectStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResearchSubjectStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchSubjectStatusCode {
    return new ResearchSubjectStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchSubjectStatusCode {
    return new ResearchSubjectStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchSubjectStatusCode {
    return new ResearchSubjectStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchSubjectStatusCode | PlainMessage<ResearchSubjectStatusCode> | undefined, b: ResearchSubjectStatusCode | PlainMessage<ResearchSubjectStatusCode> | undefined): boolean {
    return proto3.util.equals(ResearchSubjectStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ResearchSubjectStatusCode.Value
 */
export enum ResearchSubjectStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CANDIDATE = 1;
   */
  CANDIDATE = 1,

  /**
   * @generated from enum value: ENROLLED = 2;
   */
  ENROLLED = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: SUSPENDED = 4;
   */
  SUSPENDED = 4,

  /**
   * @generated from enum value: WITHDRAWN = 5;
   */
  WITHDRAWN = 5,

  /**
   * @generated from enum value: COMPLETED = 6;
   */
  COMPLETED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ResearchSubjectStatusCode_Value)
proto3.util.setEnumType(ResearchSubjectStatusCode_Value, "google.fhir.stu3.proto.ResearchSubjectStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CANDIDATE" },
  { no: 2, name: "ENROLLED" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "SUSPENDED" },
  { no: 5, name: "WITHDRAWN" },
  { no: 6, name: "COMPLETED" },
]);

/**
 * The type of payee Resource
 * See http://hl7.org/fhir/ValueSet/resource-type-link
 *
 * @generated from message google.fhir.stu3.proto.PayeeResourceTypeCode
 */
export class PayeeResourceTypeCode extends Message<PayeeResourceTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.PayeeResourceTypeCode.Value value = 1;
   */
  value = PayeeResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PayeeResourceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.PayeeResourceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PayeeResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PayeeResourceTypeCode {
    return new PayeeResourceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PayeeResourceTypeCode {
    return new PayeeResourceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PayeeResourceTypeCode {
    return new PayeeResourceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PayeeResourceTypeCode | PlainMessage<PayeeResourceTypeCode> | undefined, b: PayeeResourceTypeCode | PlainMessage<PayeeResourceTypeCode> | undefined): boolean {
    return proto3.util.equals(PayeeResourceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.PayeeResourceTypeCode.Value
 */
export enum PayeeResourceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ORGANIZATION = 1;
   */
  ORGANIZATION = 1,

  /**
   * @generated from enum value: PATIENT = 2;
   */
  PATIENT = 2,

  /**
   * @generated from enum value: PRACTITIONER = 3;
   */
  PRACTITIONER = 3,

  /**
   * @generated from enum value: RELATEDPERSON = 4;
   */
  RELATEDPERSON = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(PayeeResourceTypeCode_Value)
proto3.util.setEnumType(PayeeResourceTypeCode_Value, "google.fhir.stu3.proto.PayeeResourceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ORGANIZATION" },
  { no: 2, name: "PATIENT" },
  { no: 3, name: "PRACTITIONER" },
  { no: 4, name: "RELATEDPERSON" },
]);

/**
 * One of the resource types defined as part of FHIR.
 * See http://hl7.org/fhir/ValueSet/resource-types
 *
 * @generated from message google.fhir.stu3.proto.ResourceTypeCode
 */
export class ResourceTypeCode extends Message<ResourceTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ResourceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResourceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceTypeCode {
    return new ResourceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceTypeCode {
    return new ResourceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceTypeCode {
    return new ResourceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceTypeCode | PlainMessage<ResourceTypeCode> | undefined, b: ResourceTypeCode | PlainMessage<ResourceTypeCode> | undefined): boolean {
    return proto3.util.equals(ResourceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ResourceTypeCode.Value
 */
export enum ResourceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACCOUNT = 1;
   */
  ACCOUNT = 1,

  /**
   * @generated from enum value: ACTIVITY_DEFINITION = 2;
   */
  ACTIVITY_DEFINITION = 2,

  /**
   * @generated from enum value: ADVERSE_EVENT = 3;
   */
  ADVERSE_EVENT = 3,

  /**
   * @generated from enum value: ALLERGY_INTOLERANCE = 4;
   */
  ALLERGY_INTOLERANCE = 4,

  /**
   * @generated from enum value: APPOINTMENT = 5;
   */
  APPOINTMENT = 5,

  /**
   * @generated from enum value: APPOINTMENT_RESPONSE = 6;
   */
  APPOINTMENT_RESPONSE = 6,

  /**
   * @generated from enum value: AUDIT_EVENT = 7;
   */
  AUDIT_EVENT = 7,

  /**
   * @generated from enum value: BASIC = 8;
   */
  BASIC = 8,

  /**
   * @generated from enum value: BINARY = 9;
   */
  BINARY = 9,

  /**
   * @generated from enum value: BODY_SITE = 10;
   */
  BODY_SITE = 10,

  /**
   * @generated from enum value: BUNDLE = 11;
   */
  BUNDLE = 11,

  /**
   * @generated from enum value: CAPABILITY_STATEMENT = 12;
   */
  CAPABILITY_STATEMENT = 12,

  /**
   * @generated from enum value: CARE_PLAN = 13;
   */
  CARE_PLAN = 13,

  /**
   * @generated from enum value: CARE_TEAM = 14;
   */
  CARE_TEAM = 14,

  /**
   * @generated from enum value: CHARGE_ITEM = 15;
   */
  CHARGE_ITEM = 15,

  /**
   * @generated from enum value: CLAIM = 16;
   */
  CLAIM = 16,

  /**
   * @generated from enum value: CLAIM_RESPONSE = 17;
   */
  CLAIM_RESPONSE = 17,

  /**
   * @generated from enum value: CLINICAL_IMPRESSION = 18;
   */
  CLINICAL_IMPRESSION = 18,

  /**
   * @generated from enum value: CODE_SYSTEM = 19;
   */
  CODE_SYSTEM = 19,

  /**
   * @generated from enum value: COMMUNICATION = 20;
   */
  COMMUNICATION = 20,

  /**
   * @generated from enum value: COMMUNICATION_REQUEST = 21;
   */
  COMMUNICATION_REQUEST = 21,

  /**
   * @generated from enum value: COMPARTMENT_DEFINITION = 22;
   */
  COMPARTMENT_DEFINITION = 22,

  /**
   * @generated from enum value: COMPOSITION = 23;
   */
  COMPOSITION = 23,

  /**
   * @generated from enum value: CONCEPT_MAP = 24;
   */
  CONCEPT_MAP = 24,

  /**
   * @generated from enum value: CONDITION = 25;
   */
  CONDITION = 25,

  /**
   * @generated from enum value: CONSENT = 26;
   */
  CONSENT = 26,

  /**
   * @generated from enum value: CONTRACT = 27;
   */
  CONTRACT = 27,

  /**
   * @generated from enum value: COVERAGE = 28;
   */
  COVERAGE = 28,

  /**
   * @generated from enum value: DATA_ELEMENT = 29;
   */
  DATA_ELEMENT = 29,

  /**
   * @generated from enum value: DETECTED_ISSUE = 30;
   */
  DETECTED_ISSUE = 30,

  /**
   * @generated from enum value: DEVICE = 31;
   */
  DEVICE = 31,

  /**
   * @generated from enum value: DEVICE_COMPONENT = 32;
   */
  DEVICE_COMPONENT = 32,

  /**
   * @generated from enum value: DEVICE_METRIC = 33;
   */
  DEVICE_METRIC = 33,

  /**
   * @generated from enum value: DEVICE_REQUEST = 34;
   */
  DEVICE_REQUEST = 34,

  /**
   * @generated from enum value: DEVICE_USE_STATEMENT = 35;
   */
  DEVICE_USE_STATEMENT = 35,

  /**
   * @generated from enum value: DIAGNOSTIC_REPORT = 36;
   */
  DIAGNOSTIC_REPORT = 36,

  /**
   * @generated from enum value: DOCUMENT_MANIFEST = 37;
   */
  DOCUMENT_MANIFEST = 37,

  /**
   * @generated from enum value: DOCUMENT_REFERENCE = 38;
   */
  DOCUMENT_REFERENCE = 38,

  /**
   * @generated from enum value: DOMAIN_RESOURCE = 39;
   */
  DOMAIN_RESOURCE = 39,

  /**
   * @generated from enum value: ELIGIBILITY_REQUEST = 40;
   */
  ELIGIBILITY_REQUEST = 40,

  /**
   * @generated from enum value: ELIGIBILITY_RESPONSE = 41;
   */
  ELIGIBILITY_RESPONSE = 41,

  /**
   * @generated from enum value: ENCOUNTER = 42;
   */
  ENCOUNTER = 42,

  /**
   * @generated from enum value: ENDPOINT = 43;
   */
  ENDPOINT = 43,

  /**
   * @generated from enum value: ENROLLMENT_REQUEST = 44;
   */
  ENROLLMENT_REQUEST = 44,

  /**
   * @generated from enum value: ENROLLMENT_RESPONSE = 45;
   */
  ENROLLMENT_RESPONSE = 45,

  /**
   * @generated from enum value: EPISODE_OF_CARE = 46;
   */
  EPISODE_OF_CARE = 46,

  /**
   * @generated from enum value: EXPANSION_PROFILE = 47;
   */
  EXPANSION_PROFILE = 47,

  /**
   * @generated from enum value: EXPLANATION_OF_BENEFIT = 48;
   */
  EXPLANATION_OF_BENEFIT = 48,

  /**
   * @generated from enum value: FAMILY_MEMBER_HISTORY = 49;
   */
  FAMILY_MEMBER_HISTORY = 49,

  /**
   * @generated from enum value: FLAG = 50;
   */
  FLAG = 50,

  /**
   * @generated from enum value: GOAL = 51;
   */
  GOAL = 51,

  /**
   * @generated from enum value: GRAPH_DEFINITION = 52;
   */
  GRAPH_DEFINITION = 52,

  /**
   * @generated from enum value: GROUP = 53;
   */
  GROUP = 53,

  /**
   * @generated from enum value: GUIDANCE_RESPONSE = 54;
   */
  GUIDANCE_RESPONSE = 54,

  /**
   * @generated from enum value: HEALTHCARE_SERVICE = 55;
   */
  HEALTHCARE_SERVICE = 55,

  /**
   * @generated from enum value: IMAGING_MANIFEST = 56;
   */
  IMAGING_MANIFEST = 56,

  /**
   * @generated from enum value: IMAGING_STUDY = 57;
   */
  IMAGING_STUDY = 57,

  /**
   * @generated from enum value: IMMUNIZATION = 58;
   */
  IMMUNIZATION = 58,

  /**
   * @generated from enum value: IMMUNIZATION_RECOMMENDATION = 59;
   */
  IMMUNIZATION_RECOMMENDATION = 59,

  /**
   * @generated from enum value: IMPLEMENTATION_GUIDE = 60;
   */
  IMPLEMENTATION_GUIDE = 60,

  /**
   * @generated from enum value: LIBRARY = 61;
   */
  LIBRARY = 61,

  /**
   * @generated from enum value: LINKAGE = 62;
   */
  LINKAGE = 62,

  /**
   * @generated from enum value: LIST = 63;
   */
  LIST = 63,

  /**
   * @generated from enum value: LOCATION = 64;
   */
  LOCATION = 64,

  /**
   * @generated from enum value: MEASURE = 65;
   */
  MEASURE = 65,

  /**
   * @generated from enum value: MEASURE_REPORT = 66;
   */
  MEASURE_REPORT = 66,

  /**
   * @generated from enum value: MEDIA = 67;
   */
  MEDIA = 67,

  /**
   * @generated from enum value: MEDICATION = 68;
   */
  MEDICATION = 68,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION = 69;
   */
  MEDICATION_ADMINISTRATION = 69,

  /**
   * @generated from enum value: MEDICATION_DISPENSE = 70;
   */
  MEDICATION_DISPENSE = 70,

  /**
   * @generated from enum value: MEDICATION_REQUEST = 71;
   */
  MEDICATION_REQUEST = 71,

  /**
   * @generated from enum value: MEDICATION_STATEMENT = 72;
   */
  MEDICATION_STATEMENT = 72,

  /**
   * @generated from enum value: MESSAGE_DEFINITION = 73;
   */
  MESSAGE_DEFINITION = 73,

  /**
   * @generated from enum value: MESSAGE_HEADER = 74;
   */
  MESSAGE_HEADER = 74,

  /**
   * @generated from enum value: NAMING_SYSTEM = 75;
   */
  NAMING_SYSTEM = 75,

  /**
   * @generated from enum value: NUTRITION_ORDER = 76;
   */
  NUTRITION_ORDER = 76,

  /**
   * @generated from enum value: OBSERVATION = 77;
   */
  OBSERVATION = 77,

  /**
   * @generated from enum value: OPERATION_DEFINITION = 78;
   */
  OPERATION_DEFINITION = 78,

  /**
   * @generated from enum value: OPERATION_OUTCOME = 79;
   */
  OPERATION_OUTCOME = 79,

  /**
   * @generated from enum value: ORGANIZATION = 80;
   */
  ORGANIZATION = 80,

  /**
   * @generated from enum value: PARAMETERS = 81;
   */
  PARAMETERS = 81,

  /**
   * @generated from enum value: PATIENT = 82;
   */
  PATIENT = 82,

  /**
   * @generated from enum value: PAYMENT_NOTICE = 83;
   */
  PAYMENT_NOTICE = 83,

  /**
   * @generated from enum value: PAYMENT_RECONCILIATION = 84;
   */
  PAYMENT_RECONCILIATION = 84,

  /**
   * @generated from enum value: PERSON = 85;
   */
  PERSON = 85,

  /**
   * @generated from enum value: PLAN_DEFINITION = 86;
   */
  PLAN_DEFINITION = 86,

  /**
   * @generated from enum value: PRACTITIONER = 87;
   */
  PRACTITIONER = 87,

  /**
   * @generated from enum value: PRACTITIONER_ROLE = 88;
   */
  PRACTITIONER_ROLE = 88,

  /**
   * @generated from enum value: PROCEDURE = 89;
   */
  PROCEDURE = 89,

  /**
   * @generated from enum value: PROCEDURE_REQUEST = 90;
   */
  PROCEDURE_REQUEST = 90,

  /**
   * @generated from enum value: PROCESS_REQUEST = 91;
   */
  PROCESS_REQUEST = 91,

  /**
   * @generated from enum value: PROCESS_RESPONSE = 92;
   */
  PROCESS_RESPONSE = 92,

  /**
   * @generated from enum value: PROVENANCE = 93;
   */
  PROVENANCE = 93,

  /**
   * @generated from enum value: QUESTIONNAIRE = 94;
   */
  QUESTIONNAIRE = 94,

  /**
   * @generated from enum value: QUESTIONNAIRE_RESPONSE = 95;
   */
  QUESTIONNAIRE_RESPONSE = 95,

  /**
   * @generated from enum value: REFERRAL_REQUEST = 96;
   */
  REFERRAL_REQUEST = 96,

  /**
   * @generated from enum value: RELATED_PERSON = 97;
   */
  RELATED_PERSON = 97,

  /**
   * @generated from enum value: REQUEST_GROUP = 98;
   */
  REQUEST_GROUP = 98,

  /**
   * @generated from enum value: RESEARCH_STUDY = 99;
   */
  RESEARCH_STUDY = 99,

  /**
   * @generated from enum value: RESEARCH_SUBJECT = 100;
   */
  RESEARCH_SUBJECT = 100,

  /**
   * @generated from enum value: RESOURCE = 101;
   */
  RESOURCE = 101,

  /**
   * @generated from enum value: RISK_ASSESSMENT = 102;
   */
  RISK_ASSESSMENT = 102,

  /**
   * @generated from enum value: SCHEDULE = 103;
   */
  SCHEDULE = 103,

  /**
   * @generated from enum value: SEARCH_PARAMETER = 104;
   */
  SEARCH_PARAMETER = 104,

  /**
   * @generated from enum value: SEQUENCE = 105;
   */
  SEQUENCE = 105,

  /**
   * @generated from enum value: SERVICE_DEFINITION = 106;
   */
  SERVICE_DEFINITION = 106,

  /**
   * @generated from enum value: SLOT = 107;
   */
  SLOT = 107,

  /**
   * @generated from enum value: SPECIMEN = 108;
   */
  SPECIMEN = 108,

  /**
   * @generated from enum value: STRUCTURE_DEFINITION = 109;
   */
  STRUCTURE_DEFINITION = 109,

  /**
   * @generated from enum value: STRUCTURE_MAP = 110;
   */
  STRUCTURE_MAP = 110,

  /**
   * @generated from enum value: SUBSCRIPTION = 111;
   */
  SUBSCRIPTION = 111,

  /**
   * @generated from enum value: SUBSTANCE = 112;
   */
  SUBSTANCE = 112,

  /**
   * @generated from enum value: SUPPLY_DELIVERY = 113;
   */
  SUPPLY_DELIVERY = 113,

  /**
   * @generated from enum value: SUPPLY_REQUEST = 114;
   */
  SUPPLY_REQUEST = 114,

  /**
   * @generated from enum value: TASK = 115;
   */
  TASK = 115,

  /**
   * @generated from enum value: TEST_REPORT = 116;
   */
  TEST_REPORT = 116,

  /**
   * @generated from enum value: TEST_SCRIPT = 117;
   */
  TEST_SCRIPT = 117,

  /**
   * @generated from enum value: VALUE_SET = 118;
   */
  VALUE_SET = 118,

  /**
   * @generated from enum value: VISION_PRESCRIPTION = 119;
   */
  VISION_PRESCRIPTION = 119,
}
// Retrieve enum metadata with: proto3.getEnumType(ResourceTypeCode_Value)
proto3.util.setEnumType(ResourceTypeCode_Value, "google.fhir.stu3.proto.ResourceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACCOUNT" },
  { no: 2, name: "ACTIVITY_DEFINITION" },
  { no: 3, name: "ADVERSE_EVENT" },
  { no: 4, name: "ALLERGY_INTOLERANCE" },
  { no: 5, name: "APPOINTMENT" },
  { no: 6, name: "APPOINTMENT_RESPONSE" },
  { no: 7, name: "AUDIT_EVENT" },
  { no: 8, name: "BASIC" },
  { no: 9, name: "BINARY" },
  { no: 10, name: "BODY_SITE" },
  { no: 11, name: "BUNDLE" },
  { no: 12, name: "CAPABILITY_STATEMENT" },
  { no: 13, name: "CARE_PLAN" },
  { no: 14, name: "CARE_TEAM" },
  { no: 15, name: "CHARGE_ITEM" },
  { no: 16, name: "CLAIM" },
  { no: 17, name: "CLAIM_RESPONSE" },
  { no: 18, name: "CLINICAL_IMPRESSION" },
  { no: 19, name: "CODE_SYSTEM" },
  { no: 20, name: "COMMUNICATION" },
  { no: 21, name: "COMMUNICATION_REQUEST" },
  { no: 22, name: "COMPARTMENT_DEFINITION" },
  { no: 23, name: "COMPOSITION" },
  { no: 24, name: "CONCEPT_MAP" },
  { no: 25, name: "CONDITION" },
  { no: 26, name: "CONSENT" },
  { no: 27, name: "CONTRACT" },
  { no: 28, name: "COVERAGE" },
  { no: 29, name: "DATA_ELEMENT" },
  { no: 30, name: "DETECTED_ISSUE" },
  { no: 31, name: "DEVICE" },
  { no: 32, name: "DEVICE_COMPONENT" },
  { no: 33, name: "DEVICE_METRIC" },
  { no: 34, name: "DEVICE_REQUEST" },
  { no: 35, name: "DEVICE_USE_STATEMENT" },
  { no: 36, name: "DIAGNOSTIC_REPORT" },
  { no: 37, name: "DOCUMENT_MANIFEST" },
  { no: 38, name: "DOCUMENT_REFERENCE" },
  { no: 39, name: "DOMAIN_RESOURCE" },
  { no: 40, name: "ELIGIBILITY_REQUEST" },
  { no: 41, name: "ELIGIBILITY_RESPONSE" },
  { no: 42, name: "ENCOUNTER" },
  { no: 43, name: "ENDPOINT" },
  { no: 44, name: "ENROLLMENT_REQUEST" },
  { no: 45, name: "ENROLLMENT_RESPONSE" },
  { no: 46, name: "EPISODE_OF_CARE" },
  { no: 47, name: "EXPANSION_PROFILE" },
  { no: 48, name: "EXPLANATION_OF_BENEFIT" },
  { no: 49, name: "FAMILY_MEMBER_HISTORY" },
  { no: 50, name: "FLAG" },
  { no: 51, name: "GOAL" },
  { no: 52, name: "GRAPH_DEFINITION" },
  { no: 53, name: "GROUP" },
  { no: 54, name: "GUIDANCE_RESPONSE" },
  { no: 55, name: "HEALTHCARE_SERVICE" },
  { no: 56, name: "IMAGING_MANIFEST" },
  { no: 57, name: "IMAGING_STUDY" },
  { no: 58, name: "IMMUNIZATION" },
  { no: 59, name: "IMMUNIZATION_RECOMMENDATION" },
  { no: 60, name: "IMPLEMENTATION_GUIDE" },
  { no: 61, name: "LIBRARY" },
  { no: 62, name: "LINKAGE" },
  { no: 63, name: "LIST" },
  { no: 64, name: "LOCATION" },
  { no: 65, name: "MEASURE" },
  { no: 66, name: "MEASURE_REPORT" },
  { no: 67, name: "MEDIA" },
  { no: 68, name: "MEDICATION" },
  { no: 69, name: "MEDICATION_ADMINISTRATION" },
  { no: 70, name: "MEDICATION_DISPENSE" },
  { no: 71, name: "MEDICATION_REQUEST" },
  { no: 72, name: "MEDICATION_STATEMENT" },
  { no: 73, name: "MESSAGE_DEFINITION" },
  { no: 74, name: "MESSAGE_HEADER" },
  { no: 75, name: "NAMING_SYSTEM" },
  { no: 76, name: "NUTRITION_ORDER" },
  { no: 77, name: "OBSERVATION" },
  { no: 78, name: "OPERATION_DEFINITION" },
  { no: 79, name: "OPERATION_OUTCOME" },
  { no: 80, name: "ORGANIZATION" },
  { no: 81, name: "PARAMETERS" },
  { no: 82, name: "PATIENT" },
  { no: 83, name: "PAYMENT_NOTICE" },
  { no: 84, name: "PAYMENT_RECONCILIATION" },
  { no: 85, name: "PERSON" },
  { no: 86, name: "PLAN_DEFINITION" },
  { no: 87, name: "PRACTITIONER" },
  { no: 88, name: "PRACTITIONER_ROLE" },
  { no: 89, name: "PROCEDURE" },
  { no: 90, name: "PROCEDURE_REQUEST" },
  { no: 91, name: "PROCESS_REQUEST" },
  { no: 92, name: "PROCESS_RESPONSE" },
  { no: 93, name: "PROVENANCE" },
  { no: 94, name: "QUESTIONNAIRE" },
  { no: 95, name: "QUESTIONNAIRE_RESPONSE" },
  { no: 96, name: "REFERRAL_REQUEST" },
  { no: 97, name: "RELATED_PERSON" },
  { no: 98, name: "REQUEST_GROUP" },
  { no: 99, name: "RESEARCH_STUDY" },
  { no: 100, name: "RESEARCH_SUBJECT" },
  { no: 101, name: "RESOURCE" },
  { no: 102, name: "RISK_ASSESSMENT" },
  { no: 103, name: "SCHEDULE" },
  { no: 104, name: "SEARCH_PARAMETER" },
  { no: 105, name: "SEQUENCE" },
  { no: 106, name: "SERVICE_DEFINITION" },
  { no: 107, name: "SLOT" },
  { no: 108, name: "SPECIMEN" },
  { no: 109, name: "STRUCTURE_DEFINITION" },
  { no: 110, name: "STRUCTURE_MAP" },
  { no: 111, name: "SUBSCRIPTION" },
  { no: 112, name: "SUBSTANCE" },
  { no: 113, name: "SUPPLY_DELIVERY" },
  { no: 114, name: "SUPPLY_REQUEST" },
  { no: 115, name: "TASK" },
  { no: 116, name: "TEST_REPORT" },
  { no: 117, name: "TEST_SCRIPT" },
  { no: 118, name: "VALUE_SET" },
  { no: 119, name: "VISION_PRESCRIPTION" },
]);

/**
 * Codes indicating the type of validation to perform
 * See http://hl7.org/fhir/ValueSet/resource-validation-mode
 *
 * @generated from message google.fhir.stu3.proto.ResourceValidationModeCode
 */
export class ResourceValidationModeCode extends Message<ResourceValidationModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ResourceValidationModeCode.Value value = 1;
   */
  value = ResourceValidationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ResourceValidationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResourceValidationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceValidationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceValidationModeCode {
    return new ResourceValidationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceValidationModeCode {
    return new ResourceValidationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceValidationModeCode {
    return new ResourceValidationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceValidationModeCode | PlainMessage<ResourceValidationModeCode> | undefined, b: ResourceValidationModeCode | PlainMessage<ResourceValidationModeCode> | undefined): boolean {
    return proto3.util.equals(ResourceValidationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ResourceValidationModeCode.Value
 */
export enum ResourceValidationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: UPDATE = 2;
   */
  UPDATE = 2,

  /**
   * @generated from enum value: DELETE = 3;
   */
  DELETE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ResourceValidationModeCode_Value)
proto3.util.setEnumType(ResourceValidationModeCode_Value, "google.fhir.stu3.proto.ResourceValidationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CREATE" },
  { no: 2, name: "UPDATE" },
  { no: 3, name: "DELETE" },
]);

/**
 * The kind of response to a message
 * See http://hl7.org/fhir/ValueSet/response-code
 *
 * @generated from message google.fhir.stu3.proto.ResponseTypeCode
 */
export class ResponseTypeCode extends Message<ResponseTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ResponseTypeCode.Value value = 1;
   */
  value = ResponseTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ResponseTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResponseTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResponseTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseTypeCode {
    return new ResponseTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseTypeCode {
    return new ResponseTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseTypeCode {
    return new ResponseTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResponseTypeCode | PlainMessage<ResponseTypeCode> | undefined, b: ResponseTypeCode | PlainMessage<ResponseTypeCode> | undefined): boolean {
    return proto3.util.equals(ResponseTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ResponseTypeCode.Value
 */
export enum ResponseTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: TRANSIENT_ERROR = 2;
   */
  TRANSIENT_ERROR = 2,

  /**
   * @generated from enum value: FATAL_ERROR = 3;
   */
  FATAL_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ResponseTypeCode_Value)
proto3.util.setEnumType(ResponseTypeCode_Value, "google.fhir.stu3.proto.ResponseTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OK" },
  { no: 2, name: "TRANSIENT_ERROR" },
  { no: 3, name: "FATAL_ERROR" },
]);

/**
 * The mode of a RESTful capability statement.
 * See http://hl7.org/fhir/ValueSet/restful-capability-mode
 *
 * @generated from message google.fhir.stu3.proto.RestfulCapabilityModeCode
 */
export class RestfulCapabilityModeCode extends Message<RestfulCapabilityModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RestfulCapabilityModeCode.Value value = 1;
   */
  value = RestfulCapabilityModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RestfulCapabilityModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RestfulCapabilityModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RestfulCapabilityModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RestfulCapabilityModeCode {
    return new RestfulCapabilityModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RestfulCapabilityModeCode {
    return new RestfulCapabilityModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RestfulCapabilityModeCode {
    return new RestfulCapabilityModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RestfulCapabilityModeCode | PlainMessage<RestfulCapabilityModeCode> | undefined, b: RestfulCapabilityModeCode | PlainMessage<RestfulCapabilityModeCode> | undefined): boolean {
    return proto3.util.equals(RestfulCapabilityModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RestfulCapabilityModeCode.Value
 */
export enum RestfulCapabilityModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CLIENT = 1;
   */
  CLIENT = 1,

  /**
   * @generated from enum value: SERVER = 2;
   */
  SERVER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RestfulCapabilityModeCode_Value)
proto3.util.setEnumType(RestfulCapabilityModeCode_Value, "google.fhir.stu3.proto.RestfulCapabilityModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CLIENT" },
  { no: 2, name: "SERVER" },
]);

/**
 * Types of security services used with FHIR.
 * See http://hl7.org/fhir/ValueSet/restful-security-service
 *
 * @generated from message google.fhir.stu3.proto.RestfulSecurityServiceCode
 */
export class RestfulSecurityServiceCode extends Message<RestfulSecurityServiceCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RestfulSecurityServiceCode.Value value = 1;
   */
  value = RestfulSecurityServiceCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RestfulSecurityServiceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RestfulSecurityServiceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RestfulSecurityServiceCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RestfulSecurityServiceCode {
    return new RestfulSecurityServiceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RestfulSecurityServiceCode {
    return new RestfulSecurityServiceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RestfulSecurityServiceCode {
    return new RestfulSecurityServiceCode().fromJsonString(jsonString, options);
  }

  static equals(a: RestfulSecurityServiceCode | PlainMessage<RestfulSecurityServiceCode> | undefined, b: RestfulSecurityServiceCode | PlainMessage<RestfulSecurityServiceCode> | undefined): boolean {
    return proto3.util.equals(RestfulSecurityServiceCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RestfulSecurityServiceCode.Value
 */
export enum RestfulSecurityServiceCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OAUTH = 1;
   */
  OAUTH = 1,

  /**
   * @generated from enum value: SMART_ON_FHIR = 2;
   */
  SMART_ON_FHIR = 2,

  /**
   * @generated from enum value: NTLM = 3;
   */
  NTLM = 3,

  /**
   * @generated from enum value: BASIC = 4;
   */
  BASIC = 4,

  /**
   * @generated from enum value: KERBEROS = 5;
   */
  KERBEROS = 5,

  /**
   * @generated from enum value: CERTIFICATES = 6;
   */
  CERTIFICATES = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(RestfulSecurityServiceCode_Value)
proto3.util.setEnumType(RestfulSecurityServiceCode_Value, "google.fhir.stu3.proto.RestfulSecurityServiceCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OAUTH" },
  { no: 2, name: "SMART_ON_FHIR" },
  { no: 3, name: "NTLM" },
  { no: 4, name: "BASIC" },
  { no: 5, name: "KERBEROS" },
  { no: 6, name: "CERTIFICATES" },
]);

/**
 * Codes representing the likelihood of a particular outcome in a risk
 * assessment. See http://hl7.org/fhir/ValueSet/risk-probability
 *
 * @generated from message google.fhir.stu3.proto.RiskProbabilityCode
 */
export class RiskProbabilityCode extends Message<RiskProbabilityCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.RiskProbabilityCode.Value value = 1;
   */
  value = RiskProbabilityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RiskProbabilityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.RiskProbabilityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RiskProbabilityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RiskProbabilityCode {
    return new RiskProbabilityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RiskProbabilityCode {
    return new RiskProbabilityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RiskProbabilityCode {
    return new RiskProbabilityCode().fromJsonString(jsonString, options);
  }

  static equals(a: RiskProbabilityCode | PlainMessage<RiskProbabilityCode> | undefined, b: RiskProbabilityCode | PlainMessage<RiskProbabilityCode> | undefined): boolean {
    return proto3.util.equals(RiskProbabilityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.RiskProbabilityCode.Value
 */
export enum RiskProbabilityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NEGLIGIBLE = 1;
   */
  NEGLIGIBLE = 1,

  /**
   * @generated from enum value: LOW = 2;
   */
  LOW = 2,

  /**
   * @generated from enum value: MODERATE = 3;
   */
  MODERATE = 3,

  /**
   * @generated from enum value: HIGH = 4;
   */
  HIGH = 4,

  /**
   * @generated from enum value: CERTAIN = 5;
   */
  CERTAIN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(RiskProbabilityCode_Value)
proto3.util.setEnumType(RiskProbabilityCode_Value, "google.fhir.stu3.proto.RiskProbabilityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NEGLIGIBLE" },
  { no: 2, name: "LOW" },
  { no: 3, name: "MODERATE" },
  { no: 4, name: "HIGH" },
  { no: 5, name: "CERTAIN" },
]);

/**
 * What Search Comparator Codes are supported in search
 * See http://hl7.org/fhir/ValueSet/search-comparator
 *
 * @generated from message google.fhir.stu3.proto.SearchComparatorCode
 */
export class SearchComparatorCode extends Message<SearchComparatorCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SearchComparatorCode.Value value = 1;
   */
  value = SearchComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SearchComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchComparatorCode {
    return new SearchComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchComparatorCode {
    return new SearchComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchComparatorCode {
    return new SearchComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchComparatorCode | PlainMessage<SearchComparatorCode> | undefined, b: SearchComparatorCode | PlainMessage<SearchComparatorCode> | undefined): boolean {
    return proto3.util.equals(SearchComparatorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SearchComparatorCode.Value
 */
export enum SearchComparatorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EQ = 1;
   */
  EQ = 1,

  /**
   * @generated from enum value: NE = 2;
   */
  NE = 2,

  /**
   * @generated from enum value: GT = 3;
   */
  GT = 3,

  /**
   * @generated from enum value: LT = 4;
   */
  LT = 4,

  /**
   * @generated from enum value: GE = 5;
   */
  GE = 5,

  /**
   * @generated from enum value: LE = 6;
   */
  LE = 6,

  /**
   * @generated from enum value: SA = 7;
   */
  SA = 7,

  /**
   * @generated from enum value: EB = 8;
   */
  EB = 8,

  /**
   * @generated from enum value: AP = 9;
   */
  AP = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchComparatorCode_Value)
proto3.util.setEnumType(SearchComparatorCode_Value, "google.fhir.stu3.proto.SearchComparatorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EQ" },
  { no: 2, name: "NE" },
  { no: 3, name: "GT" },
  { no: 4, name: "LT" },
  { no: 5, name: "GE" },
  { no: 6, name: "LE" },
  { no: 7, name: "SA" },
  { no: 8, name: "EB" },
  { no: 9, name: "AP" },
]);

/**
 * Why an entry is in the result set - whether it's included as a match or
 * because of an _include requirement. See
 * http://hl7.org/fhir/ValueSet/search-entry-mode
 *
 * @generated from message google.fhir.stu3.proto.SearchEntryModeCode
 */
export class SearchEntryModeCode extends Message<SearchEntryModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SearchEntryModeCode.Value value = 1;
   */
  value = SearchEntryModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchEntryModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SearchEntryModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchEntryModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchEntryModeCode {
    return new SearchEntryModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchEntryModeCode {
    return new SearchEntryModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchEntryModeCode {
    return new SearchEntryModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchEntryModeCode | PlainMessage<SearchEntryModeCode> | undefined, b: SearchEntryModeCode | PlainMessage<SearchEntryModeCode> | undefined): boolean {
    return proto3.util.equals(SearchEntryModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SearchEntryModeCode.Value
 */
export enum SearchEntryModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MATCH = 1;
   */
  MATCH = 1,

  /**
   * @generated from enum value: INCLUDE = 2;
   */
  INCLUDE = 2,

  /**
   * @generated from enum value: OUTCOME = 3;
   */
  OUTCOME = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchEntryModeCode_Value)
proto3.util.setEnumType(SearchEntryModeCode_Value, "google.fhir.stu3.proto.SearchEntryModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MATCH" },
  { no: 2, name: "INCLUDE" },
  { no: 3, name: "OUTCOME" },
]);

/**
 * A supported modifier for a search parameter.
 * See http://hl7.org/fhir/ValueSet/search-modifier-code
 *
 * @generated from message google.fhir.stu3.proto.SearchModifierCodeCode
 */
export class SearchModifierCodeCode extends Message<SearchModifierCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SearchModifierCodeCode.Value value = 1;
   */
  value = SearchModifierCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchModifierCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SearchModifierCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchModifierCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchModifierCodeCode {
    return new SearchModifierCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchModifierCodeCode {
    return new SearchModifierCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchModifierCodeCode {
    return new SearchModifierCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchModifierCodeCode | PlainMessage<SearchModifierCodeCode> | undefined, b: SearchModifierCodeCode | PlainMessage<SearchModifierCodeCode> | undefined): boolean {
    return proto3.util.equals(SearchModifierCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SearchModifierCodeCode.Value
 */
export enum SearchModifierCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MISSING = 1;
   */
  MISSING = 1,

  /**
   * @generated from enum value: EXACT = 2;
   */
  EXACT = 2,

  /**
   * @generated from enum value: CONTAINS = 3;
   */
  CONTAINS = 3,

  /**
   * @generated from enum value: NOT = 4;
   */
  NOT = 4,

  /**
   * @generated from enum value: TEXT = 5;
   */
  TEXT = 5,

  /**
   * @generated from enum value: IN = 6;
   */
  IN = 6,

  /**
   * @generated from enum value: NOT_IN = 7;
   */
  NOT_IN = 7,

  /**
   * @generated from enum value: BELOW = 8;
   */
  BELOW = 8,

  /**
   * @generated from enum value: ABOVE = 9;
   */
  ABOVE = 9,

  /**
   * @generated from enum value: TYPE = 10;
   */
  TYPE = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchModifierCodeCode_Value)
proto3.util.setEnumType(SearchModifierCodeCode_Value, "google.fhir.stu3.proto.SearchModifierCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MISSING" },
  { no: 2, name: "EXACT" },
  { no: 3, name: "CONTAINS" },
  { no: 4, name: "NOT" },
  { no: 5, name: "TEXT" },
  { no: 6, name: "IN" },
  { no: 7, name: "NOT_IN" },
  { no: 8, name: "BELOW" },
  { no: 9, name: "ABOVE" },
  { no: 10, name: "TYPE" },
]);

/**
 * Data types allowed to be used for search parameters.
 * See http://hl7.org/fhir/ValueSet/search-param-type
 *
 * @generated from message google.fhir.stu3.proto.SearchParamTypeCode
 */
export class SearchParamTypeCode extends Message<SearchParamTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SearchParamTypeCode.Value value = 1;
   */
  value = SearchParamTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParamTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SearchParamTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchParamTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParamTypeCode {
    return new SearchParamTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParamTypeCode {
    return new SearchParamTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParamTypeCode {
    return new SearchParamTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParamTypeCode | PlainMessage<SearchParamTypeCode> | undefined, b: SearchParamTypeCode | PlainMessage<SearchParamTypeCode> | undefined): boolean {
    return proto3.util.equals(SearchParamTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SearchParamTypeCode.Value
 */
export enum SearchParamTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NUMBER = 1;
   */
  NUMBER = 1,

  /**
   * @generated from enum value: DATE = 2;
   */
  DATE = 2,

  /**
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * @generated from enum value: TOKEN = 4;
   */
  TOKEN = 4,

  /**
   * @generated from enum value: REFERENCE = 5;
   */
  REFERENCE = 5,

  /**
   * @generated from enum value: COMPOSITE = 6;
   */
  COMPOSITE = 6,

  /**
   * @generated from enum value: QUANTITY = 7;
   */
  QUANTITY = 7,

  /**
   * @generated from enum value: URI = 8;
   */
  URI = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchParamTypeCode_Value)
proto3.util.setEnumType(SearchParamTypeCode_Value, "google.fhir.stu3.proto.SearchParamTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NUMBER" },
  { no: 2, name: "DATE" },
  { no: 3, name: "STRING" },
  { no: 4, name: "TOKEN" },
  { no: 5, name: "REFERENCE" },
  { no: 6, name: "COMPOSITE" },
  { no: 7, name: "QUANTITY" },
  { no: 8, name: "URI" },
]);

/**
 * How a search parameter relates to the set of elements returned by
 * evaluating its xpath query. See
 * http://hl7.org/fhir/ValueSet/search-xpath-usage
 *
 * @generated from message google.fhir.stu3.proto.XPathUsageTypeCode
 */
export class XPathUsageTypeCode extends Message<XPathUsageTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.XPathUsageTypeCode.Value value = 1;
   */
  value = XPathUsageTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<XPathUsageTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.XPathUsageTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(XPathUsageTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XPathUsageTypeCode {
    return new XPathUsageTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XPathUsageTypeCode {
    return new XPathUsageTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XPathUsageTypeCode {
    return new XPathUsageTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: XPathUsageTypeCode | PlainMessage<XPathUsageTypeCode> | undefined, b: XPathUsageTypeCode | PlainMessage<XPathUsageTypeCode> | undefined): boolean {
    return proto3.util.equals(XPathUsageTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.XPathUsageTypeCode.Value
 */
export enum XPathUsageTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * @generated from enum value: PHONETIC = 2;
   */
  PHONETIC = 2,

  /**
   * @generated from enum value: NEARBY = 3;
   */
  NEARBY = 3,

  /**
   * @generated from enum value: DISTANCE = 4;
   */
  DISTANCE = 4,

  /**
   * @generated from enum value: OTHER = 5;
   */
  OTHER = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(XPathUsageTypeCode_Value)
proto3.util.setEnumType(XPathUsageTypeCode_Value, "google.fhir.stu3.proto.XPathUsageTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NORMAL" },
  { no: 2, name: "PHONETIC" },
  { no: 3, name: "NEARBY" },
  { no: 4, name: "DISTANCE" },
  { no: 5, name: "OTHER" },
]);

/**
 * Type if a sequence -- DNA, RNA, or amino acid sequence
 * See http://hl7.org/fhir/ValueSet/sequence-type
 *
 * @generated from message google.fhir.stu3.proto.SequenceTypeCode
 */
export class SequenceTypeCode extends Message<SequenceTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SequenceTypeCode.Value value = 1;
   */
  value = SequenceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SequenceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SequenceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SequenceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SequenceTypeCode {
    return new SequenceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SequenceTypeCode {
    return new SequenceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SequenceTypeCode {
    return new SequenceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SequenceTypeCode | PlainMessage<SequenceTypeCode> | undefined, b: SequenceTypeCode | PlainMessage<SequenceTypeCode> | undefined): boolean {
    return proto3.util.equals(SequenceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SequenceTypeCode.Value
 */
export enum SequenceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AA = 1;
   */
  AA = 1,

  /**
   * @generated from enum value: DNA = 2;
   */
  DNA = 2,

  /**
   * @generated from enum value: RNA = 3;
   */
  RNA = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SequenceTypeCode_Value)
proto3.util.setEnumType(SequenceTypeCode_Value, "google.fhir.stu3.proto.SequenceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AA" },
  { no: 2, name: "DNA" },
  { no: 3, name: "RNA" },
]);

/**
 * The code(s) that detail the conditions under which the healthcare service
 * is available/offered. See
 * http://hl7.org/fhir/ValueSet/service-provision-conditions
 *
 * @generated from message google.fhir.stu3.proto.ServiceProvisionConditionsCode
 */
export class ServiceProvisionConditionsCode extends Message<ServiceProvisionConditionsCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ServiceProvisionConditionsCode.Value value = 1;
   */
  value = ServiceProvisionConditionsCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ServiceProvisionConditionsCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ServiceProvisionConditionsCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ServiceProvisionConditionsCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceProvisionConditionsCode {
    return new ServiceProvisionConditionsCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceProvisionConditionsCode {
    return new ServiceProvisionConditionsCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceProvisionConditionsCode {
    return new ServiceProvisionConditionsCode().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceProvisionConditionsCode | PlainMessage<ServiceProvisionConditionsCode> | undefined, b: ServiceProvisionConditionsCode | PlainMessage<ServiceProvisionConditionsCode> | undefined): boolean {
    return proto3.util.equals(ServiceProvisionConditionsCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ServiceProvisionConditionsCode.Value
 */
export enum ServiceProvisionConditionsCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FREE = 1;
   */
  FREE = 1,

  /**
   * @generated from enum value: DISC = 2;
   */
  DISC = 2,

  /**
   * @generated from enum value: COST = 3;
   */
  COST = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ServiceProvisionConditionsCode_Value)
proto3.util.setEnumType(ServiceProvisionConditionsCode_Value, "google.fhir.stu3.proto.ServiceProvisionConditionsCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FREE" },
  { no: 2, name: "DISC" },
  { no: 3, name: "COST" },
]);

/**
 * The methods of referral can be used when referring to a specific
 * HealthCareService resource. See
 * http://hl7.org/fhir/ValueSet/service-referral-method
 *
 * @generated from message google.fhir.stu3.proto.ReferralMethodCode
 */
export class ReferralMethodCode extends Message<ReferralMethodCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ReferralMethodCode.Value value = 1;
   */
  value = ReferralMethodCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ReferralMethodCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ReferralMethodCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ReferralMethodCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferralMethodCode {
    return new ReferralMethodCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferralMethodCode {
    return new ReferralMethodCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferralMethodCode {
    return new ReferralMethodCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReferralMethodCode | PlainMessage<ReferralMethodCode> | undefined, b: ReferralMethodCode | PlainMessage<ReferralMethodCode> | undefined): boolean {
    return proto3.util.equals(ReferralMethodCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ReferralMethodCode.Value
 */
export enum ReferralMethodCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FAX = 1;
   */
  FAX = 1,

  /**
   * @generated from enum value: PHONE = 2;
   */
  PHONE = 2,

  /**
   * @generated from enum value: ELEC = 3;
   */
  ELEC = 3,

  /**
   * @generated from enum value: SEMAIL = 4;
   */
  SEMAIL = 4,

  /**
   * @generated from enum value: MAIL = 5;
   */
  MAIL = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ReferralMethodCode_Value)
proto3.util.setEnumType(ReferralMethodCode_Value, "google.fhir.stu3.proto.ReferralMethodCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FAX" },
  { no: 2, name: "PHONE" },
  { no: 3, name: "ELEC" },
  { no: 4, name: "SEMAIL" },
  { no: 5, name: "MAIL" },
]);

/**
 * The free/busy status of the slot.
 * See http://hl7.org/fhir/ValueSet/slotstatus
 *
 * @generated from message google.fhir.stu3.proto.SlotStatusCode
 */
export class SlotStatusCode extends Message<SlotStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SlotStatusCode.Value value = 1;
   */
  value = SlotStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SlotStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SlotStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SlotStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlotStatusCode {
    return new SlotStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlotStatusCode {
    return new SlotStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlotStatusCode {
    return new SlotStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SlotStatusCode | PlainMessage<SlotStatusCode> | undefined, b: SlotStatusCode | PlainMessage<SlotStatusCode> | undefined): boolean {
    return proto3.util.equals(SlotStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SlotStatusCode.Value
 */
export enum SlotStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BUSY = 1;
   */
  BUSY = 1,

  /**
   * @generated from enum value: FREE = 2;
   */
  FREE = 2,

  /**
   * @generated from enum value: BUSY_UNAVAILABLE = 3;
   */
  BUSY_UNAVAILABLE = 3,

  /**
   * @generated from enum value: BUSY_TENTATIVE = 4;
   */
  BUSY_TENTATIVE = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(SlotStatusCode_Value)
proto3.util.setEnumType(SlotStatusCode_Value, "google.fhir.stu3.proto.SlotStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BUSY" },
  { no: 2, name: "FREE" },
  { no: 3, name: "BUSY_UNAVAILABLE" },
  { no: 4, name: "BUSY_TENTATIVE" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * A set of generally useful codes defined so they can be included in value
 * sets. See http://hl7.org/fhir/ValueSet/special-values
 *
 * @generated from message google.fhir.stu3.proto.SpecialValuesCode
 */
export class SpecialValuesCode extends Message<SpecialValuesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SpecialValuesCode.Value value = 1;
   */
  value = SpecialValuesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SpecialValuesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SpecialValuesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SpecialValuesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecialValuesCode {
    return new SpecialValuesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecialValuesCode {
    return new SpecialValuesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecialValuesCode {
    return new SpecialValuesCode().fromJsonString(jsonString, options);
  }

  static equals(a: SpecialValuesCode | PlainMessage<SpecialValuesCode> | undefined, b: SpecialValuesCode | PlainMessage<SpecialValuesCode> | undefined): boolean {
    return proto3.util.equals(SpecialValuesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SpecialValuesCode.Value
 */
export enum SpecialValuesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TRUE = 1;
   */
  TRUE = 1,

  /**
   * @generated from enum value: FALSE = 2;
   */
  FALSE = 2,

  /**
   * @generated from enum value: TRACE = 3;
   */
  TRACE = 3,

  /**
   * @generated from enum value: SUFFICIENT = 4;
   */
  SUFFICIENT = 4,

  /**
   * @generated from enum value: WITHDRAWN = 5;
   */
  WITHDRAWN = 5,

  /**
   * @generated from enum value: NIL_KNOWN = 6;
   */
  NIL_KNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(SpecialValuesCode_Value)
proto3.util.setEnumType(SpecialValuesCode_Value, "google.fhir.stu3.proto.SpecialValuesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TRUE" },
  { no: 2, name: "FALSE" },
  { no: 3, name: "TRACE" },
  { no: 4, name: "SUFFICIENT" },
  { no: 5, name: "WITHDRAWN" },
  { no: 6, name: "NIL_KNOWN" },
]);

/**
 * Codes for device specification types such as serial number, part number,
 * hardware revision, software revision, etc. See
 * http://hl7.org/fhir/ValueSet/specification-type
 *
 * @generated from message google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode
 */
export class DeviceSpecificationSpecTypeCode extends Message<DeviceSpecificationSpecTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.Value value = 1;
   */
  value = DeviceSpecificationSpecTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceSpecificationSpecTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceSpecificationSpecTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceSpecificationSpecTypeCode {
    return new DeviceSpecificationSpecTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceSpecificationSpecTypeCode {
    return new DeviceSpecificationSpecTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceSpecificationSpecTypeCode {
    return new DeviceSpecificationSpecTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceSpecificationSpecTypeCode | PlainMessage<DeviceSpecificationSpecTypeCode> | undefined, b: DeviceSpecificationSpecTypeCode | PlainMessage<DeviceSpecificationSpecTypeCode> | undefined): boolean {
    return proto3.util.equals(DeviceSpecificationSpecTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.Value
 */
export enum DeviceSpecificationSpecTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNSPECIFIED = 1;
   */
  UNSPECIFIED = 1,

  /**
   * @generated from enum value: SERIAL_NUMBER = 2;
   */
  SERIAL_NUMBER = 2,

  /**
   * @generated from enum value: PART_NUMBER = 3;
   */
  PART_NUMBER = 3,

  /**
   * @generated from enum value: HARDWARE_REVISION = 4;
   */
  HARDWARE_REVISION = 4,

  /**
   * @generated from enum value: SOFTWARE_REVISION = 5;
   */
  SOFTWARE_REVISION = 5,

  /**
   * @generated from enum value: FIRMWARE_REVISION = 6;
   */
  FIRMWARE_REVISION = 6,

  /**
   * @generated from enum value: PROTOCOL_REVISION = 7;
   */
  PROTOCOL_REVISION = 7,

  /**
   * @generated from enum value: GMDN = 8;
   */
  GMDN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceSpecificationSpecTypeCode_Value)
proto3.util.setEnumType(DeviceSpecificationSpecTypeCode_Value, "google.fhir.stu3.proto.DeviceSpecificationSpecTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNSPECIFIED" },
  { no: 2, name: "SERIAL_NUMBER" },
  { no: 3, name: "PART_NUMBER" },
  { no: 4, name: "HARDWARE_REVISION" },
  { no: 5, name: "SOFTWARE_REVISION" },
  { no: 6, name: "FIRMWARE_REVISION" },
  { no: 7, name: "PROTOCOL_REVISION" },
  { no: 8, name: "GMDN" },
]);

/**
 * Codes providing the status/availability of a specimen.
 * See http://hl7.org/fhir/ValueSet/specimen-status
 *
 * @generated from message google.fhir.stu3.proto.SpecimenStatusCode
 */
export class SpecimenStatusCode extends Message<SpecimenStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SpecimenStatusCode.Value value = 1;
   */
  value = SpecimenStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SpecimenStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SpecimenStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SpecimenStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenStatusCode {
    return new SpecimenStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenStatusCode {
    return new SpecimenStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenStatusCode {
    return new SpecimenStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenStatusCode | PlainMessage<SpecimenStatusCode> | undefined, b: SpecimenStatusCode | PlainMessage<SpecimenStatusCode> | undefined): boolean {
    return proto3.util.equals(SpecimenStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SpecimenStatusCode.Value
 */
export enum SpecimenStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AVAILABLE = 1;
   */
  AVAILABLE = 1,

  /**
   * @generated from enum value: UNAVAILABLE = 2;
   */
  UNAVAILABLE = 2,

  /**
   * @generated from enum value: UNSATISFACTORY = 3;
   */
  UNSATISFACTORY = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SpecimenStatusCode_Value)
proto3.util.setEnumType(SpecimenStatusCode_Value, "google.fhir.stu3.proto.SpecimenStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AVAILABLE" },
  { no: 2, name: "UNAVAILABLE" },
  { no: 3, name: "UNSATISFACTORY" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * Defines the type of structure that a definition is describing.
 * See http://hl7.org/fhir/ValueSet/structure-definition-kind
 *
 * @generated from message google.fhir.stu3.proto.StructureDefinitionKindCode
 */
export class StructureDefinitionKindCode extends Message<StructureDefinitionKindCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.StructureDefinitionKindCode.Value value = 1;
   */
  value = StructureDefinitionKindCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureDefinitionKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.StructureDefinitionKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureDefinitionKindCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionKindCode {
    return new StructureDefinitionKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionKindCode {
    return new StructureDefinitionKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionKindCode {
    return new StructureDefinitionKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionKindCode | PlainMessage<StructureDefinitionKindCode> | undefined, b: StructureDefinitionKindCode | PlainMessage<StructureDefinitionKindCode> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.StructureDefinitionKindCode.Value
 */
export enum StructureDefinitionKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PRIMITIVE_TYPE = 1;
   */
  PRIMITIVE_TYPE = 1,

  /**
   * @generated from enum value: COMPLEX_TYPE = 2;
   */
  COMPLEX_TYPE = 2,

  /**
   * @generated from enum value: RESOURCE = 3;
   */
  RESOURCE = 3,

  /**
   * @generated from enum value: LOGICAL = 4;
   */
  LOGICAL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureDefinitionKindCode_Value)
proto3.util.setEnumType(StructureDefinitionKindCode_Value, "google.fhir.stu3.proto.StructureDefinitionKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PRIMITIVE_TYPE" },
  { no: 2, name: "COMPLEX_TYPE" },
  { no: 3, name: "RESOURCE" },
  { no: 4, name: "LOGICAL" },
]);

/**
 * The type of method used to execute a subscription.
 * See http://hl7.org/fhir/ValueSet/subscription-channel-type
 *
 * @generated from message google.fhir.stu3.proto.SubscriptionChannelTypeCode
 */
export class SubscriptionChannelTypeCode extends Message<SubscriptionChannelTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SubscriptionChannelTypeCode.Value value = 1;
   */
  value = SubscriptionChannelTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SubscriptionChannelTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SubscriptionChannelTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SubscriptionChannelTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionChannelTypeCode {
    return new SubscriptionChannelTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionChannelTypeCode {
    return new SubscriptionChannelTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionChannelTypeCode {
    return new SubscriptionChannelTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SubscriptionChannelTypeCode | PlainMessage<SubscriptionChannelTypeCode> | undefined, b: SubscriptionChannelTypeCode | PlainMessage<SubscriptionChannelTypeCode> | undefined): boolean {
    return proto3.util.equals(SubscriptionChannelTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SubscriptionChannelTypeCode.Value
 */
export enum SubscriptionChannelTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REST_HOOK = 1;
   */
  REST_HOOK = 1,

  /**
   * @generated from enum value: WEBSOCKET = 2;
   */
  WEBSOCKET = 2,

  /**
   * @generated from enum value: EMAIL = 3;
   */
  EMAIL = 3,

  /**
   * @generated from enum value: SMS = 4;
   */
  SMS = 4,

  /**
   * @generated from enum value: MESSAGE = 5;
   */
  MESSAGE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(SubscriptionChannelTypeCode_Value)
proto3.util.setEnumType(SubscriptionChannelTypeCode_Value, "google.fhir.stu3.proto.SubscriptionChannelTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REST_HOOK" },
  { no: 2, name: "WEBSOCKET" },
  { no: 3, name: "EMAIL" },
  { no: 4, name: "SMS" },
  { no: 5, name: "MESSAGE" },
]);

/**
 * The status of a subscription.
 * See http://hl7.org/fhir/ValueSet/subscription-status
 *
 * @generated from message google.fhir.stu3.proto.SubscriptionStatusCode
 */
export class SubscriptionStatusCode extends Message<SubscriptionStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SubscriptionStatusCode.Value value = 1;
   */
  value = SubscriptionStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SubscriptionStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SubscriptionStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SubscriptionStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionStatusCode {
    return new SubscriptionStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionStatusCode {
    return new SubscriptionStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionStatusCode {
    return new SubscriptionStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SubscriptionStatusCode | PlainMessage<SubscriptionStatusCode> | undefined, b: SubscriptionStatusCode | PlainMessage<SubscriptionStatusCode> | undefined): boolean {
    return proto3.util.equals(SubscriptionStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SubscriptionStatusCode.Value
 */
export enum SubscriptionStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUESTED = 1;
   */
  REQUESTED = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: OFF = 4;
   */
  OFF = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SubscriptionStatusCode_Value)
proto3.util.setEnumType(SubscriptionStatusCode_Value, "google.fhir.stu3.proto.SubscriptionStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUESTED" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "ERROR" },
  { no: 4, name: "OFF" },
]);

/**
 * Tags to put on a resource after subscriptions have been sent.
 * See http://hl7.org/fhir/ValueSet/subscription-tag
 *
 * @generated from message google.fhir.stu3.proto.SubscriptionTagCode
 */
export class SubscriptionTagCode extends Message<SubscriptionTagCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SubscriptionTagCode.Value value = 1;
   */
  value = SubscriptionTagCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SubscriptionTagCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SubscriptionTagCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SubscriptionTagCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionTagCode {
    return new SubscriptionTagCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionTagCode {
    return new SubscriptionTagCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionTagCode {
    return new SubscriptionTagCode().fromJsonString(jsonString, options);
  }

  static equals(a: SubscriptionTagCode | PlainMessage<SubscriptionTagCode> | undefined, b: SubscriptionTagCode | PlainMessage<SubscriptionTagCode> | undefined): boolean {
    return proto3.util.equals(SubscriptionTagCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SubscriptionTagCode.Value
 */
export enum SubscriptionTagCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * @generated from enum value: DELIVERED = 2;
   */
  DELIVERED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SubscriptionTagCode_Value)
proto3.util.setEnumType(SubscriptionTagCode_Value, "google.fhir.stu3.proto.SubscriptionTagCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "QUEUED" },
  { no: 2, name: "DELIVERED" },
]);

/**
 * Substance category codes
 * See http://hl7.org/fhir/ValueSet/substance-category
 *
 * @generated from message google.fhir.stu3.proto.SubstanceCategoryCodesCode
 */
export class SubstanceCategoryCodesCode extends Message<SubstanceCategoryCodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SubstanceCategoryCodesCode.Value value = 1;
   */
  value = SubstanceCategoryCodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SubstanceCategoryCodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SubstanceCategoryCodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SubstanceCategoryCodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstanceCategoryCodesCode {
    return new SubstanceCategoryCodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstanceCategoryCodesCode {
    return new SubstanceCategoryCodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstanceCategoryCodesCode {
    return new SubstanceCategoryCodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: SubstanceCategoryCodesCode | PlainMessage<SubstanceCategoryCodesCode> | undefined, b: SubstanceCategoryCodesCode | PlainMessage<SubstanceCategoryCodesCode> | undefined): boolean {
    return proto3.util.equals(SubstanceCategoryCodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SubstanceCategoryCodesCode.Value
 */
export enum SubstanceCategoryCodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALLERGEN = 1;
   */
  ALLERGEN = 1,

  /**
   * @generated from enum value: BIOLOGICAL = 2;
   */
  BIOLOGICAL = 2,

  /**
   * @generated from enum value: BODY = 3;
   */
  BODY = 3,

  /**
   * @generated from enum value: CHEMICAL = 4;
   */
  CHEMICAL = 4,

  /**
   * @generated from enum value: FOOD = 5;
   */
  FOOD = 5,

  /**
   * @generated from enum value: DRUG = 6;
   */
  DRUG = 6,

  /**
   * @generated from enum value: MATERIAL = 7;
   */
  MATERIAL = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(SubstanceCategoryCodesCode_Value)
proto3.util.setEnumType(SubstanceCategoryCodesCode_Value, "google.fhir.stu3.proto.SubstanceCategoryCodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALLERGEN" },
  { no: 2, name: "BIOLOGICAL" },
  { no: 3, name: "BODY" },
  { no: 4, name: "CHEMICAL" },
  { no: 5, name: "FOOD" },
  { no: 6, name: "DRUG" },
  { no: 7, name: "MATERIAL" },
]);

/**
 * A code to indicate if the substance is actively used
 * See http://hl7.org/fhir/ValueSet/substance-status
 *
 * @generated from message google.fhir.stu3.proto.FHIRSubstanceStatusCode
 */
export class FHIRSubstanceStatusCode extends Message<FHIRSubstanceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.FHIRSubstanceStatusCode.Value value = 1;
   */
  value = FHIRSubstanceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<FHIRSubstanceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FHIRSubstanceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRSubstanceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRSubstanceStatusCode {
    return new FHIRSubstanceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRSubstanceStatusCode {
    return new FHIRSubstanceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRSubstanceStatusCode {
    return new FHIRSubstanceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRSubstanceStatusCode | PlainMessage<FHIRSubstanceStatusCode> | undefined, b: FHIRSubstanceStatusCode | PlainMessage<FHIRSubstanceStatusCode> | undefined): boolean {
    return proto3.util.equals(FHIRSubstanceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.FHIRSubstanceStatusCode.Value
 */
export enum FHIRSubstanceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRSubstanceStatusCode_Value)
proto3.util.setEnumType(FHIRSubstanceStatusCode_Value, "google.fhir.stu3.proto.FHIRSubstanceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * Status of the supply delivery.
 * See http://hl7.org/fhir/ValueSet/supplydelivery-status
 *
 * @generated from message google.fhir.stu3.proto.SupplyDeliveryStatusCode
 */
export class SupplyDeliveryStatusCode extends Message<SupplyDeliveryStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SupplyDeliveryStatusCode.Value value = 1;
   */
  value = SupplyDeliveryStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SupplyDeliveryStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyDeliveryStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SupplyDeliveryStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyDeliveryStatusCode {
    return new SupplyDeliveryStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyDeliveryStatusCode {
    return new SupplyDeliveryStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyDeliveryStatusCode {
    return new SupplyDeliveryStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyDeliveryStatusCode | PlainMessage<SupplyDeliveryStatusCode> | undefined, b: SupplyDeliveryStatusCode | PlainMessage<SupplyDeliveryStatusCode> | undefined): boolean {
    return proto3.util.equals(SupplyDeliveryStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SupplyDeliveryStatusCode.Value
 */
export enum SupplyDeliveryStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ABANDONED = 3;
   */
  ABANDONED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyDeliveryStatusCode_Value)
proto3.util.setEnumType(SupplyDeliveryStatusCode_Value, "google.fhir.stu3.proto.SupplyDeliveryStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ABANDONED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * This value sets refers to a specific supply item.
 * See http://hl7.org/fhir/ValueSet/supplydelivery-type
 *
 * @generated from message google.fhir.stu3.proto.SupplyItemTypeCode
 */
export class SupplyItemTypeCode extends Message<SupplyItemTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SupplyItemTypeCode.Value value = 1;
   */
  value = SupplyItemTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SupplyItemTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyItemTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SupplyItemTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyItemTypeCode {
    return new SupplyItemTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyItemTypeCode {
    return new SupplyItemTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyItemTypeCode {
    return new SupplyItemTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyItemTypeCode | PlainMessage<SupplyItemTypeCode> | undefined, b: SupplyItemTypeCode | PlainMessage<SupplyItemTypeCode> | undefined): boolean {
    return proto3.util.equals(SupplyItemTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SupplyItemTypeCode.Value
 */
export enum SupplyItemTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MEDICATION = 1;
   */
  MEDICATION = 1,

  /**
   * @generated from enum value: DEVICE = 2;
   */
  DEVICE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyItemTypeCode_Value)
proto3.util.setEnumType(SupplyItemTypeCode_Value, "google.fhir.stu3.proto.SupplyItemTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MEDICATION" },
  { no: 2, name: "DEVICE" },
]);

/**
 * This value sets refers to a Category of supply.
 * See http://hl7.org/fhir/ValueSet/supplyrequest-kind
 *
 * @generated from message google.fhir.stu3.proto.SupplyTypeCode
 */
export class SupplyTypeCode extends Message<SupplyTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SupplyTypeCode.Value value = 1;
   */
  value = SupplyTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SupplyTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SupplyTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyTypeCode {
    return new SupplyTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyTypeCode {
    return new SupplyTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyTypeCode {
    return new SupplyTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyTypeCode | PlainMessage<SupplyTypeCode> | undefined, b: SupplyTypeCode | PlainMessage<SupplyTypeCode> | undefined): boolean {
    return proto3.util.equals(SupplyTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SupplyTypeCode.Value
 */
export enum SupplyTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CENTRAL = 1;
   */
  CENTRAL = 1,

  /**
   * @generated from enum value: NONSTOCK = 2;
   */
  NONSTOCK = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyTypeCode_Value)
proto3.util.setEnumType(SupplyTypeCode_Value, "google.fhir.stu3.proto.SupplyTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CENTRAL" },
  { no: 2, name: "NONSTOCK" },
]);

/**
 * Why the supply item was requested
 * See http://hl7.org/fhir/ValueSet/supplyrequest-reason
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequestReasonCode
 */
export class SupplyRequestReasonCode extends Message<SupplyRequestReasonCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequestReasonCode.Value value = 1;
   */
  value = SupplyRequestReasonCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SupplyRequestReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequestReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SupplyRequestReasonCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequestReasonCode {
    return new SupplyRequestReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequestReasonCode {
    return new SupplyRequestReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequestReasonCode {
    return new SupplyRequestReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequestReasonCode | PlainMessage<SupplyRequestReasonCode> | undefined, b: SupplyRequestReasonCode | PlainMessage<SupplyRequestReasonCode> | undefined): boolean {
    return proto3.util.equals(SupplyRequestReasonCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SupplyRequestReasonCode.Value
 */
export enum SupplyRequestReasonCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PATIENT_CARE = 1;
   */
  PATIENT_CARE = 1,

  /**
   * @generated from enum value: WARD_STOCK = 2;
   */
  WARD_STOCK = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyRequestReasonCode_Value)
proto3.util.setEnumType(SupplyRequestReasonCode_Value, "google.fhir.stu3.proto.SupplyRequestReasonCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PATIENT_CARE" },
  { no: 2, name: "WARD_STOCK" },
]);

/**
 * Status of the supply request
 * See http://hl7.org/fhir/ValueSet/supplyrequest-status
 *
 * @generated from message google.fhir.stu3.proto.SupplyRequestStatusCode
 */
export class SupplyRequestStatusCode extends Message<SupplyRequestStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SupplyRequestStatusCode.Value value = 1;
   */
  value = SupplyRequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SupplyRequestStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SupplyRequestStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SupplyRequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequestStatusCode {
    return new SupplyRequestStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequestStatusCode {
    return new SupplyRequestStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequestStatusCode {
    return new SupplyRequestStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequestStatusCode | PlainMessage<SupplyRequestStatusCode> | undefined, b: SupplyRequestStatusCode | PlainMessage<SupplyRequestStatusCode> | undefined): boolean {
    return proto3.util.equals(SupplyRequestStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SupplyRequestStatusCode.Value
 */
export enum SupplyRequestStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyRequestStatusCode_Value)
proto3.util.setEnumType(SupplyRequestStatusCode_Value, "google.fhir.stu3.proto.SupplyRequestStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "CANCELLED" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Operations supported by REST at the system level.
 * http://hl7.org/fhir/ValueSet/system-restful-interaction
 *
 * @generated from message google.fhir.stu3.proto.SystemRestfulInteractionCode
 */
export class SystemRestfulInteractionCode extends Message<SystemRestfulInteractionCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SystemRestfulInteractionCode.Value value = 1;
   */
  value = SystemRestfulInteractionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SystemRestfulInteractionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SystemRestfulInteractionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SystemRestfulInteractionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemRestfulInteractionCode {
    return new SystemRestfulInteractionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemRestfulInteractionCode {
    return new SystemRestfulInteractionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemRestfulInteractionCode {
    return new SystemRestfulInteractionCode().fromJsonString(jsonString, options);
  }

  static equals(a: SystemRestfulInteractionCode | PlainMessage<SystemRestfulInteractionCode> | undefined, b: SystemRestfulInteractionCode | PlainMessage<SystemRestfulInteractionCode> | undefined): boolean {
    return proto3.util.equals(SystemRestfulInteractionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SystemRestfulInteractionCode.Value
 */
export enum SystemRestfulInteractionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TRANSACTION = 1;
   */
  TRANSACTION = 1,

  /**
   * @generated from enum value: BATCH = 2;
   */
  BATCH = 2,

  /**
   * @generated from enum value: SEARCH_SYSTEM = 3;
   */
  SEARCH_SYSTEM = 3,

  /**
   * @generated from enum value: HISTORY_SYSTEM = 4;
   */
  HISTORY_SYSTEM = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SystemRestfulInteractionCode_Value)
proto3.util.setEnumType(SystemRestfulInteractionCode_Value, "google.fhir.stu3.proto.SystemRestfulInteractionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TRANSACTION" },
  { no: 2, name: "BATCH" },
  { no: 3, name: "SEARCH_SYSTEM" },
  { no: 4, name: "HISTORY_SYSTEM" },
]);

/**
 * How to manage the intersection between a fixed version in a value set, and
 * a fixed version of the system in the expansion profile See
 * http://hl7.org/fhir/ValueSet/system-version-processing-mode
 *
 * @generated from message google.fhir.stu3.proto.SystemVersionProcessingModeCode
 */
export class SystemVersionProcessingModeCode extends Message<SystemVersionProcessingModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.SystemVersionProcessingModeCode.Value value = 1;
   */
  value = SystemVersionProcessingModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SystemVersionProcessingModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.SystemVersionProcessingModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SystemVersionProcessingModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SystemVersionProcessingModeCode {
    return new SystemVersionProcessingModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SystemVersionProcessingModeCode {
    return new SystemVersionProcessingModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SystemVersionProcessingModeCode {
    return new SystemVersionProcessingModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SystemVersionProcessingModeCode | PlainMessage<SystemVersionProcessingModeCode> | undefined, b: SystemVersionProcessingModeCode | PlainMessage<SystemVersionProcessingModeCode> | undefined): boolean {
    return proto3.util.equals(SystemVersionProcessingModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.SystemVersionProcessingModeCode.Value
 */
export enum SystemVersionProcessingModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DEFAULT = 1;
   */
  DEFAULT = 1,

  /**
   * @generated from enum value: CHECK = 2;
   */
  CHECK = 2,

  /**
   * @generated from enum value: OVERRIDE = 3;
   */
  OVERRIDE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SystemVersionProcessingModeCode_Value)
proto3.util.setEnumType(SystemVersionProcessingModeCode_Value, "google.fhir.stu3.proto.SystemVersionProcessingModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DEFAULT" },
  { no: 2, name: "CHECK" },
  { no: 3, name: "OVERRIDE" },
]);

/**
 * The type(s) of task performers allowed
 * See http://hl7.org/fhir/ValueSet/task-performer-type
 *
 * @generated from message google.fhir.stu3.proto.TaskPerformerTypeCode
 */
export class TaskPerformerTypeCode extends Message<TaskPerformerTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TaskPerformerTypeCode.Value value = 1;
   */
  value = TaskPerformerTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TaskPerformerTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TaskPerformerTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TaskPerformerTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskPerformerTypeCode {
    return new TaskPerformerTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskPerformerTypeCode {
    return new TaskPerformerTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskPerformerTypeCode {
    return new TaskPerformerTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TaskPerformerTypeCode | PlainMessage<TaskPerformerTypeCode> | undefined, b: TaskPerformerTypeCode | PlainMessage<TaskPerformerTypeCode> | undefined): boolean {
    return proto3.util.equals(TaskPerformerTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TaskPerformerTypeCode.Value
 */
export enum TaskPerformerTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUESTER = 1;
   */
  REQUESTER = 1,

  /**
   * @generated from enum value: DISPATCHER = 2;
   */
  DISPATCHER = 2,

  /**
   * @generated from enum value: SCHEDULER = 3;
   */
  SCHEDULER = 3,

  /**
   * @generated from enum value: PERFORMER = 4;
   */
  PERFORMER = 4,

  /**
   * @generated from enum value: MONITOR = 5;
   */
  MONITOR = 5,

  /**
   * @generated from enum value: MANAGER = 6;
   */
  MANAGER = 6,

  /**
   * @generated from enum value: ACQUIRER = 7;
   */
  ACQUIRER = 7,

  /**
   * @generated from enum value: REVIEWER = 8;
   */
  REVIEWER = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(TaskPerformerTypeCode_Value)
proto3.util.setEnumType(TaskPerformerTypeCode_Value, "google.fhir.stu3.proto.TaskPerformerTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUESTER" },
  { no: 2, name: "DISPATCHER" },
  { no: 3, name: "SCHEDULER" },
  { no: 4, name: "PERFORMER" },
  { no: 5, name: "MONITOR" },
  { no: 6, name: "MANAGER" },
  { no: 7, name: "ACQUIRER" },
  { no: 8, name: "REVIEWER" },
]);

/**
 * The status indicates the level of maturity of the design and may be used to
 * manage the use of the design See
 * http://hl7.org/fhir/ValueSet/template-status-code
 *
 * @generated from message google.fhir.stu3.proto.TemplateStatusCodeCode
 */
export class TemplateStatusCodeCode extends Message<TemplateStatusCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TemplateStatusCodeCode.Value value = 1;
   */
  value = TemplateStatusCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TemplateStatusCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TemplateStatusCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TemplateStatusCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TemplateStatusCodeCode {
    return new TemplateStatusCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TemplateStatusCodeCode {
    return new TemplateStatusCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TemplateStatusCodeCode {
    return new TemplateStatusCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TemplateStatusCodeCode | PlainMessage<TemplateStatusCodeCode> | undefined, b: TemplateStatusCodeCode | PlainMessage<TemplateStatusCodeCode> | undefined): boolean {
    return proto3.util.equals(TemplateStatusCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TemplateStatusCodeCode.Value
 */
export enum TemplateStatusCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: REVIEW = 4;
   */
  REVIEW = 4,

  /**
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,

  /**
   * @generated from enum value: REJECTED = 6;
   */
  REJECTED = 6,

  /**
   * @generated from enum value: RETIRED = 7;
   */
  RETIRED = 7,

  /**
   * @generated from enum value: TERMINATED = 8;
   */
  TERMINATED = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(TemplateStatusCodeCode_Value)
proto3.util.setEnumType(TemplateStatusCodeCode_Value, "google.fhir.stu3.proto.TemplateStatusCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "REVIEW" },
  { no: 5, name: "CANCELLED" },
  { no: 6, name: "REJECTED" },
  { no: 7, name: "RETIRED" },
  { no: 8, name: "TERMINATED" },
]);

/**
 * The current status of the task.
 * See http://hl7.org/fhir/ValueSet/task-status
 *
 * @generated from message google.fhir.stu3.proto.TaskStatusCode
 */
export class TaskStatusCode extends Message<TaskStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TaskStatusCode.Value value = 1;
   */
  value = TaskStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TaskStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TaskStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TaskStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskStatusCode {
    return new TaskStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskStatusCode {
    return new TaskStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskStatusCode {
    return new TaskStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: TaskStatusCode | PlainMessage<TaskStatusCode> | undefined, b: TaskStatusCode | PlainMessage<TaskStatusCode> | undefined): boolean {
    return proto3.util.equals(TaskStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TaskStatusCode.Value
 */
export enum TaskStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: REQUESTED = 2;
   */
  REQUESTED = 2,

  /**
   * @generated from enum value: RECEIVED = 3;
   */
  RECEIVED = 3,

  /**
   * @generated from enum value: ACCEPTED = 4;
   */
  ACCEPTED = 4,

  /**
   * @generated from enum value: REJECTED = 5;
   */
  REJECTED = 5,

  /**
   * @generated from enum value: READY = 6;
   */
  READY = 6,

  /**
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * @generated from enum value: IN_PROGRESS = 8;
   */
  IN_PROGRESS = 8,

  /**
   * @generated from enum value: ON_HOLD = 9;
   */
  ON_HOLD = 9,

  /**
   * @generated from enum value: FAILED = 10;
   */
  FAILED = 10,

  /**
   * @generated from enum value: COMPLETED = 11;
   */
  COMPLETED = 11,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 12;
   */
  ENTERED_IN_ERROR = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(TaskStatusCode_Value)
proto3.util.setEnumType(TaskStatusCode_Value, "google.fhir.stu3.proto.TaskStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "REQUESTED" },
  { no: 3, name: "RECEIVED" },
  { no: 4, name: "ACCEPTED" },
  { no: 5, name: "REJECTED" },
  { no: 6, name: "READY" },
  { no: 7, name: "CANCELLED" },
  { no: 8, name: "IN_PROGRESS" },
  { no: 9, name: "ON_HOLD" },
  { no: 10, name: "FAILED" },
  { no: 11, name: "COMPLETED" },
  { no: 12, name: "ENTERED_IN_ERROR" },
]);

/**
 * This value set defines a set of codes that are used to indicate the
 * supported operations of a testing engine or tool. See
 * http://hl7.org/fhir/ValueSet/testscript-operation-codes
 *
 * @generated from message google.fhir.stu3.proto.TestScriptOperationCodeCode
 */
export class TestScriptOperationCodeCode extends Message<TestScriptOperationCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestScriptOperationCodeCode.Value value = 1;
   */
  value = TestScriptOperationCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScriptOperationCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScriptOperationCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestScriptOperationCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScriptOperationCodeCode {
    return new TestScriptOperationCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScriptOperationCodeCode {
    return new TestScriptOperationCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScriptOperationCodeCode {
    return new TestScriptOperationCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScriptOperationCodeCode | PlainMessage<TestScriptOperationCodeCode> | undefined, b: TestScriptOperationCodeCode | PlainMessage<TestScriptOperationCodeCode> | undefined): boolean {
    return proto3.util.equals(TestScriptOperationCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestScriptOperationCodeCode.Value
 */
export enum TestScriptOperationCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: READ = 1;
   */
  READ = 1,

  /**
   * @generated from enum value: VREAD = 2;
   */
  VREAD = 2,

  /**
   * @generated from enum value: UPDATE = 3;
   */
  UPDATE = 3,

  /**
   * @generated from enum value: UPDATE_CREATE = 4;
   */
  UPDATE_CREATE = 4,

  /**
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * @generated from enum value: DELETE_COND_SINGLE = 6;
   */
  DELETE_COND_SINGLE = 6,

  /**
   * @generated from enum value: DELETE_COND_MULTIPLE = 7;
   */
  DELETE_COND_MULTIPLE = 7,

  /**
   * @generated from enum value: HISTORY = 8;
   */
  HISTORY = 8,

  /**
   * @generated from enum value: CREATE = 9;
   */
  CREATE = 9,

  /**
   * @generated from enum value: SEARCH = 10;
   */
  SEARCH = 10,

  /**
   * @generated from enum value: BATCH = 11;
   */
  BATCH = 11,

  /**
   * @generated from enum value: TRANSACTION = 12;
   */
  TRANSACTION = 12,

  /**
   * @generated from enum value: CAPABILITIES = 13;
   */
  CAPABILITIES = 13,

  /**
   * @generated from enum value: APPLY = 14;
   */
  APPLY = 14,

  /**
   * @generated from enum value: CANCEL = 15;
   */
  CANCEL = 15,

  /**
   * @generated from enum value: CLOSURE = 16;
   */
  CLOSURE = 16,

  /**
   * @generated from enum value: COMPOSE = 17;
   */
  COMPOSE = 17,

  /**
   * @generated from enum value: CONFORMS = 18;
   */
  CONFORMS = 18,

  /**
   * @generated from enum value: DATA_REQUIREMENTS = 19;
   */
  DATA_REQUIREMENTS = 19,

  /**
   * @generated from enum value: DOCUMENT = 20;
   */
  DOCUMENT = 20,

  /**
   * @generated from enum value: EVALUATE = 21;
   */
  EVALUATE = 21,

  /**
   * @generated from enum value: EVALUATE_MEASURE = 22;
   */
  EVALUATE_MEASURE = 22,

  /**
   * @generated from enum value: EVERYTHING = 23;
   */
  EVERYTHING = 23,

  /**
   * @generated from enum value: EXPAND = 24;
   */
  EXPAND = 24,

  /**
   * @generated from enum value: FAIL = 25;
   */
  FAIL = 25,

  /**
   * @generated from enum value: FIND = 26;
   */
  FIND = 26,

  /**
   * @generated from enum value: FINISH = 27;
   */
  FINISH = 27,

  /**
   * @generated from enum value: IMPLEMENTS = 28;
   */
  IMPLEMENTS = 28,

  /**
   * @generated from enum value: LOOKUP = 29;
   */
  LOOKUP = 29,

  /**
   * @generated from enum value: MATCH = 30;
   */
  MATCH = 30,

  /**
   * @generated from enum value: META = 31;
   */
  META = 31,

  /**
   * @generated from enum value: META_ADD = 32;
   */
  META_ADD = 32,

  /**
   * @generated from enum value: META_DELETE = 33;
   */
  META_DELETE = 33,

  /**
   * @generated from enum value: POPULATE = 34;
   */
  POPULATE = 34,

  /**
   * @generated from enum value: POPULATEHTML = 35;
   */
  POPULATEHTML = 35,

  /**
   * @generated from enum value: POPULATELINK = 36;
   */
  POPULATELINK = 36,

  /**
   * @generated from enum value: PROCESS_MESSAGE = 37;
   */
  PROCESS_MESSAGE = 37,

  /**
   * @generated from enum value: QUESTIONNAIRE = 38;
   */
  QUESTIONNAIRE = 38,

  /**
   * @generated from enum value: RELEASE = 39;
   */
  RELEASE = 39,

  /**
   * @generated from enum value: RESERVE = 40;
   */
  RESERVE = 40,

  /**
   * @generated from enum value: RESUME = 41;
   */
  RESUME = 41,

  /**
   * @generated from enum value: SET_INPUT = 42;
   */
  SET_INPUT = 42,

  /**
   * @generated from enum value: SET_OUTPUT = 43;
   */
  SET_OUTPUT = 43,

  /**
   * @generated from enum value: START = 44;
   */
  START = 44,

  /**
   * @generated from enum value: STATS = 45;
   */
  STATS = 45,

  /**
   * @generated from enum value: STOP = 46;
   */
  STOP = 46,

  /**
   * @generated from enum value: SUBSET = 47;
   */
  SUBSET = 47,

  /**
   * @generated from enum value: SUBSUMES = 48;
   */
  SUBSUMES = 48,

  /**
   * @generated from enum value: SUSPEND = 49;
   */
  SUSPEND = 49,

  /**
   * @generated from enum value: TRANSFORM = 50;
   */
  TRANSFORM = 50,

  /**
   * @generated from enum value: TRANSLATE = 51;
   */
  TRANSLATE = 51,

  /**
   * @generated from enum value: VALIDATE = 52;
   */
  VALIDATE = 52,

  /**
   * @generated from enum value: VALIDATE_CODE = 53;
   */
  VALIDATE_CODE = 53,
}
// Retrieve enum metadata with: proto3.getEnumType(TestScriptOperationCodeCode_Value)
proto3.util.setEnumType(TestScriptOperationCodeCode_Value, "google.fhir.stu3.proto.TestScriptOperationCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "READ" },
  { no: 2, name: "VREAD" },
  { no: 3, name: "UPDATE" },
  { no: 4, name: "UPDATE_CREATE" },
  { no: 5, name: "DELETE" },
  { no: 6, name: "DELETE_COND_SINGLE" },
  { no: 7, name: "DELETE_COND_MULTIPLE" },
  { no: 8, name: "HISTORY" },
  { no: 9, name: "CREATE" },
  { no: 10, name: "SEARCH" },
  { no: 11, name: "BATCH" },
  { no: 12, name: "TRANSACTION" },
  { no: 13, name: "CAPABILITIES" },
  { no: 14, name: "APPLY" },
  { no: 15, name: "CANCEL" },
  { no: 16, name: "CLOSURE" },
  { no: 17, name: "COMPOSE" },
  { no: 18, name: "CONFORMS" },
  { no: 19, name: "DATA_REQUIREMENTS" },
  { no: 20, name: "DOCUMENT" },
  { no: 21, name: "EVALUATE" },
  { no: 22, name: "EVALUATE_MEASURE" },
  { no: 23, name: "EVERYTHING" },
  { no: 24, name: "EXPAND" },
  { no: 25, name: "FAIL" },
  { no: 26, name: "FIND" },
  { no: 27, name: "FINISH" },
  { no: 28, name: "IMPLEMENTS" },
  { no: 29, name: "LOOKUP" },
  { no: 30, name: "MATCH" },
  { no: 31, name: "META" },
  { no: 32, name: "META_ADD" },
  { no: 33, name: "META_DELETE" },
  { no: 34, name: "POPULATE" },
  { no: 35, name: "POPULATEHTML" },
  { no: 36, name: "POPULATELINK" },
  { no: 37, name: "PROCESS_MESSAGE" },
  { no: 38, name: "QUESTIONNAIRE" },
  { no: 39, name: "RELEASE" },
  { no: 40, name: "RESERVE" },
  { no: 41, name: "RESUME" },
  { no: 42, name: "SET_INPUT" },
  { no: 43, name: "SET_OUTPUT" },
  { no: 44, name: "START" },
  { no: 45, name: "STATS" },
  { no: 46, name: "STOP" },
  { no: 47, name: "SUBSET" },
  { no: 48, name: "SUBSUMES" },
  { no: 49, name: "SUSPEND" },
  { no: 50, name: "TRANSFORM" },
  { no: 51, name: "TRANSLATE" },
  { no: 52, name: "VALIDATE" },
  { no: 53, name: "VALIDATE_CODE" },
]);

/**
 * This value set defines a set of codes that are used to indicate the profile
 * type of a test system when acting as the destination within a TestScript.
 * See http://hl7.org/fhir/ValueSet/testscript-profile-destination-types
 *
 * @generated from message google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode
 */
export class TestScriptProfileDestinationTypeCode extends Message<TestScriptProfileDestinationTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.Value value = 1;
   */
  value = TestScriptProfileDestinationTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScriptProfileDestinationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestScriptProfileDestinationTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScriptProfileDestinationTypeCode {
    return new TestScriptProfileDestinationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScriptProfileDestinationTypeCode {
    return new TestScriptProfileDestinationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScriptProfileDestinationTypeCode {
    return new TestScriptProfileDestinationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScriptProfileDestinationTypeCode | PlainMessage<TestScriptProfileDestinationTypeCode> | undefined, b: TestScriptProfileDestinationTypeCode | PlainMessage<TestScriptProfileDestinationTypeCode> | undefined): boolean {
    return proto3.util.equals(TestScriptProfileDestinationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.Value
 */
export enum TestScriptProfileDestinationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FHIR_SERVER = 1;
   */
  FHIR_SERVER = 1,

  /**
   * @generated from enum value: FHIR_SDC_FORMMANAGER = 2;
   */
  FHIR_SDC_FORMMANAGER = 2,

  /**
   * @generated from enum value: FHIR_SDC_FORMPROCESSOR = 3;
   */
  FHIR_SDC_FORMPROCESSOR = 3,

  /**
   * @generated from enum value: FHIR_SDC_FORMRECEIVER = 4;
   */
  FHIR_SDC_FORMRECEIVER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(TestScriptProfileDestinationTypeCode_Value)
proto3.util.setEnumType(TestScriptProfileDestinationTypeCode_Value, "google.fhir.stu3.proto.TestScriptProfileDestinationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FHIR_SERVER" },
  { no: 2, name: "FHIR_SDC_FORMMANAGER" },
  { no: 3, name: "FHIR_SDC_FORMPROCESSOR" },
  { no: 4, name: "FHIR_SDC_FORMRECEIVER" },
]);

/**
 * This value set defines a set of codes that are used to indicate the profile
 * type of a test system when acting as the origin within a TestScript. See
 * http://hl7.org/fhir/ValueSet/testscript-profile-origin-types
 *
 * @generated from message google.fhir.stu3.proto.TestScriptProfileOriginTypeCode
 */
export class TestScriptProfileOriginTypeCode extends Message<TestScriptProfileOriginTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.Value value = 1;
   */
  value = TestScriptProfileOriginTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScriptProfileOriginTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TestScriptProfileOriginTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestScriptProfileOriginTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScriptProfileOriginTypeCode {
    return new TestScriptProfileOriginTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScriptProfileOriginTypeCode {
    return new TestScriptProfileOriginTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScriptProfileOriginTypeCode {
    return new TestScriptProfileOriginTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScriptProfileOriginTypeCode | PlainMessage<TestScriptProfileOriginTypeCode> | undefined, b: TestScriptProfileOriginTypeCode | PlainMessage<TestScriptProfileOriginTypeCode> | undefined): boolean {
    return proto3.util.equals(TestScriptProfileOriginTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.Value
 */
export enum TestScriptProfileOriginTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FHIR_CLIENT = 1;
   */
  FHIR_CLIENT = 1,

  /**
   * @generated from enum value: FHIR_SDC_FORMFILLER = 2;
   */
  FHIR_SDC_FORMFILLER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TestScriptProfileOriginTypeCode_Value)
proto3.util.setEnumType(TestScriptProfileOriginTypeCode_Value, "google.fhir.stu3.proto.TestScriptProfileOriginTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FHIR_CLIENT" },
  { no: 2, name: "FHIR_SDC_FORMFILLER" },
]);

/**
 * A code that indicates how transactions are supported.
 * See http://hl7.org/fhir/ValueSet/transaction-mode
 *
 * @generated from message google.fhir.stu3.proto.TransactionModeCode
 */
export class TransactionModeCode extends Message<TransactionModeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TransactionModeCode.Value value = 1;
   */
  value = TransactionModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TransactionModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TransactionModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TransactionModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransactionModeCode {
    return new TransactionModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransactionModeCode {
    return new TransactionModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransactionModeCode {
    return new TransactionModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TransactionModeCode | PlainMessage<TransactionModeCode> | undefined, b: TransactionModeCode | PlainMessage<TransactionModeCode> | undefined): boolean {
    return proto3.util.equals(TransactionModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TransactionModeCode.Value
 */
export enum TransactionModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_SUPPORTED = 1;
   */
  NOT_SUPPORTED = 1,

  /**
   * @generated from enum value: BATCH = 2;
   */
  BATCH = 2,

  /**
   * @generated from enum value: TRANSACTION = 3;
   */
  TRANSACTION = 3,

  /**
   * @generated from enum value: BOTH = 4;
   */
  BOTH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(TransactionModeCode_Value)
proto3.util.setEnumType(TransactionModeCode_Value, "google.fhir.stu3.proto.TransactionModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_SUPPORTED" },
  { no: 2, name: "BATCH" },
  { no: 3, name: "TRANSACTION" },
  { no: 4, name: "BOTH" },
]);

/**
 * How a type relates to its baseDefinition.
 * See http://hl7.org/fhir/ValueSet/type-derivation-rule
 *
 * @generated from message google.fhir.stu3.proto.TypeDerivationRuleCode
 */
export class TypeDerivationRuleCode extends Message<TypeDerivationRuleCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TypeDerivationRuleCode.Value value = 1;
   */
  value = TypeDerivationRuleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TypeDerivationRuleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TypeDerivationRuleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TypeDerivationRuleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypeDerivationRuleCode {
    return new TypeDerivationRuleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypeDerivationRuleCode {
    return new TypeDerivationRuleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypeDerivationRuleCode {
    return new TypeDerivationRuleCode().fromJsonString(jsonString, options);
  }

  static equals(a: TypeDerivationRuleCode | PlainMessage<TypeDerivationRuleCode> | undefined, b: TypeDerivationRuleCode | PlainMessage<TypeDerivationRuleCode> | undefined): boolean {
    return proto3.util.equals(TypeDerivationRuleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TypeDerivationRuleCode.Value
 */
export enum TypeDerivationRuleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SPECIALIZATION = 1;
   */
  SPECIALIZATION = 1,

  /**
   * @generated from enum value: CONSTRAINT = 2;
   */
  CONSTRAINT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TypeDerivationRuleCode_Value)
proto3.util.setEnumType(TypeDerivationRuleCode_Value, "google.fhir.stu3.proto.TypeDerivationRuleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SPECIALIZATION" },
  { no: 2, name: "CONSTRAINT" },
]);

/**
 * Operations supported by REST at the type or instance level.
 * See http://hl7.org/fhir/ValueSet/type-restful-interaction
 *
 * @generated from message google.fhir.stu3.proto.TypeRestfulInteractionCode
 */
export class TypeRestfulInteractionCode extends Message<TypeRestfulInteractionCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.TypeRestfulInteractionCode.Value value = 1;
   */
  value = TypeRestfulInteractionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TypeRestfulInteractionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.TypeRestfulInteractionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TypeRestfulInteractionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypeRestfulInteractionCode {
    return new TypeRestfulInteractionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypeRestfulInteractionCode {
    return new TypeRestfulInteractionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypeRestfulInteractionCode {
    return new TypeRestfulInteractionCode().fromJsonString(jsonString, options);
  }

  static equals(a: TypeRestfulInteractionCode | PlainMessage<TypeRestfulInteractionCode> | undefined, b: TypeRestfulInteractionCode | PlainMessage<TypeRestfulInteractionCode> | undefined): boolean {
    return proto3.util.equals(TypeRestfulInteractionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.TypeRestfulInteractionCode.Value
 */
export enum TypeRestfulInteractionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: READ = 1;
   */
  READ = 1,

  /**
   * @generated from enum value: VREAD = 2;
   */
  VREAD = 2,

  /**
   * @generated from enum value: UPDATE = 3;
   */
  UPDATE = 3,

  /**
   * @generated from enum value: PATCH = 4;
   */
  PATCH = 4,

  /**
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * @generated from enum value: HISTORY_INSTANCE = 6;
   */
  HISTORY_INSTANCE = 6,

  /**
   * @generated from enum value: HISTORY_TYPE = 7;
   */
  HISTORY_TYPE = 7,

  /**
   * @generated from enum value: CREATE = 8;
   */
  CREATE = 8,

  /**
   * @generated from enum value: SEARCH_TYPE = 9;
   */
  SEARCH_TYPE = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(TypeRestfulInteractionCode_Value)
proto3.util.setEnumType(TypeRestfulInteractionCode_Value, "google.fhir.stu3.proto.TypeRestfulInteractionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "READ" },
  { no: 2, name: "VREAD" },
  { no: 3, name: "UPDATE" },
  { no: 4, name: "PATCH" },
  { no: 5, name: "DELETE" },
  { no: 6, name: "HISTORY_INSTANCE" },
  { no: 7, name: "HISTORY_TYPE" },
  { no: 8, name: "CREATE" },
  { no: 9, name: "SEARCH_TYPE" },
]);

/**
 * Codes to identify how UDI data was entered
 * See http://hl7.org/fhir/ValueSet/udi-entry-type
 *
 * @generated from message google.fhir.stu3.proto.UDIEntryTypeCode
 */
export class UDIEntryTypeCode extends Message<UDIEntryTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.UDIEntryTypeCode.Value value = 1;
   */
  value = UDIEntryTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<UDIEntryTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.UDIEntryTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UDIEntryTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UDIEntryTypeCode {
    return new UDIEntryTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UDIEntryTypeCode {
    return new UDIEntryTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UDIEntryTypeCode {
    return new UDIEntryTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: UDIEntryTypeCode | PlainMessage<UDIEntryTypeCode> | undefined, b: UDIEntryTypeCode | PlainMessage<UDIEntryTypeCode> | undefined): boolean {
    return proto3.util.equals(UDIEntryTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.UDIEntryTypeCode.Value
 */
export enum UDIEntryTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BARCODE = 1;
   */
  BARCODE = 1,

  /**
   * @generated from enum value: RFID = 2;
   */
  RFID = 2,

  /**
   * @generated from enum value: MANUAL = 3;
   */
  MANUAL = 3,

  /**
   * @generated from enum value: CARD = 4;
   */
  CARD = 4,

  /**
   * @generated from enum value: SELF_REPORTED = 5;
   */
  SELF_REPORTED = 5,

  /**
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(UDIEntryTypeCode_Value)
proto3.util.setEnumType(UDIEntryTypeCode_Value, "google.fhir.stu3.proto.UDIEntryTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BARCODE" },
  { no: 2, name: "RFID" },
  { no: 3, name: "MANUAL" },
  { no: 4, name: "CARD" },
  { no: 5, name: "SELF_REPORTED" },
  { no: 6, name: "UNKNOWN" },
]);

/**
 * A code that indicates whether an application accepts unknown elements or
 * extensions when reading resources. See
 * http://hl7.org/fhir/ValueSet/unknown-content-code
 *
 * @generated from message google.fhir.stu3.proto.UnknownContentCodeCode
 */
export class UnknownContentCodeCode extends Message<UnknownContentCodeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.UnknownContentCodeCode.Value value = 1;
   */
  value = UnknownContentCodeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<UnknownContentCodeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.UnknownContentCodeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UnknownContentCodeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnknownContentCodeCode {
    return new UnknownContentCodeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnknownContentCodeCode {
    return new UnknownContentCodeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnknownContentCodeCode {
    return new UnknownContentCodeCode().fromJsonString(jsonString, options);
  }

  static equals(a: UnknownContentCodeCode | PlainMessage<UnknownContentCodeCode> | undefined, b: UnknownContentCodeCode | PlainMessage<UnknownContentCodeCode> | undefined): boolean {
    return proto3.util.equals(UnknownContentCodeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.UnknownContentCodeCode.Value
 */
export enum UnknownContentCodeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NO = 1;
   */
  NO = 1,

  /**
   * @generated from enum value: EXTENSIONS = 2;
   */
  EXTENSIONS = 2,

  /**
   * @generated from enum value: ELEMENTS = 3;
   */
  ELEMENTS = 3,

  /**
   * @generated from enum value: BOTH = 4;
   */
  BOTH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(UnknownContentCodeCode_Value)
proto3.util.setEnumType(UnknownContentCodeCode_Value, "google.fhir.stu3.proto.UnknownContentCodeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NO" },
  { no: 2, name: "EXTENSIONS" },
  { no: 3, name: "ELEMENTS" },
  { no: 4, name: "BOTH" },
]);

/**
 * A code that specifies a type of context being specified by a usage context
 * See http://hl7.org/fhir/ValueSet/usage-context-type
 *
 * @generated from message google.fhir.stu3.proto.UsageContextTypeCode
 */
export class UsageContextTypeCode extends Message<UsageContextTypeCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.UsageContextTypeCode.Value value = 1;
   */
  value = UsageContextTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<UsageContextTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.UsageContextTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UsageContextTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsageContextTypeCode {
    return new UsageContextTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsageContextTypeCode {
    return new UsageContextTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsageContextTypeCode {
    return new UsageContextTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: UsageContextTypeCode | PlainMessage<UsageContextTypeCode> | undefined, b: UsageContextTypeCode | PlainMessage<UsageContextTypeCode> | undefined): boolean {
    return proto3.util.equals(UsageContextTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.UsageContextTypeCode.Value
 */
export enum UsageContextTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GENDER = 1;
   */
  GENDER = 1,

  /**
   * @generated from enum value: AGE = 2;
   */
  AGE = 2,

  /**
   * @generated from enum value: FOCUS = 3;
   */
  FOCUS = 3,

  /**
   * @generated from enum value: USER = 4;
   */
  USER = 4,

  /**
   * @generated from enum value: WORKFLOW = 5;
   */
  WORKFLOW = 5,

  /**
   * @generated from enum value: TASK = 6;
   */
  TASK = 6,

  /**
   * @generated from enum value: VENUE = 7;
   */
  VENUE = 7,

  /**
   * @generated from enum value: SPECIES = 8;
   */
  SPECIES = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(UsageContextTypeCode_Value)
proto3.util.setEnumType(UsageContextTypeCode_Value, "google.fhir.stu3.proto.UsageContextTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GENDER" },
  { no: 2, name: "AGE" },
  { no: 3, name: "FOCUS" },
  { no: 4, name: "USER" },
  { no: 5, name: "WORKFLOW" },
  { no: 6, name: "TASK" },
  { no: 7, name: "VENUE" },
  { no: 8, name: "SPECIES" },
]);

/**
 * Set of codes used to value Act.Confidentiality and Role.Confidentiality
 * attribute in accordance with the definition for concept domain
 * "Confidentiality". See
 * http://hl7.org/fhir/ValueSet/v3-ConfidentialityClassification
 *
 * @generated from message google.fhir.stu3.proto.ConfidentialityClassificationCode
 */
export class ConfidentialityClassificationCode extends Message<ConfidentialityClassificationCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ConfidentialityClassificationCode.Value value = 1;
   */
  value = ConfidentialityClassificationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ConfidentialityClassificationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ConfidentialityClassificationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConfidentialityClassificationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfidentialityClassificationCode {
    return new ConfidentialityClassificationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfidentialityClassificationCode {
    return new ConfidentialityClassificationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfidentialityClassificationCode {
    return new ConfidentialityClassificationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConfidentialityClassificationCode | PlainMessage<ConfidentialityClassificationCode> | undefined, b: ConfidentialityClassificationCode | PlainMessage<ConfidentialityClassificationCode> | undefined): boolean {
    return proto3.util.equals(ConfidentialityClassificationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ConfidentialityClassificationCode.Value
 */
export enum ConfidentialityClassificationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: U = 1;
   */
  U = 1,

  /**
   * @generated from enum value: L = 2;
   */
  L = 2,

  /**
   * @generated from enum value: M = 3;
   */
  M = 3,

  /**
   * @generated from enum value: N = 4;
   */
  N = 4,

  /**
   * @generated from enum value: R = 5;
   */
  R = 5,

  /**
   * @generated from enum value: V = 6;
   */
  V = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConfidentialityClassificationCode_Value)
proto3.util.setEnumType(ConfidentialityClassificationCode_Value, "google.fhir.stu3.proto.ConfidentialityClassificationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "U" },
  { no: 2, name: "L" },
  { no: 3, name: "M" },
  { no: 4, name: "N" },
  { no: 5, name: "R" },
  { no: 6, name: "V" },
]);

/**
 * The value set to instantiate this attribute should be drawn from a
 * terminologically robust code system that consists of or contains concepts
 * to support describing the validity of a dose relative to a particular
 * recommended schedule. This value set is provided as a suggestive example.
 * See http://hl7.org/fhir/ValueSet/vaccination-protocol-dose-status
 *
 * @generated from message google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode
 */
export class VaccinationProtocolDoseStatuscodesCode extends Message<VaccinationProtocolDoseStatuscodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.Value value = 1;
   */
  value = VaccinationProtocolDoseStatuscodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<VaccinationProtocolDoseStatuscodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(VaccinationProtocolDoseStatuscodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaccinationProtocolDoseStatuscodesCode {
    return new VaccinationProtocolDoseStatuscodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaccinationProtocolDoseStatuscodesCode {
    return new VaccinationProtocolDoseStatuscodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaccinationProtocolDoseStatuscodesCode {
    return new VaccinationProtocolDoseStatuscodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: VaccinationProtocolDoseStatuscodesCode | PlainMessage<VaccinationProtocolDoseStatuscodesCode> | undefined, b: VaccinationProtocolDoseStatuscodesCode | PlainMessage<VaccinationProtocolDoseStatuscodesCode> | undefined): boolean {
    return proto3.util.equals(VaccinationProtocolDoseStatuscodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.Value
 */
export enum VaccinationProtocolDoseStatuscodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COUNT = 1;
   */
  COUNT = 1,

  /**
   * @generated from enum value: NOCOUNT = 2;
   */
  NOCOUNT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(VaccinationProtocolDoseStatuscodesCode_Value)
proto3.util.setEnumType(VaccinationProtocolDoseStatuscodesCode_Value, "google.fhir.stu3.proto.VaccinationProtocolDoseStatuscodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COUNT" },
  { no: 2, name: "NOCOUNT" },
]);

/**
 * The value set to instantiate this attribute should be drawn from a
 * terminologically robust code system that consists of or contains concepts
 * to support describing the reason why an administered dose has been assigned
 * a particular status. Often, this reason describes why a dose is considered
 * invalid. This value set is provided as a suggestive example. See
 * http://hl7.org/fhir/ValueSet/vaccination-protocol-dose-status-reason
 *
 * @generated from message google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode
 */
export class VaccinationProtocolDoseStatusReasoncodesCode extends Message<VaccinationProtocolDoseStatusReasoncodesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.Value value = 1;
   */
  value = VaccinationProtocolDoseStatusReasoncodesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<VaccinationProtocolDoseStatusReasoncodesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(VaccinationProtocolDoseStatusReasoncodesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VaccinationProtocolDoseStatusReasoncodesCode {
    return new VaccinationProtocolDoseStatusReasoncodesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VaccinationProtocolDoseStatusReasoncodesCode {
    return new VaccinationProtocolDoseStatusReasoncodesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VaccinationProtocolDoseStatusReasoncodesCode {
    return new VaccinationProtocolDoseStatusReasoncodesCode().fromJsonString(jsonString, options);
  }

  static equals(a: VaccinationProtocolDoseStatusReasoncodesCode | PlainMessage<VaccinationProtocolDoseStatusReasoncodesCode> | undefined, b: VaccinationProtocolDoseStatusReasoncodesCode | PlainMessage<VaccinationProtocolDoseStatusReasoncodesCode> | undefined): boolean {
    return proto3.util.equals(VaccinationProtocolDoseStatusReasoncodesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.Value
 */
export enum VaccinationProtocolDoseStatusReasoncodesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADVSTORAGE = 1;
   */
  ADVSTORAGE = 1,

  /**
   * @generated from enum value: COLDCHBRK = 2;
   */
  COLDCHBRK = 2,

  /**
   * @generated from enum value: EXPLOT = 3;
   */
  EXPLOT = 3,

  /**
   * @generated from enum value: OUTSIDESCHED = 4;
   */
  OUTSIDESCHED = 4,

  /**
   * @generated from enum value: PRODRECALL = 5;
   */
  PRODRECALL = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(VaccinationProtocolDoseStatusReasoncodesCode_Value)
proto3.util.setEnumType(VaccinationProtocolDoseStatusReasoncodesCode_Value, "google.fhir.stu3.proto.VaccinationProtocolDoseStatusReasoncodesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADVSTORAGE" },
  { no: 2, name: "COLDCHBRK" },
  { no: 3, name: "EXPLOT" },
  { no: 4, name: "OUTSIDESCHED" },
  { no: 5, name: "PRODRECALL" },
]);

/**
 * Codes providing the status of the variant test result
 * See http://hl7.org/fhir/ValueSet/variant-state
 *
 * @generated from message google.fhir.stu3.proto.sequenceStatusCode
 */
export class sequenceStatusCode extends Message<sequenceStatusCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.sequenceStatusCode.Value value = 1;
   */
  value = sequenceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<sequenceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.sequenceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(sequenceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): sequenceStatusCode {
    return new sequenceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): sequenceStatusCode {
    return new sequenceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): sequenceStatusCode {
    return new sequenceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: sequenceStatusCode | PlainMessage<sequenceStatusCode> | undefined, b: sequenceStatusCode | PlainMessage<sequenceStatusCode> | undefined): boolean {
    return proto3.util.equals(sequenceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.sequenceStatusCode.Value
 */
export enum sequenceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: POSITIVE = 1;
   */
  POSITIVE = 1,

  /**
   * @generated from enum value: NEGATIVE = 2;
   */
  NEGATIVE = 2,

  /**
   * @generated from enum value: ABSENT = 3;
   */
  ABSENT = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(sequenceStatusCode_Value)
proto3.util.setEnumType(sequenceStatusCode_Value, "google.fhir.stu3.proto.sequenceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "POSITIVE" },
  { no: 2, name: "NEGATIVE" },
  { no: 3, name: "ABSENT" },
]);

/**
 * How the system supports versioning for a resource.
 * See http://hl7.org/fhir/ValueSet/versioning-policy
 *
 * @generated from message google.fhir.stu3.proto.ResourceVersionPolicyCode
 */
export class ResourceVersionPolicyCode extends Message<ResourceVersionPolicyCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.ResourceVersionPolicyCode.Value value = 1;
   */
  value = ResourceVersionPolicyCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ResourceVersionPolicyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ResourceVersionPolicyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceVersionPolicyCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceVersionPolicyCode {
    return new ResourceVersionPolicyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceVersionPolicyCode {
    return new ResourceVersionPolicyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceVersionPolicyCode {
    return new ResourceVersionPolicyCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceVersionPolicyCode | PlainMessage<ResourceVersionPolicyCode> | undefined, b: ResourceVersionPolicyCode | PlainMessage<ResourceVersionPolicyCode> | undefined): boolean {
    return proto3.util.equals(ResourceVersionPolicyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.ResourceVersionPolicyCode.Value
 */
export enum ResourceVersionPolicyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NO_VERSION = 1;
   */
  NO_VERSION = 1,

  /**
   * @generated from enum value: VERSIONED = 2;
   */
  VERSIONED = 2,

  /**
   * @generated from enum value: VERSIONED_UPDATE = 3;
   */
  VERSIONED_UPDATE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ResourceVersionPolicyCode_Value)
proto3.util.setEnumType(ResourceVersionPolicyCode_Value, "google.fhir.stu3.proto.ResourceVersionPolicyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NO_VERSION" },
  { no: 2, name: "VERSIONED" },
  { no: 3, name: "VERSIONED_UPDATE" },
]);

/**
 * A coded concept listing the base codes.
 * See http://hl7.org/fhir/ValueSet/vision-base-codes
 *
 * @generated from message google.fhir.stu3.proto.VisionBaseCode
 */
export class VisionBaseCode extends Message<VisionBaseCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.VisionBaseCode.Value value = 1;
   */
  value = VisionBaseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<VisionBaseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VisionBaseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(VisionBaseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionBaseCode {
    return new VisionBaseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionBaseCode {
    return new VisionBaseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionBaseCode {
    return new VisionBaseCode().fromJsonString(jsonString, options);
  }

  static equals(a: VisionBaseCode | PlainMessage<VisionBaseCode> | undefined, b: VisionBaseCode | PlainMessage<VisionBaseCode> | undefined): boolean {
    return proto3.util.equals(VisionBaseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.VisionBaseCode.Value
 */
export enum VisionBaseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UP = 1;
   */
  UP = 1,

  /**
   * @generated from enum value: DOWN = 2;
   */
  DOWN = 2,

  /**
   * @generated from enum value: IN = 3;
   */
  IN = 3,

  /**
   * @generated from enum value: OUT = 4;
   */
  OUT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(VisionBaseCode_Value)
proto3.util.setEnumType(VisionBaseCode_Value, "google.fhir.stu3.proto.VisionBaseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UP" },
  { no: 2, name: "DOWN" },
  { no: 3, name: "IN" },
  { no: 4, name: "OUT" },
]);

/**
 * A coded concept listing the eye codes.
 * See http://hl7.org/fhir/ValueSet/vision-eye-codes
 *
 * @generated from message google.fhir.stu3.proto.VisionEyesCode
 */
export class VisionEyesCode extends Message<VisionEyesCode> {
  /**
   * @generated from field: google.fhir.stu3.proto.VisionEyesCode.Value value = 1;
   */
  value = VisionEyesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.stu3.proto.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<VisionEyesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.VisionEyesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(VisionEyesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionEyesCode {
    return new VisionEyesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionEyesCode {
    return new VisionEyesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionEyesCode {
    return new VisionEyesCode().fromJsonString(jsonString, options);
  }

  static equals(a: VisionEyesCode | PlainMessage<VisionEyesCode> | undefined, b: VisionEyesCode | PlainMessage<VisionEyesCode> | undefined): boolean {
    return proto3.util.equals(VisionEyesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.stu3.proto.VisionEyesCode.Value
 */
export enum VisionEyesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RIGHT = 1;
   */
  RIGHT = 1,

  /**
   * @generated from enum value: LEFT = 2;
   */
  LEFT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(VisionEyesCode_Value)
proto3.util.setEnumType(VisionEyesCode_Value, "google.fhir.stu3.proto.VisionEyesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RIGHT" },
  { no: 2, name: "LEFT" },
]);

