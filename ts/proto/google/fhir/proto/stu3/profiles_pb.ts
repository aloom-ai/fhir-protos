//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/stu3/profiles.proto (package google.fhir.stu3.proto, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Code, CodeableConcept, Coding, CodingWithFixedCode, ContactPoint, Count, Date, DateTime, Decimal, Distance, Duration, Extension, HumanName, Id, Identifier, Instant, Integer, LanguageCode, Markdown, Meta, MimeTypeCode, Money, Oid, Period, PositiveInt, Quantity, Range, Ratio, Reference, SampledData, Signature, SimpleQuantity, String, Time, Timing, UnsignedInt, Uri } from "./datatypes_pb.js";
import { ContactDetail, Narrative, UsageContext } from "./metadatatypes_pb.js";
import { ContainedResource } from "./resources_pb.js";
import { AdministrativeGenderCode, BindingStrengthCode, CodeSystemContentModeCode, CodeSystemHierarchyMeaningCode, CompositionAttestationModeCode, CompositionStatusCode, ConfidentialityClassificationCode, ConstraintSeverityCode, DiagnosticReportStatusCode, DocumentRelationshipTypeCode, FamilyHistoryStatusCode, FilterOperatorCode, ListModeCode, ObservationRelationshipTypeCode, ObservationStatusCode, PropertyTypeCode, PublicationStatusCode, ReferenceVersionRulesCode, RequestIntentCode, RequestPriorityCode, RequestStatusCode } from "./codes_pb.js";
import { DiagnosticReportAnalysis, DiagnosticReportGlstring, DiagnosticReportHaploid, DiagnosticReportItem, ElementDefinitionAllowedUnits_Value, FamilyMemberHistoryParent, FamilyMemberHistorySibling } from "./extensions_pb.js";

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Body Mass Index (BMI) Profile.
 * See http://hl7.org/fhir/StructureDefinition/bmi
 *
 * @generated from message google.fhir.stu3.proto.Bmi
 */
export class Bmi extends Message<Bmi> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bmi.CodeableConceptForCode code = 13;
   */
  code?: Bmi_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Bmi.Effective effective = 16;
   */
  effective?: Bmi_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bmi.Value value = 19;
   */
  value?: Bmi_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bmi.ReferenceRange reference_range = 27;
   */
  referenceRange: Bmi_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bmi.Related related = 28;
   */
  related: Bmi_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bmi.Component component = 29;
   */
  component: Bmi_Component[] = [];

  constructor(data?: PartialMessage<Bmi>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Bmi_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Bmi_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Bmi_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Bmi_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Bmi_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Bmi_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi {
    return new Bmi().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi {
    return new Bmi().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi {
    return new Bmi().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi | PlainMessage<Bmi> | undefined, b: Bmi | PlainMessage<Bmi> | undefined): boolean {
    return proto3.util.equals(Bmi, a, b);
  }
}

/**
 * Body Mass Index (BMI)
 *
 * @generated from message google.fhir.stu3.proto.Bmi.CodeableConceptForCode
 */
export class Bmi_CodeableConceptForCode extends Message<Bmi_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode bmi_code = 5 [json_name = "BMICode"];
   */
  bmiCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Bmi_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "bmi_code", jsonName: "BMICode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_CodeableConceptForCode {
    return new Bmi_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_CodeableConceptForCode {
    return new Bmi_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_CodeableConceptForCode {
    return new Bmi_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_CodeableConceptForCode | PlainMessage<Bmi_CodeableConceptForCode> | undefined, b: Bmi_CodeableConceptForCode | PlainMessage<Bmi_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Bmi_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Bmi.Effective
 */
export class Bmi_Effective extends Message<Bmi_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bmi.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bmi_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_Effective {
    return new Bmi_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_Effective {
    return new Bmi_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_Effective {
    return new Bmi_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_Effective | PlainMessage<Bmi_Effective> | undefined, b: Bmi_Effective | PlainMessage<Bmi_Effective> | undefined): boolean {
    return proto3.util.equals(Bmi_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bmi.Value
 */
export class Bmi_Value extends Message<Bmi_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bmi.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bmi_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_Value {
    return new Bmi_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_Value {
    return new Bmi_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_Value {
    return new Bmi_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_Value | PlainMessage<Bmi_Value> | undefined, b: Bmi_Value | PlainMessage<Bmi_Value> | undefined): boolean {
    return proto3.util.equals(Bmi_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Bmi.ReferenceRange
 */
export class Bmi_ReferenceRange extends Message<Bmi_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Bmi_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_ReferenceRange {
    return new Bmi_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_ReferenceRange {
    return new Bmi_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_ReferenceRange {
    return new Bmi_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_ReferenceRange | PlainMessage<Bmi_ReferenceRange> | undefined, b: Bmi_ReferenceRange | PlainMessage<Bmi_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Bmi_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Bmi.Related
 */
export class Bmi_Related extends Message<Bmi_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Bmi_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_Related {
    return new Bmi_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_Related {
    return new Bmi_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_Related {
    return new Bmi_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_Related | PlainMessage<Bmi_Related> | undefined, b: Bmi_Related | PlainMessage<Bmi_Related> | undefined): boolean {
    return proto3.util.equals(Bmi_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Bmi.Component
 */
export class Bmi_Component extends Message<Bmi_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Bmi.Component.Value value = 5;
   */
  value?: Bmi_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Bmi.ReferenceRange reference_range = 8;
   */
  referenceRange: Bmi_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Bmi_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Bmi_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Bmi_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_Component {
    return new Bmi_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_Component {
    return new Bmi_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_Component {
    return new Bmi_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_Component | PlainMessage<Bmi_Component> | undefined, b: Bmi_Component | PlainMessage<Bmi_Component> | undefined): boolean {
    return proto3.util.equals(Bmi_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bmi.Component.Value
 */
export class Bmi_Component_Value extends Message<Bmi_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bmi.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bmi_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bmi.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bmi_Component_Value {
    return new Bmi_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bmi_Component_Value {
    return new Bmi_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bmi_Component_Value {
    return new Bmi_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bmi_Component_Value | PlainMessage<Bmi_Component_Value> | undefined, b: Bmi_Component_Value | PlainMessage<Bmi_Component_Value> | undefined): boolean {
    return proto3.util.equals(Bmi_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Body Height Profile.
 * See http://hl7.org/fhir/StructureDefinition/bodyheight
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight
 */
export class Bodyheight extends Message<Bodyheight> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyheight.CodeableConceptForCode code = 13;
   */
  code?: Bodyheight_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyheight.Effective effective = 16;
   */
  effective?: Bodyheight_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyheight.Value value = 19;
   */
  value?: Bodyheight_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodyheight.ReferenceRange reference_range = 27;
   */
  referenceRange: Bodyheight_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodyheight.Related related = 28;
   */
  related: Bodyheight_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodyheight.Component component = 29;
   */
  component: Bodyheight_Component[] = [];

  constructor(data?: PartialMessage<Bodyheight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Bodyheight_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Bodyheight_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Bodyheight_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Bodyheight_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Bodyheight_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Bodyheight_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight {
    return new Bodyheight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight {
    return new Bodyheight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight {
    return new Bodyheight().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight | PlainMessage<Bodyheight> | undefined, b: Bodyheight | PlainMessage<Bodyheight> | undefined): boolean {
    return proto3.util.equals(Bodyheight, a, b);
  }
}

/**
 * Body Height
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.CodeableConceptForCode
 */
export class Bodyheight_CodeableConceptForCode extends Message<Bodyheight_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode body_height_code = 5 [json_name = "BodyHeightCode"];
   */
  bodyHeightCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Bodyheight_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "body_height_code", jsonName: "BodyHeightCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_CodeableConceptForCode {
    return new Bodyheight_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_CodeableConceptForCode {
    return new Bodyheight_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_CodeableConceptForCode {
    return new Bodyheight_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_CodeableConceptForCode | PlainMessage<Bodyheight_CodeableConceptForCode> | undefined, b: Bodyheight_CodeableConceptForCode | PlainMessage<Bodyheight_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Bodyheight_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.Effective
 */
export class Bodyheight_Effective extends Message<Bodyheight_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodyheight.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodyheight_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_Effective {
    return new Bodyheight_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_Effective {
    return new Bodyheight_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_Effective {
    return new Bodyheight_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_Effective | PlainMessage<Bodyheight_Effective> | undefined, b: Bodyheight_Effective | PlainMessage<Bodyheight_Effective> | undefined): boolean {
    return proto3.util.equals(Bodyheight_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.Value
 */
export class Bodyheight_Value extends Message<Bodyheight_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodyheight.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodyheight_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_Value {
    return new Bodyheight_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_Value {
    return new Bodyheight_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_Value {
    return new Bodyheight_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_Value | PlainMessage<Bodyheight_Value> | undefined, b: Bodyheight_Value | PlainMessage<Bodyheight_Value> | undefined): boolean {
    return proto3.util.equals(Bodyheight_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.ReferenceRange
 */
export class Bodyheight_ReferenceRange extends Message<Bodyheight_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Bodyheight_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_ReferenceRange {
    return new Bodyheight_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_ReferenceRange {
    return new Bodyheight_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_ReferenceRange {
    return new Bodyheight_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_ReferenceRange | PlainMessage<Bodyheight_ReferenceRange> | undefined, b: Bodyheight_ReferenceRange | PlainMessage<Bodyheight_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Bodyheight_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.Related
 */
export class Bodyheight_Related extends Message<Bodyheight_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Bodyheight_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_Related {
    return new Bodyheight_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_Related {
    return new Bodyheight_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_Related {
    return new Bodyheight_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_Related | PlainMessage<Bodyheight_Related> | undefined, b: Bodyheight_Related | PlainMessage<Bodyheight_Related> | undefined): boolean {
    return proto3.util.equals(Bodyheight_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.Component
 */
export class Bodyheight_Component extends Message<Bodyheight_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyheight.Component.Value value = 5;
   */
  value?: Bodyheight_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Bodyheight.ReferenceRange reference_range = 8;
   */
  referenceRange: Bodyheight_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Bodyheight_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Bodyheight_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Bodyheight_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_Component {
    return new Bodyheight_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_Component {
    return new Bodyheight_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_Component {
    return new Bodyheight_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_Component | PlainMessage<Bodyheight_Component> | undefined, b: Bodyheight_Component | PlainMessage<Bodyheight_Component> | undefined): boolean {
    return proto3.util.equals(Bodyheight_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodyheight.Component.Value
 */
export class Bodyheight_Component_Value extends Message<Bodyheight_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodyheight.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodyheight_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyheight.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyheight_Component_Value {
    return new Bodyheight_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyheight_Component_Value {
    return new Bodyheight_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyheight_Component_Value {
    return new Bodyheight_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyheight_Component_Value | PlainMessage<Bodyheight_Component_Value> | undefined, b: Bodyheight_Component_Value | PlainMessage<Bodyheight_Component_Value> | undefined): boolean {
    return proto3.util.equals(Bodyheight_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Body Length Profile.
 * See http://hl7.org/fhir/StructureDefinition/bodylength
 *
 * @generated from message google.fhir.stu3.proto.Bodylength
 */
export class Bodylength extends Message<Bodylength> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodylength.CodeableConceptForCode code = 13;
   */
  code?: Bodylength_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodylength.Effective effective = 16;
   */
  effective?: Bodylength_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodylength.Value value = 19;
   */
  value?: Bodylength_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodylength.ReferenceRange reference_range = 27;
   */
  referenceRange: Bodylength_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodylength.Related related = 28;
   */
  related: Bodylength_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodylength.Component component = 29;
   */
  component: Bodylength_Component[] = [];

  constructor(data?: PartialMessage<Bodylength>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Bodylength_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Bodylength_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Bodylength_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Bodylength_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Bodylength_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Bodylength_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength {
    return new Bodylength().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength {
    return new Bodylength().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength {
    return new Bodylength().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength | PlainMessage<Bodylength> | undefined, b: Bodylength | PlainMessage<Bodylength> | undefined): boolean {
    return proto3.util.equals(Bodylength, a, b);
  }
}

/**
 * Body Length
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.CodeableConceptForCode
 */
export class Bodylength_CodeableConceptForCode extends Message<Bodylength_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode body_length_code = 5 [json_name = "BodyLengthCode"];
   */
  bodyLengthCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Bodylength_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "body_length_code", jsonName: "BodyLengthCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_CodeableConceptForCode {
    return new Bodylength_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_CodeableConceptForCode {
    return new Bodylength_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_CodeableConceptForCode {
    return new Bodylength_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_CodeableConceptForCode | PlainMessage<Bodylength_CodeableConceptForCode> | undefined, b: Bodylength_CodeableConceptForCode | PlainMessage<Bodylength_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Bodylength_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.Effective
 */
export class Bodylength_Effective extends Message<Bodylength_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodylength.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodylength_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_Effective {
    return new Bodylength_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_Effective {
    return new Bodylength_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_Effective {
    return new Bodylength_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_Effective | PlainMessage<Bodylength_Effective> | undefined, b: Bodylength_Effective | PlainMessage<Bodylength_Effective> | undefined): boolean {
    return proto3.util.equals(Bodylength_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.Value
 */
export class Bodylength_Value extends Message<Bodylength_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodylength.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodylength_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_Value {
    return new Bodylength_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_Value {
    return new Bodylength_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_Value {
    return new Bodylength_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_Value | PlainMessage<Bodylength_Value> | undefined, b: Bodylength_Value | PlainMessage<Bodylength_Value> | undefined): boolean {
    return proto3.util.equals(Bodylength_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.ReferenceRange
 */
export class Bodylength_ReferenceRange extends Message<Bodylength_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Bodylength_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_ReferenceRange {
    return new Bodylength_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_ReferenceRange {
    return new Bodylength_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_ReferenceRange {
    return new Bodylength_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_ReferenceRange | PlainMessage<Bodylength_ReferenceRange> | undefined, b: Bodylength_ReferenceRange | PlainMessage<Bodylength_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Bodylength_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.Related
 */
export class Bodylength_Related extends Message<Bodylength_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Bodylength_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_Related {
    return new Bodylength_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_Related {
    return new Bodylength_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_Related {
    return new Bodylength_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_Related | PlainMessage<Bodylength_Related> | undefined, b: Bodylength_Related | PlainMessage<Bodylength_Related> | undefined): boolean {
    return proto3.util.equals(Bodylength_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.Component
 */
export class Bodylength_Component extends Message<Bodylength_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodylength.Component.Value value = 5;
   */
  value?: Bodylength_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Bodylength.ReferenceRange reference_range = 8;
   */
  referenceRange: Bodylength_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Bodylength_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Bodylength_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Bodylength_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_Component {
    return new Bodylength_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_Component {
    return new Bodylength_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_Component {
    return new Bodylength_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_Component | PlainMessage<Bodylength_Component> | undefined, b: Bodylength_Component | PlainMessage<Bodylength_Component> | undefined): boolean {
    return proto3.util.equals(Bodylength_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodylength.Component.Value
 */
export class Bodylength_Component_Value extends Message<Bodylength_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodylength.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodylength_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodylength.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodylength_Component_Value {
    return new Bodylength_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodylength_Component_Value {
    return new Bodylength_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodylength_Component_Value {
    return new Bodylength_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodylength_Component_Value | PlainMessage<Bodylength_Component_Value> | undefined, b: Bodylength_Component_Value | PlainMessage<Bodylength_Component_Value> | undefined): boolean {
    return proto3.util.equals(Bodylength_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Body Temperature Profile.
 * See http://hl7.org/fhir/StructureDefinition/bodytemp
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp
 */
export class Bodytemp extends Message<Bodytemp> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodytemp.CodeableConceptForCode code = 13;
   */
  code?: Bodytemp_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodytemp.Effective effective = 16;
   */
  effective?: Bodytemp_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodytemp.Value value = 19;
   */
  value?: Bodytemp_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodytemp.ReferenceRange reference_range = 27;
   */
  referenceRange: Bodytemp_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodytemp.Related related = 28;
   */
  related: Bodytemp_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodytemp.Component component = 29;
   */
  component: Bodytemp_Component[] = [];

  constructor(data?: PartialMessage<Bodytemp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Bodytemp_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Bodytemp_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Bodytemp_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Bodytemp_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Bodytemp_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Bodytemp_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp {
    return new Bodytemp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp {
    return new Bodytemp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp {
    return new Bodytemp().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp | PlainMessage<Bodytemp> | undefined, b: Bodytemp | PlainMessage<Bodytemp> | undefined): boolean {
    return proto3.util.equals(Bodytemp, a, b);
  }
}

/**
 * Body Temperature
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.CodeableConceptForCode
 */
export class Bodytemp_CodeableConceptForCode extends Message<Bodytemp_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode body_temp_code = 5 [json_name = "BodyTempCode"];
   */
  bodyTempCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Bodytemp_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "body_temp_code", jsonName: "BodyTempCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_CodeableConceptForCode {
    return new Bodytemp_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_CodeableConceptForCode {
    return new Bodytemp_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_CodeableConceptForCode {
    return new Bodytemp_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_CodeableConceptForCode | PlainMessage<Bodytemp_CodeableConceptForCode> | undefined, b: Bodytemp_CodeableConceptForCode | PlainMessage<Bodytemp_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Bodytemp_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.Effective
 */
export class Bodytemp_Effective extends Message<Bodytemp_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodytemp.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodytemp_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_Effective {
    return new Bodytemp_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_Effective {
    return new Bodytemp_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_Effective {
    return new Bodytemp_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_Effective | PlainMessage<Bodytemp_Effective> | undefined, b: Bodytemp_Effective | PlainMessage<Bodytemp_Effective> | undefined): boolean {
    return proto3.util.equals(Bodytemp_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.Value
 */
export class Bodytemp_Value extends Message<Bodytemp_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodytemp.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodytemp_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_Value {
    return new Bodytemp_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_Value {
    return new Bodytemp_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_Value {
    return new Bodytemp_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_Value | PlainMessage<Bodytemp_Value> | undefined, b: Bodytemp_Value | PlainMessage<Bodytemp_Value> | undefined): boolean {
    return proto3.util.equals(Bodytemp_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.ReferenceRange
 */
export class Bodytemp_ReferenceRange extends Message<Bodytemp_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Bodytemp_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_ReferenceRange {
    return new Bodytemp_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_ReferenceRange {
    return new Bodytemp_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_ReferenceRange {
    return new Bodytemp_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_ReferenceRange | PlainMessage<Bodytemp_ReferenceRange> | undefined, b: Bodytemp_ReferenceRange | PlainMessage<Bodytemp_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Bodytemp_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.Related
 */
export class Bodytemp_Related extends Message<Bodytemp_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Bodytemp_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_Related {
    return new Bodytemp_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_Related {
    return new Bodytemp_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_Related {
    return new Bodytemp_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_Related | PlainMessage<Bodytemp_Related> | undefined, b: Bodytemp_Related | PlainMessage<Bodytemp_Related> | undefined): boolean {
    return proto3.util.equals(Bodytemp_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.Component
 */
export class Bodytemp_Component extends Message<Bodytemp_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodytemp.Component.Value value = 5;
   */
  value?: Bodytemp_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Bodytemp.ReferenceRange reference_range = 8;
   */
  referenceRange: Bodytemp_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Bodytemp_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Bodytemp_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Bodytemp_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_Component {
    return new Bodytemp_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_Component {
    return new Bodytemp_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_Component {
    return new Bodytemp_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_Component | PlainMessage<Bodytemp_Component> | undefined, b: Bodytemp_Component | PlainMessage<Bodytemp_Component> | undefined): boolean {
    return proto3.util.equals(Bodytemp_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodytemp.Component.Value
 */
export class Bodytemp_Component_Value extends Message<Bodytemp_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodytemp.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodytemp_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodytemp.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodytemp_Component_Value {
    return new Bodytemp_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodytemp_Component_Value {
    return new Bodytemp_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodytemp_Component_Value {
    return new Bodytemp_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodytemp_Component_Value | PlainMessage<Bodytemp_Component_Value> | undefined, b: Bodytemp_Component_Value | PlainMessage<Bodytemp_Component_Value> | undefined): boolean {
    return proto3.util.equals(Bodytemp_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Body Weight Profile.
 * See http://hl7.org/fhir/StructureDefinition/bodyweight
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight
 */
export class Bodyweight extends Message<Bodyweight> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyweight.CodeableConceptForCode code = 13;
   */
  code?: Bodyweight_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyweight.Effective effective = 16;
   */
  effective?: Bodyweight_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyweight.Value value = 19;
   */
  value?: Bodyweight_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodyweight.ReferenceRange reference_range = 27;
   */
  referenceRange: Bodyweight_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodyweight.Related related = 28;
   */
  related: Bodyweight_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bodyweight.Component component = 29;
   */
  component: Bodyweight_Component[] = [];

  constructor(data?: PartialMessage<Bodyweight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Bodyweight_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Bodyweight_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Bodyweight_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Bodyweight_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Bodyweight_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Bodyweight_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight {
    return new Bodyweight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight {
    return new Bodyweight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight {
    return new Bodyweight().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight | PlainMessage<Bodyweight> | undefined, b: Bodyweight | PlainMessage<Bodyweight> | undefined): boolean {
    return proto3.util.equals(Bodyweight, a, b);
  }
}

/**
 * Body Weight
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.CodeableConceptForCode
 */
export class Bodyweight_CodeableConceptForCode extends Message<Bodyweight_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode body_weight_code = 5 [json_name = "BodyWeightCode"];
   */
  bodyWeightCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Bodyweight_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "body_weight_code", jsonName: "BodyWeightCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_CodeableConceptForCode {
    return new Bodyweight_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_CodeableConceptForCode {
    return new Bodyweight_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_CodeableConceptForCode {
    return new Bodyweight_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_CodeableConceptForCode | PlainMessage<Bodyweight_CodeableConceptForCode> | undefined, b: Bodyweight_CodeableConceptForCode | PlainMessage<Bodyweight_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Bodyweight_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.Effective
 */
export class Bodyweight_Effective extends Message<Bodyweight_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodyweight.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodyweight_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_Effective {
    return new Bodyweight_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_Effective {
    return new Bodyweight_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_Effective {
    return new Bodyweight_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_Effective | PlainMessage<Bodyweight_Effective> | undefined, b: Bodyweight_Effective | PlainMessage<Bodyweight_Effective> | undefined): boolean {
    return proto3.util.equals(Bodyweight_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.Value
 */
export class Bodyweight_Value extends Message<Bodyweight_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodyweight.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodyweight_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_Value {
    return new Bodyweight_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_Value {
    return new Bodyweight_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_Value {
    return new Bodyweight_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_Value | PlainMessage<Bodyweight_Value> | undefined, b: Bodyweight_Value | PlainMessage<Bodyweight_Value> | undefined): boolean {
    return proto3.util.equals(Bodyweight_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.ReferenceRange
 */
export class Bodyweight_ReferenceRange extends Message<Bodyweight_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Bodyweight_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_ReferenceRange {
    return new Bodyweight_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_ReferenceRange {
    return new Bodyweight_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_ReferenceRange {
    return new Bodyweight_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_ReferenceRange | PlainMessage<Bodyweight_ReferenceRange> | undefined, b: Bodyweight_ReferenceRange | PlainMessage<Bodyweight_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Bodyweight_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.Related
 */
export class Bodyweight_Related extends Message<Bodyweight_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Bodyweight_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_Related {
    return new Bodyweight_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_Related {
    return new Bodyweight_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_Related {
    return new Bodyweight_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_Related | PlainMessage<Bodyweight_Related> | undefined, b: Bodyweight_Related | PlainMessage<Bodyweight_Related> | undefined): boolean {
    return proto3.util.equals(Bodyweight_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.Component
 */
export class Bodyweight_Component extends Message<Bodyweight_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Bodyweight.Component.Value value = 5;
   */
  value?: Bodyweight_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Bodyweight.ReferenceRange reference_range = 8;
   */
  referenceRange: Bodyweight_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Bodyweight_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Bodyweight_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Bodyweight_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_Component {
    return new Bodyweight_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_Component {
    return new Bodyweight_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_Component {
    return new Bodyweight_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_Component | PlainMessage<Bodyweight_Component> | undefined, b: Bodyweight_Component | PlainMessage<Bodyweight_Component> | undefined): boolean {
    return proto3.util.equals(Bodyweight_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Bodyweight.Component.Value
 */
export class Bodyweight_Component_Value extends Message<Bodyweight_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bodyweight.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bodyweight_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bodyweight.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bodyweight_Component_Value {
    return new Bodyweight_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bodyweight_Component_Value {
    return new Bodyweight_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bodyweight_Component_Value {
    return new Bodyweight_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Bodyweight_Component_Value | PlainMessage<Bodyweight_Component_Value> | undefined, b: Bodyweight_Component_Value | PlainMessage<Bodyweight_Component_Value> | undefined): boolean {
    return proto3.util.equals(Bodyweight_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Blood Pressure Profile.
 * See http://hl7.org/fhir/StructureDefinition/bp
 *
 * @generated from message google.fhir.stu3.proto.Bp
 */
export class Bp extends Message<Bp> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Bp.CodeableConceptForCode code = 13;
   */
  code?: Bp_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Bp.Effective effective = 16;
   */
  effective?: Bp_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bp.ReferenceRange reference_range = 27;
   */
  referenceRange: Bp_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bp.Related related = 28;
   */
  related: Bp_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Bp.Component component = 29;
   */
  component: Bp_Component[] = [];

  constructor(data?: PartialMessage<Bp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Bp_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Bp_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Bp_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Bp_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Bp_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bp {
    return new Bp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bp {
    return new Bp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bp {
    return new Bp().fromJsonString(jsonString, options);
  }

  static equals(a: Bp | PlainMessage<Bp> | undefined, b: Bp | PlainMessage<Bp> | undefined): boolean {
    return proto3.util.equals(Bp, a, b);
  }
}

/**
 * Blood Pressure
 *
 * @generated from message google.fhir.stu3.proto.Bp.CodeableConceptForCode
 */
export class Bp_CodeableConceptForCode extends Message<Bp_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode bp_code = 5 [json_name = "BPCode"];
   */
  bpCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Bp_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bp.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "bp_code", jsonName: "BPCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bp_CodeableConceptForCode {
    return new Bp_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bp_CodeableConceptForCode {
    return new Bp_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bp_CodeableConceptForCode {
    return new Bp_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Bp_CodeableConceptForCode | PlainMessage<Bp_CodeableConceptForCode> | undefined, b: Bp_CodeableConceptForCode | PlainMessage<Bp_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Bp_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Bp.Effective
 */
export class Bp_Effective extends Message<Bp_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Bp.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Bp_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bp.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bp_Effective {
    return new Bp_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bp_Effective {
    return new Bp_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bp_Effective {
    return new Bp_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Bp_Effective | PlainMessage<Bp_Effective> | undefined, b: Bp_Effective | PlainMessage<Bp_Effective> | undefined): boolean {
    return proto3.util.equals(Bp_Effective, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Bp.ReferenceRange
 */
export class Bp_ReferenceRange extends Message<Bp_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Bp_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bp.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bp_ReferenceRange {
    return new Bp_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bp_ReferenceRange {
    return new Bp_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bp_ReferenceRange {
    return new Bp_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Bp_ReferenceRange | PlainMessage<Bp_ReferenceRange> | undefined, b: Bp_ReferenceRange | PlainMessage<Bp_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Bp_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Bp.Related
 */
export class Bp_Related extends Message<Bp_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Bp_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bp.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bp_Related {
    return new Bp_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bp_Related {
    return new Bp_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bp_Related {
    return new Bp_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Bp_Related | PlainMessage<Bp_Related> | undefined, b: Bp_Related | PlainMessage<Bp_Related> | undefined): boolean {
    return proto3.util.equals(Bp_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Bp.Component
 */
export class Bp_Component extends Message<Bp_Component> {
  constructor(data?: PartialMessage<Bp_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Bp.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bp_Component {
    return new Bp_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bp_Component {
    return new Bp_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bp_Component {
    return new Bp_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Bp_Component | PlainMessage<Bp_Component> | undefined, b: Bp_Component | PlainMessage<Bp_Component> | undefined): boolean {
    return proto3.util.equals(Bp_Component, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Example Lipid Profile.
 * Measurements and simple assertions.
 * See http://hl7.org/fhir/StructureDefinition/cholesterol
 *
 * @generated from message google.fhir.stu3.proto.Cholesterol
 */
export class Cholesterol extends Message<Cholesterol> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Cholesterol
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Cholesterol.Effective effective = 16;
   */
  effective?: Cholesterol_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Cholesterol.Value value = 19;
   */
  value?: Cholesterol_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * + | ++ | +++ | - | -- | ---
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Cholesterol.ReferenceRange reference_range = 27;
   */
  referenceRange?: Cholesterol_ReferenceRange;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Cholesterol.Component component = 29;
   */
  component: Cholesterol_Component[] = [];

  constructor(data?: PartialMessage<Cholesterol>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Cholesterol";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Cholesterol_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Cholesterol_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Cholesterol_ReferenceRange },
    { no: 29, name: "component", kind: "message", T: Cholesterol_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cholesterol {
    return new Cholesterol().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cholesterol {
    return new Cholesterol().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cholesterol {
    return new Cholesterol().fromJsonString(jsonString, options);
  }

  static equals(a: Cholesterol | PlainMessage<Cholesterol> | undefined, b: Cholesterol | PlainMessage<Cholesterol> | undefined): boolean {
    return proto3.util.equals(Cholesterol, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.Cholesterol.Effective
 */
export class Cholesterol_Effective extends Message<Cholesterol_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Cholesterol.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Cholesterol_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Cholesterol.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cholesterol_Effective {
    return new Cholesterol_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cholesterol_Effective {
    return new Cholesterol_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cholesterol_Effective {
    return new Cholesterol_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Cholesterol_Effective | PlainMessage<Cholesterol_Effective> | undefined, b: Cholesterol_Effective | PlainMessage<Cholesterol_Effective> | undefined): boolean {
    return proto3.util.equals(Cholesterol_Effective, a, b);
  }
}

/**
 * Cholesterol value
 *
 * @generated from message google.fhir.stu3.proto.Cholesterol.Value
 */
export class Cholesterol_Value extends Message<Cholesterol_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Cholesterol.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Cholesterol_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Cholesterol.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cholesterol_Value {
    return new Cholesterol_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cholesterol_Value {
    return new Cholesterol_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cholesterol_Value {
    return new Cholesterol_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Cholesterol_Value | PlainMessage<Cholesterol_Value> | undefined, b: Cholesterol_Value | PlainMessage<Cholesterol_Value> | undefined): boolean {
    return proto3.util.equals(Cholesterol_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Cholesterol.ReferenceRange
 */
export class Cholesterol_ReferenceRange extends Message<Cholesterol_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A fixed quantity (no comparator)
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Cholesterol_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Cholesterol.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cholesterol_ReferenceRange {
    return new Cholesterol_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cholesterol_ReferenceRange {
    return new Cholesterol_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cholesterol_ReferenceRange {
    return new Cholesterol_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Cholesterol_ReferenceRange | PlainMessage<Cholesterol_ReferenceRange> | undefined, b: Cholesterol_ReferenceRange | PlainMessage<Cholesterol_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Cholesterol_ReferenceRange, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.Cholesterol.Component
 */
export class Cholesterol_Component extends Message<Cholesterol_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Cholesterol.Component.Value value = 5;
   */
  value?: Cholesterol_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Cholesterol.ReferenceRange reference_range = 8;
   */
  referenceRange: Cholesterol_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Cholesterol_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Cholesterol.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Cholesterol_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Cholesterol_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cholesterol_Component {
    return new Cholesterol_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cholesterol_Component {
    return new Cholesterol_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cholesterol_Component {
    return new Cholesterol_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Cholesterol_Component | PlainMessage<Cholesterol_Component> | undefined, b: Cholesterol_Component | PlainMessage<Cholesterol_Component> | undefined): boolean {
    return proto3.util.equals(Cholesterol_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.Cholesterol.Component.Value
 */
export class Cholesterol_Component_Value extends Message<Cholesterol_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Cholesterol.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Cholesterol_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Cholesterol.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Cholesterol_Component_Value {
    return new Cholesterol_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Cholesterol_Component_Value {
    return new Cholesterol_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Cholesterol_Component_Value {
    return new Cholesterol_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Cholesterol_Component_Value | PlainMessage<Cholesterol_Component_Value> | undefined, b: Cholesterol_Component_Value | PlainMessage<Cholesterol_Component_Value> | undefined): boolean {
    return proto3.util.equals(Cholesterol_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Clinical Document Profile for
 * Composition. A set of resources composed into a single coherent clinical
 * statement with clinical attestation. See
 * http://hl7.org/fhir/StructureDefinition/clinicaldocument
 *
 * @generated from message google.fhir.stu3.proto.Clinicaldocument
 */
export class Clinicaldocument extends Message<Clinicaldocument> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical identifier of composition (version-independent)
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier?: Identifier;

  /**
   * preliminary | final | amended | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.CompositionStatusCode status = 10;
   */
  status?: CompositionStatusCode;

  /**
   * Kind of composition (LOINC if possible)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Categorization of Composition
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept class_value = 12 [json_name = "class"];
   */
  classValue?: CodeableConcept;

  /**
   * Who and/or what the composition is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Context of the Composition
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 14;
   */
  encounter?: Reference;

  /**
   * Composition editing time
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Who and/or what authored the composition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 16;
   */
  author: Reference[] = [];

  /**
   * Human Readable name/title
   *
   * @generated from field: google.fhir.stu3.proto.String title = 17;
   */
  title?: String;

  /**
   * As defined by affinity domain
   *
   * @generated from field: google.fhir.stu3.proto.ConfidentialityClassificationCode confidentiality = 18;
   */
  confidentiality?: ConfidentialityClassificationCode;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Clinicaldocument.Attester attester = 19;
   */
  attester: Clinicaldocument_Attester[] = [];

  /**
   * Organization which maintains the composition
   *
   * @generated from field: google.fhir.stu3.proto.Reference custodian = 20;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Clinicaldocument.RelatesTo relates_to = 21;
   */
  relatesTo: Clinicaldocument_RelatesTo[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Clinicaldocument.Event event = 22;
   */
  event: Clinicaldocument_Event[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Clinicaldocument.Section section = 23;
   */
  section: Clinicaldocument_Section[] = [];

  constructor(data?: PartialMessage<Clinicaldocument>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Clinicaldocument";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
    { no: 10, name: "status", kind: "message", T: CompositionStatusCode },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "class_value", jsonName: "class", kind: "message", T: CodeableConcept },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "encounter", kind: "message", T: Reference },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "title", kind: "message", T: String },
    { no: 18, name: "confidentiality", kind: "message", T: ConfidentialityClassificationCode },
    { no: 19, name: "attester", kind: "message", T: Clinicaldocument_Attester, repeated: true },
    { no: 20, name: "custodian", kind: "message", T: Reference },
    { no: 21, name: "relates_to", kind: "message", T: Clinicaldocument_RelatesTo, repeated: true },
    { no: 22, name: "event", kind: "message", T: Clinicaldocument_Event, repeated: true },
    { no: 23, name: "section", kind: "message", T: Clinicaldocument_Section, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Clinicaldocument {
    return new Clinicaldocument().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Clinicaldocument {
    return new Clinicaldocument().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Clinicaldocument {
    return new Clinicaldocument().fromJsonString(jsonString, options);
  }

  static equals(a: Clinicaldocument | PlainMessage<Clinicaldocument> | undefined, b: Clinicaldocument | PlainMessage<Clinicaldocument> | undefined): boolean {
    return proto3.util.equals(Clinicaldocument, a, b);
  }
}

/**
 * Attests to accuracy of composition
 *
 * @generated from message google.fhir.stu3.proto.Clinicaldocument.Attester
 */
export class Clinicaldocument_Attester extends Message<Clinicaldocument_Attester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * personal | professional | legal | official
   *
   * @generated from field: repeated google.fhir.stu3.proto.CompositionAttestationModeCode mode = 4;
   */
  mode: CompositionAttestationModeCode[] = [];

  /**
   * When the composition was attested
   *
   * @generated from field: google.fhir.stu3.proto.DateTime time = 5;
   */
  time?: DateTime;

  /**
   * Who attested the composition
   *
   * @generated from field: google.fhir.stu3.proto.Reference party = 6;
   */
  party?: Reference;

  constructor(data?: PartialMessage<Clinicaldocument_Attester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Clinicaldocument.Attester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "mode", kind: "message", T: CompositionAttestationModeCode, repeated: true },
    { no: 5, name: "time", kind: "message", T: DateTime },
    { no: 6, name: "party", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Clinicaldocument_Attester {
    return new Clinicaldocument_Attester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Clinicaldocument_Attester {
    return new Clinicaldocument_Attester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Clinicaldocument_Attester {
    return new Clinicaldocument_Attester().fromJsonString(jsonString, options);
  }

  static equals(a: Clinicaldocument_Attester | PlainMessage<Clinicaldocument_Attester> | undefined, b: Clinicaldocument_Attester | PlainMessage<Clinicaldocument_Attester> | undefined): boolean {
    return proto3.util.equals(Clinicaldocument_Attester, a, b);
  }
}

/**
 * Relationships to other compositions/documents
 *
 * @generated from message google.fhir.stu3.proto.Clinicaldocument.RelatesTo
 */
export class Clinicaldocument_RelatesTo extends Message<Clinicaldocument_RelatesTo> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * replaces | transforms | signs | appends
   *
   * @generated from field: google.fhir.stu3.proto.DocumentRelationshipTypeCode code = 4;
   */
  code?: DocumentRelationshipTypeCode;

  /**
   * @generated from field: google.fhir.stu3.proto.Clinicaldocument.RelatesTo.Target target = 5;
   */
  target?: Clinicaldocument_RelatesTo_Target;

  constructor(data?: PartialMessage<Clinicaldocument_RelatesTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Clinicaldocument.RelatesTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: DocumentRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Clinicaldocument_RelatesTo_Target },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Clinicaldocument_RelatesTo {
    return new Clinicaldocument_RelatesTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Clinicaldocument_RelatesTo {
    return new Clinicaldocument_RelatesTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Clinicaldocument_RelatesTo {
    return new Clinicaldocument_RelatesTo().fromJsonString(jsonString, options);
  }

  static equals(a: Clinicaldocument_RelatesTo | PlainMessage<Clinicaldocument_RelatesTo> | undefined, b: Clinicaldocument_RelatesTo | PlainMessage<Clinicaldocument_RelatesTo> | undefined): boolean {
    return proto3.util.equals(Clinicaldocument_RelatesTo, a, b);
  }
}

/**
 * Target of the relationship
 *
 * @generated from message google.fhir.stu3.proto.Clinicaldocument.RelatesTo.Target
 */
export class Clinicaldocument_RelatesTo_Target extends Message<Clinicaldocument_RelatesTo_Target> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Clinicaldocument.RelatesTo.Target.target
   */
  target: {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 1;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Clinicaldocument_RelatesTo_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Clinicaldocument.RelatesTo.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "identifier", kind: "message", T: Identifier, oneof: "target" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "target" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Clinicaldocument_RelatesTo_Target {
    return new Clinicaldocument_RelatesTo_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Clinicaldocument_RelatesTo_Target {
    return new Clinicaldocument_RelatesTo_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Clinicaldocument_RelatesTo_Target {
    return new Clinicaldocument_RelatesTo_Target().fromJsonString(jsonString, options);
  }

  static equals(a: Clinicaldocument_RelatesTo_Target | PlainMessage<Clinicaldocument_RelatesTo_Target> | undefined, b: Clinicaldocument_RelatesTo_Target | PlainMessage<Clinicaldocument_RelatesTo_Target> | undefined): boolean {
    return proto3.util.equals(Clinicaldocument_RelatesTo_Target, a, b);
  }
}

/**
 * The clinical service(s) being documented
 *
 * @generated from message google.fhir.stu3.proto.Clinicaldocument.Event
 */
export class Clinicaldocument_Event extends Message<Clinicaldocument_Event> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code(s) that apply to the event being documented
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code: CodeableConcept[] = [];

  /**
   * The period covered by the documentation
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * The event(s) being documented
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detail = 6;
   */
  detail: Reference[] = [];

  constructor(data?: PartialMessage<Clinicaldocument_Event>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Clinicaldocument.Event";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "detail", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Clinicaldocument_Event {
    return new Clinicaldocument_Event().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Clinicaldocument_Event {
    return new Clinicaldocument_Event().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Clinicaldocument_Event {
    return new Clinicaldocument_Event().fromJsonString(jsonString, options);
  }

  static equals(a: Clinicaldocument_Event | PlainMessage<Clinicaldocument_Event> | undefined, b: Clinicaldocument_Event | PlainMessage<Clinicaldocument_Event> | undefined): boolean {
    return proto3.util.equals(Clinicaldocument_Event, a, b);
  }
}

/**
 * Composition is broken into sections
 *
 * @generated from message google.fhir.stu3.proto.Clinicaldocument.Section
 */
export class Clinicaldocument_Section extends Message<Clinicaldocument_Section> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for section (e.g. for ToC)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 4;
   */
  title?: String;

  /**
   * Classification of section (recommended)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Text summary of the section, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 6;
   */
  text?: Narrative;

  /**
   * working | snapshot | changes
   *
   * @generated from field: google.fhir.stu3.proto.ListModeCode mode = 7;
   */
  mode?: ListModeCode;

  /**
   * Order of section entries
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept ordered_by = 8;
   */
  orderedBy?: CodeableConcept;

  /**
   * A reference to data that supports this section
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference entry = 9;
   */
  entry: Reference[] = [];

  /**
   * Why the section is empty
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept empty_reason = 10;
   */
  emptyReason?: CodeableConcept;

  /**
   * Nested Section
   *
   * @generated from field: repeated google.fhir.stu3.proto.Clinicaldocument.Section section = 11;
   */
  section: Clinicaldocument_Section[] = [];

  constructor(data?: PartialMessage<Clinicaldocument_Section>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Clinicaldocument.Section";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "title", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "text", kind: "message", T: Narrative },
    { no: 7, name: "mode", kind: "message", T: ListModeCode },
    { no: 8, name: "ordered_by", kind: "message", T: CodeableConcept },
    { no: 9, name: "entry", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "empty_reason", kind: "message", T: CodeableConcept },
    { no: 11, name: "section", kind: "message", T: Clinicaldocument_Section, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Clinicaldocument_Section {
    return new Clinicaldocument_Section().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Clinicaldocument_Section {
    return new Clinicaldocument_Section().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Clinicaldocument_Section {
    return new Clinicaldocument_Section().fromJsonString(jsonString, options);
  }

  static equals(a: Clinicaldocument_Section | PlainMessage<Clinicaldocument_Section> | undefined, b: Clinicaldocument_Section | PlainMessage<Clinicaldocument_Section> | undefined): boolean {
    return proto3.util.equals(Clinicaldocument_Section, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Device Metric Observation
 * Profile. Measurements and simple assertions. See
 * http://hl7.org/fhir/StructureDefinition/devicemetricobservation
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation
 */
export class Devicemetricobservation extends Message<Devicemetricobservation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Type of observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Devicemetricobservation.Effective effective = 16;
   */
  effective?: Devicemetricobservation_Effective;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Devicemetricobservation.Value value = 19;
   */
  value?: Devicemetricobservation_Value;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Devicemetricobservation.ReferenceRange reference_range = 27;
   */
  referenceRange?: Devicemetricobservation_ReferenceRange;

  /**
   * @generated from field: google.fhir.stu3.proto.Devicemetricobservation.Related related = 28;
   */
  related?: Devicemetricobservation_Related;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Devicemetricobservation.Component component = 29;
   */
  component: Devicemetricobservation_Component[] = [];

  constructor(data?: PartialMessage<Devicemetricobservation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Devicemetricobservation_Effective },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Devicemetricobservation_Value },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Devicemetricobservation_ReferenceRange },
    { no: 28, name: "related", kind: "message", T: Devicemetricobservation_Related },
    { no: 29, name: "component", kind: "message", T: Devicemetricobservation_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation {
    return new Devicemetricobservation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation {
    return new Devicemetricobservation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation {
    return new Devicemetricobservation().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation | PlainMessage<Devicemetricobservation> | undefined, b: Devicemetricobservation | PlainMessage<Devicemetricobservation> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation.Effective
 */
export class Devicemetricobservation_Effective extends Message<Devicemetricobservation_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Devicemetricobservation.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Devicemetricobservation_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation_Effective {
    return new Devicemetricobservation_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation_Effective {
    return new Devicemetricobservation_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation_Effective {
    return new Devicemetricobservation_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation_Effective | PlainMessage<Devicemetricobservation_Effective> | undefined, b: Devicemetricobservation_Effective | PlainMessage<Devicemetricobservation_Effective> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation_Effective, a, b);
  }
}

/**
 * Actual result
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation.Value
 */
export class Devicemetricobservation_Value extends Message<Devicemetricobservation_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Devicemetricobservation.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 6;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 7;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 8;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Devicemetricobservation_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 6, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 7, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 8, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation_Value {
    return new Devicemetricobservation_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation_Value {
    return new Devicemetricobservation_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation_Value {
    return new Devicemetricobservation_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation_Value | PlainMessage<Devicemetricobservation_Value> | undefined, b: Devicemetricobservation_Value | PlainMessage<Devicemetricobservation_Value> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation.ReferenceRange
 */
export class Devicemetricobservation_ReferenceRange extends Message<Devicemetricobservation_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Devicemetricobservation_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation_ReferenceRange {
    return new Devicemetricobservation_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation_ReferenceRange {
    return new Devicemetricobservation_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation_ReferenceRange {
    return new Devicemetricobservation_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation_ReferenceRange | PlainMessage<Devicemetricobservation_ReferenceRange> | undefined, b: Devicemetricobservation_ReferenceRange | PlainMessage<Devicemetricobservation_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation_ReferenceRange, a, b);
  }
}

/**
 * Resource related to this observation
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation.Related
 */
export class Devicemetricobservation_Related extends Message<Devicemetricobservation_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Devicemetricobservation_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation_Related {
    return new Devicemetricobservation_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation_Related {
    return new Devicemetricobservation_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation_Related {
    return new Devicemetricobservation_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation_Related | PlainMessage<Devicemetricobservation_Related> | undefined, b: Devicemetricobservation_Related | PlainMessage<Devicemetricobservation_Related> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation_Related, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation.Component
 */
export class Devicemetricobservation_Component extends Message<Devicemetricobservation_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Devicemetricobservation.Component.Value value = 5;
   */
  value?: Devicemetricobservation_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Devicemetricobservation.ReferenceRange reference_range = 8;
   */
  referenceRange: Devicemetricobservation_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Devicemetricobservation_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Devicemetricobservation_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Devicemetricobservation_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation_Component {
    return new Devicemetricobservation_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation_Component {
    return new Devicemetricobservation_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation_Component {
    return new Devicemetricobservation_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation_Component | PlainMessage<Devicemetricobservation_Component> | undefined, b: Devicemetricobservation_Component | PlainMessage<Devicemetricobservation_Component> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.Devicemetricobservation.Component.Value
 */
export class Devicemetricobservation_Component_Value extends Message<Devicemetricobservation_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Devicemetricobservation.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Devicemetricobservation_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Devicemetricobservation.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Devicemetricobservation_Component_Value {
    return new Devicemetricobservation_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Devicemetricobservation_Component_Value {
    return new Devicemetricobservation_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Devicemetricobservation_Component_Value {
    return new Devicemetricobservation_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Devicemetricobservation_Component_Value | PlainMessage<Devicemetricobservation_Component_Value> | undefined, b: Devicemetricobservation_Component_Value | PlainMessage<Devicemetricobservation_Component_Value> | undefined): boolean {
    return proto3.util.equals(Devicemetricobservation_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DiagnosticReport-Genetics.
 * A Diagnostic report - a combination of request information, atomic results,
 * images, interpretation, as well as formatted reports. See
 * http://hl7.org/fhir/StructureDefinition/diagnosticreport-genetics
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticreportGenetics
 */
export class DiagnosticreportGenetics extends Message<DiagnosticreportGenetics> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | partial | preliminary | final +
   *
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11;
   */
  status?: DiagnosticReportStatusCode;

  /**
   * Service category
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * Name/Code for this diagnostic report
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.DiagnosticreportGenetics.Effective effective = 16;
   */
  effective?: DiagnosticreportGenetics_Effective;

  /**
   * DateTime this version was released
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticreportGenetics.Performer performer = 18;
   */
  performer: DiagnosticreportGenetics_Performer[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 19;
   */
  specimen: Reference[] = [];

  /**
   * Observations - simple, or complex nested groups
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference result = 20;
   */
  result: Reference[] = [];

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference imaging_study = 21;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticreportGenetics.Image image = 22;
   */
  image: DiagnosticreportGenetics_Image[] = [];

  /**
   * Clinical Interpretation of test results
   *
   * @generated from field: google.fhir.stu3.proto.String conclusion = 23;
   */
  conclusion?: String;

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment presented_form = 25;
   */
  presentedForm: Attachment[] = [];

  /**
   * AssessedCondition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference assessed_condition = 26 [json_name = "AssessedCondition"];
   */
  assessedCondition: Reference[] = [];

  /**
   * FamilyHistory
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference family_member_history = 27 [json_name = "FamilyMemberHistory"];
   */
  familyMemberHistory: Reference[] = [];

  /**
   * Analysis
   *
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticReportAnalysis analysis = 28 [json_name = "Analysis"];
   */
  analysis: DiagnosticReportAnalysis[] = [];

  constructor(data?: PartialMessage<DiagnosticreportGenetics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticreportGenetics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: DiagnosticReportStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: DiagnosticreportGenetics_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: DiagnosticreportGenetics_Performer, repeated: true },
    { no: 19, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "result", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "image", kind: "message", T: DiagnosticreportGenetics_Image, repeated: true },
    { no: 23, name: "conclusion", kind: "message", T: String },
    { no: 25, name: "presented_form", kind: "message", T: Attachment, repeated: true },
    { no: 26, name: "assessed_condition", jsonName: "AssessedCondition", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "family_member_history", jsonName: "FamilyMemberHistory", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "analysis", jsonName: "Analysis", kind: "message", T: DiagnosticReportAnalysis, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticreportGenetics {
    return new DiagnosticreportGenetics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics {
    return new DiagnosticreportGenetics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics {
    return new DiagnosticreportGenetics().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticreportGenetics | PlainMessage<DiagnosticreportGenetics> | undefined, b: DiagnosticreportGenetics | PlainMessage<DiagnosticreportGenetics> | undefined): boolean {
    return proto3.util.equals(DiagnosticreportGenetics, a, b);
  }
}

/**
 * Clinically relevant time/time-period for report
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticreportGenetics.Effective
 */
export class DiagnosticreportGenetics_Effective extends Message<DiagnosticreportGenetics_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.DiagnosticreportGenetics.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DiagnosticreportGenetics_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticreportGenetics.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticreportGenetics_Effective {
    return new DiagnosticreportGenetics_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics_Effective {
    return new DiagnosticreportGenetics_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics_Effective {
    return new DiagnosticreportGenetics_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticreportGenetics_Effective | PlainMessage<DiagnosticreportGenetics_Effective> | undefined, b: DiagnosticreportGenetics_Effective | PlainMessage<DiagnosticreportGenetics_Effective> | undefined): boolean {
    return proto3.util.equals(DiagnosticreportGenetics_Effective, a, b);
  }
}

/**
 * Participants in producing the report
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticreportGenetics.Performer
 */
export class DiagnosticreportGenetics_Performer extends Message<DiagnosticreportGenetics_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performer
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Practitioner or Organization  participant
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<DiagnosticreportGenetics_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticreportGenetics.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticreportGenetics_Performer {
    return new DiagnosticreportGenetics_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics_Performer {
    return new DiagnosticreportGenetics_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics_Performer {
    return new DiagnosticreportGenetics_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticreportGenetics_Performer | PlainMessage<DiagnosticreportGenetics_Performer> | undefined, b: DiagnosticreportGenetics_Performer | PlainMessage<DiagnosticreportGenetics_Performer> | undefined): boolean {
    return proto3.util.equals(DiagnosticreportGenetics_Performer, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.stu3.proto.DiagnosticreportGenetics.Image
 */
export class DiagnosticreportGenetics_Image extends Message<DiagnosticreportGenetics_Image> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.stu3.proto.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<DiagnosticreportGenetics_Image>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.DiagnosticreportGenetics.Image";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticreportGenetics_Image {
    return new DiagnosticreportGenetics_Image().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics_Image {
    return new DiagnosticreportGenetics_Image().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticreportGenetics_Image {
    return new DiagnosticreportGenetics_Image().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticreportGenetics_Image | PlainMessage<DiagnosticreportGenetics_Image> | undefined, b: DiagnosticreportGenetics_Image | PlainMessage<DiagnosticreportGenetics_Image> | undefined): boolean {
    return proto3.util.equals(DiagnosticreportGenetics_Image, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DataElement constraint on
 * ElementDefinition data type. Definition of an element in a resource or
 * extension. See http://hl7.org/fhir/StructureDefinition/elementdefinition-de
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe
 */
export class ElementdefinitionDe extends Message<ElementdefinitionDe> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Path of the element in the hierarchy of elements
   *
   * @generated from field: google.fhir.stu3.proto.String path = 3;
   */
  path?: String;

  /**
   * Name for this particular element (in a set of slices)
   *
   * @generated from field: google.fhir.stu3.proto.String slice_name = 5;
   */
  sliceName?: String;

  /**
   * Name for element to display with or prompt for element
   *
   * @generated from field: google.fhir.stu3.proto.String label = 6;
   */
  label?: String;

  /**
   * Corresponding codes in terminologies
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding code = 7;
   */
  code: Coding[] = [];

  /**
   * Full formal definition as narrative text
   *
   * @generated from field: google.fhir.stu3.proto.Markdown definition = 10;
   */
  definition?: Markdown;

  /**
   * Comments about the use of this element
   *
   * @generated from field: google.fhir.stu3.proto.Markdown comment = 11;
   */
  comment?: Markdown;

  /**
   * Why this resource has been created
   *
   * @generated from field: google.fhir.stu3.proto.Markdown requirements = 12;
   */
  requirements?: Markdown;

  /**
   * Other names
   *
   * @generated from field: repeated google.fhir.stu3.proto.String alias = 13;
   */
  alias: String[] = [];

  /**
   * Minimum Cardinality
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt min = 14;
   */
  min?: UnsignedInt;

  /**
   * Maximum Cardinality (a number or *)
   *
   * @generated from field: google.fhir.stu3.proto.String max = 15;
   */
  max?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.Base base = 16;
   */
  base?: ElementdefinitionDe_Base;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementdefinitionDe.TypeRef type = 18;
   */
  type: ElementdefinitionDe_TypeRef[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.DefaultValue default_value = 19;
   */
  defaultValue?: ElementdefinitionDe_DefaultValue;

  /**
   * Implicit meaning when this element is missing
   *
   * @generated from field: google.fhir.stu3.proto.Markdown meaning_when_missing = 20;
   */
  meaningWhenMissing?: Markdown;

  /**
   * What the order of the elements means
   *
   * @generated from field: google.fhir.stu3.proto.String order_meaning = 21;
   */
  orderMeaning?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementdefinitionDe.Example example = 24;
   */
  example: ElementdefinitionDe_Example[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.MinValue min_value = 25;
   */
  minValue?: ElementdefinitionDe_MinValue;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.MaxValue max_value = 26;
   */
  maxValue?: ElementdefinitionDe_MaxValue;

  /**
   * Max length for strings
   *
   * @generated from field: google.fhir.stu3.proto.Integer max_length = 27;
   */
  maxLength?: Integer;

  /**
   * Reference to invariant about presence
   *
   * @generated from field: repeated google.fhir.stu3.proto.Id condition = 28;
   */
  condition: Id[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementdefinitionDe.Constraint constraint = 29;
   */
  constraint: ElementdefinitionDe_Constraint[] = [];

  /**
   * If the element must supported
   *
   * @generated from field: google.fhir.stu3.proto.Boolean must_support = 30;
   */
  mustSupport?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding binding = 33;
   */
  binding?: ElementdefinitionDe_ElementDefinitionBinding;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ElementdefinitionDe.Mapping mapping = 34;
   */
  mapping: ElementdefinitionDe_Mapping[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.String question = 35 [json_name = "Question"];
   */
  question: String[] = [];

  /**
   * Extension
   *
   * @generated from field: google.fhir.stu3.proto.ElementDefinitionAllowedUnits.Value allowed_units = 36 [json_name = "AllowedUnits"];
   */
  allowedUnits?: ElementDefinitionAllowedUnits_Value;

  constructor(data?: PartialMessage<ElementdefinitionDe>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 5, name: "slice_name", kind: "message", T: String },
    { no: 6, name: "label", kind: "message", T: String },
    { no: 7, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Markdown },
    { no: 11, name: "comment", kind: "message", T: Markdown },
    { no: 12, name: "requirements", kind: "message", T: Markdown },
    { no: 13, name: "alias", kind: "message", T: String, repeated: true },
    { no: 14, name: "min", kind: "message", T: UnsignedInt },
    { no: 15, name: "max", kind: "message", T: String },
    { no: 16, name: "base", kind: "message", T: ElementdefinitionDe_Base },
    { no: 18, name: "type", kind: "message", T: ElementdefinitionDe_TypeRef, repeated: true },
    { no: 19, name: "default_value", kind: "message", T: ElementdefinitionDe_DefaultValue },
    { no: 20, name: "meaning_when_missing", kind: "message", T: Markdown },
    { no: 21, name: "order_meaning", kind: "message", T: String },
    { no: 24, name: "example", kind: "message", T: ElementdefinitionDe_Example, repeated: true },
    { no: 25, name: "min_value", kind: "message", T: ElementdefinitionDe_MinValue },
    { no: 26, name: "max_value", kind: "message", T: ElementdefinitionDe_MaxValue },
    { no: 27, name: "max_length", kind: "message", T: Integer },
    { no: 28, name: "condition", kind: "message", T: Id, repeated: true },
    { no: 29, name: "constraint", kind: "message", T: ElementdefinitionDe_Constraint, repeated: true },
    { no: 30, name: "must_support", kind: "message", T: Boolean },
    { no: 33, name: "binding", kind: "message", T: ElementdefinitionDe_ElementDefinitionBinding },
    { no: 34, name: "mapping", kind: "message", T: ElementdefinitionDe_Mapping, repeated: true },
    { no: 35, name: "question", jsonName: "Question", kind: "message", T: String, repeated: true },
    { no: 36, name: "allowed_units", jsonName: "AllowedUnits", kind: "message", T: ElementDefinitionAllowedUnits_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe {
    return new ElementdefinitionDe().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe {
    return new ElementdefinitionDe().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe {
    return new ElementdefinitionDe().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe | PlainMessage<ElementdefinitionDe> | undefined, b: ElementdefinitionDe | PlainMessage<ElementdefinitionDe> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe, a, b);
  }
}

/**
 * Base definition information for tools
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.Base
 */
export class ElementdefinitionDe_Base extends Message<ElementdefinitionDe_Base> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Path that identifies the base element
   *
   * @generated from field: google.fhir.stu3.proto.String path = 3;
   */
  path?: String;

  /**
   * Min cardinality of the base element
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt min = 4;
   */
  min?: UnsignedInt;

  /**
   * Max cardinality of the base element
   *
   * @generated from field: google.fhir.stu3.proto.String max = 5;
   */
  max?: String;

  constructor(data?: PartialMessage<ElementdefinitionDe_Base>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.Base";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "min", kind: "message", T: UnsignedInt },
    { no: 5, name: "max", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_Base {
    return new ElementdefinitionDe_Base().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Base {
    return new ElementdefinitionDe_Base().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Base {
    return new ElementdefinitionDe_Base().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_Base | PlainMessage<ElementdefinitionDe_Base> | undefined, b: ElementdefinitionDe_Base | PlainMessage<ElementdefinitionDe_Base> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_Base, a, b);
  }
}

/**
 * Data type and Profile for this element
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.TypeRef
 */
export class ElementdefinitionDe_TypeRef extends Message<ElementdefinitionDe_TypeRef> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Data type or Resource (reference to definition)
   *
   * @generated from field: google.fhir.stu3.proto.Uri code = 3;
   */
  code?: Uri;

  /**
   * Profile (StructureDefinition) to apply to reference target (or IG)
   *
   * @generated from field: google.fhir.stu3.proto.Uri target_profile = 5;
   */
  targetProfile?: Uri;

  /**
   * either | independent | specific
   *
   * @generated from field: google.fhir.stu3.proto.ReferenceVersionRulesCode versioning = 7;
   */
  versioning?: ReferenceVersionRulesCode;

  constructor(data?: PartialMessage<ElementdefinitionDe_TypeRef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.TypeRef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "code", kind: "message", T: Uri },
    { no: 5, name: "target_profile", kind: "message", T: Uri },
    { no: 7, name: "versioning", kind: "message", T: ReferenceVersionRulesCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_TypeRef {
    return new ElementdefinitionDe_TypeRef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_TypeRef {
    return new ElementdefinitionDe_TypeRef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_TypeRef {
    return new ElementdefinitionDe_TypeRef().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_TypeRef | PlainMessage<ElementdefinitionDe_TypeRef> | undefined, b: ElementdefinitionDe_TypeRef | PlainMessage<ElementdefinitionDe_TypeRef> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_TypeRef, a, b);
  }
}

/**
 * Specified value if missing from instance
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.DefaultValue
 */
export class ElementdefinitionDe_DefaultValue extends Message<ElementdefinitionDe_DefaultValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementdefinitionDe.DefaultValue.default_value
   */
  defaultValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementdefinitionDe_DefaultValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.DefaultValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "default_value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "default_value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "default_value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "default_value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "default_value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "default_value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "default_value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "default_value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "default_value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "default_value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "default_value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "default_value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "default_value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "default_value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "default_value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "default_value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "default_value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "default_value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "default_value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "default_value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "default_value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "default_value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "default_value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "default_value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "default_value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "default_value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "default_value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "default_value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "default_value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "default_value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "default_value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "default_value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "default_value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "default_value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "default_value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "default_value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "default_value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "default_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_DefaultValue {
    return new ElementdefinitionDe_DefaultValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_DefaultValue {
    return new ElementdefinitionDe_DefaultValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_DefaultValue {
    return new ElementdefinitionDe_DefaultValue().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_DefaultValue | PlainMessage<ElementdefinitionDe_DefaultValue> | undefined, b: ElementdefinitionDe_DefaultValue | PlainMessage<ElementdefinitionDe_DefaultValue> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_DefaultValue, a, b);
  }
}

/**
 * Example value (as defined for type)
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.Example
 */
export class ElementdefinitionDe_Example extends Message<ElementdefinitionDe_Example> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Describes the purpose of this example
   *
   * @generated from field: google.fhir.stu3.proto.String label = 3;
   */
  label?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.Example.Value value = 4;
   */
  value?: ElementdefinitionDe_Example_Value;

  constructor(data?: PartialMessage<ElementdefinitionDe_Example>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.Example";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "label", kind: "message", T: String },
    { no: 4, name: "value", kind: "message", T: ElementdefinitionDe_Example_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_Example {
    return new ElementdefinitionDe_Example().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Example {
    return new ElementdefinitionDe_Example().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Example {
    return new ElementdefinitionDe_Example().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_Example | PlainMessage<ElementdefinitionDe_Example> | undefined, b: ElementdefinitionDe_Example | PlainMessage<ElementdefinitionDe_Example> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_Example, a, b);
  }
}

/**
 * Value of Example (one of allowed types)
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.Example.Value
 */
export class ElementdefinitionDe_Example_Value extends Message<ElementdefinitionDe_Example_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementdefinitionDe.Example.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 3;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 6;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Id id = 7;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 8;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 9;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Markdown markdown = 10;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Oid oid = 11;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 12;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 13 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 14;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 15;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 16;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Address address = 17;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 18;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Annotation annotation = 19;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 20;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 21;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 22;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.ContactPoint contact_point = 23;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Count count = 24;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Distance distance = 25;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 26;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.HumanName human_name = 27;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Identifier identifier = 28;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Money money = 29;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 30;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 31;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 32;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 33;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 34;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 35;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Signature signature = 36;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 37;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Meta meta = 38;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementdefinitionDe_Example_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.Example.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "value" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 6, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 7, name: "id", kind: "message", T: Id, oneof: "value" },
    { no: 8, name: "instant", kind: "message", T: Instant, oneof: "value" },
    { no: 9, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 10, name: "markdown", kind: "message", T: Markdown, oneof: "value" },
    { no: 11, name: "oid", kind: "message", T: Oid, oneof: "value" },
    { no: 12, name: "positive_int", kind: "message", T: PositiveInt, oneof: "value" },
    { no: 13, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 14, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 15, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "value" },
    { no: 16, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 17, name: "address", kind: "message", T: Address, oneof: "value" },
    { no: 18, name: "age", kind: "message", T: Age, oneof: "value" },
    { no: 19, name: "annotation", kind: "message", T: Annotation, oneof: "value" },
    { no: 20, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 21, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 22, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 23, name: "contact_point", kind: "message", T: ContactPoint, oneof: "value" },
    { no: 24, name: "count", kind: "message", T: Count, oneof: "value" },
    { no: 25, name: "distance", kind: "message", T: Distance, oneof: "value" },
    { no: 26, name: "duration", kind: "message", T: Duration, oneof: "value" },
    { no: 27, name: "human_name", kind: "message", T: HumanName, oneof: "value" },
    { no: 28, name: "identifier", kind: "message", T: Identifier, oneof: "value" },
    { no: 29, name: "money", kind: "message", T: Money, oneof: "value" },
    { no: 30, name: "period", kind: "message", T: Period, oneof: "value" },
    { no: 31, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 32, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 33, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 34, name: "reference", kind: "message", T: Reference, oneof: "value" },
    { no: 35, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 36, name: "signature", kind: "message", T: Signature, oneof: "value" },
    { no: 37, name: "timing", kind: "message", T: Timing, oneof: "value" },
    { no: 38, name: "meta", kind: "message", T: Meta, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_Example_Value {
    return new ElementdefinitionDe_Example_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Example_Value {
    return new ElementdefinitionDe_Example_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Example_Value {
    return new ElementdefinitionDe_Example_Value().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_Example_Value | PlainMessage<ElementdefinitionDe_Example_Value> | undefined, b: ElementdefinitionDe_Example_Value | PlainMessage<ElementdefinitionDe_Example_Value> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_Example_Value, a, b);
  }
}

/**
 * Minimum Allowed Value (for some types)
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.MinValue
 */
export class ElementdefinitionDe_MinValue extends Message<ElementdefinitionDe_MinValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementdefinitionDe.MinValue.min_value
   */
  minValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 3;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 4;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 7;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementdefinitionDe_MinValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.MinValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "min_value" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "min_value" },
    { no: 3, name: "instant", kind: "message", T: Instant, oneof: "min_value" },
    { no: 4, name: "time", kind: "message", T: Time, oneof: "min_value" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "min_value" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "min_value" },
    { no: 7, name: "positive_int", kind: "message", T: PositiveInt, oneof: "min_value" },
    { no: 8, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "min_value" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "min_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_MinValue {
    return new ElementdefinitionDe_MinValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_MinValue {
    return new ElementdefinitionDe_MinValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_MinValue {
    return new ElementdefinitionDe_MinValue().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_MinValue | PlainMessage<ElementdefinitionDe_MinValue> | undefined, b: ElementdefinitionDe_MinValue | PlainMessage<ElementdefinitionDe_MinValue> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_MinValue, a, b);
  }
}

/**
 * Maximum Allowed Value (for some types)
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.MaxValue
 */
export class ElementdefinitionDe_MaxValue extends Message<ElementdefinitionDe_MaxValue> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementdefinitionDe.MaxValue.max_value
   */
  maxValue: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Instant instant = 3;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 4;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.PositiveInt positive_int = 7;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.UnsignedInt unsigned_int = 8;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementdefinitionDe_MaxValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.MaxValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "max_value" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "max_value" },
    { no: 3, name: "instant", kind: "message", T: Instant, oneof: "max_value" },
    { no: 4, name: "time", kind: "message", T: Time, oneof: "max_value" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "max_value" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "max_value" },
    { no: 7, name: "positive_int", kind: "message", T: PositiveInt, oneof: "max_value" },
    { no: 8, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "max_value" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "max_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_MaxValue {
    return new ElementdefinitionDe_MaxValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_MaxValue {
    return new ElementdefinitionDe_MaxValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_MaxValue {
    return new ElementdefinitionDe_MaxValue().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_MaxValue | PlainMessage<ElementdefinitionDe_MaxValue> | undefined, b: ElementdefinitionDe_MaxValue | PlainMessage<ElementdefinitionDe_MaxValue> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_MaxValue, a, b);
  }
}

/**
 * Condition that must evaluate to true
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.Constraint
 */
export class ElementdefinitionDe_Constraint extends Message<ElementdefinitionDe_Constraint> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Target of 'condition' reference above
   *
   * @generated from field: google.fhir.stu3.proto.Id key = 3;
   */
  key?: Id;

  /**
   * Why this constraint is necessary or appropriate
   *
   * @generated from field: google.fhir.stu3.proto.String requirements = 4;
   */
  requirements?: String;

  /**
   * error | warning
   *
   * @generated from field: google.fhir.stu3.proto.ConstraintSeverityCode severity = 5;
   */
  severity?: ConstraintSeverityCode;

  /**
   * Human description of constraint
   *
   * @generated from field: google.fhir.stu3.proto.String human = 6;
   */
  human?: String;

  /**
   * FHIRPath expression of constraint
   *
   * @generated from field: google.fhir.stu3.proto.String expression = 7;
   */
  expression?: String;

  /**
   * XPath expression of constraint
   *
   * @generated from field: google.fhir.stu3.proto.String xpath = 8;
   */
  xpath?: String;

  /**
   * Reference to original source of constraint
   *
   * @generated from field: google.fhir.stu3.proto.Uri source = 9;
   */
  source?: Uri;

  constructor(data?: PartialMessage<ElementdefinitionDe_Constraint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.Constraint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "key", kind: "message", T: Id },
    { no: 4, name: "requirements", kind: "message", T: String },
    { no: 5, name: "severity", kind: "message", T: ConstraintSeverityCode },
    { no: 6, name: "human", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
    { no: 8, name: "xpath", kind: "message", T: String },
    { no: 9, name: "source", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_Constraint {
    return new ElementdefinitionDe_Constraint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Constraint {
    return new ElementdefinitionDe_Constraint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Constraint {
    return new ElementdefinitionDe_Constraint().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_Constraint | PlainMessage<ElementdefinitionDe_Constraint> | undefined, b: ElementdefinitionDe_Constraint | PlainMessage<ElementdefinitionDe_Constraint> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_Constraint, a, b);
  }
}

/**
 * ValueSet details if this is coded
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding
 */
export class ElementdefinitionDe_ElementDefinitionBinding extends Message<ElementdefinitionDe_ElementDefinitionBinding> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * required | extensible | preferred | example
   *
   * @generated from field: google.fhir.stu3.proto.BindingStrengthCode strength = 3;
   */
  strength?: BindingStrengthCode;

  /**
   * Human explanation of the value set
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding.ValueSet value_set = 5;
   */
  valueSet?: ElementdefinitionDe_ElementDefinitionBinding_ValueSet;

  constructor(data?: PartialMessage<ElementdefinitionDe_ElementDefinitionBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "strength", kind: "message", T: BindingStrengthCode },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "value_set", kind: "message", T: ElementdefinitionDe_ElementDefinitionBinding_ValueSet },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_ElementDefinitionBinding {
    return new ElementdefinitionDe_ElementDefinitionBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_ElementDefinitionBinding {
    return new ElementdefinitionDe_ElementDefinitionBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_ElementDefinitionBinding {
    return new ElementdefinitionDe_ElementDefinitionBinding().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_ElementDefinitionBinding | PlainMessage<ElementdefinitionDe_ElementDefinitionBinding> | undefined, b: ElementdefinitionDe_ElementDefinitionBinding | PlainMessage<ElementdefinitionDe_ElementDefinitionBinding> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_ElementDefinitionBinding, a, b);
  }
}

/**
 * Source of value set
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding.ValueSet
 */
export class ElementdefinitionDe_ElementDefinitionBinding_ValueSet extends Message<ElementdefinitionDe_ElementDefinitionBinding_ValueSet> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding.ValueSet.value_set
   */
  valueSet: {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementdefinitionDe_ElementDefinitionBinding_ValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.ElementDefinitionBinding.ValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "value_set" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "value_set" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_ElementDefinitionBinding_ValueSet {
    return new ElementdefinitionDe_ElementDefinitionBinding_ValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_ElementDefinitionBinding_ValueSet {
    return new ElementdefinitionDe_ElementDefinitionBinding_ValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_ElementDefinitionBinding_ValueSet {
    return new ElementdefinitionDe_ElementDefinitionBinding_ValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_ElementDefinitionBinding_ValueSet | PlainMessage<ElementdefinitionDe_ElementDefinitionBinding_ValueSet> | undefined, b: ElementdefinitionDe_ElementDefinitionBinding_ValueSet | PlainMessage<ElementdefinitionDe_ElementDefinitionBinding_ValueSet> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_ElementDefinitionBinding_ValueSet, a, b);
  }
}

/**
 * Map element to another set of definitions
 *
 * @generated from message google.fhir.stu3.proto.ElementdefinitionDe.Mapping
 */
export class ElementdefinitionDe_Mapping extends Message<ElementdefinitionDe_Mapping> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Reference to mapping declaration
   *
   * @generated from field: google.fhir.stu3.proto.Id identity = 3;
   */
  identity?: Id;

  /**
   * Computable language of mapping
   *
   * @generated from field: google.fhir.stu3.proto.MimeTypeCode language = 4;
   */
  language?: MimeTypeCode;

  /**
   * Details of the mapping
   *
   * @generated from field: google.fhir.stu3.proto.String map = 5;
   */
  map?: String;

  /**
   * Comments about the mapping or its use
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 6;
   */
  comment?: String;

  constructor(data?: PartialMessage<ElementdefinitionDe_Mapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ElementdefinitionDe.Mapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "identity", kind: "message", T: Id },
    { no: 4, name: "language", kind: "message", T: MimeTypeCode },
    { no: 5, name: "map", kind: "message", T: String },
    { no: 6, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementdefinitionDe_Mapping {
    return new ElementdefinitionDe_Mapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Mapping {
    return new ElementdefinitionDe_Mapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementdefinitionDe_Mapping {
    return new ElementdefinitionDe_Mapping().fromJsonString(jsonString, options);
  }

  static equals(a: ElementdefinitionDe_Mapping | PlainMessage<ElementdefinitionDe_Mapping> | undefined, b: ElementdefinitionDe_Mapping | PlainMessage<ElementdefinitionDe_Mapping> | undefined): boolean {
    return proto3.util.equals(ElementdefinitionDe_Mapping, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Family member history for
 * genetics analysis. Information about patient's relatives, relevant for
 * patient. See
 * http://hl7.org/fhir/StructureDefinition/familymemberhistory-genetic
 *
 * @generated from message google.fhir.stu3.proto.FamilymemberhistoryGenetic
 */
export class FamilymemberhistoryGenetic extends Message<FamilymemberhistoryGenetic> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Id(s) for this record
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * partial | completed | entered-in-error | health-unknown
   *
   * @generated from field: google.fhir.stu3.proto.FamilyHistoryStatusCode status = 11;
   */
  status?: FamilyHistoryStatusCode;

  /**
   * The taking of a family member's history did not occur
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_done = 12;
   */
  notDone?: Boolean;

  /**
   * subject-unknown | withheld | unable-to-obtain | deferred
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept not_done_reason = 13;
   */
  notDoneReason?: CodeableConcept;

  /**
   * Patient history is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * When history was captured/updated
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * The family member described
   *
   * @generated from field: google.fhir.stu3.proto.String name = 16;
   */
  name?: String;

  /**
   * Relationship to the subject
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept relationship = 17;
   */
  relationship?: CodeableConcept;

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 18;
   */
  gender?: AdministrativeGenderCode;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilymemberhistoryGenetic.Born born = 19;
   */
  born?: FamilymemberhistoryGenetic_Born;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilymemberhistoryGenetic.AgeType age = 20;
   */
  age?: FamilymemberhistoryGenetic_AgeType;

  /**
   * Age is estimated?
   *
   * @generated from field: google.fhir.stu3.proto.Boolean estimated_age = 21;
   */
  estimatedAge?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilymemberhistoryGenetic.Deceased deceased = 22;
   */
  deceased?: FamilymemberhistoryGenetic_Deceased;

  /**
   * Why was family member history performed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 23;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why was family member history performed?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 24;
   */
  reasonReference: Reference[] = [];

  /**
   * General note about related person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition condition = 26;
   */
  condition: FamilymemberhistoryGenetic_Condition[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.FamilyMemberHistoryParent parent = 27 [json_name = "Parent"];
   */
  parent: FamilyMemberHistoryParent[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.FamilyMemberHistorySibling sibling = 28 [json_name = "Sibling"];
   */
  sibling: FamilyMemberHistorySibling[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference observation = 29 [json_name = "Observation"];
   */
  observation: Reference[] = [];

  constructor(data?: PartialMessage<FamilymemberhistoryGenetic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilymemberhistoryGenetic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: FamilyHistoryStatusCode },
    { no: 12, name: "not_done", kind: "message", T: Boolean },
    { no: 13, name: "not_done_reason", kind: "message", T: CodeableConcept },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "name", kind: "message", T: String },
    { no: 17, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 18, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 19, name: "born", kind: "message", T: FamilymemberhistoryGenetic_Born },
    { no: 20, name: "age", kind: "message", T: FamilymemberhistoryGenetic_AgeType },
    { no: 21, name: "estimated_age", kind: "message", T: Boolean },
    { no: 22, name: "deceased", kind: "message", T: FamilymemberhistoryGenetic_Deceased },
    { no: 23, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "condition", kind: "message", T: FamilymemberhistoryGenetic_Condition, repeated: true },
    { no: 27, name: "parent", jsonName: "Parent", kind: "message", T: FamilyMemberHistoryParent, repeated: true },
    { no: 28, name: "sibling", jsonName: "Sibling", kind: "message", T: FamilyMemberHistorySibling, repeated: true },
    { no: 29, name: "observation", jsonName: "Observation", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilymemberhistoryGenetic {
    return new FamilymemberhistoryGenetic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic {
    return new FamilymemberhistoryGenetic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic {
    return new FamilymemberhistoryGenetic().fromJsonString(jsonString, options);
  }

  static equals(a: FamilymemberhistoryGenetic | PlainMessage<FamilymemberhistoryGenetic> | undefined, b: FamilymemberhistoryGenetic | PlainMessage<FamilymemberhistoryGenetic> | undefined): boolean {
    return proto3.util.equals(FamilymemberhistoryGenetic, a, b);
  }
}

/**
 * (approximate) date of birth
 *
 * @generated from message google.fhir.stu3.proto.FamilymemberhistoryGenetic.Born
 */
export class FamilymemberhistoryGenetic_Born extends Message<FamilymemberhistoryGenetic_Born> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilymemberhistoryGenetic.Born.born
   */
  born: {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 1;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 2;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilymemberhistoryGenetic_Born>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Born";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: Period, oneof: "born" },
    { no: 2, name: "date", kind: "message", T: Date, oneof: "born" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "born" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilymemberhistoryGenetic_Born {
    return new FamilymemberhistoryGenetic_Born().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Born {
    return new FamilymemberhistoryGenetic_Born().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Born {
    return new FamilymemberhistoryGenetic_Born().fromJsonString(jsonString, options);
  }

  static equals(a: FamilymemberhistoryGenetic_Born | PlainMessage<FamilymemberhistoryGenetic_Born> | undefined, b: FamilymemberhistoryGenetic_Born | PlainMessage<FamilymemberhistoryGenetic_Born> | undefined): boolean {
    return proto3.util.equals(FamilymemberhistoryGenetic_Born, a, b);
  }
}

/**
 * (approximate) age
 *
 * @generated from message google.fhir.stu3.proto.FamilymemberhistoryGenetic.AgeType
 */
export class FamilymemberhistoryGenetic_AgeType extends Message<FamilymemberhistoryGenetic_AgeType> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilymemberhistoryGenetic.AgeType.age
   */
  age: {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age_value = 1 [json_name = "age"];
     */
    value: Age;
    case: "ageValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilymemberhistoryGenetic_AgeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilymemberhistoryGenetic.AgeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "age_value", jsonName: "age", kind: "message", T: Age, oneof: "age" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "age" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "age" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilymemberhistoryGenetic_AgeType {
    return new FamilymemberhistoryGenetic_AgeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_AgeType {
    return new FamilymemberhistoryGenetic_AgeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_AgeType {
    return new FamilymemberhistoryGenetic_AgeType().fromJsonString(jsonString, options);
  }

  static equals(a: FamilymemberhistoryGenetic_AgeType | PlainMessage<FamilymemberhistoryGenetic_AgeType> | undefined, b: FamilymemberhistoryGenetic_AgeType | PlainMessage<FamilymemberhistoryGenetic_AgeType> | undefined): boolean {
    return proto3.util.equals(FamilymemberhistoryGenetic_AgeType, a, b);
  }
}

/**
 * Dead? How old/when?
 *
 * @generated from message google.fhir.stu3.proto.FamilymemberhistoryGenetic.Deceased
 */
export class FamilymemberhistoryGenetic_Deceased extends Message<FamilymemberhistoryGenetic_Deceased> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilymemberhistoryGenetic.Deceased.deceased
   */
  deceased: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 3;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilymemberhistoryGenetic_Deceased>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Deceased";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "deceased" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "deceased" },
    { no: 3, name: "range", kind: "message", T: Range, oneof: "deceased" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "deceased" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "deceased" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilymemberhistoryGenetic_Deceased {
    return new FamilymemberhistoryGenetic_Deceased().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Deceased {
    return new FamilymemberhistoryGenetic_Deceased().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Deceased {
    return new FamilymemberhistoryGenetic_Deceased().fromJsonString(jsonString, options);
  }

  static equals(a: FamilymemberhistoryGenetic_Deceased | PlainMessage<FamilymemberhistoryGenetic_Deceased> | undefined, b: FamilymemberhistoryGenetic_Deceased | PlainMessage<FamilymemberhistoryGenetic_Deceased> | undefined): boolean {
    return proto3.util.equals(FamilymemberhistoryGenetic_Deceased, a, b);
  }
}

/**
 * Condition that the related person had
 *
 * @generated from message google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition
 */
export class FamilymemberhistoryGenetic_Condition extends Message<FamilymemberhistoryGenetic_Condition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Condition suffered by relation
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * deceased | permanent disability | etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 5;
   */
  outcome?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition.Onset onset = 6;
   */
  onset?: FamilymemberhistoryGenetic_Condition_Onset;

  /**
   * Extra information about condition
   *
   * @generated from field: google.fhir.stu3.proto.Annotation note = 7;
   */
  note?: Annotation;

  constructor(data?: PartialMessage<FamilymemberhistoryGenetic_Condition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 6, name: "onset", kind: "message", T: FamilymemberhistoryGenetic_Condition_Onset },
    { no: 7, name: "note", kind: "message", T: Annotation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilymemberhistoryGenetic_Condition {
    return new FamilymemberhistoryGenetic_Condition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Condition {
    return new FamilymemberhistoryGenetic_Condition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Condition {
    return new FamilymemberhistoryGenetic_Condition().fromJsonString(jsonString, options);
  }

  static equals(a: FamilymemberhistoryGenetic_Condition | PlainMessage<FamilymemberhistoryGenetic_Condition> | undefined, b: FamilymemberhistoryGenetic_Condition | PlainMessage<FamilymemberhistoryGenetic_Condition> | undefined): boolean {
    return proto3.util.equals(FamilymemberhistoryGenetic_Condition, a, b);
  }
}

/**
 * When condition first manifested
 *
 * @generated from message google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition.Onset
 */
export class FamilymemberhistoryGenetic_Condition_Onset extends Message<FamilymemberhistoryGenetic_Condition_Onset> {
  /**
   * @generated from oneof google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition.Onset.onset
   */
  onset: {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 1;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 4 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilymemberhistoryGenetic_Condition_Onset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.FamilymemberhistoryGenetic.Condition.Onset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "age", kind: "message", T: Age, oneof: "onset" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "onset" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "onset" },
    { no: 4, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "onset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilymemberhistoryGenetic_Condition_Onset {
    return new FamilymemberhistoryGenetic_Condition_Onset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Condition_Onset {
    return new FamilymemberhistoryGenetic_Condition_Onset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilymemberhistoryGenetic_Condition_Onset {
    return new FamilymemberhistoryGenetic_Condition_Onset().fromJsonString(jsonString, options);
  }

  static equals(a: FamilymemberhistoryGenetic_Condition_Onset | PlainMessage<FamilymemberhistoryGenetic_Condition_Onset> | undefined, b: FamilymemberhistoryGenetic_Condition_Onset | PlainMessage<FamilymemberhistoryGenetic_Condition_Onset> | undefined): boolean {
    return proto3.util.equals(FamilymemberhistoryGenetic_Condition_Onset, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Example Lipid Profile.
 * HDL Cholesterol Result.
 * See http://hl7.org/fhir/StructureDefinition/hdlcholesterol
 *
 * @generated from message google.fhir.stu3.proto.HdlCholesterol
 */
export class HdlCholesterol extends Message<HdlCholesterol> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * HDL Cholesterol
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.HdlCholesterol.Effective effective = 16;
   */
  effective?: HdlCholesterol_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.HdlCholesterol.Value value = 19;
   */
  value?: HdlCholesterol_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * + | ++ | +++ | - | -- | ---
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.HdlCholesterol.ReferenceRange reference_range = 27;
   */
  referenceRange?: HdlCholesterol_ReferenceRange;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.HdlCholesterol.Component component = 29;
   */
  component: HdlCholesterol_Component[] = [];

  constructor(data?: PartialMessage<HdlCholesterol>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HdlCholesterol";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: HdlCholesterol_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: HdlCholesterol_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: HdlCholesterol_ReferenceRange },
    { no: 29, name: "component", kind: "message", T: HdlCholesterol_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HdlCholesterol {
    return new HdlCholesterol().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HdlCholesterol {
    return new HdlCholesterol().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HdlCholesterol {
    return new HdlCholesterol().fromJsonString(jsonString, options);
  }

  static equals(a: HdlCholesterol | PlainMessage<HdlCholesterol> | undefined, b: HdlCholesterol | PlainMessage<HdlCholesterol> | undefined): boolean {
    return proto3.util.equals(HdlCholesterol, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.HdlCholesterol.Effective
 */
export class HdlCholesterol_Effective extends Message<HdlCholesterol_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.HdlCholesterol.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<HdlCholesterol_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HdlCholesterol.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HdlCholesterol_Effective {
    return new HdlCholesterol_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HdlCholesterol_Effective {
    return new HdlCholesterol_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HdlCholesterol_Effective {
    return new HdlCholesterol_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: HdlCholesterol_Effective | PlainMessage<HdlCholesterol_Effective> | undefined, b: HdlCholesterol_Effective | PlainMessage<HdlCholesterol_Effective> | undefined): boolean {
    return proto3.util.equals(HdlCholesterol_Effective, a, b);
  }
}

/**
 * HDL Cholesterol value
 *
 * @generated from message google.fhir.stu3.proto.HdlCholesterol.Value
 */
export class HdlCholesterol_Value extends Message<HdlCholesterol_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.HdlCholesterol.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<HdlCholesterol_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HdlCholesterol.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HdlCholesterol_Value {
    return new HdlCholesterol_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HdlCholesterol_Value {
    return new HdlCholesterol_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HdlCholesterol_Value {
    return new HdlCholesterol_Value().fromJsonString(jsonString, options);
  }

  static equals(a: HdlCholesterol_Value | PlainMessage<HdlCholesterol_Value> | undefined, b: HdlCholesterol_Value | PlainMessage<HdlCholesterol_Value> | undefined): boolean {
    return proto3.util.equals(HdlCholesterol_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.HdlCholesterol.ReferenceRange
 */
export class HdlCholesterol_ReferenceRange extends Message<HdlCholesterol_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A fixed quantity (no comparator)
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<HdlCholesterol_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HdlCholesterol.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HdlCholesterol_ReferenceRange {
    return new HdlCholesterol_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HdlCholesterol_ReferenceRange {
    return new HdlCholesterol_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HdlCholesterol_ReferenceRange {
    return new HdlCholesterol_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: HdlCholesterol_ReferenceRange | PlainMessage<HdlCholesterol_ReferenceRange> | undefined, b: HdlCholesterol_ReferenceRange | PlainMessage<HdlCholesterol_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(HdlCholesterol_ReferenceRange, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.HdlCholesterol.Component
 */
export class HdlCholesterol_Component extends Message<HdlCholesterol_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.HdlCholesterol.Component.Value value = 5;
   */
  value?: HdlCholesterol_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.HdlCholesterol.ReferenceRange reference_range = 8;
   */
  referenceRange: HdlCholesterol_ReferenceRange[] = [];

  constructor(data?: PartialMessage<HdlCholesterol_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HdlCholesterol.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: HdlCholesterol_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: HdlCholesterol_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HdlCholesterol_Component {
    return new HdlCholesterol_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HdlCholesterol_Component {
    return new HdlCholesterol_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HdlCholesterol_Component {
    return new HdlCholesterol_Component().fromJsonString(jsonString, options);
  }

  static equals(a: HdlCholesterol_Component | PlainMessage<HdlCholesterol_Component> | undefined, b: HdlCholesterol_Component | PlainMessage<HdlCholesterol_Component> | undefined): boolean {
    return proto3.util.equals(HdlCholesterol_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.HdlCholesterol.Component.Value
 */
export class HdlCholesterol_Component_Value extends Message<HdlCholesterol_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.HdlCholesterol.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<HdlCholesterol_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.HdlCholesterol.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HdlCholesterol_Component_Value {
    return new HdlCholesterol_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HdlCholesterol_Component_Value {
    return new HdlCholesterol_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HdlCholesterol_Component_Value {
    return new HdlCholesterol_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: HdlCholesterol_Component_Value | PlainMessage<HdlCholesterol_Component_Value> | undefined, b: HdlCholesterol_Component_Value | PlainMessage<HdlCholesterol_Component_Value> | undefined): boolean {
    return proto3.util.equals(HdlCholesterol_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Head Circumference Profile.
 * See http://hl7.org/fhir/StructureDefinition/headcircum
 *
 * @generated from message google.fhir.stu3.proto.Headcircum
 */
export class Headcircum extends Message<Headcircum> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Headcircum.CodeableConceptForCode code = 13;
   */
  code?: Headcircum_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Headcircum.Effective effective = 16;
   */
  effective?: Headcircum_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Headcircum.Value value = 19;
   */
  value?: Headcircum_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Headcircum.ReferenceRange reference_range = 27;
   */
  referenceRange: Headcircum_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Headcircum.Related related = 28;
   */
  related: Headcircum_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Headcircum.Component component = 29;
   */
  component: Headcircum_Component[] = [];

  constructor(data?: PartialMessage<Headcircum>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Headcircum_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Headcircum_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Headcircum_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Headcircum_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Headcircum_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Headcircum_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum {
    return new Headcircum().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum {
    return new Headcircum().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum {
    return new Headcircum().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum | PlainMessage<Headcircum> | undefined, b: Headcircum | PlainMessage<Headcircum> | undefined): boolean {
    return proto3.util.equals(Headcircum, a, b);
  }
}

/**
 * Head Circumference
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.CodeableConceptForCode
 */
export class Headcircum_CodeableConceptForCode extends Message<Headcircum_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode head_circum_code = 5 [json_name = "HeadCircumCode"];
   */
  headCircumCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Headcircum_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "head_circum_code", jsonName: "HeadCircumCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_CodeableConceptForCode {
    return new Headcircum_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_CodeableConceptForCode {
    return new Headcircum_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_CodeableConceptForCode {
    return new Headcircum_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_CodeableConceptForCode | PlainMessage<Headcircum_CodeableConceptForCode> | undefined, b: Headcircum_CodeableConceptForCode | PlainMessage<Headcircum_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Headcircum_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.Effective
 */
export class Headcircum_Effective extends Message<Headcircum_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Headcircum.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Headcircum_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_Effective {
    return new Headcircum_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_Effective {
    return new Headcircum_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_Effective {
    return new Headcircum_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_Effective | PlainMessage<Headcircum_Effective> | undefined, b: Headcircum_Effective | PlainMessage<Headcircum_Effective> | undefined): boolean {
    return proto3.util.equals(Headcircum_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.Value
 */
export class Headcircum_Value extends Message<Headcircum_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Headcircum.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Headcircum_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_Value {
    return new Headcircum_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_Value {
    return new Headcircum_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_Value {
    return new Headcircum_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_Value | PlainMessage<Headcircum_Value> | undefined, b: Headcircum_Value | PlainMessage<Headcircum_Value> | undefined): boolean {
    return proto3.util.equals(Headcircum_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.ReferenceRange
 */
export class Headcircum_ReferenceRange extends Message<Headcircum_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Headcircum_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_ReferenceRange {
    return new Headcircum_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_ReferenceRange {
    return new Headcircum_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_ReferenceRange {
    return new Headcircum_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_ReferenceRange | PlainMessage<Headcircum_ReferenceRange> | undefined, b: Headcircum_ReferenceRange | PlainMessage<Headcircum_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Headcircum_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.Related
 */
export class Headcircum_Related extends Message<Headcircum_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Headcircum_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_Related {
    return new Headcircum_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_Related {
    return new Headcircum_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_Related {
    return new Headcircum_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_Related | PlainMessage<Headcircum_Related> | undefined, b: Headcircum_Related | PlainMessage<Headcircum_Related> | undefined): boolean {
    return proto3.util.equals(Headcircum_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.Component
 */
export class Headcircum_Component extends Message<Headcircum_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Headcircum.Component.Value value = 5;
   */
  value?: Headcircum_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Headcircum.ReferenceRange reference_range = 8;
   */
  referenceRange: Headcircum_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Headcircum_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Headcircum_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Headcircum_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_Component {
    return new Headcircum_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_Component {
    return new Headcircum_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_Component {
    return new Headcircum_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_Component | PlainMessage<Headcircum_Component> | undefined, b: Headcircum_Component | PlainMessage<Headcircum_Component> | undefined): boolean {
    return proto3.util.equals(Headcircum_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Headcircum.Component.Value
 */
export class Headcircum_Component_Value extends Message<Headcircum_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Headcircum.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Headcircum_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Headcircum.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Headcircum_Component_Value {
    return new Headcircum_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Headcircum_Component_Value {
    return new Headcircum_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Headcircum_Component_Value {
    return new Headcircum_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Headcircum_Component_Value | PlainMessage<Headcircum_Component_Value> | undefined, b: Headcircum_Component_Value | PlainMessage<Headcircum_Component_Value> | undefined): boolean {
    return proto3.util.equals(Headcircum_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Heart Rate Profile.
 * See http://hl7.org/fhir/StructureDefinition/heartrate
 *
 * @generated from message google.fhir.stu3.proto.Heartrate
 */
export class Heartrate extends Message<Heartrate> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Heartrate.CodeableConceptForCode code = 13;
   */
  code?: Heartrate_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Heartrate.Effective effective = 16;
   */
  effective?: Heartrate_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Heartrate.Value value = 19;
   */
  value?: Heartrate_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Heartrate.ReferenceRange reference_range = 27;
   */
  referenceRange: Heartrate_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Heartrate.Related related = 28;
   */
  related: Heartrate_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Heartrate.Component component = 29;
   */
  component: Heartrate_Component[] = [];

  constructor(data?: PartialMessage<Heartrate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Heartrate_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Heartrate_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Heartrate_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Heartrate_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Heartrate_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Heartrate_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate {
    return new Heartrate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate {
    return new Heartrate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate {
    return new Heartrate().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate | PlainMessage<Heartrate> | undefined, b: Heartrate | PlainMessage<Heartrate> | undefined): boolean {
    return proto3.util.equals(Heartrate, a, b);
  }
}

/**
 * Heart Rate
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.CodeableConceptForCode
 */
export class Heartrate_CodeableConceptForCode extends Message<Heartrate_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode heart_rate_code = 5 [json_name = "HeartRateCode"];
   */
  heartRateCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Heartrate_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "heart_rate_code", jsonName: "HeartRateCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_CodeableConceptForCode {
    return new Heartrate_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_CodeableConceptForCode {
    return new Heartrate_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_CodeableConceptForCode {
    return new Heartrate_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_CodeableConceptForCode | PlainMessage<Heartrate_CodeableConceptForCode> | undefined, b: Heartrate_CodeableConceptForCode | PlainMessage<Heartrate_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Heartrate_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.Effective
 */
export class Heartrate_Effective extends Message<Heartrate_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Heartrate.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Heartrate_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_Effective {
    return new Heartrate_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_Effective {
    return new Heartrate_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_Effective {
    return new Heartrate_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_Effective | PlainMessage<Heartrate_Effective> | undefined, b: Heartrate_Effective | PlainMessage<Heartrate_Effective> | undefined): boolean {
    return proto3.util.equals(Heartrate_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.Value
 */
export class Heartrate_Value extends Message<Heartrate_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Heartrate.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Heartrate_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_Value {
    return new Heartrate_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_Value {
    return new Heartrate_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_Value {
    return new Heartrate_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_Value | PlainMessage<Heartrate_Value> | undefined, b: Heartrate_Value | PlainMessage<Heartrate_Value> | undefined): boolean {
    return proto3.util.equals(Heartrate_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.ReferenceRange
 */
export class Heartrate_ReferenceRange extends Message<Heartrate_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Heartrate_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_ReferenceRange {
    return new Heartrate_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_ReferenceRange {
    return new Heartrate_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_ReferenceRange {
    return new Heartrate_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_ReferenceRange | PlainMessage<Heartrate_ReferenceRange> | undefined, b: Heartrate_ReferenceRange | PlainMessage<Heartrate_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Heartrate_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.Related
 */
export class Heartrate_Related extends Message<Heartrate_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Heartrate_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_Related {
    return new Heartrate_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_Related {
    return new Heartrate_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_Related {
    return new Heartrate_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_Related | PlainMessage<Heartrate_Related> | undefined, b: Heartrate_Related | PlainMessage<Heartrate_Related> | undefined): boolean {
    return proto3.util.equals(Heartrate_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.Component
 */
export class Heartrate_Component extends Message<Heartrate_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Heartrate.Component.Value value = 5;
   */
  value?: Heartrate_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Heartrate.ReferenceRange reference_range = 8;
   */
  referenceRange: Heartrate_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Heartrate_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Heartrate_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Heartrate_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_Component {
    return new Heartrate_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_Component {
    return new Heartrate_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_Component {
    return new Heartrate_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_Component | PlainMessage<Heartrate_Component> | undefined, b: Heartrate_Component | PlainMessage<Heartrate_Component> | undefined): boolean {
    return proto3.util.equals(Heartrate_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Heartrate.Component.Value
 */
export class Heartrate_Component_Value extends Message<Heartrate_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Heartrate.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Heartrate_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Heartrate.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Heartrate_Component_Value {
    return new Heartrate_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Heartrate_Component_Value {
    return new Heartrate_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Heartrate_Component_Value {
    return new Heartrate_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Heartrate_Component_Value | PlainMessage<Heartrate_Component_Value> | undefined, b: Heartrate_Component_Value | PlainMessage<Heartrate_Component_Value> | undefined): boolean {
    return proto3.util.equals(Heartrate_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Profile for HLA Genotyping
 * Results. A Diagnostic report - a combination of request information, atomic
 * results, images, interpretation, as well as formatted reports. See
 * http://hl7.org/fhir/StructureDefinition/hlaresult
 *
 * @generated from message google.fhir.stu3.proto.Hlaresult
 */
export class Hlaresult extends Message<Hlaresult> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | partial | preliminary | final +
   *
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11;
   */
  status?: DiagnosticReportStatusCode;

  /**
   * Service category
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * Name/Code for this diagnostic report
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Hlaresult.Effective effective = 16;
   */
  effective?: Hlaresult_Effective;

  /**
   * DateTime this version was released
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Hlaresult.Performer performer = 18;
   */
  performer: Hlaresult_Performer[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 19;
   */
  specimen: Reference[] = [];

  /**
   * Observations - simple, or complex nested groups
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference result = 20;
   */
  result: Reference[] = [];

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference imaging_study = 21;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Hlaresult.Image image = 22;
   */
  image: Hlaresult_Image[] = [];

  /**
   * Clinical Interpretation of test results
   *
   * @generated from field: google.fhir.stu3.proto.String conclusion = 23;
   */
  conclusion?: String;

  /**
   * Codes for the conclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
   */
  codedDiagnosis: CodeableConcept[] = [];

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment presented_form = 25;
   */
  presentedForm: Attachment[] = [];

  /**
   * Allele Database
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept allele_database = 26;
   */
  alleleDatabase?: CodeableConcept;

  /**
   * Glstring
   *
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportGlstring glstring = 27;
   */
  glstring?: DiagnosticReportGlstring;

  /**
   * Haploid
   *
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticReportHaploid haploid = 28;
   */
  haploid: DiagnosticReportHaploid[] = [];

  /**
   * The platform, methodology and software applied at the time of the
   * genotyping
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 29;
   */
  method?: CodeableConcept;

  constructor(data?: PartialMessage<Hlaresult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Hlaresult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: DiagnosticReportStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Hlaresult_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Hlaresult_Performer, repeated: true },
    { no: 19, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "result", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "image", kind: "message", T: Hlaresult_Image, repeated: true },
    { no: 23, name: "conclusion", kind: "message", T: String },
    { no: 24, name: "coded_diagnosis", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "presented_form", kind: "message", T: Attachment, repeated: true },
    { no: 26, name: "allele_database", kind: "message", T: CodeableConcept },
    { no: 27, name: "glstring", kind: "message", T: DiagnosticReportGlstring },
    { no: 28, name: "haploid", kind: "message", T: DiagnosticReportHaploid, repeated: true },
    { no: 29, name: "method", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hlaresult {
    return new Hlaresult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hlaresult {
    return new Hlaresult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hlaresult {
    return new Hlaresult().fromJsonString(jsonString, options);
  }

  static equals(a: Hlaresult | PlainMessage<Hlaresult> | undefined, b: Hlaresult | PlainMessage<Hlaresult> | undefined): boolean {
    return proto3.util.equals(Hlaresult, a, b);
  }
}

/**
 * Clinically relevant time/time-period for report
 *
 * @generated from message google.fhir.stu3.proto.Hlaresult.Effective
 */
export class Hlaresult_Effective extends Message<Hlaresult_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Hlaresult.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Hlaresult_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Hlaresult.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hlaresult_Effective {
    return new Hlaresult_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hlaresult_Effective {
    return new Hlaresult_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hlaresult_Effective {
    return new Hlaresult_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Hlaresult_Effective | PlainMessage<Hlaresult_Effective> | undefined, b: Hlaresult_Effective | PlainMessage<Hlaresult_Effective> | undefined): boolean {
    return proto3.util.equals(Hlaresult_Effective, a, b);
  }
}

/**
 * Participants in producing the report
 *
 * @generated from message google.fhir.stu3.proto.Hlaresult.Performer
 */
export class Hlaresult_Performer extends Message<Hlaresult_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performer
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Practitioner or Organization  participant
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<Hlaresult_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Hlaresult.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hlaresult_Performer {
    return new Hlaresult_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hlaresult_Performer {
    return new Hlaresult_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hlaresult_Performer {
    return new Hlaresult_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: Hlaresult_Performer | PlainMessage<Hlaresult_Performer> | undefined, b: Hlaresult_Performer | PlainMessage<Hlaresult_Performer> | undefined): boolean {
    return proto3.util.equals(Hlaresult_Performer, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.stu3.proto.Hlaresult.Image
 */
export class Hlaresult_Image extends Message<Hlaresult_Image> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.stu3.proto.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<Hlaresult_Image>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Hlaresult.Image";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hlaresult_Image {
    return new Hlaresult_Image().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hlaresult_Image {
    return new Hlaresult_Image().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hlaresult_Image {
    return new Hlaresult_Image().fromJsonString(jsonString, options);
  }

  static equals(a: Hlaresult_Image | PlainMessage<Hlaresult_Image> | undefined, b: Hlaresult_Image | PlainMessage<Hlaresult_Image> | undefined): boolean {
    return proto3.util.equals(Hlaresult_Image, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Example Lipid Profile.
 * LDL Cholesterol Result.
 * See http://hl7.org/fhir/StructureDefinition/ldlcholesterol
 *
 * @generated from message google.fhir.stu3.proto.LdlCholesterol
 */
export class LdlCholesterol extends Message<LdlCholesterol> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * LDL Cholesterol -measured or calculated per code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.LdlCholesterol.Effective effective = 16;
   */
  effective?: LdlCholesterol_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.LdlCholesterol.Value value = 19;
   */
  value?: LdlCholesterol_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * + | ++ | +++ | - | -- | ---
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.LdlCholesterol.ReferenceRange reference_range = 27;
   */
  referenceRange?: LdlCholesterol_ReferenceRange;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.LdlCholesterol.Component component = 29;
   */
  component: LdlCholesterol_Component[] = [];

  constructor(data?: PartialMessage<LdlCholesterol>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LdlCholesterol";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: LdlCholesterol_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: LdlCholesterol_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: LdlCholesterol_ReferenceRange },
    { no: 29, name: "component", kind: "message", T: LdlCholesterol_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LdlCholesterol {
    return new LdlCholesterol().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LdlCholesterol {
    return new LdlCholesterol().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LdlCholesterol {
    return new LdlCholesterol().fromJsonString(jsonString, options);
  }

  static equals(a: LdlCholesterol | PlainMessage<LdlCholesterol> | undefined, b: LdlCholesterol | PlainMessage<LdlCholesterol> | undefined): boolean {
    return proto3.util.equals(LdlCholesterol, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.LdlCholesterol.Effective
 */
export class LdlCholesterol_Effective extends Message<LdlCholesterol_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.LdlCholesterol.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<LdlCholesterol_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LdlCholesterol.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LdlCholesterol_Effective {
    return new LdlCholesterol_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LdlCholesterol_Effective {
    return new LdlCholesterol_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LdlCholesterol_Effective {
    return new LdlCholesterol_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: LdlCholesterol_Effective | PlainMessage<LdlCholesterol_Effective> | undefined, b: LdlCholesterol_Effective | PlainMessage<LdlCholesterol_Effective> | undefined): boolean {
    return proto3.util.equals(LdlCholesterol_Effective, a, b);
  }
}

/**
 * LDL Cholesterol value
 *
 * @generated from message google.fhir.stu3.proto.LdlCholesterol.Value
 */
export class LdlCholesterol_Value extends Message<LdlCholesterol_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.LdlCholesterol.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<LdlCholesterol_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LdlCholesterol.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LdlCholesterol_Value {
    return new LdlCholesterol_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LdlCholesterol_Value {
    return new LdlCholesterol_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LdlCholesterol_Value {
    return new LdlCholesterol_Value().fromJsonString(jsonString, options);
  }

  static equals(a: LdlCholesterol_Value | PlainMessage<LdlCholesterol_Value> | undefined, b: LdlCholesterol_Value | PlainMessage<LdlCholesterol_Value> | undefined): boolean {
    return proto3.util.equals(LdlCholesterol_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.LdlCholesterol.ReferenceRange
 */
export class LdlCholesterol_ReferenceRange extends Message<LdlCholesterol_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A fixed quantity (no comparator)
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<LdlCholesterol_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LdlCholesterol.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LdlCholesterol_ReferenceRange {
    return new LdlCholesterol_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LdlCholesterol_ReferenceRange {
    return new LdlCholesterol_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LdlCholesterol_ReferenceRange {
    return new LdlCholesterol_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: LdlCholesterol_ReferenceRange | PlainMessage<LdlCholesterol_ReferenceRange> | undefined, b: LdlCholesterol_ReferenceRange | PlainMessage<LdlCholesterol_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(LdlCholesterol_ReferenceRange, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.LdlCholesterol.Component
 */
export class LdlCholesterol_Component extends Message<LdlCholesterol_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.LdlCholesterol.Component.Value value = 5;
   */
  value?: LdlCholesterol_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.LdlCholesterol.ReferenceRange reference_range = 8;
   */
  referenceRange: LdlCholesterol_ReferenceRange[] = [];

  constructor(data?: PartialMessage<LdlCholesterol_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LdlCholesterol.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: LdlCholesterol_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: LdlCholesterol_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LdlCholesterol_Component {
    return new LdlCholesterol_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LdlCholesterol_Component {
    return new LdlCholesterol_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LdlCholesterol_Component {
    return new LdlCholesterol_Component().fromJsonString(jsonString, options);
  }

  static equals(a: LdlCholesterol_Component | PlainMessage<LdlCholesterol_Component> | undefined, b: LdlCholesterol_Component | PlainMessage<LdlCholesterol_Component> | undefined): boolean {
    return proto3.util.equals(LdlCholesterol_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.LdlCholesterol.Component.Value
 */
export class LdlCholesterol_Component_Value extends Message<LdlCholesterol_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.LdlCholesterol.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<LdlCholesterol_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LdlCholesterol.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LdlCholesterol_Component_Value {
    return new LdlCholesterol_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LdlCholesterol_Component_Value {
    return new LdlCholesterol_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LdlCholesterol_Component_Value {
    return new LdlCholesterol_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: LdlCholesterol_Component_Value | PlainMessage<LdlCholesterol_Component_Value> | undefined, b: LdlCholesterol_Component_Value | PlainMessage<LdlCholesterol_Component_Value> | undefined): boolean {
    return proto3.util.equals(LdlCholesterol_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Example Lipid Profile.
 * Lipid Lab Report.
 * See http://hl7.org/fhir/StructureDefinition/lipidprofile
 *
 * @generated from message google.fhir.stu3.proto.LipidProfile
 */
export class LipidProfile extends Message<LipidProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | partial | preliminary | final +
   *
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11;
   */
  status?: DiagnosticReportStatusCode;

  /**
   * Service category
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * LOINC Code for Lipid Panel with LDL
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.LipidProfile.Effective effective = 16;
   */
  effective?: LipidProfile_Effective;

  /**
   * DateTime this version was released
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.LipidProfile.Performer performer = 18;
   */
  performer: LipidProfile_Performer[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 19;
   */
  specimen: Reference[] = [];

  /**
   * Observations - simple, or complex nested groups
   *
   * @generated from field: google.fhir.stu3.proto.Reference result = 20;
   */
  result?: Reference;

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference imaging_study = 21;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.LipidProfile.Image image = 22;
   */
  image: LipidProfile_Image[] = [];

  /**
   * Clinical Interpretation of Lipid Panel
   *
   * @generated from field: google.fhir.stu3.proto.String conclusion = 23;
   */
  conclusion?: String;

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment presented_form = 25;
   */
  presentedForm: Attachment[] = [];

  constructor(data?: PartialMessage<LipidProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LipidProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: DiagnosticReportStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: LipidProfile_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: LipidProfile_Performer, repeated: true },
    { no: 19, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "result", kind: "message", T: Reference },
    { no: 21, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "image", kind: "message", T: LipidProfile_Image, repeated: true },
    { no: 23, name: "conclusion", kind: "message", T: String },
    { no: 25, name: "presented_form", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LipidProfile {
    return new LipidProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LipidProfile {
    return new LipidProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LipidProfile {
    return new LipidProfile().fromJsonString(jsonString, options);
  }

  static equals(a: LipidProfile | PlainMessage<LipidProfile> | undefined, b: LipidProfile | PlainMessage<LipidProfile> | undefined): boolean {
    return proto3.util.equals(LipidProfile, a, b);
  }
}

/**
 * Clinically relevant time/time-period for report
 *
 * @generated from message google.fhir.stu3.proto.LipidProfile.Effective
 */
export class LipidProfile_Effective extends Message<LipidProfile_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.LipidProfile.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<LipidProfile_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LipidProfile.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LipidProfile_Effective {
    return new LipidProfile_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LipidProfile_Effective {
    return new LipidProfile_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LipidProfile_Effective {
    return new LipidProfile_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: LipidProfile_Effective | PlainMessage<LipidProfile_Effective> | undefined, b: LipidProfile_Effective | PlainMessage<LipidProfile_Effective> | undefined): boolean {
    return proto3.util.equals(LipidProfile_Effective, a, b);
  }
}

/**
 * Participants in producing the report
 *
 * @generated from message google.fhir.stu3.proto.LipidProfile.Performer
 */
export class LipidProfile_Performer extends Message<LipidProfile_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performer
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Practitioner or Organization  participant
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<LipidProfile_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LipidProfile.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LipidProfile_Performer {
    return new LipidProfile_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LipidProfile_Performer {
    return new LipidProfile_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LipidProfile_Performer {
    return new LipidProfile_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: LipidProfile_Performer | PlainMessage<LipidProfile_Performer> | undefined, b: LipidProfile_Performer | PlainMessage<LipidProfile_Performer> | undefined): boolean {
    return proto3.util.equals(LipidProfile_Performer, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.stu3.proto.LipidProfile.Image
 */
export class LipidProfile_Image extends Message<LipidProfile_Image> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.stu3.proto.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<LipidProfile_Image>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.LipidProfile.Image";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LipidProfile_Image {
    return new LipidProfile_Image().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LipidProfile_Image {
    return new LipidProfile_Image().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LipidProfile_Image {
    return new LipidProfile_Image().fromJsonString(jsonString, options);
  }

  static equals(a: LipidProfile_Image | PlainMessage<LipidProfile_Image> | undefined, b: LipidProfile_Image | PlainMessage<LipidProfile_Image> | undefined): boolean {
    return proto3.util.equals(LipidProfile_Image, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MetadataResource, last updated
 * 2017-04-19T07:44:43.294+10:00. Common Ancestor declaration for definitional
 * resources. See http://hl7.org/fhir/StructureDefinition/MetadataResource
 *
 * @generated from message google.fhir.stu3.proto.MetadataResource
 */
export class MetadataResource extends Message<MetadataResource> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this metadata resource (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Business version of the metadata resource
   *
   * @generated from field: google.fhir.stu3.proto.String version = 10;
   */
  version?: String;

  /**
   * Name for this metadata resource (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 11;
   */
  name?: String;

  /**
   * Name for this metadata resource (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 12;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 13;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 14;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 16;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 17;
   */
  contact: ContactDetail[] = [];

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 18;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for metadata resource (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 19;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Natural language description of the metadata resource
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 20;
   */
  description?: Markdown;

  constructor(data?: PartialMessage<MetadataResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.MetadataResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "version", kind: "message", T: String },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "title", kind: "message", T: String },
    { no: 13, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 14, name: "experimental", kind: "message", T: Boolean },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "publisher", kind: "message", T: String },
    { no: 17, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 18, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 19, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "description", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MetadataResource {
    return new MetadataResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MetadataResource {
    return new MetadataResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MetadataResource {
    return new MetadataResource().fromJsonString(jsonString, options);
  }

  static equals(a: MetadataResource | PlainMessage<MetadataResource> | undefined, b: MetadataResource | PlainMessage<MetadataResource> | undefined): boolean {
    return proto3.util.equals(MetadataResource, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Observation-genetics.
 * Measurements and simple assertions.
 * See http://hl7.org/fhir/StructureDefinition/observation-genetics
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics
 */
export class ObservationGenetics extends Message<ObservationGenetics> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Type of observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ObservationGenetics.Effective effective = 16;
   */
  effective?: ObservationGenetics_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.ObservationGenetics.Value value = 19;
   */
  value?: ObservationGenetics_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ObservationGenetics.ReferenceRange reference_range = 27;
   */
  referenceRange: ObservationGenetics_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ObservationGenetics.Related related = 28;
   */
  related: ObservationGenetics_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.ObservationGenetics.Component component = 29;
   */
  component: ObservationGenetics_Component[] = [];

  /**
   * DNA sequence variant
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dna_sequence_variant_name = 30 [json_name = "DNASequenceVariantName"];
   */
  dnaSequenceVariantName?: CodeableConcept;

  /**
   * DNA sequence variant ID
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dna_variant_id = 31 [json_name = "DNAVariantId"];
   */
  dnaVariantId?: CodeableConcept;

  /**
   * DNA sequence variant type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dna_sequence_variant_type = 32 [json_name = "DNASequenceVariantType"];
   */
  dnaSequenceVariantType?: CodeableConcept;

  /**
   * Amino acid change
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept amino_acid_change_name = 33 [json_name = "AminoAcidChangeName"];
   */
  aminoAcidChangeName?: CodeableConcept;

  /**
   * Amino Acid Change Type
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept amino_acid_change_type = 34 [json_name = "AminoAcidChangeType"];
   */
  aminoAcidChangeType?: CodeableConcept;

  /**
   * HGNC gene symbol
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept gene_symbol = 35 [json_name = "GeneSymbol"];
   */
  geneSymbol?: CodeableConcept;

  /**
   * DNA region name
   *
   * @generated from field: google.fhir.stu3.proto.String dna_region_name = 36 [json_name = "DNARegionName"];
   */
  dnaRegionName?: String;

  /**
   * Name of allele
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept allele_name = 37 [json_name = "AlleleName"];
   */
  alleleName?: CodeableConcept;

  /**
   * The level of occurrence of a single DNA sequence variant within a set of
   * chromosomes: Heteroplasmic / Homoplasmic / Homozygous / Heterozygous /
   * Hemizygous
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept allelic_state = 38 [json_name = "AllelicState"];
   */
  allelicState?: CodeableConcept;

  /**
   * Allele frequency
   *
   * @generated from field: google.fhir.stu3.proto.Decimal allelic_frequency = 39 [json_name = "AllelicFrequency"];
   */
  allelicFrequency?: Decimal;

  /**
   * Copy number variation
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept copy_number_event = 40 [json_name = "CopyNumberEvent"];
   */
  copyNumberEvent?: CodeableConcept;

  /**
   * Genomic source class
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept genomic_source_class = 41 [json_name = "GenomicSourceClass"];
   */
  genomicSourceClass?: CodeableConcept;

  /**
   * Phase set identifier (UUID/OID)
   *
   * @generated from field: google.fhir.stu3.proto.Uri phase_set = 42 [json_name = "PhaseSet"];
   */
  phaseSet?: Uri;

  /**
   * Sequence
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference sequence = 43 [json_name = "Sequence"];
   */
  sequence: Reference[] = [];

  /**
   * Clinical interpretations for variant
   *
   * @generated from field: google.fhir.stu3.proto.Reference interpretation_slice = 44 [json_name = "InterpretationSlice"];
   */
  interpretationSlice?: Reference;

  constructor(data?: PartialMessage<ObservationGenetics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: ObservationGenetics_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: ObservationGenetics_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: ObservationGenetics_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: ObservationGenetics_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: ObservationGenetics_Component, repeated: true },
    { no: 30, name: "dna_sequence_variant_name", jsonName: "DNASequenceVariantName", kind: "message", T: CodeableConcept },
    { no: 31, name: "dna_variant_id", jsonName: "DNAVariantId", kind: "message", T: CodeableConcept },
    { no: 32, name: "dna_sequence_variant_type", jsonName: "DNASequenceVariantType", kind: "message", T: CodeableConcept },
    { no: 33, name: "amino_acid_change_name", jsonName: "AminoAcidChangeName", kind: "message", T: CodeableConcept },
    { no: 34, name: "amino_acid_change_type", jsonName: "AminoAcidChangeType", kind: "message", T: CodeableConcept },
    { no: 35, name: "gene_symbol", jsonName: "GeneSymbol", kind: "message", T: CodeableConcept },
    { no: 36, name: "dna_region_name", jsonName: "DNARegionName", kind: "message", T: String },
    { no: 37, name: "allele_name", jsonName: "AlleleName", kind: "message", T: CodeableConcept },
    { no: 38, name: "allelic_state", jsonName: "AllelicState", kind: "message", T: CodeableConcept },
    { no: 39, name: "allelic_frequency", jsonName: "AllelicFrequency", kind: "message", T: Decimal },
    { no: 40, name: "copy_number_event", jsonName: "CopyNumberEvent", kind: "message", T: CodeableConcept },
    { no: 41, name: "genomic_source_class", jsonName: "GenomicSourceClass", kind: "message", T: CodeableConcept },
    { no: 42, name: "phase_set", jsonName: "PhaseSet", kind: "message", T: Uri },
    { no: 43, name: "sequence", jsonName: "Sequence", kind: "message", T: Reference, repeated: true },
    { no: 44, name: "interpretation_slice", jsonName: "InterpretationSlice", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics {
    return new ObservationGenetics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics {
    return new ObservationGenetics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics {
    return new ObservationGenetics().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics | PlainMessage<ObservationGenetics> | undefined, b: ObservationGenetics | PlainMessage<ObservationGenetics> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics.Effective
 */
export class ObservationGenetics_Effective extends Message<ObservationGenetics_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ObservationGenetics.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ObservationGenetics_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics_Effective {
    return new ObservationGenetics_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics_Effective {
    return new ObservationGenetics_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics_Effective {
    return new ObservationGenetics_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics_Effective | PlainMessage<ObservationGenetics_Effective> | undefined, b: ObservationGenetics_Effective | PlainMessage<ObservationGenetics_Effective> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics_Effective, a, b);
  }
}

/**
 * Actual result
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics.Value
 */
export class ObservationGenetics_Value extends Message<ObservationGenetics_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ObservationGenetics.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 6;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 7;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 8;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ObservationGenetics_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 6, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 7, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 8, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics_Value {
    return new ObservationGenetics_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics_Value {
    return new ObservationGenetics_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics_Value {
    return new ObservationGenetics_Value().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics_Value | PlainMessage<ObservationGenetics_Value> | undefined, b: ObservationGenetics_Value | PlainMessage<ObservationGenetics_Value> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics.ReferenceRange
 */
export class ObservationGenetics_ReferenceRange extends Message<ObservationGenetics_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<ObservationGenetics_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics_ReferenceRange {
    return new ObservationGenetics_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics_ReferenceRange {
    return new ObservationGenetics_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics_ReferenceRange {
    return new ObservationGenetics_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics_ReferenceRange | PlainMessage<ObservationGenetics_ReferenceRange> | undefined, b: ObservationGenetics_ReferenceRange | PlainMessage<ObservationGenetics_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics_ReferenceRange, a, b);
  }
}

/**
 * Resource related to this observation
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics.Related
 */
export class ObservationGenetics_Related extends Message<ObservationGenetics_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<ObservationGenetics_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics_Related {
    return new ObservationGenetics_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics_Related {
    return new ObservationGenetics_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics_Related {
    return new ObservationGenetics_Related().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics_Related | PlainMessage<ObservationGenetics_Related> | undefined, b: ObservationGenetics_Related | PlainMessage<ObservationGenetics_Related> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics_Related, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics.Component
 */
export class ObservationGenetics_Component extends Message<ObservationGenetics_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.ObservationGenetics.Component.Value value = 5;
   */
  value?: ObservationGenetics_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.ObservationGenetics.ReferenceRange reference_range = 8;
   */
  referenceRange: ObservationGenetics_ReferenceRange[] = [];

  constructor(data?: PartialMessage<ObservationGenetics_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: ObservationGenetics_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: ObservationGenetics_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics_Component {
    return new ObservationGenetics_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics_Component {
    return new ObservationGenetics_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics_Component {
    return new ObservationGenetics_Component().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics_Component | PlainMessage<ObservationGenetics_Component> | undefined, b: ObservationGenetics_Component | PlainMessage<ObservationGenetics_Component> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.ObservationGenetics.Component.Value
 */
export class ObservationGenetics_Component_Value extends Message<ObservationGenetics_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ObservationGenetics.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ObservationGenetics_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ObservationGenetics.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenetics_Component_Value {
    return new ObservationGenetics_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenetics_Component_Value {
    return new ObservationGenetics_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenetics_Component_Value {
    return new ObservationGenetics_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenetics_Component_Value | PlainMessage<ObservationGenetics_Component_Value> | undefined, b: ObservationGenetics_Component_Value | PlainMessage<ObservationGenetics_Component_Value> | undefined): boolean {
    return proto3.util.equals(ObservationGenetics_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Oxygen Saturation Profile.
 * See http://hl7.org/fhir/StructureDefinition/oxygensat
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat
 */
export class Oxygensat extends Message<Oxygensat> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Oxygensat.CodeableConceptForCode code = 13;
   */
  code?: Oxygensat_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Oxygensat.Effective effective = 16;
   */
  effective?: Oxygensat_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Oxygensat.Value value = 19;
   */
  value?: Oxygensat_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Oxygensat.ReferenceRange reference_range = 27;
   */
  referenceRange: Oxygensat_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Oxygensat.Related related = 28;
   */
  related: Oxygensat_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Oxygensat.Component component = 29;
   */
  component: Oxygensat_Component[] = [];

  constructor(data?: PartialMessage<Oxygensat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Oxygensat_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Oxygensat_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Oxygensat_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Oxygensat_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Oxygensat_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Oxygensat_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat {
    return new Oxygensat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat {
    return new Oxygensat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat {
    return new Oxygensat().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat | PlainMessage<Oxygensat> | undefined, b: Oxygensat | PlainMessage<Oxygensat> | undefined): boolean {
    return proto3.util.equals(Oxygensat, a, b);
  }
}

/**
 * Oxygen Saturation
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.CodeableConceptForCode
 */
export class Oxygensat_CodeableConceptForCode extends Message<Oxygensat_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode oxygen_sat_code = 5 [json_name = "OxygenSatCode"];
   */
  oxygenSatCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Oxygensat_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "oxygen_sat_code", jsonName: "OxygenSatCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_CodeableConceptForCode {
    return new Oxygensat_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_CodeableConceptForCode {
    return new Oxygensat_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_CodeableConceptForCode {
    return new Oxygensat_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_CodeableConceptForCode | PlainMessage<Oxygensat_CodeableConceptForCode> | undefined, b: Oxygensat_CodeableConceptForCode | PlainMessage<Oxygensat_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Oxygensat_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.Effective
 */
export class Oxygensat_Effective extends Message<Oxygensat_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Oxygensat.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Oxygensat_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_Effective {
    return new Oxygensat_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_Effective {
    return new Oxygensat_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_Effective {
    return new Oxygensat_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_Effective | PlainMessage<Oxygensat_Effective> | undefined, b: Oxygensat_Effective | PlainMessage<Oxygensat_Effective> | undefined): boolean {
    return proto3.util.equals(Oxygensat_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.Value
 */
export class Oxygensat_Value extends Message<Oxygensat_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Oxygensat.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Oxygensat_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_Value {
    return new Oxygensat_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_Value {
    return new Oxygensat_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_Value {
    return new Oxygensat_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_Value | PlainMessage<Oxygensat_Value> | undefined, b: Oxygensat_Value | PlainMessage<Oxygensat_Value> | undefined): boolean {
    return proto3.util.equals(Oxygensat_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.ReferenceRange
 */
export class Oxygensat_ReferenceRange extends Message<Oxygensat_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Oxygensat_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_ReferenceRange {
    return new Oxygensat_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_ReferenceRange {
    return new Oxygensat_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_ReferenceRange {
    return new Oxygensat_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_ReferenceRange | PlainMessage<Oxygensat_ReferenceRange> | undefined, b: Oxygensat_ReferenceRange | PlainMessage<Oxygensat_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Oxygensat_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.Related
 */
export class Oxygensat_Related extends Message<Oxygensat_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Oxygensat_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_Related {
    return new Oxygensat_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_Related {
    return new Oxygensat_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_Related {
    return new Oxygensat_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_Related | PlainMessage<Oxygensat_Related> | undefined, b: Oxygensat_Related | PlainMessage<Oxygensat_Related> | undefined): boolean {
    return proto3.util.equals(Oxygensat_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.Component
 */
export class Oxygensat_Component extends Message<Oxygensat_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Oxygensat.Component.Value value = 5;
   */
  value?: Oxygensat_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Oxygensat.ReferenceRange reference_range = 8;
   */
  referenceRange: Oxygensat_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Oxygensat_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Oxygensat_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Oxygensat_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_Component {
    return new Oxygensat_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_Component {
    return new Oxygensat_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_Component {
    return new Oxygensat_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_Component | PlainMessage<Oxygensat_Component> | undefined, b: Oxygensat_Component | PlainMessage<Oxygensat_Component> | undefined): boolean {
    return proto3.util.equals(Oxygensat_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Oxygensat.Component.Value
 */
export class Oxygensat_Component_Value extends Message<Oxygensat_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Oxygensat.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Oxygensat_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Oxygensat.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oxygensat_Component_Value {
    return new Oxygensat_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oxygensat_Component_Value {
    return new Oxygensat_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oxygensat_Component_Value {
    return new Oxygensat_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Oxygensat_Component_Value | PlainMessage<Oxygensat_Component_Value> | undefined, b: Oxygensat_Component_Value | PlainMessage<Oxygensat_Component_Value> | undefined): boolean {
    return proto3.util.equals(Oxygensat_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ProcedureRequest-Genetics.
 * A request for a procedure or diagnostic to be performed.
 * See http://hl7.org/fhir/StructureDefinition/procedurerequest-genetics
 *
 * @generated from message google.fhir.stu3.proto.ProcedurerequestGenetics
 */
export class ProcedurerequestGenetics extends Message<ProcedurerequestGenetics> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifiers assigned to this order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * What request replaces
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 12;
   */
  replaces: Reference[] = [];

  /**
   * Composite Request ID
   *
   * @generated from field: google.fhir.stu3.proto.Identifier requisition = 13;
   */
  requisition?: Identifier;

  /**
   * draft | active | suspended | completed | entered-in-error | cancelled
   *
   * @generated from field: google.fhir.stu3.proto.RequestStatusCode status = 14;
   */
  status?: RequestStatusCode;

  /**
   * proposal | plan | order +
   *
   * @generated from field: google.fhir.stu3.proto.RequestIntentCode intent = 15;
   */
  intent?: RequestIntentCode;

  /**
   * routine | urgent | asap | stat
   *
   * @generated from field: google.fhir.stu3.proto.RequestPriorityCode priority = 16;
   */
  priority?: RequestPriorityCode;

  /**
   * True if procedure should not be performed
   *
   * @generated from field: google.fhir.stu3.proto.Boolean do_not_perform = 17;
   */
  doNotPerform?: Boolean;

  /**
   * Classification of procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 18;
   */
  category: CodeableConcept[] = [];

  /**
   * What is being requested/ordered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 19;
   */
  code?: CodeableConcept;

  /**
   * Individual the service is ordered for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 20;
   */
  subject?: Reference;

  /**
   * Encounter or Episode during which request was created
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 21;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.ProcedurerequestGenetics.Occurrence occurrence = 22;
   */
  occurrence?: ProcedurerequestGenetics_Occurrence;

  /**
   * @generated from field: google.fhir.stu3.proto.ProcedurerequestGenetics.AsNeeded as_needed = 23;
   */
  asNeeded?: ProcedurerequestGenetics_AsNeeded;

  /**
   * Date request signed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 24;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.proto.ProcedurerequestGenetics.Requester requester = 25;
   */
  requester?: ProcedurerequestGenetics_Requester;

  /**
   * Performer role
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept performer_type = 26;
   */
  performerType?: CodeableConcept;

  /**
   * Requested perfomer
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 27;
   */
  performer?: Reference;

  /**
   * Explanation/Justification for test
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 28;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Explanation/Justification for test
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 29;
   */
  reasonReference: Reference[] = [];

  /**
   * Additional clinical information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_info = 30;
   */
  supportingInfo: Reference[] = [];

  /**
   * Procedure Samples
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 31;
   */
  specimen: Reference[] = [];

  /**
   * Location on Body
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 32;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * Comments
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 33;
   */
  note: Annotation[] = [];

  /**
   * Request provenance
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference relevant_history = 34;
   */
  relevantHistory: Reference[] = [];

  /**
   * The items the orderer requested
   *
   * @generated from field: repeated google.fhir.stu3.proto.DiagnosticReportItem item = 35 [json_name = "Item"];
   */
  item: DiagnosticReportItem[] = [];

  constructor(data?: PartialMessage<ProcedurerequestGenetics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedurerequestGenetics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "requisition", kind: "message", T: Identifier },
    { no: 14, name: "status", kind: "message", T: RequestStatusCode },
    { no: 15, name: "intent", kind: "message", T: RequestIntentCode },
    { no: 16, name: "priority", kind: "message", T: RequestPriorityCode },
    { no: 17, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 18, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "code", kind: "message", T: CodeableConcept },
    { no: 20, name: "subject", kind: "message", T: Reference },
    { no: 21, name: "context", kind: "message", T: Reference },
    { no: 22, name: "occurrence", kind: "message", T: ProcedurerequestGenetics_Occurrence },
    { no: 23, name: "as_needed", kind: "message", T: ProcedurerequestGenetics_AsNeeded },
    { no: 24, name: "authored_on", kind: "message", T: DateTime },
    { no: 25, name: "requester", kind: "message", T: ProcedurerequestGenetics_Requester },
    { no: 26, name: "performer_type", kind: "message", T: CodeableConcept },
    { no: 27, name: "performer", kind: "message", T: Reference },
    { no: 28, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 33, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 34, name: "relevant_history", kind: "message", T: Reference, repeated: true },
    { no: 35, name: "item", jsonName: "Item", kind: "message", T: DiagnosticReportItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedurerequestGenetics {
    return new ProcedurerequestGenetics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics {
    return new ProcedurerequestGenetics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics {
    return new ProcedurerequestGenetics().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedurerequestGenetics | PlainMessage<ProcedurerequestGenetics> | undefined, b: ProcedurerequestGenetics | PlainMessage<ProcedurerequestGenetics> | undefined): boolean {
    return proto3.util.equals(ProcedurerequestGenetics, a, b);
  }
}

/**
 * When procedure should occur
 *
 * @generated from message google.fhir.stu3.proto.ProcedurerequestGenetics.Occurrence
 */
export class ProcedurerequestGenetics_Occurrence extends Message<ProcedurerequestGenetics_Occurrence> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ProcedurerequestGenetics.Occurrence.occurrence
   */
  occurrence: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ProcedurerequestGenetics_Occurrence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedurerequestGenetics.Occurrence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "occurrence" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "occurrence" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "occurrence" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedurerequestGenetics_Occurrence {
    return new ProcedurerequestGenetics_Occurrence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics_Occurrence {
    return new ProcedurerequestGenetics_Occurrence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics_Occurrence {
    return new ProcedurerequestGenetics_Occurrence().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedurerequestGenetics_Occurrence | PlainMessage<ProcedurerequestGenetics_Occurrence> | undefined, b: ProcedurerequestGenetics_Occurrence | PlainMessage<ProcedurerequestGenetics_Occurrence> | undefined): boolean {
    return proto3.util.equals(ProcedurerequestGenetics_Occurrence, a, b);
  }
}

/**
 * Preconditions for procedure or diagnostic
 *
 * @generated from message google.fhir.stu3.proto.ProcedurerequestGenetics.AsNeeded
 */
export class ProcedurerequestGenetics_AsNeeded extends Message<ProcedurerequestGenetics_AsNeeded> {
  /**
   * @generated from oneof google.fhir.stu3.proto.ProcedurerequestGenetics.AsNeeded.as_needed
   */
  asNeeded: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ProcedurerequestGenetics_AsNeeded>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedurerequestGenetics.AsNeeded";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "as_needed" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "as_needed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedurerequestGenetics_AsNeeded {
    return new ProcedurerequestGenetics_AsNeeded().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics_AsNeeded {
    return new ProcedurerequestGenetics_AsNeeded().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics_AsNeeded {
    return new ProcedurerequestGenetics_AsNeeded().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedurerequestGenetics_AsNeeded | PlainMessage<ProcedurerequestGenetics_AsNeeded> | undefined, b: ProcedurerequestGenetics_AsNeeded | PlainMessage<ProcedurerequestGenetics_AsNeeded> | undefined): boolean {
    return proto3.util.equals(ProcedurerequestGenetics_AsNeeded, a, b);
  }
}

/**
 * Who/what is requesting procedure or diagnostic
 *
 * @generated from message google.fhir.stu3.proto.ProcedurerequestGenetics.Requester
 */
export class ProcedurerequestGenetics_Requester extends Message<ProcedurerequestGenetics_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Individual making the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<ProcedurerequestGenetics_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.ProcedurerequestGenetics.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedurerequestGenetics_Requester {
    return new ProcedurerequestGenetics_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics_Requester {
    return new ProcedurerequestGenetics_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedurerequestGenetics_Requester {
    return new ProcedurerequestGenetics_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedurerequestGenetics_Requester | PlainMessage<ProcedurerequestGenetics_Requester> | undefined, b: ProcedurerequestGenetics_Requester | PlainMessage<ProcedurerequestGenetics_Requester> | undefined): boolean {
    return proto3.util.equals(ProcedurerequestGenetics_Requester, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Respiratory Rate Profile.
 * See http://hl7.org/fhir/StructureDefinition/resprate
 *
 * @generated from message google.fhir.stu3.proto.Resprate
 */
export class Resprate extends Message<Resprate> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Resprate.CodeableConceptForCode code = 13;
   */
  code?: Resprate_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Resprate.Effective effective = 16;
   */
  effective?: Resprate_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Resprate.Value value = 19;
   */
  value?: Resprate_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Resprate.ReferenceRange reference_range = 27;
   */
  referenceRange: Resprate_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Resprate.Related related = 28;
   */
  related: Resprate_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Resprate.Component component = 29;
   */
  component: Resprate_Component[] = [];

  constructor(data?: PartialMessage<Resprate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Resprate_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Resprate_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Resprate_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Resprate_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Resprate_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Resprate_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate {
    return new Resprate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate {
    return new Resprate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate {
    return new Resprate().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate | PlainMessage<Resprate> | undefined, b: Resprate | PlainMessage<Resprate> | undefined): boolean {
    return proto3.util.equals(Resprate, a, b);
  }
}

/**
 * Respiratory Rate
 *
 * @generated from message google.fhir.stu3.proto.Resprate.CodeableConceptForCode
 */
export class Resprate_CodeableConceptForCode extends Message<Resprate_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode resp_rate_code = 5 [json_name = "RespRateCode"];
   */
  respRateCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Resprate_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "resp_rate_code", jsonName: "RespRateCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_CodeableConceptForCode {
    return new Resprate_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_CodeableConceptForCode {
    return new Resprate_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_CodeableConceptForCode {
    return new Resprate_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_CodeableConceptForCode | PlainMessage<Resprate_CodeableConceptForCode> | undefined, b: Resprate_CodeableConceptForCode | PlainMessage<Resprate_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Resprate_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Resprate.Effective
 */
export class Resprate_Effective extends Message<Resprate_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Resprate.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Resprate_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_Effective {
    return new Resprate_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_Effective {
    return new Resprate_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_Effective {
    return new Resprate_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_Effective | PlainMessage<Resprate_Effective> | undefined, b: Resprate_Effective | PlainMessage<Resprate_Effective> | undefined): boolean {
    return proto3.util.equals(Resprate_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Resprate.Value
 */
export class Resprate_Value extends Message<Resprate_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Resprate.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Resprate_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_Value {
    return new Resprate_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_Value {
    return new Resprate_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_Value {
    return new Resprate_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_Value | PlainMessage<Resprate_Value> | undefined, b: Resprate_Value | PlainMessage<Resprate_Value> | undefined): boolean {
    return proto3.util.equals(Resprate_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Resprate.ReferenceRange
 */
export class Resprate_ReferenceRange extends Message<Resprate_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Resprate_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_ReferenceRange {
    return new Resprate_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_ReferenceRange {
    return new Resprate_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_ReferenceRange {
    return new Resprate_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_ReferenceRange | PlainMessage<Resprate_ReferenceRange> | undefined, b: Resprate_ReferenceRange | PlainMessage<Resprate_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Resprate_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Resprate.Related
 */
export class Resprate_Related extends Message<Resprate_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Resprate_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_Related {
    return new Resprate_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_Related {
    return new Resprate_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_Related {
    return new Resprate_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_Related | PlainMessage<Resprate_Related> | undefined, b: Resprate_Related | PlainMessage<Resprate_Related> | undefined): boolean {
    return proto3.util.equals(Resprate_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Resprate.Component
 */
export class Resprate_Component extends Message<Resprate_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Resprate.Component.Value value = 5;
   */
  value?: Resprate_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Resprate.ReferenceRange reference_range = 8;
   */
  referenceRange: Resprate_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Resprate_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Resprate_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Resprate_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_Component {
    return new Resprate_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_Component {
    return new Resprate_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_Component {
    return new Resprate_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_Component | PlainMessage<Resprate_Component> | undefined, b: Resprate_Component | PlainMessage<Resprate_Component> | undefined): boolean {
    return proto3.util.equals(Resprate_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Resprate.Component.Value
 */
export class Resprate_Component_Value extends Message<Resprate_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Resprate.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Resprate_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Resprate.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Resprate_Component_Value {
    return new Resprate_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Resprate_Component_Value {
    return new Resprate_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Resprate_Component_Value {
    return new Resprate_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Resprate_Component_Value | PlainMessage<Resprate_Component_Value> | undefined, b: Resprate_Component_Value | PlainMessage<Resprate_Component_Value> | undefined): boolean {
    return proto3.util.equals(Resprate_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Shareable CodeSystem.
 * A set of codes drawn from one or more code systems.
 * See http://hl7.org/fhir/StructureDefinition/shareablecodesystem
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem
 */
export class Shareablecodesystem extends Message<Shareablecodesystem> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this code system (globally unique) (Coding.system)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the code system
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Business version of the code system (Coding.version)
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this code system (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this code system (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the code system
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for code system (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this code system is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 23;
   */
  copyright?: Markdown;

  /**
   * If code comparison is case sensitive
   *
   * @generated from field: google.fhir.stu3.proto.Boolean case_sensitive = 24;
   */
  caseSensitive?: Boolean;

  /**
   * Canonical URL for value set with entire code system
   *
   * @generated from field: google.fhir.stu3.proto.Uri value_set = 25;
   */
  valueSet?: Uri;

  /**
   * grouped-by | is-a | part-of | classified-with
   *
   * @generated from field: google.fhir.stu3.proto.CodeSystemHierarchyMeaningCode hierarchy_meaning = 26;
   */
  hierarchyMeaning?: CodeSystemHierarchyMeaningCode;

  /**
   * If code system defines a post-composition grammar
   *
   * @generated from field: google.fhir.stu3.proto.Boolean compositional = 27;
   */
  compositional?: Boolean;

  /**
   * If definitions are not stable
   *
   * @generated from field: google.fhir.stu3.proto.Boolean version_needed = 28;
   */
  versionNeeded?: Boolean;

  /**
   * not-present | example | fragment | complete
   *
   * @generated from field: google.fhir.stu3.proto.CodeSystemContentModeCode content = 29;
   */
  content?: CodeSystemContentModeCode;

  /**
   * Total concepts in the code system
   *
   * @generated from field: google.fhir.stu3.proto.UnsignedInt count = 30;
   */
  count?: UnsignedInt;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablecodesystem.Filter filter = 31;
   */
  filter: Shareablecodesystem_Filter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablecodesystem.Property property = 32;
   */
  property: Shareablecodesystem_Property[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition concept = 33;
   */
  concept: Shareablecodesystem_ConceptDefinition[] = [];

  constructor(data?: PartialMessage<Shareablecodesystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "copyright", kind: "message", T: Markdown },
    { no: 24, name: "case_sensitive", kind: "message", T: Boolean },
    { no: 25, name: "value_set", kind: "message", T: Uri },
    { no: 26, name: "hierarchy_meaning", kind: "message", T: CodeSystemHierarchyMeaningCode },
    { no: 27, name: "compositional", kind: "message", T: Boolean },
    { no: 28, name: "version_needed", kind: "message", T: Boolean },
    { no: 29, name: "content", kind: "message", T: CodeSystemContentModeCode },
    { no: 30, name: "count", kind: "message", T: UnsignedInt },
    { no: 31, name: "filter", kind: "message", T: Shareablecodesystem_Filter, repeated: true },
    { no: 32, name: "property", kind: "message", T: Shareablecodesystem_Property, repeated: true },
    { no: 33, name: "concept", kind: "message", T: Shareablecodesystem_ConceptDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem {
    return new Shareablecodesystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem {
    return new Shareablecodesystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem {
    return new Shareablecodesystem().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem | PlainMessage<Shareablecodesystem> | undefined, b: Shareablecodesystem | PlainMessage<Shareablecodesystem> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem, a, b);
  }
}

/**
 * Filter that can be used in a value set
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem.Filter
 */
export class Shareablecodesystem_Filter extends Message<Shareablecodesystem_Filter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies the filter
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * How or why the filter is used
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Operators that can be used with filter
   *
   * @generated from field: repeated google.fhir.stu3.proto.FilterOperatorCode operator = 6;
   */
  operator: FilterOperatorCode[] = [];

  /**
   * What to use for the value
   *
   * @generated from field: google.fhir.stu3.proto.String value = 7;
   */
  value?: String;

  constructor(data?: PartialMessage<Shareablecodesystem_Filter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem.Filter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "operator", kind: "message", T: FilterOperatorCode, repeated: true },
    { no: 7, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem_Filter {
    return new Shareablecodesystem_Filter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem_Filter {
    return new Shareablecodesystem_Filter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem_Filter {
    return new Shareablecodesystem_Filter().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem_Filter | PlainMessage<Shareablecodesystem_Filter> | undefined, b: Shareablecodesystem_Filter | PlainMessage<Shareablecodesystem_Filter> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem_Filter, a, b);
  }
}

/**
 * Additional information supplied about each concept
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem.Property
 */
export class Shareablecodesystem_Property extends Message<Shareablecodesystem_Property> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies the property on the concepts, and when referred to in
   * operations
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Formal identifier for the property
   *
   * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * Why the property is defined, and/or what it conveys
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * code | Coding | string | integer | boolean | dateTime
   *
   * @generated from field: google.fhir.stu3.proto.PropertyTypeCode type = 7;
   */
  type?: PropertyTypeCode;

  constructor(data?: PartialMessage<Shareablecodesystem_Property>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem.Property";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "type", kind: "message", T: PropertyTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem_Property {
    return new Shareablecodesystem_Property().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem_Property {
    return new Shareablecodesystem_Property().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem_Property {
    return new Shareablecodesystem_Property().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem_Property | PlainMessage<Shareablecodesystem_Property> | undefined, b: Shareablecodesystem_Property | PlainMessage<Shareablecodesystem_Property> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem_Property, a, b);
  }
}

/**
 * Concepts in the code system
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition
 */
export class Shareablecodesystem_ConceptDefinition extends Message<Shareablecodesystem_ConceptDefinition> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies concept
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Text to display to the user
   *
   * @generated from field: google.fhir.stu3.proto.String display = 5;
   */
  display?: String;

  /**
   * Formal definition
   *
   * @generated from field: google.fhir.stu3.proto.String definition = 6;
   */
  definition?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.Designation designation = 7;
   */
  designation: Shareablecodesystem_ConceptDefinition_Designation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty property = 8;
   */
  property: Shareablecodesystem_ConceptDefinition_ConceptProperty[] = [];

  /**
   * Child Concepts (is-a/contains/categorizes)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition concept = 9;
   */
  concept: Shareablecodesystem_ConceptDefinition[] = [];

  constructor(data?: PartialMessage<Shareablecodesystem_ConceptDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "definition", kind: "message", T: String },
    { no: 7, name: "designation", kind: "message", T: Shareablecodesystem_ConceptDefinition_Designation, repeated: true },
    { no: 8, name: "property", kind: "message", T: Shareablecodesystem_ConceptDefinition_ConceptProperty, repeated: true },
    { no: 9, name: "concept", kind: "message", T: Shareablecodesystem_ConceptDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem_ConceptDefinition {
    return new Shareablecodesystem_ConceptDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition {
    return new Shareablecodesystem_ConceptDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition {
    return new Shareablecodesystem_ConceptDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem_ConceptDefinition | PlainMessage<Shareablecodesystem_ConceptDefinition> | undefined, b: Shareablecodesystem_ConceptDefinition | PlainMessage<Shareablecodesystem_ConceptDefinition> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem_ConceptDefinition, a, b);
  }
}

/**
 * Additional representations for the concept
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.Designation
 */
export class Shareablecodesystem_ConceptDefinition_Designation extends Message<Shareablecodesystem_ConceptDefinition_Designation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Details how this designation would be used
   *
   * @generated from field: google.fhir.stu3.proto.Coding use = 5;
   */
  use?: Coding;

  /**
   * The text value for this designation
   *
   * @generated from field: google.fhir.stu3.proto.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<Shareablecodesystem_ConceptDefinition_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "use", kind: "message", T: Coding },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem_ConceptDefinition_Designation {
    return new Shareablecodesystem_ConceptDefinition_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition_Designation {
    return new Shareablecodesystem_ConceptDefinition_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition_Designation {
    return new Shareablecodesystem_ConceptDefinition_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem_ConceptDefinition_Designation | PlainMessage<Shareablecodesystem_ConceptDefinition_Designation> | undefined, b: Shareablecodesystem_ConceptDefinition_Designation | PlainMessage<Shareablecodesystem_ConceptDefinition_Designation> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem_ConceptDefinition_Designation, a, b);
  }
}

/**
 * Property value for the concept
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty
 */
export class Shareablecodesystem_ConceptDefinition_ConceptProperty extends Message<Shareablecodesystem_ConceptDefinition_ConceptProperty> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to CodeSystem.property.code
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * @generated from field: google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty.Value value = 5;
   */
  value?: Shareablecodesystem_ConceptDefinition_ConceptProperty_Value;

  constructor(data?: PartialMessage<Shareablecodesystem_ConceptDefinition_ConceptProperty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "value", kind: "message", T: Shareablecodesystem_ConceptDefinition_ConceptProperty_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem_ConceptDefinition_ConceptProperty {
    return new Shareablecodesystem_ConceptDefinition_ConceptProperty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition_ConceptProperty {
    return new Shareablecodesystem_ConceptDefinition_ConceptProperty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition_ConceptProperty {
    return new Shareablecodesystem_ConceptDefinition_ConceptProperty().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem_ConceptDefinition_ConceptProperty | PlainMessage<Shareablecodesystem_ConceptDefinition_ConceptProperty> | undefined, b: Shareablecodesystem_ConceptDefinition_ConceptProperty | PlainMessage<Shareablecodesystem_ConceptDefinition_ConceptProperty> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem_ConceptDefinition_ConceptProperty, a, b);
  }
}

/**
 * Value of the property for this concept
 *
 * @generated from message google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty.Value
 */
export class Shareablecodesystem_ConceptDefinition_ConceptProperty_Value extends Message<Shareablecodesystem_ConceptDefinition_ConceptProperty_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 1;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Coding coding = 2;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 4;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 5;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Shareablecodesystem_ConceptDefinition_ConceptProperty_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablecodesystem.ConceptDefinition.ConceptProperty.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: Code, oneof: "value" },
    { no: 2, name: "coding", kind: "message", T: Coding, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 5, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablecodesystem_ConceptDefinition_ConceptProperty_Value {
    return new Shareablecodesystem_ConceptDefinition_ConceptProperty_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition_ConceptProperty_Value {
    return new Shareablecodesystem_ConceptDefinition_ConceptProperty_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablecodesystem_ConceptDefinition_ConceptProperty_Value {
    return new Shareablecodesystem_ConceptDefinition_ConceptProperty_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablecodesystem_ConceptDefinition_ConceptProperty_Value | PlainMessage<Shareablecodesystem_ConceptDefinition_ConceptProperty_Value> | undefined, b: Shareablecodesystem_ConceptDefinition_ConceptProperty_Value | PlainMessage<Shareablecodesystem_ConceptDefinition_ConceptProperty_Value> | undefined): boolean {
    return proto3.util.equals(Shareablecodesystem_ConceptDefinition_ConceptProperty_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Shareable ValueSet.
 * A set of codes drawn from one or more code systems.
 * See http://hl7.org/fhir/StructureDefinition/shareablevalueset
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset
 */
export class Shareablevalueset extends Message<Shareablevalueset> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Logical URI to reference this value set (globally unique)
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 9;
   */
  url?: Uri;

  /**
   * Additional identifier for the value set
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the value set
   *
   * @generated from field: google.fhir.stu3.proto.String version = 11;
   */
  version?: String;

  /**
   * Name for this value set (computer friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Name for this value set (human friendly)
   *
   * @generated from field: google.fhir.stu3.proto.String title = 13;
   */
  title?: String;

  /**
   * draft | active | retired | unknown
   *
   * @generated from field: google.fhir.stu3.proto.PublicationStatusCode status = 14;
   */
  status?: PublicationStatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.stu3.proto.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date this was last changed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.stu3.proto.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the value set
   *
   * @generated from field: google.fhir.stu3.proto.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * Context the content is intended to support
   *
   * @generated from field: repeated google.fhir.stu3.proto.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for value set (if applicable)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Indicates whether or not any change to the content logical definition may
   * occur
   *
   * @generated from field: google.fhir.stu3.proto.Boolean immutable = 22;
   */
  immutable?: Boolean;

  /**
   * Why this value set is defined
   *
   * @generated from field: google.fhir.stu3.proto.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.stu3.proto.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * Whether this is intended to be used with an extensible binding
   *
   * @generated from field: google.fhir.stu3.proto.Boolean extensible = 25;
   */
  extensible?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.proto.Shareablevalueset.Compose compose = 26;
   */
  compose?: Shareablevalueset_Compose;

  /**
   * @generated from field: google.fhir.stu3.proto.Shareablevalueset.Expansion expansion = 27;
   */
  expansion?: Shareablevalueset_Expansion;

  constructor(data?: PartialMessage<Shareablevalueset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "url", kind: "message", T: Uri },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "title", kind: "message", T: String },
    { no: 14, name: "status", kind: "message", T: PublicationStatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "immutable", kind: "message", T: Boolean },
    { no: 23, name: "purpose", kind: "message", T: Markdown },
    { no: 24, name: "copyright", kind: "message", T: Markdown },
    { no: 25, name: "extensible", kind: "message", T: Boolean },
    { no: 26, name: "compose", kind: "message", T: Shareablevalueset_Compose },
    { no: 27, name: "expansion", kind: "message", T: Shareablevalueset_Expansion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset {
    return new Shareablevalueset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset {
    return new Shareablevalueset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset {
    return new Shareablevalueset().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset | PlainMessage<Shareablevalueset> | undefined, b: Shareablevalueset | PlainMessage<Shareablevalueset> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset, a, b);
  }
}

/**
 * Definition of the content of the value set (CLD)
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Compose
 */
export class Shareablevalueset_Compose extends Message<Shareablevalueset_Compose> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Fixed date for version-less references (transitive)
   *
   * @generated from field: google.fhir.stu3.proto.Date locked_date = 4;
   */
  lockedDate?: Date;

  /**
   * Whether inactive codes are in the value set
   *
   * @generated from field: google.fhir.stu3.proto.Boolean inactive = 5;
   */
  inactive?: Boolean;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet include = 6;
   */
  include: Shareablevalueset_Compose_ConceptSet[] = [];

  /**
   * Explicitly exclude codes from a code system or other value sets
   *
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet exclude = 7;
   */
  exclude: Shareablevalueset_Compose_ConceptSet[] = [];

  constructor(data?: PartialMessage<Shareablevalueset_Compose>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Compose";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "locked_date", kind: "message", T: Date },
    { no: 5, name: "inactive", kind: "message", T: Boolean },
    { no: 6, name: "include", kind: "message", T: Shareablevalueset_Compose_ConceptSet, repeated: true },
    { no: 7, name: "exclude", kind: "message", T: Shareablevalueset_Compose_ConceptSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Compose {
    return new Shareablevalueset_Compose().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose {
    return new Shareablevalueset_Compose().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose {
    return new Shareablevalueset_Compose().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Compose | PlainMessage<Shareablevalueset_Compose> | undefined, b: Shareablevalueset_Compose | PlainMessage<Shareablevalueset_Compose> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Compose, a, b);
  }
}

/**
 * Include one or more codes from a code system or other value set(s)
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet
 */
export class Shareablevalueset_Compose_ConceptSet extends Message<Shareablevalueset_Compose_ConceptSet> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The system the codes come from
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 4;
   */
  system?: Uri;

  /**
   * Specific version of the code system referred to
   *
   * @generated from field: google.fhir.stu3.proto.String version = 5;
   */
  version?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference concept = 6;
   */
  concept: Shareablevalueset_Compose_ConceptSet_ConceptReference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.Filter filter = 7;
   */
  filter: Shareablevalueset_Compose_ConceptSet_Filter[] = [];

  /**
   * Select only contents included in this value set
   *
   * @generated from field: repeated google.fhir.stu3.proto.Uri value_set = 8;
   */
  valueSet: Uri[] = [];

  constructor(data?: PartialMessage<Shareablevalueset_Compose_ConceptSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "version", kind: "message", T: String },
    { no: 6, name: "concept", kind: "message", T: Shareablevalueset_Compose_ConceptSet_ConceptReference, repeated: true },
    { no: 7, name: "filter", kind: "message", T: Shareablevalueset_Compose_ConceptSet_Filter, repeated: true },
    { no: 8, name: "value_set", kind: "message", T: Uri, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Compose_ConceptSet {
    return new Shareablevalueset_Compose_ConceptSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet {
    return new Shareablevalueset_Compose_ConceptSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet {
    return new Shareablevalueset_Compose_ConceptSet().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Compose_ConceptSet | PlainMessage<Shareablevalueset_Compose_ConceptSet> | undefined, b: Shareablevalueset_Compose_ConceptSet | PlainMessage<Shareablevalueset_Compose_ConceptSet> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Compose_ConceptSet, a, b);
  }
}

/**
 * A concept defined in the system
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference
 */
export class Shareablevalueset_Compose_ConceptSet_ConceptReference extends Message<Shareablevalueset_Compose_ConceptSet_ConceptReference> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code or expression from system
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 4;
   */
  code?: Code;

  /**
   * Text to display for this code for this value set in this valueset
   *
   * @generated from field: google.fhir.stu3.proto.String display = 5;
   */
  display?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference.Designation designation = 6;
   */
  designation: Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation[] = [];

  constructor(data?: PartialMessage<Shareablevalueset_Compose_ConceptSet_ConceptReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "designation", kind: "message", T: Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Compose_ConceptSet_ConceptReference {
    return new Shareablevalueset_Compose_ConceptSet_ConceptReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet_ConceptReference {
    return new Shareablevalueset_Compose_ConceptSet_ConceptReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet_ConceptReference {
    return new Shareablevalueset_Compose_ConceptSet_ConceptReference().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Compose_ConceptSet_ConceptReference | PlainMessage<Shareablevalueset_Compose_ConceptSet_ConceptReference> | undefined, b: Shareablevalueset_Compose_ConceptSet_ConceptReference | PlainMessage<Shareablevalueset_Compose_ConceptSet_ConceptReference> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Compose_ConceptSet_ConceptReference, a, b);
  }
}

/**
 * Additional representations for this concept
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference.Designation
 */
export class Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation extends Message<Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Details how this designation would be used
   *
   * @generated from field: google.fhir.stu3.proto.Coding use = 5;
   */
  use?: Coding;

  /**
   * The text value for this designation
   *
   * @generated from field: google.fhir.stu3.proto.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "use", kind: "message", T: Coding },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation {
    return new Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation {
    return new Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation {
    return new Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation | PlainMessage<Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation> | undefined, b: Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation | PlainMessage<Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation, a, b);
  }
}

/**
 * Select codes/concepts by their properties (including relationships)
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.Filter
 */
export class Shareablevalueset_Compose_ConceptSet_Filter extends Message<Shareablevalueset_Compose_ConceptSet_Filter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A property defined by the code system
   *
   * @generated from field: google.fhir.stu3.proto.Code property = 4;
   */
  property?: Code;

  /**
   * = | is-a | descendent-of | is-not-a | regex | in | not-in |
   * generalizes | exists
   *
   * @generated from field: google.fhir.stu3.proto.FilterOperatorCode op = 5;
   */
  op?: FilterOperatorCode;

  /**
   * Code from the system, or regex criteria, or boolean value for exists
   *
   * @generated from field: google.fhir.stu3.proto.Code value = 6;
   */
  value?: Code;

  constructor(data?: PartialMessage<Shareablevalueset_Compose_ConceptSet_Filter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.Filter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "property", kind: "message", T: Code },
    { no: 5, name: "op", kind: "message", T: FilterOperatorCode },
    { no: 6, name: "value", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Compose_ConceptSet_Filter {
    return new Shareablevalueset_Compose_ConceptSet_Filter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet_Filter {
    return new Shareablevalueset_Compose_ConceptSet_Filter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Compose_ConceptSet_Filter {
    return new Shareablevalueset_Compose_ConceptSet_Filter().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Compose_ConceptSet_Filter | PlainMessage<Shareablevalueset_Compose_ConceptSet_Filter> | undefined, b: Shareablevalueset_Compose_ConceptSet_Filter | PlainMessage<Shareablevalueset_Compose_ConceptSet_Filter> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Compose_ConceptSet_Filter, a, b);
  }
}

/**
 * Used when the value set is "expanded"
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Expansion
 */
export class Shareablevalueset_Expansion extends Message<Shareablevalueset_Expansion> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Uniquely identifies this expansion
   *
   * @generated from field: google.fhir.stu3.proto.Uri identifier = 4;
   */
  identifier?: Uri;

  /**
   * Time ValueSet expansion happened
   *
   * @generated from field: google.fhir.stu3.proto.DateTime timestamp = 5;
   */
  timestamp?: DateTime;

  /**
   * Total number of codes in the expansion
   *
   * @generated from field: google.fhir.stu3.proto.Integer total = 6;
   */
  total?: Integer;

  /**
   * Offset at which this resource starts
   *
   * @generated from field: google.fhir.stu3.proto.Integer offset = 7;
   */
  offset?: Integer;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter parameter = 8;
   */
  parameter: Shareablevalueset_Expansion_Parameter[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Expansion.Contains contains = 9;
   */
  contains: Shareablevalueset_Expansion_Contains[] = [];

  constructor(data?: PartialMessage<Shareablevalueset_Expansion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Expansion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Uri },
    { no: 5, name: "timestamp", kind: "message", T: DateTime },
    { no: 6, name: "total", kind: "message", T: Integer },
    { no: 7, name: "offset", kind: "message", T: Integer },
    { no: 8, name: "parameter", kind: "message", T: Shareablevalueset_Expansion_Parameter, repeated: true },
    { no: 9, name: "contains", kind: "message", T: Shareablevalueset_Expansion_Contains, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Expansion {
    return new Shareablevalueset_Expansion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion {
    return new Shareablevalueset_Expansion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion {
    return new Shareablevalueset_Expansion().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Expansion | PlainMessage<Shareablevalueset_Expansion> | undefined, b: Shareablevalueset_Expansion | PlainMessage<Shareablevalueset_Expansion> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Expansion, a, b);
  }
}

/**
 * Parameter that controlled the expansion process
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter
 */
export class Shareablevalueset_Expansion_Parameter extends Message<Shareablevalueset_Expansion_Parameter> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name as assigned by the server
   *
   * @generated from field: google.fhir.stu3.proto.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter.Value value = 5;
   */
  value?: Shareablevalueset_Expansion_Parameter_Value;

  constructor(data?: PartialMessage<Shareablevalueset_Expansion_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: Shareablevalueset_Expansion_Parameter_Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Expansion_Parameter {
    return new Shareablevalueset_Expansion_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion_Parameter {
    return new Shareablevalueset_Expansion_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion_Parameter {
    return new Shareablevalueset_Expansion_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Expansion_Parameter | PlainMessage<Shareablevalueset_Expansion_Parameter> | undefined, b: Shareablevalueset_Expansion_Parameter | PlainMessage<Shareablevalueset_Expansion_Parameter> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Expansion_Parameter, a, b);
  }
}

/**
 * Value of the named parameter
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter.Value
 */
export class Shareablevalueset_Expansion_Parameter_Value extends Message<Shareablevalueset_Expansion_Parameter_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Decimal decimal = 4;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Uri uri = 5;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Code code = 6;
     */
    value: Code;
    case: "code";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Shareablevalueset_Expansion_Parameter_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Expansion.Parameter.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "value" },
    { no: 4, name: "decimal", kind: "message", T: Decimal, oneof: "value" },
    { no: 5, name: "uri", kind: "message", T: Uri, oneof: "value" },
    { no: 6, name: "code", kind: "message", T: Code, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Expansion_Parameter_Value {
    return new Shareablevalueset_Expansion_Parameter_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion_Parameter_Value {
    return new Shareablevalueset_Expansion_Parameter_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion_Parameter_Value {
    return new Shareablevalueset_Expansion_Parameter_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Expansion_Parameter_Value | PlainMessage<Shareablevalueset_Expansion_Parameter_Value> | undefined, b: Shareablevalueset_Expansion_Parameter_Value | PlainMessage<Shareablevalueset_Expansion_Parameter_Value> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Expansion_Parameter_Value, a, b);
  }
}

/**
 * Codes in the value set
 *
 * @generated from message google.fhir.stu3.proto.Shareablevalueset.Expansion.Contains
 */
export class Shareablevalueset_Expansion_Contains extends Message<Shareablevalueset_Expansion_Contains> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * System value for the code
   *
   * @generated from field: google.fhir.stu3.proto.Uri system = 4;
   */
  system?: Uri;

  /**
   * If user cannot select this entry
   *
   * @generated from field: google.fhir.stu3.proto.Boolean abstract = 5;
   */
  abstract?: Boolean;

  /**
   * If concept is inactive in the code system
   *
   * @generated from field: google.fhir.stu3.proto.Boolean inactive = 6;
   */
  inactive?: Boolean;

  /**
   * Version in which this code/display is defined
   *
   * @generated from field: google.fhir.stu3.proto.String version = 7;
   */
  version?: String;

  /**
   * Code - if blank, this is not a selectable code
   *
   * @generated from field: google.fhir.stu3.proto.Code code = 8;
   */
  code?: Code;

  /**
   * User display for the concept
   *
   * @generated from field: google.fhir.stu3.proto.String display = 9;
   */
  display?: String;

  /**
   * Additional representations for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Compose.ConceptSet.ConceptReference.Designation designation = 10;
   */
  designation: Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation[] = [];

  /**
   * Codes contained under this entry
   *
   * @generated from field: repeated google.fhir.stu3.proto.Shareablevalueset.Expansion.Contains contains = 11;
   */
  contains: Shareablevalueset_Expansion_Contains[] = [];

  constructor(data?: PartialMessage<Shareablevalueset_Expansion_Contains>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Shareablevalueset.Expansion.Contains";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "abstract", kind: "message", T: Boolean },
    { no: 6, name: "inactive", kind: "message", T: Boolean },
    { no: 7, name: "version", kind: "message", T: String },
    { no: 8, name: "code", kind: "message", T: Code },
    { no: 9, name: "display", kind: "message", T: String },
    { no: 10, name: "designation", kind: "message", T: Shareablevalueset_Compose_ConceptSet_ConceptReference_Designation, repeated: true },
    { no: 11, name: "contains", kind: "message", T: Shareablevalueset_Expansion_Contains, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Shareablevalueset_Expansion_Contains {
    return new Shareablevalueset_Expansion_Contains().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion_Contains {
    return new Shareablevalueset_Expansion_Contains().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Shareablevalueset_Expansion_Contains {
    return new Shareablevalueset_Expansion_Contains().fromJsonString(jsonString, options);
  }

  static equals(a: Shareablevalueset_Expansion_Contains | PlainMessage<Shareablevalueset_Expansion_Contains> | undefined, b: Shareablevalueset_Expansion_Contains | PlainMessage<Shareablevalueset_Expansion_Contains> | undefined): boolean {
    return proto3.util.equals(Shareablevalueset_Expansion_Contains, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Example Lipid Profile.
 * Triglyceride Result.
 * See http://hl7.org/fhir/StructureDefinition/triglyceride
 *
 * @generated from message google.fhir.stu3.proto.Triglyceride
 */
export class Triglyceride extends Message<Triglyceride> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Triglyceride
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Triglyceride.Effective effective = 16;
   */
  effective?: Triglyceride_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Triglyceride.Value value = 19;
   */
  value?: Triglyceride_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * + | ++ | +++ | - | -- | ---
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Triglyceride.ReferenceRange reference_range = 27;
   */
  referenceRange?: Triglyceride_ReferenceRange;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Triglyceride.Component component = 29;
   */
  component: Triglyceride_Component[] = [];

  constructor(data?: PartialMessage<Triglyceride>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Triglyceride";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Triglyceride_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Triglyceride_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Triglyceride_ReferenceRange },
    { no: 29, name: "component", kind: "message", T: Triglyceride_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Triglyceride {
    return new Triglyceride().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Triglyceride {
    return new Triglyceride().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Triglyceride {
    return new Triglyceride().fromJsonString(jsonString, options);
  }

  static equals(a: Triglyceride | PlainMessage<Triglyceride> | undefined, b: Triglyceride | PlainMessage<Triglyceride> | undefined): boolean {
    return proto3.util.equals(Triglyceride, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.proto.Triglyceride.Effective
 */
export class Triglyceride_Effective extends Message<Triglyceride_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Triglyceride.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Triglyceride_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Triglyceride.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Triglyceride_Effective {
    return new Triglyceride_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Triglyceride_Effective {
    return new Triglyceride_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Triglyceride_Effective {
    return new Triglyceride_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Triglyceride_Effective | PlainMessage<Triglyceride_Effective> | undefined, b: Triglyceride_Effective | PlainMessage<Triglyceride_Effective> | undefined): boolean {
    return proto3.util.equals(Triglyceride_Effective, a, b);
  }
}

/**
 * Triglyceride value
 *
 * @generated from message google.fhir.stu3.proto.Triglyceride.Value
 */
export class Triglyceride_Value extends Message<Triglyceride_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Triglyceride.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Triglyceride_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Triglyceride.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Triglyceride_Value {
    return new Triglyceride_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Triglyceride_Value {
    return new Triglyceride_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Triglyceride_Value {
    return new Triglyceride_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Triglyceride_Value | PlainMessage<Triglyceride_Value> | undefined, b: Triglyceride_Value | PlainMessage<Triglyceride_Value> | undefined): boolean {
    return proto3.util.equals(Triglyceride_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Triglyceride.ReferenceRange
 */
export class Triglyceride_ReferenceRange extends Message<Triglyceride_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Triglyceride_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Triglyceride.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Triglyceride_ReferenceRange {
    return new Triglyceride_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Triglyceride_ReferenceRange {
    return new Triglyceride_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Triglyceride_ReferenceRange {
    return new Triglyceride_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Triglyceride_ReferenceRange | PlainMessage<Triglyceride_ReferenceRange> | undefined, b: Triglyceride_ReferenceRange | PlainMessage<Triglyceride_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Triglyceride_ReferenceRange, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.proto.Triglyceride.Component
 */
export class Triglyceride_Component extends Message<Triglyceride_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Triglyceride.Component.Value value = 5;
   */
  value?: Triglyceride_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Triglyceride.ReferenceRange reference_range = 8;
   */
  referenceRange: Triglyceride_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Triglyceride_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Triglyceride.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Triglyceride_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Triglyceride_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Triglyceride_Component {
    return new Triglyceride_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Triglyceride_Component {
    return new Triglyceride_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Triglyceride_Component {
    return new Triglyceride_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Triglyceride_Component | PlainMessage<Triglyceride_Component> | undefined, b: Triglyceride_Component | PlainMessage<Triglyceride_Component> | undefined): boolean {
    return proto3.util.equals(Triglyceride_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.proto.Triglyceride.Component.Value
 */
export class Triglyceride_Component_Value extends Message<Triglyceride_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Triglyceride.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Triglyceride_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Triglyceride.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Triglyceride_Component_Value {
    return new Triglyceride_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Triglyceride_Component_Value {
    return new Triglyceride_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Triglyceride_Component_Value {
    return new Triglyceride_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Triglyceride_Component_Value | PlainMessage<Triglyceride_Component_Value> | undefined, b: Triglyceride_Component_Value | PlainMessage<Triglyceride_Component_Value> | undefined): boolean {
    return proto3.util.equals(Triglyceride_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Vital Signs Profile.
 * See http://hl7.org/fhir/StructureDefinition/vitalsigns
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns
 */
export class Vitalsigns extends Message<Vitalsigns> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Coded Responses from C-CDA Vital Sign Results
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Vitalsigns.Effective effective = 16;
   */
  effective?: Vitalsigns_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Vitalsigns.Value value = 19;
   */
  value?: Vitalsigns_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Vitalsigns.ReferenceRange reference_range = 27;
   */
  referenceRange: Vitalsigns_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Vitalsigns.Related related = 28;
   */
  related: Vitalsigns_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Vitalsigns.Component component = 29;
   */
  component: Vitalsigns_Component[] = [];

  constructor(data?: PartialMessage<Vitalsigns>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Vitalsigns_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: Vitalsigns_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Vitalsigns_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Vitalsigns_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Vitalsigns_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns {
    return new Vitalsigns().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns {
    return new Vitalsigns().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns {
    return new Vitalsigns().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns | PlainMessage<Vitalsigns> | undefined, b: Vitalsigns | PlainMessage<Vitalsigns> | undefined): boolean {
    return proto3.util.equals(Vitalsigns, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns.Effective
 */
export class Vitalsigns_Effective extends Message<Vitalsigns_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Vitalsigns.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Vitalsigns_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns_Effective {
    return new Vitalsigns_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns_Effective {
    return new Vitalsigns_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns_Effective {
    return new Vitalsigns_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns_Effective | PlainMessage<Vitalsigns_Effective> | undefined, b: Vitalsigns_Effective | PlainMessage<Vitalsigns_Effective> | undefined): boolean {
    return proto3.util.equals(Vitalsigns_Effective, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns.Value
 */
export class Vitalsigns_Value extends Message<Vitalsigns_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Vitalsigns.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Vitalsigns_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns_Value {
    return new Vitalsigns_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns_Value {
    return new Vitalsigns_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns_Value {
    return new Vitalsigns_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns_Value | PlainMessage<Vitalsigns_Value> | undefined, b: Vitalsigns_Value | PlainMessage<Vitalsigns_Value> | undefined): boolean {
    return proto3.util.equals(Vitalsigns_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns.ReferenceRange
 */
export class Vitalsigns_ReferenceRange extends Message<Vitalsigns_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Vitalsigns_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns_ReferenceRange {
    return new Vitalsigns_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns_ReferenceRange {
    return new Vitalsigns_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns_ReferenceRange {
    return new Vitalsigns_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns_ReferenceRange | PlainMessage<Vitalsigns_ReferenceRange> | undefined, b: Vitalsigns_ReferenceRange | PlainMessage<Vitalsigns_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Vitalsigns_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns.Related
 */
export class Vitalsigns_Related extends Message<Vitalsigns_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Vitalsigns_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns_Related {
    return new Vitalsigns_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns_Related {
    return new Vitalsigns_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns_Related {
    return new Vitalsigns_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns_Related | PlainMessage<Vitalsigns_Related> | undefined, b: Vitalsigns_Related | PlainMessage<Vitalsigns_Related> | undefined): boolean {
    return proto3.util.equals(Vitalsigns_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns.Component
 */
export class Vitalsigns_Component extends Message<Vitalsigns_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Vitalsigns.Component.Value value = 5;
   */
  value?: Vitalsigns_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Vitalsigns.ReferenceRange reference_range = 8;
   */
  referenceRange: Vitalsigns_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Vitalsigns_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Vitalsigns_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Vitalsigns_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns_Component {
    return new Vitalsigns_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns_Component {
    return new Vitalsigns_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns_Component {
    return new Vitalsigns_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns_Component | PlainMessage<Vitalsigns_Component> | undefined, b: Vitalsigns_Component | PlainMessage<Vitalsigns_Component> | undefined): boolean {
    return proto3.util.equals(Vitalsigns_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Vitalsigns.Component.Value
 */
export class Vitalsigns_Component_Value extends Message<Vitalsigns_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Vitalsigns.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Vitalsigns_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalsigns.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalsigns_Component_Value {
    return new Vitalsigns_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalsigns_Component_Value {
    return new Vitalsigns_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalsigns_Component_Value {
    return new Vitalsigns_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalsigns_Component_Value | PlainMessage<Vitalsigns_Component_Value> | undefined, b: Vitalsigns_Component_Value | PlainMessage<Vitalsigns_Component_Value> | undefined): boolean {
    return proto3.util.equals(Vitalsigns_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Vital Signs Profile.
 * FHIR Vital Signs Panel Profile.
 * See http://hl7.org/fhir/StructureDefinition/vitalspanel
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel
 */
export class Vitalspanel extends Message<Vitalspanel> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.proto.Vitalspanel.CodeableConceptForCode code = 13;
   */
  code?: Vitalspanel_CodeableConceptForCode;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.proto.Vitalspanel.Effective effective = 16;
   */
  effective?: Vitalspanel_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Vitalspanel.ReferenceRange reference_range = 27;
   */
  referenceRange: Vitalspanel_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Vitalspanel.Related related = 28;
   */
  related: Vitalspanel_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.proto.Vitalspanel.Component component = 29;
   */
  component: Vitalspanel_Component[] = [];

  constructor(data?: PartialMessage<Vitalspanel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: Vitalspanel_CodeableConceptForCode },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: Vitalspanel_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: Vitalspanel_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: Vitalspanel_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: Vitalspanel_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel {
    return new Vitalspanel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel {
    return new Vitalspanel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel {
    return new Vitalspanel().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel | PlainMessage<Vitalspanel> | undefined, b: Vitalspanel | PlainMessage<Vitalspanel> | undefined): boolean {
    return proto3.util.equals(Vitalspanel, a, b);
  }
}

/**
 * Vital Signs Panel
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel.CodeableConceptForCode
 */
export class Vitalspanel_CodeableConceptForCode extends Message<Vitalspanel_CodeableConceptForCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.stu3.proto.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.stu3.proto.CodingWithFixedCode body_weight_code = 5 [json_name = "BodyWeightCode"];
   */
  bodyWeightCode: CodingWithFixedCode[] = [];

  constructor(data?: PartialMessage<Vitalspanel_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "body_weight_code", jsonName: "BodyWeightCode", kind: "message", T: CodingWithFixedCode, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel_CodeableConceptForCode {
    return new Vitalspanel_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel_CodeableConceptForCode {
    return new Vitalspanel_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel_CodeableConceptForCode {
    return new Vitalspanel_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel_CodeableConceptForCode | PlainMessage<Vitalspanel_CodeableConceptForCode> | undefined, b: Vitalspanel_CodeableConceptForCode | PlainMessage<Vitalspanel_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(Vitalspanel_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel.Effective
 */
export class Vitalspanel_Effective extends Message<Vitalspanel_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Vitalspanel.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Vitalspanel_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel_Effective {
    return new Vitalspanel_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel_Effective {
    return new Vitalspanel_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel_Effective {
    return new Vitalspanel_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel_Effective | PlainMessage<Vitalspanel_Effective> | undefined, b: Vitalspanel_Effective | PlainMessage<Vitalspanel_Effective> | undefined): boolean {
    return proto3.util.equals(Vitalspanel_Effective, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel.ReferenceRange
 */
export class Vitalspanel_ReferenceRange extends Message<Vitalspanel_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<Vitalspanel_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel_ReferenceRange {
    return new Vitalspanel_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel_ReferenceRange {
    return new Vitalspanel_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel_ReferenceRange {
    return new Vitalspanel_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel_ReferenceRange | PlainMessage<Vitalspanel_ReferenceRange> | undefined, b: Vitalspanel_ReferenceRange | PlainMessage<Vitalspanel_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(Vitalspanel_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting vital signs panel components
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel.Related
 */
export class Vitalspanel_Related extends Message<Vitalspanel_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<Vitalspanel_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel_Related {
    return new Vitalspanel_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel_Related {
    return new Vitalspanel_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel_Related {
    return new Vitalspanel_Related().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel_Related | PlainMessage<Vitalspanel_Related> | undefined, b: Vitalspanel_Related | PlainMessage<Vitalspanel_Related> | undefined): boolean {
    return proto3.util.equals(Vitalspanel_Related, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel.Component
 */
export class Vitalspanel_Component extends Message<Vitalspanel_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.proto.Vitalspanel.Component.Value value = 5;
   */
  value?: Vitalspanel_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.proto.Vitalspanel.ReferenceRange reference_range = 8;
   */
  referenceRange: Vitalspanel_ReferenceRange[] = [];

  constructor(data?: PartialMessage<Vitalspanel_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Vitalspanel_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: Vitalspanel_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel_Component {
    return new Vitalspanel_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel_Component {
    return new Vitalspanel_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel_Component {
    return new Vitalspanel_Component().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel_Component | PlainMessage<Vitalspanel_Component> | undefined, b: Vitalspanel_Component | PlainMessage<Vitalspanel_Component> | undefined): boolean {
    return proto3.util.equals(Vitalspanel_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.stu3.proto.Vitalspanel.Component.Value
 */
export class Vitalspanel_Component_Value extends Message<Vitalspanel_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.proto.Vitalspanel.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Vitalspanel_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.proto.Vitalspanel.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Vitalspanel_Component_Value {
    return new Vitalspanel_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Vitalspanel_Component_Value {
    return new Vitalspanel_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Vitalspanel_Component_Value {
    return new Vitalspanel_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: Vitalspanel_Component_Value | PlainMessage<Vitalspanel_Component_Value> | undefined, b: Vitalspanel_Component_Value | PlainMessage<Vitalspanel_Component_Value> | undefined): boolean {
    return proto3.util.equals(Vitalspanel_Component_Value, a, b);
  }
}

