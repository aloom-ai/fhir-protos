//    Copyright 2018 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/stu3/uscore.proto (package google.fhir.stu3.uscore, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, CodeableConcept, Coding, ContactPoint, Date, DateTime, DaysOfWeekCode, Decimal, Dosage, Duration, Extension, HumanName, Id, Identifier, Instant, Integer, LanguageCode, Meta, Period, PositiveInt, Quantity, Range, Ratio, Reference, SampledData, SimpleQuantity, String, Time, Timing, Uri } from "./datatypes_pb.js";
import { Narrative } from "./metadatatypes_pb.js";
import { ContainedResource } from "./resources_pb.js";
import { AdministrativeGenderCode, AllergyIntoleranceCategoryCode, AllergyIntoleranceClinicalStatusCode, AllergyIntoleranceCriticalityCode, AllergyIntoleranceSeverityCode, AllergyIntoleranceTypeCode, AllergyIntoleranceVerificationStatusCode, CarePlanActivityStatusCode, CarePlanIntentCode, CarePlanStatusCode, CareTeamStatusCode, CompositionStatusCode, ConditionClinicalStatusCodesCode, ConditionVerificationStatusCode, DiagnosticReportStatusCode, DocumentReferenceStatusCode, DocumentRelationshipTypeCode, EncounterLocationStatusCode, EncounterStatusCode, EventStatusCode, FHIRDeviceStatusCode, GoalStatusCode, ImmunizationStatusCodesCode, LinkTypeCode, LocationModeCode, LocationStatusCode, MedicationRequestIntentCode, MedicationRequestPriorityCode, MedicationRequestStatusCode, MedicationStatementStatusCode, MedicationStatementTakenCode, MedicationStatusCode, ObservationRelationshipTypeCode, ObservationStatusCode, ResourceTypeCode, UDIEntryTypeCode } from "./codes_pb.js";
import { UsCoreBirthSexCode } from "./uscore_codes_pb.js";

/**
 * Auto-generated from StructureDefinition for US Core Allergies Profile.
 * US Core Allergies Profile.
 * See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-allergyintolerance
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreAllergyintolerance
 */
export class UsCoreAllergyintolerance extends Message<UsCoreAllergyintolerance> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this item
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | inactive | resolved
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceClinicalStatusCode clinical_status = 10;
   */
  clinicalStatus?: AllergyIntoleranceClinicalStatusCode;

  /**
   * unconfirmed | confirmed | refuted | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceVerificationStatusCode verification_status = 11;
   */
  verificationStatus?: AllergyIntoleranceVerificationStatusCode;

  /**
   * allergy | intolerance - Underlying mechanism (if known)
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceTypeCode type = 12;
   */
  type?: AllergyIntoleranceTypeCode;

  /**
   * food | medication | environment | biologic
   *
   * @generated from field: repeated google.fhir.stu3.proto.AllergyIntoleranceCategoryCode category = 13;
   */
  category: AllergyIntoleranceCategoryCode[] = [];

  /**
   * low | high | unable-to-assess
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceCriticalityCode criticality = 14;
   */
  criticality?: AllergyIntoleranceCriticalityCode;

  /**
   * Code that identifies the allergy or intolerance
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Who the sensitivity is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 16;
   */
  patient?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset onset = 17;
   */
  onset?: UsCoreAllergyintolerance_Onset;

  /**
   * Date record was believed accurate
   *
   * @generated from field: google.fhir.stu3.proto.DateTime asserted_date = 18;
   */
  assertedDate?: DateTime;

  /**
   * Who recorded the sensitivity
   *
   * @generated from field: google.fhir.stu3.proto.Reference recorder = 19;
   */
  recorder?: Reference;

  /**
   * Source of the information about the allergy
   *
   * @generated from field: google.fhir.stu3.proto.Reference asserter = 20;
   */
  asserter?: Reference;

  /**
   * Date(/time) of last known occurrence of a reaction
   *
   * @generated from field: google.fhir.stu3.proto.DateTime last_occurrence = 21;
   */
  lastOccurrence?: DateTime;

  /**
   * Additional text not captured in other fields
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 22;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction reaction = 23;
   */
  reaction: UsCoreAllergyintolerance_Reaction[] = [];

  constructor(data?: PartialMessage<UsCoreAllergyintolerance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreAllergyintolerance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "clinical_status", kind: "message", T: AllergyIntoleranceClinicalStatusCode },
    { no: 11, name: "verification_status", kind: "message", T: AllergyIntoleranceVerificationStatusCode },
    { no: 12, name: "type", kind: "message", T: AllergyIntoleranceTypeCode },
    { no: 13, name: "category", kind: "message", T: AllergyIntoleranceCategoryCode, repeated: true },
    { no: 14, name: "criticality", kind: "message", T: AllergyIntoleranceCriticalityCode },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "patient", kind: "message", T: Reference },
    { no: 17, name: "onset", kind: "message", T: UsCoreAllergyintolerance_Onset },
    { no: 18, name: "asserted_date", kind: "message", T: DateTime },
    { no: 19, name: "recorder", kind: "message", T: Reference },
    { no: 20, name: "asserter", kind: "message", T: Reference },
    { no: 21, name: "last_occurrence", kind: "message", T: DateTime },
    { no: 22, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 23, name: "reaction", kind: "message", T: UsCoreAllergyintolerance_Reaction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreAllergyintolerance {
    return new UsCoreAllergyintolerance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreAllergyintolerance {
    return new UsCoreAllergyintolerance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreAllergyintolerance {
    return new UsCoreAllergyintolerance().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreAllergyintolerance | PlainMessage<UsCoreAllergyintolerance> | undefined, b: UsCoreAllergyintolerance | PlainMessage<UsCoreAllergyintolerance> | undefined): boolean {
    return proto3.util.equals(UsCoreAllergyintolerance, a, b);
  }
}

/**
 * When allergy or intolerance was identified
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset
 */
export class UsCoreAllergyintolerance_Onset extends Message<UsCoreAllergyintolerance_Onset> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset.onset
   */
  onset: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreAllergyintolerance_Onset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreAllergyintolerance.Onset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "onset" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "onset" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "onset" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "onset" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "onset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreAllergyintolerance_Onset {
    return new UsCoreAllergyintolerance_Onset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreAllergyintolerance_Onset {
    return new UsCoreAllergyintolerance_Onset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreAllergyintolerance_Onset {
    return new UsCoreAllergyintolerance_Onset().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreAllergyintolerance_Onset | PlainMessage<UsCoreAllergyintolerance_Onset> | undefined, b: UsCoreAllergyintolerance_Onset | PlainMessage<UsCoreAllergyintolerance_Onset> | undefined): boolean {
    return proto3.util.equals(UsCoreAllergyintolerance_Onset, a, b);
  }
}

/**
 * Adverse Reaction Events linked to exposure to substance
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction
 */
export class UsCoreAllergyintolerance_Reaction extends Message<UsCoreAllergyintolerance_Reaction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specific substance or pharmaceutical product considered to be responsible
   * for event
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept substance = 4;
   */
  substance?: CodeableConcept;

  /**
   * Clinical symptoms/signs associated with the Event
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept manifestation = 5;
   */
  manifestation: CodeableConcept[] = [];

  /**
   * Description of the event as a whole
   *
   * @generated from field: google.fhir.stu3.proto.String description = 6;
   */
  description?: String;

  /**
   * Date(/time) when manifestations showed
   *
   * @generated from field: google.fhir.stu3.proto.DateTime onset = 7;
   */
  onset?: DateTime;

  /**
   * mild | moderate | severe (of event as a whole)
   *
   * @generated from field: google.fhir.stu3.proto.AllergyIntoleranceSeverityCode severity = 8;
   */
  severity?: AllergyIntoleranceSeverityCode;

  /**
   * How the subject was exposed to the substance
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept exposure_route = 9;
   */
  exposureRoute?: CodeableConcept;

  /**
   * Text about event not captured in other fields
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 10;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<UsCoreAllergyintolerance_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreAllergyintolerance.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "substance", kind: "message", T: CodeableConcept },
    { no: 5, name: "manifestation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "onset", kind: "message", T: DateTime },
    { no: 8, name: "severity", kind: "message", T: AllergyIntoleranceSeverityCode },
    { no: 9, name: "exposure_route", kind: "message", T: CodeableConcept },
    { no: 10, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreAllergyintolerance_Reaction {
    return new UsCoreAllergyintolerance_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreAllergyintolerance_Reaction {
    return new UsCoreAllergyintolerance_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreAllergyintolerance_Reaction {
    return new UsCoreAllergyintolerance_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreAllergyintolerance_Reaction | PlainMessage<UsCoreAllergyintolerance_Reaction> | undefined, b: UsCoreAllergyintolerance_Reaction | PlainMessage<UsCoreAllergyintolerance_Reaction> | undefined): boolean {
    return proto3.util.equals(UsCoreAllergyintolerance_Reaction, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Birth Sex Extension.
 * Extension.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex
 *
 * @generated from message google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension
 */
export class PatientUSCoreBirthSexExtension extends Message<PatientUSCoreBirthSexExtension> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.stu3.uscore.UsCoreBirthSexCode value_code = 3;
   */
  valueCode?: UsCoreBirthSexCode;

  constructor(data?: PartialMessage<PatientUSCoreBirthSexExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.PatientUSCoreBirthSexExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value_code", kind: "message", T: UsCoreBirthSexCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreBirthSexExtension {
    return new PatientUSCoreBirthSexExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreBirthSexExtension {
    return new PatientUSCoreBirthSexExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreBirthSexExtension {
    return new PatientUSCoreBirthSexExtension().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreBirthSexExtension | PlainMessage<PatientUSCoreBirthSexExtension> | undefined, b: PatientUSCoreBirthSexExtension | PlainMessage<PatientUSCoreBirthSexExtension> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreBirthSexExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core CarePlan Profile.
 * US Core CarePlan Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-careplan
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareplan
 */
export class UsCoreCareplan extends Message<UsCoreCareplan> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * Fulfills care plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * CarePlan replaced by this CarePlan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference replaces = 12;
   */
  replaces: Reference[] = [];

  /**
   * Part of referenced CarePlan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 13;
   */
  partOf: Reference[] = [];

  /**
   * draft | active | suspended | completed | entered-in-error | cancelled |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.CarePlanStatusCode status = 14;
   */
  status?: CarePlanStatusCode;

  /**
   * proposal | plan | order | option
   *
   * @generated from field: google.fhir.stu3.proto.CarePlanIntentCode intent = 15;
   */
  intent?: CarePlanIntentCode;

  /**
   * Type of plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 16;
   */
  category: CodeableConcept[] = [];

  /**
   * Human-friendly name for the CarePlan
   *
   * @generated from field: google.fhir.stu3.proto.String title = 17;
   */
  title?: String;

  /**
   * Summary of nature of plan
   *
   * @generated from field: google.fhir.stu3.proto.String description = 18;
   */
  description?: String;

  /**
   * Who care plan is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Created in context of
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 20;
   */
  context?: Reference;

  /**
   * Time period plan covers
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 21;
   */
  period?: Period;

  /**
   * Who is responsible for contents of the plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 22;
   */
  author: Reference[] = [];

  /**
   * Who's involved in plan?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference care_team = 23;
   */
  careTeam: Reference[] = [];

  /**
   * Health issues this plan addresses
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference addresses = 24;
   */
  addresses: Reference[] = [];

  /**
   * Information considered as part of plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_info = 25;
   */
  supportingInfo: Reference[] = [];

  /**
   * Desired outcome of plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference goal = 26;
   */
  goal: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreCareplan.Activity activity = 27;
   */
  activity: UsCoreCareplan_Activity[] = [];

  /**
   * Comments about the plan
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 28;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<UsCoreCareplan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareplan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "status", kind: "message", T: CarePlanStatusCode },
    { no: 15, name: "intent", kind: "message", T: CarePlanIntentCode },
    { no: 16, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "title", kind: "message", T: String },
    { no: 18, name: "description", kind: "message", T: String },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "context", kind: "message", T: Reference },
    { no: 21, name: "period", kind: "message", T: Period },
    { no: 22, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "care_team", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "activity", kind: "message", T: UsCoreCareplan_Activity, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareplan {
    return new UsCoreCareplan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareplan {
    return new UsCoreCareplan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareplan {
    return new UsCoreCareplan().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareplan | PlainMessage<UsCoreCareplan> | undefined, b: UsCoreCareplan | PlainMessage<UsCoreCareplan> | undefined): boolean {
    return proto3.util.equals(UsCoreCareplan, a, b);
  }
}

/**
 * Action to occur as part of plan
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareplan.Activity
 */
export class UsCoreCareplan_Activity extends Message<UsCoreCareplan_Activity> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Results of the activity
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept outcome_codeable_concept = 4;
   */
  outcomeCodeableConcept: CodeableConcept[] = [];

  /**
   * Appointment, Encounter, Procedure, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference outcome_reference = 5;
   */
  outcomeReference: Reference[] = [];

  /**
   * Comments about the activity status/progress
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation progress = 6;
   */
  progress: Annotation[] = [];

  /**
   * Activity details defined in specific resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference reference = 7;
   */
  reference?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail detail = 8;
   */
  detail?: UsCoreCareplan_Activity_Detail;

  constructor(data?: PartialMessage<UsCoreCareplan_Activity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareplan.Activity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "outcome_codeable_concept", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "progress", kind: "message", T: Annotation, repeated: true },
    { no: 7, name: "reference", kind: "message", T: Reference },
    { no: 8, name: "detail", kind: "message", T: UsCoreCareplan_Activity_Detail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareplan_Activity {
    return new UsCoreCareplan_Activity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity {
    return new UsCoreCareplan_Activity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity {
    return new UsCoreCareplan_Activity().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareplan_Activity | PlainMessage<UsCoreCareplan_Activity> | undefined, b: UsCoreCareplan_Activity | PlainMessage<UsCoreCareplan_Activity> | undefined): boolean {
    return proto3.util.equals(UsCoreCareplan_Activity, a, b);
  }
}

/**
 * In-line definition of activity
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail
 */
export class UsCoreCareplan_Activity_Detail extends Message<UsCoreCareplan_Activity_Detail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * diet | drug | encounter | observation | procedure | supply | other
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Protocol or definition
   *
   * @generated from field: google.fhir.stu3.proto.Reference definition = 5;
   */
  definition?: Reference;

  /**
   * Detail type of activity
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  /**
   * Why activity should be done or why activity was prohibited
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 7;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition triggering need for activity
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 8;
   */
  reasonReference: Reference[] = [];

  /**
   * Goals this activity relates to
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference goal = 9;
   */
  goal: Reference[] = [];

  /**
   * not-started | scheduled | in-progress | on-hold | completed | cancelled
   * | unknown
   *
   * @generated from field: google.fhir.stu3.proto.CarePlanActivityStatusCode status = 10;
   */
  status?: CarePlanActivityStatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.stu3.proto.String status_reason = 11;
   */
  statusReason?: String;

  /**
   * Do NOT do
   *
   * @generated from field: google.fhir.stu3.proto.Boolean prohibited = 12;
   */
  prohibited?: Boolean;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled scheduled = 13;
   */
  scheduled?: UsCoreCareplan_Activity_Detail_Scheduled;

  /**
   * Where it should happen
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 14;
   */
  location?: Reference;

  /**
   * Who will be responsible?
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 15;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product product = 16;
   */
  product?: UsCoreCareplan_Activity_Detail_Product;

  /**
   * How to consume/day?
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity daily_amount = 17;
   */
  dailyAmount?: SimpleQuantity;

  /**
   * How much to administer/supply/consume
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 18;
   */
  quantity?: SimpleQuantity;

  /**
   * Extra info describing activity to perform
   *
   * @generated from field: google.fhir.stu3.proto.String description = 19;
   */
  description?: String;

  constructor(data?: PartialMessage<UsCoreCareplan_Activity_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "definition", kind: "message", T: Reference },
    { no: 6, name: "code", kind: "message", T: CodeableConcept },
    { no: 7, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 9, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "status", kind: "message", T: CarePlanActivityStatusCode },
    { no: 11, name: "status_reason", kind: "message", T: String },
    { no: 12, name: "prohibited", kind: "message", T: Boolean },
    { no: 13, name: "scheduled", kind: "message", T: UsCoreCareplan_Activity_Detail_Scheduled },
    { no: 14, name: "location", kind: "message", T: Reference },
    { no: 15, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "product", kind: "message", T: UsCoreCareplan_Activity_Detail_Product },
    { no: 17, name: "daily_amount", kind: "message", T: SimpleQuantity },
    { no: 18, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 19, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareplan_Activity_Detail {
    return new UsCoreCareplan_Activity_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity_Detail {
    return new UsCoreCareplan_Activity_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity_Detail {
    return new UsCoreCareplan_Activity_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareplan_Activity_Detail | PlainMessage<UsCoreCareplan_Activity_Detail> | undefined, b: UsCoreCareplan_Activity_Detail | PlainMessage<UsCoreCareplan_Activity_Detail> | undefined): boolean {
    return proto3.util.equals(UsCoreCareplan_Activity_Detail, a, b);
  }
}

/**
 * When activity is to occur
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled
 */
export class UsCoreCareplan_Activity_Detail_Scheduled extends Message<UsCoreCareplan_Activity_Detail_Scheduled> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled.scheduled
   */
  scheduled: {
    /**
     * @generated from field: google.fhir.stu3.proto.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreCareplan_Activity_Detail_Scheduled>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Scheduled";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "scheduled" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "scheduled" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "scheduled" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareplan_Activity_Detail_Scheduled {
    return new UsCoreCareplan_Activity_Detail_Scheduled().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity_Detail_Scheduled {
    return new UsCoreCareplan_Activity_Detail_Scheduled().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity_Detail_Scheduled {
    return new UsCoreCareplan_Activity_Detail_Scheduled().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareplan_Activity_Detail_Scheduled | PlainMessage<UsCoreCareplan_Activity_Detail_Scheduled> | undefined, b: UsCoreCareplan_Activity_Detail_Scheduled | PlainMessage<UsCoreCareplan_Activity_Detail_Scheduled> | undefined): boolean {
    return proto3.util.equals(UsCoreCareplan_Activity_Detail_Scheduled, a, b);
  }
}

/**
 * What is to be administered/supplied
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product
 */
export class UsCoreCareplan_Activity_Detail_Product extends Message<UsCoreCareplan_Activity_Detail_Product> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product.product
   */
  product: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreCareplan_Activity_Detail_Product>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareplan.Activity.Detail.Product";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "product" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "product" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareplan_Activity_Detail_Product {
    return new UsCoreCareplan_Activity_Detail_Product().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity_Detail_Product {
    return new UsCoreCareplan_Activity_Detail_Product().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareplan_Activity_Detail_Product {
    return new UsCoreCareplan_Activity_Detail_Product().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareplan_Activity_Detail_Product | PlainMessage<UsCoreCareplan_Activity_Detail_Product> | undefined, b: UsCoreCareplan_Activity_Detail_Product | PlainMessage<UsCoreCareplan_Activity_Detail_Product> | undefined): boolean {
    return proto3.util.equals(UsCoreCareplan_Activity_Detail_Product, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core CareTeam Profile.
 * US Core CareTeam Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-careteam
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareteam
 */
export class UsCoreCareteam extends Message<UsCoreCareteam> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this team
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * proposed | active | suspended | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.CareTeamStatusCode status = 10;
   */
  status?: CareTeamStatusCode;

  /**
   * Type of team
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category: CodeableConcept[] = [];

  /**
   * Name of the team, such as crisis assessment team
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * Who care team is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Encounter or episode associated with CareTeam
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 14;
   */
  context?: Reference;

  /**
   * Time period team covers
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 15;
   */
  period?: Period;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreCareteam.Participant participant = 16;
   */
  participant: UsCoreCareteam_Participant[] = [];

  /**
   * Why the care team exists
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 17;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why the care team exists
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 18;
   */
  reasonReference: Reference[] = [];

  /**
   * Organization responsible for the care team
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference managing_organization = 19;
   */
  managingOrganization: Reference[] = [];

  /**
   * Comments made about the CareTeam
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 20;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<UsCoreCareteam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareteam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: CareTeamStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "context", kind: "message", T: Reference },
    { no: 15, name: "period", kind: "message", T: Period },
    { no: 16, name: "participant", kind: "message", T: UsCoreCareteam_Participant, repeated: true },
    { no: 17, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "managing_organization", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareteam {
    return new UsCoreCareteam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareteam {
    return new UsCoreCareteam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareteam {
    return new UsCoreCareteam().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareteam | PlainMessage<UsCoreCareteam> | undefined, b: UsCoreCareteam | PlainMessage<UsCoreCareteam> | undefined): boolean {
    return proto3.util.equals(UsCoreCareteam, a, b);
  }
}

/**
 * Members of the team
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCareteam.Participant
 */
export class UsCoreCareteam_Participant extends Message<UsCoreCareteam_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of involvement
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Who is involved
   *
   * @generated from field: google.fhir.stu3.proto.Reference member = 5;
   */
  member?: Reference;

  /**
   * Organization of the practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  /**
   * Time period of participant
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<UsCoreCareteam_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCareteam.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "member", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCareteam_Participant {
    return new UsCoreCareteam_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCareteam_Participant {
    return new UsCoreCareteam_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCareteam_Participant {
    return new UsCoreCareteam_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCareteam_Participant | PlainMessage<UsCoreCareteam_Participant> | undefined, b: UsCoreCareteam_Participant | PlainMessage<UsCoreCareteam_Participant> | undefined): boolean {
    return proto3.util.equals(UsCoreCareteam_Participant, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Condition Profile.
 * US Core Condition Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCondition
 */
export class UsCoreCondition extends Message<UsCoreCondition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this condition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | recurrence | inactive | remission | resolved
   *
   * @generated from field: google.fhir.stu3.proto.ConditionClinicalStatusCodesCode clinical_status = 10;
   */
  clinicalStatus?: ConditionClinicalStatusCodesCode;

  /**
   * provisional | differential | confirmed | refuted | entered-in-error |
   * unknown
   *
   * @generated from field: google.fhir.stu3.proto.ConditionVerificationStatusCode verification_status = 11;
   */
  verificationStatus?: ConditionVerificationStatusCode;

  /**
   * problem-list-item | encounter-diagnosis
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Subjective severity of condition
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept severity = 13;
   */
  severity?: CodeableConcept;

  /**
   * Identification of the condition, problem or diagnosis
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * Anatomical location, if relevant
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 15;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * Who has the condition?
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * Encounter or episode when condition first asserted
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 17;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreCondition.Onset onset = 18;
   */
  onset?: UsCoreCondition_Onset;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreCondition.Abatement abatement = 19;
   */
  abatement?: UsCoreCondition_Abatement;

  /**
   * Date record was believed accurate
   *
   * @generated from field: google.fhir.stu3.proto.DateTime asserted_date = 20;
   */
  assertedDate?: DateTime;

  /**
   * Person who asserts this condition
   *
   * @generated from field: google.fhir.stu3.proto.Reference asserter = 21;
   */
  asserter?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreCondition.Stage stage = 22;
   */
  stage?: UsCoreCondition_Stage;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreCondition.Evidence evidence = 23;
   */
  evidence: UsCoreCondition_Evidence[] = [];

  /**
   * Additional information about the Condition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 24;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<UsCoreCondition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCondition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "clinical_status", kind: "message", T: ConditionClinicalStatusCodesCode },
    { no: 11, name: "verification_status", kind: "message", T: ConditionVerificationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "severity", kind: "message", T: CodeableConcept },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "context", kind: "message", T: Reference },
    { no: 18, name: "onset", kind: "message", T: UsCoreCondition_Onset },
    { no: 19, name: "abatement", kind: "message", T: UsCoreCondition_Abatement },
    { no: 20, name: "asserted_date", kind: "message", T: DateTime },
    { no: 21, name: "asserter", kind: "message", T: Reference },
    { no: 22, name: "stage", kind: "message", T: UsCoreCondition_Stage },
    { no: 23, name: "evidence", kind: "message", T: UsCoreCondition_Evidence, repeated: true },
    { no: 24, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition {
    return new UsCoreCondition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition {
    return new UsCoreCondition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition {
    return new UsCoreCondition().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition | PlainMessage<UsCoreCondition> | undefined, b: UsCoreCondition | PlainMessage<UsCoreCondition> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition, a, b);
  }
}

/**
 * Estimated or actual date,  date-time, or age
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCondition.Onset
 */
export class UsCoreCondition_Onset extends Message<UsCoreCondition_Onset> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreCondition.Onset.onset
   */
  onset: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreCondition_Onset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCondition.Onset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "onset" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "onset" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "onset" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "onset" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "onset" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_Onset {
    return new UsCoreCondition_Onset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_Onset {
    return new UsCoreCondition_Onset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_Onset {
    return new UsCoreCondition_Onset().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_Onset | PlainMessage<UsCoreCondition_Onset> | undefined, b: UsCoreCondition_Onset | PlainMessage<UsCoreCondition_Onset> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_Onset, a, b);
  }
}

/**
 * If/when in resolution/remission
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCondition.Abatement
 */
export class UsCoreCondition_Abatement extends Message<UsCoreCondition_Abatement> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreCondition.Abatement.abatement
   */
  abatement: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 3;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 4;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 6 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreCondition_Abatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCondition.Abatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "abatement" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "abatement" },
    { no: 3, name: "boolean", kind: "message", T: Boolean, oneof: "abatement" },
    { no: 4, name: "period", kind: "message", T: Period, oneof: "abatement" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "abatement" },
    { no: 6, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "abatement" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_Abatement {
    return new UsCoreCondition_Abatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_Abatement {
    return new UsCoreCondition_Abatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_Abatement {
    return new UsCoreCondition_Abatement().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_Abatement | PlainMessage<UsCoreCondition_Abatement> | undefined, b: UsCoreCondition_Abatement | PlainMessage<UsCoreCondition_Abatement> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_Abatement, a, b);
  }
}

/**
 * Stage/grade, usually assessed formally
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCondition.Stage
 */
export class UsCoreCondition_Stage extends Message<UsCoreCondition_Stage> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Simple summary (disease specific)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept summary = 4;
   */
  summary?: CodeableConcept;

  /**
   * Formal record of assessment
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference assessment = 5;
   */
  assessment: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreCondition_Stage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCondition.Stage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "summary", kind: "message", T: CodeableConcept },
    { no: 5, name: "assessment", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_Stage {
    return new UsCoreCondition_Stage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_Stage {
    return new UsCoreCondition_Stage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_Stage {
    return new UsCoreCondition_Stage().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_Stage | PlainMessage<UsCoreCondition_Stage> | undefined, b: UsCoreCondition_Stage | PlainMessage<UsCoreCondition_Stage> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_Stage, a, b);
  }
}

/**
 * Supporting evidence
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreCondition.Evidence
 */
export class UsCoreCondition_Evidence extends Message<UsCoreCondition_Evidence> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Manifestation/symptom
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code: CodeableConcept[] = [];

  /**
   * Supporting information found elsewhere
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detail = 5;
   */
  detail: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreCondition_Evidence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreCondition.Evidence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "detail", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_Evidence {
    return new UsCoreCondition_Evidence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_Evidence {
    return new UsCoreCondition_Evidence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_Evidence {
    return new UsCoreCondition_Evidence().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_Evidence | PlainMessage<UsCoreCondition_Evidence> | undefined, b: UsCoreCondition_Evidence | PlainMessage<UsCoreCondition_Evidence> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_Evidence, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Implanted Device Profile.
 * US Core Implanted Device Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-device
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDevice
 */
export class UsCoreDevice extends Message<UsCoreDevice> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Instance identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreDevice.Udi udi = 10;
   */
  udi?: UsCoreDevice_Udi;

  /**
   * active | inactive | entered-in-error | unknown
   *
   * @generated from field: google.fhir.stu3.proto.FHIRDeviceStatusCode status = 11;
   */
  status?: FHIRDeviceStatusCode;

  /**
   * What kind of device this is
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * Lot number of manufacture
   *
   * @generated from field: google.fhir.stu3.proto.String lot_number = 13;
   */
  lotNumber?: String;

  /**
   * Name of device manufacturer
   *
   * @generated from field: google.fhir.stu3.proto.String manufacturer = 14;
   */
  manufacturer?: String;

  /**
   * Date when the device was made
   *
   * @generated from field: google.fhir.stu3.proto.DateTime manufacture_date = 15;
   */
  manufactureDate?: DateTime;

  /**
   * Date and time of expiry of this device (if applicable)
   *
   * @generated from field: google.fhir.stu3.proto.DateTime expiration_date = 16;
   */
  expirationDate?: DateTime;

  /**
   * Model id assigned by the manufacturer
   *
   * @generated from field: google.fhir.stu3.proto.String model = 17;
   */
  model?: String;

  /**
   * Version number (i.e. software)
   *
   * @generated from field: google.fhir.stu3.proto.String version = 18;
   */
  version?: String;

  /**
   * Patient to whom Device is affixed
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 19;
   */
  patient?: Reference;

  /**
   * Organization responsible for device
   *
   * @generated from field: google.fhir.stu3.proto.Reference owner = 20;
   */
  owner?: Reference;

  /**
   * Details for human/organization for support
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint contact = 21;
   */
  contact: ContactPoint[] = [];

  /**
   * Where the resource is found
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 22;
   */
  location?: Reference;

  /**
   * Network address to contact device
   *
   * @generated from field: google.fhir.stu3.proto.Uri url = 23;
   */
  url?: Uri;

  /**
   * Device notes and comments
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 24;
   */
  note: Annotation[] = [];

  /**
   * Safety Characteristics of Device
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept safety = 25;
   */
  safety: CodeableConcept[] = [];

  constructor(data?: PartialMessage<UsCoreDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "udi", kind: "message", T: UsCoreDevice_Udi },
    { no: 11, name: "status", kind: "message", T: FHIRDeviceStatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept },
    { no: 13, name: "lot_number", kind: "message", T: String },
    { no: 14, name: "manufacturer", kind: "message", T: String },
    { no: 15, name: "manufacture_date", kind: "message", T: DateTime },
    { no: 16, name: "expiration_date", kind: "message", T: DateTime },
    { no: 17, name: "model", kind: "message", T: String },
    { no: 18, name: "version", kind: "message", T: String },
    { no: 19, name: "patient", kind: "message", T: Reference },
    { no: 20, name: "owner", kind: "message", T: Reference },
    { no: 21, name: "contact", kind: "message", T: ContactPoint, repeated: true },
    { no: 22, name: "location", kind: "message", T: Reference },
    { no: 23, name: "url", kind: "message", T: Uri },
    { no: 24, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 25, name: "safety", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDevice {
    return new UsCoreDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDevice {
    return new UsCoreDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDevice {
    return new UsCoreDevice().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDevice | PlainMessage<UsCoreDevice> | undefined, b: UsCoreDevice | PlainMessage<UsCoreDevice> | undefined): boolean {
    return proto3.util.equals(UsCoreDevice, a, b);
  }
}

/**
 * Unique Device Identifier (UDI) Barcode string
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDevice.Udi
 */
export class UsCoreDevice_Udi extends Message<UsCoreDevice_Udi> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Mandatory fixed portion of UDI
   *
   * @generated from field: google.fhir.stu3.proto.String device_identifier = 4;
   */
  deviceIdentifier?: String;

  /**
   * Device Name as appears on UDI label
   *
   * @generated from field: google.fhir.stu3.proto.String name = 5;
   */
  name?: String;

  /**
   * Regional UDI authority
   *
   * @generated from field: google.fhir.stu3.proto.Uri jurisdiction = 6;
   */
  jurisdiction?: Uri;

  /**
   * UDI Human Readable Barcode String
   *
   * @generated from field: google.fhir.stu3.proto.String carrier_hrf = 7 [json_name = "carrierHRF"];
   */
  carrierHrf?: String;

  /**
   * UDI Machine Readable Barcode String
   *
   * @generated from field: google.fhir.stu3.proto.Base64Binary carrier_aidc = 8 [json_name = "carrierAIDC"];
   */
  carrierAidc?: Base64Binary;

  /**
   * UDI Issuing Organization
   *
   * @generated from field: google.fhir.stu3.proto.Uri issuer = 9;
   */
  issuer?: Uri;

  /**
   * barcode | rfid | manual +
   *
   * @generated from field: google.fhir.stu3.proto.UDIEntryTypeCode entry_type = 10;
   */
  entryType?: UDIEntryTypeCode;

  constructor(data?: PartialMessage<UsCoreDevice_Udi>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDevice.Udi";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "device_identifier", kind: "message", T: String },
    { no: 5, name: "name", kind: "message", T: String },
    { no: 6, name: "jurisdiction", kind: "message", T: Uri },
    { no: 7, name: "carrier_hrf", jsonName: "carrierHRF", kind: "message", T: String },
    { no: 8, name: "carrier_aidc", jsonName: "carrierAIDC", kind: "message", T: Base64Binary },
    { no: 9, name: "issuer", kind: "message", T: Uri },
    { no: 10, name: "entry_type", kind: "message", T: UDIEntryTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDevice_Udi {
    return new UsCoreDevice_Udi().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDevice_Udi {
    return new UsCoreDevice_Udi().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDevice_Udi {
    return new UsCoreDevice_Udi().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDevice_Udi | PlainMessage<UsCoreDevice_Udi> | undefined, b: UsCoreDevice_Udi | PlainMessage<UsCoreDevice_Udi> | undefined): boolean {
    return proto3.util.equals(UsCoreDevice_Udi, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Diagnostic Report
 * Profile. US Core Diagnostic Report Profile. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDiagnosticreport
 */
export class UsCoreDiagnosticreport extends Message<UsCoreDiagnosticreport> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | partial | preliminary | final +
   *
   * @generated from field: google.fhir.stu3.proto.DiagnosticReportStatusCode status = 11;
   */
  status?: DiagnosticReportStatusCode;

  /**
   * Service category
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category?: CodeableConcept;

  /**
   * US Core Laboratory Report Order Code
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective effective = 16;
   */
  effective?: UsCoreDiagnosticreport_Effective;

  /**
   * DateTime this version was released
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer performer = 18;
   */
  performer: UsCoreDiagnosticreport_Performer[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference specimen = 19;
   */
  specimen: Reference[] = [];

  /**
   * Observations - simple, or complex nested groups
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference result = 20;
   */
  result: Reference[] = [];

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference imaging_study = 21;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image image = 22;
   */
  image: UsCoreDiagnosticreport_Image[] = [];

  /**
   * Clinical Interpretation of test results
   *
   * @generated from field: google.fhir.stu3.proto.String conclusion = 23;
   */
  conclusion?: String;

  /**
   * Codes for the conclusion
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept coded_diagnosis = 24;
   */
  codedDiagnosis: CodeableConcept[] = [];

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment presented_form = 25;
   */
  presentedForm: Attachment[] = [];

  constructor(data?: PartialMessage<UsCoreDiagnosticreport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDiagnosticreport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: DiagnosticReportStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: UsCoreDiagnosticreport_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: UsCoreDiagnosticreport_Performer, repeated: true },
    { no: 19, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "result", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "image", kind: "message", T: UsCoreDiagnosticreport_Image, repeated: true },
    { no: 23, name: "conclusion", kind: "message", T: String },
    { no: 24, name: "coded_diagnosis", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "presented_form", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDiagnosticreport {
    return new UsCoreDiagnosticreport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport {
    return new UsCoreDiagnosticreport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport {
    return new UsCoreDiagnosticreport().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDiagnosticreport | PlainMessage<UsCoreDiagnosticreport> | undefined, b: UsCoreDiagnosticreport | PlainMessage<UsCoreDiagnosticreport> | undefined): boolean {
    return proto3.util.equals(UsCoreDiagnosticreport, a, b);
  }
}

/**
 * Specimen Collection Datetime or Period
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective
 */
export class UsCoreDiagnosticreport_Effective extends Message<UsCoreDiagnosticreport_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreDiagnosticreport_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDiagnosticreport.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDiagnosticreport_Effective {
    return new UsCoreDiagnosticreport_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport_Effective {
    return new UsCoreDiagnosticreport_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport_Effective {
    return new UsCoreDiagnosticreport_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDiagnosticreport_Effective | PlainMessage<UsCoreDiagnosticreport_Effective> | undefined, b: UsCoreDiagnosticreport_Effective | PlainMessage<UsCoreDiagnosticreport_Effective> | undefined): boolean {
    return proto3.util.equals(UsCoreDiagnosticreport_Effective, a, b);
  }
}

/**
 * Participants in producing the report
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer
 */
export class UsCoreDiagnosticreport_Performer extends Message<UsCoreDiagnosticreport_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performer
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Practitioner or Organization  participant
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<UsCoreDiagnosticreport_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDiagnosticreport.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDiagnosticreport_Performer {
    return new UsCoreDiagnosticreport_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport_Performer {
    return new UsCoreDiagnosticreport_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport_Performer {
    return new UsCoreDiagnosticreport_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDiagnosticreport_Performer | PlainMessage<UsCoreDiagnosticreport_Performer> | undefined, b: UsCoreDiagnosticreport_Performer | PlainMessage<UsCoreDiagnosticreport_Performer> | undefined): boolean {
    return proto3.util.equals(UsCoreDiagnosticreport_Performer, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image
 */
export class UsCoreDiagnosticreport_Image extends Message<UsCoreDiagnosticreport_Image> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.stu3.proto.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<UsCoreDiagnosticreport_Image>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDiagnosticreport.Image";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDiagnosticreport_Image {
    return new UsCoreDiagnosticreport_Image().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport_Image {
    return new UsCoreDiagnosticreport_Image().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDiagnosticreport_Image {
    return new UsCoreDiagnosticreport_Image().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDiagnosticreport_Image | PlainMessage<UsCoreDiagnosticreport_Image> | undefined, b: UsCoreDiagnosticreport_Image | PlainMessage<UsCoreDiagnosticreport_Image> | undefined): boolean {
    return proto3.util.equals(UsCoreDiagnosticreport_Image, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Email is a "direct" email.
 * Email is a "direct" email.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-direct
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDirectEmail
 */
export class UsCoreDirectEmail extends Message<UsCoreDirectEmail> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.stu3.proto.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<UsCoreDirectEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDirectEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDirectEmail {
    return new UsCoreDirectEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDirectEmail {
    return new UsCoreDirectEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDirectEmail {
    return new UsCoreDirectEmail().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDirectEmail | PlainMessage<UsCoreDirectEmail> | undefined, b: UsCoreDirectEmail | PlainMessage<UsCoreDirectEmail> | undefined): boolean {
    return proto3.util.equals(UsCoreDirectEmail, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core DocumentReference
 * Profile. US Core DocumentReference Profile. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-documentreference
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDocumentreference
 */
export class UsCoreDocumentreference extends Message<UsCoreDocumentreference> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Master Version Specific Identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier master_identifier = 9;
   */
  masterIdentifier?: Identifier;

  /**
   * Other identifiers for the document
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * current | superseded | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.DocumentReferenceStatusCode status = 11;
   */
  status?: DocumentReferenceStatusCode;

  /**
   * preliminary | final | appended | amended | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.CompositionStatusCode doc_status = 12;
   */
  docStatus?: CompositionStatusCode;

  /**
   * Kind of document (LOINC if possible)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 13;
   */
  type?: CodeableConcept;

  /**
   * Categorization of document
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept class_value = 14 [json_name = "class"];
   */
  classValue?: CodeableConcept;

  /**
   * Who/what is the subject of the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Document creation time
   *
   * @generated from field: google.fhir.stu3.proto.DateTime created = 16;
   */
  created?: DateTime;

  /**
   * When this document reference was created
   *
   * @generated from field: google.fhir.stu3.proto.Instant indexed = 17;
   */
  indexed?: Instant;

  /**
   * Who and/or what authored the document
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference author = 18;
   */
  author: Reference[] = [];

  /**
   * Who/what authenticated the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference authenticator = 19;
   */
  authenticator?: Reference;

  /**
   * Organization which maintains the document
   *
   * @generated from field: google.fhir.stu3.proto.Reference custodian = 20;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreDocumentreference.RelatesTo relates_to = 21;
   */
  relatesTo: UsCoreDocumentreference_RelatesTo[] = [];

  /**
   * Human-readable description (title)
   *
   * @generated from field: google.fhir.stu3.proto.String description = 22;
   */
  description?: String;

  /**
   * Document security-tags
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept security_label = 23;
   */
  securityLabel: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreDocumentreference.Content content = 24;
   */
  content?: UsCoreDocumentreference_Content;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreDocumentreference.Context context = 25;
   */
  context?: UsCoreDocumentreference_Context;

  constructor(data?: PartialMessage<UsCoreDocumentreference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDocumentreference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "master_identifier", kind: "message", T: Identifier },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "status", kind: "message", T: DocumentReferenceStatusCode },
    { no: 12, name: "doc_status", kind: "message", T: CompositionStatusCode },
    { no: 13, name: "type", kind: "message", T: CodeableConcept },
    { no: 14, name: "class_value", jsonName: "class", kind: "message", T: CodeableConcept },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "created", kind: "message", T: DateTime },
    { no: 17, name: "indexed", kind: "message", T: Instant },
    { no: 18, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "authenticator", kind: "message", T: Reference },
    { no: 20, name: "custodian", kind: "message", T: Reference },
    { no: 21, name: "relates_to", kind: "message", T: UsCoreDocumentreference_RelatesTo, repeated: true },
    { no: 22, name: "description", kind: "message", T: String },
    { no: 23, name: "security_label", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "content", kind: "message", T: UsCoreDocumentreference_Content },
    { no: 25, name: "context", kind: "message", T: UsCoreDocumentreference_Context },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDocumentreference {
    return new UsCoreDocumentreference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDocumentreference {
    return new UsCoreDocumentreference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDocumentreference {
    return new UsCoreDocumentreference().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDocumentreference | PlainMessage<UsCoreDocumentreference> | undefined, b: UsCoreDocumentreference | PlainMessage<UsCoreDocumentreference> | undefined): boolean {
    return proto3.util.equals(UsCoreDocumentreference, a, b);
  }
}

/**
 * Relationships to other documents
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDocumentreference.RelatesTo
 */
export class UsCoreDocumentreference_RelatesTo extends Message<UsCoreDocumentreference_RelatesTo> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * replaces | transforms | signs | appends
   *
   * @generated from field: google.fhir.stu3.proto.DocumentRelationshipTypeCode code = 4;
   */
  code?: DocumentRelationshipTypeCode;

  /**
   * Target of the relationship
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<UsCoreDocumentreference_RelatesTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDocumentreference.RelatesTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: DocumentRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDocumentreference_RelatesTo {
    return new UsCoreDocumentreference_RelatesTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_RelatesTo {
    return new UsCoreDocumentreference_RelatesTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_RelatesTo {
    return new UsCoreDocumentreference_RelatesTo().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDocumentreference_RelatesTo | PlainMessage<UsCoreDocumentreference_RelatesTo> | undefined, b: UsCoreDocumentreference_RelatesTo | PlainMessage<UsCoreDocumentreference_RelatesTo> | undefined): boolean {
    return proto3.util.equals(UsCoreDocumentreference_RelatesTo, a, b);
  }
}

/**
 * Document referenced
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDocumentreference.Content
 */
export class UsCoreDocumentreference_Content extends Message<UsCoreDocumentreference_Content> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Where to access the document
   *
   * @generated from field: google.fhir.stu3.proto.Attachment attachment = 4;
   */
  attachment?: Attachment;

  /**
   * Format/content rules for the document
   *
   * @generated from field: google.fhir.stu3.proto.Coding format = 5;
   */
  format?: Coding;

  constructor(data?: PartialMessage<UsCoreDocumentreference_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDocumentreference.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "attachment", kind: "message", T: Attachment },
    { no: 5, name: "format", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDocumentreference_Content {
    return new UsCoreDocumentreference_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_Content {
    return new UsCoreDocumentreference_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_Content {
    return new UsCoreDocumentreference_Content().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDocumentreference_Content | PlainMessage<UsCoreDocumentreference_Content> | undefined, b: UsCoreDocumentreference_Content | PlainMessage<UsCoreDocumentreference_Content> | undefined): boolean {
    return proto3.util.equals(UsCoreDocumentreference_Content, a, b);
  }
}

/**
 * Clinical context of document
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDocumentreference.Context
 */
export class UsCoreDocumentreference_Context extends Message<UsCoreDocumentreference_Context> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Context of the document  content
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 4;
   */
  encounter?: Reference;

  /**
   * Main clinical acts documented
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept event = 5;
   */
  event: CodeableConcept[] = [];

  /**
   * Time of service that is being documented
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  /**
   * Kind of facility where patient was seen
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept facility_type = 7;
   */
  facilityType?: CodeableConcept;

  /**
   * Additional details about where the content was created (e.g. clinical
   * specialty)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept practice_setting = 8;
   */
  practiceSetting?: CodeableConcept;

  /**
   * Patient demographics from source
   *
   * @generated from field: google.fhir.stu3.proto.Reference source_patient_info = 9;
   */
  sourcePatientInfo?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreDocumentreference.Context.Related related = 10;
   */
  related: UsCoreDocumentreference_Context_Related[] = [];

  constructor(data?: PartialMessage<UsCoreDocumentreference_Context>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDocumentreference.Context";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "encounter", kind: "message", T: Reference },
    { no: 5, name: "event", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "facility_type", kind: "message", T: CodeableConcept },
    { no: 8, name: "practice_setting", kind: "message", T: CodeableConcept },
    { no: 9, name: "source_patient_info", kind: "message", T: Reference },
    { no: 10, name: "related", kind: "message", T: UsCoreDocumentreference_Context_Related, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDocumentreference_Context {
    return new UsCoreDocumentreference_Context().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_Context {
    return new UsCoreDocumentreference_Context().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_Context {
    return new UsCoreDocumentreference_Context().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDocumentreference_Context | PlainMessage<UsCoreDocumentreference_Context> | undefined, b: UsCoreDocumentreference_Context | PlainMessage<UsCoreDocumentreference_Context> | undefined): boolean {
    return proto3.util.equals(UsCoreDocumentreference_Context, a, b);
  }
}

/**
 * Related identifiers or resources
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreDocumentreference.Context.Related
 */
export class UsCoreDocumentreference_Context_Related extends Message<UsCoreDocumentreference_Context_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier of related objects or events
   *
   * @generated from field: google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Related Resource
   *
   * @generated from field: google.fhir.stu3.proto.Reference ref = 5;
   */
  ref?: Reference;

  constructor(data?: PartialMessage<UsCoreDocumentreference_Context_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreDocumentreference.Context.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "ref", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDocumentreference_Context_Related {
    return new UsCoreDocumentreference_Context_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_Context_Related {
    return new UsCoreDocumentreference_Context_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDocumentreference_Context_Related {
    return new UsCoreDocumentreference_Context_Related().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDocumentreference_Context_Related | PlainMessage<UsCoreDocumentreference_Context_Related> | undefined, b: UsCoreDocumentreference_Context_Related | PlainMessage<UsCoreDocumentreference_Context_Related> | undefined): boolean {
    return proto3.util.equals(UsCoreDocumentreference_Context_Related, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Encounter Profile.
 * US Core Encounter Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-encounter
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter
 */
export class UsCoreEncounter extends Message<UsCoreEncounter> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier(s) by which this encounter is known
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * planned | arrived | triaged | in-progress | onleave | finished | cancelled
   * +
   *
   * @generated from field: google.fhir.stu3.proto.EncounterStatusCode status = 10;
   */
  status?: EncounterStatusCode;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreEncounter.StatusHistory status_history = 11;
   */
  statusHistory: UsCoreEncounter_StatusHistory[] = [];

  /**
   * inpatient | outpatient | ambulatory | emergency +
   *
   * @generated from field: google.fhir.stu3.proto.Coding class_value = 12 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreEncounter.ClassHistory class_history = 13;
   */
  classHistory: UsCoreEncounter_ClassHistory[] = [];

  /**
   * Specific type of encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 14;
   */
  type: CodeableConcept[] = [];

  /**
   * Indicates the urgency of the encounter
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 15;
   */
  priority?: CodeableConcept;

  /**
   * The patient ro group present at the encounter
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * Episode(s) of care that this encounter should be recorded against
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference episode_of_care = 17;
   */
  episodeOfCare: Reference[] = [];

  /**
   * The ReferralRequest that initiated this encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference incoming_referral = 18;
   */
  incomingReferral: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreEncounter.Participant participant = 19;
   */
  participant: UsCoreEncounter_Participant[] = [];

  /**
   * The appointment that scheduled this encounter
   *
   * @generated from field: google.fhir.stu3.proto.Reference appointment = 20;
   */
  appointment?: Reference;

  /**
   * The start and end time of the encounter
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 21;
   */
  period?: Period;

  /**
   * Quantity of time the encounter lasted (less time absent)
   *
   * @generated from field: google.fhir.stu3.proto.Duration length = 22;
   */
  length?: Duration;

  /**
   * Reason the encounter takes place (code)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 23;
   */
  reason: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreEncounter.Diagnosis diagnosis = 24;
   */
  diagnosis: UsCoreEncounter_Diagnosis[] = [];

  /**
   * The set of accounts that may be used for billing for this Encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference account = 25;
   */
  account: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreEncounter.Hospitalization hospitalization = 26;
   */
  hospitalization?: UsCoreEncounter_Hospitalization;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreEncounter.Location location = 27;
   */
  location: UsCoreEncounter_Location[] = [];

  /**
   * The custodian organization of this Encounter record
   *
   * @generated from field: google.fhir.stu3.proto.Reference service_provider = 28;
   */
  serviceProvider?: Reference;

  /**
   * Another Encounter this encounter is part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference part_of = 29;
   */
  partOf?: Reference;

  constructor(data?: PartialMessage<UsCoreEncounter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: EncounterStatusCode },
    { no: 11, name: "status_history", kind: "message", T: UsCoreEncounter_StatusHistory, repeated: true },
    { no: 12, name: "class_value", jsonName: "class", kind: "message", T: Coding },
    { no: 13, name: "class_history", kind: "message", T: UsCoreEncounter_ClassHistory, repeated: true },
    { no: 14, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "priority", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "episode_of_care", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "incoming_referral", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "participant", kind: "message", T: UsCoreEncounter_Participant, repeated: true },
    { no: 20, name: "appointment", kind: "message", T: Reference },
    { no: 21, name: "period", kind: "message", T: Period },
    { no: 22, name: "length", kind: "message", T: Duration },
    { no: 23, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "diagnosis", kind: "message", T: UsCoreEncounter_Diagnosis, repeated: true },
    { no: 25, name: "account", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "hospitalization", kind: "message", T: UsCoreEncounter_Hospitalization },
    { no: 27, name: "location", kind: "message", T: UsCoreEncounter_Location, repeated: true },
    { no: 28, name: "service_provider", kind: "message", T: Reference },
    { no: 29, name: "part_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter {
    return new UsCoreEncounter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter {
    return new UsCoreEncounter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter {
    return new UsCoreEncounter().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter | PlainMessage<UsCoreEncounter> | undefined, b: UsCoreEncounter | PlainMessage<UsCoreEncounter> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter, a, b);
  }
}

/**
 * List of past encounter statuses
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter.StatusHistory
 */
export class UsCoreEncounter_StatusHistory extends Message<UsCoreEncounter_StatusHistory> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * planned | arrived | triaged | in-progress | onleave | finished |
   * cancelled +
   *
   * @generated from field: google.fhir.stu3.proto.EncounterStatusCode status = 4;
   */
  status?: EncounterStatusCode;

  /**
   * The time that the episode was in the specified status
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<UsCoreEncounter_StatusHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter.StatusHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "status", kind: "message", T: EncounterStatusCode },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter_StatusHistory {
    return new UsCoreEncounter_StatusHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter_StatusHistory {
    return new UsCoreEncounter_StatusHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter_StatusHistory {
    return new UsCoreEncounter_StatusHistory().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter_StatusHistory | PlainMessage<UsCoreEncounter_StatusHistory> | undefined, b: UsCoreEncounter_StatusHistory | PlainMessage<UsCoreEncounter_StatusHistory> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter_StatusHistory, a, b);
  }
}

/**
 * List of past encounter classes
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter.ClassHistory
 */
export class UsCoreEncounter_ClassHistory extends Message<UsCoreEncounter_ClassHistory> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * inpatient | outpatient | ambulatory | emergency +
   *
   * @generated from field: google.fhir.stu3.proto.Coding class_value = 4 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * The time that the episode was in the specified class
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<UsCoreEncounter_ClassHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter.ClassHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "class_value", jsonName: "class", kind: "message", T: Coding },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter_ClassHistory {
    return new UsCoreEncounter_ClassHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter_ClassHistory {
    return new UsCoreEncounter_ClassHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter_ClassHistory {
    return new UsCoreEncounter_ClassHistory().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter_ClassHistory | PlainMessage<UsCoreEncounter_ClassHistory> | undefined, b: UsCoreEncounter_ClassHistory | PlainMessage<UsCoreEncounter_ClassHistory> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter_ClassHistory, a, b);
  }
}

/**
 * List of participants involved in the encounter
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter.Participant
 */
export class UsCoreEncounter_Participant extends Message<UsCoreEncounter_Participant> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Role of participant in encounter
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 4;
   */
  type: CodeableConcept[] = [];

  /**
   * Period of time during the encounter that the participant participated
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 5;
   */
  period?: Period;

  /**
   * Persons involved in the encounter other than the patient
   *
   * @generated from field: google.fhir.stu3.proto.Reference individual = 6;
   */
  individual?: Reference;

  constructor(data?: PartialMessage<UsCoreEncounter_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "individual", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter_Participant {
    return new UsCoreEncounter_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter_Participant {
    return new UsCoreEncounter_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter_Participant {
    return new UsCoreEncounter_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter_Participant | PlainMessage<UsCoreEncounter_Participant> | undefined, b: UsCoreEncounter_Participant | PlainMessage<UsCoreEncounter_Participant> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter_Participant, a, b);
  }
}

/**
 * The list of diagnosis relevant to this encounter
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter.Diagnosis
 */
export class UsCoreEncounter_Diagnosis extends Message<UsCoreEncounter_Diagnosis> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reason the encounter takes place (resource)
   *
   * @generated from field: google.fhir.stu3.proto.Reference condition = 4;
   */
  condition?: Reference;

  /**
   * Role that this diagnosis has within the encounter (e.g. admission,
   * billing, discharge …)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  /**
   * Ranking of the diagnosis (for each role type)
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt rank = 6;
   */
  rank?: PositiveInt;

  constructor(data?: PartialMessage<UsCoreEncounter_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "condition", kind: "message", T: Reference },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
    { no: 6, name: "rank", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter_Diagnosis {
    return new UsCoreEncounter_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter_Diagnosis {
    return new UsCoreEncounter_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter_Diagnosis {
    return new UsCoreEncounter_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter_Diagnosis | PlainMessage<UsCoreEncounter_Diagnosis> | undefined, b: UsCoreEncounter_Diagnosis | PlainMessage<UsCoreEncounter_Diagnosis> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter_Diagnosis, a, b);
  }
}

/**
 * Details about the admission to a healthcare service
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter.Hospitalization
 */
export class UsCoreEncounter_Hospitalization extends Message<UsCoreEncounter_Hospitalization> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Pre-admission identifier
   *
   * @generated from field: google.fhir.stu3.proto.Identifier pre_admission_identifier = 4;
   */
  preAdmissionIdentifier?: Identifier;

  /**
   * The location from which the patient came before admission
   *
   * @generated from field: google.fhir.stu3.proto.Reference origin = 5;
   */
  origin?: Reference;

  /**
   * From where patient was admitted (physician referral, transfer)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept admit_source = 6;
   */
  admitSource?: CodeableConcept;

  /**
   * The type of hospital re-admission that has occurred (if any). If the
   * value is absent, then this is not identified as a readmission
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept re_admission = 7;
   */
  reAdmission?: CodeableConcept;

  /**
   * Diet preferences reported by the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept diet_preference = 8;
   */
  dietPreference: CodeableConcept[] = [];

  /**
   * Special courtesies (VIP, board member)
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept special_courtesy = 9;
   */
  specialCourtesy: CodeableConcept[] = [];

  /**
   * Wheelchair, translator, stretcher, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept special_arrangement = 10;
   */
  specialArrangement: CodeableConcept[] = [];

  /**
   * Location to which the patient is discharged
   *
   * @generated from field: google.fhir.stu3.proto.Reference destination = 11;
   */
  destination?: Reference;

  /**
   * Category or kind of location after discharge
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept discharge_disposition = 12;
   */
  dischargeDisposition?: CodeableConcept;

  constructor(data?: PartialMessage<UsCoreEncounter_Hospitalization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter.Hospitalization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "pre_admission_identifier", kind: "message", T: Identifier },
    { no: 5, name: "origin", kind: "message", T: Reference },
    { no: 6, name: "admit_source", kind: "message", T: CodeableConcept },
    { no: 7, name: "re_admission", kind: "message", T: CodeableConcept },
    { no: 8, name: "diet_preference", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "special_courtesy", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "special_arrangement", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "destination", kind: "message", T: Reference },
    { no: 12, name: "discharge_disposition", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter_Hospitalization {
    return new UsCoreEncounter_Hospitalization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter_Hospitalization {
    return new UsCoreEncounter_Hospitalization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter_Hospitalization {
    return new UsCoreEncounter_Hospitalization().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter_Hospitalization | PlainMessage<UsCoreEncounter_Hospitalization> | undefined, b: UsCoreEncounter_Hospitalization | PlainMessage<UsCoreEncounter_Hospitalization> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter_Hospitalization, a, b);
  }
}

/**
 * List of locations where the patient has been
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreEncounter.Location
 */
export class UsCoreEncounter_Location extends Message<UsCoreEncounter_Location> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Location the encounter takes place
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 4;
   */
  location?: Reference;

  /**
   * planned | active | reserved | completed
   *
   * @generated from field: google.fhir.stu3.proto.EncounterLocationStatusCode status = 5;
   */
  status?: EncounterLocationStatusCode;

  /**
   * Time period during which the patient was present at the location
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  constructor(data?: PartialMessage<UsCoreEncounter_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreEncounter.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "location", kind: "message", T: Reference },
    { no: 5, name: "status", kind: "message", T: EncounterLocationStatusCode },
    { no: 6, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreEncounter_Location {
    return new UsCoreEncounter_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreEncounter_Location {
    return new UsCoreEncounter_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreEncounter_Location {
    return new UsCoreEncounter_Location().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreEncounter_Location | PlainMessage<UsCoreEncounter_Location> | undefined, b: UsCoreEncounter_Location | PlainMessage<UsCoreEncounter_Location> | undefined): boolean {
    return proto3.util.equals(UsCoreEncounter_Location, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core ethnicity Extension.
 * US Core ethnicity Extension.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity
 *
 * @generated from message google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension
 */
export class PatientUSCoreEthnicityExtension extends Message<PatientUSCoreEthnicityExtension> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Hispanic or Latino|Not Hispanic or Latino
   *
   * @generated from field: google.fhir.stu3.proto.Coding omb_category = 4;
   */
  ombCategory?: Coding;

  /**
   * Extended ethnicity codes
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding detailed = 5;
   */
  detailed: Coding[] = [];

  /**
   * ethnicity Text
   *
   * @generated from field: google.fhir.stu3.proto.String text = 6;
   */
  text?: String;

  constructor(data?: PartialMessage<PatientUSCoreEthnicityExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "omb_category", kind: "message", T: Coding },
    { no: 5, name: "detailed", kind: "message", T: Coding, repeated: true },
    { no: 6, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreEthnicityExtension {
    return new PatientUSCoreEthnicityExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension {
    return new PatientUSCoreEthnicityExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension {
    return new PatientUSCoreEthnicityExtension().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreEthnicityExtension | PlainMessage<PatientUSCoreEthnicityExtension> | undefined, b: PatientUSCoreEthnicityExtension | PlainMessage<PatientUSCoreEthnicityExtension> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreEthnicityExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Goal Profile.
 * US Core Goal Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-goal
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreGoal
 */
export class UsCoreGoal extends Message<UsCoreGoal> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * proposed | accepted | planned | in-progress | on-target | ahead-of-target |
   * behind-target | sustaining | achieved | on-hold | cancelled |
   * entered-in-error | rejected
   *
   * @generated from field: google.fhir.stu3.proto.GoalStatusCode status = 10;
   */
  status?: GoalStatusCode;

  /**
   * E.g. Treatment, dietary, behavioral, etc.
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 11;
   */
  category: CodeableConcept[] = [];

  /**
   * high-priority | medium-priority | low-priority
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept priority = 12;
   */
  priority?: CodeableConcept;

  /**
   * Code or text describing goal
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept description = 13;
   */
  description?: CodeableConcept;

  /**
   * Who this goal is intended for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreGoal.Start start = 15;
   */
  start?: UsCoreGoal_Start;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreGoal.Target target = 16;
   */
  target?: UsCoreGoal_Target;

  /**
   * When goal status took effect
   *
   * @generated from field: google.fhir.stu3.proto.Date status_date = 17;
   */
  statusDate?: Date;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.stu3.proto.String status_reason = 18;
   */
  statusReason?: String;

  /**
   * Who's responsible for creating Goal?
   *
   * @generated from field: google.fhir.stu3.proto.Reference expressed_by = 19;
   */
  expressedBy?: Reference;

  /**
   * Issues addressed by this goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference addresses = 20;
   */
  addresses: Reference[] = [];

  /**
   * Comments about the goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 21;
   */
  note: Annotation[] = [];

  /**
   * What result was achieved regarding the goal?
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept outcome_code = 22;
   */
  outcomeCode: CodeableConcept[] = [];

  /**
   * Observation that resulted from goal
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference outcome_reference = 23;
   */
  outcomeReference: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreGoal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreGoal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: GoalStatusCode },
    { no: 11, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "priority", kind: "message", T: CodeableConcept },
    { no: 13, name: "description", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "start", kind: "message", T: UsCoreGoal_Start },
    { no: 16, name: "target", kind: "message", T: UsCoreGoal_Target },
    { no: 17, name: "status_date", kind: "message", T: Date },
    { no: 18, name: "status_reason", kind: "message", T: String },
    { no: 19, name: "expressed_by", kind: "message", T: Reference },
    { no: 20, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 22, name: "outcome_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreGoal {
    return new UsCoreGoal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreGoal {
    return new UsCoreGoal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreGoal {
    return new UsCoreGoal().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreGoal | PlainMessage<UsCoreGoal> | undefined, b: UsCoreGoal | PlainMessage<UsCoreGoal> | undefined): boolean {
    return proto3.util.equals(UsCoreGoal, a, b);
  }
}

/**
 * When goal pursuit begins
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreGoal.Start
 */
export class UsCoreGoal_Start extends Message<UsCoreGoal_Start> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreGoal.Start.start
   */
  start: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreGoal_Start>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreGoal.Start";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "start" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "start" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreGoal_Start {
    return new UsCoreGoal_Start().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreGoal_Start {
    return new UsCoreGoal_Start().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreGoal_Start {
    return new UsCoreGoal_Start().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreGoal_Start | PlainMessage<UsCoreGoal_Start> | undefined, b: UsCoreGoal_Start | PlainMessage<UsCoreGoal_Start> | undefined): boolean {
    return proto3.util.equals(UsCoreGoal_Start, a, b);
  }
}

/**
 * Target outcome for the goal
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreGoal.Target
 */
export class UsCoreGoal_Target extends Message<UsCoreGoal_Target> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The parameter whose value is being tracked
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept measure = 4;
   */
  measure?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreGoal.Target.Detail detail = 5;
   */
  detail?: UsCoreGoal_Target_Detail;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreGoal.Target.Due due = 6;
   */
  due?: UsCoreGoal_Target_Due;

  constructor(data?: PartialMessage<UsCoreGoal_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreGoal.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "measure", kind: "message", T: CodeableConcept },
    { no: 5, name: "detail", kind: "message", T: UsCoreGoal_Target_Detail },
    { no: 6, name: "due", kind: "message", T: UsCoreGoal_Target_Due },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreGoal_Target {
    return new UsCoreGoal_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreGoal_Target {
    return new UsCoreGoal_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreGoal_Target {
    return new UsCoreGoal_Target().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreGoal_Target | PlainMessage<UsCoreGoal_Target> | undefined, b: UsCoreGoal_Target | PlainMessage<UsCoreGoal_Target> | undefined): boolean {
    return proto3.util.equals(UsCoreGoal_Target, a, b);
  }
}

/**
 * The target value to be achieved
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreGoal.Target.Detail
 */
export class UsCoreGoal_Target_Detail extends Message<UsCoreGoal_Target_Detail> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreGoal.Target.Detail.detail
   */
  detail: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 3;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreGoal_Target_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreGoal.Target.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "detail" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "detail" },
    { no: 3, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "detail" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreGoal_Target_Detail {
    return new UsCoreGoal_Target_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreGoal_Target_Detail {
    return new UsCoreGoal_Target_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreGoal_Target_Detail {
    return new UsCoreGoal_Target_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreGoal_Target_Detail | PlainMessage<UsCoreGoal_Target_Detail> | undefined, b: UsCoreGoal_Target_Detail | PlainMessage<UsCoreGoal_Target_Detail> | undefined): boolean {
    return proto3.util.equals(UsCoreGoal_Target_Detail, a, b);
  }
}

/**
 * Reach goal on or before
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreGoal.Target.Due
 */
export class UsCoreGoal_Target_Due extends Message<UsCoreGoal_Target_Due> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreGoal.Target.Due.due
   */
  due: {
    /**
     * @generated from field: google.fhir.stu3.proto.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Duration duration = 2;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreGoal_Target_Due>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreGoal.Target.Due";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "due" },
    { no: 2, name: "duration", kind: "message", T: Duration, oneof: "due" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreGoal_Target_Due {
    return new UsCoreGoal_Target_Due().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreGoal_Target_Due {
    return new UsCoreGoal_Target_Due().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreGoal_Target_Due {
    return new UsCoreGoal_Target_Due().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreGoal_Target_Due | PlainMessage<UsCoreGoal_Target_Due> | undefined, b: UsCoreGoal_Target_Due | PlainMessage<UsCoreGoal_Target_Due> | undefined): boolean {
    return proto3.util.equals(UsCoreGoal_Target_Due, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Immunization Profile.
 * US Core Immunization Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-immunization
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreImmunization
 */
export class UsCoreImmunization extends Message<UsCoreImmunization> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * completed | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.ImmunizationStatusCodesCode status = 10;
   */
  status?: ImmunizationStatusCodesCode;

  /**
   * Flag for whether immunization was given
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_given = 11;
   */
  notGiven?: Boolean;

  /**
   * Vaccine Product Type (bind to CVX)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept vaccine_code = 12;
   */
  vaccineCode?: CodeableConcept;

  /**
   * Who was immunized
   *
   * @generated from field: google.fhir.stu3.proto.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * Encounter administered as part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference encounter = 14;
   */
  encounter?: Reference;

  /**
   * Vaccination administration date
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Indicates context the data was recorded in
   *
   * @generated from field: google.fhir.stu3.proto.Boolean primary_source = 16;
   */
  primarySource?: Boolean;

  /**
   * Indicates the source of a secondarily reported record
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept report_origin = 17;
   */
  reportOrigin?: CodeableConcept;

  /**
   * Where vaccination occurred
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 18;
   */
  location?: Reference;

  /**
   * Vaccine manufacturer
   *
   * @generated from field: google.fhir.stu3.proto.Reference manufacturer = 19;
   */
  manufacturer?: Reference;

  /**
   * Vaccine lot number
   *
   * @generated from field: google.fhir.stu3.proto.String lot_number = 20;
   */
  lotNumber?: String;

  /**
   * Vaccine expiration date
   *
   * @generated from field: google.fhir.stu3.proto.Date expiration_date = 21;
   */
  expirationDate?: Date;

  /**
   * Body site vaccine  was administered
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept site = 22;
   */
  site?: CodeableConcept;

  /**
   * How vaccine entered body
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept route = 23;
   */
  route?: CodeableConcept;

  /**
   * Amount of vaccine administered
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity dose_quantity = 24;
   */
  doseQuantity?: SimpleQuantity;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreImmunization.Practitioner practitioner = 25;
   */
  practitioner: UsCoreImmunization_Practitioner[] = [];

  /**
   * Vaccination notes
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreImmunization.Explanation explanation = 27;
   */
  explanation?: UsCoreImmunization_Explanation;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreImmunization.Reaction reaction = 28;
   */
  reaction: UsCoreImmunization_Reaction[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol vaccination_protocol = 29;
   */
  vaccinationProtocol: UsCoreImmunization_VaccinationProtocol[] = [];

  constructor(data?: PartialMessage<UsCoreImmunization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreImmunization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: ImmunizationStatusCodesCode },
    { no: 11, name: "not_given", kind: "message", T: Boolean },
    { no: 12, name: "vaccine_code", kind: "message", T: CodeableConcept },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "encounter", kind: "message", T: Reference },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "primary_source", kind: "message", T: Boolean },
    { no: 17, name: "report_origin", kind: "message", T: CodeableConcept },
    { no: 18, name: "location", kind: "message", T: Reference },
    { no: 19, name: "manufacturer", kind: "message", T: Reference },
    { no: 20, name: "lot_number", kind: "message", T: String },
    { no: 21, name: "expiration_date", kind: "message", T: Date },
    { no: 22, name: "site", kind: "message", T: CodeableConcept },
    { no: 23, name: "route", kind: "message", T: CodeableConcept },
    { no: 24, name: "dose_quantity", kind: "message", T: SimpleQuantity },
    { no: 25, name: "practitioner", kind: "message", T: UsCoreImmunization_Practitioner, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "explanation", kind: "message", T: UsCoreImmunization_Explanation },
    { no: 28, name: "reaction", kind: "message", T: UsCoreImmunization_Reaction, repeated: true },
    { no: 29, name: "vaccination_protocol", kind: "message", T: UsCoreImmunization_VaccinationProtocol, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreImmunization {
    return new UsCoreImmunization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreImmunization {
    return new UsCoreImmunization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreImmunization {
    return new UsCoreImmunization().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreImmunization | PlainMessage<UsCoreImmunization> | undefined, b: UsCoreImmunization | PlainMessage<UsCoreImmunization> | undefined): boolean {
    return proto3.util.equals(UsCoreImmunization, a, b);
  }
}

/**
 * Who performed event
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreImmunization.Practitioner
 */
export class UsCoreImmunization_Practitioner extends Message<UsCoreImmunization_Practitioner> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What type of performance was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<UsCoreImmunization_Practitioner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreImmunization.Practitioner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreImmunization_Practitioner {
    return new UsCoreImmunization_Practitioner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreImmunization_Practitioner {
    return new UsCoreImmunization_Practitioner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreImmunization_Practitioner {
    return new UsCoreImmunization_Practitioner().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreImmunization_Practitioner | PlainMessage<UsCoreImmunization_Practitioner> | undefined, b: UsCoreImmunization_Practitioner | PlainMessage<UsCoreImmunization_Practitioner> | undefined): boolean {
    return proto3.util.equals(UsCoreImmunization_Practitioner, a, b);
  }
}

/**
 * Administration/non-administration reasons
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreImmunization.Explanation
 */
export class UsCoreImmunization_Explanation extends Message<UsCoreImmunization_Explanation> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Why immunization occurred
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason = 4;
   */
  reason: CodeableConcept[] = [];

  /**
   * Why immunization did not occur
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_not_given = 5;
   */
  reasonNotGiven: CodeableConcept[] = [];

  constructor(data?: PartialMessage<UsCoreImmunization_Explanation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreImmunization.Explanation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "reason_not_given", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreImmunization_Explanation {
    return new UsCoreImmunization_Explanation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreImmunization_Explanation {
    return new UsCoreImmunization_Explanation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreImmunization_Explanation {
    return new UsCoreImmunization_Explanation().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreImmunization_Explanation | PlainMessage<UsCoreImmunization_Explanation> | undefined, b: UsCoreImmunization_Explanation | PlainMessage<UsCoreImmunization_Explanation> | undefined): boolean {
    return proto3.util.equals(UsCoreImmunization_Explanation, a, b);
  }
}

/**
 * Details of a reaction that follows immunization
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreImmunization.Reaction
 */
export class UsCoreImmunization_Reaction extends Message<UsCoreImmunization_Reaction> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When reaction started
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date = 4;
   */
  date?: DateTime;

  /**
   * Additional information on reaction
   *
   * @generated from field: google.fhir.stu3.proto.Reference detail = 5;
   */
  detail?: Reference;

  /**
   * Indicates self-reported reaction
   *
   * @generated from field: google.fhir.stu3.proto.Boolean reported = 6;
   */
  reported?: Boolean;

  constructor(data?: PartialMessage<UsCoreImmunization_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreImmunization.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: DateTime },
    { no: 5, name: "detail", kind: "message", T: Reference },
    { no: 6, name: "reported", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreImmunization_Reaction {
    return new UsCoreImmunization_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreImmunization_Reaction {
    return new UsCoreImmunization_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreImmunization_Reaction {
    return new UsCoreImmunization_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreImmunization_Reaction | PlainMessage<UsCoreImmunization_Reaction> | undefined, b: UsCoreImmunization_Reaction | PlainMessage<UsCoreImmunization_Reaction> | undefined): boolean {
    return proto3.util.equals(UsCoreImmunization_Reaction, a, b);
  }
}

/**
 * What protocol was followed
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol
 */
export class UsCoreImmunization_VaccinationProtocol extends Message<UsCoreImmunization_VaccinationProtocol> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Dose number within series
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt dose_sequence = 4;
   */
  doseSequence?: PositiveInt;

  /**
   * Details of vaccine protocol
   *
   * @generated from field: google.fhir.stu3.proto.String description = 5;
   */
  description?: String;

  /**
   * Who is responsible for protocol
   *
   * @generated from field: google.fhir.stu3.proto.Reference authority = 6;
   */
  authority?: Reference;

  /**
   * Name of vaccine series
   *
   * @generated from field: google.fhir.stu3.proto.String series = 7;
   */
  series?: String;

  /**
   * Recommended number of doses for immunity
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt series_doses = 8;
   */
  seriesDoses?: PositiveInt;

  /**
   * Disease immunized against
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept target_disease = 9;
   */
  targetDisease: CodeableConcept[] = [];

  /**
   * Indicates if dose counts towards immunity
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dose_status = 10;
   */
  doseStatus?: CodeableConcept;

  /**
   * Why dose does (not) count
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept dose_status_reason = 11;
   */
  doseStatusReason?: CodeableConcept;

  constructor(data?: PartialMessage<UsCoreImmunization_VaccinationProtocol>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreImmunization.VaccinationProtocol";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "dose_sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "authority", kind: "message", T: Reference },
    { no: 7, name: "series", kind: "message", T: String },
    { no: 8, name: "series_doses", kind: "message", T: PositiveInt },
    { no: 9, name: "target_disease", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "dose_status", kind: "message", T: CodeableConcept },
    { no: 11, name: "dose_status_reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreImmunization_VaccinationProtocol {
    return new UsCoreImmunization_VaccinationProtocol().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreImmunization_VaccinationProtocol {
    return new UsCoreImmunization_VaccinationProtocol().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreImmunization_VaccinationProtocol {
    return new UsCoreImmunization_VaccinationProtocol().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreImmunization_VaccinationProtocol | PlainMessage<UsCoreImmunization_VaccinationProtocol> | undefined, b: UsCoreImmunization_VaccinationProtocol | PlainMessage<UsCoreImmunization_VaccinationProtocol> | undefined): boolean {
    return proto3.util.equals(UsCoreImmunization_VaccinationProtocol, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Location Profile.
 * US Core Location Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-location
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreLocation
 */
export class UsCoreLocation extends Message<UsCoreLocation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique code or number identifying the location to its users
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * active | suspended | inactive
   *
   * @generated from field: google.fhir.stu3.proto.LocationStatusCode status = 10;
   */
  status?: LocationStatusCode;

  /**
   * The Operational status of the location (typically only for a bed/room)
   *
   * @generated from field: google.fhir.stu3.proto.Coding operational_status = 11;
   */
  operationalStatus?: Coding;

  /**
   * Name of the location as used by humans
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * A list of alternate names that the location is known as, or was known as in
   * the past
   *
   * @generated from field: repeated google.fhir.stu3.proto.String alias = 13;
   */
  alias: String[] = [];

  /**
   * Additional details about the location that could be displayed as further
   * information to identify the location beyond its name
   *
   * @generated from field: google.fhir.stu3.proto.String description = 14;
   */
  description?: String;

  /**
   * instance | kind
   *
   * @generated from field: google.fhir.stu3.proto.LocationModeCode mode = 15;
   */
  mode?: LocationModeCode;

  /**
   * Type of function performed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 16;
   */
  type?: CodeableConcept;

  /**
   * Contact details of the location
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 17;
   */
  telecom: ContactPoint[] = [];

  /**
   * Physical location
   *
   * @generated from field: google.fhir.stu3.proto.Address address = 18;
   */
  address?: Address;

  /**
   * Physical form of the location
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept physical_type = 19;
   */
  physicalType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreLocation.Position position = 20;
   */
  position?: UsCoreLocation_Position;

  /**
   * Organization responsible for provisioning and upkeep
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 21;
   */
  managingOrganization?: Reference;

  /**
   * Another Location this one is physically part of
   *
   * @generated from field: google.fhir.stu3.proto.Reference part_of = 22;
   */
  partOf?: Reference;

  /**
   * Technical endpoints providing access to services operated for the location
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 23;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreLocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreLocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "status", kind: "message", T: LocationStatusCode },
    { no: 11, name: "operational_status", kind: "message", T: Coding },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "alias", kind: "message", T: String, repeated: true },
    { no: 14, name: "description", kind: "message", T: String },
    { no: 15, name: "mode", kind: "message", T: LocationModeCode },
    { no: 16, name: "type", kind: "message", T: CodeableConcept },
    { no: 17, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 18, name: "address", kind: "message", T: Address },
    { no: 19, name: "physical_type", kind: "message", T: CodeableConcept },
    { no: 20, name: "position", kind: "message", T: UsCoreLocation_Position },
    { no: 21, name: "managing_organization", kind: "message", T: Reference },
    { no: 22, name: "part_of", kind: "message", T: Reference },
    { no: 23, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreLocation {
    return new UsCoreLocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreLocation {
    return new UsCoreLocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreLocation {
    return new UsCoreLocation().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreLocation | PlainMessage<UsCoreLocation> | undefined, b: UsCoreLocation | PlainMessage<UsCoreLocation> | undefined): boolean {
    return proto3.util.equals(UsCoreLocation, a, b);
  }
}

/**
 * The absolute geographic location
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreLocation.Position
 */
export class UsCoreLocation_Position extends Message<UsCoreLocation_Position> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Longitude with WGS84 datum
   *
   * @generated from field: google.fhir.stu3.proto.Decimal longitude = 4;
   */
  longitude?: Decimal;

  /**
   * Latitude with WGS84 datum
   *
   * @generated from field: google.fhir.stu3.proto.Decimal latitude = 5;
   */
  latitude?: Decimal;

  /**
   * Altitude with WGS84 datum
   *
   * @generated from field: google.fhir.stu3.proto.Decimal altitude = 6;
   */
  altitude?: Decimal;

  constructor(data?: PartialMessage<UsCoreLocation_Position>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreLocation.Position";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "longitude", kind: "message", T: Decimal },
    { no: 5, name: "latitude", kind: "message", T: Decimal },
    { no: 6, name: "altitude", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreLocation_Position {
    return new UsCoreLocation_Position().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreLocation_Position {
    return new UsCoreLocation_Position().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreLocation_Position {
    return new UsCoreLocation_Position().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreLocation_Position | PlainMessage<UsCoreLocation_Position> | undefined, b: UsCoreLocation_Position | PlainMessage<UsCoreLocation_Position> | undefined): boolean {
    return proto3.util.equals(UsCoreLocation_Position, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Medication Profile.
 * US Core Medication Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication
 */
export class UsCoreMedication extends Message<UsCoreMedication> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Codes that identify this medication
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 9;
   */
  code?: CodeableConcept;

  /**
   * active | inactive | entered-in-error
   *
   * @generated from field: google.fhir.stu3.proto.MedicationStatusCode status = 10;
   */
  status?: MedicationStatusCode;

  /**
   * True if a brand
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_brand = 11;
   */
  isBrand?: Boolean;

  /**
   * True if medication does not require a prescription
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_over_the_counter = 12;
   */
  isOverTheCounter?: Boolean;

  /**
   * Manufacturer of the item
   *
   * @generated from field: google.fhir.stu3.proto.Reference manufacturer = 13;
   */
  manufacturer?: Reference;

  /**
   * powder | tablets | capsule +
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept form = 14;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreMedication.Ingredient ingredient = 15;
   */
  ingredient: UsCoreMedication_Ingredient[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedication.Package package_value = 16 [json_name = "package"];
   */
  packageValue?: UsCoreMedication_Package;

  /**
   * Picture of the medication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment image = 17;
   */
  image: Attachment[] = [];

  constructor(data?: PartialMessage<UsCoreMedication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "code", kind: "message", T: CodeableConcept },
    { no: 10, name: "status", kind: "message", T: MedicationStatusCode },
    { no: 11, name: "is_brand", kind: "message", T: Boolean },
    { no: 12, name: "is_over_the_counter", kind: "message", T: Boolean },
    { no: 13, name: "manufacturer", kind: "message", T: Reference },
    { no: 14, name: "form", kind: "message", T: CodeableConcept },
    { no: 15, name: "ingredient", kind: "message", T: UsCoreMedication_Ingredient, repeated: true },
    { no: 16, name: "package_value", jsonName: "package", kind: "message", T: UsCoreMedication_Package },
    { no: 17, name: "image", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication {
    return new UsCoreMedication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication {
    return new UsCoreMedication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication {
    return new UsCoreMedication().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication | PlainMessage<UsCoreMedication> | undefined, b: UsCoreMedication | PlainMessage<UsCoreMedication> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication, a, b);
  }
}

/**
 * Active or inactive ingredient
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication.Ingredient
 */
export class UsCoreMedication_Ingredient extends Message<UsCoreMedication_Ingredient> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item item = 4;
   */
  item?: UsCoreMedication_Ingredient_Item;

  /**
   * Active ingredient indicator
   *
   * @generated from field: google.fhir.stu3.proto.Boolean is_active = 5;
   */
  isActive?: Boolean;

  /**
   * Quantity of ingredient present
   *
   * @generated from field: google.fhir.stu3.proto.Ratio amount = 6;
   */
  amount?: Ratio;

  constructor(data?: PartialMessage<UsCoreMedication_Ingredient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication.Ingredient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: UsCoreMedication_Ingredient_Item },
    { no: 5, name: "is_active", kind: "message", T: Boolean },
    { no: 6, name: "amount", kind: "message", T: Ratio },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication_Ingredient {
    return new UsCoreMedication_Ingredient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication_Ingredient {
    return new UsCoreMedication_Ingredient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication_Ingredient {
    return new UsCoreMedication_Ingredient().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication_Ingredient | PlainMessage<UsCoreMedication_Ingredient> | undefined, b: UsCoreMedication_Ingredient | PlainMessage<UsCoreMedication_Ingredient> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication_Ingredient, a, b);
  }
}

/**
 * The product contained
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item
 */
export class UsCoreMedication_Ingredient_Item extends Message<UsCoreMedication_Ingredient_Item> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreMedication_Ingredient_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication.Ingredient.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication_Ingredient_Item {
    return new UsCoreMedication_Ingredient_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication_Ingredient_Item {
    return new UsCoreMedication_Ingredient_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication_Ingredient_Item {
    return new UsCoreMedication_Ingredient_Item().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication_Ingredient_Item | PlainMessage<UsCoreMedication_Ingredient_Item> | undefined, b: UsCoreMedication_Ingredient_Item | PlainMessage<UsCoreMedication_Ingredient_Item> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication_Ingredient_Item, a, b);
  }
}

/**
 * Details about packaged medications
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication.Package
 */
export class UsCoreMedication_Package extends Message<UsCoreMedication_Package> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * E.g. box, vial, blister-pack
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept container = 4;
   */
  container?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreMedication.Package.Content content = 5;
   */
  content: UsCoreMedication_Package_Content[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreMedication.Package.Batch batch = 6;
   */
  batch: UsCoreMedication_Package_Batch[] = [];

  constructor(data?: PartialMessage<UsCoreMedication_Package>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication.Package";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "container", kind: "message", T: CodeableConcept },
    { no: 5, name: "content", kind: "message", T: UsCoreMedication_Package_Content, repeated: true },
    { no: 6, name: "batch", kind: "message", T: UsCoreMedication_Package_Batch, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication_Package {
    return new UsCoreMedication_Package().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication_Package {
    return new UsCoreMedication_Package().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication_Package {
    return new UsCoreMedication_Package().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication_Package | PlainMessage<UsCoreMedication_Package> | undefined, b: UsCoreMedication_Package | PlainMessage<UsCoreMedication_Package> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication_Package, a, b);
  }
}

/**
 * What is  in the package
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication.Package.Content
 */
export class UsCoreMedication_Package_Content extends Message<UsCoreMedication_Package_Content> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item item = 4;
   */
  item?: UsCoreMedication_Package_Content_Item;

  /**
   * Quantity present in the package
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity amount = 5;
   */
  amount?: SimpleQuantity;

  constructor(data?: PartialMessage<UsCoreMedication_Package_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication.Package.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: UsCoreMedication_Package_Content_Item },
    { no: 5, name: "amount", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication_Package_Content {
    return new UsCoreMedication_Package_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication_Package_Content {
    return new UsCoreMedication_Package_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication_Package_Content {
    return new UsCoreMedication_Package_Content().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication_Package_Content | PlainMessage<UsCoreMedication_Package_Content> | undefined, b: UsCoreMedication_Package_Content | PlainMessage<UsCoreMedication_Package_Content> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication_Package_Content, a, b);
  }
}

/**
 * The item in the package
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item
 */
export class UsCoreMedication_Package_Content_Item extends Message<UsCoreMedication_Package_Content_Item> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item.item
   */
  item: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreMedication_Package_Content_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication.Package.Content.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "item" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "item" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication_Package_Content_Item {
    return new UsCoreMedication_Package_Content_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication_Package_Content_Item {
    return new UsCoreMedication_Package_Content_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication_Package_Content_Item {
    return new UsCoreMedication_Package_Content_Item().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication_Package_Content_Item | PlainMessage<UsCoreMedication_Package_Content_Item> | undefined, b: UsCoreMedication_Package_Content_Item | PlainMessage<UsCoreMedication_Package_Content_Item> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication_Package_Content_Item, a, b);
  }
}

/**
 * Identifies a single production run
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedication.Package.Batch
 */
export class UsCoreMedication_Package_Batch extends Message<UsCoreMedication_Package_Batch> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier assigned to batch
   *
   * @generated from field: google.fhir.stu3.proto.String lot_number = 4;
   */
  lotNumber?: String;

  /**
   * When batch will expire
   *
   * @generated from field: google.fhir.stu3.proto.DateTime expiration_date = 5;
   */
  expirationDate?: DateTime;

  constructor(data?: PartialMessage<UsCoreMedication_Package_Batch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedication.Package.Batch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "lot_number", kind: "message", T: String },
    { no: 5, name: "expiration_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedication_Package_Batch {
    return new UsCoreMedication_Package_Batch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedication_Package_Batch {
    return new UsCoreMedication_Package_Batch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedication_Package_Batch {
    return new UsCoreMedication_Package_Batch().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedication_Package_Batch | PlainMessage<UsCoreMedication_Package_Batch> | undefined, b: UsCoreMedication_Package_Batch | PlainMessage<UsCoreMedication_Package_Batch> | undefined): boolean {
    return proto3.util.equals(UsCoreMedication_Package_Batch, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Medication Request
 * Profile. US Core Medication Request Profile. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationrequest
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationrequest
 */
export class UsCoreMedicationrequest extends Message<UsCoreMedicationrequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this request
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.stu3.proto.Identifier group_identifier = 12;
   */
  groupIdentifier?: Identifier;

  /**
   * active | on-hold | cancelled | completed | entered-in-error | stopped |
   * draft | unknown
   *
   * @generated from field: google.fhir.stu3.proto.MedicationRequestStatusCode status = 13;
   */
  status?: MedicationRequestStatusCode;

  /**
   * proposal | plan | order | instance-order
   *
   * @generated from field: google.fhir.stu3.proto.MedicationRequestIntentCode intent = 14;
   */
  intent?: MedicationRequestIntentCode;

  /**
   * Type of medication usage
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 15;
   */
  category?: CodeableConcept;

  /**
   * routine | urgent | stat | asap
   *
   * @generated from field: google.fhir.stu3.proto.MedicationRequestPriorityCode priority = 16;
   */
  priority?: MedicationRequestPriorityCode;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication medication = 17;
   */
  medication?: UsCoreMedicationrequest_Medication;

  /**
   * Who or group medication request is for
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Created during encounter/admission/stay
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 19;
   */
  context?: Reference;

  /**
   * Information to support ordering of the medication
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference supporting_information = 20;
   */
  supportingInformation: Reference[] = [];

  /**
   * When request was initially authored
   *
   * @generated from field: google.fhir.stu3.proto.DateTime authored_on = 21;
   */
  authoredOn?: DateTime;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester requester = 22;
   */
  requester?: UsCoreMedicationrequest_Requester;

  /**
   * Person who entered the request
   *
   * @generated from field: google.fhir.stu3.proto.Reference recorder = 23;
   */
  recorder?: Reference;

  /**
   * Reason or indication for writing the prescription
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 24;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or Observation that supports why the prescription is being
   * written
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 25;
   */
  reasonReference: Reference[] = [];

  /**
   * Information about the prescription
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * How the medication should be taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.Dosage dosage_instruction = 27;
   */
  dosageInstruction: Dosage[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest dispense_request = 28;
   */
  dispenseRequest?: UsCoreMedicationrequest_DispenseRequest;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution substitution = 29;
   */
  substitution?: UsCoreMedicationrequest_Substitution;

  /**
   * An order/prescription that is being replaced
   *
   * @generated from field: google.fhir.stu3.proto.Reference prior_prescription = 30;
   */
  priorPrescription?: Reference;

  /**
   * Clinical Issue with action
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference detected_issue = 31;
   */
  detectedIssue: Reference[] = [];

  /**
   * A list of events of interest in the lifecycle
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference event_history = 32;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreMedicationrequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationrequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "group_identifier", kind: "message", T: Identifier },
    { no: 13, name: "status", kind: "message", T: MedicationRequestStatusCode },
    { no: 14, name: "intent", kind: "message", T: MedicationRequestIntentCode },
    { no: 15, name: "category", kind: "message", T: CodeableConcept },
    { no: 16, name: "priority", kind: "message", T: MedicationRequestPriorityCode },
    { no: 17, name: "medication", kind: "message", T: UsCoreMedicationrequest_Medication },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "context", kind: "message", T: Reference },
    { no: 20, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "authored_on", kind: "message", T: DateTime },
    { no: 22, name: "requester", kind: "message", T: UsCoreMedicationrequest_Requester },
    { no: 23, name: "recorder", kind: "message", T: Reference },
    { no: 24, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "dosage_instruction", kind: "message", T: Dosage, repeated: true },
    { no: 28, name: "dispense_request", kind: "message", T: UsCoreMedicationrequest_DispenseRequest },
    { no: 29, name: "substitution", kind: "message", T: UsCoreMedicationrequest_Substitution },
    { no: 30, name: "prior_prescription", kind: "message", T: Reference },
    { no: 31, name: "detected_issue", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationrequest {
    return new UsCoreMedicationrequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest {
    return new UsCoreMedicationrequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest {
    return new UsCoreMedicationrequest().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationrequest | PlainMessage<UsCoreMedicationrequest> | undefined, b: UsCoreMedicationrequest | PlainMessage<UsCoreMedicationrequest> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationrequest, a, b);
  }
}

/**
 * Medication to be taken
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication
 */
export class UsCoreMedicationrequest_Medication extends Message<UsCoreMedicationrequest_Medication> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication.medication
   */
  medication: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreMedicationrequest_Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationrequest.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "medication" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "medication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationrequest_Medication {
    return new UsCoreMedicationrequest_Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_Medication {
    return new UsCoreMedicationrequest_Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_Medication {
    return new UsCoreMedicationrequest_Medication().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationrequest_Medication | PlainMessage<UsCoreMedicationrequest_Medication> | undefined, b: UsCoreMedicationrequest_Medication | PlainMessage<UsCoreMedicationrequest_Medication> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationrequest_Medication, a, b);
  }
}

/**
 * Who/What requested the Request
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester
 */
export class UsCoreMedicationrequest_Requester extends Message<UsCoreMedicationrequest_Requester> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Who ordered the initial medication(s)
   *
   * @generated from field: google.fhir.stu3.proto.Reference agent = 4;
   */
  agent?: Reference;

  /**
   * Organization agent is acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<UsCoreMedicationrequest_Requester>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationrequest.Requester";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "agent", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationrequest_Requester {
    return new UsCoreMedicationrequest_Requester().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_Requester {
    return new UsCoreMedicationrequest_Requester().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_Requester {
    return new UsCoreMedicationrequest_Requester().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationrequest_Requester | PlainMessage<UsCoreMedicationrequest_Requester> | undefined, b: UsCoreMedicationrequest_Requester | PlainMessage<UsCoreMedicationrequest_Requester> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationrequest_Requester, a, b);
  }
}

/**
 * Medication supply authorization
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest
 */
export class UsCoreMedicationrequest_DispenseRequest extends Message<UsCoreMedicationrequest_DispenseRequest> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Time period supply is authorized for
   *
   * @generated from field: google.fhir.stu3.proto.Period validity_period = 4;
   */
  validityPeriod?: Period;

  /**
   * Number of refills authorized
   *
   * @generated from field: google.fhir.stu3.proto.PositiveInt number_of_repeats_allowed = 5;
   */
  numberOfRepeatsAllowed?: PositiveInt;

  /**
   * Amount of medication to supply per dispense
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Number of days supply per dispense
   *
   * @generated from field: google.fhir.stu3.proto.Duration expected_supply_duration = 7;
   */
  expectedSupplyDuration?: Duration;

  /**
   * Intended dispenser
   *
   * @generated from field: google.fhir.stu3.proto.Reference performer = 8;
   */
  performer?: Reference;

  constructor(data?: PartialMessage<UsCoreMedicationrequest_DispenseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationrequest.DispenseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "validity_period", kind: "message", T: Period },
    { no: 5, name: "number_of_repeats_allowed", kind: "message", T: PositiveInt },
    { no: 6, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 7, name: "expected_supply_duration", kind: "message", T: Duration },
    { no: 8, name: "performer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationrequest_DispenseRequest {
    return new UsCoreMedicationrequest_DispenseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_DispenseRequest {
    return new UsCoreMedicationrequest_DispenseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_DispenseRequest {
    return new UsCoreMedicationrequest_DispenseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationrequest_DispenseRequest | PlainMessage<UsCoreMedicationrequest_DispenseRequest> | undefined, b: UsCoreMedicationrequest_DispenseRequest | PlainMessage<UsCoreMedicationrequest_DispenseRequest> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationrequest_DispenseRequest, a, b);
  }
}

/**
 * Any restrictions on medication substitution
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution
 */
export class UsCoreMedicationrequest_Substitution extends Message<UsCoreMedicationrequest_Substitution> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether substitution is allowed or not
   *
   * @generated from field: google.fhir.stu3.proto.Boolean allowed = 4;
   */
  allowed?: Boolean;

  /**
   * Why should (not) substitution be made
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  constructor(data?: PartialMessage<UsCoreMedicationrequest_Substitution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationrequest.Substitution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "allowed", kind: "message", T: Boolean },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationrequest_Substitution {
    return new UsCoreMedicationrequest_Substitution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_Substitution {
    return new UsCoreMedicationrequest_Substitution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationrequest_Substitution {
    return new UsCoreMedicationrequest_Substitution().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationrequest_Substitution | PlainMessage<UsCoreMedicationrequest_Substitution> | undefined, b: UsCoreMedicationrequest_Substitution | PlainMessage<UsCoreMedicationrequest_Substitution> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationrequest_Substitution, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Medication Statement
 * Profile. US Core Medication Statement Profile. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationstatement
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationstatement
 */
export class UsCoreMedicationstatement extends Message<UsCoreMedicationstatement> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfils plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 11;
   */
  partOf: Reference[] = [];

  /**
   * Encounter / Episode associated with MedicationStatement
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 12;
   */
  context?: Reference;

  /**
   * active | completed | entered-in-error | intended | stopped | on-hold
   *
   * @generated from field: google.fhir.stu3.proto.MedicationStatementStatusCode status = 13;
   */
  status?: MedicationStatementStatusCode;

  /**
   * Type of medication usage
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 14;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication medication = 15;
   */
  medication?: UsCoreMedicationstatement_Medication;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective effective = 16;
   */
  effective?: UsCoreMedicationstatement_Effective;

  /**
   * When the statement was asserted?
   *
   * @generated from field: google.fhir.stu3.proto.DateTime date_asserted = 17;
   */
  dateAsserted?: DateTime;

  /**
   * Person or organization that provided the information about the taking of
   * this medication
   *
   * @generated from field: google.fhir.stu3.proto.Reference information_source = 18;
   */
  informationSource?: Reference;

  /**
   * Who is/was taking  the medication
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Additional supporting information
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference derived_from = 20;
   */
  derivedFrom: Reference[] = [];

  /**
   * y | n | unk | na
   *
   * @generated from field: google.fhir.stu3.proto.MedicationStatementTakenCode taken = 21;
   */
  taken?: MedicationStatementTakenCode;

  /**
   * True if asserting medication was not given
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_not_taken = 22;
   */
  reasonNotTaken: CodeableConcept[] = [];

  /**
   * Reason for why the medication is being/was taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 23;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or observation that supports why the medication is being/was
   * taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 24;
   */
  reasonReference: Reference[] = [];

  /**
   * Further information about the statement
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Details of how medication is/was taken or should be taken
   *
   * @generated from field: repeated google.fhir.stu3.proto.Dosage dosage = 26;
   */
  dosage: Dosage[] = [];

  constructor(data?: PartialMessage<UsCoreMedicationstatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationstatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "context", kind: "message", T: Reference },
    { no: 13, name: "status", kind: "message", T: MedicationStatementStatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept },
    { no: 15, name: "medication", kind: "message", T: UsCoreMedicationstatement_Medication },
    { no: 16, name: "effective", kind: "message", T: UsCoreMedicationstatement_Effective },
    { no: 17, name: "date_asserted", kind: "message", T: DateTime },
    { no: 18, name: "information_source", kind: "message", T: Reference },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "taken", kind: "message", T: MedicationStatementTakenCode },
    { no: 22, name: "reason_not_taken", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "dosage", kind: "message", T: Dosage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationstatement {
    return new UsCoreMedicationstatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationstatement {
    return new UsCoreMedicationstatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationstatement {
    return new UsCoreMedicationstatement().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationstatement | PlainMessage<UsCoreMedicationstatement> | undefined, b: UsCoreMedicationstatement | PlainMessage<UsCoreMedicationstatement> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationstatement, a, b);
  }
}

/**
 * What medication was taken
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication
 */
export class UsCoreMedicationstatement_Medication extends Message<UsCoreMedicationstatement_Medication> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication.medication
   */
  medication: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreMedicationstatement_Medication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationstatement.Medication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "medication" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "medication" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationstatement_Medication {
    return new UsCoreMedicationstatement_Medication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationstatement_Medication {
    return new UsCoreMedicationstatement_Medication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationstatement_Medication {
    return new UsCoreMedicationstatement_Medication().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationstatement_Medication | PlainMessage<UsCoreMedicationstatement_Medication> | undefined, b: UsCoreMedicationstatement_Medication | PlainMessage<UsCoreMedicationstatement_Medication> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationstatement_Medication, a, b);
  }
}

/**
 * The date/time or interval when the medication was taken
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective
 */
export class UsCoreMedicationstatement_Effective extends Message<UsCoreMedicationstatement_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreMedicationstatement_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreMedicationstatement.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreMedicationstatement_Effective {
    return new UsCoreMedicationstatement_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreMedicationstatement_Effective {
    return new UsCoreMedicationstatement_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreMedicationstatement_Effective {
    return new UsCoreMedicationstatement_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreMedicationstatement_Effective | PlainMessage<UsCoreMedicationstatement_Effective> | undefined, b: UsCoreMedicationstatement_Effective | PlainMessage<UsCoreMedicationstatement_Effective> | undefined): boolean {
    return proto3.util.equals(UsCoreMedicationstatement_Effective, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Result Observation.
 * US Core Result Observation.
 * See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-observationresults
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults
 */
export class UsCoreObservationresults extends Message<UsCoreObservationresults> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Laboratory Test Name
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreObservationresults.Effective effective = 16;
   */
  effective?: UsCoreObservationresults_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreObservationresults.Value value = 19;
   */
  value?: UsCoreObservationresults_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 27;
   */
  referenceRange: UsCoreObservationresults_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreObservationresults.Related related = 28;
   */
  related: UsCoreObservationresults_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreObservationresults.Component component = 29;
   */
  component: UsCoreObservationresults_Component[] = [];

  constructor(data?: PartialMessage<UsCoreObservationresults>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: UsCoreObservationresults_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: UsCoreObservationresults_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: UsCoreObservationresults_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: UsCoreObservationresults_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: UsCoreObservationresults_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults {
    return new UsCoreObservationresults().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults {
    return new UsCoreObservationresults().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults {
    return new UsCoreObservationresults().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults | PlainMessage<UsCoreObservationresults> | undefined, b: UsCoreObservationresults | PlainMessage<UsCoreObservationresults> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults.Effective
 */
export class UsCoreObservationresults_Effective extends Message<UsCoreObservationresults_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreObservationresults.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreObservationresults_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults_Effective {
    return new UsCoreObservationresults_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Effective {
    return new UsCoreObservationresults_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Effective {
    return new UsCoreObservationresults_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults_Effective | PlainMessage<UsCoreObservationresults_Effective> | undefined, b: UsCoreObservationresults_Effective | PlainMessage<UsCoreObservationresults_Effective> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults_Effective, a, b);
  }
}

/**
 * Result Value
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults.Value
 */
export class UsCoreObservationresults_Value extends Message<UsCoreObservationresults_Value> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreObservationresults.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 6;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 7;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 8;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreObservationresults_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "value" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 6, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 7, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 8, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults_Value {
    return new UsCoreObservationresults_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Value {
    return new UsCoreObservationresults_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Value {
    return new UsCoreObservationresults_Value().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults_Value | PlainMessage<UsCoreObservationresults_Value> | undefined, b: UsCoreObservationresults_Value | PlainMessage<UsCoreObservationresults_Value> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange
 */
export class UsCoreObservationresults_ReferenceRange extends Message<UsCoreObservationresults_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<UsCoreObservationresults_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults_ReferenceRange {
    return new UsCoreObservationresults_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults_ReferenceRange {
    return new UsCoreObservationresults_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults_ReferenceRange {
    return new UsCoreObservationresults_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults_ReferenceRange | PlainMessage<UsCoreObservationresults_ReferenceRange> | undefined, b: UsCoreObservationresults_ReferenceRange | PlainMessage<UsCoreObservationresults_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults_ReferenceRange, a, b);
  }
}

/**
 * Resource related to this observation
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults.Related
 */
export class UsCoreObservationresults_Related extends Message<UsCoreObservationresults_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<UsCoreObservationresults_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults_Related {
    return new UsCoreObservationresults_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Related {
    return new UsCoreObservationresults_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Related {
    return new UsCoreObservationresults_Related().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults_Related | PlainMessage<UsCoreObservationresults_Related> | undefined, b: UsCoreObservationresults_Related | PlainMessage<UsCoreObservationresults_Related> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults_Related, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults.Component
 */
export class UsCoreObservationresults_Component extends Message<UsCoreObservationresults_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value value = 5;
   */
  value?: UsCoreObservationresults_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreObservationresults.ReferenceRange reference_range = 8;
   */
  referenceRange: UsCoreObservationresults_ReferenceRange[] = [];

  constructor(data?: PartialMessage<UsCoreObservationresults_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: UsCoreObservationresults_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: UsCoreObservationresults_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults_Component {
    return new UsCoreObservationresults_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Component {
    return new UsCoreObservationresults_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Component {
    return new UsCoreObservationresults_Component().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults_Component | PlainMessage<UsCoreObservationresults_Component> | undefined, b: UsCoreObservationresults_Component | PlainMessage<UsCoreObservationresults_Component> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value
 */
export class UsCoreObservationresults_Component_Value extends Message<UsCoreObservationresults_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreObservationresults_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreObservationresults.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreObservationresults_Component_Value {
    return new UsCoreObservationresults_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Component_Value {
    return new UsCoreObservationresults_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreObservationresults_Component_Value {
    return new UsCoreObservationresults_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreObservationresults_Component_Value | PlainMessage<UsCoreObservationresults_Component_Value> | undefined, b: UsCoreObservationresults_Component_Value | PlainMessage<UsCoreObservationresults_Component_Value> | undefined): boolean {
    return proto3.util.equals(UsCoreObservationresults_Component_Value, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Organization Profile.
 * US Core Organization Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreOrganization
 */
export class UsCoreOrganization extends Message<UsCoreOrganization> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies this organization  across multiple systems
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether the organization's record is still in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * Kind of organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept type = 11;
   */
  type: CodeableConcept[] = [];

  /**
   * Name used for the organization
   *
   * @generated from field: google.fhir.stu3.proto.String name = 12;
   */
  name?: String;

  /**
   * A list of alternate names that the organization is known as, or was known
   * as in the past
   *
   * @generated from field: repeated google.fhir.stu3.proto.String alias = 13;
   */
  alias: String[] = [];

  /**
   * A contact detail for the organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 14;
   */
  telecom: ContactPoint[] = [];

  /**
   * An address for the organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 15;
   */
  address: Address[] = [];

  /**
   * The organization of which this organization forms a part
   *
   * @generated from field: google.fhir.stu3.proto.Reference part_of = 16;
   */
  partOf?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreOrganization.Contact contact = 17;
   */
  contact: UsCoreOrganization_Contact[] = [];

  /**
   * Technical endpoints providing access to services operated for the
   * organization
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 18;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreOrganization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreOrganization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "alias", kind: "message", T: String, repeated: true },
    { no: 14, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 15, name: "address", kind: "message", T: Address, repeated: true },
    { no: 16, name: "part_of", kind: "message", T: Reference },
    { no: 17, name: "contact", kind: "message", T: UsCoreOrganization_Contact, repeated: true },
    { no: 18, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreOrganization {
    return new UsCoreOrganization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreOrganization {
    return new UsCoreOrganization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreOrganization {
    return new UsCoreOrganization().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreOrganization | PlainMessage<UsCoreOrganization> | undefined, b: UsCoreOrganization | PlainMessage<UsCoreOrganization> | undefined): boolean {
    return proto3.util.equals(UsCoreOrganization, a, b);
  }
}

/**
 * Contact for the organization for a certain purpose
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreOrganization.Contact
 */
export class UsCoreOrganization_Contact extends Message<UsCoreOrganization_Contact> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The type of contact
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept purpose = 4;
   */
  purpose?: CodeableConcept;

  /**
   * A name associated with the contact
   *
   * @generated from field: google.fhir.stu3.proto.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * Contact details (telephone, email, etc.)  for a contact
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Visiting or postal addresses for the contact
   *
   * @generated from field: google.fhir.stu3.proto.Address address = 7;
   */
  address?: Address;

  constructor(data?: PartialMessage<UsCoreOrganization_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreOrganization.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "purpose", kind: "message", T: CodeableConcept },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreOrganization_Contact {
    return new UsCoreOrganization_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreOrganization_Contact {
    return new UsCoreOrganization_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreOrganization_Contact {
    return new UsCoreOrganization_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreOrganization_Contact | PlainMessage<UsCoreOrganization_Contact> | undefined, b: UsCoreOrganization_Contact | PlainMessage<UsCoreOrganization_Contact> | undefined): boolean {
    return proto3.util.equals(UsCoreOrganization_Contact, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Patient Profile.
 * US Core Patient Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePatient
 */
export class UsCorePatient extends Message<UsCorePatient> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for this patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this patient's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * A name associated with the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.HumanName name = 11;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the individual
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 12;
   */
  telecom: ContactPoint[] = [];

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 13;
   */
  gender?: AdministrativeGenderCode;

  /**
   * The date of birth for the individual
   *
   * @generated from field: google.fhir.stu3.proto.Date birth_date = 14;
   */
  birthDate?: Date;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCorePatient.Deceased deceased = 15;
   */
  deceased?: UsCorePatient_Deceased;

  /**
   * Addresses for the individual
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 16;
   */
  address: Address[] = [];

  /**
   * Marital (civil) status of a patient
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept marital_status = 17;
   */
  maritalStatus?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCorePatient.MultipleBirth multiple_birth = 18;
   */
  multipleBirth?: UsCorePatient_MultipleBirth;

  /**
   * Image of the patient
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment photo = 19;
   */
  photo: Attachment[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCorePatient.Contact contact = 20;
   */
  contact: UsCorePatient_Contact[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCorePatient.Communication communication = 22;
   */
  communication: UsCorePatient_Communication[] = [];

  /**
   * Patient's nominated primary care provider
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference general_practitioner = 23;
   */
  generalPractitioner: Reference[] = [];

  /**
   * Organization that is the custodian of the patient record
   *
   * @generated from field: google.fhir.stu3.proto.Reference managing_organization = 24;
   */
  managingOrganization?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCorePatient.Link link = 25;
   */
  link: UsCorePatient_Link[] = [];

  /**
   * Extension
   *
   * @generated from field: google.fhir.stu3.uscore.PatientUSCoreRaceExtension race = 26;
   */
  race?: PatientUSCoreRaceExtension;

  /**
   * Extension
   *
   * @generated from field: google.fhir.stu3.uscore.PatientUSCoreEthnicityExtension ethnicity = 27;
   */
  ethnicity?: PatientUSCoreEthnicityExtension;

  /**
   * Extension
   *
   * @generated from field: google.fhir.stu3.uscore.UsCoreBirthSexCode birthsex = 28;
   */
  birthsex?: UsCoreBirthSexCode;

  constructor(data?: PartialMessage<UsCorePatient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePatient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 12, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 13, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 14, name: "birth_date", kind: "message", T: Date },
    { no: 15, name: "deceased", kind: "message", T: UsCorePatient_Deceased },
    { no: 16, name: "address", kind: "message", T: Address, repeated: true },
    { no: 17, name: "marital_status", kind: "message", T: CodeableConcept },
    { no: 18, name: "multiple_birth", kind: "message", T: UsCorePatient_MultipleBirth },
    { no: 19, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 20, name: "contact", kind: "message", T: UsCorePatient_Contact, repeated: true },
    { no: 22, name: "communication", kind: "message", T: UsCorePatient_Communication, repeated: true },
    { no: 23, name: "general_practitioner", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "managing_organization", kind: "message", T: Reference },
    { no: 25, name: "link", kind: "message", T: UsCorePatient_Link, repeated: true },
    { no: 26, name: "race", kind: "message", T: PatientUSCoreRaceExtension },
    { no: 27, name: "ethnicity", kind: "message", T: PatientUSCoreEthnicityExtension },
    { no: 28, name: "birthsex", kind: "message", T: UsCoreBirthSexCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePatient {
    return new UsCorePatient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePatient {
    return new UsCorePatient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePatient {
    return new UsCorePatient().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePatient | PlainMessage<UsCorePatient> | undefined, b: UsCorePatient | PlainMessage<UsCorePatient> | undefined): boolean {
    return proto3.util.equals(UsCorePatient, a, b);
  }
}

/**
 * Indicates if the individual is deceased or not
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePatient.Deceased
 */
export class UsCorePatient_Deceased extends Message<UsCorePatient_Deceased> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCorePatient.Deceased.deceased
   */
  deceased: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCorePatient_Deceased>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePatient.Deceased";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "deceased" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "deceased" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePatient_Deceased {
    return new UsCorePatient_Deceased().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePatient_Deceased {
    return new UsCorePatient_Deceased().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePatient_Deceased {
    return new UsCorePatient_Deceased().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePatient_Deceased | PlainMessage<UsCorePatient_Deceased> | undefined, b: UsCorePatient_Deceased | PlainMessage<UsCorePatient_Deceased> | undefined): boolean {
    return proto3.util.equals(UsCorePatient_Deceased, a, b);
  }
}

/**
 * Whether patient is part of a multiple birth
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePatient.MultipleBirth
 */
export class UsCorePatient_MultipleBirth extends Message<UsCorePatient_MultipleBirth> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCorePatient.MultipleBirth.multiple_birth
   */
  multipleBirth: {
    /**
     * @generated from field: google.fhir.stu3.proto.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Integer integer = 2;
     */
    value: Integer;
    case: "integer";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCorePatient_MultipleBirth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePatient.MultipleBirth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "multiple_birth" },
    { no: 2, name: "integer", kind: "message", T: Integer, oneof: "multiple_birth" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePatient_MultipleBirth {
    return new UsCorePatient_MultipleBirth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePatient_MultipleBirth {
    return new UsCorePatient_MultipleBirth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePatient_MultipleBirth {
    return new UsCorePatient_MultipleBirth().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePatient_MultipleBirth | PlainMessage<UsCorePatient_MultipleBirth> | undefined, b: UsCorePatient_MultipleBirth | PlainMessage<UsCorePatient_MultipleBirth> | undefined): boolean {
    return proto3.util.equals(UsCorePatient_MultipleBirth, a, b);
  }
}

/**
 * A contact party (e.g. guardian, partner, friend) for the patient
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePatient.Contact
 */
export class UsCorePatient_Contact extends Message<UsCorePatient_Contact> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The kind of relationship
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept relationship = 4;
   */
  relationship: CodeableConcept[] = [];

  /**
   * A name associated with the contact person
   *
   * @generated from field: google.fhir.stu3.proto.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Address for the contact person
   *
   * @generated from field: google.fhir.stu3.proto.Address address = 7;
   */
  address?: Address;

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 8;
   */
  gender?: AdministrativeGenderCode;

  /**
   * Organization that is associated with the contact
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 9;
   */
  organization?: Reference;

  /**
   * The period during which this contact person or organization is valid to
   * be contacted relating to this patient
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 10;
   */
  period?: Period;

  constructor(data?: PartialMessage<UsCorePatient_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePatient.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "relationship", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
    { no: 8, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 9, name: "organization", kind: "message", T: Reference },
    { no: 10, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePatient_Contact {
    return new UsCorePatient_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePatient_Contact {
    return new UsCorePatient_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePatient_Contact {
    return new UsCorePatient_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePatient_Contact | PlainMessage<UsCorePatient_Contact> | undefined, b: UsCorePatient_Contact | PlainMessage<UsCorePatient_Contact> | undefined): boolean {
    return proto3.util.equals(UsCorePatient_Contact, a, b);
  }
}

/**
 * A list of Languages which may be used to communicate with the patient about
 * his or her health
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePatient.Communication
 */
export class UsCorePatient_Communication extends Message<UsCorePatient_Communication> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The language which can be used to communicate with the patient about his
   * or her health
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept language = 4;
   */
  language?: CodeableConcept;

  /**
   * Language preference indicator
   *
   * @generated from field: google.fhir.stu3.proto.Boolean preferred = 5;
   */
  preferred?: Boolean;

  constructor(data?: PartialMessage<UsCorePatient_Communication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePatient.Communication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: CodeableConcept },
    { no: 5, name: "preferred", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePatient_Communication {
    return new UsCorePatient_Communication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePatient_Communication {
    return new UsCorePatient_Communication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePatient_Communication {
    return new UsCorePatient_Communication().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePatient_Communication | PlainMessage<UsCorePatient_Communication> | undefined, b: UsCorePatient_Communication | PlainMessage<UsCorePatient_Communication> | undefined): boolean {
    return proto3.util.equals(UsCorePatient_Communication, a, b);
  }
}

/**
 * Link to another patient resource that concerns the same actual person
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePatient.Link
 */
export class UsCorePatient_Link extends Message<UsCorePatient_Link> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The other patient or related person resource that the link refers to
   *
   * @generated from field: google.fhir.stu3.proto.Reference other = 4;
   */
  other?: Reference;

  /**
   * replaced-by | replaces | refer | seealso - type of link
   *
   * @generated from field: google.fhir.stu3.proto.LinkTypeCode type = 5;
   */
  type?: LinkTypeCode;

  constructor(data?: PartialMessage<UsCorePatient_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePatient.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "other", kind: "message", T: Reference },
    { no: 5, name: "type", kind: "message", T: LinkTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePatient_Link {
    return new UsCorePatient_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePatient_Link {
    return new UsCorePatient_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePatient_Link {
    return new UsCorePatient_Link().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePatient_Link | PlainMessage<UsCorePatient_Link> | undefined, b: UsCorePatient_Link | PlainMessage<UsCorePatient_Link> | undefined): boolean {
    return proto3.util.equals(UsCorePatient_Link, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Practitioner.
 * US Core Practitioner.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePractitioner
 */
export class UsCorePractitioner extends Message<UsCorePractitioner> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * A identifier for the person as this agent
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this practitioner's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * The name(s) associated with the practitioner
   *
   * @generated from field: google.fhir.stu3.proto.HumanName name = 11;
   */
  name?: HumanName;

  /**
   * A contact detail for the practitioner (that apply to all roles)
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 12;
   */
  telecom: ContactPoint[] = [];

  /**
   * Address(es) of the practitioner that are not role specific (typically home
   * address)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Address address = 13;
   */
  address: Address[] = [];

  /**
   * male | female | other | unknown
   *
   * @generated from field: google.fhir.stu3.proto.AdministrativeGenderCode gender = 14;
   */
  gender?: AdministrativeGenderCode;

  /**
   * The date  on which the practitioner was born
   *
   * @generated from field: google.fhir.stu3.proto.Date birth_date = 15;
   */
  birthDate?: Date;

  /**
   * Image of the person
   *
   * @generated from field: repeated google.fhir.stu3.proto.Attachment photo = 16;
   */
  photo: Attachment[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCorePractitioner.Qualification qualification = 17;
   */
  qualification: UsCorePractitioner_Qualification[] = [];

  /**
   * A language the practitioner is able to use in patient communication
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept communication = 18;
   */
  communication: CodeableConcept[] = [];

  constructor(data?: PartialMessage<UsCorePractitioner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePractitioner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "name", kind: "message", T: HumanName },
    { no: 12, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 13, name: "address", kind: "message", T: Address, repeated: true },
    { no: 14, name: "gender", kind: "message", T: AdministrativeGenderCode },
    { no: 15, name: "birth_date", kind: "message", T: Date },
    { no: 16, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 17, name: "qualification", kind: "message", T: UsCorePractitioner_Qualification, repeated: true },
    { no: 18, name: "communication", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePractitioner {
    return new UsCorePractitioner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePractitioner {
    return new UsCorePractitioner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePractitioner {
    return new UsCorePractitioner().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePractitioner | PlainMessage<UsCorePractitioner> | undefined, b: UsCorePractitioner | PlainMessage<UsCorePractitioner> | undefined): boolean {
    return proto3.util.equals(UsCorePractitioner, a, b);
  }
}

/**
 * Qualifications obtained by training and certification
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePractitioner.Qualification
 */
export class UsCorePractitioner_Qualification extends Message<UsCorePractitioner_Qualification> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for this qualification for the practitioner
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 4;
   */
  identifier: Identifier[] = [];

  /**
   * Coded representation of the qualification
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Period during which the qualification is valid
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 6;
   */
  period?: Period;

  /**
   * Organization that regulates and issues the qualification
   *
   * @generated from field: google.fhir.stu3.proto.Reference issuer = 7;
   */
  issuer?: Reference;

  constructor(data?: PartialMessage<UsCorePractitioner_Qualification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePractitioner.Qualification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "issuer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePractitioner_Qualification {
    return new UsCorePractitioner_Qualification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePractitioner_Qualification {
    return new UsCorePractitioner_Qualification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePractitioner_Qualification {
    return new UsCorePractitioner_Qualification().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePractitioner_Qualification | PlainMessage<UsCorePractitioner_Qualification> | undefined, b: UsCorePractitioner_Qualification | PlainMessage<UsCorePractitioner_Qualification> | undefined): boolean {
    return proto3.util.equals(UsCorePractitioner_Qualification, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core PractitionerRole Profile.
 * US Core PractitionerRole Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitionerrole
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePractitionerrole
 */
export class UsCorePractitionerrole extends Message<UsCorePractitionerrole> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifiers that are specific to a role/location
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this practitioner's record is in active use
   *
   * @generated from field: google.fhir.stu3.proto.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * The period during which the practitioner is authorized to perform in these
   * role(s)
   *
   * @generated from field: google.fhir.stu3.proto.Period period = 11;
   */
  period?: Period;

  /**
   * Practitioner that is able to provide the defined services for the
   * organation
   *
   * @generated from field: google.fhir.stu3.proto.Reference practitioner = 12;
   */
  practitioner?: Reference;

  /**
   * Organization where the roles are available
   *
   * @generated from field: google.fhir.stu3.proto.Reference organization = 13;
   */
  organization?: Reference;

  /**
   * Roles which this practitioner may perform
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * Specific specialty of the practitioner
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept specialty = 15;
   */
  specialty?: CodeableConcept;

  /**
   * The location(s) at which this practitioner provides care
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference location = 16;
   */
  location: Reference[] = [];

  /**
   * The list of healthcare services that this worker provides for this role's
   * Organization/Location(s)
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference healthcare_service = 17;
   */
  healthcareService: Reference[] = [];

  /**
   * Contact details that are specific to the role/location/service
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContactPoint telecom = 18;
   */
  telecom: ContactPoint[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCorePractitionerrole.AvailableTime available_time = 19;
   */
  availableTime: UsCorePractitionerrole_AvailableTime[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCorePractitionerrole.NotAvailable not_available = 20;
   */
  notAvailable: UsCorePractitionerrole_NotAvailable[] = [];

  /**
   * Description of availability exceptions
   *
   * @generated from field: google.fhir.stu3.proto.String availability_exceptions = 21;
   */
  availabilityExceptions?: String;

  /**
   * Technical endpoints providing access to services operated for the
   * practitioner with this role
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference endpoint = 22;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<UsCorePractitionerrole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePractitionerrole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "period", kind: "message", T: Period },
    { no: 12, name: "practitioner", kind: "message", T: Reference },
    { no: 13, name: "organization", kind: "message", T: Reference },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "specialty", kind: "message", T: CodeableConcept },
    { no: 16, name: "location", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "healthcare_service", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 19, name: "available_time", kind: "message", T: UsCorePractitionerrole_AvailableTime, repeated: true },
    { no: 20, name: "not_available", kind: "message", T: UsCorePractitionerrole_NotAvailable, repeated: true },
    { no: 21, name: "availability_exceptions", kind: "message", T: String },
    { no: 22, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePractitionerrole {
    return new UsCorePractitionerrole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePractitionerrole {
    return new UsCorePractitionerrole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePractitionerrole {
    return new UsCorePractitionerrole().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePractitionerrole | PlainMessage<UsCorePractitionerrole> | undefined, b: UsCorePractitionerrole | PlainMessage<UsCorePractitionerrole> | undefined): boolean {
    return proto3.util.equals(UsCorePractitionerrole, a, b);
  }
}

/**
 * Times the Service Site is available
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePractitionerrole.AvailableTime
 */
export class UsCorePractitionerrole_AvailableTime extends Message<UsCorePractitionerrole_AvailableTime> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * mon | tue | wed | thu | fri | sat | sun
   *
   * @generated from field: repeated google.fhir.stu3.proto.DaysOfWeekCode days_of_week = 4;
   */
  daysOfWeek: DaysOfWeekCode[] = [];

  /**
   * Always available? e.g. 24 hour service
   *
   * @generated from field: google.fhir.stu3.proto.Boolean all_day = 5;
   */
  allDay?: Boolean;

  /**
   * Opening time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.stu3.proto.Time available_start_time = 6;
   */
  availableStartTime?: Time;

  /**
   * Closing time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.stu3.proto.Time available_end_time = 7;
   */
  availableEndTime?: Time;

  constructor(data?: PartialMessage<UsCorePractitionerrole_AvailableTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePractitionerrole.AvailableTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "days_of_week", kind: "message", T: DaysOfWeekCode, repeated: true },
    { no: 5, name: "all_day", kind: "message", T: Boolean },
    { no: 6, name: "available_start_time", kind: "message", T: Time },
    { no: 7, name: "available_end_time", kind: "message", T: Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePractitionerrole_AvailableTime {
    return new UsCorePractitionerrole_AvailableTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePractitionerrole_AvailableTime {
    return new UsCorePractitionerrole_AvailableTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePractitionerrole_AvailableTime {
    return new UsCorePractitionerrole_AvailableTime().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePractitionerrole_AvailableTime | PlainMessage<UsCorePractitionerrole_AvailableTime> | undefined, b: UsCorePractitionerrole_AvailableTime | PlainMessage<UsCorePractitionerrole_AvailableTime> | undefined): boolean {
    return proto3.util.equals(UsCorePractitionerrole_AvailableTime, a, b);
  }
}

/**
 * Not available during this time due to provided reason
 *
 * @generated from message google.fhir.stu3.uscore.UsCorePractitionerrole.NotAvailable
 */
export class UsCorePractitionerrole_NotAvailable extends Message<UsCorePractitionerrole_NotAvailable> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reason presented to the user explaining why time not available
   *
   * @generated from field: google.fhir.stu3.proto.String description = 4;
   */
  description?: String;

  /**
   * Service not availablefrom this date
   *
   * @generated from field: google.fhir.stu3.proto.Period during = 5;
   */
  during?: Period;

  constructor(data?: PartialMessage<UsCorePractitionerrole_NotAvailable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCorePractitionerrole.NotAvailable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "during", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCorePractitionerrole_NotAvailable {
    return new UsCorePractitionerrole_NotAvailable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCorePractitionerrole_NotAvailable {
    return new UsCorePractitionerrole_NotAvailable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCorePractitionerrole_NotAvailable {
    return new UsCorePractitionerrole_NotAvailable().fromJsonString(jsonString, options);
  }

  static equals(a: UsCorePractitionerrole_NotAvailable | PlainMessage<UsCorePractitionerrole_NotAvailable> | undefined, b: UsCorePractitionerrole_NotAvailable | PlainMessage<UsCorePractitionerrole_NotAvailable> | undefined): boolean {
    return proto3.util.equals(UsCorePractitionerrole_NotAvailable, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Procedure Profile.
 * US Core Procedure Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-procedure
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreProcedure
 */
export class UsCoreProcedure extends Message<UsCoreProcedure> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Identifiers for this procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference definition = 10;
   */
  definition: Reference[] = [];

  /**
   * A request for this procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * preparation | in-progress | suspended | aborted | completed |
   * entered-in-error | unknown
   *
   * @generated from field: google.fhir.stu3.proto.EventStatusCode status = 13;
   */
  status?: EventStatusCode;

  /**
   * True if procedure was not performed as scheduled
   *
   * @generated from field: google.fhir.stu3.proto.Boolean not_done = 14;
   */
  notDone?: Boolean;

  /**
   * Reason procedure was not performed
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept not_done_reason = 15;
   */
  notDoneReason?: CodeableConcept;

  /**
   * Classification of the procedure
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept category = 16;
   */
  category?: CodeableConcept;

  /**
   * SNOMED-CT | ICD-10 | CPT-4
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 17;
   */
  code?: CodeableConcept;

  /**
   * Who the procedure was performed on
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Encounter or episode associated with the procedure
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 19;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreProcedure.Performed performed = 20;
   */
  performed?: UsCoreProcedure_Performed;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreProcedure.Performer performer = 21;
   */
  performer: UsCoreProcedure_Performer[] = [];

  /**
   * Where the procedure happened
   *
   * @generated from field: google.fhir.stu3.proto.Reference location = 22;
   */
  location?: Reference;

  /**
   * Coded reason procedure performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept reason_code = 23;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition that is the reason the procedure performed
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference reason_reference = 24;
   */
  reasonReference: Reference[] = [];

  /**
   * Target body sites
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept body_site = 25;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * The result of procedure
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept outcome = 26;
   */
  outcome?: CodeableConcept;

  /**
   * Any report resulting from the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference report = 27;
   */
  report: Reference[] = [];

  /**
   * Complication following the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept complication = 28;
   */
  complication: CodeableConcept[] = [];

  /**
   * A condition that is a result of the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference complication_detail = 29;
   */
  complicationDetail: Reference[] = [];

  /**
   * Instructions for follow up
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept follow_up = 30;
   */
  followUp: CodeableConcept[] = [];

  /**
   * Additional information about the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Annotation note = 31;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice focal_device = 32;
   */
  focalDevice: UsCoreProcedure_FocalDevice[] = [];

  /**
   * Items used during procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference used_reference = 33;
   */
  usedReference: Reference[] = [];

  /**
   * Coded items used during the procedure
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept used_code = 34;
   */
  usedCode: CodeableConcept[] = [];

  constructor(data?: PartialMessage<UsCoreProcedure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreProcedure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "definition", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: EventStatusCode },
    { no: 14, name: "not_done", kind: "message", T: Boolean },
    { no: 15, name: "not_done_reason", kind: "message", T: CodeableConcept },
    { no: 16, name: "category", kind: "message", T: CodeableConcept },
    { no: 17, name: "code", kind: "message", T: CodeableConcept },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "context", kind: "message", T: Reference },
    { no: 20, name: "performed", kind: "message", T: UsCoreProcedure_Performed },
    { no: 21, name: "performer", kind: "message", T: UsCoreProcedure_Performer, repeated: true },
    { no: 22, name: "location", kind: "message", T: Reference },
    { no: 23, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 25, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 27, name: "report", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "complication", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "complication_detail", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "follow_up", kind: "message", T: CodeableConcept, repeated: true },
    { no: 31, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 32, name: "focal_device", kind: "message", T: UsCoreProcedure_FocalDevice, repeated: true },
    { no: 33, name: "used_reference", kind: "message", T: Reference, repeated: true },
    { no: 34, name: "used_code", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreProcedure {
    return new UsCoreProcedure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreProcedure {
    return new UsCoreProcedure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreProcedure {
    return new UsCoreProcedure().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreProcedure | PlainMessage<UsCoreProcedure> | undefined, b: UsCoreProcedure | PlainMessage<UsCoreProcedure> | undefined): boolean {
    return proto3.util.equals(UsCoreProcedure, a, b);
  }
}

/**
 * Date/Period the procedure was performed
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreProcedure.Performed
 */
export class UsCoreProcedure_Performed extends Message<UsCoreProcedure_Performed> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreProcedure.Performed.performed
   */
  performed: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreProcedure_Performed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreProcedure.Performed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "performed" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "performed" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreProcedure_Performed {
    return new UsCoreProcedure_Performed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreProcedure_Performed {
    return new UsCoreProcedure_Performed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreProcedure_Performed {
    return new UsCoreProcedure_Performed().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreProcedure_Performed | PlainMessage<UsCoreProcedure_Performed> | undefined, b: UsCoreProcedure_Performed | PlainMessage<UsCoreProcedure_Performed> | undefined): boolean {
    return proto3.util.equals(UsCoreProcedure_Performed, a, b);
  }
}

/**
 * The people who performed the procedure
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreProcedure.Performer
 */
export class UsCoreProcedure_Performer extends Message<UsCoreProcedure_Performer> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The role the actor was in
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * The reference to the practitioner
   *
   * @generated from field: google.fhir.stu3.proto.Reference actor = 5;
   */
  actor?: Reference;

  /**
   * Organization the device or practitioner was acting for
   *
   * @generated from field: google.fhir.stu3.proto.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<UsCoreProcedure_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreProcedure.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreProcedure_Performer {
    return new UsCoreProcedure_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreProcedure_Performer {
    return new UsCoreProcedure_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreProcedure_Performer {
    return new UsCoreProcedure_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreProcedure_Performer | PlainMessage<UsCoreProcedure_Performer> | undefined, b: UsCoreProcedure_Performer | PlainMessage<UsCoreProcedure_Performer> | undefined): boolean {
    return proto3.util.equals(UsCoreProcedure_Performer, a, b);
  }
}

/**
 * Device changed in procedure
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice
 */
export class UsCoreProcedure_FocalDevice extends Message<UsCoreProcedure_FocalDevice> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Kind of change to device
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Device that was changed
   *
   * @generated from field: google.fhir.stu3.proto.Reference manipulated = 5;
   */
  manipulated?: Reference;

  constructor(data?: PartialMessage<UsCoreProcedure_FocalDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreProcedure.FocalDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: CodeableConcept },
    { no: 5, name: "manipulated", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreProcedure_FocalDevice {
    return new UsCoreProcedure_FocalDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreProcedure_FocalDevice {
    return new UsCoreProcedure_FocalDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreProcedure_FocalDevice {
    return new UsCoreProcedure_FocalDevice().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreProcedure_FocalDevice | PlainMessage<UsCoreProcedure_FocalDevice> | undefined, b: UsCoreProcedure_FocalDevice | PlainMessage<UsCoreProcedure_FocalDevice> | undefined): boolean {
    return proto3.util.equals(UsCoreProcedure_FocalDevice, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Profile-resource association
 * extension. Resource that this profile is based on. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-profile-link
 *
 * @generated from message google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension
 */
export class CapabilityStatementProfileResourceAssociationExtension extends Message<CapabilityStatementProfileResourceAssociationExtension> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.stu3.proto.ResourceTypeCode value_code = 3;
   */
  valueCode?: ResourceTypeCode;

  constructor(data?: PartialMessage<CapabilityStatementProfileResourceAssociationExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.CapabilityStatementProfileResourceAssociationExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value_code", kind: "message", T: ResourceTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementProfileResourceAssociationExtension {
    return new CapabilityStatementProfileResourceAssociationExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementProfileResourceAssociationExtension {
    return new CapabilityStatementProfileResourceAssociationExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementProfileResourceAssociationExtension {
    return new CapabilityStatementProfileResourceAssociationExtension().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementProfileResourceAssociationExtension | PlainMessage<CapabilityStatementProfileResourceAssociationExtension> | undefined, b: CapabilityStatementProfileResourceAssociationExtension | PlainMessage<CapabilityStatementProfileResourceAssociationExtension> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementProfileResourceAssociationExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Race Extension.
 * US Core Race Extension.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-race
 *
 * @generated from message google.fhir.stu3.uscore.PatientUSCoreRaceExtension
 */
export class PatientUSCoreRaceExtension extends Message<PatientUSCoreRaceExtension> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * American Indian or Alaska Native|Asian|Black or African American|Native
   * Hawaiian or Other Pacific Islander|White
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding omb_category = 4;
   */
  ombCategory: Coding[] = [];

  /**
   * Extended race codes
   *
   * @generated from field: repeated google.fhir.stu3.proto.Coding detailed = 5;
   */
  detailed: Coding[] = [];

  /**
   * Race Text
   *
   * @generated from field: google.fhir.stu3.proto.String text = 6;
   */
  text?: String;

  constructor(data?: PartialMessage<PatientUSCoreRaceExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.PatientUSCoreRaceExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "omb_category", kind: "message", T: Coding, repeated: true },
    { no: 5, name: "detailed", kind: "message", T: Coding, repeated: true },
    { no: 6, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreRaceExtension {
    return new PatientUSCoreRaceExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension {
    return new PatientUSCoreRaceExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension {
    return new PatientUSCoreRaceExtension().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreRaceExtension | PlainMessage<PatientUSCoreRaceExtension> | undefined, b: PatientUSCoreRaceExtension | PlainMessage<PatientUSCoreRaceExtension> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreRaceExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for US Core Smoking Status
 * Observation Profile. US Core Smoking Status Observation Profile. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-smokingstatus
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus
 */
export class UsCoreSmokingstatus extends Message<UsCoreSmokingstatus> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.stu3.proto.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.stu3.proto.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.stu3.proto.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.stu3.proto.LanguageCode language = 4;
   */
  language?: LanguageCode;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.stu3.proto.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.fhir.stu3.proto.ContainedResource contained = 6;
   */
  contained: ContainedResource[] = [];

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 7;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 8;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Identifier identifier = 9;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference based_on = 10;
   */
  basedOn: Reference[] = [];

  /**
   * registered | preliminary | final | amended +
   *
   * @generated from field: google.fhir.stu3.proto.ObservationStatusCode status = 11;
   */
  status?: ObservationStatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Smoking Status: LOINC 72166-2  = Tobacco smoking status NHIS
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 13;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what this is about
   *
   * @generated from field: google.fhir.stu3.proto.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.stu3.proto.Reference context = 15;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective effective = 16;
   */
  effective?: UsCoreSmokingstatus_Effective;

  /**
   * Date/Time this was made available
   *
   * @generated from field: google.fhir.stu3.proto.Instant issued = 17;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.stu3.proto.Reference performer = 18;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreSmokingstatus.Value value = 19;
   */
  value?: UsCoreSmokingstatus_Value;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 20;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 21;
   */
  interpretation?: CodeableConcept;

  /**
   * Comments about result
   *
   * @generated from field: google.fhir.stu3.proto.String comment = 22;
   */
  comment?: String;

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept body_site = 23;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept method = 24;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.stu3.proto.Reference specimen = 25;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.stu3.proto.Reference device = 26;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 27;
   */
  referenceRange: UsCoreSmokingstatus_ReferenceRange[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreSmokingstatus.Related related = 28;
   */
  related: UsCoreSmokingstatus_Related[] = [];

  /**
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreSmokingstatus.Component component = 29;
   */
  component: UsCoreSmokingstatus_Component[] = [];

  constructor(data?: PartialMessage<UsCoreSmokingstatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: LanguageCode },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: ContainedResource, repeated: true },
    { no: 7, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 8, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 10, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: ObservationStatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "code", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "context", kind: "message", T: Reference },
    { no: 16, name: "effective", kind: "message", T: UsCoreSmokingstatus_Effective },
    { no: 17, name: "issued", kind: "message", T: Instant },
    { no: 18, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "value", kind: "message", T: UsCoreSmokingstatus_Value },
    { no: 20, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 21, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 22, name: "comment", kind: "message", T: String },
    { no: 23, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 24, name: "method", kind: "message", T: CodeableConcept },
    { no: 25, name: "specimen", kind: "message", T: Reference },
    { no: 26, name: "device", kind: "message", T: Reference },
    { no: 27, name: "reference_range", kind: "message", T: UsCoreSmokingstatus_ReferenceRange, repeated: true },
    { no: 28, name: "related", kind: "message", T: UsCoreSmokingstatus_Related, repeated: true },
    { no: 29, name: "component", kind: "message", T: UsCoreSmokingstatus_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus {
    return new UsCoreSmokingstatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus {
    return new UsCoreSmokingstatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus {
    return new UsCoreSmokingstatus().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus | PlainMessage<UsCoreSmokingstatus> | undefined, b: UsCoreSmokingstatus | PlainMessage<UsCoreSmokingstatus> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective
 */
export class UsCoreSmokingstatus_Effective extends Message<UsCoreSmokingstatus_Effective> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective.effective
   */
  effective: {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreSmokingstatus_Effective>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus.Effective";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "effective" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "effective" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus_Effective {
    return new UsCoreSmokingstatus_Effective().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Effective {
    return new UsCoreSmokingstatus_Effective().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Effective {
    return new UsCoreSmokingstatus_Effective().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus_Effective | PlainMessage<UsCoreSmokingstatus_Effective> | undefined, b: UsCoreSmokingstatus_Effective | PlainMessage<UsCoreSmokingstatus_Effective> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus_Effective, a, b);
  }
}

/**
 * Coded Responses from Smoking Status Value Set
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus.Value
 */
export class UsCoreSmokingstatus_Value extends Message<UsCoreSmokingstatus_Value> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreSmokingstatus.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreSmokingstatus_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus_Value {
    return new UsCoreSmokingstatus_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Value {
    return new UsCoreSmokingstatus_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Value {
    return new UsCoreSmokingstatus_Value().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus_Value | PlainMessage<UsCoreSmokingstatus_Value> | undefined, b: UsCoreSmokingstatus_Value | PlainMessage<UsCoreSmokingstatus_Value> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus_Value, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange
 */
export class UsCoreSmokingstatus_ReferenceRange extends Message<UsCoreSmokingstatus_ReferenceRange> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.stu3.proto.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.stu3.proto.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.stu3.proto.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<UsCoreSmokingstatus_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus_ReferenceRange {
    return new UsCoreSmokingstatus_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_ReferenceRange {
    return new UsCoreSmokingstatus_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_ReferenceRange {
    return new UsCoreSmokingstatus_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus_ReferenceRange | PlainMessage<UsCoreSmokingstatus_ReferenceRange> | undefined, b: UsCoreSmokingstatus_ReferenceRange | PlainMessage<UsCoreSmokingstatus_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus_ReferenceRange, a, b);
  }
}

/**
 * Resource related to this observation
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus.Related
 */
export class UsCoreSmokingstatus_Related extends Message<UsCoreSmokingstatus_Related> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * has-member | derived-from | sequel-to | replaces | qualified-by |
   * interfered-by
   *
   * @generated from field: google.fhir.stu3.proto.ObservationRelationshipTypeCode type = 4;
   */
  type?: ObservationRelationshipTypeCode;

  /**
   * Resource that is related to this one
   *
   * @generated from field: google.fhir.stu3.proto.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<UsCoreSmokingstatus_Related>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus.Related";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ObservationRelationshipTypeCode },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus_Related {
    return new UsCoreSmokingstatus_Related().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Related {
    return new UsCoreSmokingstatus_Related().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Related {
    return new UsCoreSmokingstatus_Related().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus_Related | PlainMessage<UsCoreSmokingstatus_Related> | undefined, b: UsCoreSmokingstatus_Related | PlainMessage<UsCoreSmokingstatus_Related> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus_Related, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus.Component
 */
export class UsCoreSmokingstatus_Component extends Message<UsCoreSmokingstatus_Component> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.stu3.proto.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.stu3.proto.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value value = 5;
   */
  value?: UsCoreSmokingstatus_Component_Value;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: google.fhir.stu3.proto.CodeableConcept interpretation = 7;
   */
  interpretation?: CodeableConcept;

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.stu3.uscore.UsCoreSmokingstatus.ReferenceRange reference_range = 8;
   */
  referenceRange: UsCoreSmokingstatus_ReferenceRange[] = [];

  constructor(data?: PartialMessage<UsCoreSmokingstatus_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: UsCoreSmokingstatus_Component_Value },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept },
    { no: 8, name: "reference_range", kind: "message", T: UsCoreSmokingstatus_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus_Component {
    return new UsCoreSmokingstatus_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Component {
    return new UsCoreSmokingstatus_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Component {
    return new UsCoreSmokingstatus_Component().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus_Component | PlainMessage<UsCoreSmokingstatus_Component> | undefined, b: UsCoreSmokingstatus_Component | PlainMessage<UsCoreSmokingstatus_Component> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value
 */
export class UsCoreSmokingstatus_Component_Value extends Message<UsCoreSmokingstatus_Component_Value> {
  /**
   * @generated from oneof google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value.value
   */
  value: {
    /**
     * @generated from field: google.fhir.stu3.proto.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Ratio ratio = 5;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.SampledData sampled_data = 6;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Attachment attachment = 7;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Time time = 8;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.DateTime date_time = 9;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.stu3.proto.Period period = 10;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreSmokingstatus_Component_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.stu3.uscore.UsCoreSmokingstatus.Component.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "value" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "value" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "value" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "value" },
    { no: 5, name: "ratio", kind: "message", T: Ratio, oneof: "value" },
    { no: 6, name: "sampled_data", kind: "message", T: SampledData, oneof: "value" },
    { no: 7, name: "attachment", kind: "message", T: Attachment, oneof: "value" },
    { no: 8, name: "time", kind: "message", T: Time, oneof: "value" },
    { no: 9, name: "date_time", kind: "message", T: DateTime, oneof: "value" },
    { no: 10, name: "period", kind: "message", T: Period, oneof: "value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreSmokingstatus_Component_Value {
    return new UsCoreSmokingstatus_Component_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Component_Value {
    return new UsCoreSmokingstatus_Component_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreSmokingstatus_Component_Value {
    return new UsCoreSmokingstatus_Component_Value().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreSmokingstatus_Component_Value | PlainMessage<UsCoreSmokingstatus_Component_Value> | undefined, b: UsCoreSmokingstatus_Component_Value | PlainMessage<UsCoreSmokingstatus_Component_Value> | undefined): boolean {
    return proto3.util.equals(UsCoreSmokingstatus_Component_Value, a, b);
  }
}

