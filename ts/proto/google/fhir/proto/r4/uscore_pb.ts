//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/uscore.proto (package google.fhir.r4.uscore, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Canonical, Code, CodeableConcept, Coding, CodingWithFixedCode, ContactPoint, Date, DateTime, Decimal, Dosage, Duration, Extension, HumanName, Id, Identifier, Instant, Integer, Meta, Narrative, Period, PositiveInt, Quantity, Range, Ratio, Reference, SampledData, Signature, SimpleQuantity, String, Time, Timing, UnsignedInt, Uri } from "./core/datatypes_pb.js";
import { BirthSexValueSet_Value, DetailedEthnicityValueSet_Value, DetailedRaceValueSet_Value, OmbEthnicityCategoriesValueSet_Value, OmbRaceCategoriesValueSet_Value, USCoreObservationSmokingStatusStatusValueSet_Value } from "./uscore_codes_pb.js";
import { AdministrativeGenderCode_Value, AllergyIntoleranceCategoryCode_Value, AllergyIntoleranceCriticalityCode_Value, AllergyIntoleranceSeverityCode_Value, AllergyIntoleranceTypeCode_Value, CarePlanActivityStatusCode_Value, CareTeamStatusCode_Value, CompositionStatusCode_Value, DaysOfWeekCode_Value, DeviceNameTypeCode_Value, DiagnosticReportStatusCode_Value, DocumentReferenceStatusCode_Value, DocumentRelationshipTypeCode_Value, EncounterLocationStatusCode_Value, EncounterStatusCode_Value, EventStatusCode_Value, FHIRDeviceStatusCode_Value, GoalLifecycleStatusCode_Value, LinkTypeCode_Value, LocationModeCode_Value, LocationStatusCode_Value, MedicationRequestIntentCode_Value, MedicationrequestStatusCode_Value, MedicationStatusCode_Value, ObservationStatusCode_Value, ProvenanceEntityRoleCode_Value, RequestPriorityCode_Value, RequestStatusCode_Value, UDIEntryTypeCode_Value } from "./core/codes_pb.js";
import { CarePlanActivityKindValueSet_Value, CarePlanIntentValueSet_Value, ImmunizationStatusCodesValueSet_Value } from "./core/valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for USCoreBirthSexExtension.
 * Extension.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreBirthSexExtension
 */
export class PatientUSCoreBirthSexExtension extends Message<PatientUSCoreBirthSexExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreBirthSexExtension.ValueCode value_code = 3;
   */
  valueCode?: PatientUSCoreBirthSexExtension_ValueCode;

  constructor(data?: PartialMessage<PatientUSCoreBirthSexExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreBirthSexExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value_code", kind: "message", T: PatientUSCoreBirthSexExtension_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreBirthSexExtension {
    return new PatientUSCoreBirthSexExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreBirthSexExtension {
    return new PatientUSCoreBirthSexExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreBirthSexExtension {
    return new PatientUSCoreBirthSexExtension().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreBirthSexExtension | PlainMessage<PatientUSCoreBirthSexExtension> | undefined, b: PatientUSCoreBirthSexExtension | PlainMessage<PatientUSCoreBirthSexExtension> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreBirthSexExtension, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreBirthSexExtension.ValueCode
 */
export class PatientUSCoreBirthSexExtension_ValueCode extends Message<PatientUSCoreBirthSexExtension_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.uscore.BirthSexValueSet.Value value = 1;
   */
  value = BirthSexValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PatientUSCoreBirthSexExtension_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreBirthSexExtension.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(BirthSexValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreBirthSexExtension_ValueCode {
    return new PatientUSCoreBirthSexExtension_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreBirthSexExtension_ValueCode {
    return new PatientUSCoreBirthSexExtension_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreBirthSexExtension_ValueCode {
    return new PatientUSCoreBirthSexExtension_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreBirthSexExtension_ValueCode | PlainMessage<PatientUSCoreBirthSexExtension_ValueCode> | undefined, b: PatientUSCoreBirthSexExtension_ValueCode | PlainMessage<PatientUSCoreBirthSexExtension_ValueCode> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreBirthSexExtension_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreEthnicityExtension.
 * US Core ethnicity Extension.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreEthnicityExtension
 */
export class PatientUSCoreEthnicityExtension extends Message<PatientUSCoreEthnicityExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.OmbCategoryCoding omb_category = 4;
   */
  ombCategory?: PatientUSCoreEthnicityExtension_OmbCategoryCoding;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.DetailedCoding detailed = 5;
   */
  detailed: PatientUSCoreEthnicityExtension_DetailedCoding[] = [];

  /**
   * ethnicity Text
   *
   * @generated from field: google.fhir.r4.core.String text = 6;
   */
  text?: String;

  constructor(data?: PartialMessage<PatientUSCoreEthnicityExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreEthnicityExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "omb_category", kind: "message", T: PatientUSCoreEthnicityExtension_OmbCategoryCoding },
    { no: 5, name: "detailed", kind: "message", T: PatientUSCoreEthnicityExtension_DetailedCoding, repeated: true },
    { no: 6, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreEthnicityExtension {
    return new PatientUSCoreEthnicityExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension {
    return new PatientUSCoreEthnicityExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension {
    return new PatientUSCoreEthnicityExtension().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreEthnicityExtension | PlainMessage<PatientUSCoreEthnicityExtension> | undefined, b: PatientUSCoreEthnicityExtension | PlainMessage<PatientUSCoreEthnicityExtension> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreEthnicityExtension, a, b);
  }
}

/**
 * Hispanic or Latino|Not Hispanic or Latino
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.OmbCategoryCoding
 */
export class PatientUSCoreEthnicityExtension_OmbCategoryCoding extends Message<PatientUSCoreEthnicityExtension_OmbCategoryCoding> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.String version = 4;
   */
  version?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.OmbCategoryCoding.BoundCode code = 5;
   */
  code?: PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode;

  /**
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  /**
   * @generated from field: google.fhir.r4.core.Boolean user_selected = 7;
   */
  userSelected?: Boolean;

  constructor(data?: PartialMessage<PatientUSCoreEthnicityExtension_OmbCategoryCoding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.OmbCategoryCoding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "version", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "user_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreEthnicityExtension_OmbCategoryCoding {
    return new PatientUSCoreEthnicityExtension_OmbCategoryCoding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_OmbCategoryCoding {
    return new PatientUSCoreEthnicityExtension_OmbCategoryCoding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_OmbCategoryCoding {
    return new PatientUSCoreEthnicityExtension_OmbCategoryCoding().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreEthnicityExtension_OmbCategoryCoding | PlainMessage<PatientUSCoreEthnicityExtension_OmbCategoryCoding> | undefined, b: PatientUSCoreEthnicityExtension_OmbCategoryCoding | PlainMessage<PatientUSCoreEthnicityExtension_OmbCategoryCoding> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreEthnicityExtension_OmbCategoryCoding, a, b);
  }
}

/**
 * @generated from message google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.OmbCategoryCoding.BoundCode
 */
export class PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode extends Message<PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode> {
  /**
   * @generated from field: google.fhir.r4.uscore.OmbEthnicityCategoriesValueSet.Value value = 1;
   */
  value = OmbEthnicityCategoriesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.OmbCategoryCoding.BoundCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OmbEthnicityCategoriesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode {
    return new PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode {
    return new PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode {
    return new PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode | PlainMessage<PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode> | undefined, b: PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode | PlainMessage<PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreEthnicityExtension_OmbCategoryCoding_BoundCode, a, b);
  }
}

/**
 * Extended ethnicity codes
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.DetailedCoding
 */
export class PatientUSCoreEthnicityExtension_DetailedCoding extends Message<PatientUSCoreEthnicityExtension_DetailedCoding> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.String version = 4;
   */
  version?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.DetailedCoding.BoundCode code = 5;
   */
  code?: PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode;

  /**
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  /**
   * @generated from field: google.fhir.r4.core.Boolean user_selected = 7;
   */
  userSelected?: Boolean;

  constructor(data?: PartialMessage<PatientUSCoreEthnicityExtension_DetailedCoding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.DetailedCoding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "version", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "user_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreEthnicityExtension_DetailedCoding {
    return new PatientUSCoreEthnicityExtension_DetailedCoding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_DetailedCoding {
    return new PatientUSCoreEthnicityExtension_DetailedCoding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_DetailedCoding {
    return new PatientUSCoreEthnicityExtension_DetailedCoding().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreEthnicityExtension_DetailedCoding | PlainMessage<PatientUSCoreEthnicityExtension_DetailedCoding> | undefined, b: PatientUSCoreEthnicityExtension_DetailedCoding | PlainMessage<PatientUSCoreEthnicityExtension_DetailedCoding> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreEthnicityExtension_DetailedCoding, a, b);
  }
}

/**
 * @generated from message google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.DetailedCoding.BoundCode
 */
export class PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode extends Message<PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode> {
  /**
   * @generated from field: google.fhir.r4.uscore.DetailedEthnicityValueSet.Value value = 1;
   */
  value = DetailedEthnicityValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreEthnicityExtension.DetailedCoding.BoundCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DetailedEthnicityValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode {
    return new PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode {
    return new PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode {
    return new PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode | PlainMessage<PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode> | undefined, b: PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode | PlainMessage<PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreEthnicityExtension_DetailedCoding_BoundCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreRaceExtension.
 * US Core Race Extension.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-race
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreRaceExtension
 */
export class PatientUSCoreRaceExtension extends Message<PatientUSCoreRaceExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.PatientUSCoreRaceExtension.OmbCategoryCoding omb_category = 4;
   */
  ombCategory: PatientUSCoreRaceExtension_OmbCategoryCoding[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.PatientUSCoreRaceExtension.DetailedCoding detailed = 5;
   */
  detailed: PatientUSCoreRaceExtension_DetailedCoding[] = [];

  /**
   * Race Text
   *
   * @generated from field: google.fhir.r4.core.String text = 6;
   */
  text?: String;

  constructor(data?: PartialMessage<PatientUSCoreRaceExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreRaceExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "omb_category", kind: "message", T: PatientUSCoreRaceExtension_OmbCategoryCoding, repeated: true },
    { no: 5, name: "detailed", kind: "message", T: PatientUSCoreRaceExtension_DetailedCoding, repeated: true },
    { no: 6, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreRaceExtension {
    return new PatientUSCoreRaceExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension {
    return new PatientUSCoreRaceExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension {
    return new PatientUSCoreRaceExtension().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreRaceExtension | PlainMessage<PatientUSCoreRaceExtension> | undefined, b: PatientUSCoreRaceExtension | PlainMessage<PatientUSCoreRaceExtension> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreRaceExtension, a, b);
  }
}

/**
 * American Indian or Alaska Native|Asian|Black or African American|Native
 * Hawaiian or Other Pacific Islander|White
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreRaceExtension.OmbCategoryCoding
 */
export class PatientUSCoreRaceExtension_OmbCategoryCoding extends Message<PatientUSCoreRaceExtension_OmbCategoryCoding> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.String version = 4;
   */
  version?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreRaceExtension.OmbCategoryCoding.BoundCode code = 5;
   */
  code?: PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode;

  /**
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  /**
   * @generated from field: google.fhir.r4.core.Boolean user_selected = 7;
   */
  userSelected?: Boolean;

  constructor(data?: PartialMessage<PatientUSCoreRaceExtension_OmbCategoryCoding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreRaceExtension.OmbCategoryCoding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "version", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "user_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreRaceExtension_OmbCategoryCoding {
    return new PatientUSCoreRaceExtension_OmbCategoryCoding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_OmbCategoryCoding {
    return new PatientUSCoreRaceExtension_OmbCategoryCoding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_OmbCategoryCoding {
    return new PatientUSCoreRaceExtension_OmbCategoryCoding().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreRaceExtension_OmbCategoryCoding | PlainMessage<PatientUSCoreRaceExtension_OmbCategoryCoding> | undefined, b: PatientUSCoreRaceExtension_OmbCategoryCoding | PlainMessage<PatientUSCoreRaceExtension_OmbCategoryCoding> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreRaceExtension_OmbCategoryCoding, a, b);
  }
}

/**
 * @generated from message google.fhir.r4.uscore.PatientUSCoreRaceExtension.OmbCategoryCoding.BoundCode
 */
export class PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode extends Message<PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode> {
  /**
   * @generated from field: google.fhir.r4.uscore.OmbRaceCategoriesValueSet.Value value = 1;
   */
  value = OmbRaceCategoriesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreRaceExtension.OmbCategoryCoding.BoundCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OmbRaceCategoriesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode {
    return new PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode {
    return new PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode {
    return new PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode | PlainMessage<PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode> | undefined, b: PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode | PlainMessage<PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreRaceExtension_OmbCategoryCoding_BoundCode, a, b);
  }
}

/**
 * Extended race codes
 *
 * @generated from message google.fhir.r4.uscore.PatientUSCoreRaceExtension.DetailedCoding
 */
export class PatientUSCoreRaceExtension_DetailedCoding extends Message<PatientUSCoreRaceExtension_DetailedCoding> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.String version = 4;
   */
  version?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreRaceExtension.DetailedCoding.BoundCode code = 5;
   */
  code?: PatientUSCoreRaceExtension_DetailedCoding_BoundCode;

  /**
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  /**
   * @generated from field: google.fhir.r4.core.Boolean user_selected = 7;
   */
  userSelected?: Boolean;

  constructor(data?: PartialMessage<PatientUSCoreRaceExtension_DetailedCoding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreRaceExtension.DetailedCoding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "version", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: PatientUSCoreRaceExtension_DetailedCoding_BoundCode },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "user_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreRaceExtension_DetailedCoding {
    return new PatientUSCoreRaceExtension_DetailedCoding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_DetailedCoding {
    return new PatientUSCoreRaceExtension_DetailedCoding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_DetailedCoding {
    return new PatientUSCoreRaceExtension_DetailedCoding().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreRaceExtension_DetailedCoding | PlainMessage<PatientUSCoreRaceExtension_DetailedCoding> | undefined, b: PatientUSCoreRaceExtension_DetailedCoding | PlainMessage<PatientUSCoreRaceExtension_DetailedCoding> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreRaceExtension_DetailedCoding, a, b);
  }
}

/**
 * @generated from message google.fhir.r4.uscore.PatientUSCoreRaceExtension.DetailedCoding.BoundCode
 */
export class PatientUSCoreRaceExtension_DetailedCoding_BoundCode extends Message<PatientUSCoreRaceExtension_DetailedCoding_BoundCode> {
  /**
   * @generated from field: google.fhir.r4.uscore.DetailedRaceValueSet.Value value = 1;
   */
  value = DetailedRaceValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PatientUSCoreRaceExtension_DetailedCoding_BoundCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.PatientUSCoreRaceExtension.DetailedCoding.BoundCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DetailedRaceValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientUSCoreRaceExtension_DetailedCoding_BoundCode {
    return new PatientUSCoreRaceExtension_DetailedCoding_BoundCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_DetailedCoding_BoundCode {
    return new PatientUSCoreRaceExtension_DetailedCoding_BoundCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientUSCoreRaceExtension_DetailedCoding_BoundCode {
    return new PatientUSCoreRaceExtension_DetailedCoding_BoundCode().fromJsonString(jsonString, options);
  }

  static equals(a: PatientUSCoreRaceExtension_DetailedCoding_BoundCode | PlainMessage<PatientUSCoreRaceExtension_DetailedCoding_BoundCode> | undefined, b: PatientUSCoreRaceExtension_DetailedCoding_BoundCode | PlainMessage<PatientUSCoreRaceExtension_DetailedCoding_BoundCode> | undefined): boolean {
    return proto3.util.equals(PatientUSCoreRaceExtension_DetailedCoding_BoundCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreAllergyIntolerance.
 * Allergy or Intolerance (generally: Risk of adverse reaction to a substance).
 * See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-allergyintolerance
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance
 */
export class USCoreAllergyIntolerance extends Message<USCoreAllergyIntolerance> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this item
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * active | inactive | resolved
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept clinical_status = 11;
   */
  clinicalStatus?: CodeableConcept;

  /**
   * unconfirmed | confirmed | refuted | entered-in-error
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept verification_status = 12;
   */
  verificationStatus?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreAllergyIntolerance.TypeCode type = 13;
   */
  type?: USCoreAllergyIntolerance_TypeCode;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreAllergyIntolerance.CategoryCode category = 14;
   */
  category: USCoreAllergyIntolerance_CategoryCode[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreAllergyIntolerance.CriticalityCode criticality = 15;
   */
  criticality?: USCoreAllergyIntolerance_CriticalityCode;

  /**
   * Code that identifies the allergy or intolerance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 16;
   */
  code?: CodeableConcept;

  /**
   * Who the sensitivity is for
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 17;
   */
  patient?: Reference;

  /**
   * Encounter when the allergy or intolerance was asserted
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreAllergyIntolerance.OnsetX onset = 19;
   */
  onset?: USCoreAllergyIntolerance_OnsetX;

  /**
   * Date first version of the resource instance was recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded_date = 20;
   */
  recordedDate?: DateTime;

  /**
   * Who recorded the sensitivity
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 21;
   */
  recorder?: Reference;

  /**
   * Source of the information about the allergy
   *
   * @generated from field: google.fhir.r4.core.Reference asserter = 22;
   */
  asserter?: Reference;

  /**
   * Date(/time) of last known occurrence of a reaction
   *
   * @generated from field: google.fhir.r4.core.DateTime last_occurrence = 23;
   */
  lastOccurrence?: DateTime;

  /**
   * Additional text not captured in other fields
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 24;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreAllergyIntolerance.Reaction reaction = 25;
   */
  reaction: USCoreAllergyIntolerance_Reaction[] = [];

  constructor(data?: PartialMessage<USCoreAllergyIntolerance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "clinical_status", kind: "message", T: CodeableConcept },
    { no: 12, name: "verification_status", kind: "message", T: CodeableConcept },
    { no: 13, name: "type", kind: "message", T: USCoreAllergyIntolerance_TypeCode },
    { no: 14, name: "category", kind: "message", T: USCoreAllergyIntolerance_CategoryCode, repeated: true },
    { no: 15, name: "criticality", kind: "message", T: USCoreAllergyIntolerance_CriticalityCode },
    { no: 16, name: "code", kind: "message", T: CodeableConcept },
    { no: 17, name: "patient", kind: "message", T: Reference },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "onset", kind: "message", T: USCoreAllergyIntolerance_OnsetX },
    { no: 20, name: "recorded_date", kind: "message", T: DateTime },
    { no: 21, name: "recorder", kind: "message", T: Reference },
    { no: 22, name: "asserter", kind: "message", T: Reference },
    { no: 23, name: "last_occurrence", kind: "message", T: DateTime },
    { no: 24, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 25, name: "reaction", kind: "message", T: USCoreAllergyIntolerance_Reaction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance {
    return new USCoreAllergyIntolerance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance {
    return new USCoreAllergyIntolerance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance {
    return new USCoreAllergyIntolerance().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance | PlainMessage<USCoreAllergyIntolerance> | undefined, b: USCoreAllergyIntolerance | PlainMessage<USCoreAllergyIntolerance> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance, a, b);
  }
}

/**
 * allergy | intolerance - Underlying mechanism (if known)
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance.TypeCode
 */
export class USCoreAllergyIntolerance_TypeCode extends Message<USCoreAllergyIntolerance_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.AllergyIntoleranceTypeCode.Value value = 1;
   */
  value = AllergyIntoleranceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreAllergyIntolerance_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance_TypeCode {
    return new USCoreAllergyIntolerance_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_TypeCode {
    return new USCoreAllergyIntolerance_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_TypeCode {
    return new USCoreAllergyIntolerance_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance_TypeCode | PlainMessage<USCoreAllergyIntolerance_TypeCode> | undefined, b: USCoreAllergyIntolerance_TypeCode | PlainMessage<USCoreAllergyIntolerance_TypeCode> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance_TypeCode, a, b);
  }
}

/**
 * food | medication | environment | biologic
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance.CategoryCode
 */
export class USCoreAllergyIntolerance_CategoryCode extends Message<USCoreAllergyIntolerance_CategoryCode> {
  /**
   * @generated from field: google.fhir.r4.core.AllergyIntoleranceCategoryCode.Value value = 1;
   */
  value = AllergyIntoleranceCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreAllergyIntolerance_CategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance.CategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance_CategoryCode {
    return new USCoreAllergyIntolerance_CategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_CategoryCode {
    return new USCoreAllergyIntolerance_CategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_CategoryCode {
    return new USCoreAllergyIntolerance_CategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance_CategoryCode | PlainMessage<USCoreAllergyIntolerance_CategoryCode> | undefined, b: USCoreAllergyIntolerance_CategoryCode | PlainMessage<USCoreAllergyIntolerance_CategoryCode> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance_CategoryCode, a, b);
  }
}

/**
 * low | high | unable-to-assess
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance.CriticalityCode
 */
export class USCoreAllergyIntolerance_CriticalityCode extends Message<USCoreAllergyIntolerance_CriticalityCode> {
  /**
   * @generated from field: google.fhir.r4.core.AllergyIntoleranceCriticalityCode.Value value = 1;
   */
  value = AllergyIntoleranceCriticalityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreAllergyIntolerance_CriticalityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance.CriticalityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceCriticalityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance_CriticalityCode {
    return new USCoreAllergyIntolerance_CriticalityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_CriticalityCode {
    return new USCoreAllergyIntolerance_CriticalityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_CriticalityCode {
    return new USCoreAllergyIntolerance_CriticalityCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance_CriticalityCode | PlainMessage<USCoreAllergyIntolerance_CriticalityCode> | undefined, b: USCoreAllergyIntolerance_CriticalityCode | PlainMessage<USCoreAllergyIntolerance_CriticalityCode> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance_CriticalityCode, a, b);
  }
}

/**
 * When allergy or intolerance was identified
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance.OnsetX
 */
export class USCoreAllergyIntolerance_OnsetX extends Message<USCoreAllergyIntolerance_OnsetX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreAllergyIntolerance.OnsetX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreAllergyIntolerance_OnsetX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance.OnsetX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance_OnsetX {
    return new USCoreAllergyIntolerance_OnsetX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_OnsetX {
    return new USCoreAllergyIntolerance_OnsetX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_OnsetX {
    return new USCoreAllergyIntolerance_OnsetX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance_OnsetX | PlainMessage<USCoreAllergyIntolerance_OnsetX> | undefined, b: USCoreAllergyIntolerance_OnsetX | PlainMessage<USCoreAllergyIntolerance_OnsetX> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance_OnsetX, a, b);
  }
}

/**
 * Adverse Reaction Events linked to exposure to substance
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance.Reaction
 */
export class USCoreAllergyIntolerance_Reaction extends Message<USCoreAllergyIntolerance_Reaction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specific substance or pharmaceutical product considered to be responsible
   * for event
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept substance = 4;
   */
  substance?: CodeableConcept;

  /**
   * Clinical symptoms/signs associated with the Event
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept manifestation = 5;
   */
  manifestation: CodeableConcept[] = [];

  /**
   * Description of the event as a whole
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * Date(/time) when manifestations showed
   *
   * @generated from field: google.fhir.r4.core.DateTime onset = 7;
   */
  onset?: DateTime;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreAllergyIntolerance.Reaction.SeverityCode severity = 8;
   */
  severity?: USCoreAllergyIntolerance_Reaction_SeverityCode;

  /**
   * How the subject was exposed to the substance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept exposure_route = 9;
   */
  exposureRoute?: CodeableConcept;

  /**
   * Text about event not captured in other fields
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 10;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<USCoreAllergyIntolerance_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "substance", kind: "message", T: CodeableConcept },
    { no: 5, name: "manifestation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "onset", kind: "message", T: DateTime },
    { no: 8, name: "severity", kind: "message", T: USCoreAllergyIntolerance_Reaction_SeverityCode },
    { no: 9, name: "exposure_route", kind: "message", T: CodeableConcept },
    { no: 10, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance_Reaction {
    return new USCoreAllergyIntolerance_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_Reaction {
    return new USCoreAllergyIntolerance_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_Reaction {
    return new USCoreAllergyIntolerance_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance_Reaction | PlainMessage<USCoreAllergyIntolerance_Reaction> | undefined, b: USCoreAllergyIntolerance_Reaction | PlainMessage<USCoreAllergyIntolerance_Reaction> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance_Reaction, a, b);
  }
}

/**
 * mild | moderate | severe (of event as a whole)
 *
 * @generated from message google.fhir.r4.uscore.USCoreAllergyIntolerance.Reaction.SeverityCode
 */
export class USCoreAllergyIntolerance_Reaction_SeverityCode extends Message<USCoreAllergyIntolerance_Reaction_SeverityCode> {
  /**
   * @generated from field: google.fhir.r4.core.AllergyIntoleranceSeverityCode.Value value = 1;
   */
  value = AllergyIntoleranceSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreAllergyIntolerance_Reaction_SeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreAllergyIntolerance.Reaction.SeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AllergyIntoleranceSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreAllergyIntolerance_Reaction_SeverityCode {
    return new USCoreAllergyIntolerance_Reaction_SeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_Reaction_SeverityCode {
    return new USCoreAllergyIntolerance_Reaction_SeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreAllergyIntolerance_Reaction_SeverityCode {
    return new USCoreAllergyIntolerance_Reaction_SeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreAllergyIntolerance_Reaction_SeverityCode | PlainMessage<USCoreAllergyIntolerance_Reaction_SeverityCode> | undefined, b: USCoreAllergyIntolerance_Reaction_SeverityCode | PlainMessage<USCoreAllergyIntolerance_Reaction_SeverityCode> | undefined): boolean {
    return proto3.util.equals(USCoreAllergyIntolerance_Reaction_SeverityCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreCarePlanProfile.
 * Healthcare plan for patient or group.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-careplan
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile
 */
export class USCoreCarePlanProfile extends Message<USCoreCarePlanProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this plan
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[] = [];

  /**
   * Fulfills CarePlan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[] = [];

  /**
   * CarePlan replaced by this CarePlan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference replaces = 14;
   */
  replaces: Reference[] = [];

  /**
   * Part of referenced CarePlan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 15;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.StatusCode status = 16;
   */
  status?: USCoreCarePlanProfile_StatusCode;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.IntentCode intent = 17;
   */
  intent?: USCoreCarePlanProfile_IntentCode;

  /**
   * Type of plan
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 18;
   */
  category: CodeableConcept[] = [];

  /**
   * Human-friendly name for the care plan
   *
   * @generated from field: google.fhir.r4.core.String title = 19;
   */
  title?: String;

  /**
   * Summary of nature of plan
   *
   * @generated from field: google.fhir.r4.core.String description = 20;
   */
  description?: String;

  /**
   * Who the care plan is for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 21;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 22;
   */
  encounter?: Reference;

  /**
   * Time period plan covers
   *
   * @generated from field: google.fhir.r4.core.Period period = 23;
   */
  period?: Period;

  /**
   * Date record was first recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 24;
   */
  created?: DateTime;

  /**
   * Who is the designated responsible party
   *
   * @generated from field: google.fhir.r4.core.Reference author = 25;
   */
  author?: Reference;

  /**
   * Who provided the content of the care plan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference contributor = 26;
   */
  contributor: Reference[] = [];

  /**
   * Who's involved in plan?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference care_team = 27;
   */
  careTeam: Reference[] = [];

  /**
   * Health issues this plan addresses
   *
   * @generated from field: repeated google.fhir.r4.core.Reference addresses = 28;
   */
  addresses: Reference[] = [];

  /**
   * Information considered as part of plan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_info = 29;
   */
  supportingInfo: Reference[] = [];

  /**
   * Desired outcome of plan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference goal = 30;
   */
  goal: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreCarePlanProfile.Activity activity = 31;
   */
  activity: USCoreCarePlanProfile_Activity[] = [];

  /**
   * Comments about the plan
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 32;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<USCoreCarePlanProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 12, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 13, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "status", kind: "message", T: USCoreCarePlanProfile_StatusCode },
    { no: 17, name: "intent", kind: "message", T: USCoreCarePlanProfile_IntentCode },
    { no: 18, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "title", kind: "message", T: String },
    { no: 20, name: "description", kind: "message", T: String },
    { no: 21, name: "subject", kind: "message", T: Reference },
    { no: 22, name: "encounter", kind: "message", T: Reference },
    { no: 23, name: "period", kind: "message", T: Period },
    { no: 24, name: "created", kind: "message", T: DateTime },
    { no: 25, name: "author", kind: "message", T: Reference },
    { no: 26, name: "contributor", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "care_team", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "activity", kind: "message", T: USCoreCarePlanProfile_Activity, repeated: true },
    { no: 32, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile {
    return new USCoreCarePlanProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile {
    return new USCoreCarePlanProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile {
    return new USCoreCarePlanProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile | PlainMessage<USCoreCarePlanProfile> | undefined, b: USCoreCarePlanProfile | PlainMessage<USCoreCarePlanProfile> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile, a, b);
  }
}

/**
 * draft | active | on-hold | revoked | completed | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.StatusCode
 */
export class USCoreCarePlanProfile_StatusCode extends Message<USCoreCarePlanProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestStatusCode.Value value = 1;
   */
  value = RequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreCarePlanProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_StatusCode {
    return new USCoreCarePlanProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_StatusCode {
    return new USCoreCarePlanProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_StatusCode {
    return new USCoreCarePlanProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_StatusCode | PlainMessage<USCoreCarePlanProfile_StatusCode> | undefined, b: USCoreCarePlanProfile_StatusCode | PlainMessage<USCoreCarePlanProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_StatusCode, a, b);
  }
}

/**
 * proposal | plan | order | option
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.IntentCode
 */
export class USCoreCarePlanProfile_IntentCode extends Message<USCoreCarePlanProfile_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.CarePlanIntentValueSet.Value value = 1;
   */
  value = CarePlanIntentValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreCarePlanProfile_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanIntentValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_IntentCode {
    return new USCoreCarePlanProfile_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_IntentCode {
    return new USCoreCarePlanProfile_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_IntentCode {
    return new USCoreCarePlanProfile_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_IntentCode | PlainMessage<USCoreCarePlanProfile_IntentCode> | undefined, b: USCoreCarePlanProfile_IntentCode | PlainMessage<USCoreCarePlanProfile_IntentCode> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_IntentCode, a, b);
  }
}

/**
 * Action to occur as part of plan
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.Activity
 */
export class USCoreCarePlanProfile_Activity extends Message<USCoreCarePlanProfile_Activity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Results of the activity
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept outcome_codeable_concept = 4;
   */
  outcomeCodeableConcept: CodeableConcept[] = [];

  /**
   * Appointment, Encounter, Procedure, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.Reference outcome_reference = 5;
   */
  outcomeReference: Reference[] = [];

  /**
   * Comments about the activity status/progress
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation progress = 6;
   */
  progress: Annotation[] = [];

  /**
   * Activity details defined in specific resource
   *
   * @generated from field: google.fhir.r4.core.Reference reference = 7;
   */
  reference?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail detail = 8;
   */
  detail?: USCoreCarePlanProfile_Activity_Detail;

  constructor(data?: PartialMessage<USCoreCarePlanProfile_Activity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.Activity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "outcome_codeable_concept", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "progress", kind: "message", T: Annotation, repeated: true },
    { no: 7, name: "reference", kind: "message", T: Reference },
    { no: 8, name: "detail", kind: "message", T: USCoreCarePlanProfile_Activity_Detail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_Activity {
    return new USCoreCarePlanProfile_Activity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity {
    return new USCoreCarePlanProfile_Activity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity {
    return new USCoreCarePlanProfile_Activity().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_Activity | PlainMessage<USCoreCarePlanProfile_Activity> | undefined, b: USCoreCarePlanProfile_Activity | PlainMessage<USCoreCarePlanProfile_Activity> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_Activity, a, b);
  }
}

/**
 * In-line definition of activity
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail
 */
export class USCoreCarePlanProfile_Activity_Detail extends Message<USCoreCarePlanProfile_Activity_Detail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.KindCode kind = 4;
   */
  kind?: USCoreCarePlanProfile_Activity_Detail_KindCode;

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 5;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 6;
   */
  instantiatesUri: Uri[] = [];

  /**
   * Detail type of activity
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 7;
   */
  code?: CodeableConcept;

  /**
   * Why activity should be done or why activity was prohibited
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 8;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why activity is needed
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 9;
   */
  reasonReference: Reference[] = [];

  /**
   * Goals this activity relates to
   *
   * @generated from field: repeated google.fhir.r4.core.Reference goal = 10;
   */
  goal: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.StatusCode status = 11;
   */
  status?: USCoreCarePlanProfile_Activity_Detail_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 12;
   */
  statusReason?: CodeableConcept;

  /**
   * If true, activity is prohibiting action
   *
   * @generated from field: google.fhir.r4.core.Boolean do_not_perform = 13;
   */
  doNotPerform?: Boolean;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ScheduledX scheduled = 14;
   */
  scheduled?: USCoreCarePlanProfile_Activity_Detail_ScheduledX;

  /**
   * Where it should happen
   *
   * @generated from field: google.fhir.r4.core.Reference location = 15;
   */
  location?: Reference;

  /**
   * Who will be responsible?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 16;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ProductX product = 17;
   */
  product?: USCoreCarePlanProfile_Activity_Detail_ProductX;

  /**
   * How to consume/day?
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity daily_amount = 18;
   */
  dailyAmount?: SimpleQuantity;

  /**
   * How much to administer/supply/consume
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 19;
   */
  quantity?: SimpleQuantity;

  /**
   * Extra info describing activity to perform
   *
   * @generated from field: google.fhir.r4.core.String description = 20;
   */
  description?: String;

  constructor(data?: PartialMessage<USCoreCarePlanProfile_Activity_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "kind", kind: "message", T: USCoreCarePlanProfile_Activity_Detail_KindCode },
    { no: 5, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 6, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 7, name: "code", kind: "message", T: CodeableConcept },
    { no: 8, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: USCoreCarePlanProfile_Activity_Detail_StatusCode },
    { no: 12, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 13, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 14, name: "scheduled", kind: "message", T: USCoreCarePlanProfile_Activity_Detail_ScheduledX },
    { no: 15, name: "location", kind: "message", T: Reference },
    { no: 16, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "product", kind: "message", T: USCoreCarePlanProfile_Activity_Detail_ProductX },
    { no: 18, name: "daily_amount", kind: "message", T: SimpleQuantity },
    { no: 19, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 20, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_Activity_Detail {
    return new USCoreCarePlanProfile_Activity_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail {
    return new USCoreCarePlanProfile_Activity_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail {
    return new USCoreCarePlanProfile_Activity_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_Activity_Detail | PlainMessage<USCoreCarePlanProfile_Activity_Detail> | undefined, b: USCoreCarePlanProfile_Activity_Detail | PlainMessage<USCoreCarePlanProfile_Activity_Detail> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_Activity_Detail, a, b);
  }
}

/**
 * Appointment | CommunicationRequest | DeviceRequest | MedicationRequest
 * | NutritionOrder | Task | ServiceRequest | VisionPrescription
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.KindCode
 */
export class USCoreCarePlanProfile_Activity_Detail_KindCode extends Message<USCoreCarePlanProfile_Activity_Detail_KindCode> {
  /**
   * @generated from field: google.fhir.r4.core.CarePlanActivityKindValueSet.Value value = 1;
   */
  value = CarePlanActivityKindValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreCarePlanProfile_Activity_Detail_KindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.KindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanActivityKindValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_Activity_Detail_KindCode {
    return new USCoreCarePlanProfile_Activity_Detail_KindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_KindCode {
    return new USCoreCarePlanProfile_Activity_Detail_KindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_KindCode {
    return new USCoreCarePlanProfile_Activity_Detail_KindCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_Activity_Detail_KindCode | PlainMessage<USCoreCarePlanProfile_Activity_Detail_KindCode> | undefined, b: USCoreCarePlanProfile_Activity_Detail_KindCode | PlainMessage<USCoreCarePlanProfile_Activity_Detail_KindCode> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_Activity_Detail_KindCode, a, b);
  }
}

/**
 * not-started | scheduled | in-progress | on-hold | completed | cancelled
 * | stopped | unknown | entered-in-error
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.StatusCode
 */
export class USCoreCarePlanProfile_Activity_Detail_StatusCode extends Message<USCoreCarePlanProfile_Activity_Detail_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.CarePlanActivityStatusCode.Value value = 1;
   */
  value = CarePlanActivityStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreCarePlanProfile_Activity_Detail_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanActivityStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_Activity_Detail_StatusCode {
    return new USCoreCarePlanProfile_Activity_Detail_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_StatusCode {
    return new USCoreCarePlanProfile_Activity_Detail_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_StatusCode {
    return new USCoreCarePlanProfile_Activity_Detail_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_Activity_Detail_StatusCode | PlainMessage<USCoreCarePlanProfile_Activity_Detail_StatusCode> | undefined, b: USCoreCarePlanProfile_Activity_Detail_StatusCode | PlainMessage<USCoreCarePlanProfile_Activity_Detail_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_Activity_Detail_StatusCode, a, b);
  }
}

/**
 * When activity is to occur
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ScheduledX
 */
export class USCoreCarePlanProfile_Activity_Detail_ScheduledX extends Message<USCoreCarePlanProfile_Activity_Detail_ScheduledX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ScheduledX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreCarePlanProfile_Activity_Detail_ScheduledX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ScheduledX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_Activity_Detail_ScheduledX {
    return new USCoreCarePlanProfile_Activity_Detail_ScheduledX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_ScheduledX {
    return new USCoreCarePlanProfile_Activity_Detail_ScheduledX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_ScheduledX {
    return new USCoreCarePlanProfile_Activity_Detail_ScheduledX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_Activity_Detail_ScheduledX | PlainMessage<USCoreCarePlanProfile_Activity_Detail_ScheduledX> | undefined, b: USCoreCarePlanProfile_Activity_Detail_ScheduledX | PlainMessage<USCoreCarePlanProfile_Activity_Detail_ScheduledX> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_Activity_Detail_ScheduledX, a, b);
  }
}

/**
 * What is to be administered/supplied
 *
 * @generated from message google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ProductX
 */
export class USCoreCarePlanProfile_Activity_Detail_ProductX extends Message<USCoreCarePlanProfile_Activity_Detail_ProductX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ProductX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreCarePlanProfile_Activity_Detail_ProductX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCarePlanProfile.Activity.Detail.ProductX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCarePlanProfile_Activity_Detail_ProductX {
    return new USCoreCarePlanProfile_Activity_Detail_ProductX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_ProductX {
    return new USCoreCarePlanProfile_Activity_Detail_ProductX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCarePlanProfile_Activity_Detail_ProductX {
    return new USCoreCarePlanProfile_Activity_Detail_ProductX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCarePlanProfile_Activity_Detail_ProductX | PlainMessage<USCoreCarePlanProfile_Activity_Detail_ProductX> | undefined, b: USCoreCarePlanProfile_Activity_Detail_ProductX | PlainMessage<USCoreCarePlanProfile_Activity_Detail_ProductX> | undefined): boolean {
    return proto3.util.equals(USCoreCarePlanProfile_Activity_Detail_ProductX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreCareTeam.
 * Planned participants in the coordination and delivery of care for a patient
 * or group. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-careteam
 *
 * @generated from message google.fhir.r4.uscore.USCoreCareTeam
 */
export class USCoreCareTeam extends Message<USCoreCareTeam> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this team
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreCareTeam.StatusCode status = 11;
   */
  status?: USCoreCareTeam_StatusCode;

  /**
   * Type of team
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Name of the team, such as crisis assessment team
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Who care team is for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * Time period team covers
   *
   * @generated from field: google.fhir.r4.core.Period period = 16;
   */
  period?: Period;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreCareTeam.Participant participant = 17;
   */
  participant: USCoreCareTeam_Participant[] = [];

  /**
   * Why the care team exists
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 18;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why the care team exists
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 19;
   */
  reasonReference: Reference[] = [];

  /**
   * Organization responsible for the care team
   *
   * @generated from field: repeated google.fhir.r4.core.Reference managing_organization = 20;
   */
  managingOrganization: Reference[] = [];

  /**
   * A contact detail for the care team (that applies to all members)
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 21;
   */
  telecom: ContactPoint[] = [];

  /**
   * Comments made about the CareTeam
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 22;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<USCoreCareTeam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCareTeam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: USCoreCareTeam_StatusCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "encounter", kind: "message", T: Reference },
    { no: 16, name: "period", kind: "message", T: Period },
    { no: 17, name: "participant", kind: "message", T: USCoreCareTeam_Participant, repeated: true },
    { no: 18, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "managing_organization", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 22, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCareTeam {
    return new USCoreCareTeam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCareTeam {
    return new USCoreCareTeam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCareTeam {
    return new USCoreCareTeam().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCareTeam | PlainMessage<USCoreCareTeam> | undefined, b: USCoreCareTeam | PlainMessage<USCoreCareTeam> | undefined): boolean {
    return proto3.util.equals(USCoreCareTeam, a, b);
  }
}

/**
 * proposed | active | suspended | inactive | entered-in-error
 *
 * @generated from message google.fhir.r4.uscore.USCoreCareTeam.StatusCode
 */
export class USCoreCareTeam_StatusCode extends Message<USCoreCareTeam_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.CareTeamStatusCode.Value value = 1;
   */
  value = CareTeamStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreCareTeam_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCareTeam.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CareTeamStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCareTeam_StatusCode {
    return new USCoreCareTeam_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCareTeam_StatusCode {
    return new USCoreCareTeam_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCareTeam_StatusCode {
    return new USCoreCareTeam_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCareTeam_StatusCode | PlainMessage<USCoreCareTeam_StatusCode> | undefined, b: USCoreCareTeam_StatusCode | PlainMessage<USCoreCareTeam_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreCareTeam_StatusCode, a, b);
  }
}

/**
 * Members of the team
 *
 * @generated from message google.fhir.r4.uscore.USCoreCareTeam.Participant
 */
export class USCoreCareTeam_Participant extends Message<USCoreCareTeam_Participant> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of involvement
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept role = 4;
   */
  role?: CodeableConcept;

  /**
   * Who is involved
   *
   * @generated from field: google.fhir.r4.core.Reference member = 5;
   */
  member?: Reference;

  /**
   * Organization of the practitioner
   *
   * @generated from field: google.fhir.r4.core.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  /**
   * Time period of participant
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<USCoreCareTeam_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreCareTeam.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: CodeableConcept },
    { no: 5, name: "member", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreCareTeam_Participant {
    return new USCoreCareTeam_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreCareTeam_Participant {
    return new USCoreCareTeam_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreCareTeam_Participant {
    return new USCoreCareTeam_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreCareTeam_Participant | PlainMessage<USCoreCareTeam_Participant> | undefined, b: USCoreCareTeam_Participant | PlainMessage<USCoreCareTeam_Participant> | undefined): boolean {
    return proto3.util.equals(USCoreCareTeam_Participant, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for
 * USCoreDiagnosticReportProfileLaboratoryReporting. A Diagnostic report - a
 * combination of request information, atomic results, images, interpretation,
 * as well as formatted reports. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport-lab
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting
 */
export class USCoreDiagnosticReportProfileLaboratoryReporting extends Message<USCoreDiagnosticReportProfileLaboratoryReporting> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.StatusCode status = 12;
   */
  status?: USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode;

  /**
   * Service category
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 13;
   */
  category: CodeableConcept[] = [];

  /**
   * US Core Laboratory Report Order Code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 16;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.EffectiveX effective = 17;
   */
  effective?: USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX;

  /**
   * DateTime this version was made
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 18;
   */
  issued?: Instant;

  /**
   * Responsible Diagnostic Service
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 19;
   */
  performer: Reference[] = [];

  /**
   * Primary result interpreter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference results_interpreter = 20;
   */
  resultsInterpreter: Reference[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.r4.core.Reference specimen = 21;
   */
  specimen: Reference[] = [];

  /**
   * Observations
   *
   * @generated from field: repeated google.fhir.r4.core.Reference result = 22;
   */
  result: Reference[] = [];

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.r4.core.Reference imaging_study = 23;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.Media media = 24;
   */
  media: USCoreDiagnosticReportProfileLaboratoryReporting_Media[] = [];

  /**
   * Clinical conclusion (interpretation) of test results
   *
   * @generated from field: google.fhir.r4.core.String conclusion = 25;
   */
  conclusion?: String;

  /**
   * Codes for the clinical conclusion of test results
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept conclusion_code = 26;
   */
  conclusionCode: CodeableConcept[] = [];

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment presented_form = 27;
   */
  presentedForm: Attachment[] = [];

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileLaboratoryReporting>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "status", kind: "message", T: USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode },
    { no: 13, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "encounter", kind: "message", T: Reference },
    { no: 17, name: "effective", kind: "message", T: USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX },
    { no: 18, name: "issued", kind: "message", T: Instant },
    { no: 19, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "results_interpreter", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "result", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "media", kind: "message", T: USCoreDiagnosticReportProfileLaboratoryReporting_Media, repeated: true },
    { no: 25, name: "conclusion", kind: "message", T: String },
    { no: 26, name: "conclusion_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "presented_form", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting {
    return new USCoreDiagnosticReportProfileLaboratoryReporting().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting {
    return new USCoreDiagnosticReportProfileLaboratoryReporting().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting {
    return new USCoreDiagnosticReportProfileLaboratoryReporting().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileLaboratoryReporting | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting> | undefined, b: USCoreDiagnosticReportProfileLaboratoryReporting | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileLaboratoryReporting, a, b);
  }
}

/**
 * registered | partial | preliminary | final +
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.StatusCode
 */
export class USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode extends Message<USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.DiagnosticReportStatusCode.Value value = 1;
   */
  value = DiagnosticReportStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DiagnosticReportStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode> | undefined, b: USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileLaboratoryReporting_StatusCode, a, b);
  }
}

/**
 * Specimen Collection Datetime or Period
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.EffectiveX
 */
export class USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX extends Message<USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX> | undefined, b: USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileLaboratoryReporting_EffectiveX, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.Media
 */
export class USCoreDiagnosticReportProfileLaboratoryReporting_Media extends Message<USCoreDiagnosticReportProfileLaboratoryReporting_Media> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.r4.core.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.r4.core.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileLaboratoryReporting_Media>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileLaboratoryReporting.Media";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_Media {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_Media().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_Media {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_Media().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileLaboratoryReporting_Media {
    return new USCoreDiagnosticReportProfileLaboratoryReporting_Media().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileLaboratoryReporting_Media | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting_Media> | undefined, b: USCoreDiagnosticReportProfileLaboratoryReporting_Media | PlainMessage<USCoreDiagnosticReportProfileLaboratoryReporting_Media> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileLaboratoryReporting_Media, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for
 * USCoreDiagnosticReportProfileNoteExchange. US Core Diagnostic Report Profile
 * for Report and Note exchange. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport-note
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange
 */
export class USCoreDiagnosticReportProfileNoteExchange extends Message<USCoreDiagnosticReportProfileNoteExchange> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for report
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * What was requested
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.StatusCode status = 12;
   */
  status?: USCoreDiagnosticReportProfileNoteExchange_StatusCode;

  /**
   * Service category
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 13;
   */
  category: CodeableConcept[] = [];

  /**
   * US Core Report Code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * The subject of the report - usually, but not always, the patient
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Health care event when test ordered
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 16;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.EffectiveX effective = 17;
   */
  effective?: USCoreDiagnosticReportProfileNoteExchange_EffectiveX;

  /**
   * DateTime this version was made
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 18;
   */
  issued?: Instant;

  /**
   * Responsible Diagnostic Service
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 19;
   */
  performer: Reference[] = [];

  /**
   * Primary result interpreter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference results_interpreter = 20;
   */
  resultsInterpreter: Reference[] = [];

  /**
   * Specimens this report is based on
   *
   * @generated from field: repeated google.fhir.r4.core.Reference specimen = 21;
   */
  specimen: Reference[] = [];

  /**
   * Observations
   *
   * @generated from field: repeated google.fhir.r4.core.Reference result = 22;
   */
  result: Reference[] = [];

  /**
   * Reference to full details of imaging associated with the diagnostic report
   *
   * @generated from field: repeated google.fhir.r4.core.Reference imaging_study = 23;
   */
  imagingStudy: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.Media media = 24;
   */
  media: USCoreDiagnosticReportProfileNoteExchange_Media[] = [];

  /**
   * Clinical conclusion (interpretation) of test results
   *
   * @generated from field: google.fhir.r4.core.String conclusion = 25;
   */
  conclusion?: String;

  /**
   * Codes for the clinical conclusion of test results
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept conclusion_code = 26;
   */
  conclusionCode: CodeableConcept[] = [];

  /**
   * Entire report as issued
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment presented_form = 27;
   */
  presentedForm: Attachment[] = [];

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileNoteExchange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "status", kind: "message", T: USCoreDiagnosticReportProfileNoteExchange_StatusCode },
    { no: 13, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "encounter", kind: "message", T: Reference },
    { no: 17, name: "effective", kind: "message", T: USCoreDiagnosticReportProfileNoteExchange_EffectiveX },
    { no: 18, name: "issued", kind: "message", T: Instant },
    { no: 19, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "results_interpreter", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "specimen", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "result", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "imaging_study", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "media", kind: "message", T: USCoreDiagnosticReportProfileNoteExchange_Media, repeated: true },
    { no: 25, name: "conclusion", kind: "message", T: String },
    { no: 26, name: "conclusion_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "presented_form", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileNoteExchange {
    return new USCoreDiagnosticReportProfileNoteExchange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange {
    return new USCoreDiagnosticReportProfileNoteExchange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange {
    return new USCoreDiagnosticReportProfileNoteExchange().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileNoteExchange | PlainMessage<USCoreDiagnosticReportProfileNoteExchange> | undefined, b: USCoreDiagnosticReportProfileNoteExchange | PlainMessage<USCoreDiagnosticReportProfileNoteExchange> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileNoteExchange, a, b);
  }
}

/**
 * registered | partial | preliminary | final +
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.StatusCode
 */
export class USCoreDiagnosticReportProfileNoteExchange_StatusCode extends Message<USCoreDiagnosticReportProfileNoteExchange_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.DiagnosticReportStatusCode.Value value = 1;
   */
  value = DiagnosticReportStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileNoteExchange_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DiagnosticReportStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileNoteExchange_StatusCode {
    return new USCoreDiagnosticReportProfileNoteExchange_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange_StatusCode {
    return new USCoreDiagnosticReportProfileNoteExchange_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange_StatusCode {
    return new USCoreDiagnosticReportProfileNoteExchange_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileNoteExchange_StatusCode | PlainMessage<USCoreDiagnosticReportProfileNoteExchange_StatusCode> | undefined, b: USCoreDiagnosticReportProfileNoteExchange_StatusCode | PlainMessage<USCoreDiagnosticReportProfileNoteExchange_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileNoteExchange_StatusCode, a, b);
  }
}

/**
 * Time of the report or note
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.EffectiveX
 */
export class USCoreDiagnosticReportProfileNoteExchange_EffectiveX extends Message<USCoreDiagnosticReportProfileNoteExchange_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileNoteExchange_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileNoteExchange_EffectiveX {
    return new USCoreDiagnosticReportProfileNoteExchange_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange_EffectiveX {
    return new USCoreDiagnosticReportProfileNoteExchange_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange_EffectiveX {
    return new USCoreDiagnosticReportProfileNoteExchange_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileNoteExchange_EffectiveX | PlainMessage<USCoreDiagnosticReportProfileNoteExchange_EffectiveX> | undefined, b: USCoreDiagnosticReportProfileNoteExchange_EffectiveX | PlainMessage<USCoreDiagnosticReportProfileNoteExchange_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileNoteExchange_EffectiveX, a, b);
  }
}

/**
 * Key images associated with this report
 *
 * @generated from message google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.Media
 */
export class USCoreDiagnosticReportProfileNoteExchange_Media extends Message<USCoreDiagnosticReportProfileNoteExchange_Media> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Comment about the image (e.g. explanation)
   *
   * @generated from field: google.fhir.r4.core.String comment = 4;
   */
  comment?: String;

  /**
   * Reference to the image source
   *
   * @generated from field: google.fhir.r4.core.Reference link = 5;
   */
  link?: Reference;

  constructor(data?: PartialMessage<USCoreDiagnosticReportProfileNoteExchange_Media>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDiagnosticReportProfileNoteExchange.Media";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "comment", kind: "message", T: String },
    { no: 5, name: "link", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDiagnosticReportProfileNoteExchange_Media {
    return new USCoreDiagnosticReportProfileNoteExchange_Media().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange_Media {
    return new USCoreDiagnosticReportProfileNoteExchange_Media().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDiagnosticReportProfileNoteExchange_Media {
    return new USCoreDiagnosticReportProfileNoteExchange_Media().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDiagnosticReportProfileNoteExchange_Media | PlainMessage<USCoreDiagnosticReportProfileNoteExchange_Media> | undefined, b: USCoreDiagnosticReportProfileNoteExchange_Media | PlainMessage<USCoreDiagnosticReportProfileNoteExchange_Media> | undefined): boolean {
    return proto3.util.equals(USCoreDiagnosticReportProfileNoteExchange_Media, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreDocumentReferenceProfile.
 * A reference to a document.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-documentreference
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile
 */
export class USCoreDocumentReferenceProfile extends Message<USCoreDocumentReferenceProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Master Version Specific Identifier
   *
   * @generated from field: google.fhir.r4.core.Identifier master_identifier = 10;
   */
  masterIdentifier?: Identifier;

  /**
   * Other identifiers for the document
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDocumentReferenceProfile.StatusCode status = 12;
   */
  status?: USCoreDocumentReferenceProfile_StatusCode;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDocumentReferenceProfile.DocStatusCode doc_status = 13;
   */
  docStatus?: USCoreDocumentReferenceProfile_DocStatusCode;

  /**
   * Kind of document (LOINC if possible)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 14;
   */
  type?: CodeableConcept;

  /**
   * Categorization of document
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 15;
   */
  category: CodeableConcept[] = [];

  /**
   * Who/what is the subject of the document
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * When this document reference was created
   *
   * @generated from field: google.fhir.r4.core.Instant date = 17;
   */
  date?: Instant;

  /**
   * Who and/or what authored the document
   *
   * @generated from field: repeated google.fhir.r4.core.Reference author = 18;
   */
  author: Reference[] = [];

  /**
   * Who/what authenticated the document
   *
   * @generated from field: google.fhir.r4.core.Reference authenticator = 19;
   */
  authenticator?: Reference;

  /**
   * Organization which maintains the document
   *
   * @generated from field: google.fhir.r4.core.Reference custodian = 20;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreDocumentReferenceProfile.RelatesTo relates_to = 21;
   */
  relatesTo: USCoreDocumentReferenceProfile_RelatesTo[] = [];

  /**
   * Human-readable description
   *
   * @generated from field: google.fhir.r4.core.String description = 22;
   */
  description?: String;

  /**
   * Document security-tags
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept security_label = 23;
   */
  securityLabel: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDocumentReferenceProfile.Content content = 24;
   */
  content?: USCoreDocumentReferenceProfile_Content;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDocumentReferenceProfile.Context context = 25;
   */
  context?: USCoreDocumentReferenceProfile_Context;

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "master_identifier", kind: "message", T: Identifier },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "status", kind: "message", T: USCoreDocumentReferenceProfile_StatusCode },
    { no: 13, name: "doc_status", kind: "message", T: USCoreDocumentReferenceProfile_DocStatusCode },
    { no: 14, name: "type", kind: "message", T: CodeableConcept },
    { no: 15, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "date", kind: "message", T: Instant },
    { no: 18, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "authenticator", kind: "message", T: Reference },
    { no: 20, name: "custodian", kind: "message", T: Reference },
    { no: 21, name: "relates_to", kind: "message", T: USCoreDocumentReferenceProfile_RelatesTo, repeated: true },
    { no: 22, name: "description", kind: "message", T: String },
    { no: 23, name: "security_label", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "content", kind: "message", T: USCoreDocumentReferenceProfile_Content },
    { no: 25, name: "context", kind: "message", T: USCoreDocumentReferenceProfile_Context },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile {
    return new USCoreDocumentReferenceProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile {
    return new USCoreDocumentReferenceProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile {
    return new USCoreDocumentReferenceProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile | PlainMessage<USCoreDocumentReferenceProfile> | undefined, b: USCoreDocumentReferenceProfile | PlainMessage<USCoreDocumentReferenceProfile> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile, a, b);
  }
}

/**
 * current | superseded | entered-in-error
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile.StatusCode
 */
export class USCoreDocumentReferenceProfile_StatusCode extends Message<USCoreDocumentReferenceProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.DocumentReferenceStatusCode.Value value = 1;
   */
  value = DocumentReferenceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentReferenceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile_StatusCode {
    return new USCoreDocumentReferenceProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_StatusCode {
    return new USCoreDocumentReferenceProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_StatusCode {
    return new USCoreDocumentReferenceProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile_StatusCode | PlainMessage<USCoreDocumentReferenceProfile_StatusCode> | undefined, b: USCoreDocumentReferenceProfile_StatusCode | PlainMessage<USCoreDocumentReferenceProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile_StatusCode, a, b);
  }
}

/**
 * preliminary | final | amended | entered-in-error
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile.DocStatusCode
 */
export class USCoreDocumentReferenceProfile_DocStatusCode extends Message<USCoreDocumentReferenceProfile_DocStatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.CompositionStatusCode.Value value = 1;
   */
  value = CompositionStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile_DocStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile.DocStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompositionStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile_DocStatusCode {
    return new USCoreDocumentReferenceProfile_DocStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_DocStatusCode {
    return new USCoreDocumentReferenceProfile_DocStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_DocStatusCode {
    return new USCoreDocumentReferenceProfile_DocStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile_DocStatusCode | PlainMessage<USCoreDocumentReferenceProfile_DocStatusCode> | undefined, b: USCoreDocumentReferenceProfile_DocStatusCode | PlainMessage<USCoreDocumentReferenceProfile_DocStatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile_DocStatusCode, a, b);
  }
}

/**
 * Relationships to other documents
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile.RelatesTo
 */
export class USCoreDocumentReferenceProfile_RelatesTo extends Message<USCoreDocumentReferenceProfile_RelatesTo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreDocumentReferenceProfile.RelatesTo.CodeType code = 4;
   */
  code?: USCoreDocumentReferenceProfile_RelatesTo_CodeType;

  /**
   * Target of the relationship
   *
   * @generated from field: google.fhir.r4.core.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile_RelatesTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile.RelatesTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: USCoreDocumentReferenceProfile_RelatesTo_CodeType },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile_RelatesTo {
    return new USCoreDocumentReferenceProfile_RelatesTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_RelatesTo {
    return new USCoreDocumentReferenceProfile_RelatesTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_RelatesTo {
    return new USCoreDocumentReferenceProfile_RelatesTo().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile_RelatesTo | PlainMessage<USCoreDocumentReferenceProfile_RelatesTo> | undefined, b: USCoreDocumentReferenceProfile_RelatesTo | PlainMessage<USCoreDocumentReferenceProfile_RelatesTo> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile_RelatesTo, a, b);
  }
}

/**
 * replaces | transforms | signs | appends
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile.RelatesTo.CodeType
 */
export class USCoreDocumentReferenceProfile_RelatesTo_CodeType extends Message<USCoreDocumentReferenceProfile_RelatesTo_CodeType> {
  /**
   * @generated from field: google.fhir.r4.core.DocumentRelationshipTypeCode.Value value = 1;
   */
  value = DocumentRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile_RelatesTo_CodeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile.RelatesTo.CodeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile_RelatesTo_CodeType {
    return new USCoreDocumentReferenceProfile_RelatesTo_CodeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_RelatesTo_CodeType {
    return new USCoreDocumentReferenceProfile_RelatesTo_CodeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_RelatesTo_CodeType {
    return new USCoreDocumentReferenceProfile_RelatesTo_CodeType().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile_RelatesTo_CodeType | PlainMessage<USCoreDocumentReferenceProfile_RelatesTo_CodeType> | undefined, b: USCoreDocumentReferenceProfile_RelatesTo_CodeType | PlainMessage<USCoreDocumentReferenceProfile_RelatesTo_CodeType> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile_RelatesTo_CodeType, a, b);
  }
}

/**
 * Document referenced
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile.Content
 */
export class USCoreDocumentReferenceProfile_Content extends Message<USCoreDocumentReferenceProfile_Content> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Where to access the document
   *
   * @generated from field: google.fhir.r4.core.Attachment attachment = 4;
   */
  attachment?: Attachment;

  /**
   * Format/content rules for the document
   *
   * @generated from field: google.fhir.r4.core.Coding format = 5;
   */
  format?: Coding;

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "attachment", kind: "message", T: Attachment },
    { no: 5, name: "format", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile_Content {
    return new USCoreDocumentReferenceProfile_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_Content {
    return new USCoreDocumentReferenceProfile_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_Content {
    return new USCoreDocumentReferenceProfile_Content().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile_Content | PlainMessage<USCoreDocumentReferenceProfile_Content> | undefined, b: USCoreDocumentReferenceProfile_Content | PlainMessage<USCoreDocumentReferenceProfile_Content> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile_Content, a, b);
  }
}

/**
 * Clinical context of document
 *
 * @generated from message google.fhir.r4.uscore.USCoreDocumentReferenceProfile.Context
 */
export class USCoreDocumentReferenceProfile_Context extends Message<USCoreDocumentReferenceProfile_Context> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Context of the document  content
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 4;
   */
  encounter?: Reference;

  /**
   * Main clinical acts documented
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept event = 5;
   */
  event: CodeableConcept[] = [];

  /**
   * Time of service that is being documented
   *
   * @generated from field: google.fhir.r4.core.Period period = 6;
   */
  period?: Period;

  /**
   * Kind of facility where patient was seen
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept facility_type = 7;
   */
  facilityType?: CodeableConcept;

  /**
   * Additional details about where the content was created (e.g. clinical
   * specialty)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept practice_setting = 8;
   */
  practiceSetting?: CodeableConcept;

  /**
   * Patient demographics from source
   *
   * @generated from field: google.fhir.r4.core.Reference source_patient_info = 9;
   */
  sourcePatientInfo?: Reference;

  /**
   * Related identifiers or resources
   *
   * @generated from field: repeated google.fhir.r4.core.Reference related = 10;
   */
  related: Reference[] = [];

  constructor(data?: PartialMessage<USCoreDocumentReferenceProfile_Context>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreDocumentReferenceProfile.Context";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "encounter", kind: "message", T: Reference },
    { no: 5, name: "event", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "facility_type", kind: "message", T: CodeableConcept },
    { no: 8, name: "practice_setting", kind: "message", T: CodeableConcept },
    { no: 9, name: "source_patient_info", kind: "message", T: Reference },
    { no: 10, name: "related", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreDocumentReferenceProfile_Context {
    return new USCoreDocumentReferenceProfile_Context().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_Context {
    return new USCoreDocumentReferenceProfile_Context().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreDocumentReferenceProfile_Context {
    return new USCoreDocumentReferenceProfile_Context().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreDocumentReferenceProfile_Context | PlainMessage<USCoreDocumentReferenceProfile_Context> | undefined, b: USCoreDocumentReferenceProfile_Context | PlainMessage<USCoreDocumentReferenceProfile_Context> | undefined): boolean {
    return proto3.util.equals(USCoreDocumentReferenceProfile_Context, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreEncounterProfile.
 * An interaction during which services are provided to the patient.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-encounter
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile
 */
export class USCoreEncounterProfile extends Message<USCoreEncounterProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier(s) by which this encounter is known
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreEncounterProfile.StatusCode status = 11;
   */
  status?: USCoreEncounterProfile_StatusCode;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreEncounterProfile.StatusHistory status_history = 12;
   */
  statusHistory: USCoreEncounterProfile_StatusHistory[] = [];

  /**
   * Classification of patient encounter
   *
   * @generated from field: google.fhir.r4.core.Coding class_value = 13 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreEncounterProfile.ClassHistory class_history = 14;
   */
  classHistory: USCoreEncounterProfile_ClassHistory[] = [];

  /**
   * Specific type of encounter
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 15;
   */
  type: CodeableConcept[] = [];

  /**
   * Specific type of service
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept service_type = 16;
   */
  serviceType?: CodeableConcept;

  /**
   * Indicates the urgency of the encounter
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 17;
   */
  priority?: CodeableConcept;

  /**
   * The patient or group present at the encounter
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 18;
   */
  subject?: Reference;

  /**
   * Episode(s) of care that this encounter should be recorded against
   *
   * @generated from field: repeated google.fhir.r4.core.Reference episode_of_care = 19;
   */
  episodeOfCare: Reference[] = [];

  /**
   * The ServiceRequest that initiated this encounter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 20;
   */
  basedOn: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreEncounterProfile.Participant participant = 21;
   */
  participant: USCoreEncounterProfile_Participant[] = [];

  /**
   * The appointment that scheduled this encounter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference appointment = 22;
   */
  appointment: Reference[] = [];

  /**
   * The start and end time of the encounter
   *
   * @generated from field: google.fhir.r4.core.Period period = 23;
   */
  period?: Period;

  /**
   * Quantity of time the encounter lasted (less time absent)
   *
   * @generated from field: google.fhir.r4.core.Duration length = 24;
   */
  length?: Duration;

  /**
   * Coded reason the encounter takes place
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 25;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Reason the encounter takes place (reference)
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 26;
   */
  reasonReference: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreEncounterProfile.Diagnosis diagnosis = 27;
   */
  diagnosis: USCoreEncounterProfile_Diagnosis[] = [];

  /**
   * The set of accounts that may be used for billing for this Encounter
   *
   * @generated from field: repeated google.fhir.r4.core.Reference account = 28;
   */
  account: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreEncounterProfile.Hospitalization hospitalization = 29;
   */
  hospitalization?: USCoreEncounterProfile_Hospitalization;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreEncounterProfile.Location location = 30;
   */
  location: USCoreEncounterProfile_Location[] = [];

  /**
   * The organization (facility) responsible for this encounter
   *
   * @generated from field: google.fhir.r4.core.Reference service_provider = 31;
   */
  serviceProvider?: Reference;

  /**
   * Another Encounter this encounter is part of
   *
   * @generated from field: google.fhir.r4.core.Reference part_of = 32;
   */
  partOf?: Reference;

  constructor(data?: PartialMessage<USCoreEncounterProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: USCoreEncounterProfile_StatusCode },
    { no: 12, name: "status_history", kind: "message", T: USCoreEncounterProfile_StatusHistory, repeated: true },
    { no: 13, name: "class_value", jsonName: "class", kind: "message", T: Coding },
    { no: 14, name: "class_history", kind: "message", T: USCoreEncounterProfile_ClassHistory, repeated: true },
    { no: 15, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "service_type", kind: "message", T: CodeableConcept },
    { no: 17, name: "priority", kind: "message", T: CodeableConcept },
    { no: 18, name: "subject", kind: "message", T: Reference },
    { no: 19, name: "episode_of_care", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "participant", kind: "message", T: USCoreEncounterProfile_Participant, repeated: true },
    { no: 22, name: "appointment", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "period", kind: "message", T: Period },
    { no: 24, name: "length", kind: "message", T: Duration },
    { no: 25, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "diagnosis", kind: "message", T: USCoreEncounterProfile_Diagnosis, repeated: true },
    { no: 28, name: "account", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "hospitalization", kind: "message", T: USCoreEncounterProfile_Hospitalization },
    { no: 30, name: "location", kind: "message", T: USCoreEncounterProfile_Location, repeated: true },
    { no: 31, name: "service_provider", kind: "message", T: Reference },
    { no: 32, name: "part_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile {
    return new USCoreEncounterProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile {
    return new USCoreEncounterProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile {
    return new USCoreEncounterProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile | PlainMessage<USCoreEncounterProfile> | undefined, b: USCoreEncounterProfile | PlainMessage<USCoreEncounterProfile> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile, a, b);
  }
}

/**
 * planned | arrived | triaged | in-progress | onleave | finished | cancelled
 * +
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.StatusCode
 */
export class USCoreEncounterProfile_StatusCode extends Message<USCoreEncounterProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.EncounterStatusCode.Value value = 1;
   */
  value = EncounterStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreEncounterProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EncounterStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_StatusCode {
    return new USCoreEncounterProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_StatusCode {
    return new USCoreEncounterProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_StatusCode {
    return new USCoreEncounterProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_StatusCode | PlainMessage<USCoreEncounterProfile_StatusCode> | undefined, b: USCoreEncounterProfile_StatusCode | PlainMessage<USCoreEncounterProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_StatusCode, a, b);
  }
}

/**
 * List of past encounter statuses
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.StatusHistory
 */
export class USCoreEncounterProfile_StatusHistory extends Message<USCoreEncounterProfile_StatusHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreEncounterProfile.StatusHistory.StatusCode status = 4;
   */
  status?: USCoreEncounterProfile_StatusHistory_StatusCode;

  /**
   * The time that the episode was in the specified status
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<USCoreEncounterProfile_StatusHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.StatusHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "status", kind: "message", T: USCoreEncounterProfile_StatusHistory_StatusCode },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_StatusHistory {
    return new USCoreEncounterProfile_StatusHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_StatusHistory {
    return new USCoreEncounterProfile_StatusHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_StatusHistory {
    return new USCoreEncounterProfile_StatusHistory().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_StatusHistory | PlainMessage<USCoreEncounterProfile_StatusHistory> | undefined, b: USCoreEncounterProfile_StatusHistory | PlainMessage<USCoreEncounterProfile_StatusHistory> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_StatusHistory, a, b);
  }
}

/**
 * planned | arrived | triaged | in-progress | onleave | finished |
 * cancelled +
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.StatusHistory.StatusCode
 */
export class USCoreEncounterProfile_StatusHistory_StatusCode extends Message<USCoreEncounterProfile_StatusHistory_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.EncounterStatusCode.Value value = 1;
   */
  value = EncounterStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreEncounterProfile_StatusHistory_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.StatusHistory.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EncounterStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_StatusHistory_StatusCode {
    return new USCoreEncounterProfile_StatusHistory_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_StatusHistory_StatusCode {
    return new USCoreEncounterProfile_StatusHistory_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_StatusHistory_StatusCode {
    return new USCoreEncounterProfile_StatusHistory_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_StatusHistory_StatusCode | PlainMessage<USCoreEncounterProfile_StatusHistory_StatusCode> | undefined, b: USCoreEncounterProfile_StatusHistory_StatusCode | PlainMessage<USCoreEncounterProfile_StatusHistory_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_StatusHistory_StatusCode, a, b);
  }
}

/**
 * List of past encounter classes
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.ClassHistory
 */
export class USCoreEncounterProfile_ClassHistory extends Message<USCoreEncounterProfile_ClassHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * inpatient | outpatient | ambulatory | emergency +
   *
   * @generated from field: google.fhir.r4.core.Coding class_value = 4 [json_name = "class"];
   */
  classValue?: Coding;

  /**
   * The time that the episode was in the specified class
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<USCoreEncounterProfile_ClassHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.ClassHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "class_value", jsonName: "class", kind: "message", T: Coding },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_ClassHistory {
    return new USCoreEncounterProfile_ClassHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_ClassHistory {
    return new USCoreEncounterProfile_ClassHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_ClassHistory {
    return new USCoreEncounterProfile_ClassHistory().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_ClassHistory | PlainMessage<USCoreEncounterProfile_ClassHistory> | undefined, b: USCoreEncounterProfile_ClassHistory | PlainMessage<USCoreEncounterProfile_ClassHistory> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_ClassHistory, a, b);
  }
}

/**
 * List of participants involved in the encounter
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.Participant
 */
export class USCoreEncounterProfile_Participant extends Message<USCoreEncounterProfile_Participant> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Role of participant in encounter
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 4;
   */
  type: CodeableConcept[] = [];

  /**
   * Period of time during the encounter that the participant participated
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  /**
   * Persons involved in the encounter other than the patient
   *
   * @generated from field: google.fhir.r4.core.Reference individual = 6;
   */
  individual?: Reference;

  constructor(data?: PartialMessage<USCoreEncounterProfile_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "individual", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_Participant {
    return new USCoreEncounterProfile_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Participant {
    return new USCoreEncounterProfile_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Participant {
    return new USCoreEncounterProfile_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_Participant | PlainMessage<USCoreEncounterProfile_Participant> | undefined, b: USCoreEncounterProfile_Participant | PlainMessage<USCoreEncounterProfile_Participant> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_Participant, a, b);
  }
}

/**
 * The list of diagnosis relevant to this encounter
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.Diagnosis
 */
export class USCoreEncounterProfile_Diagnosis extends Message<USCoreEncounterProfile_Diagnosis> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The diagnosis or procedure relevant to the encounter
   *
   * @generated from field: google.fhir.r4.core.Reference condition = 4;
   */
  condition?: Reference;

  /**
   * Role that this diagnosis has within the encounter (e.g. admission,
   * billing, discharge …)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept use = 5;
   */
  use?: CodeableConcept;

  /**
   * Ranking of the diagnosis (for each role type)
   *
   * @generated from field: google.fhir.r4.core.PositiveInt rank = 6;
   */
  rank?: PositiveInt;

  constructor(data?: PartialMessage<USCoreEncounterProfile_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "condition", kind: "message", T: Reference },
    { no: 5, name: "use", kind: "message", T: CodeableConcept },
    { no: 6, name: "rank", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_Diagnosis {
    return new USCoreEncounterProfile_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Diagnosis {
    return new USCoreEncounterProfile_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Diagnosis {
    return new USCoreEncounterProfile_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_Diagnosis | PlainMessage<USCoreEncounterProfile_Diagnosis> | undefined, b: USCoreEncounterProfile_Diagnosis | PlainMessage<USCoreEncounterProfile_Diagnosis> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_Diagnosis, a, b);
  }
}

/**
 * Details about the admission to a healthcare service
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.Hospitalization
 */
export class USCoreEncounterProfile_Hospitalization extends Message<USCoreEncounterProfile_Hospitalization> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Pre-admission identifier
   *
   * @generated from field: google.fhir.r4.core.Identifier pre_admission_identifier = 4;
   */
  preAdmissionIdentifier?: Identifier;

  /**
   * The location/organization from which the patient came before admission
   *
   * @generated from field: google.fhir.r4.core.Reference origin = 5;
   */
  origin?: Reference;

  /**
   * From where patient was admitted (physician referral, transfer)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept admit_source = 6;
   */
  admitSource?: CodeableConcept;

  /**
   * The type of hospital re-admission that has occurred (if any). If the
   * value is absent, then this is not identified as a readmission
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept re_admission = 7;
   */
  reAdmission?: CodeableConcept;

  /**
   * Diet preferences reported by the patient
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept diet_preference = 8;
   */
  dietPreference: CodeableConcept[] = [];

  /**
   * Special courtesies (VIP, board member)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept special_courtesy = 9;
   */
  specialCourtesy: CodeableConcept[] = [];

  /**
   * Wheelchair, translator, stretcher, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept special_arrangement = 10;
   */
  specialArrangement: CodeableConcept[] = [];

  /**
   * Location/organization to which the patient is discharged
   *
   * @generated from field: google.fhir.r4.core.Reference destination = 11;
   */
  destination?: Reference;

  /**
   * Category or kind of location after discharge
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept discharge_disposition = 12;
   */
  dischargeDisposition?: CodeableConcept;

  constructor(data?: PartialMessage<USCoreEncounterProfile_Hospitalization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.Hospitalization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "pre_admission_identifier", kind: "message", T: Identifier },
    { no: 5, name: "origin", kind: "message", T: Reference },
    { no: 6, name: "admit_source", kind: "message", T: CodeableConcept },
    { no: 7, name: "re_admission", kind: "message", T: CodeableConcept },
    { no: 8, name: "diet_preference", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "special_courtesy", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "special_arrangement", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "destination", kind: "message", T: Reference },
    { no: 12, name: "discharge_disposition", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_Hospitalization {
    return new USCoreEncounterProfile_Hospitalization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Hospitalization {
    return new USCoreEncounterProfile_Hospitalization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Hospitalization {
    return new USCoreEncounterProfile_Hospitalization().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_Hospitalization | PlainMessage<USCoreEncounterProfile_Hospitalization> | undefined, b: USCoreEncounterProfile_Hospitalization | PlainMessage<USCoreEncounterProfile_Hospitalization> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_Hospitalization, a, b);
  }
}

/**
 * List of locations where the patient has been
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.Location
 */
export class USCoreEncounterProfile_Location extends Message<USCoreEncounterProfile_Location> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Location the encounter takes place
   *
   * @generated from field: google.fhir.r4.core.Reference location = 4;
   */
  location?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreEncounterProfile.Location.StatusCode status = 5;
   */
  status?: USCoreEncounterProfile_Location_StatusCode;

  /**
   * The physical type of the location (usually the level in the location
   * hierachy - bed room ward etc.)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept physical_type = 6;
   */
  physicalType?: CodeableConcept;

  /**
   * Time period during which the patient was present at the location
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<USCoreEncounterProfile_Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "location", kind: "message", T: Reference },
    { no: 5, name: "status", kind: "message", T: USCoreEncounterProfile_Location_StatusCode },
    { no: 6, name: "physical_type", kind: "message", T: CodeableConcept },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_Location {
    return new USCoreEncounterProfile_Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Location {
    return new USCoreEncounterProfile_Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Location {
    return new USCoreEncounterProfile_Location().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_Location | PlainMessage<USCoreEncounterProfile_Location> | undefined, b: USCoreEncounterProfile_Location | PlainMessage<USCoreEncounterProfile_Location> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_Location, a, b);
  }
}

/**
 * planned | active | reserved | completed
 *
 * @generated from message google.fhir.r4.uscore.USCoreEncounterProfile.Location.StatusCode
 */
export class USCoreEncounterProfile_Location_StatusCode extends Message<USCoreEncounterProfile_Location_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.EncounterLocationStatusCode.Value value = 1;
   */
  value = EncounterLocationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreEncounterProfile_Location_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreEncounterProfile.Location.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EncounterLocationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreEncounterProfile_Location_StatusCode {
    return new USCoreEncounterProfile_Location_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Location_StatusCode {
    return new USCoreEncounterProfile_Location_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreEncounterProfile_Location_StatusCode {
    return new USCoreEncounterProfile_Location_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreEncounterProfile_Location_StatusCode | PlainMessage<USCoreEncounterProfile_Location_StatusCode> | undefined, b: USCoreEncounterProfile_Location_StatusCode | PlainMessage<USCoreEncounterProfile_Location_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreEncounterProfile_Location_StatusCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreGoalProfile.
 * Describes the intended objective(s) for a patient, group or organization.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-goal
 *
 * @generated from message google.fhir.r4.uscore.USCoreGoalProfile
 */
export class USCoreGoalProfile extends Message<USCoreGoalProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this goal
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreGoalProfile.LifecycleStatusCode lifecycle_status = 11;
   */
  lifecycleStatus?: USCoreGoalProfile_LifecycleStatusCode;

  /**
   * in-progress | improving | worsening | no-change | achieved | sustaining |
   * not-achieved | no-progress | not-attainable
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept achievement_status = 12;
   */
  achievementStatus?: CodeableConcept;

  /**
   * E.g. Treatment, dietary, behavioral, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 13;
   */
  category: CodeableConcept[] = [];

  /**
   * high-priority | medium-priority | low-priority
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 14;
   */
  priority?: CodeableConcept;

  /**
   * Code or text describing goal
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept description = 15;
   */
  description?: CodeableConcept;

  /**
   * Who this goal is intended for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreGoalProfile.StartX start = 17;
   */
  start?: USCoreGoalProfile_StartX;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreGoalProfile.Target target = 18;
   */
  target: USCoreGoalProfile_Target[] = [];

  /**
   * When goal status took effect
   *
   * @generated from field: google.fhir.r4.core.Date status_date = 19;
   */
  statusDate?: Date;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.String status_reason = 20;
   */
  statusReason?: String;

  /**
   * Who's responsible for creating Goal?
   *
   * @generated from field: google.fhir.r4.core.Reference expressed_by = 21;
   */
  expressedBy?: Reference;

  /**
   * Issues addressed by this goal
   *
   * @generated from field: repeated google.fhir.r4.core.Reference addresses = 22;
   */
  addresses: Reference[] = [];

  /**
   * Comments about the goal
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 23;
   */
  note: Annotation[] = [];

  /**
   * What result was achieved regarding the goal?
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept outcome_code = 24;
   */
  outcomeCode: CodeableConcept[] = [];

  /**
   * Observation that resulted from goal
   *
   * @generated from field: repeated google.fhir.r4.core.Reference outcome_reference = 25;
   */
  outcomeReference: Reference[] = [];

  constructor(data?: PartialMessage<USCoreGoalProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreGoalProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "lifecycle_status", kind: "message", T: USCoreGoalProfile_LifecycleStatusCode },
    { no: 12, name: "achievement_status", kind: "message", T: CodeableConcept },
    { no: 13, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "priority", kind: "message", T: CodeableConcept },
    { no: 15, name: "description", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "start", kind: "message", T: USCoreGoalProfile_StartX },
    { no: 18, name: "target", kind: "message", T: USCoreGoalProfile_Target, repeated: true },
    { no: 19, name: "status_date", kind: "message", T: Date },
    { no: 20, name: "status_reason", kind: "message", T: String },
    { no: 21, name: "expressed_by", kind: "message", T: Reference },
    { no: 22, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 23, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 24, name: "outcome_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreGoalProfile {
    return new USCoreGoalProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreGoalProfile {
    return new USCoreGoalProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreGoalProfile {
    return new USCoreGoalProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreGoalProfile | PlainMessage<USCoreGoalProfile> | undefined, b: USCoreGoalProfile | PlainMessage<USCoreGoalProfile> | undefined): boolean {
    return proto3.util.equals(USCoreGoalProfile, a, b);
  }
}

/**
 * proposed | planned | accepted | active | on-hold | completed | cancelled |
 * entered-in-error | rejected
 *
 * @generated from message google.fhir.r4.uscore.USCoreGoalProfile.LifecycleStatusCode
 */
export class USCoreGoalProfile_LifecycleStatusCode extends Message<USCoreGoalProfile_LifecycleStatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.GoalLifecycleStatusCode.Value value = 1;
   */
  value = GoalLifecycleStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreGoalProfile_LifecycleStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreGoalProfile.LifecycleStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalLifecycleStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreGoalProfile_LifecycleStatusCode {
    return new USCoreGoalProfile_LifecycleStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreGoalProfile_LifecycleStatusCode {
    return new USCoreGoalProfile_LifecycleStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreGoalProfile_LifecycleStatusCode {
    return new USCoreGoalProfile_LifecycleStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreGoalProfile_LifecycleStatusCode | PlainMessage<USCoreGoalProfile_LifecycleStatusCode> | undefined, b: USCoreGoalProfile_LifecycleStatusCode | PlainMessage<USCoreGoalProfile_LifecycleStatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreGoalProfile_LifecycleStatusCode, a, b);
  }
}

/**
 * When goal pursuit begins
 *
 * @generated from message google.fhir.r4.uscore.USCoreGoalProfile.StartX
 */
export class USCoreGoalProfile_StartX extends Message<USCoreGoalProfile_StartX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreGoalProfile.StartX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreGoalProfile_StartX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreGoalProfile.StartX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreGoalProfile_StartX {
    return new USCoreGoalProfile_StartX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreGoalProfile_StartX {
    return new USCoreGoalProfile_StartX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreGoalProfile_StartX {
    return new USCoreGoalProfile_StartX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreGoalProfile_StartX | PlainMessage<USCoreGoalProfile_StartX> | undefined, b: USCoreGoalProfile_StartX | PlainMessage<USCoreGoalProfile_StartX> | undefined): boolean {
    return proto3.util.equals(USCoreGoalProfile_StartX, a, b);
  }
}

/**
 * Target outcome for the goal
 *
 * @generated from message google.fhir.r4.uscore.USCoreGoalProfile.Target
 */
export class USCoreGoalProfile_Target extends Message<USCoreGoalProfile_Target> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The parameter whose value is being tracked
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept measure = 4;
   */
  measure?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreGoalProfile.Target.DetailX detail = 5;
   */
  detail?: USCoreGoalProfile_Target_DetailX;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreGoalProfile.Target.DueX due = 6;
   */
  due?: USCoreGoalProfile_Target_DueX;

  constructor(data?: PartialMessage<USCoreGoalProfile_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreGoalProfile.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "measure", kind: "message", T: CodeableConcept },
    { no: 5, name: "detail", kind: "message", T: USCoreGoalProfile_Target_DetailX },
    { no: 6, name: "due", kind: "message", T: USCoreGoalProfile_Target_DueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreGoalProfile_Target {
    return new USCoreGoalProfile_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreGoalProfile_Target {
    return new USCoreGoalProfile_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreGoalProfile_Target {
    return new USCoreGoalProfile_Target().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreGoalProfile_Target | PlainMessage<USCoreGoalProfile_Target> | undefined, b: USCoreGoalProfile_Target | PlainMessage<USCoreGoalProfile_Target> | undefined): boolean {
    return proto3.util.equals(USCoreGoalProfile_Target, a, b);
  }
}

/**
 * The target value to be achieved
 *
 * @generated from message google.fhir.r4.uscore.USCoreGoalProfile.Target.DetailX
 */
export class USCoreGoalProfile_Target_DetailX extends Message<USCoreGoalProfile_Target_DetailX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreGoalProfile.Target.DetailX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 3;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 4 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 5;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreGoalProfile_Target_DetailX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreGoalProfile.Target.DetailX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 3, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 4, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 5, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreGoalProfile_Target_DetailX {
    return new USCoreGoalProfile_Target_DetailX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreGoalProfile_Target_DetailX {
    return new USCoreGoalProfile_Target_DetailX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreGoalProfile_Target_DetailX {
    return new USCoreGoalProfile_Target_DetailX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreGoalProfile_Target_DetailX | PlainMessage<USCoreGoalProfile_Target_DetailX> | undefined, b: USCoreGoalProfile_Target_DetailX | PlainMessage<USCoreGoalProfile_Target_DetailX> | undefined): boolean {
    return proto3.util.equals(USCoreGoalProfile_Target_DetailX, a, b);
  }
}

/**
 * Reach goal on or before
 *
 * @generated from message google.fhir.r4.uscore.USCoreGoalProfile.Target.DueX
 */
export class USCoreGoalProfile_Target_DueX extends Message<USCoreGoalProfile_Target_DueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreGoalProfile.Target.DueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreGoalProfile_Target_DueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreGoalProfile.Target.DueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreGoalProfile_Target_DueX {
    return new USCoreGoalProfile_Target_DueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreGoalProfile_Target_DueX {
    return new USCoreGoalProfile_Target_DueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreGoalProfile_Target_DueX {
    return new USCoreGoalProfile_Target_DueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreGoalProfile_Target_DueX | PlainMessage<USCoreGoalProfile_Target_DueX> | undefined, b: USCoreGoalProfile_Target_DueX | PlainMessage<USCoreGoalProfile_Target_DueX> | undefined): boolean {
    return proto3.util.equals(USCoreGoalProfile_Target_DueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreImmunizationProfile.
 * Immunization event information.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-immunization
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile
 */
export class USCoreImmunizationProfile extends Message<USCoreImmunizationProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImmunizationProfile.StatusCode status = 11;
   */
  status?: USCoreImmunizationProfile_StatusCode;

  /**
   * Reason not done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 12;
   */
  statusReason?: CodeableConcept;

  /**
   * Vaccine Product Type (bind to CVX)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept vaccine_code = 13;
   */
  vaccineCode?: CodeableConcept;

  /**
   * Who was immunized
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * Encounter immunization was part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImmunizationProfile.OccurrenceX occurrence = 16;
   */
  occurrence?: USCoreImmunizationProfile_OccurrenceX;

  /**
   * When the immunization was first captured in the subject's record
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded = 17;
   */
  recorded?: DateTime;

  /**
   * Indicates context the data was recorded in
   *
   * @generated from field: google.fhir.r4.core.Boolean primary_source = 18;
   */
  primarySource?: Boolean;

  /**
   * Indicates the source of a secondarily reported record
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept report_origin = 19;
   */
  reportOrigin?: CodeableConcept;

  /**
   * Where immunization occurred
   *
   * @generated from field: google.fhir.r4.core.Reference location = 20;
   */
  location?: Reference;

  /**
   * Vaccine manufacturer
   *
   * @generated from field: google.fhir.r4.core.Reference manufacturer = 21;
   */
  manufacturer?: Reference;

  /**
   * Vaccine lot number
   *
   * @generated from field: google.fhir.r4.core.String lot_number = 22;
   */
  lotNumber?: String;

  /**
   * Vaccine expiration date
   *
   * @generated from field: google.fhir.r4.core.Date expiration_date = 23;
   */
  expirationDate?: Date;

  /**
   * Body site vaccine  was administered
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept site = 24;
   */
  site?: CodeableConcept;

  /**
   * How vaccine entered body
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept route = 25;
   */
  route?: CodeableConcept;

  /**
   * Amount of vaccine administered
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity dose_quantity = 26;
   */
  doseQuantity?: SimpleQuantity;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImmunizationProfile.Performer performer = 27;
   */
  performer: USCoreImmunizationProfile_Performer[] = [];

  /**
   * Additional immunization notes
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 28;
   */
  note: Annotation[] = [];

  /**
   * Why immunization occurred
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 29;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why immunization occurred
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 30;
   */
  reasonReference: Reference[] = [];

  /**
   * Dose potency
   *
   * @generated from field: google.fhir.r4.core.Boolean is_subpotent = 31;
   */
  isSubpotent?: Boolean;

  /**
   * Reason for being subpotent
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept subpotent_reason = 32;
   */
  subpotentReason: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImmunizationProfile.Education education = 33;
   */
  education: USCoreImmunizationProfile_Education[] = [];

  /**
   * Patient eligibility for a vaccination program
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_eligibility = 34;
   */
  programEligibility: CodeableConcept[] = [];

  /**
   * Funding source for the vaccine
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept funding_source = 35;
   */
  fundingSource?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImmunizationProfile.Reaction reaction = 36;
   */
  reaction: USCoreImmunizationProfile_Reaction[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied protocol_applied = 37;
   */
  protocolApplied: USCoreImmunizationProfile_ProtocolApplied[] = [];

  constructor(data?: PartialMessage<USCoreImmunizationProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: USCoreImmunizationProfile_StatusCode },
    { no: 12, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 13, name: "vaccine_code", kind: "message", T: CodeableConcept },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "encounter", kind: "message", T: Reference },
    { no: 16, name: "occurrence", kind: "message", T: USCoreImmunizationProfile_OccurrenceX },
    { no: 17, name: "recorded", kind: "message", T: DateTime },
    { no: 18, name: "primary_source", kind: "message", T: Boolean },
    { no: 19, name: "report_origin", kind: "message", T: CodeableConcept },
    { no: 20, name: "location", kind: "message", T: Reference },
    { no: 21, name: "manufacturer", kind: "message", T: Reference },
    { no: 22, name: "lot_number", kind: "message", T: String },
    { no: 23, name: "expiration_date", kind: "message", T: Date },
    { no: 24, name: "site", kind: "message", T: CodeableConcept },
    { no: 25, name: "route", kind: "message", T: CodeableConcept },
    { no: 26, name: "dose_quantity", kind: "message", T: SimpleQuantity },
    { no: 27, name: "performer", kind: "message", T: USCoreImmunizationProfile_Performer, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 29, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 30, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "is_subpotent", kind: "message", T: Boolean },
    { no: 32, name: "subpotent_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 33, name: "education", kind: "message", T: USCoreImmunizationProfile_Education, repeated: true },
    { no: 34, name: "program_eligibility", kind: "message", T: CodeableConcept, repeated: true },
    { no: 35, name: "funding_source", kind: "message", T: CodeableConcept },
    { no: 36, name: "reaction", kind: "message", T: USCoreImmunizationProfile_Reaction, repeated: true },
    { no: 37, name: "protocol_applied", kind: "message", T: USCoreImmunizationProfile_ProtocolApplied, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile {
    return new USCoreImmunizationProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile {
    return new USCoreImmunizationProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile {
    return new USCoreImmunizationProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile | PlainMessage<USCoreImmunizationProfile> | undefined, b: USCoreImmunizationProfile | PlainMessage<USCoreImmunizationProfile> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile, a, b);
  }
}

/**
 * completed | entered-in-error | not-done
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.StatusCode
 */
export class USCoreImmunizationProfile_StatusCode extends Message<USCoreImmunizationProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ImmunizationStatusCodesValueSet.Value value = 1;
   */
  value = ImmunizationStatusCodesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreImmunizationProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationStatusCodesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_StatusCode {
    return new USCoreImmunizationProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_StatusCode {
    return new USCoreImmunizationProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_StatusCode {
    return new USCoreImmunizationProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_StatusCode | PlainMessage<USCoreImmunizationProfile_StatusCode> | undefined, b: USCoreImmunizationProfile_StatusCode | PlainMessage<USCoreImmunizationProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_StatusCode, a, b);
  }
}

/**
 * Vaccine administration date
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.OccurrenceX
 */
export class USCoreImmunizationProfile_OccurrenceX extends Message<USCoreImmunizationProfile_OccurrenceX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreImmunizationProfile.OccurrenceX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreImmunizationProfile_OccurrenceX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.OccurrenceX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_OccurrenceX {
    return new USCoreImmunizationProfile_OccurrenceX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_OccurrenceX {
    return new USCoreImmunizationProfile_OccurrenceX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_OccurrenceX {
    return new USCoreImmunizationProfile_OccurrenceX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_OccurrenceX | PlainMessage<USCoreImmunizationProfile_OccurrenceX> | undefined, b: USCoreImmunizationProfile_OccurrenceX | PlainMessage<USCoreImmunizationProfile_OccurrenceX> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_OccurrenceX, a, b);
  }
}

/**
 * Who performed event
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.Performer
 */
export class USCoreImmunizationProfile_Performer extends Message<USCoreImmunizationProfile_Performer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What type of performance was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * Individual or organization who was performing
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<USCoreImmunizationProfile_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "function", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_Performer {
    return new USCoreImmunizationProfile_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_Performer {
    return new USCoreImmunizationProfile_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_Performer {
    return new USCoreImmunizationProfile_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_Performer | PlainMessage<USCoreImmunizationProfile_Performer> | undefined, b: USCoreImmunizationProfile_Performer | PlainMessage<USCoreImmunizationProfile_Performer> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_Performer, a, b);
  }
}

/**
 * Educational material presented to patient
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.Education
 */
export class USCoreImmunizationProfile_Education extends Message<USCoreImmunizationProfile_Education> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Educational material document identifier
   *
   * @generated from field: google.fhir.r4.core.String document_type = 4;
   */
  documentType?: String;

  /**
   * Educational material reference pointer
   *
   * @generated from field: google.fhir.r4.core.Uri reference = 5;
   */
  reference?: Uri;

  /**
   * Educational material publication date
   *
   * @generated from field: google.fhir.r4.core.DateTime publication_date = 6;
   */
  publicationDate?: DateTime;

  /**
   * Educational material presentation date
   *
   * @generated from field: google.fhir.r4.core.DateTime presentation_date = 7;
   */
  presentationDate?: DateTime;

  constructor(data?: PartialMessage<USCoreImmunizationProfile_Education>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.Education";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "document_type", kind: "message", T: String },
    { no: 5, name: "reference", kind: "message", T: Uri },
    { no: 6, name: "publication_date", kind: "message", T: DateTime },
    { no: 7, name: "presentation_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_Education {
    return new USCoreImmunizationProfile_Education().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_Education {
    return new USCoreImmunizationProfile_Education().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_Education {
    return new USCoreImmunizationProfile_Education().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_Education | PlainMessage<USCoreImmunizationProfile_Education> | undefined, b: USCoreImmunizationProfile_Education | PlainMessage<USCoreImmunizationProfile_Education> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_Education, a, b);
  }
}

/**
 * Details of a reaction that follows immunization
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.Reaction
 */
export class USCoreImmunizationProfile_Reaction extends Message<USCoreImmunizationProfile_Reaction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When reaction started
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 4;
   */
  date?: DateTime;

  /**
   * Additional information on reaction
   *
   * @generated from field: google.fhir.r4.core.Reference detail = 5;
   */
  detail?: Reference;

  /**
   * Indicates self-reported reaction
   *
   * @generated from field: google.fhir.r4.core.Boolean reported = 6;
   */
  reported?: Boolean;

  constructor(data?: PartialMessage<USCoreImmunizationProfile_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: DateTime },
    { no: 5, name: "detail", kind: "message", T: Reference },
    { no: 6, name: "reported", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_Reaction {
    return new USCoreImmunizationProfile_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_Reaction {
    return new USCoreImmunizationProfile_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_Reaction {
    return new USCoreImmunizationProfile_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_Reaction | PlainMessage<USCoreImmunizationProfile_Reaction> | undefined, b: USCoreImmunizationProfile_Reaction | PlainMessage<USCoreImmunizationProfile_Reaction> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_Reaction, a, b);
  }
}

/**
 * Protocol followed by the provider
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied
 */
export class USCoreImmunizationProfile_ProtocolApplied extends Message<USCoreImmunizationProfile_ProtocolApplied> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of vaccine series
   *
   * @generated from field: google.fhir.r4.core.String series = 4;
   */
  series?: String;

  /**
   * Who is responsible for publishing the recommendations
   *
   * @generated from field: google.fhir.r4.core.Reference authority = 5;
   */
  authority?: Reference;

  /**
   * Vaccine preventatable disease being targetted
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept target_disease = 6;
   */
  targetDisease: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.DoseNumberX dose_number = 7;
   */
  doseNumber?: USCoreImmunizationProfile_ProtocolApplied_DoseNumberX;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.SeriesDosesX series_doses = 8;
   */
  seriesDoses?: USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX;

  constructor(data?: PartialMessage<USCoreImmunizationProfile_ProtocolApplied>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "series", kind: "message", T: String },
    { no: 5, name: "authority", kind: "message", T: Reference },
    { no: 6, name: "target_disease", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "dose_number", kind: "message", T: USCoreImmunizationProfile_ProtocolApplied_DoseNumberX },
    { no: 8, name: "series_doses", kind: "message", T: USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_ProtocolApplied {
    return new USCoreImmunizationProfile_ProtocolApplied().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_ProtocolApplied {
    return new USCoreImmunizationProfile_ProtocolApplied().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_ProtocolApplied {
    return new USCoreImmunizationProfile_ProtocolApplied().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_ProtocolApplied | PlainMessage<USCoreImmunizationProfile_ProtocolApplied> | undefined, b: USCoreImmunizationProfile_ProtocolApplied | PlainMessage<USCoreImmunizationProfile_ProtocolApplied> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_ProtocolApplied, a, b);
  }
}

/**
 * Dose number within series
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.DoseNumberX
 */
export class USCoreImmunizationProfile_ProtocolApplied_DoseNumberX extends Message<USCoreImmunizationProfile_ProtocolApplied_DoseNumberX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.DoseNumberX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreImmunizationProfile_ProtocolApplied_DoseNumberX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.DoseNumberX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_ProtocolApplied_DoseNumberX {
    return new USCoreImmunizationProfile_ProtocolApplied_DoseNumberX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_ProtocolApplied_DoseNumberX {
    return new USCoreImmunizationProfile_ProtocolApplied_DoseNumberX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_ProtocolApplied_DoseNumberX {
    return new USCoreImmunizationProfile_ProtocolApplied_DoseNumberX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_ProtocolApplied_DoseNumberX | PlainMessage<USCoreImmunizationProfile_ProtocolApplied_DoseNumberX> | undefined, b: USCoreImmunizationProfile_ProtocolApplied_DoseNumberX | PlainMessage<USCoreImmunizationProfile_ProtocolApplied_DoseNumberX> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_ProtocolApplied_DoseNumberX, a, b);
  }
}

/**
 * Recommended number of doses for immunity
 *
 * @generated from message google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.SeriesDosesX
 */
export class USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX extends Message<USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.SeriesDosesX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImmunizationProfile.ProtocolApplied.SeriesDosesX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX {
    return new USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX {
    return new USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX {
    return new USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX | PlainMessage<USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX> | undefined, b: USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX | PlainMessage<USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX> | undefined): boolean {
    return proto3.util.equals(USCoreImmunizationProfile_ProtocolApplied_SeriesDosesX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreImplantableDeviceProfile.
 * Item used in healthcare.
 * See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-implantable-device
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile
 */
export class USCoreImplantableDeviceProfile extends Message<USCoreImplantableDeviceProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Instance identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * The reference to the definition for the device
   *
   * @generated from field: google.fhir.r4.core.Reference definition = 11;
   */
  definition?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImplantableDeviceProfile.UdiCarrier udi_carrier = 12;
   */
  udiCarrier?: USCoreImplantableDeviceProfile_UdiCarrier;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImplantableDeviceProfile.StatusCode status = 13;
   */
  status?: USCoreImplantableDeviceProfile_StatusCode;

  /**
   * online | paused | standby | offline | not-ready | transduc-discon |
   * hw-discon | off
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept status_reason = 14;
   */
  statusReason: CodeableConcept[] = [];

  /**
   * The distinct identification string
   *
   * @generated from field: google.fhir.r4.core.String distinct_identifier = 15;
   */
  distinctIdentifier?: String;

  /**
   * Name of device manufacturer
   *
   * @generated from field: google.fhir.r4.core.String manufacturer = 16;
   */
  manufacturer?: String;

  /**
   * Date when the device was made
   *
   * @generated from field: google.fhir.r4.core.DateTime manufacture_date = 17;
   */
  manufactureDate?: DateTime;

  /**
   * Date and time of expiry of this device (if applicable)
   *
   * @generated from field: google.fhir.r4.core.DateTime expiration_date = 18;
   */
  expirationDate?: DateTime;

  /**
   * Lot number of manufacture
   *
   * @generated from field: google.fhir.r4.core.String lot_number = 19;
   */
  lotNumber?: String;

  /**
   * Serial number assigned by the manufacturer
   *
   * @generated from field: google.fhir.r4.core.String serial_number = 20;
   */
  serialNumber?: String;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImplantableDeviceProfile.DeviceName device_name = 21;
   */
  deviceName: USCoreImplantableDeviceProfile_DeviceName[] = [];

  /**
   * The model number for the device
   *
   * @generated from field: google.fhir.r4.core.String model_number = 22;
   */
  modelNumber?: String;

  /**
   * The part number of the device
   *
   * @generated from field: google.fhir.r4.core.String part_number = 23;
   */
  partNumber?: String;

  /**
   * The kind or type of device
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 24;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Specialization specialization = 25;
   */
  specialization: USCoreImplantableDeviceProfile_Specialization[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Version version = 26;
   */
  version: USCoreImplantableDeviceProfile_Version[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Property property = 27;
   */
  property: USCoreImplantableDeviceProfile_Property[] = [];

  /**
   * Patient to whom Device is affixed
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 28;
   */
  patient?: Reference;

  /**
   * Organization responsible for device
   *
   * @generated from field: google.fhir.r4.core.Reference owner = 29;
   */
  owner?: Reference;

  /**
   * Details for human/organization for support
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint contact = 30;
   */
  contact: ContactPoint[] = [];

  /**
   * Where the device is found
   *
   * @generated from field: google.fhir.r4.core.Reference location = 31;
   */
  location?: Reference;

  /**
   * Network address to contact device
   *
   * @generated from field: google.fhir.r4.core.Uri url = 32;
   */
  url?: Uri;

  /**
   * Device notes and comments
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 33;
   */
  note: Annotation[] = [];

  /**
   * Safety Characteristics of Device
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept safety = 34;
   */
  safety: CodeableConcept[] = [];

  /**
   * The parent device
   *
   * @generated from field: google.fhir.r4.core.Reference parent = 35;
   */
  parent?: Reference;

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "definition", kind: "message", T: Reference },
    { no: 12, name: "udi_carrier", kind: "message", T: USCoreImplantableDeviceProfile_UdiCarrier },
    { no: 13, name: "status", kind: "message", T: USCoreImplantableDeviceProfile_StatusCode },
    { no: 14, name: "status_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "distinct_identifier", kind: "message", T: String },
    { no: 16, name: "manufacturer", kind: "message", T: String },
    { no: 17, name: "manufacture_date", kind: "message", T: DateTime },
    { no: 18, name: "expiration_date", kind: "message", T: DateTime },
    { no: 19, name: "lot_number", kind: "message", T: String },
    { no: 20, name: "serial_number", kind: "message", T: String },
    { no: 21, name: "device_name", kind: "message", T: USCoreImplantableDeviceProfile_DeviceName, repeated: true },
    { no: 22, name: "model_number", kind: "message", T: String },
    { no: 23, name: "part_number", kind: "message", T: String },
    { no: 24, name: "type", kind: "message", T: CodeableConcept },
    { no: 25, name: "specialization", kind: "message", T: USCoreImplantableDeviceProfile_Specialization, repeated: true },
    { no: 26, name: "version", kind: "message", T: USCoreImplantableDeviceProfile_Version, repeated: true },
    { no: 27, name: "property", kind: "message", T: USCoreImplantableDeviceProfile_Property, repeated: true },
    { no: 28, name: "patient", kind: "message", T: Reference },
    { no: 29, name: "owner", kind: "message", T: Reference },
    { no: 30, name: "contact", kind: "message", T: ContactPoint, repeated: true },
    { no: 31, name: "location", kind: "message", T: Reference },
    { no: 32, name: "url", kind: "message", T: Uri },
    { no: 33, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 34, name: "safety", kind: "message", T: CodeableConcept, repeated: true },
    { no: 35, name: "parent", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile {
    return new USCoreImplantableDeviceProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile {
    return new USCoreImplantableDeviceProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile {
    return new USCoreImplantableDeviceProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile | PlainMessage<USCoreImplantableDeviceProfile> | undefined, b: USCoreImplantableDeviceProfile | PlainMessage<USCoreImplantableDeviceProfile> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile, a, b);
  }
}

/**
 * Unique Device Identifier (UDI) Barcode string
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.UdiCarrier
 */
export class USCoreImplantableDeviceProfile_UdiCarrier extends Message<USCoreImplantableDeviceProfile_UdiCarrier> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Mandatory fixed portion of UDI
   *
   * @generated from field: google.fhir.r4.core.String device_identifier = 4;
   */
  deviceIdentifier?: String;

  /**
   * UDI Issuing Organization
   *
   * @generated from field: google.fhir.r4.core.Uri issuer = 5;
   */
  issuer?: Uri;

  /**
   * Regional UDI authority
   *
   * @generated from field: google.fhir.r4.core.Uri jurisdiction = 6;
   */
  jurisdiction?: Uri;

  /**
   * UDI Machine Readable Barcode String
   *
   * @generated from field: google.fhir.r4.core.Base64Binary carrier_aidc = 7 [json_name = "carrierAIDC"];
   */
  carrierAidc?: Base64Binary;

  /**
   * UDI Human Readable Barcode String
   *
   * @generated from field: google.fhir.r4.core.String carrier_hrf = 8 [json_name = "carrierHRF"];
   */
  carrierHrf?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImplantableDeviceProfile.UdiCarrier.EntryTypeCode entry_type = 9;
   */
  entryType?: USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode;

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_UdiCarrier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.UdiCarrier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "device_identifier", kind: "message", T: String },
    { no: 5, name: "issuer", kind: "message", T: Uri },
    { no: 6, name: "jurisdiction", kind: "message", T: Uri },
    { no: 7, name: "carrier_aidc", jsonName: "carrierAIDC", kind: "message", T: Base64Binary },
    { no: 8, name: "carrier_hrf", jsonName: "carrierHRF", kind: "message", T: String },
    { no: 9, name: "entry_type", kind: "message", T: USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_UdiCarrier {
    return new USCoreImplantableDeviceProfile_UdiCarrier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_UdiCarrier {
    return new USCoreImplantableDeviceProfile_UdiCarrier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_UdiCarrier {
    return new USCoreImplantableDeviceProfile_UdiCarrier().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_UdiCarrier | PlainMessage<USCoreImplantableDeviceProfile_UdiCarrier> | undefined, b: USCoreImplantableDeviceProfile_UdiCarrier | PlainMessage<USCoreImplantableDeviceProfile_UdiCarrier> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_UdiCarrier, a, b);
  }
}

/**
 * barcode | rfid | manual +
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.UdiCarrier.EntryTypeCode
 */
export class USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode extends Message<USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.UDIEntryTypeCode.Value value = 1;
   */
  value = UDIEntryTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.UdiCarrier.EntryTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UDIEntryTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode {
    return new USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode {
    return new USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode {
    return new USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode | PlainMessage<USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode> | undefined, b: USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode | PlainMessage<USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_UdiCarrier_EntryTypeCode, a, b);
  }
}

/**
 * active | inactive | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.StatusCode
 */
export class USCoreImplantableDeviceProfile_StatusCode extends Message<USCoreImplantableDeviceProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRDeviceStatusCode.Value value = 1;
   */
  value = FHIRDeviceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRDeviceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_StatusCode {
    return new USCoreImplantableDeviceProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_StatusCode {
    return new USCoreImplantableDeviceProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_StatusCode {
    return new USCoreImplantableDeviceProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_StatusCode | PlainMessage<USCoreImplantableDeviceProfile_StatusCode> | undefined, b: USCoreImplantableDeviceProfile_StatusCode | PlainMessage<USCoreImplantableDeviceProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_StatusCode, a, b);
  }
}

/**
 * The name of the device as given by the manufacturer
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.DeviceName
 */
export class USCoreImplantableDeviceProfile_DeviceName extends Message<USCoreImplantableDeviceProfile_DeviceName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The name of the device
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreImplantableDeviceProfile.DeviceName.TypeCode type = 5;
   */
  type?: USCoreImplantableDeviceProfile_DeviceName_TypeCode;

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_DeviceName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.DeviceName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "type", kind: "message", T: USCoreImplantableDeviceProfile_DeviceName_TypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_DeviceName {
    return new USCoreImplantableDeviceProfile_DeviceName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_DeviceName {
    return new USCoreImplantableDeviceProfile_DeviceName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_DeviceName {
    return new USCoreImplantableDeviceProfile_DeviceName().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_DeviceName | PlainMessage<USCoreImplantableDeviceProfile_DeviceName> | undefined, b: USCoreImplantableDeviceProfile_DeviceName | PlainMessage<USCoreImplantableDeviceProfile_DeviceName> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_DeviceName, a, b);
  }
}

/**
 * udi-label-name | user-friendly-name | patient-reported-name |
 * manufacturer-name | model-name | other
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.DeviceName.TypeCode
 */
export class USCoreImplantableDeviceProfile_DeviceName_TypeCode extends Message<USCoreImplantableDeviceProfile_DeviceName_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.DeviceNameTypeCode.Value value = 1;
   */
  value = DeviceNameTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_DeviceName_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.DeviceName.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceNameTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_DeviceName_TypeCode {
    return new USCoreImplantableDeviceProfile_DeviceName_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_DeviceName_TypeCode {
    return new USCoreImplantableDeviceProfile_DeviceName_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_DeviceName_TypeCode {
    return new USCoreImplantableDeviceProfile_DeviceName_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_DeviceName_TypeCode | PlainMessage<USCoreImplantableDeviceProfile_DeviceName_TypeCode> | undefined, b: USCoreImplantableDeviceProfile_DeviceName_TypeCode | PlainMessage<USCoreImplantableDeviceProfile_DeviceName_TypeCode> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_DeviceName_TypeCode, a, b);
  }
}

/**
 * The capabilities supported on a  device, the standards to which the device
 * conforms for a particular purpose, and used for the communication
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Specialization
 */
export class USCoreImplantableDeviceProfile_Specialization extends Message<USCoreImplantableDeviceProfile_Specialization> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The standard that is used to operate and communicate
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept system_type = 4;
   */
  systemType?: CodeableConcept;

  /**
   * The version of the standard that is used to operate and communicate
   *
   * @generated from field: google.fhir.r4.core.String version = 5;
   */
  version?: String;

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_Specialization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Specialization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system_type", kind: "message", T: CodeableConcept },
    { no: 5, name: "version", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_Specialization {
    return new USCoreImplantableDeviceProfile_Specialization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_Specialization {
    return new USCoreImplantableDeviceProfile_Specialization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_Specialization {
    return new USCoreImplantableDeviceProfile_Specialization().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_Specialization | PlainMessage<USCoreImplantableDeviceProfile_Specialization> | undefined, b: USCoreImplantableDeviceProfile_Specialization | PlainMessage<USCoreImplantableDeviceProfile_Specialization> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_Specialization, a, b);
  }
}

/**
 * The actual design of the device or software version running on the device
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Version
 */
export class USCoreImplantableDeviceProfile_Version extends Message<USCoreImplantableDeviceProfile_Version> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The type of the device version
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * A single component of the device version
   *
   * @generated from field: google.fhir.r4.core.Identifier component = 5;
   */
  component?: Identifier;

  /**
   * The version text
   *
   * @generated from field: google.fhir.r4.core.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_Version>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Version";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "component", kind: "message", T: Identifier },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_Version {
    return new USCoreImplantableDeviceProfile_Version().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_Version {
    return new USCoreImplantableDeviceProfile_Version().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_Version {
    return new USCoreImplantableDeviceProfile_Version().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_Version | PlainMessage<USCoreImplantableDeviceProfile_Version> | undefined, b: USCoreImplantableDeviceProfile_Version | PlainMessage<USCoreImplantableDeviceProfile_Version> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_Version, a, b);
  }
}

/**
 * The actual configuration settings of a device as it actually operates,
 * e.g., regulation status, time properties
 *
 * @generated from message google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Property
 */
export class USCoreImplantableDeviceProfile_Property extends Message<USCoreImplantableDeviceProfile_Property> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that specifies the property DeviceDefinitionPropetyCode (Extensible)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Property value as a quantity
   *
   * @generated from field: repeated google.fhir.r4.core.Quantity value_quantity = 5;
   */
  valueQuantity: Quantity[] = [];

  /**
   * Property value as a code, e.g., NTP4 (synced to NTP)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept value_code = 6;
   */
  valueCode: CodeableConcept[] = [];

  constructor(data?: PartialMessage<USCoreImplantableDeviceProfile_Property>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreImplantableDeviceProfile.Property";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "value_quantity", kind: "message", T: Quantity, repeated: true },
    { no: 6, name: "value_code", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreImplantableDeviceProfile_Property {
    return new USCoreImplantableDeviceProfile_Property().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_Property {
    return new USCoreImplantableDeviceProfile_Property().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreImplantableDeviceProfile_Property {
    return new USCoreImplantableDeviceProfile_Property().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreImplantableDeviceProfile_Property | PlainMessage<USCoreImplantableDeviceProfile_Property> | undefined, b: USCoreImplantableDeviceProfile_Property | PlainMessage<USCoreImplantableDeviceProfile_Property> | undefined): boolean {
    return proto3.util.equals(USCoreImplantableDeviceProfile_Property, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for
 * USCoreLaboratoryResultObservationProfile. Measurements and simple assertions.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-lab
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile
 */
export class USCoreLaboratoryResultObservationProfile extends Message<USCoreLaboratoryResultObservationProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.StatusCode status = 13;
   */
  status?: USCoreLaboratoryResultObservationProfile_StatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * Laboratory Test Name
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what the observation is about
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * What the observation is about, when it is not about the subject of record
   *
   * @generated from field: repeated google.fhir.r4.core.Reference focus = 17;
   */
  focus: Reference[] = [];

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.EffectiveX effective = 19;
   */
  effective?: USCoreLaboratoryResultObservationProfile_EffectiveX;

  /**
   * Date/Time this version was made available
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 20;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 21;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ValueX value = 22;
   */
  value?: USCoreLaboratoryResultObservationProfile_ValueX;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 23;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 24;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Comments about the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 26;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 27;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.r4.core.Reference specimen = 28;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.r4.core.Reference device = 29;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ReferenceRange reference_range = 30;
   */
  referenceRange: USCoreLaboratoryResultObservationProfile_ReferenceRange[] = [];

  /**
   * Related resource that belongs to the Observation group
   *
   * @generated from field: repeated google.fhir.r4.core.Reference has_member = 31;
   */
  hasMember: Reference[] = [];

  /**
   * Related measurements the observation is made from
   *
   * @generated from field: repeated google.fhir.r4.core.Reference derived_from = 32;
   */
  derivedFrom: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component component = 33;
   */
  component: USCoreLaboratoryResultObservationProfile_Component[] = [];

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: USCoreLaboratoryResultObservationProfile_StatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "focus", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "effective", kind: "message", T: USCoreLaboratoryResultObservationProfile_EffectiveX },
    { no: 20, name: "issued", kind: "message", T: Instant },
    { no: 21, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "value", kind: "message", T: USCoreLaboratoryResultObservationProfile_ValueX },
    { no: 23, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 24, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 27, name: "method", kind: "message", T: CodeableConcept },
    { no: 28, name: "specimen", kind: "message", T: Reference },
    { no: 29, name: "device", kind: "message", T: Reference },
    { no: 30, name: "reference_range", kind: "message", T: USCoreLaboratoryResultObservationProfile_ReferenceRange, repeated: true },
    { no: 31, name: "has_member", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "component", kind: "message", T: USCoreLaboratoryResultObservationProfile_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile {
    return new USCoreLaboratoryResultObservationProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile {
    return new USCoreLaboratoryResultObservationProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile {
    return new USCoreLaboratoryResultObservationProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile | PlainMessage<USCoreLaboratoryResultObservationProfile> | undefined, b: USCoreLaboratoryResultObservationProfile | PlainMessage<USCoreLaboratoryResultObservationProfile> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile, a, b);
  }
}

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.StatusCode
 */
export class USCoreLaboratoryResultObservationProfile_StatusCode extends Message<USCoreLaboratoryResultObservationProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ObservationStatusCode.Value value = 1;
   */
  value = ObservationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile_StatusCode {
    return new USCoreLaboratoryResultObservationProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_StatusCode {
    return new USCoreLaboratoryResultObservationProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_StatusCode {
    return new USCoreLaboratoryResultObservationProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile_StatusCode | PlainMessage<USCoreLaboratoryResultObservationProfile_StatusCode> | undefined, b: USCoreLaboratoryResultObservationProfile_StatusCode | PlainMessage<USCoreLaboratoryResultObservationProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile_StatusCode, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.EffectiveX
 */
export class USCoreLaboratoryResultObservationProfile_EffectiveX extends Message<USCoreLaboratoryResultObservationProfile_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile_EffectiveX {
    return new USCoreLaboratoryResultObservationProfile_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_EffectiveX {
    return new USCoreLaboratoryResultObservationProfile_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_EffectiveX {
    return new USCoreLaboratoryResultObservationProfile_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile_EffectiveX | PlainMessage<USCoreLaboratoryResultObservationProfile_EffectiveX> | undefined, b: USCoreLaboratoryResultObservationProfile_EffectiveX | PlainMessage<USCoreLaboratoryResultObservationProfile_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile_EffectiveX, a, b);
  }
}

/**
 * Result Value
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ValueX
 */
export class USCoreLaboratoryResultObservationProfile_ValueX extends Message<USCoreLaboratoryResultObservationProfile_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 6;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 8;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 6, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 8, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile_ValueX {
    return new USCoreLaboratoryResultObservationProfile_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_ValueX {
    return new USCoreLaboratoryResultObservationProfile_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_ValueX {
    return new USCoreLaboratoryResultObservationProfile_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile_ValueX | PlainMessage<USCoreLaboratoryResultObservationProfile_ValueX> | undefined, b: USCoreLaboratoryResultObservationProfile_ValueX | PlainMessage<USCoreLaboratoryResultObservationProfile_ValueX> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile_ValueX, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ReferenceRange
 */
export class USCoreLaboratoryResultObservationProfile_ReferenceRange extends Message<USCoreLaboratoryResultObservationProfile_ReferenceRange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.r4.core.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.r4.core.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile_ReferenceRange {
    return new USCoreLaboratoryResultObservationProfile_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_ReferenceRange {
    return new USCoreLaboratoryResultObservationProfile_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_ReferenceRange {
    return new USCoreLaboratoryResultObservationProfile_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile_ReferenceRange | PlainMessage<USCoreLaboratoryResultObservationProfile_ReferenceRange> | undefined, b: USCoreLaboratoryResultObservationProfile_ReferenceRange | PlainMessage<USCoreLaboratoryResultObservationProfile_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile_ReferenceRange, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component
 */
export class USCoreLaboratoryResultObservationProfile_Component extends Message<USCoreLaboratoryResultObservationProfile_Component> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component.ValueX value = 5;
   */
  value?: USCoreLaboratoryResultObservationProfile_Component_ValueX;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 7;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.ReferenceRange reference_range = 8;
   */
  referenceRange: USCoreLaboratoryResultObservationProfile_ReferenceRange[] = [];

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: USCoreLaboratoryResultObservationProfile_Component_ValueX },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reference_range", kind: "message", T: USCoreLaboratoryResultObservationProfile_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile_Component {
    return new USCoreLaboratoryResultObservationProfile_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_Component {
    return new USCoreLaboratoryResultObservationProfile_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_Component {
    return new USCoreLaboratoryResultObservationProfile_Component().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile_Component | PlainMessage<USCoreLaboratoryResultObservationProfile_Component> | undefined, b: USCoreLaboratoryResultObservationProfile_Component | PlainMessage<USCoreLaboratoryResultObservationProfile_Component> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component.ValueX
 */
export class USCoreLaboratoryResultObservationProfile_Component_ValueX extends Message<USCoreLaboratoryResultObservationProfile_Component_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 6;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 8;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreLaboratoryResultObservationProfile_Component_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLaboratoryResultObservationProfile.Component.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 6, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 8, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLaboratoryResultObservationProfile_Component_ValueX {
    return new USCoreLaboratoryResultObservationProfile_Component_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_Component_ValueX {
    return new USCoreLaboratoryResultObservationProfile_Component_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLaboratoryResultObservationProfile_Component_ValueX {
    return new USCoreLaboratoryResultObservationProfile_Component_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLaboratoryResultObservationProfile_Component_ValueX | PlainMessage<USCoreLaboratoryResultObservationProfile_Component_ValueX> | undefined, b: USCoreLaboratoryResultObservationProfile_Component_ValueX | PlainMessage<USCoreLaboratoryResultObservationProfile_Component_ValueX> | undefined): boolean {
    return proto3.util.equals(USCoreLaboratoryResultObservationProfile_Component_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreLocation.
 * Details and position information for a physical place.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-location
 *
 * @generated from message google.fhir.r4.uscore.USCoreLocation
 */
export class USCoreLocation extends Message<USCoreLocation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique code or number identifying the location to its users
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLocation.StatusCode status = 11;
   */
  status?: USCoreLocation_StatusCode;

  /**
   * The operational status of the location (typically only for a bed/room)
   *
   * @generated from field: google.fhir.r4.core.Coding operational_status = 12;
   */
  operationalStatus?: Coding;

  /**
   * Name of the location as used by humans
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * A list of alternate names that the location is known as, or was known as,
   * in the past
   *
   * @generated from field: repeated google.fhir.r4.core.String alias = 14;
   */
  alias: String[] = [];

  /**
   * Additional details about the location that could be displayed as further
   * information to identify the location beyond its name
   *
   * @generated from field: google.fhir.r4.core.String description = 15;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLocation.ModeCode mode = 16;
   */
  mode?: USCoreLocation_ModeCode;

  /**
   * Type of function performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 17;
   */
  type: CodeableConcept[] = [];

  /**
   * Contact details of the location
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 18;
   */
  telecom: ContactPoint[] = [];

  /**
   * Physical location
   *
   * @generated from field: google.fhir.r4.core.Address address = 19;
   */
  address?: Address;

  /**
   * Physical form of the location
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept physical_type = 20;
   */
  physicalType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreLocation.Position position = 21;
   */
  position?: USCoreLocation_Position;

  /**
   * Organization responsible for provisioning and upkeep
   *
   * @generated from field: google.fhir.r4.core.Reference managing_organization = 22;
   */
  managingOrganization?: Reference;

  /**
   * Another Location this one is physically a part of
   *
   * @generated from field: google.fhir.r4.core.Reference part_of = 23;
   */
  partOf?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreLocation.HoursOfOperation hours_of_operation = 24;
   */
  hoursOfOperation: USCoreLocation_HoursOfOperation[] = [];

  /**
   * Description of availability exceptions
   *
   * @generated from field: google.fhir.r4.core.String availability_exceptions = 25;
   */
  availabilityExceptions?: String;

  /**
   * Technical endpoints providing access to services operated for the location
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 26;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<USCoreLocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: USCoreLocation_StatusCode },
    { no: 12, name: "operational_status", kind: "message", T: Coding },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "alias", kind: "message", T: String, repeated: true },
    { no: 15, name: "description", kind: "message", T: String },
    { no: 16, name: "mode", kind: "message", T: USCoreLocation_ModeCode },
    { no: 17, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 19, name: "address", kind: "message", T: Address },
    { no: 20, name: "physical_type", kind: "message", T: CodeableConcept },
    { no: 21, name: "position", kind: "message", T: USCoreLocation_Position },
    { no: 22, name: "managing_organization", kind: "message", T: Reference },
    { no: 23, name: "part_of", kind: "message", T: Reference },
    { no: 24, name: "hours_of_operation", kind: "message", T: USCoreLocation_HoursOfOperation, repeated: true },
    { no: 25, name: "availability_exceptions", kind: "message", T: String },
    { no: 26, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLocation {
    return new USCoreLocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLocation {
    return new USCoreLocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLocation {
    return new USCoreLocation().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLocation | PlainMessage<USCoreLocation> | undefined, b: USCoreLocation | PlainMessage<USCoreLocation> | undefined): boolean {
    return proto3.util.equals(USCoreLocation, a, b);
  }
}

/**
 * active | suspended | inactive
 *
 * @generated from message google.fhir.r4.uscore.USCoreLocation.StatusCode
 */
export class USCoreLocation_StatusCode extends Message<USCoreLocation_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.LocationStatusCode.Value value = 1;
   */
  value = LocationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreLocation_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLocation.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLocation_StatusCode {
    return new USCoreLocation_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLocation_StatusCode {
    return new USCoreLocation_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLocation_StatusCode {
    return new USCoreLocation_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLocation_StatusCode | PlainMessage<USCoreLocation_StatusCode> | undefined, b: USCoreLocation_StatusCode | PlainMessage<USCoreLocation_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreLocation_StatusCode, a, b);
  }
}

/**
 * instance | kind
 *
 * @generated from message google.fhir.r4.uscore.USCoreLocation.ModeCode
 */
export class USCoreLocation_ModeCode extends Message<USCoreLocation_ModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.LocationModeCode.Value value = 1;
   */
  value = LocationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreLocation_ModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLocation.ModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLocation_ModeCode {
    return new USCoreLocation_ModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLocation_ModeCode {
    return new USCoreLocation_ModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLocation_ModeCode {
    return new USCoreLocation_ModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLocation_ModeCode | PlainMessage<USCoreLocation_ModeCode> | undefined, b: USCoreLocation_ModeCode | PlainMessage<USCoreLocation_ModeCode> | undefined): boolean {
    return proto3.util.equals(USCoreLocation_ModeCode, a, b);
  }
}

/**
 * The absolute geographic location
 *
 * @generated from message google.fhir.r4.uscore.USCoreLocation.Position
 */
export class USCoreLocation_Position extends Message<USCoreLocation_Position> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Longitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal longitude = 4;
   */
  longitude?: Decimal;

  /**
   * Latitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal latitude = 5;
   */
  latitude?: Decimal;

  /**
   * Altitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal altitude = 6;
   */
  altitude?: Decimal;

  constructor(data?: PartialMessage<USCoreLocation_Position>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLocation.Position";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "longitude", kind: "message", T: Decimal },
    { no: 5, name: "latitude", kind: "message", T: Decimal },
    { no: 6, name: "altitude", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLocation_Position {
    return new USCoreLocation_Position().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLocation_Position {
    return new USCoreLocation_Position().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLocation_Position {
    return new USCoreLocation_Position().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLocation_Position | PlainMessage<USCoreLocation_Position> | undefined, b: USCoreLocation_Position | PlainMessage<USCoreLocation_Position> | undefined): boolean {
    return proto3.util.equals(USCoreLocation_Position, a, b);
  }
}

/**
 * What days/times during a week is this location usually open
 *
 * @generated from message google.fhir.r4.uscore.USCoreLocation.HoursOfOperation
 */
export class USCoreLocation_HoursOfOperation extends Message<USCoreLocation_HoursOfOperation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreLocation.HoursOfOperation.DaysOfWeekCode days_of_week = 4;
   */
  daysOfWeek: USCoreLocation_HoursOfOperation_DaysOfWeekCode[] = [];

  /**
   * The Location is open all day
   *
   * @generated from field: google.fhir.r4.core.Boolean all_day = 5;
   */
  allDay?: Boolean;

  /**
   * Time that the Location opens
   *
   * @generated from field: google.fhir.r4.core.Time opening_time = 6;
   */
  openingTime?: Time;

  /**
   * Time that the Location closes
   *
   * @generated from field: google.fhir.r4.core.Time closing_time = 7;
   */
  closingTime?: Time;

  constructor(data?: PartialMessage<USCoreLocation_HoursOfOperation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLocation.HoursOfOperation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "days_of_week", kind: "message", T: USCoreLocation_HoursOfOperation_DaysOfWeekCode, repeated: true },
    { no: 5, name: "all_day", kind: "message", T: Boolean },
    { no: 6, name: "opening_time", kind: "message", T: Time },
    { no: 7, name: "closing_time", kind: "message", T: Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLocation_HoursOfOperation {
    return new USCoreLocation_HoursOfOperation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLocation_HoursOfOperation {
    return new USCoreLocation_HoursOfOperation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLocation_HoursOfOperation {
    return new USCoreLocation_HoursOfOperation().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLocation_HoursOfOperation | PlainMessage<USCoreLocation_HoursOfOperation> | undefined, b: USCoreLocation_HoursOfOperation | PlainMessage<USCoreLocation_HoursOfOperation> | undefined): boolean {
    return proto3.util.equals(USCoreLocation_HoursOfOperation, a, b);
  }
}

/**
 * mon | tue | wed | thu | fri | sat | sun
 *
 * @generated from message google.fhir.r4.uscore.USCoreLocation.HoursOfOperation.DaysOfWeekCode
 */
export class USCoreLocation_HoursOfOperation_DaysOfWeekCode extends Message<USCoreLocation_HoursOfOperation_DaysOfWeekCode> {
  /**
   * @generated from field: google.fhir.r4.core.DaysOfWeekCode.Value value = 1;
   */
  value = DaysOfWeekCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreLocation_HoursOfOperation_DaysOfWeekCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreLocation.HoursOfOperation.DaysOfWeekCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DaysOfWeekCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreLocation_HoursOfOperation_DaysOfWeekCode {
    return new USCoreLocation_HoursOfOperation_DaysOfWeekCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreLocation_HoursOfOperation_DaysOfWeekCode {
    return new USCoreLocation_HoursOfOperation_DaysOfWeekCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreLocation_HoursOfOperation_DaysOfWeekCode {
    return new USCoreLocation_HoursOfOperation_DaysOfWeekCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreLocation_HoursOfOperation_DaysOfWeekCode | PlainMessage<USCoreLocation_HoursOfOperation_DaysOfWeekCode> | undefined, b: USCoreLocation_HoursOfOperation_DaysOfWeekCode | PlainMessage<USCoreLocation_HoursOfOperation_DaysOfWeekCode> | undefined): boolean {
    return proto3.util.equals(USCoreLocation_HoursOfOperation_DaysOfWeekCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreMedicationProfile.
 * Definition of a Medication.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationProfile
 */
export class USCoreMedicationProfile extends Message<USCoreMedicationProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for this medication
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Codes that identify this medication
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 11;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationProfile.StatusCode status = 12;
   */
  status?: USCoreMedicationProfile_StatusCode;

  /**
   * Manufacturer of the item
   *
   * @generated from field: google.fhir.r4.core.Reference manufacturer = 13;
   */
  manufacturer?: Reference;

  /**
   * powder | tablets | capsule +
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept form = 14;
   */
  form?: CodeableConcept;

  /**
   * Amount of drug in package
   *
   * @generated from field: google.fhir.r4.core.Ratio amount = 15;
   */
  amount?: Ratio;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient ingredient = 16;
   */
  ingredient: USCoreMedicationProfile_Ingredient[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationProfile.Batch batch = 17;
   */
  batch?: USCoreMedicationProfile_Batch;

  constructor(data?: PartialMessage<USCoreMedicationProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "code", kind: "message", T: CodeableConcept },
    { no: 12, name: "status", kind: "message", T: USCoreMedicationProfile_StatusCode },
    { no: 13, name: "manufacturer", kind: "message", T: Reference },
    { no: 14, name: "form", kind: "message", T: CodeableConcept },
    { no: 15, name: "amount", kind: "message", T: Ratio },
    { no: 16, name: "ingredient", kind: "message", T: USCoreMedicationProfile_Ingredient, repeated: true },
    { no: 17, name: "batch", kind: "message", T: USCoreMedicationProfile_Batch },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationProfile {
    return new USCoreMedicationProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationProfile {
    return new USCoreMedicationProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationProfile {
    return new USCoreMedicationProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationProfile | PlainMessage<USCoreMedicationProfile> | undefined, b: USCoreMedicationProfile | PlainMessage<USCoreMedicationProfile> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationProfile, a, b);
  }
}

/**
 * active | inactive | entered-in-error
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationProfile.StatusCode
 */
export class USCoreMedicationProfile_StatusCode extends Message<USCoreMedicationProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationStatusCode.Value value = 1;
   */
  value = MedicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreMedicationProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationProfile_StatusCode {
    return new USCoreMedicationProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_StatusCode {
    return new USCoreMedicationProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_StatusCode {
    return new USCoreMedicationProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationProfile_StatusCode | PlainMessage<USCoreMedicationProfile_StatusCode> | undefined, b: USCoreMedicationProfile_StatusCode | PlainMessage<USCoreMedicationProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationProfile_StatusCode, a, b);
  }
}

/**
 * Active or inactive ingredient
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient
 */
export class USCoreMedicationProfile_Ingredient extends Message<USCoreMedicationProfile_Ingredient> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient.ItemX item = 4;
   */
  item?: USCoreMedicationProfile_Ingredient_ItemX;

  /**
   * Active ingredient indicator
   *
   * @generated from field: google.fhir.r4.core.Boolean is_active = 5;
   */
  isActive?: Boolean;

  /**
   * Quantity of ingredient present
   *
   * @generated from field: google.fhir.r4.core.Ratio strength = 6;
   */
  strength?: Ratio;

  constructor(data?: PartialMessage<USCoreMedicationProfile_Ingredient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: USCoreMedicationProfile_Ingredient_ItemX },
    { no: 5, name: "is_active", kind: "message", T: Boolean },
    { no: 6, name: "strength", kind: "message", T: Ratio },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationProfile_Ingredient {
    return new USCoreMedicationProfile_Ingredient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_Ingredient {
    return new USCoreMedicationProfile_Ingredient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_Ingredient {
    return new USCoreMedicationProfile_Ingredient().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationProfile_Ingredient | PlainMessage<USCoreMedicationProfile_Ingredient> | undefined, b: USCoreMedicationProfile_Ingredient | PlainMessage<USCoreMedicationProfile_Ingredient> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationProfile_Ingredient, a, b);
  }
}

/**
 * The actual ingredient or content
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient.ItemX
 */
export class USCoreMedicationProfile_Ingredient_ItemX extends Message<USCoreMedicationProfile_Ingredient_ItemX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient.ItemX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreMedicationProfile_Ingredient_ItemX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationProfile.Ingredient.ItemX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationProfile_Ingredient_ItemX {
    return new USCoreMedicationProfile_Ingredient_ItemX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_Ingredient_ItemX {
    return new USCoreMedicationProfile_Ingredient_ItemX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_Ingredient_ItemX {
    return new USCoreMedicationProfile_Ingredient_ItemX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationProfile_Ingredient_ItemX | PlainMessage<USCoreMedicationProfile_Ingredient_ItemX> | undefined, b: USCoreMedicationProfile_Ingredient_ItemX | PlainMessage<USCoreMedicationProfile_Ingredient_ItemX> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationProfile_Ingredient_ItemX, a, b);
  }
}

/**
 * Details about packaged medications
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationProfile.Batch
 */
export class USCoreMedicationProfile_Batch extends Message<USCoreMedicationProfile_Batch> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifier assigned to batch
   *
   * @generated from field: google.fhir.r4.core.String lot_number = 4;
   */
  lotNumber?: String;

  /**
   * When batch will expire
   *
   * @generated from field: google.fhir.r4.core.DateTime expiration_date = 5;
   */
  expirationDate?: DateTime;

  constructor(data?: PartialMessage<USCoreMedicationProfile_Batch>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationProfile.Batch";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "lot_number", kind: "message", T: String },
    { no: 5, name: "expiration_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationProfile_Batch {
    return new USCoreMedicationProfile_Batch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_Batch {
    return new USCoreMedicationProfile_Batch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationProfile_Batch {
    return new USCoreMedicationProfile_Batch().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationProfile_Batch | PlainMessage<USCoreMedicationProfile_Batch> | undefined, b: USCoreMedicationProfile_Batch | PlainMessage<USCoreMedicationProfile_Batch> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationProfile_Batch, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreMedicationRequestProfile.
 * Ordering of medication for patient or group.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-medicationrequest
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile
 */
export class USCoreMedicationRequestProfile extends Message<USCoreMedicationRequestProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this request
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.StatusCode status = 11;
   */
  status?: USCoreMedicationRequestProfile_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 12;
   */
  statusReason?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.IntentCode intent = 13;
   */
  intent?: USCoreMedicationRequestProfile_IntentCode;

  /**
   * Type of medication usage
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.PriorityCode priority = 15;
   */
  priority?: USCoreMedicationRequestProfile_PriorityCode;

  /**
   * True if request is prohibiting action
   *
   * @generated from field: google.fhir.r4.core.Boolean do_not_perform = 16;
   */
  doNotPerform?: Boolean;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.ReportedX reported = 17;
   */
  reported?: USCoreMedicationRequestProfile_ReportedX;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.MedicationX medication = 18;
   */
  medication?: USCoreMedicationRequestProfile_MedicationX;

  /**
   * Who or group medication request is for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Encounter created as part of encounter/admission/stay
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 20;
   */
  encounter?: Reference;

  /**
   * Information to support ordering of the medication
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_information = 21;
   */
  supportingInformation: Reference[] = [];

  /**
   * When request was initially authored
   *
   * @generated from field: google.fhir.r4.core.DateTime authored_on = 22;
   */
  authoredOn?: DateTime;

  /**
   * Who/What requested the Request
   *
   * @generated from field: google.fhir.r4.core.Reference requester = 23;
   */
  requester?: Reference;

  /**
   * Intended performer of administration
   *
   * @generated from field: google.fhir.r4.core.Reference performer = 24;
   */
  performer?: Reference;

  /**
   * Desired kind of performer of the medication administration
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept performer_type = 25;
   */
  performerType?: CodeableConcept;

  /**
   * Person who entered the request
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 26;
   */
  recorder?: Reference;

  /**
   * Reason or indication for ordering or not ordering the medication
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 27;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or observation that supports why the prescription is being
   * written
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 28;
   */
  reasonReference: Reference[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 29;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 30;
   */
  instantiatesUri: Uri[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 31;
   */
  basedOn: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.r4.core.Identifier group_identifier = 32;
   */
  groupIdentifier?: Identifier;

  /**
   * Overall pattern of medication administration
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept course_of_therapy_type = 33;
   */
  courseOfTherapyType?: CodeableConcept;

  /**
   * Associated insurance coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference insurance = 34;
   */
  insurance: Reference[] = [];

  /**
   * Information about the prescription
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 35;
   */
  note: Annotation[] = [];

  /**
   * How the medication should be taken
   *
   * @generated from field: repeated google.fhir.r4.core.Dosage dosage_instruction = 36;
   */
  dosageInstruction: Dosage[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.DispenseRequest dispense_request = 37;
   */
  dispenseRequest?: USCoreMedicationRequestProfile_DispenseRequest;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution substitution = 38;
   */
  substitution?: USCoreMedicationRequestProfile_Substitution;

  /**
   * An order/prescription that is being replaced
   *
   * @generated from field: google.fhir.r4.core.Reference prior_prescription = 39;
   */
  priorPrescription?: Reference;

  /**
   * Clinical Issue with action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detected_issue = 40;
   */
  detectedIssue: Reference[] = [];

  /**
   * A list of events of interest in the lifecycle
   *
   * @generated from field: repeated google.fhir.r4.core.Reference event_history = 41;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: USCoreMedicationRequestProfile_StatusCode },
    { no: 12, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 13, name: "intent", kind: "message", T: USCoreMedicationRequestProfile_IntentCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "priority", kind: "message", T: USCoreMedicationRequestProfile_PriorityCode },
    { no: 16, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 17, name: "reported", kind: "message", T: USCoreMedicationRequestProfile_ReportedX },
    { no: 18, name: "medication", kind: "message", T: USCoreMedicationRequestProfile_MedicationX },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "encounter", kind: "message", T: Reference },
    { no: 21, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "authored_on", kind: "message", T: DateTime },
    { no: 23, name: "requester", kind: "message", T: Reference },
    { no: 24, name: "performer", kind: "message", T: Reference },
    { no: 25, name: "performer_type", kind: "message", T: CodeableConcept },
    { no: 26, name: "recorder", kind: "message", T: Reference },
    { no: 27, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 28, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 30, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 31, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "group_identifier", kind: "message", T: Identifier },
    { no: 33, name: "course_of_therapy_type", kind: "message", T: CodeableConcept },
    { no: 34, name: "insurance", kind: "message", T: Reference, repeated: true },
    { no: 35, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 36, name: "dosage_instruction", kind: "message", T: Dosage, repeated: true },
    { no: 37, name: "dispense_request", kind: "message", T: USCoreMedicationRequestProfile_DispenseRequest },
    { no: 38, name: "substitution", kind: "message", T: USCoreMedicationRequestProfile_Substitution },
    { no: 39, name: "prior_prescription", kind: "message", T: Reference },
    { no: 40, name: "detected_issue", kind: "message", T: Reference, repeated: true },
    { no: 41, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile {
    return new USCoreMedicationRequestProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile {
    return new USCoreMedicationRequestProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile {
    return new USCoreMedicationRequestProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile | PlainMessage<USCoreMedicationRequestProfile> | undefined, b: USCoreMedicationRequestProfile | PlainMessage<USCoreMedicationRequestProfile> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile, a, b);
  }
}

/**
 * active | on-hold | cancelled | completed | entered-in-error | stopped |
 * draft | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.StatusCode
 */
export class USCoreMedicationRequestProfile_StatusCode extends Message<USCoreMedicationRequestProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationrequestStatusCode.Value value = 1;
   */
  value = MedicationrequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationrequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_StatusCode {
    return new USCoreMedicationRequestProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_StatusCode {
    return new USCoreMedicationRequestProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_StatusCode {
    return new USCoreMedicationRequestProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_StatusCode | PlainMessage<USCoreMedicationRequestProfile_StatusCode> | undefined, b: USCoreMedicationRequestProfile_StatusCode | PlainMessage<USCoreMedicationRequestProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_StatusCode, a, b);
  }
}

/**
 * proposal | plan | order | original-order | reflex-order | filler-order |
 * instance-order | option
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.IntentCode
 */
export class USCoreMedicationRequestProfile_IntentCode extends Message<USCoreMedicationRequestProfile_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationRequestIntentCode.Value value = 1;
   */
  value = MedicationRequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationRequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_IntentCode {
    return new USCoreMedicationRequestProfile_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_IntentCode {
    return new USCoreMedicationRequestProfile_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_IntentCode {
    return new USCoreMedicationRequestProfile_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_IntentCode | PlainMessage<USCoreMedicationRequestProfile_IntentCode> | undefined, b: USCoreMedicationRequestProfile_IntentCode | PlainMessage<USCoreMedicationRequestProfile_IntentCode> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_IntentCode, a, b);
  }
}

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.PriorityCode
 */
export class USCoreMedicationRequestProfile_PriorityCode extends Message<USCoreMedicationRequestProfile_PriorityCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_PriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.PriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_PriorityCode {
    return new USCoreMedicationRequestProfile_PriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_PriorityCode {
    return new USCoreMedicationRequestProfile_PriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_PriorityCode {
    return new USCoreMedicationRequestProfile_PriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_PriorityCode | PlainMessage<USCoreMedicationRequestProfile_PriorityCode> | undefined, b: USCoreMedicationRequestProfile_PriorityCode | PlainMessage<USCoreMedicationRequestProfile_PriorityCode> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_PriorityCode, a, b);
  }
}

/**
 * Reported rather than primary record
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.ReportedX
 */
export class USCoreMedicationRequestProfile_ReportedX extends Message<USCoreMedicationRequestProfile_ReportedX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreMedicationRequestProfile.ReportedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_ReportedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.ReportedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_ReportedX {
    return new USCoreMedicationRequestProfile_ReportedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_ReportedX {
    return new USCoreMedicationRequestProfile_ReportedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_ReportedX {
    return new USCoreMedicationRequestProfile_ReportedX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_ReportedX | PlainMessage<USCoreMedicationRequestProfile_ReportedX> | undefined, b: USCoreMedicationRequestProfile_ReportedX | PlainMessage<USCoreMedicationRequestProfile_ReportedX> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_ReportedX, a, b);
  }
}

/**
 * Medication to be taken
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.MedicationX
 */
export class USCoreMedicationRequestProfile_MedicationX extends Message<USCoreMedicationRequestProfile_MedicationX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreMedicationRequestProfile.MedicationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_MedicationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.MedicationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_MedicationX {
    return new USCoreMedicationRequestProfile_MedicationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_MedicationX {
    return new USCoreMedicationRequestProfile_MedicationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_MedicationX {
    return new USCoreMedicationRequestProfile_MedicationX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_MedicationX | PlainMessage<USCoreMedicationRequestProfile_MedicationX> | undefined, b: USCoreMedicationRequestProfile_MedicationX | PlainMessage<USCoreMedicationRequestProfile_MedicationX> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_MedicationX, a, b);
  }
}

/**
 * Medication supply authorization
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.DispenseRequest
 */
export class USCoreMedicationRequestProfile_DispenseRequest extends Message<USCoreMedicationRequestProfile_DispenseRequest> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.DispenseRequest.InitialFill initial_fill = 4;
   */
  initialFill?: USCoreMedicationRequestProfile_DispenseRequest_InitialFill;

  /**
   * Minimum period of time between dispenses
   *
   * @generated from field: google.fhir.r4.core.Duration dispense_interval = 5;
   */
  dispenseInterval?: Duration;

  /**
   * Time period supply is authorized for
   *
   * @generated from field: google.fhir.r4.core.Period validity_period = 6;
   */
  validityPeriod?: Period;

  /**
   * Number of refills authorized
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number_of_repeats_allowed = 7;
   */
  numberOfRepeatsAllowed?: UnsignedInt;

  /**
   * Amount of medication to supply per dispense
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 8;
   */
  quantity?: SimpleQuantity;

  /**
   * Number of days supply per dispense
   *
   * @generated from field: google.fhir.r4.core.Duration expected_supply_duration = 9;
   */
  expectedSupplyDuration?: Duration;

  /**
   * Intended dispenser
   *
   * @generated from field: google.fhir.r4.core.Reference performer = 10;
   */
  performer?: Reference;

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_DispenseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.DispenseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "initial_fill", kind: "message", T: USCoreMedicationRequestProfile_DispenseRequest_InitialFill },
    { no: 5, name: "dispense_interval", kind: "message", T: Duration },
    { no: 6, name: "validity_period", kind: "message", T: Period },
    { no: 7, name: "number_of_repeats_allowed", kind: "message", T: UnsignedInt },
    { no: 8, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 9, name: "expected_supply_duration", kind: "message", T: Duration },
    { no: 10, name: "performer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_DispenseRequest {
    return new USCoreMedicationRequestProfile_DispenseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_DispenseRequest {
    return new USCoreMedicationRequestProfile_DispenseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_DispenseRequest {
    return new USCoreMedicationRequestProfile_DispenseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_DispenseRequest | PlainMessage<USCoreMedicationRequestProfile_DispenseRequest> | undefined, b: USCoreMedicationRequestProfile_DispenseRequest | PlainMessage<USCoreMedicationRequestProfile_DispenseRequest> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_DispenseRequest, a, b);
  }
}

/**
 * First fill details
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.DispenseRequest.InitialFill
 */
export class USCoreMedicationRequestProfile_DispenseRequest_InitialFill extends Message<USCoreMedicationRequestProfile_DispenseRequest_InitialFill> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * First fill quantity
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 4;
   */
  quantity?: SimpleQuantity;

  /**
   * First fill duration
   *
   * @generated from field: google.fhir.r4.core.Duration duration = 5;
   */
  duration?: Duration;

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_DispenseRequest_InitialFill>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.DispenseRequest.InitialFill";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 5, name: "duration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_DispenseRequest_InitialFill {
    return new USCoreMedicationRequestProfile_DispenseRequest_InitialFill().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_DispenseRequest_InitialFill {
    return new USCoreMedicationRequestProfile_DispenseRequest_InitialFill().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_DispenseRequest_InitialFill {
    return new USCoreMedicationRequestProfile_DispenseRequest_InitialFill().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_DispenseRequest_InitialFill | PlainMessage<USCoreMedicationRequestProfile_DispenseRequest_InitialFill> | undefined, b: USCoreMedicationRequestProfile_DispenseRequest_InitialFill | PlainMessage<USCoreMedicationRequestProfile_DispenseRequest_InitialFill> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_DispenseRequest_InitialFill, a, b);
  }
}

/**
 * Any restrictions on medication substitution
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution
 */
export class USCoreMedicationRequestProfile_Substitution extends Message<USCoreMedicationRequestProfile_Substitution> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution.AllowedX allowed = 4;
   */
  allowed?: USCoreMedicationRequestProfile_Substitution_AllowedX;

  /**
   * Why should (not) substitution be made
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_Substitution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "allowed", kind: "message", T: USCoreMedicationRequestProfile_Substitution_AllowedX },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_Substitution {
    return new USCoreMedicationRequestProfile_Substitution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_Substitution {
    return new USCoreMedicationRequestProfile_Substitution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_Substitution {
    return new USCoreMedicationRequestProfile_Substitution().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_Substitution | PlainMessage<USCoreMedicationRequestProfile_Substitution> | undefined, b: USCoreMedicationRequestProfile_Substitution | PlainMessage<USCoreMedicationRequestProfile_Substitution> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_Substitution, a, b);
  }
}

/**
 * Whether substitution is allowed or not
 *
 * @generated from message google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution.AllowedX
 */
export class USCoreMedicationRequestProfile_Substitution_AllowedX extends Message<USCoreMedicationRequestProfile_Substitution_AllowedX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution.AllowedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreMedicationRequestProfile_Substitution_AllowedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreMedicationRequestProfile.Substitution.AllowedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreMedicationRequestProfile_Substitution_AllowedX {
    return new USCoreMedicationRequestProfile_Substitution_AllowedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_Substitution_AllowedX {
    return new USCoreMedicationRequestProfile_Substitution_AllowedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreMedicationRequestProfile_Substitution_AllowedX {
    return new USCoreMedicationRequestProfile_Substitution_AllowedX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreMedicationRequestProfile_Substitution_AllowedX | PlainMessage<USCoreMedicationRequestProfile_Substitution_AllowedX> | undefined, b: USCoreMedicationRequestProfile_Substitution_AllowedX | PlainMessage<USCoreMedicationRequestProfile_Substitution_AllowedX> | undefined): boolean {
    return proto3.util.equals(USCoreMedicationRequestProfile_Substitution_AllowedX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreOrganizationProfile.
 * A grouping of people or organizations with a common purpose.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-organization
 *
 * @generated from message google.fhir.r4.uscore.USCoreOrganizationProfile
 */
export class USCoreOrganizationProfile extends Message<USCoreOrganizationProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies this organization  across multiple systems
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Whether the organization's record is still in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * Kind of organization
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 12;
   */
  type: CodeableConcept[] = [];

  /**
   * Name used for the organization
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * A list of alternate names that the organization is known as, or was known
   * as in the past
   *
   * @generated from field: repeated google.fhir.r4.core.String alias = 14;
   */
  alias: String[] = [];

  /**
   * A contact detail for the organization
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 15;
   */
  telecom: ContactPoint[] = [];

  /**
   * An address for the organization
   *
   * @generated from field: repeated google.fhir.r4.core.Address address = 16;
   */
  address: Address[] = [];

  /**
   * The organization of which this organization forms a part
   *
   * @generated from field: google.fhir.r4.core.Reference part_of = 17;
   */
  partOf?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreOrganizationProfile.Contact contact = 18;
   */
  contact: USCoreOrganizationProfile_Contact[] = [];

  /**
   * Technical endpoints providing access to services operated for the
   * organization
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 19;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<USCoreOrganizationProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreOrganizationProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "active", kind: "message", T: Boolean },
    { no: 12, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "alias", kind: "message", T: String, repeated: true },
    { no: 15, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 16, name: "address", kind: "message", T: Address, repeated: true },
    { no: 17, name: "part_of", kind: "message", T: Reference },
    { no: 18, name: "contact", kind: "message", T: USCoreOrganizationProfile_Contact, repeated: true },
    { no: 19, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreOrganizationProfile {
    return new USCoreOrganizationProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreOrganizationProfile {
    return new USCoreOrganizationProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreOrganizationProfile {
    return new USCoreOrganizationProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreOrganizationProfile | PlainMessage<USCoreOrganizationProfile> | undefined, b: USCoreOrganizationProfile | PlainMessage<USCoreOrganizationProfile> | undefined): boolean {
    return proto3.util.equals(USCoreOrganizationProfile, a, b);
  }
}

/**
 * Contact for the organization for a certain purpose
 *
 * @generated from message google.fhir.r4.uscore.USCoreOrganizationProfile.Contact
 */
export class USCoreOrganizationProfile_Contact extends Message<USCoreOrganizationProfile_Contact> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The type of contact
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept purpose = 4;
   */
  purpose?: CodeableConcept;

  /**
   * A name associated with the contact
   *
   * @generated from field: google.fhir.r4.core.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * Contact details (telephone, email, etc.)  for a contact
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Visiting or postal addresses for the contact
   *
   * @generated from field: google.fhir.r4.core.Address address = 7;
   */
  address?: Address;

  constructor(data?: PartialMessage<USCoreOrganizationProfile_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreOrganizationProfile.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "purpose", kind: "message", T: CodeableConcept },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreOrganizationProfile_Contact {
    return new USCoreOrganizationProfile_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreOrganizationProfile_Contact {
    return new USCoreOrganizationProfile_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreOrganizationProfile_Contact {
    return new USCoreOrganizationProfile_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreOrganizationProfile_Contact | PlainMessage<USCoreOrganizationProfile_Contact> | undefined, b: USCoreOrganizationProfile_Contact | PlainMessage<USCoreOrganizationProfile_Contact> | undefined): boolean {
    return proto3.util.equals(USCoreOrganizationProfile_Contact, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCorePatientProfile.
 * Information about an individual or animal receiving health care services.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile
 */
export class USCorePatientProfile extends Message<USCorePatientProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for this patient
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this patient's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * A name associated with the patient
   *
   * @generated from field: repeated google.fhir.r4.core.HumanName name = 12;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the individual
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 13;
   */
  telecom: ContactPoint[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePatientProfile.GenderCode gender = 14;
   */
  gender?: USCorePatientProfile_GenderCode;

  /**
   * The date of birth for the individual
   *
   * @generated from field: google.fhir.r4.core.Date birth_date = 15;
   */
  birthDate?: Date;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePatientProfile.DeceasedX deceased = 16;
   */
  deceased?: USCorePatientProfile_DeceasedX;

  /**
   * An address for the individual
   *
   * @generated from field: repeated google.fhir.r4.core.Address address = 17;
   */
  address: Address[] = [];

  /**
   * Marital (civil) status of a patient
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept marital_status = 18;
   */
  maritalStatus?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePatientProfile.MultipleBirthX multiple_birth = 19;
   */
  multipleBirth?: USCorePatientProfile_MultipleBirthX;

  /**
   * Image of the patient
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment photo = 20;
   */
  photo: Attachment[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePatientProfile.Contact contact = 21;
   */
  contact: USCorePatientProfile_Contact[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePatientProfile.Communication communication = 22;
   */
  communication: USCorePatientProfile_Communication[] = [];

  /**
   * Patient's nominated primary care provider
   *
   * @generated from field: repeated google.fhir.r4.core.Reference general_practitioner = 23;
   */
  generalPractitioner: Reference[] = [];

  /**
   * Organization that is the custodian of the patient record
   *
   * @generated from field: google.fhir.r4.core.Reference managing_organization = 24;
   */
  managingOrganization?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePatientProfile.Link link = 25;
   */
  link: USCorePatientProfile_Link[] = [];

  /**
   * US Core Race Extension
   *
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreRaceExtension race = 26;
   */
  race?: PatientUSCoreRaceExtension;

  /**
   * US Core ethnicity Extension
   *
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreEthnicityExtension ethnicity = 27;
   */
  ethnicity?: PatientUSCoreEthnicityExtension;

  /**
   * Extension
   *
   * @generated from field: google.fhir.r4.uscore.PatientUSCoreBirthSexExtension.ValueCode birthsex = 28;
   */
  birthsex?: PatientUSCoreBirthSexExtension_ValueCode;

  constructor(data?: PartialMessage<USCorePatientProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "active", kind: "message", T: Boolean },
    { no: 12, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 13, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 14, name: "gender", kind: "message", T: USCorePatientProfile_GenderCode },
    { no: 15, name: "birth_date", kind: "message", T: Date },
    { no: 16, name: "deceased", kind: "message", T: USCorePatientProfile_DeceasedX },
    { no: 17, name: "address", kind: "message", T: Address, repeated: true },
    { no: 18, name: "marital_status", kind: "message", T: CodeableConcept },
    { no: 19, name: "multiple_birth", kind: "message", T: USCorePatientProfile_MultipleBirthX },
    { no: 20, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 21, name: "contact", kind: "message", T: USCorePatientProfile_Contact, repeated: true },
    { no: 22, name: "communication", kind: "message", T: USCorePatientProfile_Communication, repeated: true },
    { no: 23, name: "general_practitioner", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "managing_organization", kind: "message", T: Reference },
    { no: 25, name: "link", kind: "message", T: USCorePatientProfile_Link, repeated: true },
    { no: 26, name: "race", kind: "message", T: PatientUSCoreRaceExtension },
    { no: 27, name: "ethnicity", kind: "message", T: PatientUSCoreEthnicityExtension },
    { no: 28, name: "birthsex", kind: "message", T: PatientUSCoreBirthSexExtension_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile {
    return new USCorePatientProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile {
    return new USCorePatientProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile {
    return new USCorePatientProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile | PlainMessage<USCorePatientProfile> | undefined, b: USCorePatientProfile | PlainMessage<USCorePatientProfile> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile, a, b);
  }
}

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.GenderCode
 */
export class USCorePatientProfile_GenderCode extends Message<USCorePatientProfile_GenderCode> {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value = AdministrativeGenderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePatientProfile_GenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.GenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdministrativeGenderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_GenderCode {
    return new USCorePatientProfile_GenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_GenderCode {
    return new USCorePatientProfile_GenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_GenderCode {
    return new USCorePatientProfile_GenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_GenderCode | PlainMessage<USCorePatientProfile_GenderCode> | undefined, b: USCorePatientProfile_GenderCode | PlainMessage<USCorePatientProfile_GenderCode> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_GenderCode, a, b);
  }
}

/**
 * Indicates if the individual is deceased or not
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.DeceasedX
 */
export class USCorePatientProfile_DeceasedX extends Message<USCorePatientProfile_DeceasedX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePatientProfile.DeceasedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePatientProfile_DeceasedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.DeceasedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_DeceasedX {
    return new USCorePatientProfile_DeceasedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_DeceasedX {
    return new USCorePatientProfile_DeceasedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_DeceasedX {
    return new USCorePatientProfile_DeceasedX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_DeceasedX | PlainMessage<USCorePatientProfile_DeceasedX> | undefined, b: USCorePatientProfile_DeceasedX | PlainMessage<USCorePatientProfile_DeceasedX> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_DeceasedX, a, b);
  }
}

/**
 * Whether patient is part of a multiple birth
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.MultipleBirthX
 */
export class USCorePatientProfile_MultipleBirthX extends Message<USCorePatientProfile_MultipleBirthX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePatientProfile.MultipleBirthX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 2;
     */
    value: Integer;
    case: "integer";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePatientProfile_MultipleBirthX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.MultipleBirthX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "integer", kind: "message", T: Integer, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_MultipleBirthX {
    return new USCorePatientProfile_MultipleBirthX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_MultipleBirthX {
    return new USCorePatientProfile_MultipleBirthX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_MultipleBirthX {
    return new USCorePatientProfile_MultipleBirthX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_MultipleBirthX | PlainMessage<USCorePatientProfile_MultipleBirthX> | undefined, b: USCorePatientProfile_MultipleBirthX | PlainMessage<USCorePatientProfile_MultipleBirthX> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_MultipleBirthX, a, b);
  }
}

/**
 * A contact party (e.g. guardian, partner, friend) for the patient
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.Contact
 */
export class USCorePatientProfile_Contact extends Message<USCorePatientProfile_Contact> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The kind of relationship
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept relationship = 4;
   */
  relationship: CodeableConcept[] = [];

  /**
   * A name associated with the contact person
   *
   * @generated from field: google.fhir.r4.core.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Address for the contact person
   *
   * @generated from field: google.fhir.r4.core.Address address = 7;
   */
  address?: Address;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePatientProfile.Contact.GenderCode gender = 8;
   */
  gender?: USCorePatientProfile_Contact_GenderCode;

  /**
   * Organization that is associated with the contact
   *
   * @generated from field: google.fhir.r4.core.Reference organization = 9;
   */
  organization?: Reference;

  /**
   * The period during which this contact person or organization is valid to
   * be contacted relating to this patient
   *
   * @generated from field: google.fhir.r4.core.Period period = 10;
   */
  period?: Period;

  constructor(data?: PartialMessage<USCorePatientProfile_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "relationship", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
    { no: 8, name: "gender", kind: "message", T: USCorePatientProfile_Contact_GenderCode },
    { no: 9, name: "organization", kind: "message", T: Reference },
    { no: 10, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_Contact {
    return new USCorePatientProfile_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_Contact {
    return new USCorePatientProfile_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_Contact {
    return new USCorePatientProfile_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_Contact | PlainMessage<USCorePatientProfile_Contact> | undefined, b: USCorePatientProfile_Contact | PlainMessage<USCorePatientProfile_Contact> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_Contact, a, b);
  }
}

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.Contact.GenderCode
 */
export class USCorePatientProfile_Contact_GenderCode extends Message<USCorePatientProfile_Contact_GenderCode> {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value = AdministrativeGenderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePatientProfile_Contact_GenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.Contact.GenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdministrativeGenderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_Contact_GenderCode {
    return new USCorePatientProfile_Contact_GenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_Contact_GenderCode {
    return new USCorePatientProfile_Contact_GenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_Contact_GenderCode {
    return new USCorePatientProfile_Contact_GenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_Contact_GenderCode | PlainMessage<USCorePatientProfile_Contact_GenderCode> | undefined, b: USCorePatientProfile_Contact_GenderCode | PlainMessage<USCorePatientProfile_Contact_GenderCode> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_Contact_GenderCode, a, b);
  }
}

/**
 * A language which may be used to communicate with the patient about his or
 * her health
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.Communication
 */
export class USCorePatientProfile_Communication extends Message<USCorePatientProfile_Communication> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The language which can be used to communicate with the patient about his
   * or her health
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept language = 4;
   */
  language?: CodeableConcept;

  /**
   * Language preference indicator
   *
   * @generated from field: google.fhir.r4.core.Boolean preferred = 5;
   */
  preferred?: Boolean;

  constructor(data?: PartialMessage<USCorePatientProfile_Communication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.Communication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: CodeableConcept },
    { no: 5, name: "preferred", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_Communication {
    return new USCorePatientProfile_Communication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_Communication {
    return new USCorePatientProfile_Communication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_Communication {
    return new USCorePatientProfile_Communication().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_Communication | PlainMessage<USCorePatientProfile_Communication> | undefined, b: USCorePatientProfile_Communication | PlainMessage<USCorePatientProfile_Communication> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_Communication, a, b);
  }
}

/**
 * Link to another patient resource that concerns the same actual person
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.Link
 */
export class USCorePatientProfile_Link extends Message<USCorePatientProfile_Link> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The other patient or related person resource that the link refers to
   *
   * @generated from field: google.fhir.r4.core.Reference other = 4;
   */
  other?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePatientProfile.Link.TypeCode type = 5;
   */
  type?: USCorePatientProfile_Link_TypeCode;

  constructor(data?: PartialMessage<USCorePatientProfile_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "other", kind: "message", T: Reference },
    { no: 5, name: "type", kind: "message", T: USCorePatientProfile_Link_TypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_Link {
    return new USCorePatientProfile_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_Link {
    return new USCorePatientProfile_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_Link {
    return new USCorePatientProfile_Link().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_Link | PlainMessage<USCorePatientProfile_Link> | undefined, b: USCorePatientProfile_Link | PlainMessage<USCorePatientProfile_Link> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_Link, a, b);
  }
}

/**
 * replaced-by | replaces | refer | seealso
 *
 * @generated from message google.fhir.r4.uscore.USCorePatientProfile.Link.TypeCode
 */
export class USCorePatientProfile_Link_TypeCode extends Message<USCorePatientProfile_Link_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.LinkTypeCode.Value value = 1;
   */
  value = LinkTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePatientProfile_Link_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePatientProfile.Link.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LinkTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePatientProfile_Link_TypeCode {
    return new USCorePatientProfile_Link_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePatientProfile_Link_TypeCode {
    return new USCorePatientProfile_Link_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePatientProfile_Link_TypeCode {
    return new USCorePatientProfile_Link_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePatientProfile_Link_TypeCode | PlainMessage<USCorePatientProfile_Link_TypeCode> | undefined, b: USCorePatientProfile_Link_TypeCode | PlainMessage<USCorePatientProfile_Link_TypeCode> | undefined): boolean {
    return proto3.util.equals(USCorePatientProfile_Link_TypeCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for
 * USCorePediatricBMIforAgeObservationProfile. FHIR Vital Signs Profile. See
 * http://hl7.org/fhir/us/core/StructureDefinition/pediatric-bmi-for-age
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile
 */
export class USCorePediatricBMIforAgeObservationProfile extends Message<USCorePediatricBMIforAgeObservationProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.StatusCode status = 13;
   */
  status?: USCorePediatricBMIforAgeObservationProfile_StatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * BMI percentile per age and sex for youth 2-20
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what the observation is about
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * What the observation is about, when it is not about the subject of record
   *
   * @generated from field: repeated google.fhir.r4.core.Reference focus = 17;
   */
  focus: Reference[] = [];

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.EffectiveX effective = 19;
   */
  effective?: USCorePediatricBMIforAgeObservationProfile_EffectiveX;

  /**
   * Date/Time this version was made available
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 20;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 21;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ValueX value = 22;
   */
  value?: USCorePediatricBMIforAgeObservationProfile_ValueX;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 23;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 24;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Comments about the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 26;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 27;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.r4.core.Reference specimen = 28;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.r4.core.Reference device = 29;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ReferenceRange reference_range = 30;
   */
  referenceRange: USCorePediatricBMIforAgeObservationProfile_ReferenceRange[] = [];

  /**
   * Used when reporting vital signs panel components
   *
   * @generated from field: repeated google.fhir.r4.core.Reference has_member = 31;
   */
  hasMember: Reference[] = [];

  /**
   * Related measurements the observation is made from
   *
   * @generated from field: repeated google.fhir.r4.core.Reference derived_from = 32;
   */
  derivedFrom: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component component = 33;
   */
  component: USCorePediatricBMIforAgeObservationProfile_Component[] = [];

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_StatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "focus", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "effective", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_EffectiveX },
    { no: 20, name: "issued", kind: "message", T: Instant },
    { no: 21, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "value", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_ValueX },
    { no: 23, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 24, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 27, name: "method", kind: "message", T: CodeableConcept },
    { no: 28, name: "specimen", kind: "message", T: Reference },
    { no: 29, name: "device", kind: "message", T: Reference },
    { no: 30, name: "reference_range", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_ReferenceRange, repeated: true },
    { no: 31, name: "has_member", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "component", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile {
    return new USCorePediatricBMIforAgeObservationProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile {
    return new USCorePediatricBMIforAgeObservationProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile {
    return new USCorePediatricBMIforAgeObservationProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile | PlainMessage<USCorePediatricBMIforAgeObservationProfile> | undefined, b: USCorePediatricBMIforAgeObservationProfile | PlainMessage<USCorePediatricBMIforAgeObservationProfile> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile, a, b);
  }
}

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.StatusCode
 */
export class USCorePediatricBMIforAgeObservationProfile_StatusCode extends Message<USCorePediatricBMIforAgeObservationProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ObservationStatusCode.Value value = 1;
   */
  value = ObservationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile_StatusCode {
    return new USCorePediatricBMIforAgeObservationProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_StatusCode {
    return new USCorePediatricBMIforAgeObservationProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_StatusCode {
    return new USCorePediatricBMIforAgeObservationProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile_StatusCode | PlainMessage<USCorePediatricBMIforAgeObservationProfile_StatusCode> | undefined, b: USCorePediatricBMIforAgeObservationProfile_StatusCode | PlainMessage<USCorePediatricBMIforAgeObservationProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile_StatusCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.EffectiveX
 */
export class USCorePediatricBMIforAgeObservationProfile_EffectiveX extends Message<USCorePediatricBMIforAgeObservationProfile_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile_EffectiveX {
    return new USCorePediatricBMIforAgeObservationProfile_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_EffectiveX {
    return new USCorePediatricBMIforAgeObservationProfile_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_EffectiveX {
    return new USCorePediatricBMIforAgeObservationProfile_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile_EffectiveX | PlainMessage<USCorePediatricBMIforAgeObservationProfile_EffectiveX> | undefined, b: USCorePediatricBMIforAgeObservationProfile_EffectiveX | PlainMessage<USCorePediatricBMIforAgeObservationProfile_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile_EffectiveX, a, b);
  }
}

/**
 * Vital Signs value are recorded using the Quantity data type. For supporting
 * observations such as Cuff size could use other datatypes such as
 * CodeableConcept.
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ValueX
 */
export class USCorePediatricBMIforAgeObservationProfile_ValueX extends Message<USCorePediatricBMIforAgeObservationProfile_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile_ValueX {
    return new USCorePediatricBMIforAgeObservationProfile_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_ValueX {
    return new USCorePediatricBMIforAgeObservationProfile_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_ValueX {
    return new USCorePediatricBMIforAgeObservationProfile_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile_ValueX | PlainMessage<USCorePediatricBMIforAgeObservationProfile_ValueX> | undefined, b: USCorePediatricBMIforAgeObservationProfile_ValueX | PlainMessage<USCorePediatricBMIforAgeObservationProfile_ValueX> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile_ValueX, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ReferenceRange
 */
export class USCorePediatricBMIforAgeObservationProfile_ReferenceRange extends Message<USCorePediatricBMIforAgeObservationProfile_ReferenceRange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.r4.core.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.r4.core.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile_ReferenceRange {
    return new USCorePediatricBMIforAgeObservationProfile_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_ReferenceRange {
    return new USCorePediatricBMIforAgeObservationProfile_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_ReferenceRange {
    return new USCorePediatricBMIforAgeObservationProfile_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile_ReferenceRange | PlainMessage<USCorePediatricBMIforAgeObservationProfile_ReferenceRange> | undefined, b: USCorePediatricBMIforAgeObservationProfile_ReferenceRange | PlainMessage<USCorePediatricBMIforAgeObservationProfile_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component
 */
export class USCorePediatricBMIforAgeObservationProfile_Component extends Message<USCorePediatricBMIforAgeObservationProfile_Component> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component.ValueX value = 5;
   */
  value?: USCorePediatricBMIforAgeObservationProfile_Component_ValueX;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 7;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.ReferenceRange reference_range = 8;
   */
  referenceRange: USCorePediatricBMIforAgeObservationProfile_ReferenceRange[] = [];

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_Component_ValueX },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reference_range", kind: "message", T: USCorePediatricBMIforAgeObservationProfile_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile_Component {
    return new USCorePediatricBMIforAgeObservationProfile_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_Component {
    return new USCorePediatricBMIforAgeObservationProfile_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_Component {
    return new USCorePediatricBMIforAgeObservationProfile_Component().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile_Component | PlainMessage<USCorePediatricBMIforAgeObservationProfile_Component> | undefined, b: USCorePediatricBMIforAgeObservationProfile_Component | PlainMessage<USCorePediatricBMIforAgeObservationProfile_Component> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component.ValueX
 */
export class USCorePediatricBMIforAgeObservationProfile_Component_ValueX extends Message<USCorePediatricBMIforAgeObservationProfile_Component_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 6;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 8;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePediatricBMIforAgeObservationProfile_Component_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricBMIforAgeObservationProfile.Component.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 6, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 8, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricBMIforAgeObservationProfile_Component_ValueX {
    return new USCorePediatricBMIforAgeObservationProfile_Component_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_Component_ValueX {
    return new USCorePediatricBMIforAgeObservationProfile_Component_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricBMIforAgeObservationProfile_Component_ValueX {
    return new USCorePediatricBMIforAgeObservationProfile_Component_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricBMIforAgeObservationProfile_Component_ValueX | PlainMessage<USCorePediatricBMIforAgeObservationProfile_Component_ValueX> | undefined, b: USCorePediatricBMIforAgeObservationProfile_Component_ValueX | PlainMessage<USCorePediatricBMIforAgeObservationProfile_Component_ValueX> | undefined): boolean {
    return proto3.util.equals(USCorePediatricBMIforAgeObservationProfile_Component_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for
 * USCorePediatricWeightForHeightObservationProfile. FHIR Vital Signs Profile.
 * See
 * http://hl7.org/fhir/us/core/StructureDefinition/pediatric-weight-for-height
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile
 */
export class USCorePediatricWeightForHeightObservationProfile extends Message<USCorePediatricWeightForHeightObservationProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.StatusCode status = 13;
   */
  status?: USCorePediatricWeightForHeightObservationProfile_StatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * Weight-for-length per age and gender
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what the observation is about
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * What the observation is about, when it is not about the subject of record
   *
   * @generated from field: repeated google.fhir.r4.core.Reference focus = 17;
   */
  focus: Reference[] = [];

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.EffectiveX effective = 19;
   */
  effective?: USCorePediatricWeightForHeightObservationProfile_EffectiveX;

  /**
   * Date/Time this version was made available
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 20;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 21;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ValueX value = 22;
   */
  value?: USCorePediatricWeightForHeightObservationProfile_ValueX;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 23;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 24;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Comments about the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 26;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 27;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.r4.core.Reference specimen = 28;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.r4.core.Reference device = 29;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ReferenceRange reference_range = 30;
   */
  referenceRange: USCorePediatricWeightForHeightObservationProfile_ReferenceRange[] = [];

  /**
   * Used when reporting vital signs panel components
   *
   * @generated from field: repeated google.fhir.r4.core.Reference has_member = 31;
   */
  hasMember: Reference[] = [];

  /**
   * Related measurements the observation is made from
   *
   * @generated from field: repeated google.fhir.r4.core.Reference derived_from = 32;
   */
  derivedFrom: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component component = 33;
   */
  component: USCorePediatricWeightForHeightObservationProfile_Component[] = [];

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_StatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "focus", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "effective", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_EffectiveX },
    { no: 20, name: "issued", kind: "message", T: Instant },
    { no: 21, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "value", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_ValueX },
    { no: 23, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 24, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 27, name: "method", kind: "message", T: CodeableConcept },
    { no: 28, name: "specimen", kind: "message", T: Reference },
    { no: 29, name: "device", kind: "message", T: Reference },
    { no: 30, name: "reference_range", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_ReferenceRange, repeated: true },
    { no: 31, name: "has_member", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "component", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile {
    return new USCorePediatricWeightForHeightObservationProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile {
    return new USCorePediatricWeightForHeightObservationProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile {
    return new USCorePediatricWeightForHeightObservationProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile | PlainMessage<USCorePediatricWeightForHeightObservationProfile> | undefined, b: USCorePediatricWeightForHeightObservationProfile | PlainMessage<USCorePediatricWeightForHeightObservationProfile> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile, a, b);
  }
}

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.StatusCode
 */
export class USCorePediatricWeightForHeightObservationProfile_StatusCode extends Message<USCorePediatricWeightForHeightObservationProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ObservationStatusCode.Value value = 1;
   */
  value = ObservationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile_StatusCode {
    return new USCorePediatricWeightForHeightObservationProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_StatusCode {
    return new USCorePediatricWeightForHeightObservationProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_StatusCode {
    return new USCorePediatricWeightForHeightObservationProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile_StatusCode | PlainMessage<USCorePediatricWeightForHeightObservationProfile_StatusCode> | undefined, b: USCorePediatricWeightForHeightObservationProfile_StatusCode | PlainMessage<USCorePediatricWeightForHeightObservationProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile_StatusCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.EffectiveX
 */
export class USCorePediatricWeightForHeightObservationProfile_EffectiveX extends Message<USCorePediatricWeightForHeightObservationProfile_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile_EffectiveX {
    return new USCorePediatricWeightForHeightObservationProfile_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_EffectiveX {
    return new USCorePediatricWeightForHeightObservationProfile_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_EffectiveX {
    return new USCorePediatricWeightForHeightObservationProfile_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile_EffectiveX | PlainMessage<USCorePediatricWeightForHeightObservationProfile_EffectiveX> | undefined, b: USCorePediatricWeightForHeightObservationProfile_EffectiveX | PlainMessage<USCorePediatricWeightForHeightObservationProfile_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile_EffectiveX, a, b);
  }
}

/**
 * Vital Signs value are recorded using the Quantity data type. For supporting
 * observations such as Cuff size could use other datatypes such as
 * CodeableConcept.
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ValueX
 */
export class USCorePediatricWeightForHeightObservationProfile_ValueX extends Message<USCorePediatricWeightForHeightObservationProfile_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile_ValueX {
    return new USCorePediatricWeightForHeightObservationProfile_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_ValueX {
    return new USCorePediatricWeightForHeightObservationProfile_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_ValueX {
    return new USCorePediatricWeightForHeightObservationProfile_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile_ValueX | PlainMessage<USCorePediatricWeightForHeightObservationProfile_ValueX> | undefined, b: USCorePediatricWeightForHeightObservationProfile_ValueX | PlainMessage<USCorePediatricWeightForHeightObservationProfile_ValueX> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile_ValueX, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ReferenceRange
 */
export class USCorePediatricWeightForHeightObservationProfile_ReferenceRange extends Message<USCorePediatricWeightForHeightObservationProfile_ReferenceRange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.r4.core.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.r4.core.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile_ReferenceRange {
    return new USCorePediatricWeightForHeightObservationProfile_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_ReferenceRange {
    return new USCorePediatricWeightForHeightObservationProfile_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_ReferenceRange {
    return new USCorePediatricWeightForHeightObservationProfile_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile_ReferenceRange | PlainMessage<USCorePediatricWeightForHeightObservationProfile_ReferenceRange> | undefined, b: USCorePediatricWeightForHeightObservationProfile_ReferenceRange | PlainMessage<USCorePediatricWeightForHeightObservationProfile_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component
 */
export class USCorePediatricWeightForHeightObservationProfile_Component extends Message<USCorePediatricWeightForHeightObservationProfile_Component> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component.ValueX value = 5;
   */
  value?: USCorePediatricWeightForHeightObservationProfile_Component_ValueX;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 7;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.ReferenceRange reference_range = 8;
   */
  referenceRange: USCorePediatricWeightForHeightObservationProfile_ReferenceRange[] = [];

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_Component_ValueX },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reference_range", kind: "message", T: USCorePediatricWeightForHeightObservationProfile_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile_Component {
    return new USCorePediatricWeightForHeightObservationProfile_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_Component {
    return new USCorePediatricWeightForHeightObservationProfile_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_Component {
    return new USCorePediatricWeightForHeightObservationProfile_Component().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile_Component | PlainMessage<USCorePediatricWeightForHeightObservationProfile_Component> | undefined, b: USCorePediatricWeightForHeightObservationProfile_Component | PlainMessage<USCorePediatricWeightForHeightObservationProfile_Component> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component.ValueX
 */
export class USCorePediatricWeightForHeightObservationProfile_Component_ValueX extends Message<USCorePediatricWeightForHeightObservationProfile_Component_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 6;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 8;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePediatricWeightForHeightObservationProfile_Component_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePediatricWeightForHeightObservationProfile.Component.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 6, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 8, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePediatricWeightForHeightObservationProfile_Component_ValueX {
    return new USCorePediatricWeightForHeightObservationProfile_Component_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_Component_ValueX {
    return new USCorePediatricWeightForHeightObservationProfile_Component_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePediatricWeightForHeightObservationProfile_Component_ValueX {
    return new USCorePediatricWeightForHeightObservationProfile_Component_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePediatricWeightForHeightObservationProfile_Component_ValueX | PlainMessage<USCorePediatricWeightForHeightObservationProfile_Component_ValueX> | undefined, b: USCorePediatricWeightForHeightObservationProfile_Component_ValueX | PlainMessage<USCorePediatricWeightForHeightObservationProfile_Component_ValueX> | undefined): boolean {
    return proto3.util.equals(USCorePediatricWeightForHeightObservationProfile_Component_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCorePractitionerProfile.
 * A person with a  formal responsibility in the provisioning of healthcare or
 * related services. See
 * http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerProfile
 */
export class USCorePractitionerProfile extends Message<USCorePractitionerProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for the person as this agent
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this practitioner's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * The name(s) associated with the practitioner
   *
   * @generated from field: repeated google.fhir.r4.core.HumanName name = 12;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the practitioner (that apply to all roles)
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 13;
   */
  telecom: ContactPoint[] = [];

  /**
   * Address(es) of the practitioner that are not role specific (typically home
   * address)
   *
   * @generated from field: repeated google.fhir.r4.core.Address address = 14;
   */
  address: Address[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePractitionerProfile.GenderCode gender = 15;
   */
  gender?: USCorePractitionerProfile_GenderCode;

  /**
   * The date  on which the practitioner was born
   *
   * @generated from field: google.fhir.r4.core.Date birth_date = 16;
   */
  birthDate?: Date;

  /**
   * Image of the person
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment photo = 17;
   */
  photo: Attachment[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePractitionerProfile.Qualification qualification = 18;
   */
  qualification: USCorePractitionerProfile_Qualification[] = [];

  /**
   * A language the practitioner can use in patient communication
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept communication = 19;
   */
  communication: CodeableConcept[] = [];

  constructor(data?: PartialMessage<USCorePractitionerProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "active", kind: "message", T: Boolean },
    { no: 12, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 13, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 14, name: "address", kind: "message", T: Address, repeated: true },
    { no: 15, name: "gender", kind: "message", T: USCorePractitionerProfile_GenderCode },
    { no: 16, name: "birth_date", kind: "message", T: Date },
    { no: 17, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 18, name: "qualification", kind: "message", T: USCorePractitionerProfile_Qualification, repeated: true },
    { no: 19, name: "communication", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerProfile {
    return new USCorePractitionerProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerProfile {
    return new USCorePractitionerProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerProfile {
    return new USCorePractitionerProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerProfile | PlainMessage<USCorePractitionerProfile> | undefined, b: USCorePractitionerProfile | PlainMessage<USCorePractitionerProfile> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerProfile, a, b);
  }
}

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerProfile.GenderCode
 */
export class USCorePractitionerProfile_GenderCode extends Message<USCorePractitionerProfile_GenderCode> {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value = AdministrativeGenderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePractitionerProfile_GenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerProfile.GenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdministrativeGenderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerProfile_GenderCode {
    return new USCorePractitionerProfile_GenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerProfile_GenderCode {
    return new USCorePractitionerProfile_GenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerProfile_GenderCode {
    return new USCorePractitionerProfile_GenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerProfile_GenderCode | PlainMessage<USCorePractitionerProfile_GenderCode> | undefined, b: USCorePractitionerProfile_GenderCode | PlainMessage<USCorePractitionerProfile_GenderCode> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerProfile_GenderCode, a, b);
  }
}

/**
 * Certification, licenses, or training pertaining to the provision of care
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerProfile.Qualification
 */
export class USCorePractitionerProfile_Qualification extends Message<USCorePractitionerProfile_Qualification> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for this qualification for the practitioner
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 4;
   */
  identifier: Identifier[] = [];

  /**
   * Coded representation of the qualification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  /**
   * Period during which the qualification is valid
   *
   * @generated from field: google.fhir.r4.core.Period period = 6;
   */
  period?: Period;

  /**
   * Organization that regulates and issues the qualification
   *
   * @generated from field: google.fhir.r4.core.Reference issuer = 7;
   */
  issuer?: Reference;

  constructor(data?: PartialMessage<USCorePractitionerProfile_Qualification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerProfile.Qualification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "issuer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerProfile_Qualification {
    return new USCorePractitionerProfile_Qualification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerProfile_Qualification {
    return new USCorePractitionerProfile_Qualification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerProfile_Qualification {
    return new USCorePractitionerProfile_Qualification().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerProfile_Qualification | PlainMessage<USCorePractitionerProfile_Qualification> | undefined, b: USCorePractitionerProfile_Qualification | PlainMessage<USCorePractitionerProfile_Qualification> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerProfile_Qualification, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCorePractitionerRoleProfile.
 * Roles/organizations the practitioner is associated with.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitionerrole
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerRoleProfile
 */
export class USCorePractitionerRoleProfile extends Message<USCorePractitionerRoleProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifiers that are specific to a role/location
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this practitioner role record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * The period during which the practitioner is authorized to perform in these
   * role(s)
   *
   * @generated from field: google.fhir.r4.core.Period period = 12;
   */
  period?: Period;

  /**
   * Practitioner that is able to provide the defined services for the
   * organization
   *
   * @generated from field: google.fhir.r4.core.Reference practitioner = 13;
   */
  practitioner?: Reference;

  /**
   * Organization where the roles are available
   *
   * @generated from field: google.fhir.r4.core.Reference organization = 14;
   */
  organization?: Reference;

  /**
   * Roles which this practitioner may perform
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 15;
   */
  code: CodeableConcept[] = [];

  /**
   * Specific specialty of the practitioner
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept specialty = 16;
   */
  specialty: CodeableConcept[] = [];

  /**
   * The location(s) at which this practitioner provides care
   *
   * @generated from field: repeated google.fhir.r4.core.Reference location = 17;
   */
  location: Reference[] = [];

  /**
   * The list of healthcare services that this worker provides for this role's
   * Organization/Location(s)
   *
   * @generated from field: repeated google.fhir.r4.core.Reference healthcare_service = 18;
   */
  healthcareService: Reference[] = [];

  /**
   * Contact details that are specific to the role/location/service
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 19;
   */
  telecom: ContactPoint[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePractitionerRoleProfile.AvailableTime available_time = 20;
   */
  availableTime: USCorePractitionerRoleProfile_AvailableTime[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePractitionerRoleProfile.NotAvailable not_available = 21;
   */
  notAvailable: USCorePractitionerRoleProfile_NotAvailable[] = [];

  /**
   * Description of availability exceptions
   *
   * @generated from field: google.fhir.r4.core.String availability_exceptions = 22;
   */
  availabilityExceptions?: String;

  /**
   * Technical endpoints providing access to services operated for the
   * practitioner with this role
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 23;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<USCorePractitionerRoleProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerRoleProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "active", kind: "message", T: Boolean },
    { no: 12, name: "period", kind: "message", T: Period },
    { no: 13, name: "practitioner", kind: "message", T: Reference },
    { no: 14, name: "organization", kind: "message", T: Reference },
    { no: 15, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "specialty", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "location", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "healthcare_service", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 20, name: "available_time", kind: "message", T: USCorePractitionerRoleProfile_AvailableTime, repeated: true },
    { no: 21, name: "not_available", kind: "message", T: USCorePractitionerRoleProfile_NotAvailable, repeated: true },
    { no: 22, name: "availability_exceptions", kind: "message", T: String },
    { no: 23, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerRoleProfile {
    return new USCorePractitionerRoleProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile {
    return new USCorePractitionerRoleProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile {
    return new USCorePractitionerRoleProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerRoleProfile | PlainMessage<USCorePractitionerRoleProfile> | undefined, b: USCorePractitionerRoleProfile | PlainMessage<USCorePractitionerRoleProfile> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerRoleProfile, a, b);
  }
}

/**
 * Times the Service Site is available
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerRoleProfile.AvailableTime
 */
export class USCorePractitionerRoleProfile_AvailableTime extends Message<USCorePractitionerRoleProfile_AvailableTime> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePractitionerRoleProfile.AvailableTime.DaysOfWeekCode days_of_week = 4;
   */
  daysOfWeek: USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode[] = [];

  /**
   * Always available? e.g. 24 hour service
   *
   * @generated from field: google.fhir.r4.core.Boolean all_day = 5;
   */
  allDay?: Boolean;

  /**
   * Opening time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.r4.core.Time available_start_time = 6;
   */
  availableStartTime?: Time;

  /**
   * Closing time of day (ignored if allDay = true)
   *
   * @generated from field: google.fhir.r4.core.Time available_end_time = 7;
   */
  availableEndTime?: Time;

  constructor(data?: PartialMessage<USCorePractitionerRoleProfile_AvailableTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerRoleProfile.AvailableTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "days_of_week", kind: "message", T: USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode, repeated: true },
    { no: 5, name: "all_day", kind: "message", T: Boolean },
    { no: 6, name: "available_start_time", kind: "message", T: Time },
    { no: 7, name: "available_end_time", kind: "message", T: Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerRoleProfile_AvailableTime {
    return new USCorePractitionerRoleProfile_AvailableTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile_AvailableTime {
    return new USCorePractitionerRoleProfile_AvailableTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile_AvailableTime {
    return new USCorePractitionerRoleProfile_AvailableTime().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerRoleProfile_AvailableTime | PlainMessage<USCorePractitionerRoleProfile_AvailableTime> | undefined, b: USCorePractitionerRoleProfile_AvailableTime | PlainMessage<USCorePractitionerRoleProfile_AvailableTime> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerRoleProfile_AvailableTime, a, b);
  }
}

/**
 * mon | tue | wed | thu | fri | sat | sun
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerRoleProfile.AvailableTime.DaysOfWeekCode
 */
export class USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode extends Message<USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode> {
  /**
   * @generated from field: google.fhir.r4.core.DaysOfWeekCode.Value value = 1;
   */
  value = DaysOfWeekCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerRoleProfile.AvailableTime.DaysOfWeekCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DaysOfWeekCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode {
    return new USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode {
    return new USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode {
    return new USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode | PlainMessage<USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode> | undefined, b: USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode | PlainMessage<USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerRoleProfile_AvailableTime_DaysOfWeekCode, a, b);
  }
}

/**
 * Not available during this time due to provided reason
 *
 * @generated from message google.fhir.r4.uscore.USCorePractitionerRoleProfile.NotAvailable
 */
export class USCorePractitionerRoleProfile_NotAvailable extends Message<USCorePractitionerRoleProfile_NotAvailable> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reason presented to the user explaining why time not available
   *
   * @generated from field: google.fhir.r4.core.String description = 4;
   */
  description?: String;

  /**
   * Service not available from this date
   *
   * @generated from field: google.fhir.r4.core.Period during = 5;
   */
  during?: Period;

  constructor(data?: PartialMessage<USCorePractitionerRoleProfile_NotAvailable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePractitionerRoleProfile.NotAvailable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "during", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePractitionerRoleProfile_NotAvailable {
    return new USCorePractitionerRoleProfile_NotAvailable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile_NotAvailable {
    return new USCorePractitionerRoleProfile_NotAvailable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePractitionerRoleProfile_NotAvailable {
    return new USCorePractitionerRoleProfile_NotAvailable().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePractitionerRoleProfile_NotAvailable | PlainMessage<USCorePractitionerRoleProfile_NotAvailable> | undefined, b: USCorePractitionerRoleProfile_NotAvailable | PlainMessage<USCorePractitionerRoleProfile_NotAvailable> | undefined): boolean {
    return proto3.util.equals(USCorePractitionerRoleProfile_NotAvailable, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreProcedureProfile.
 * An action that is being or was performed on a patient.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-procedure
 *
 * @generated from message google.fhir.r4.uscore.USCoreProcedureProfile
 */
export class USCoreProcedureProfile extends Message<USCoreProcedureProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Identifiers for this procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[] = [];

  /**
   * A request for this procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 14;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreProcedureProfile.StatusCode status = 15;
   */
  status?: USCoreProcedureProfile_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 16;
   */
  statusReason?: CodeableConcept;

  /**
   * Classification of the procedure
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 17;
   */
  category?: CodeableConcept;

  /**
   * Procedure codes from SNOMED CT, CPT, or HCPCS II
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 18;
   */
  code?: CodeableConcept;

  /**
   * Who the procedure was performed on
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 20;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreProcedureProfile.PerformedX performed = 21;
   */
  performed?: USCoreProcedureProfile_PerformedX;

  /**
   * Who recorded the procedure
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 22;
   */
  recorder?: Reference;

  /**
   * Person who asserts this procedure
   *
   * @generated from field: google.fhir.r4.core.Reference asserter = 23;
   */
  asserter?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreProcedureProfile.Performer performer = 24;
   */
  performer: USCoreProcedureProfile_Performer[] = [];

  /**
   * Where the procedure happened
   *
   * @generated from field: google.fhir.r4.core.Reference location = 25;
   */
  location?: Reference;

  /**
   * Coded reason procedure performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 26;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * The justification that the procedure was performed
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 27;
   */
  reasonReference: Reference[] = [];

  /**
   * Target body sites
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept body_site = 28;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * The result of procedure
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept outcome = 29;
   */
  outcome?: CodeableConcept;

  /**
   * Any report resulting from the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference report = 30;
   */
  report: Reference[] = [];

  /**
   * Complication following the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept complication = 31;
   */
  complication: CodeableConcept[] = [];

  /**
   * A condition that is a result of the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference complication_detail = 32;
   */
  complicationDetail: Reference[] = [];

  /**
   * Instructions for follow up
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept follow_up = 33;
   */
  followUp: CodeableConcept[] = [];

  /**
   * Additional information about the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 34;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreProcedureProfile.FocalDevice focal_device = 35;
   */
  focalDevice: USCoreProcedureProfile_FocalDevice[] = [];

  /**
   * Items used during procedure
   *
   * @generated from field: repeated google.fhir.r4.core.Reference used_reference = 36;
   */
  usedReference: Reference[] = [];

  /**
   * Coded items used during the procedure
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept used_code = 37;
   */
  usedCode: CodeableConcept[] = [];

  constructor(data?: PartialMessage<USCoreProcedureProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProcedureProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 12, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 13, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "status", kind: "message", T: USCoreProcedureProfile_StatusCode },
    { no: 16, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 17, name: "category", kind: "message", T: CodeableConcept },
    { no: 18, name: "code", kind: "message", T: CodeableConcept },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "encounter", kind: "message", T: Reference },
    { no: 21, name: "performed", kind: "message", T: USCoreProcedureProfile_PerformedX },
    { no: 22, name: "recorder", kind: "message", T: Reference },
    { no: 23, name: "asserter", kind: "message", T: Reference },
    { no: 24, name: "performer", kind: "message", T: USCoreProcedureProfile_Performer, repeated: true },
    { no: 25, name: "location", kind: "message", T: Reference },
    { no: 26, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 27, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 30, name: "report", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "complication", kind: "message", T: CodeableConcept, repeated: true },
    { no: 32, name: "complication_detail", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "follow_up", kind: "message", T: CodeableConcept, repeated: true },
    { no: 34, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 35, name: "focal_device", kind: "message", T: USCoreProcedureProfile_FocalDevice, repeated: true },
    { no: 36, name: "used_reference", kind: "message", T: Reference, repeated: true },
    { no: 37, name: "used_code", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProcedureProfile {
    return new USCoreProcedureProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProcedureProfile {
    return new USCoreProcedureProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProcedureProfile {
    return new USCoreProcedureProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProcedureProfile | PlainMessage<USCoreProcedureProfile> | undefined, b: USCoreProcedureProfile | PlainMessage<USCoreProcedureProfile> | undefined): boolean {
    return proto3.util.equals(USCoreProcedureProfile, a, b);
  }
}

/**
 * preparation | in-progress | not-done | on-hold | stopped | completed |
 * entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.uscore.USCoreProcedureProfile.StatusCode
 */
export class USCoreProcedureProfile_StatusCode extends Message<USCoreProcedureProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.EventStatusCode.Value value = 1;
   */
  value = EventStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreProcedureProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProcedureProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EventStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProcedureProfile_StatusCode {
    return new USCoreProcedureProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_StatusCode {
    return new USCoreProcedureProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_StatusCode {
    return new USCoreProcedureProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProcedureProfile_StatusCode | PlainMessage<USCoreProcedureProfile_StatusCode> | undefined, b: USCoreProcedureProfile_StatusCode | PlainMessage<USCoreProcedureProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreProcedureProfile_StatusCode, a, b);
  }
}

/**
 * When the procedure was performed
 *
 * @generated from message google.fhir.r4.uscore.USCoreProcedureProfile.PerformedX
 */
export class USCoreProcedureProfile_PerformedX extends Message<USCoreProcedureProfile_PerformedX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreProcedureProfile.PerformedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreProcedureProfile_PerformedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProcedureProfile.PerformedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProcedureProfile_PerformedX {
    return new USCoreProcedureProfile_PerformedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_PerformedX {
    return new USCoreProcedureProfile_PerformedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_PerformedX {
    return new USCoreProcedureProfile_PerformedX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProcedureProfile_PerformedX | PlainMessage<USCoreProcedureProfile_PerformedX> | undefined, b: USCoreProcedureProfile_PerformedX | PlainMessage<USCoreProcedureProfile_PerformedX> | undefined): boolean {
    return proto3.util.equals(USCoreProcedureProfile_PerformedX, a, b);
  }
}

/**
 * The people who performed the procedure
 *
 * @generated from message google.fhir.r4.uscore.USCoreProcedureProfile.Performer
 */
export class USCoreProcedureProfile_Performer extends Message<USCoreProcedureProfile_Performer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * The reference to the practitioner
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;

  /**
   * Organization the device or practitioner was acting for
   *
   * @generated from field: google.fhir.r4.core.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<USCoreProcedureProfile_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProcedureProfile.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "function", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProcedureProfile_Performer {
    return new USCoreProcedureProfile_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_Performer {
    return new USCoreProcedureProfile_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_Performer {
    return new USCoreProcedureProfile_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProcedureProfile_Performer | PlainMessage<USCoreProcedureProfile_Performer> | undefined, b: USCoreProcedureProfile_Performer | PlainMessage<USCoreProcedureProfile_Performer> | undefined): boolean {
    return proto3.util.equals(USCoreProcedureProfile_Performer, a, b);
  }
}

/**
 * Manipulated, implanted, or removed device
 *
 * @generated from message google.fhir.r4.uscore.USCoreProcedureProfile.FocalDevice
 */
export class USCoreProcedureProfile_FocalDevice extends Message<USCoreProcedureProfile_FocalDevice> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Kind of change to device
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Device that was changed
   *
   * @generated from field: google.fhir.r4.core.Reference manipulated = 5;
   */
  manipulated?: Reference;

  constructor(data?: PartialMessage<USCoreProcedureProfile_FocalDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProcedureProfile.FocalDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: CodeableConcept },
    { no: 5, name: "manipulated", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProcedureProfile_FocalDevice {
    return new USCoreProcedureProfile_FocalDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_FocalDevice {
    return new USCoreProcedureProfile_FocalDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProcedureProfile_FocalDevice {
    return new USCoreProcedureProfile_FocalDevice().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProcedureProfile_FocalDevice | PlainMessage<USCoreProcedureProfile_FocalDevice> | undefined, b: USCoreProcedureProfile_FocalDevice | PlainMessage<USCoreProcedureProfile_FocalDevice> | undefined): boolean {
    return proto3.util.equals(USCoreProcedureProfile_FocalDevice, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreProvenance.
 * US Core Provenance.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-provenance
 *
 * @generated from message google.fhir.r4.uscore.USCoreProvenance
 */
export class USCoreProvenance extends Message<USCoreProvenance> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * The Resource this Provenance record supports
   *
   * @generated from field: repeated google.fhir.r4.core.Reference target = 10;
   */
  target: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreProvenance.OccurredX occurred = 11;
   */
  occurred?: USCoreProvenance_OccurredX;

  /**
   * Timestamp when the activity was recorded / updated
   *
   * @generated from field: google.fhir.r4.core.Instant recorded = 12;
   */
  recorded?: Instant;

  /**
   * Policy or plan the activity was defined by
   *
   * @generated from field: repeated google.fhir.r4.core.Uri policy = 13;
   */
  policy: Uri[] = [];

  /**
   * Where the activity occurred, if relevant
   *
   * @generated from field: google.fhir.r4.core.Reference location = 14;
   */
  location?: Reference;

  /**
   * Reason the activity is occurring
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason = 15;
   */
  reason: CodeableConcept[] = [];

  /**
   * Activity that occurred
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept activity = 16;
   */
  activity?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreProvenance.Agent agent = 17;
   */
  agent: USCoreProvenance_Agent[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreProvenance.Entity entity = 18;
   */
  entity: USCoreProvenance_Entity[] = [];

  /**
   * Signature on target
   *
   * @generated from field: repeated google.fhir.r4.core.Signature signature = 19;
   */
  signature: Signature[] = [];

  constructor(data?: PartialMessage<USCoreProvenance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProvenance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "target", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "occurred", kind: "message", T: USCoreProvenance_OccurredX },
    { no: 12, name: "recorded", kind: "message", T: Instant },
    { no: 13, name: "policy", kind: "message", T: Uri, repeated: true },
    { no: 14, name: "location", kind: "message", T: Reference },
    { no: 15, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "activity", kind: "message", T: CodeableConcept },
    { no: 17, name: "agent", kind: "message", T: USCoreProvenance_Agent, repeated: true },
    { no: 18, name: "entity", kind: "message", T: USCoreProvenance_Entity, repeated: true },
    { no: 19, name: "signature", kind: "message", T: Signature, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProvenance {
    return new USCoreProvenance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProvenance {
    return new USCoreProvenance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProvenance {
    return new USCoreProvenance().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProvenance | PlainMessage<USCoreProvenance> | undefined, b: USCoreProvenance | PlainMessage<USCoreProvenance> | undefined): boolean {
    return proto3.util.equals(USCoreProvenance, a, b);
  }
}

/**
 * When the activity occurred
 *
 * @generated from message google.fhir.r4.uscore.USCoreProvenance.OccurredX
 */
export class USCoreProvenance_OccurredX extends Message<USCoreProvenance_OccurredX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreProvenance.OccurredX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 1;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreProvenance_OccurredX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProvenance.OccurredX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProvenance_OccurredX {
    return new USCoreProvenance_OccurredX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProvenance_OccurredX {
    return new USCoreProvenance_OccurredX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProvenance_OccurredX {
    return new USCoreProvenance_OccurredX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProvenance_OccurredX | PlainMessage<USCoreProvenance_OccurredX> | undefined, b: USCoreProvenance_OccurredX | PlainMessage<USCoreProvenance_OccurredX> | undefined): boolean {
    return proto3.util.equals(USCoreProvenance_OccurredX, a, b);
  }
}

/**
 * Actor involved
 *
 * @generated from message google.fhir.r4.uscore.USCoreProvenance.Agent
 */
export class USCoreProvenance_Agent extends Message<USCoreProvenance_Agent> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * How the agent participated
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * What the agents role was
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept role = 5;
   */
  role: CodeableConcept[] = [];

  /**
   * Who participated
   *
   * @generated from field: google.fhir.r4.core.Reference who = 6;
   */
  who?: Reference;

  /**
   * Who the agent is representing
   *
   * @generated from field: google.fhir.r4.core.Reference on_behalf_of = 7;
   */
  onBehalfOf?: Reference;

  constructor(data?: PartialMessage<USCoreProvenance_Agent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProvenance.Agent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "role", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "who", kind: "message", T: Reference },
    { no: 7, name: "on_behalf_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProvenance_Agent {
    return new USCoreProvenance_Agent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProvenance_Agent {
    return new USCoreProvenance_Agent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProvenance_Agent {
    return new USCoreProvenance_Agent().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProvenance_Agent | PlainMessage<USCoreProvenance_Agent> | undefined, b: USCoreProvenance_Agent | PlainMessage<USCoreProvenance_Agent> | undefined): boolean {
    return proto3.util.equals(USCoreProvenance_Agent, a, b);
  }
}

/**
 * An entity used in this activity
 *
 * @generated from message google.fhir.r4.uscore.USCoreProvenance.Entity
 */
export class USCoreProvenance_Entity extends Message<USCoreProvenance_Entity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreProvenance.Entity.RoleCode role = 4;
   */
  role?: USCoreProvenance_Entity_RoleCode;

  /**
   * Identity of entity
   *
   * @generated from field: google.fhir.r4.core.Reference what = 5;
   */
  what?: Reference;

  /**
   * Entity is attributed to this agent
   *
   * @generated from field: repeated google.fhir.r4.uscore.USCoreProvenance.Agent agent = 6;
   */
  agent: USCoreProvenance_Agent[] = [];

  constructor(data?: PartialMessage<USCoreProvenance_Entity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProvenance.Entity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "role", kind: "message", T: USCoreProvenance_Entity_RoleCode },
    { no: 5, name: "what", kind: "message", T: Reference },
    { no: 6, name: "agent", kind: "message", T: USCoreProvenance_Agent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProvenance_Entity {
    return new USCoreProvenance_Entity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProvenance_Entity {
    return new USCoreProvenance_Entity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProvenance_Entity {
    return new USCoreProvenance_Entity().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProvenance_Entity | PlainMessage<USCoreProvenance_Entity> | undefined, b: USCoreProvenance_Entity | PlainMessage<USCoreProvenance_Entity> | undefined): boolean {
    return proto3.util.equals(USCoreProvenance_Entity, a, b);
  }
}

/**
 * derivation | revision | quotation | source | removal
 *
 * @generated from message google.fhir.r4.uscore.USCoreProvenance.Entity.RoleCode
 */
export class USCoreProvenance_Entity_RoleCode extends Message<USCoreProvenance_Entity_RoleCode> {
  /**
   * @generated from field: google.fhir.r4.core.ProvenanceEntityRoleCode.Value value = 1;
   */
  value = ProvenanceEntityRoleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreProvenance_Entity_RoleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreProvenance.Entity.RoleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ProvenanceEntityRoleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreProvenance_Entity_RoleCode {
    return new USCoreProvenance_Entity_RoleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreProvenance_Entity_RoleCode {
    return new USCoreProvenance_Entity_RoleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreProvenance_Entity_RoleCode {
    return new USCoreProvenance_Entity_RoleCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreProvenance_Entity_RoleCode | PlainMessage<USCoreProvenance_Entity_RoleCode> | undefined, b: USCoreProvenance_Entity_RoleCode | PlainMessage<USCoreProvenance_Entity_RoleCode> | undefined): boolean {
    return proto3.util.equals(USCoreProvenance_Entity_RoleCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCorePulseOximetryProfile.
 * FHIR Oxygen Saturation Profile.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-pulse-oximetry
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile
 */
export class USCorePulseOximetryProfile extends Message<USCorePulseOximetryProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePulseOximetryProfile.StatusCode status = 13;
   */
  status?: USCorePulseOximetryProfile_StatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePulseOximetryProfile.CodeableConceptForCode code = 15;
   */
  code?: USCorePulseOximetryProfile_CodeableConceptForCode;

  /**
   * Who and/or what the observation is about
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * What the observation is about, when it is not about the subject of record
   *
   * @generated from field: repeated google.fhir.r4.core.Reference focus = 17;
   */
  focus: Reference[] = [];

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePulseOximetryProfile.EffectiveX effective = 19;
   */
  effective?: USCorePulseOximetryProfile_EffectiveX;

  /**
   * Date/Time this version was made available
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 20;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 21;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePulseOximetryProfile.ValueX value = 22;
   */
  value?: USCorePulseOximetryProfile_ValueX;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 23;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 24;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Comments about the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 26;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 27;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.r4.core.Reference specimen = 28;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.r4.core.Reference device = 29;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePulseOximetryProfile.ReferenceRange reference_range = 30;
   */
  referenceRange: USCorePulseOximetryProfile_ReferenceRange[] = [];

  /**
   * Used when reporting vital signs panel components
   *
   * @generated from field: repeated google.fhir.r4.core.Reference has_member = 31;
   */
  hasMember: Reference[] = [];

  /**
   * Related measurements the observation is made from
   *
   * @generated from field: repeated google.fhir.r4.core.Reference derived_from = 32;
   */
  derivedFrom: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCorePulseOximetryProfile.Component component = 33;
   */
  component: USCorePulseOximetryProfile_Component[] = [];

  constructor(data?: PartialMessage<USCorePulseOximetryProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: USCorePulseOximetryProfile_StatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "code", kind: "message", T: USCorePulseOximetryProfile_CodeableConceptForCode },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "focus", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "effective", kind: "message", T: USCorePulseOximetryProfile_EffectiveX },
    { no: 20, name: "issued", kind: "message", T: Instant },
    { no: 21, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "value", kind: "message", T: USCorePulseOximetryProfile_ValueX },
    { no: 23, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 24, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 27, name: "method", kind: "message", T: CodeableConcept },
    { no: 28, name: "specimen", kind: "message", T: Reference },
    { no: 29, name: "device", kind: "message", T: Reference },
    { no: 30, name: "reference_range", kind: "message", T: USCorePulseOximetryProfile_ReferenceRange, repeated: true },
    { no: 31, name: "has_member", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "component", kind: "message", T: USCorePulseOximetryProfile_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile {
    return new USCorePulseOximetryProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile {
    return new USCorePulseOximetryProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile {
    return new USCorePulseOximetryProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile | PlainMessage<USCorePulseOximetryProfile> | undefined, b: USCorePulseOximetryProfile | PlainMessage<USCorePulseOximetryProfile> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile, a, b);
  }
}

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.StatusCode
 */
export class USCorePulseOximetryProfile_StatusCode extends Message<USCorePulseOximetryProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ObservationStatusCode.Value value = 1;
   */
  value = ObservationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_StatusCode {
    return new USCorePulseOximetryProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_StatusCode {
    return new USCorePulseOximetryProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_StatusCode {
    return new USCorePulseOximetryProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_StatusCode | PlainMessage<USCorePulseOximetryProfile_StatusCode> | undefined, b: USCorePulseOximetryProfile_StatusCode | PlainMessage<USCorePulseOximetryProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_StatusCode, a, b);
  }
}

/**
 * Oxygen Saturation by Pulse Oximetry
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.CodeableConceptForCode
 */
export class USCorePulseOximetryProfile_CodeableConceptForCode extends Message<USCorePulseOximetryProfile_CodeableConceptForCode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.r4.core.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.r4.core.String text = 4;
   */
  text?: String;

  /**
   * @generated from field: google.fhir.r4.core.CodingWithFixedCode oxygen_sat_code = 5 [json_name = "OxygenSatCode"];
   */
  oxygenSatCode?: CodingWithFixedCode;

  /**
   * @generated from field: google.fhir.r4.core.CodingWithFixedCode pulse_ox = 6 [json_name = "PulseOx"];
   */
  pulseOx?: CodingWithFixedCode;

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_CodeableConceptForCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.CodeableConceptForCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "oxygen_sat_code", jsonName: "OxygenSatCode", kind: "message", T: CodingWithFixedCode },
    { no: 6, name: "pulse_ox", jsonName: "PulseOx", kind: "message", T: CodingWithFixedCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_CodeableConceptForCode {
    return new USCorePulseOximetryProfile_CodeableConceptForCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_CodeableConceptForCode {
    return new USCorePulseOximetryProfile_CodeableConceptForCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_CodeableConceptForCode {
    return new USCorePulseOximetryProfile_CodeableConceptForCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_CodeableConceptForCode | PlainMessage<USCorePulseOximetryProfile_CodeableConceptForCode> | undefined, b: USCorePulseOximetryProfile_CodeableConceptForCode | PlainMessage<USCorePulseOximetryProfile_CodeableConceptForCode> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_CodeableConceptForCode, a, b);
  }
}

/**
 * Often just a dateTime for Vital Signs
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.EffectiveX
 */
export class USCorePulseOximetryProfile_EffectiveX extends Message<USCorePulseOximetryProfile_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePulseOximetryProfile.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_EffectiveX {
    return new USCorePulseOximetryProfile_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_EffectiveX {
    return new USCorePulseOximetryProfile_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_EffectiveX {
    return new USCorePulseOximetryProfile_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_EffectiveX | PlainMessage<USCorePulseOximetryProfile_EffectiveX> | undefined, b: USCorePulseOximetryProfile_EffectiveX | PlainMessage<USCorePulseOximetryProfile_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_EffectiveX, a, b);
  }
}

/**
 * Vital Signs value are recorded using the Quantity data type. For supporting
 * observations such as Cuff size could use other datatypes such as
 * CodeableConcept.
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.ValueX
 */
export class USCorePulseOximetryProfile_ValueX extends Message<USCorePulseOximetryProfile_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePulseOximetryProfile.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_ValueX {
    return new USCorePulseOximetryProfile_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_ValueX {
    return new USCorePulseOximetryProfile_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_ValueX {
    return new USCorePulseOximetryProfile_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_ValueX | PlainMessage<USCorePulseOximetryProfile_ValueX> | undefined, b: USCorePulseOximetryProfile_ValueX | PlainMessage<USCorePulseOximetryProfile_ValueX> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_ValueX, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.ReferenceRange
 */
export class USCorePulseOximetryProfile_ReferenceRange extends Message<USCorePulseOximetryProfile_ReferenceRange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.r4.core.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.r4.core.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_ReferenceRange {
    return new USCorePulseOximetryProfile_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_ReferenceRange {
    return new USCorePulseOximetryProfile_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_ReferenceRange {
    return new USCorePulseOximetryProfile_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_ReferenceRange | PlainMessage<USCorePulseOximetryProfile_ReferenceRange> | undefined, b: USCorePulseOximetryProfile_ReferenceRange | PlainMessage<USCorePulseOximetryProfile_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_ReferenceRange, a, b);
  }
}

/**
 * Used when reporting systolic and diastolic blood pressure.
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.Component
 */
export class USCorePulseOximetryProfile_Component extends Message<USCorePulseOximetryProfile_Component> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCorePulseOximetryProfile.Component.ValueX value = 5;
   */
  value?: USCorePulseOximetryProfile_Component_ValueX;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 7;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.r4.uscore.USCorePulseOximetryProfile.ReferenceRange reference_range = 8;
   */
  referenceRange: USCorePulseOximetryProfile_ReferenceRange[] = [];

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: USCorePulseOximetryProfile_Component_ValueX },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reference_range", kind: "message", T: USCorePulseOximetryProfile_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_Component {
    return new USCorePulseOximetryProfile_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_Component {
    return new USCorePulseOximetryProfile_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_Component {
    return new USCorePulseOximetryProfile_Component().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_Component | PlainMessage<USCorePulseOximetryProfile_Component> | undefined, b: USCorePulseOximetryProfile_Component | PlainMessage<USCorePulseOximetryProfile_Component> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_Component, a, b);
  }
}

/**
 * Vital Sign Value recorded with UCUM
 *
 * @generated from message google.fhir.r4.uscore.USCorePulseOximetryProfile.Component.ValueX
 */
export class USCorePulseOximetryProfile_Component_ValueX extends Message<USCorePulseOximetryProfile_Component_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCorePulseOximetryProfile.Component.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 6;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 8;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCorePulseOximetryProfile_Component_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCorePulseOximetryProfile.Component.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 6, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 8, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCorePulseOximetryProfile_Component_ValueX {
    return new USCorePulseOximetryProfile_Component_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_Component_ValueX {
    return new USCorePulseOximetryProfile_Component_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCorePulseOximetryProfile_Component_ValueX {
    return new USCorePulseOximetryProfile_Component_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCorePulseOximetryProfile_Component_ValueX | PlainMessage<USCorePulseOximetryProfile_Component_ValueX> | undefined, b: USCorePulseOximetryProfile_Component_ValueX | PlainMessage<USCorePulseOximetryProfile_Component_ValueX> | undefined): boolean {
    return proto3.util.equals(USCorePulseOximetryProfile_Component_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreSmokingStatusProfile.
 * Measurements and simple assertions.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-smokingstatus
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile
 */
export class USCoreSmokingStatusProfile extends Message<USCoreSmokingStatusProfile> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for observation
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreSmokingStatusProfile.StatusCode status = 13;
   */
  status?: USCoreSmokingStatusProfile_StatusCode;

  /**
   * Classification of  type of observation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * Smoking Status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Who and/or what the observation is about
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * What the observation is about, when it is not about the subject of record
   *
   * @generated from field: repeated google.fhir.r4.core.Reference focus = 17;
   */
  focus: Reference[] = [];

  /**
   * Healthcare event during which this observation is made
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreSmokingStatusProfile.EffectiveX effective = 19;
   */
  effective?: USCoreSmokingStatusProfile_EffectiveX;

  /**
   * Date/Time this version was made available
   *
   * @generated from field: google.fhir.r4.core.Instant issued = 20;
   */
  issued?: Instant;

  /**
   * Who is responsible for the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 21;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreSmokingStatusProfile.ValueX value = 22;
   */
  value?: USCoreSmokingStatusProfile_ValueX;

  /**
   * Why the result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 23;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 24;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Comments about the observation
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 25;
   */
  note: Annotation[] = [];

  /**
   * Observed body part
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 26;
   */
  bodySite?: CodeableConcept;

  /**
   * How it was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 27;
   */
  method?: CodeableConcept;

  /**
   * Specimen used for this observation
   *
   * @generated from field: google.fhir.r4.core.Reference specimen = 28;
   */
  specimen?: Reference;

  /**
   * (Measurement) Device
   *
   * @generated from field: google.fhir.r4.core.Reference device = 29;
   */
  device?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreSmokingStatusProfile.ReferenceRange reference_range = 30;
   */
  referenceRange: USCoreSmokingStatusProfile_ReferenceRange[] = [];

  /**
   * Related resource that belongs to the Observation group
   *
   * @generated from field: repeated google.fhir.r4.core.Reference has_member = 31;
   */
  hasMember: Reference[] = [];

  /**
   * Related measurements the observation is made from
   *
   * @generated from field: repeated google.fhir.r4.core.Reference derived_from = 32;
   */
  derivedFrom: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component component = 33;
   */
  component: USCoreSmokingStatusProfile_Component[] = [];

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: USCoreSmokingStatusProfile_StatusCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "focus", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "effective", kind: "message", T: USCoreSmokingStatusProfile_EffectiveX },
    { no: 20, name: "issued", kind: "message", T: Instant },
    { no: 21, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "value", kind: "message", T: USCoreSmokingStatusProfile_ValueX },
    { no: 23, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 24, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 26, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 27, name: "method", kind: "message", T: CodeableConcept },
    { no: 28, name: "specimen", kind: "message", T: Reference },
    { no: 29, name: "device", kind: "message", T: Reference },
    { no: 30, name: "reference_range", kind: "message", T: USCoreSmokingStatusProfile_ReferenceRange, repeated: true },
    { no: 31, name: "has_member", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 33, name: "component", kind: "message", T: USCoreSmokingStatusProfile_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile {
    return new USCoreSmokingStatusProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile {
    return new USCoreSmokingStatusProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile {
    return new USCoreSmokingStatusProfile().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile | PlainMessage<USCoreSmokingStatusProfile> | undefined, b: USCoreSmokingStatusProfile | PlainMessage<USCoreSmokingStatusProfile> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile, a, b);
  }
}

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile.StatusCode
 */
export class USCoreSmokingStatusProfile_StatusCode extends Message<USCoreSmokingStatusProfile_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.uscore.USCoreObservationSmokingStatusStatusValueSet.Value value = 1;
   */
  value = USCoreObservationSmokingStatusStatusValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(USCoreObservationSmokingStatusStatusValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile_StatusCode {
    return new USCoreSmokingStatusProfile_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_StatusCode {
    return new USCoreSmokingStatusProfile_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_StatusCode {
    return new USCoreSmokingStatusProfile_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile_StatusCode | PlainMessage<USCoreSmokingStatusProfile_StatusCode> | undefined, b: USCoreSmokingStatusProfile_StatusCode | PlainMessage<USCoreSmokingStatusProfile_StatusCode> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile_StatusCode, a, b);
  }
}

/**
 * Clinically relevant time/time-period for observation
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile.EffectiveX
 */
export class USCoreSmokingStatusProfile_EffectiveX extends Message<USCoreSmokingStatusProfile_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreSmokingStatusProfile.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 4;
     */
    value: Instant;
    case: "instant";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 4, name: "instant", kind: "message", T: Instant, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile_EffectiveX {
    return new USCoreSmokingStatusProfile_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_EffectiveX {
    return new USCoreSmokingStatusProfile_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_EffectiveX {
    return new USCoreSmokingStatusProfile_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile_EffectiveX | PlainMessage<USCoreSmokingStatusProfile_EffectiveX> | undefined, b: USCoreSmokingStatusProfile_EffectiveX | PlainMessage<USCoreSmokingStatusProfile_EffectiveX> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile_EffectiveX, a, b);
  }
}

/**
 * Actual result
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile.ValueX
 */
export class USCoreSmokingStatusProfile_ValueX extends Message<USCoreSmokingStatusProfile_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreSmokingStatusProfile.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile_ValueX {
    return new USCoreSmokingStatusProfile_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_ValueX {
    return new USCoreSmokingStatusProfile_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_ValueX {
    return new USCoreSmokingStatusProfile_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile_ValueX | PlainMessage<USCoreSmokingStatusProfile_ValueX> | undefined, b: USCoreSmokingStatusProfile_ValueX | PlainMessage<USCoreSmokingStatusProfile_ValueX> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile_ValueX, a, b);
  }
}

/**
 * Provides guide for interpretation
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile.ReferenceRange
 */
export class USCoreSmokingStatusProfile_ReferenceRange extends Message<USCoreSmokingStatusProfile_ReferenceRange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Low Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity low = 4;
   */
  low?: SimpleQuantity;

  /**
   * High Range, if relevant
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity high = 5;
   */
  high?: SimpleQuantity;

  /**
   * Reference range qualifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Reference range population
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept applies_to = 7;
   */
  appliesTo: CodeableConcept[] = [];

  /**
   * Applicable age range, if relevant
   *
   * @generated from field: google.fhir.r4.core.Range age = 8;
   */
  age?: Range;

  /**
   * Text based reference range in an observation
   *
   * @generated from field: google.fhir.r4.core.String text = 9;
   */
  text?: String;

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "low", kind: "message", T: SimpleQuantity },
    { no: 5, name: "high", kind: "message", T: SimpleQuantity },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "applies_to", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "age", kind: "message", T: Range },
    { no: 9, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile_ReferenceRange {
    return new USCoreSmokingStatusProfile_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_ReferenceRange {
    return new USCoreSmokingStatusProfile_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_ReferenceRange {
    return new USCoreSmokingStatusProfile_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile_ReferenceRange | PlainMessage<USCoreSmokingStatusProfile_ReferenceRange> | undefined, b: USCoreSmokingStatusProfile_ReferenceRange | PlainMessage<USCoreSmokingStatusProfile_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile_ReferenceRange, a, b);
  }
}

/**
 * Component results
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component
 */
export class USCoreSmokingStatusProfile_Component extends Message<USCoreSmokingStatusProfile_Component> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of component observation (code / type)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component.ValueX value = 5;
   */
  value?: USCoreSmokingStatusProfile_Component_ValueX;

  /**
   * Why the component result is missing
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept data_absent_reason = 6;
   */
  dataAbsentReason?: CodeableConcept;

  /**
   * High, low, normal, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept interpretation = 7;
   */
  interpretation: CodeableConcept[] = [];

  /**
   * Provides guide for interpretation of component result
   *
   * @generated from field: repeated google.fhir.r4.uscore.USCoreSmokingStatusProfile.ReferenceRange reference_range = 8;
   */
  referenceRange: USCoreSmokingStatusProfile_ReferenceRange[] = [];

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: USCoreSmokingStatusProfile_Component_ValueX },
    { no: 6, name: "data_absent_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "interpretation", kind: "message", T: CodeableConcept, repeated: true },
    { no: 8, name: "reference_range", kind: "message", T: USCoreSmokingStatusProfile_ReferenceRange, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile_Component {
    return new USCoreSmokingStatusProfile_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_Component {
    return new USCoreSmokingStatusProfile_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_Component {
    return new USCoreSmokingStatusProfile_Component().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile_Component | PlainMessage<USCoreSmokingStatusProfile_Component> | undefined, b: USCoreSmokingStatusProfile_Component | PlainMessage<USCoreSmokingStatusProfile_Component> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile_Component, a, b);
  }
}

/**
 * Actual component result
 *
 * @generated from message google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component.ValueX
 */
export class USCoreSmokingStatusProfile_Component_ValueX extends Message<USCoreSmokingStatusProfile_Component_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 6;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 7;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 8;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 9;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 10;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 11;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<USCoreSmokingStatusProfile_Component_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.USCoreSmokingStatusProfile.Component.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 6, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 7, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 8, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 9, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 11, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): USCoreSmokingStatusProfile_Component_ValueX {
    return new USCoreSmokingStatusProfile_Component_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_Component_ValueX {
    return new USCoreSmokingStatusProfile_Component_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): USCoreSmokingStatusProfile_Component_ValueX {
    return new USCoreSmokingStatusProfile_Component_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: USCoreSmokingStatusProfile_Component_ValueX | PlainMessage<USCoreSmokingStatusProfile_Component_ValueX> | undefined, b: USCoreSmokingStatusProfile_Component_ValueX | PlainMessage<USCoreSmokingStatusProfile_Component_ValueX> | undefined): boolean {
    return proto3.util.equals(USCoreSmokingStatusProfile_Component_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreCondition.
 * Detailed information about conditions, problems or diagnoses.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-condition
 *
 * @generated from message google.fhir.r4.uscore.UsCoreCondition
 */
export class UsCoreCondition extends Message<UsCoreCondition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this condition
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * active | recurrence | relapse | inactive | remission | resolved
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept clinical_status = 11;
   */
  clinicalStatus?: CodeableConcept;

  /**
   * unconfirmed | provisional | differential | confirmed | refuted |
   * entered-in-error
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept verification_status = 12;
   */
  verificationStatus?: CodeableConcept;

  /**
   * problem-list-item | encounter-diagnosis | health-concern
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 13;
   */
  category: CodeableConcept[] = [];

  /**
   * Subjective severity of condition
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept severity = 14;
   */
  severity?: CodeableConcept;

  /**
   * Identification of the condition, problem or diagnosis
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Anatomical location, if relevant
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept body_site = 16;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * Who has the condition?
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 17;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 18;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.uscore.UsCoreCondition.OnsetX onset = 19;
   */
  onset?: UsCoreCondition_OnsetX;

  /**
   * @generated from field: google.fhir.r4.uscore.UsCoreCondition.AbatementX abatement = 20;
   */
  abatement?: UsCoreCondition_AbatementX;

  /**
   * Date record was first recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded_date = 21;
   */
  recordedDate?: DateTime;

  /**
   * Who recorded the condition
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 22;
   */
  recorder?: Reference;

  /**
   * Person who asserts this condition
   *
   * @generated from field: google.fhir.r4.core.Reference asserter = 23;
   */
  asserter?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.uscore.UsCoreCondition.Stage stage = 24;
   */
  stage: UsCoreCondition_Stage[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.uscore.UsCoreCondition.Evidence evidence = 25;
   */
  evidence: UsCoreCondition_Evidence[] = [];

  /**
   * Additional information about the Condition
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 26;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<UsCoreCondition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.UsCoreCondition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "clinical_status", kind: "message", T: CodeableConcept },
    { no: 12, name: "verification_status", kind: "message", T: CodeableConcept },
    { no: 13, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "severity", kind: "message", T: CodeableConcept },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "subject", kind: "message", T: Reference },
    { no: 18, name: "encounter", kind: "message", T: Reference },
    { no: 19, name: "onset", kind: "message", T: UsCoreCondition_OnsetX },
    { no: 20, name: "abatement", kind: "message", T: UsCoreCondition_AbatementX },
    { no: 21, name: "recorded_date", kind: "message", T: DateTime },
    { no: 22, name: "recorder", kind: "message", T: Reference },
    { no: 23, name: "asserter", kind: "message", T: Reference },
    { no: 24, name: "stage", kind: "message", T: UsCoreCondition_Stage, repeated: true },
    { no: 25, name: "evidence", kind: "message", T: UsCoreCondition_Evidence, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition {
    return new UsCoreCondition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition {
    return new UsCoreCondition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition {
    return new UsCoreCondition().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition | PlainMessage<UsCoreCondition> | undefined, b: UsCoreCondition | PlainMessage<UsCoreCondition> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition, a, b);
  }
}

/**
 * Estimated or actual date,  date-time, or age
 *
 * @generated from message google.fhir.r4.uscore.UsCoreCondition.OnsetX
 */
export class UsCoreCondition_OnsetX extends Message<UsCoreCondition_OnsetX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.UsCoreCondition.OnsetX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreCondition_OnsetX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.UsCoreCondition.OnsetX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_OnsetX {
    return new UsCoreCondition_OnsetX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_OnsetX {
    return new UsCoreCondition_OnsetX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_OnsetX {
    return new UsCoreCondition_OnsetX().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_OnsetX | PlainMessage<UsCoreCondition_OnsetX> | undefined, b: UsCoreCondition_OnsetX | PlainMessage<UsCoreCondition_OnsetX> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_OnsetX, a, b);
  }
}

/**
 * When in resolution/remission
 *
 * @generated from message google.fhir.r4.uscore.UsCoreCondition.AbatementX
 */
export class UsCoreCondition_AbatementX extends Message<UsCoreCondition_AbatementX> {
  /**
   * @generated from oneof google.fhir.r4.uscore.UsCoreCondition.AbatementX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 5 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsCoreCondition_AbatementX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.UsCoreCondition.AbatementX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 5, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_AbatementX {
    return new UsCoreCondition_AbatementX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_AbatementX {
    return new UsCoreCondition_AbatementX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_AbatementX {
    return new UsCoreCondition_AbatementX().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_AbatementX | PlainMessage<UsCoreCondition_AbatementX> | undefined, b: UsCoreCondition_AbatementX | PlainMessage<UsCoreCondition_AbatementX> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_AbatementX, a, b);
  }
}

/**
 * Stage/grade, usually assessed formally
 *
 * @generated from message google.fhir.r4.uscore.UsCoreCondition.Stage
 */
export class UsCoreCondition_Stage extends Message<UsCoreCondition_Stage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Simple summary (disease specific)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept summary = 4;
   */
  summary?: CodeableConcept;

  /**
   * Formal record of assessment
   *
   * @generated from field: repeated google.fhir.r4.core.Reference assessment = 5;
   */
  assessment: Reference[] = [];

  /**
   * Kind of staging
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  constructor(data?: PartialMessage<UsCoreCondition_Stage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.UsCoreCondition.Stage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "summary", kind: "message", T: CodeableConcept },
    { no: 5, name: "assessment", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_Stage {
    return new UsCoreCondition_Stage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_Stage {
    return new UsCoreCondition_Stage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_Stage {
    return new UsCoreCondition_Stage().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_Stage | PlainMessage<UsCoreCondition_Stage> | undefined, b: UsCoreCondition_Stage | PlainMessage<UsCoreCondition_Stage> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_Stage, a, b);
  }
}

/**
 * Supporting evidence
 *
 * @generated from message google.fhir.r4.uscore.UsCoreCondition.Evidence
 */
export class UsCoreCondition_Evidence extends Message<UsCoreCondition_Evidence> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Manifestation/symptom
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 4;
   */
  code: CodeableConcept[] = [];

  /**
   * Supporting information found elsewhere
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detail = 5;
   */
  detail: Reference[] = [];

  constructor(data?: PartialMessage<UsCoreCondition_Evidence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.UsCoreCondition.Evidence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "detail", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreCondition_Evidence {
    return new UsCoreCondition_Evidence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreCondition_Evidence {
    return new UsCoreCondition_Evidence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreCondition_Evidence {
    return new UsCoreCondition_Evidence().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreCondition_Evidence | PlainMessage<UsCoreCondition_Evidence> | undefined, b: UsCoreCondition_Evidence | PlainMessage<UsCoreCondition_Evidence> | undefined): boolean {
    return proto3.util.equals(UsCoreCondition_Evidence, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for USCoreDirectEmailExtension.
 * Email is a "direct" email.
 * See http://hl7.org/fhir/us/core/StructureDefinition/us-core-direct
 *
 * @generated from message google.fhir.r4.uscore.UsCoreDirectEmail
 */
export class UsCoreDirectEmail extends Message<UsCoreDirectEmail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<UsCoreDirectEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.uscore.UsCoreDirectEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsCoreDirectEmail {
    return new UsCoreDirectEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsCoreDirectEmail {
    return new UsCoreDirectEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsCoreDirectEmail {
    return new UsCoreDirectEmail().fromJsonString(jsonString, options);
  }

  static equals(a: UsCoreDirectEmail | PlainMessage<UsCoreDirectEmail> | undefined, b: UsCoreDirectEmail | PlainMessage<UsCoreDirectEmail> | undefined): boolean {
    return proto3.util.equals(UsCoreDirectEmail, a, b);
  }
}

