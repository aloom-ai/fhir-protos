//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/extensions.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Attachment, Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, Date, DateTime, Decimal, Distance, Duration, Expression, Extension, Id, Identifier, Instant, Integer, Markdown, Period, PositiveInt, Quantity, Range, Reference, RelatedArtifact, Signature, String, Time, Timing, Uri, Url } from "./datatypes_pb.js";
import { EntityNamePartQualifierValueSet_Value, HumanNameAssemblyOrderValueSet_Value, NameRepresentationUseValueSet_Value, PostalAddressUseValueSet_Value, ProbabilityDistributionTypeValueSet_Value, TemplateStatusCodeValueSet_Value } from "./valuesets_pb.js";
import { ActionRelationshipTypeCode_Value, ChoiceListOrientationCode_Value, ConceptMapEquivalenceCode_Value, ConformanceExpectationCode_Value, ConstraintSeverityCode_Value, DataAbsentReasonCode_Value, DataTypeCode_Value, ExpansionParameterSourceCode_Value, ExpansionProcessingRuleCode_Value, FHIRVersionCode_Value, GoalAcceptanceStatusCode_Value, HL7WorkgroupCode_Value, ImplantStatusCode_Value, MatchGradeCode_Value, MessageheaderResponseRequestCode_Value, QuestionnaireItemUsageModeCode_Value, ResourceSecurityCategoryCode_Value, ResourceTypeCode_Value, SmartCapabilitiesCode_Value, StandardsStatusCode_Value, V3EntityNameUseR2Code_Value, V3NullFlavorCode_Value } from "./codes_pb.js";

/**
 * Auto-generated from StructureDefinition for AD-use.
 * BAD | CONF | HP | HV | DIR | PUB | PHYS | PST.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-AD-use
 *
 * @generated from message google.fhir.r4.core.AddressADUse
 */
export class AddressADUse extends Message<AddressADUse> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.AddressADUse.ValueCode value_code = 3;
   */
  valueCode?: AddressADUse_ValueCode;

  constructor(data?: PartialMessage<AddressADUse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADUse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: AddressADUse_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADUse {
    return new AddressADUse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADUse {
    return new AddressADUse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADUse {
    return new AddressADUse().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADUse | PlainMessage<AddressADUse> | undefined, b: AddressADUse | PlainMessage<AddressADUse> | undefined): boolean {
    return proto3.util.equals(AddressADUse, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.AddressADUse.ValueCode
 */
export class AddressADUse_ValueCode extends Message<AddressADUse_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.PostalAddressUseValueSet.Value value = 1;
   */
  value = PostalAddressUseValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AddressADUse_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADUse.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PostalAddressUseValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADUse_ValueCode {
    return new AddressADUse_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADUse_ValueCode {
    return new AddressADUse_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADUse_ValueCode {
    return new AddressADUse_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADUse_ValueCode | PlainMessage<AddressADUse_ValueCode> | undefined, b: AddressADUse_ValueCode | PlainMessage<AddressADUse_ValueCode> | undefined): boolean {
    return proto3.util.equals(AddressADUse_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-additionalLocator.
 * additionalLocator.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-additionalLocator
 *
 * @generated from message google.fhir.r4.core.AddressADXPAdditionalLocator
 */
export class AddressADXPAdditionalLocator extends Message<AddressADXPAdditionalLocator> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPAdditionalLocator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPAdditionalLocator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPAdditionalLocator {
    return new AddressADXPAdditionalLocator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPAdditionalLocator {
    return new AddressADXPAdditionalLocator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPAdditionalLocator {
    return new AddressADXPAdditionalLocator().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPAdditionalLocator | PlainMessage<AddressADXPAdditionalLocator> | undefined, b: AddressADXPAdditionalLocator | PlainMessage<AddressADXPAdditionalLocator> | undefined): boolean {
    return proto3.util.equals(AddressADXPAdditionalLocator, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-buildingNumberSuffix.
 * buildingNumberSuffix.
 * See
 * http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-buildingNumberSuffix
 *
 * @generated from message google.fhir.r4.core.AddressADXPBuildingNumberSuffix
 */
export class AddressADXPBuildingNumberSuffix extends Message<AddressADXPBuildingNumberSuffix> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPBuildingNumberSuffix>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPBuildingNumberSuffix";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPBuildingNumberSuffix {
    return new AddressADXPBuildingNumberSuffix().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPBuildingNumberSuffix {
    return new AddressADXPBuildingNumberSuffix().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPBuildingNumberSuffix {
    return new AddressADXPBuildingNumberSuffix().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPBuildingNumberSuffix | PlainMessage<AddressADXPBuildingNumberSuffix> | undefined, b: AddressADXPBuildingNumberSuffix | PlainMessage<AddressADXPBuildingNumberSuffix> | undefined): boolean {
    return proto3.util.equals(AddressADXPBuildingNumberSuffix, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-careOf.
 * careOf.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-careOf
 *
 * @generated from message google.fhir.r4.core.AddressADXPCareOf
 */
export class AddressADXPCareOf extends Message<AddressADXPCareOf> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPCareOf>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPCareOf";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPCareOf {
    return new AddressADXPCareOf().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPCareOf {
    return new AddressADXPCareOf().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPCareOf {
    return new AddressADXPCareOf().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPCareOf | PlainMessage<AddressADXPCareOf> | undefined, b: AddressADXPCareOf | PlainMessage<AddressADXPCareOf> | undefined): boolean {
    return proto3.util.equals(AddressADXPCareOf, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-censusTract.
 * censusTract.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-censusTract
 *
 * @generated from message google.fhir.r4.core.AddressADXPCensusTract
 */
export class AddressADXPCensusTract extends Message<AddressADXPCensusTract> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPCensusTract>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPCensusTract";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPCensusTract {
    return new AddressADXPCensusTract().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPCensusTract {
    return new AddressADXPCensusTract().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPCensusTract {
    return new AddressADXPCensusTract().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPCensusTract | PlainMessage<AddressADXPCensusTract> | undefined, b: AddressADXPCensusTract | PlainMessage<AddressADXPCensusTract> | undefined): boolean {
    return proto3.util.equals(AddressADXPCensusTract, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-delimiter.
 * delimiter.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-delimiter
 *
 * @generated from message google.fhir.r4.core.AddressADXPDelimiter
 */
export class AddressADXPDelimiter extends Message<AddressADXPDelimiter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDelimiter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDelimiter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDelimiter {
    return new AddressADXPDelimiter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDelimiter {
    return new AddressADXPDelimiter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDelimiter {
    return new AddressADXPDelimiter().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDelimiter | PlainMessage<AddressADXPDelimiter> | undefined, b: AddressADXPDelimiter | PlainMessage<AddressADXPDelimiter> | undefined): boolean {
    return proto3.util.equals(AddressADXPDelimiter, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-deliveryAddressLine.
 * deliveryAddressLine.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryAddressLine
 *
 * @generated from message google.fhir.r4.core.AddressADXPDeliveryAddressLine
 */
export class AddressADXPDeliveryAddressLine extends Message<AddressADXPDeliveryAddressLine> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDeliveryAddressLine>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDeliveryAddressLine";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDeliveryAddressLine {
    return new AddressADXPDeliveryAddressLine().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDeliveryAddressLine {
    return new AddressADXPDeliveryAddressLine().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDeliveryAddressLine {
    return new AddressADXPDeliveryAddressLine().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDeliveryAddressLine | PlainMessage<AddressADXPDeliveryAddressLine> | undefined, b: AddressADXPDeliveryAddressLine | PlainMessage<AddressADXPDeliveryAddressLine> | undefined): boolean {
    return proto3.util.equals(AddressADXPDeliveryAddressLine, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-deliveryInstallationArea.
 * deliveryInstallationArea.
 * See
 * http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationArea
 *
 * @generated from message google.fhir.r4.core.AddressADXPDeliveryInstallationArea
 */
export class AddressADXPDeliveryInstallationArea extends Message<AddressADXPDeliveryInstallationArea> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDeliveryInstallationArea>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDeliveryInstallationArea";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDeliveryInstallationArea {
    return new AddressADXPDeliveryInstallationArea().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDeliveryInstallationArea {
    return new AddressADXPDeliveryInstallationArea().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDeliveryInstallationArea {
    return new AddressADXPDeliveryInstallationArea().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDeliveryInstallationArea | PlainMessage<AddressADXPDeliveryInstallationArea> | undefined, b: AddressADXPDeliveryInstallationArea | PlainMessage<AddressADXPDeliveryInstallationArea> | undefined): boolean {
    return proto3.util.equals(AddressADXPDeliveryInstallationArea, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for
 * ADXP-deliveryInstallationQualifier. deliveryInstallationQualifier. See
 * http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationQualifier
 *
 * @generated from message google.fhir.r4.core.AddressADXPDeliveryInstallationQualifier
 */
export class AddressADXPDeliveryInstallationQualifier extends Message<AddressADXPDeliveryInstallationQualifier> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDeliveryInstallationQualifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDeliveryInstallationQualifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDeliveryInstallationQualifier {
    return new AddressADXPDeliveryInstallationQualifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDeliveryInstallationQualifier {
    return new AddressADXPDeliveryInstallationQualifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDeliveryInstallationQualifier {
    return new AddressADXPDeliveryInstallationQualifier().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDeliveryInstallationQualifier | PlainMessage<AddressADXPDeliveryInstallationQualifier> | undefined, b: AddressADXPDeliveryInstallationQualifier | PlainMessage<AddressADXPDeliveryInstallationQualifier> | undefined): boolean {
    return proto3.util.equals(AddressADXPDeliveryInstallationQualifier, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-deliveryInstallationType.
 * deliveryInstallationType.
 * See
 * http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryInstallationType
 *
 * @generated from message google.fhir.r4.core.AddressADXPDeliveryInstallationType
 */
export class AddressADXPDeliveryInstallationType extends Message<AddressADXPDeliveryInstallationType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDeliveryInstallationType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDeliveryInstallationType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDeliveryInstallationType {
    return new AddressADXPDeliveryInstallationType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDeliveryInstallationType {
    return new AddressADXPDeliveryInstallationType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDeliveryInstallationType {
    return new AddressADXPDeliveryInstallationType().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDeliveryInstallationType | PlainMessage<AddressADXPDeliveryInstallationType> | undefined, b: AddressADXPDeliveryInstallationType | PlainMessage<AddressADXPDeliveryInstallationType> | undefined): boolean {
    return proto3.util.equals(AddressADXPDeliveryInstallationType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-deliveryMode.
 * deliveryMode.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryMode
 *
 * @generated from message google.fhir.r4.core.AddressADXPDeliveryMode
 */
export class AddressADXPDeliveryMode extends Message<AddressADXPDeliveryMode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDeliveryMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDeliveryMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDeliveryMode {
    return new AddressADXPDeliveryMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDeliveryMode {
    return new AddressADXPDeliveryMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDeliveryMode {
    return new AddressADXPDeliveryMode().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDeliveryMode | PlainMessage<AddressADXPDeliveryMode> | undefined, b: AddressADXPDeliveryMode | PlainMessage<AddressADXPDeliveryMode> | undefined): boolean {
    return proto3.util.equals(AddressADXPDeliveryMode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-deliveryModeIdentifier.
 * deliveryModeIdentifier.
 * See
 * http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-deliveryModeIdentifier
 *
 * @generated from message google.fhir.r4.core.AddressADXPDeliveryModeIdentifier
 */
export class AddressADXPDeliveryModeIdentifier extends Message<AddressADXPDeliveryModeIdentifier> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDeliveryModeIdentifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDeliveryModeIdentifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDeliveryModeIdentifier {
    return new AddressADXPDeliveryModeIdentifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDeliveryModeIdentifier {
    return new AddressADXPDeliveryModeIdentifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDeliveryModeIdentifier {
    return new AddressADXPDeliveryModeIdentifier().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDeliveryModeIdentifier | PlainMessage<AddressADXPDeliveryModeIdentifier> | undefined, b: AddressADXPDeliveryModeIdentifier | PlainMessage<AddressADXPDeliveryModeIdentifier> | undefined): boolean {
    return proto3.util.equals(AddressADXPDeliveryModeIdentifier, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-direction.
 * direction.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-direction
 *
 * @generated from message google.fhir.r4.core.AddressADXPDirection
 */
export class AddressADXPDirection extends Message<AddressADXPDirection> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPDirection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPDirection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPDirection {
    return new AddressADXPDirection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPDirection {
    return new AddressADXPDirection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPDirection {
    return new AddressADXPDirection().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPDirection | PlainMessage<AddressADXPDirection> | undefined, b: AddressADXPDirection | PlainMessage<AddressADXPDirection> | undefined): boolean {
    return proto3.util.equals(AddressADXPDirection, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-houseNumber.
 * houseNumber.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumber
 *
 * @generated from message google.fhir.r4.core.AddressADXPHouseNumber
 */
export class AddressADXPHouseNumber extends Message<AddressADXPHouseNumber> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPHouseNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPHouseNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPHouseNumber {
    return new AddressADXPHouseNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPHouseNumber {
    return new AddressADXPHouseNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPHouseNumber {
    return new AddressADXPHouseNumber().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPHouseNumber | PlainMessage<AddressADXPHouseNumber> | undefined, b: AddressADXPHouseNumber | PlainMessage<AddressADXPHouseNumber> | undefined): boolean {
    return proto3.util.equals(AddressADXPHouseNumber, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-houseNumberNumeric.
 * houseNumberNumeric.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumberNumeric
 *
 * @generated from message google.fhir.r4.core.AddressADXPHouseNumberNumeric
 */
export class AddressADXPHouseNumberNumeric extends Message<AddressADXPHouseNumberNumeric> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPHouseNumberNumeric>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPHouseNumberNumeric";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPHouseNumberNumeric {
    return new AddressADXPHouseNumberNumeric().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPHouseNumberNumeric {
    return new AddressADXPHouseNumberNumeric().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPHouseNumberNumeric {
    return new AddressADXPHouseNumberNumeric().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPHouseNumberNumeric | PlainMessage<AddressADXPHouseNumberNumeric> | undefined, b: AddressADXPHouseNumberNumeric | PlainMessage<AddressADXPHouseNumberNumeric> | undefined): boolean {
    return proto3.util.equals(AddressADXPHouseNumberNumeric, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-postBox.
 * postBox.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-postBox
 *
 * @generated from message google.fhir.r4.core.AddressADXPPostBox
 */
export class AddressADXPPostBox extends Message<AddressADXPPostBox> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPPostBox>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPPostBox";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPPostBox {
    return new AddressADXPPostBox().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPPostBox {
    return new AddressADXPPostBox().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPPostBox {
    return new AddressADXPPostBox().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPPostBox | PlainMessage<AddressADXPPostBox> | undefined, b: AddressADXPPostBox | PlainMessage<AddressADXPPostBox> | undefined): boolean {
    return proto3.util.equals(AddressADXPPostBox, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-precinct.
 * precinct.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-precinct
 *
 * @generated from message google.fhir.r4.core.AddressADXPPrecinct
 */
export class AddressADXPPrecinct extends Message<AddressADXPPrecinct> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPPrecinct>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPPrecinct";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPPrecinct {
    return new AddressADXPPrecinct().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPPrecinct {
    return new AddressADXPPrecinct().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPPrecinct {
    return new AddressADXPPrecinct().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPPrecinct | PlainMessage<AddressADXPPrecinct> | undefined, b: AddressADXPPrecinct | PlainMessage<AddressADXPPrecinct> | undefined): boolean {
    return proto3.util.equals(AddressADXPPrecinct, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-streetAddressLine.
 * streetAddressLine.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetAddressLine
 *
 * @generated from message google.fhir.r4.core.AddressADXPStreetAddressLine
 */
export class AddressADXPStreetAddressLine extends Message<AddressADXPStreetAddressLine> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPStreetAddressLine>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPStreetAddressLine";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPStreetAddressLine {
    return new AddressADXPStreetAddressLine().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPStreetAddressLine {
    return new AddressADXPStreetAddressLine().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPStreetAddressLine {
    return new AddressADXPStreetAddressLine().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPStreetAddressLine | PlainMessage<AddressADXPStreetAddressLine> | undefined, b: AddressADXPStreetAddressLine | PlainMessage<AddressADXPStreetAddressLine> | undefined): boolean {
    return proto3.util.equals(AddressADXPStreetAddressLine, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-streetName.
 * streetName.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetName
 *
 * @generated from message google.fhir.r4.core.AddressADXPStreetName
 */
export class AddressADXPStreetName extends Message<AddressADXPStreetName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPStreetName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPStreetName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPStreetName {
    return new AddressADXPStreetName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPStreetName {
    return new AddressADXPStreetName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPStreetName {
    return new AddressADXPStreetName().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPStreetName | PlainMessage<AddressADXPStreetName> | undefined, b: AddressADXPStreetName | PlainMessage<AddressADXPStreetName> | undefined): boolean {
    return proto3.util.equals(AddressADXPStreetName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-streetNameBase.
 * streetNameBase.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetNameBase
 *
 * @generated from message google.fhir.r4.core.AddressADXPStreetNameBase
 */
export class AddressADXPStreetNameBase extends Message<AddressADXPStreetNameBase> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPStreetNameBase>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPStreetNameBase";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPStreetNameBase {
    return new AddressADXPStreetNameBase().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPStreetNameBase {
    return new AddressADXPStreetNameBase().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPStreetNameBase {
    return new AddressADXPStreetNameBase().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPStreetNameBase | PlainMessage<AddressADXPStreetNameBase> | undefined, b: AddressADXPStreetNameBase | PlainMessage<AddressADXPStreetNameBase> | undefined): boolean {
    return proto3.util.equals(AddressADXPStreetNameBase, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-streetNameType.
 * streetNameType.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetNameType
 *
 * @generated from message google.fhir.r4.core.AddressADXPStreetNameType
 */
export class AddressADXPStreetNameType extends Message<AddressADXPStreetNameType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPStreetNameType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPStreetNameType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPStreetNameType {
    return new AddressADXPStreetNameType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPStreetNameType {
    return new AddressADXPStreetNameType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPStreetNameType {
    return new AddressADXPStreetNameType().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPStreetNameType | PlainMessage<AddressADXPStreetNameType> | undefined, b: AddressADXPStreetNameType | PlainMessage<AddressADXPStreetNameType> | undefined): boolean {
    return proto3.util.equals(AddressADXPStreetNameType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-unitID.
 * unitID.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID
 *
 * @generated from message google.fhir.r4.core.AddressADXPUnitID
 */
export class AddressADXPUnitID extends Message<AddressADXPUnitID> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPUnitID>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPUnitID";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPUnitID {
    return new AddressADXPUnitID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPUnitID {
    return new AddressADXPUnitID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPUnitID {
    return new AddressADXPUnitID().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPUnitID | PlainMessage<AddressADXPUnitID> | undefined, b: AddressADXPUnitID | PlainMessage<AddressADXPUnitID> | undefined): boolean {
    return proto3.util.equals(AddressADXPUnitID, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ADXP-unitType.
 * unitType.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitType
 *
 * @generated from message google.fhir.r4.core.AddressADXPUnitType
 */
export class AddressADXPUnitType extends Message<AddressADXPUnitType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AddressADXPUnitType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressADXPUnitType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressADXPUnitType {
    return new AddressADXPUnitType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressADXPUnitType {
    return new AddressADXPUnitType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressADXPUnitType {
    return new AddressADXPUnitType().fromJsonString(jsonString, options);
  }

  static equals(a: AddressADXPUnitType | PlainMessage<AddressADXPUnitType> | undefined, b: AddressADXPUnitType | PlainMessage<AddressADXPUnitType> | undefined): boolean {
    return proto3.util.equals(AddressADXPUnitType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Geolocation.
 * The absolute geographic location.
 * See http://hl7.org/fhir/StructureDefinition/geolocation
 *
 * @generated from message google.fhir.r4.core.AddressGeolocation
 */
export class AddressGeolocation extends Message<AddressGeolocation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Latitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal latitude = 4;
   */
  latitude?: Decimal;

  /**
   * Longitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal longitude = 5;
   */
  longitude?: Decimal;

  constructor(data?: PartialMessage<AddressGeolocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressGeolocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "latitude", kind: "message", T: Decimal },
    { no: 5, name: "longitude", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressGeolocation {
    return new AddressGeolocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressGeolocation {
    return new AddressGeolocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressGeolocation {
    return new AddressGeolocation().fromJsonString(jsonString, options);
  }

  static equals(a: AddressGeolocation | PlainMessage<AddressGeolocation> | undefined, b: AddressGeolocation | PlainMessage<AddressGeolocation> | undefined): boolean {
    return proto3.util.equals(AddressGeolocation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for administration.
 * Actual medication record, if known.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-administration
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceAdministration
 */
export class AllergyIntoleranceAdministration extends Message<AllergyIntoleranceAdministration> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<AllergyIntoleranceAdministration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceAdministration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceAdministration {
    return new AllergyIntoleranceAdministration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceAdministration {
    return new AllergyIntoleranceAdministration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceAdministration {
    return new AllergyIntoleranceAdministration().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceAdministration | PlainMessage<AllergyIntoleranceAdministration> | undefined, b: AllergyIntoleranceAdministration | PlainMessage<AllergyIntoleranceAdministration> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceAdministration, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for assertedDate.
 * Date the allergy or intolerance was first asserted.
 * See http://hl7.org/fhir/StructureDefinition/allergyintolerance-assertedDate
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceAssertedDate
 */
export class AllergyIntoleranceAssertedDate extends Message<AllergyIntoleranceAssertedDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<AllergyIntoleranceAssertedDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceAssertedDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceAssertedDate {
    return new AllergyIntoleranceAssertedDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceAssertedDate {
    return new AllergyIntoleranceAssertedDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceAssertedDate {
    return new AllergyIntoleranceAssertedDate().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceAssertedDate | PlainMessage<AllergyIntoleranceAssertedDate> | undefined, b: AllergyIntoleranceAssertedDate | PlainMessage<AllergyIntoleranceAssertedDate> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceAssertedDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for careplan.
 * Clinical Management Details.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-careplan
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceCareplan
 */
export class AllergyIntoleranceCareplan extends Message<AllergyIntoleranceCareplan> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<AllergyIntoleranceCareplan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceCareplan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCareplan {
    return new AllergyIntoleranceCareplan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCareplan {
    return new AllergyIntoleranceCareplan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCareplan {
    return new AllergyIntoleranceCareplan().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCareplan | PlainMessage<AllergyIntoleranceCareplan> | undefined, b: AllergyIntoleranceCareplan | PlainMessage<AllergyIntoleranceCareplan> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCareplan, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for certainty.
 * Certainty that the substance was the cause of the manifestation.
 * See http://hl7.org/fhir/StructureDefinition/allergyintolerance-certainty
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceCertainty
 */
export class AllergyIntoleranceCertainty extends Message<AllergyIntoleranceCertainty> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<AllergyIntoleranceCertainty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceCertainty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCertainty {
    return new AllergyIntoleranceCertainty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCertainty {
    return new AllergyIntoleranceCertainty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCertainty {
    return new AllergyIntoleranceCertainty().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCertainty | PlainMessage<AllergyIntoleranceCertainty> | undefined, b: AllergyIntoleranceCertainty | PlainMessage<AllergyIntoleranceCertainty> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCertainty, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for duration.
 * How long Manifestations persisted.
 * See http://hl7.org/fhir/StructureDefinition/allergyintolerance-duration
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceDuration
 */
export class AllergyIntoleranceDuration extends Message<AllergyIntoleranceDuration> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Duration value_duration = 3;
   */
  valueDuration?: Duration;

  constructor(data?: PartialMessage<AllergyIntoleranceDuration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceDuration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_duration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceDuration {
    return new AllergyIntoleranceDuration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceDuration {
    return new AllergyIntoleranceDuration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceDuration {
    return new AllergyIntoleranceDuration().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceDuration | PlainMessage<AllergyIntoleranceDuration> | undefined, b: AllergyIntoleranceDuration | PlainMessage<AllergyIntoleranceDuration> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceDuration, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for exposureDate.
 * Date(/time) of first exposure to Substance.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-exposureDate
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceExposureDate
 */
export class AllergyIntoleranceExposureDate extends Message<AllergyIntoleranceExposureDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<AllergyIntoleranceExposureDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceExposureDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceExposureDate {
    return new AllergyIntoleranceExposureDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceExposureDate {
    return new AllergyIntoleranceExposureDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceExposureDate {
    return new AllergyIntoleranceExposureDate().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceExposureDate | PlainMessage<AllergyIntoleranceExposureDate> | undefined, b: AllergyIntoleranceExposureDate | PlainMessage<AllergyIntoleranceExposureDate> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceExposureDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for exposureDescription.
 * Text description about exposure to the Substance.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-exposureDescription
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceExposureDescription
 */
export class AllergyIntoleranceExposureDescription extends Message<AllergyIntoleranceExposureDescription> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AllergyIntoleranceExposureDescription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceExposureDescription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceExposureDescription {
    return new AllergyIntoleranceExposureDescription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceExposureDescription {
    return new AllergyIntoleranceExposureDescription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceExposureDescription {
    return new AllergyIntoleranceExposureDescription().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceExposureDescription | PlainMessage<AllergyIntoleranceExposureDescription> | undefined, b: AllergyIntoleranceExposureDescription | PlainMessage<AllergyIntoleranceExposureDescription> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceExposureDescription, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for exposureDuration.
 * Amount of time individual was exposed to Substance.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-exposureDuration
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceExposureDuration
 */
export class AllergyIntoleranceExposureDuration extends Message<AllergyIntoleranceExposureDuration> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Duration value_duration = 3;
   */
  valueDuration?: Duration;

  constructor(data?: PartialMessage<AllergyIntoleranceExposureDuration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceExposureDuration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_duration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceExposureDuration {
    return new AllergyIntoleranceExposureDuration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceExposureDuration {
    return new AllergyIntoleranceExposureDuration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceExposureDuration {
    return new AllergyIntoleranceExposureDuration().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceExposureDuration | PlainMessage<AllergyIntoleranceExposureDuration> | undefined, b: AllergyIntoleranceExposureDuration | PlainMessage<AllergyIntoleranceExposureDuration> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceExposureDuration, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for location.
 * Body site of manifestations.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-location
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceLocation
 */
export class AllergyIntoleranceLocation extends Message<AllergyIntoleranceLocation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<AllergyIntoleranceLocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceLocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceLocation {
    return new AllergyIntoleranceLocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceLocation {
    return new AllergyIntoleranceLocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceLocation {
    return new AllergyIntoleranceLocation().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceLocation | PlainMessage<AllergyIntoleranceLocation> | undefined, b: AllergyIntoleranceLocation | PlainMessage<AllergyIntoleranceLocation> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceLocation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for management.
 * Clinical Management Description.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-management
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceManagement
 */
export class AllergyIntoleranceManagement extends Message<AllergyIntoleranceManagement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AllergyIntoleranceManagement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceManagement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceManagement {
    return new AllergyIntoleranceManagement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceManagement {
    return new AllergyIntoleranceManagement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceManagement {
    return new AllergyIntoleranceManagement().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceManagement | PlainMessage<AllergyIntoleranceManagement> | undefined, b: AllergyIntoleranceManagement | PlainMessage<AllergyIntoleranceManagement> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceManagement, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reasonRefuted.
 * Explanation associated with refuted status.
 * See http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceReasonRefuted
 */
export class AllergyIntoleranceReasonRefuted extends Message<AllergyIntoleranceReasonRefuted> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<AllergyIntoleranceReasonRefuted>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceReasonRefuted";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceReasonRefuted {
    return new AllergyIntoleranceReasonRefuted().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceReasonRefuted {
    return new AllergyIntoleranceReasonRefuted().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceReasonRefuted {
    return new AllergyIntoleranceReasonRefuted().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceReasonRefuted | PlainMessage<AllergyIntoleranceReasonRefuted> | undefined, b: AllergyIntoleranceReasonRefuted | PlainMessage<AllergyIntoleranceReasonRefuted> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceReasonRefuted, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for resolutionAge.
 * Age that the allergy or intolerance resolved.
 * See http://hl7.org/fhir/StructureDefinition/allergyintolerance-resolutionAge
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceResolutionAge
 */
export class AllergyIntoleranceResolutionAge extends Message<AllergyIntoleranceResolutionAge> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Age value_age = 3;
   */
  valueAge?: Age;

  constructor(data?: PartialMessage<AllergyIntoleranceResolutionAge>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceResolutionAge";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_age", kind: "message", T: Age },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceResolutionAge {
    return new AllergyIntoleranceResolutionAge().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceResolutionAge {
    return new AllergyIntoleranceResolutionAge().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceResolutionAge {
    return new AllergyIntoleranceResolutionAge().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceResolutionAge | PlainMessage<AllergyIntoleranceResolutionAge> | undefined, b: AllergyIntoleranceResolutionAge | PlainMessage<AllergyIntoleranceResolutionAge> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceResolutionAge, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for substanceExposureRisk.
 * Exposure risk of adverse reaction (allergy or intolerance) to the specified
 * substance/product. See
 * http://hl7.org/fhir/StructureDefinition/allergyintolerance-substanceExposureRisk
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceSubstanceExposureRisk
 */
export class AllergyIntoleranceSubstanceExposureRisk extends Message<AllergyIntoleranceSubstanceExposureRisk> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Substance (or pharmaceutical product)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept substance = 4;
   */
  substance?: CodeableConcept;

  /**
   * known-reaction-risk | no-known-reaction-risk
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept exposure_risk = 5;
   */
  exposureRisk?: CodeableConcept;

  constructor(data?: PartialMessage<AllergyIntoleranceSubstanceExposureRisk>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceSubstanceExposureRisk";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "substance", kind: "message", T: CodeableConcept },
    { no: 5, name: "exposure_risk", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceSubstanceExposureRisk {
    return new AllergyIntoleranceSubstanceExposureRisk().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceSubstanceExposureRisk {
    return new AllergyIntoleranceSubstanceExposureRisk().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceSubstanceExposureRisk {
    return new AllergyIntoleranceSubstanceExposureRisk().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceSubstanceExposureRisk | PlainMessage<AllergyIntoleranceSubstanceExposureRisk> | undefined, b: AllergyIntoleranceSubstanceExposureRisk | PlainMessage<AllergyIntoleranceSubstanceExposureRisk> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceSubstanceExposureRisk, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for test.
 * Observations that confirm or refute.
 * See http://hl7.org/fhir/StructureDefinition/openEHR-test
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceTest
 */
export class AllergyIntoleranceTest extends Message<AllergyIntoleranceTest> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<AllergyIntoleranceTest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceTest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceTest {
    return new AllergyIntoleranceTest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceTest {
    return new AllergyIntoleranceTest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceTest {
    return new AllergyIntoleranceTest().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceTest | PlainMessage<AllergyIntoleranceTest> | undefined, b: AllergyIntoleranceTest | PlainMessage<AllergyIntoleranceTest> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceTest, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for animalSpecies.
 * The Species of the Service Animal.
 * See http://hl7.org/fhir/StructureDefinition/practitioner-animalSpecies
 *
 * @generated from message google.fhir.r4.core.AnimalSpecies
 */
export class AnimalSpecies extends Message<AnimalSpecies> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<AnimalSpecies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AnimalSpecies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnimalSpecies {
    return new AnimalSpecies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnimalSpecies {
    return new AnimalSpecies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnimalSpecies {
    return new AnimalSpecies().fromJsonString(jsonString, options);
  }

  static equals(a: AnimalSpecies | PlainMessage<AnimalSpecies> | undefined, b: AnimalSpecies | PlainMessage<AnimalSpecies> | undefined): boolean {
    return proto3.util.equals(AnimalSpecies, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for approachBodyStructure.
 * The access point or points used for this procedure.
 * See http://hl7.org/fhir/StructureDefinition/procedure-approachBodyStructure
 *
 * @generated from message google.fhir.r4.core.ApproachBodyStructure
 */
export class ApproachBodyStructure extends Message<ApproachBodyStructure> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ApproachBodyStructure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ApproachBodyStructure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApproachBodyStructure {
    return new ApproachBodyStructure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApproachBodyStructure {
    return new ApproachBodyStructure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApproachBodyStructure {
    return new ApproachBodyStructure().fromJsonString(jsonString, options);
  }

  static equals(a: ApproachBodyStructure | PlainMessage<ApproachBodyStructure> | undefined, b: ApproachBodyStructure | PlainMessage<ApproachBodyStructure> | undefined): boolean {
    return proto3.util.equals(ApproachBodyStructure, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for approvalDate.
 * When resource approved by publisher.
 * See http://hl7.org/fhir/StructureDefinition/resource-approvalDate
 *
 * @generated from message google.fhir.r4.core.ApprovalDate
 */
export class ApprovalDate extends Message<ApprovalDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Date value_date = 3;
   */
  valueDate?: Date;

  constructor(data?: PartialMessage<ApprovalDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ApprovalDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApprovalDate {
    return new ApprovalDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApprovalDate {
    return new ApprovalDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApprovalDate {
    return new ApprovalDate().fromJsonString(jsonString, options);
  }

  static equals(a: ApprovalDate | PlainMessage<ApprovalDate> | undefined, b: ApprovalDate | PlainMessage<ApprovalDate> | undefined): boolean {
    return proto3.util.equals(ApprovalDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for citation.
 * Bibliographic citation for the resource.
 * See http://hl7.org/fhir/StructureDefinition/cqf-citation
 *
 * @generated from message google.fhir.r4.core.AttachmentCitation
 */
export class AttachmentCitation extends Message<AttachmentCitation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<AttachmentCitation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AttachmentCitation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttachmentCitation {
    return new AttachmentCitation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttachmentCitation {
    return new AttachmentCitation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttachmentCitation {
    return new AttachmentCitation().fromJsonString(jsonString, options);
  }

  static equals(a: AttachmentCitation | PlainMessage<AttachmentCitation> | undefined, b: AttachmentCitation | PlainMessage<AttachmentCitation> | undefined): boolean {
    return proto3.util.equals(AttachmentCitation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for qualityOfEvidence.
 * The quality of the evidence.
 * See http://hl7.org/fhir/StructureDefinition/cqf-qualityOfEvidence
 *
 * @generated from message google.fhir.r4.core.AttachmentQualityOfEvidence
 */
export class AttachmentQualityOfEvidence extends Message<AttachmentQualityOfEvidence> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<AttachmentQualityOfEvidence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AttachmentQualityOfEvidence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttachmentQualityOfEvidence {
    return new AttachmentQualityOfEvidence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttachmentQualityOfEvidence {
    return new AttachmentQualityOfEvidence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttachmentQualityOfEvidence {
    return new AttachmentQualityOfEvidence().fromJsonString(jsonString, options);
  }

  static equals(a: AttachmentQualityOfEvidence | PlainMessage<AttachmentQualityOfEvidence> | undefined, b: AttachmentQualityOfEvidence | PlainMessage<AttachmentQualityOfEvidence> | undefined): boolean {
    return proto3.util.equals(AttachmentQualityOfEvidence, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for strengthOfRecommendation.
 * The strength of the recommendation.
 * See http://hl7.org/fhir/StructureDefinition/cqf-strengthOfRecommendation
 *
 * @generated from message google.fhir.r4.core.AttachmentStrengthOfRecommendation
 */
export class AttachmentStrengthOfRecommendation extends Message<AttachmentStrengthOfRecommendation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<AttachmentStrengthOfRecommendation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AttachmentStrengthOfRecommendation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttachmentStrengthOfRecommendation {
    return new AttachmentStrengthOfRecommendation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttachmentStrengthOfRecommendation {
    return new AttachmentStrengthOfRecommendation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttachmentStrengthOfRecommendation {
    return new AttachmentStrengthOfRecommendation().fromJsonString(jsonString, options);
  }

  static equals(a: AttachmentStrengthOfRecommendation | PlainMessage<AttachmentStrengthOfRecommendation> | undefined, b: AttachmentStrengthOfRecommendation | PlainMessage<AttachmentStrengthOfRecommendation> | undefined): boolean {
    return proto3.util.equals(AttachmentStrengthOfRecommendation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Accession.
 * Accession Number.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-Accession
 *
 * @generated from message google.fhir.r4.core.AuditEventAccession
 */
export class AuditEventAccession extends Message<AuditEventAccession> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Identifier value_identifier = 3;
   */
  valueIdentifier?: Identifier;

  constructor(data?: PartialMessage<AuditEventAccession>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventAccession";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventAccession {
    return new AuditEventAccession().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventAccession {
    return new AuditEventAccession().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventAccession {
    return new AuditEventAccession().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventAccession | PlainMessage<AuditEventAccession> | undefined, b: AuditEventAccession | PlainMessage<AuditEventAccession> | undefined): boolean {
    return proto3.util.equals(AuditEventAccession, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Anonymized.
 * Anonymized state.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-Anonymized
 *
 * @generated from message google.fhir.r4.core.AuditEventAnonymized
 */
export class AuditEventAnonymized extends Message<AuditEventAnonymized> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<AuditEventAnonymized>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventAnonymized";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventAnonymized {
    return new AuditEventAnonymized().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventAnonymized {
    return new AuditEventAnonymized().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventAnonymized {
    return new AuditEventAnonymized().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventAnonymized | PlainMessage<AuditEventAnonymized> | undefined, b: AuditEventAnonymized | PlainMessage<AuditEventAnonymized> | undefined): boolean {
    return proto3.util.equals(AuditEventAnonymized, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Encrypted.
 * Encrypted state.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-Encrypted
 *
 * @generated from message google.fhir.r4.core.AuditEventEncrypted
 */
export class AuditEventEncrypted extends Message<AuditEventEncrypted> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<AuditEventEncrypted>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventEncrypted";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventEncrypted {
    return new AuditEventEncrypted().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventEncrypted {
    return new AuditEventEncrypted().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventEncrypted {
    return new AuditEventEncrypted().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventEncrypted | PlainMessage<AuditEventEncrypted> | undefined, b: AuditEventEncrypted | PlainMessage<AuditEventEncrypted> | undefined): boolean {
    return proto3.util.equals(AuditEventEncrypted, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Instance.
 * SOP Instance UID value.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-Instance
 *
 * @generated from message google.fhir.r4.core.AuditEventInstance
 */
export class AuditEventInstance extends Message<AuditEventInstance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Identifier value_identifier = 3;
   */
  valueIdentifier?: Identifier;

  constructor(data?: PartialMessage<AuditEventInstance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventInstance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventInstance {
    return new AuditEventInstance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventInstance {
    return new AuditEventInstance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventInstance {
    return new AuditEventInstance().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventInstance | PlainMessage<AuditEventInstance> | undefined, b: AuditEventInstance | PlainMessage<AuditEventInstance> | undefined): boolean {
    return proto3.util.equals(AuditEventInstance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MPPS.
 * MPPS instance UID.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-MPPS
 *
 * @generated from message google.fhir.r4.core.AuditEventMPPS
 */
export class AuditEventMPPS extends Message<AuditEventMPPS> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Identifier value_identifier = 3;
   */
  valueIdentifier?: Identifier;

  constructor(data?: PartialMessage<AuditEventMPPS>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventMPPS";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventMPPS {
    return new AuditEventMPPS().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventMPPS {
    return new AuditEventMPPS().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventMPPS {
    return new AuditEventMPPS().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventMPPS | PlainMessage<AuditEventMPPS> | undefined, b: AuditEventMPPS | PlainMessage<AuditEventMPPS> | undefined): boolean {
    return proto3.util.equals(AuditEventMPPS, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for NumberOfInstances.
 * Number of SOP Instances referred to by this entity.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-NumberOfInstances
 *
 * @generated from message google.fhir.r4.core.AuditEventNumberOfInstances
 */
export class AuditEventNumberOfInstances extends Message<AuditEventNumberOfInstances> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<AuditEventNumberOfInstances>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventNumberOfInstances";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventNumberOfInstances {
    return new AuditEventNumberOfInstances().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventNumberOfInstances {
    return new AuditEventNumberOfInstances().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventNumberOfInstances {
    return new AuditEventNumberOfInstances().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventNumberOfInstances | PlainMessage<AuditEventNumberOfInstances> | undefined, b: AuditEventNumberOfInstances | PlainMessage<AuditEventNumberOfInstances> | undefined): boolean {
    return proto3.util.equals(AuditEventNumberOfInstances, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ParticipantObjectContainsStudy.
 * Contains Study.
 * See
 * http://hl7.org/fhir/StructureDefinition/auditevent-ParticipantObjectContainsStudy
 *
 * @generated from message google.fhir.r4.core.AuditEventParticipantObjectContainsStudy
 */
export class AuditEventParticipantObjectContainsStudy extends Message<AuditEventParticipantObjectContainsStudy> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Identifier value_identifier = 3;
   */
  valueIdentifier?: Identifier;

  constructor(data?: PartialMessage<AuditEventParticipantObjectContainsStudy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventParticipantObjectContainsStudy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventParticipantObjectContainsStudy {
    return new AuditEventParticipantObjectContainsStudy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventParticipantObjectContainsStudy {
    return new AuditEventParticipantObjectContainsStudy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventParticipantObjectContainsStudy {
    return new AuditEventParticipantObjectContainsStudy().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventParticipantObjectContainsStudy | PlainMessage<AuditEventParticipantObjectContainsStudy> | undefined, b: AuditEventParticipantObjectContainsStudy | PlainMessage<AuditEventParticipantObjectContainsStudy> | undefined): boolean {
    return proto3.util.equals(AuditEventParticipantObjectContainsStudy, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SOPClass.
 * UIDs of SOP classes referred to.
 * See http://hl7.org/fhir/StructureDefinition/auditevent-SOPClass
 *
 * @generated from message google.fhir.r4.core.AuditEventSOPClass
 */
export class AuditEventSOPClass extends Message<AuditEventSOPClass> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<AuditEventSOPClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventSOPClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventSOPClass {
    return new AuditEventSOPClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventSOPClass {
    return new AuditEventSOPClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventSOPClass {
    return new AuditEventSOPClass().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventSOPClass | PlainMessage<AuditEventSOPClass> | undefined, b: AuditEventSOPClass | PlainMessage<AuditEventSOPClass> | undefined): boolean {
    return proto3.util.equals(AuditEventSOPClass, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for encounterClass.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-encounterClass
 *
 * @generated from message google.fhir.r4.core.BasicEncounterClass
 */
export class BasicEncounterClass extends Message<BasicEncounterClass> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicEncounterClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicEncounterClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicEncounterClass {
    return new BasicEncounterClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicEncounterClass {
    return new BasicEncounterClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicEncounterClass {
    return new BasicEncounterClass().fromJsonString(jsonString, options);
  }

  static equals(a: BasicEncounterClass | PlainMessage<BasicEncounterClass> | undefined, b: BasicEncounterClass | PlainMessage<BasicEncounterClass> | undefined): boolean {
    return proto3.util.equals(BasicEncounterClass, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for encounterType.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-encounterType
 *
 * @generated from message google.fhir.r4.core.BasicEncounterType
 */
export class BasicEncounterType extends Message<BasicEncounterType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicEncounterType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicEncounterType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicEncounterType {
    return new BasicEncounterType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicEncounterType {
    return new BasicEncounterType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicEncounterType {
    return new BasicEncounterType().fromJsonString(jsonString, options);
  }

  static equals(a: BasicEncounterType | PlainMessage<BasicEncounterType> | undefined, b: BasicEncounterType | PlainMessage<BasicEncounterType> | undefined): boolean {
    return proto3.util.equals(BasicEncounterType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for initiatingOrganization.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-initiatingOrganization
 *
 * @generated from message google.fhir.r4.core.BasicInitiatingOrganization
 */
export class BasicInitiatingOrganization extends Message<BasicInitiatingOrganization> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<BasicInitiatingOrganization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicInitiatingOrganization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicInitiatingOrganization {
    return new BasicInitiatingOrganization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicInitiatingOrganization {
    return new BasicInitiatingOrganization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicInitiatingOrganization {
    return new BasicInitiatingOrganization().fromJsonString(jsonString, options);
  }

  static equals(a: BasicInitiatingOrganization | PlainMessage<BasicInitiatingOrganization> | undefined, b: BasicInitiatingOrganization | PlainMessage<BasicInitiatingOrganization> | undefined): boolean {
    return proto3.util.equals(BasicInitiatingOrganization, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for initiatingPerson.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-initiatingPerson
 *
 * @generated from message google.fhir.r4.core.BasicInitiatingPerson
 */
export class BasicInitiatingPerson extends Message<BasicInitiatingPerson> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<BasicInitiatingPerson>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicInitiatingPerson";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicInitiatingPerson {
    return new BasicInitiatingPerson().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicInitiatingPerson {
    return new BasicInitiatingPerson().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicInitiatingPerson {
    return new BasicInitiatingPerson().fromJsonString(jsonString, options);
  }

  static equals(a: BasicInitiatingPerson | PlainMessage<BasicInitiatingPerson> | undefined, b: BasicInitiatingPerson | PlainMessage<BasicInitiatingPerson> | undefined): boolean {
    return proto3.util.equals(BasicInitiatingPerson, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for receivingOrganization.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-receivingOrganization
 *
 * @generated from message google.fhir.r4.core.BasicReceivingOrganization
 */
export class BasicReceivingOrganization extends Message<BasicReceivingOrganization> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<BasicReceivingOrganization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicReceivingOrganization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicReceivingOrganization {
    return new BasicReceivingOrganization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicReceivingOrganization {
    return new BasicReceivingOrganization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicReceivingOrganization {
    return new BasicReceivingOrganization().fromJsonString(jsonString, options);
  }

  static equals(a: BasicReceivingOrganization | PlainMessage<BasicReceivingOrganization> | undefined, b: BasicReceivingOrganization | PlainMessage<BasicReceivingOrganization> | undefined): boolean {
    return proto3.util.equals(BasicReceivingOrganization, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for receivingPerson.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-receivingPerson
 *
 * @generated from message google.fhir.r4.core.BasicReceivingPerson
 */
export class BasicReceivingPerson extends Message<BasicReceivingPerson> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<BasicReceivingPerson>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicReceivingPerson";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicReceivingPerson {
    return new BasicReceivingPerson().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicReceivingPerson {
    return new BasicReceivingPerson().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicReceivingPerson {
    return new BasicReceivingPerson().fromJsonString(jsonString, options);
  }

  static equals(a: BasicReceivingPerson | PlainMessage<BasicReceivingPerson> | undefined, b: BasicReceivingPerson | PlainMessage<BasicReceivingPerson> | undefined): boolean {
    return proto3.util.equals(BasicReceivingPerson, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for recipientLanguage.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-recipientLanguage
 *
 * @generated from message google.fhir.r4.core.BasicRecipientLanguage
 */
export class BasicRecipientLanguage extends Message<BasicRecipientLanguage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicRecipientLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicRecipientLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicRecipientLanguage {
    return new BasicRecipientLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicRecipientLanguage {
    return new BasicRecipientLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicRecipientLanguage {
    return new BasicRecipientLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: BasicRecipientLanguage | PlainMessage<BasicRecipientLanguage> | undefined, b: BasicRecipientLanguage | PlainMessage<BasicRecipientLanguage> | undefined): boolean {
    return proto3.util.equals(BasicRecipientLanguage, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for recipientType.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-recipientType
 *
 * @generated from message google.fhir.r4.core.BasicRecipientType
 */
export class BasicRecipientType extends Message<BasicRecipientType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicRecipientType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicRecipientType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicRecipientType {
    return new BasicRecipientType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicRecipientType {
    return new BasicRecipientType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicRecipientType {
    return new BasicRecipientType().fromJsonString(jsonString, options);
  }

  static equals(a: BasicRecipientType | PlainMessage<BasicRecipientType> | undefined, b: BasicRecipientType | PlainMessage<BasicRecipientType> | undefined): boolean {
    return proto3.util.equals(BasicRecipientType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for systemUserLanguage.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/cqf-systemUserLanguage
 *
 * @generated from message google.fhir.r4.core.BasicSystemUserLanguage
 */
export class BasicSystemUserLanguage extends Message<BasicSystemUserLanguage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicSystemUserLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicSystemUserLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicSystemUserLanguage {
    return new BasicSystemUserLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicSystemUserLanguage {
    return new BasicSystemUserLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicSystemUserLanguage {
    return new BasicSystemUserLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: BasicSystemUserLanguage | PlainMessage<BasicSystemUserLanguage> | undefined, b: BasicSystemUserLanguage | PlainMessage<BasicSystemUserLanguage> | undefined): boolean {
    return proto3.util.equals(BasicSystemUserLanguage, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for systemUserTaskContext.
 * The task the system user is performing.
 * See http://hl7.org/fhir/StructureDefinition/cqf-systemUserTaskContext
 *
 * @generated from message google.fhir.r4.core.BasicSystemUserTaskContext
 */
export class BasicSystemUserTaskContext extends Message<BasicSystemUserTaskContext> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicSystemUserTaskContext>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicSystemUserTaskContext";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicSystemUserTaskContext {
    return new BasicSystemUserTaskContext().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicSystemUserTaskContext {
    return new BasicSystemUserTaskContext().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicSystemUserTaskContext {
    return new BasicSystemUserTaskContext().fromJsonString(jsonString, options);
  }

  static equals(a: BasicSystemUserTaskContext | PlainMessage<BasicSystemUserTaskContext> | undefined, b: BasicSystemUserTaskContext | PlainMessage<BasicSystemUserTaskContext> | undefined): boolean {
    return proto3.util.equals(BasicSystemUserTaskContext, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for systemUserType.
 * The type of user initiating the request.
 * See http://hl7.org/fhir/StructureDefinition/cqf-systemUserType
 *
 * @generated from message google.fhir.r4.core.BasicSystemUserType
 */
export class BasicSystemUserType extends Message<BasicSystemUserType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BasicSystemUserType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BasicSystemUserType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasicSystemUserType {
    return new BasicSystemUserType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasicSystemUserType {
    return new BasicSystemUserType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasicSystemUserType {
    return new BasicSystemUserType().fromJsonString(jsonString, options);
  }

  static equals(a: BasicSystemUserType | PlainMessage<BasicSystemUserType> | undefined, b: BasicSystemUserType | PlainMessage<BasicSystemUserType> | undefined): boolean {
    return proto3.util.equals(BasicSystemUserType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for bodyPosition.
 * The body position during the observation.
 * See http://hl7.org/fhir/StructureDefinition/observation-bodyPosition
 *
 * @generated from message google.fhir.r4.core.BodyPosition
 */
export class BodyPosition extends Message<BodyPosition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<BodyPosition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BodyPosition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BodyPosition {
    return new BodyPosition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BodyPosition {
    return new BodyPosition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BodyPosition {
    return new BodyPosition().fromJsonString(jsonString, options);
  }

  static equals(a: BodyPosition | PlainMessage<BodyPosition> | undefined, b: BodyPosition | PlainMessage<BodyPosition> | undefined): boolean {
    return proto3.util.equals(BodyPosition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for BodyStructure Reference.
 * Target anatomic location or structure.
 * See http://hl7.org/fhir/StructureDefinition/bodySite
 *
 * @generated from message google.fhir.r4.core.BodyStructureReference
 */
export class BodyStructureReference extends Message<BodyStructureReference> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<BodyStructureReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BodyStructureReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BodyStructureReference {
    return new BodyStructureReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BodyStructureReference {
    return new BodyStructureReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BodyStructureReference {
    return new BodyStructureReference().fromJsonString(jsonString, options);
  }

  static equals(a: BodyStructureReference | PlainMessage<BodyStructureReference> | undefined, b: BodyStructureReference | PlainMessage<BodyStructureReference> | undefined): boolean {
    return proto3.util.equals(BodyStructureReference, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for http-response-header.
 * HTTP header returned by the interaction.
 * See http://hl7.org/fhir/StructureDefinition/http-response-header
 *
 * @generated from message google.fhir.r4.core.BundleHttpResponseHeader
 */
export class BundleHttpResponseHeader extends Message<BundleHttpResponseHeader> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<BundleHttpResponseHeader>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BundleHttpResponseHeader";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BundleHttpResponseHeader {
    return new BundleHttpResponseHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BundleHttpResponseHeader {
    return new BundleHttpResponseHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BundleHttpResponseHeader {
    return new BundleHttpResponseHeader().fromJsonString(jsonString, options);
  }

  static equals(a: BundleHttpResponseHeader | PlainMessage<BundleHttpResponseHeader> | undefined, b: BundleHttpResponseHeader | PlainMessage<BundleHttpResponseHeader> | undefined): boolean {
    return proto3.util.equals(BundleHttpResponseHeader, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for location-distance.
 * The distance this resource is from a provided location (geocode point).
 * See http://hl7.org/fhir/StructureDefinition/location-distance
 *
 * @generated from message google.fhir.r4.core.BundleLocationDistance
 */
export class BundleLocationDistance extends Message<BundleLocationDistance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Distance value_distance = 3;
   */
  valueDistance?: Distance;

  constructor(data?: PartialMessage<BundleLocationDistance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BundleLocationDistance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_distance", kind: "message", T: Distance },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BundleLocationDistance {
    return new BundleLocationDistance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BundleLocationDistance {
    return new BundleLocationDistance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BundleLocationDistance {
    return new BundleLocationDistance().fromJsonString(jsonString, options);
  }

  static equals(a: BundleLocationDistance | PlainMessage<BundleLocationDistance> | undefined, b: BundleLocationDistance | PlainMessage<BundleLocationDistance> | undefined): boolean {
    return proto3.util.equals(BundleLocationDistance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for match-grade.
 * How likely this resource is to be a match.
 * See http://hl7.org/fhir/StructureDefinition/match-grade
 *
 * @generated from message google.fhir.r4.core.BundleMatchGrade
 */
export class BundleMatchGrade extends Message<BundleMatchGrade> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.BundleMatchGrade.ValueCode value_code = 3;
   */
  valueCode?: BundleMatchGrade_ValueCode;

  constructor(data?: PartialMessage<BundleMatchGrade>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BundleMatchGrade";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: BundleMatchGrade_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BundleMatchGrade {
    return new BundleMatchGrade().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BundleMatchGrade {
    return new BundleMatchGrade().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BundleMatchGrade {
    return new BundleMatchGrade().fromJsonString(jsonString, options);
  }

  static equals(a: BundleMatchGrade | PlainMessage<BundleMatchGrade> | undefined, b: BundleMatchGrade | PlainMessage<BundleMatchGrade> | undefined): boolean {
    return proto3.util.equals(BundleMatchGrade, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.BundleMatchGrade.ValueCode
 */
export class BundleMatchGrade_ValueCode extends Message<BundleMatchGrade_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.MatchGradeCode.Value value = 1;
   */
  value = MatchGradeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<BundleMatchGrade_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BundleMatchGrade.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MatchGradeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BundleMatchGrade_ValueCode {
    return new BundleMatchGrade_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BundleMatchGrade_ValueCode {
    return new BundleMatchGrade_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BundleMatchGrade_ValueCode {
    return new BundleMatchGrade_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: BundleMatchGrade_ValueCode | PlainMessage<BundleMatchGrade_ValueCode> | undefined, b: BundleMatchGrade_ValueCode | PlainMessage<BundleMatchGrade_ValueCode> | undefined): boolean {
    return proto3.util.equals(BundleMatchGrade_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for calculatedValue.
 * A calculated value.
 * See http://hl7.org/fhir/StructureDefinition/cqf-calculatedValue
 *
 * @generated from message google.fhir.r4.core.CalculatedValue
 */
export class CalculatedValue extends Message<CalculatedValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CalculatedValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CalculatedValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CalculatedValue {
    return new CalculatedValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CalculatedValue {
    return new CalculatedValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CalculatedValue {
    return new CalculatedValue().fromJsonString(jsonString, options);
  }

  static equals(a: CalculatedValue | PlainMessage<CalculatedValue> | undefined, b: CalculatedValue | PlainMessage<CalculatedValue> | undefined): boolean {
    return proto3.util.equals(CalculatedValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Display Name.
 * Display name for canonical reference.
 * See http://hl7.org/fhir/StructureDefinition/display
 *
 * @generated from message google.fhir.r4.core.CanonicalDisplayName
 */
export class CanonicalDisplayName extends Message<CanonicalDisplayName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CanonicalDisplayName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CanonicalDisplayName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CanonicalDisplayName {
    return new CanonicalDisplayName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CanonicalDisplayName {
    return new CanonicalDisplayName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CanonicalDisplayName {
    return new CanonicalDisplayName().fromJsonString(jsonString, options);
  }

  static equals(a: CanonicalDisplayName | PlainMessage<CanonicalDisplayName> | undefined, b: CanonicalDisplayName | PlainMessage<CanonicalDisplayName> | undefined): boolean {
    return proto3.util.equals(CanonicalDisplayName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for capabilities.
 * Server Capabilities.
 * See http://fhir-registry.smarthealthit.org/StructureDefinition/capabilities
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementCapabilities
 */
export class CapabilityStatementCapabilities extends Message<CapabilityStatementCapabilities> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.CapabilityStatementCapabilities.ValueCode value_code = 3;
   */
  valueCode?: CapabilityStatementCapabilities_ValueCode;

  constructor(data?: PartialMessage<CapabilityStatementCapabilities>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementCapabilities";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: CapabilityStatementCapabilities_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementCapabilities {
    return new CapabilityStatementCapabilities().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementCapabilities {
    return new CapabilityStatementCapabilities().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementCapabilities {
    return new CapabilityStatementCapabilities().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementCapabilities | PlainMessage<CapabilityStatementCapabilities> | undefined, b: CapabilityStatementCapabilities | PlainMessage<CapabilityStatementCapabilities> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementCapabilities, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementCapabilities.ValueCode
 */
export class CapabilityStatementCapabilities_ValueCode extends Message<CapabilityStatementCapabilities_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.SmartCapabilitiesCode.Value value = 1;
   */
  value = SmartCapabilitiesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CapabilityStatementCapabilities_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementCapabilities.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SmartCapabilitiesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementCapabilities_ValueCode {
    return new CapabilityStatementCapabilities_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementCapabilities_ValueCode {
    return new CapabilityStatementCapabilities_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementCapabilities_ValueCode {
    return new CapabilityStatementCapabilities_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementCapabilities_ValueCode | PlainMessage<CapabilityStatementCapabilities_ValueCode> | undefined, b: CapabilityStatementCapabilities_ValueCode | PlainMessage<CapabilityStatementCapabilities_ValueCode> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementCapabilities_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expectation.
 * SHALL | SHOULD | MAY |SHOULD-NOT.
 * See http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementExpectation
 */
export class CapabilityStatementExpectation extends Message<CapabilityStatementExpectation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.CapabilityStatementExpectation.ValueCode value_code = 3;
   */
  valueCode?: CapabilityStatementExpectation_ValueCode;

  constructor(data?: PartialMessage<CapabilityStatementExpectation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementExpectation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: CapabilityStatementExpectation_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementExpectation {
    return new CapabilityStatementExpectation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementExpectation {
    return new CapabilityStatementExpectation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementExpectation {
    return new CapabilityStatementExpectation().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementExpectation | PlainMessage<CapabilityStatementExpectation> | undefined, b: CapabilityStatementExpectation | PlainMessage<CapabilityStatementExpectation> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementExpectation, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementExpectation.ValueCode
 */
export class CapabilityStatementExpectation_ValueCode extends Message<CapabilityStatementExpectation_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ConformanceExpectationCode.Value value = 1;
   */
  value = ConformanceExpectationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CapabilityStatementExpectation_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementExpectation.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConformanceExpectationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementExpectation_ValueCode {
    return new CapabilityStatementExpectation_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementExpectation_ValueCode {
    return new CapabilityStatementExpectation_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementExpectation_ValueCode {
    return new CapabilityStatementExpectation_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementExpectation_ValueCode | PlainMessage<CapabilityStatementExpectation_ValueCode> | undefined, b: CapabilityStatementExpectation_ValueCode | PlainMessage<CapabilityStatementExpectation_ValueCode> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementExpectation_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for oauth-uris.
 * Automated discovery of OAuth2 endpoints.
 * See http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementOauthUris
 */
export class CapabilityStatementOauthUris extends Message<CapabilityStatementOauthUris> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * OAuth2 "authorize" endpoint
   *
   * @generated from field: google.fhir.r4.core.Uri authorize = 4;
   */
  authorize?: Uri;

  /**
   * OAuth2 "token" endpoint
   *
   * @generated from field: google.fhir.r4.core.Uri token = 5;
   */
  token?: Uri;

  /**
   * OAuth2 dynamic registration endpoint
   *
   * @generated from field: google.fhir.r4.core.Uri register = 6;
   */
  register?: Uri;

  /**
   * User-facing authorization management entry point
   *
   * @generated from field: google.fhir.r4.core.Uri manage = 7;
   */
  manage?: Uri;

  constructor(data?: PartialMessage<CapabilityStatementOauthUris>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementOauthUris";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "authorize", kind: "message", T: Uri },
    { no: 5, name: "token", kind: "message", T: Uri },
    { no: 6, name: "register", kind: "message", T: Uri },
    { no: 7, name: "manage", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementOauthUris {
    return new CapabilityStatementOauthUris().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementOauthUris {
    return new CapabilityStatementOauthUris().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementOauthUris {
    return new CapabilityStatementOauthUris().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementOauthUris | PlainMessage<CapabilityStatementOauthUris> | undefined, b: CapabilityStatementOauthUris | PlainMessage<CapabilityStatementOauthUris> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementOauthUris, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for prohibited.
 * Functionality not allowed.
 * See http://hl7.org/fhir/StructureDefinition/capabilitystatement-prohibited
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementProhibited
 */
export class CapabilityStatementProhibited extends Message<CapabilityStatementProhibited> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<CapabilityStatementProhibited>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementProhibited";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementProhibited {
    return new CapabilityStatementProhibited().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementProhibited {
    return new CapabilityStatementProhibited().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementProhibited {
    return new CapabilityStatementProhibited().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementProhibited | PlainMessage<CapabilityStatementProhibited> | undefined, b: CapabilityStatementProhibited | PlainMessage<CapabilityStatementProhibited> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementProhibited, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for search-parameter-combination.
 * An allowable parameter combination.
 * See
 * http://hl7.org/fhir/StructureDefinition/capabilitystatement-search-parameter-combination
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementSearchParameterCombination
 */
export class CapabilityStatementSearchParameterCombination extends Message<CapabilityStatementSearchParameterCombination> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * A required search parameter name
   *
   * @generated from field: repeated google.fhir.r4.core.String required = 4;
   */
  required: String[] = [];

  /**
   * An optional search parameter name
   *
   * @generated from field: repeated google.fhir.r4.core.String optional = 5;
   */
  optional: String[] = [];

  constructor(data?: PartialMessage<CapabilityStatementSearchParameterCombination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementSearchParameterCombination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "required", kind: "message", T: String, repeated: true },
    { no: 5, name: "optional", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementSearchParameterCombination {
    return new CapabilityStatementSearchParameterCombination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementSearchParameterCombination {
    return new CapabilityStatementSearchParameterCombination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementSearchParameterCombination {
    return new CapabilityStatementSearchParameterCombination().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementSearchParameterCombination | PlainMessage<CapabilityStatementSearchParameterCombination> | undefined, b: CapabilityStatementSearchParameterCombination | PlainMessage<CapabilityStatementSearchParameterCombination> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementSearchParameterCombination, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for supported-system.
 * Code system not defined in a value set.
 * See
 * http://hl7.org/fhir/StructureDefinition/capabilitystatement-supported-system
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementSupportedSystem
 */
export class CapabilityStatementSupportedSystem extends Message<CapabilityStatementSupportedSystem> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<CapabilityStatementSupportedSystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementSupportedSystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementSupportedSystem {
    return new CapabilityStatementSupportedSystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementSupportedSystem {
    return new CapabilityStatementSupportedSystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementSupportedSystem {
    return new CapabilityStatementSupportedSystem().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementSupportedSystem | PlainMessage<CapabilityStatementSupportedSystem> | undefined, b: CapabilityStatementSupportedSystem | PlainMessage<CapabilityStatementSupportedSystem> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementSupportedSystem, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for websocket.
 * Where server websocket end point is found.
 * See http://hl7.org/fhir/StructureDefinition/capabilitystatement-websocket
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementWebsocket
 */
export class CapabilityStatementWebsocket extends Message<CapabilityStatementWebsocket> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<CapabilityStatementWebsocket>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementWebsocket";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementWebsocket {
    return new CapabilityStatementWebsocket().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementWebsocket {
    return new CapabilityStatementWebsocket().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementWebsocket {
    return new CapabilityStatementWebsocket().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementWebsocket | PlainMessage<CapabilityStatementWebsocket> | undefined, b: CapabilityStatementWebsocket | PlainMessage<CapabilityStatementWebsocket> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementWebsocket, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for activity-title.
 * Label for activity.
 * See http://hl7.org/fhir/StructureDefinition/careplan-activity-title
 *
 * @generated from message google.fhir.r4.core.CarePlanActivityTitle
 */
export class CarePlanActivityTitle extends Message<CarePlanActivityTitle> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CarePlanActivityTitle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlanActivityTitle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlanActivityTitle {
    return new CarePlanActivityTitle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlanActivityTitle {
    return new CarePlanActivityTitle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlanActivityTitle {
    return new CarePlanActivityTitle().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlanActivityTitle | PlainMessage<CarePlanActivityTitle> | undefined, b: CarePlanActivityTitle | PlainMessage<CarePlanActivityTitle> | undefined): boolean {
    return proto3.util.equals(CarePlanActivityTitle, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for alternate.
 * Additional code for the concept.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-alternate
 *
 * @generated from message google.fhir.r4.core.CodeSystemAlternate
 */
export class CodeSystemAlternate extends Message<CodeSystemAlternate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code that represents the concept
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * Expected use of the code
   *
   * @generated from field: google.fhir.r4.core.Coding use = 5;
   */
  use?: Coding;

  constructor(data?: PartialMessage<CodeSystemAlternate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemAlternate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "use", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemAlternate {
    return new CodeSystemAlternate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemAlternate {
    return new CodeSystemAlternate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemAlternate {
    return new CodeSystemAlternate().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemAlternate | PlainMessage<CodeSystemAlternate> | undefined, b: CodeSystemAlternate | PlainMessage<CodeSystemAlternate> | undefined): boolean {
    return proto3.util.equals(CodeSystemAlternate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for author.
 * User or Org actually involved in creating the value set content.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-author
 *
 * @generated from message google.fhir.r4.core.CodeSystemAuthor
 */
export class CodeSystemAuthor extends Message<CodeSystemAuthor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CodeSystemAuthor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemAuthor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemAuthor {
    return new CodeSystemAuthor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemAuthor {
    return new CodeSystemAuthor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemAuthor {
    return new CodeSystemAuthor().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemAuthor | PlainMessage<CodeSystemAuthor> | undefined, b: CodeSystemAuthor | PlainMessage<CodeSystemAuthor> | undefined): boolean {
    return proto3.util.equals(CodeSystemAuthor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for concept-comments.
 * Comment about the use of this code in this context.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-concept-comments
 *
 * @generated from message google.fhir.r4.core.CodeSystemConceptComments
 */
export class CodeSystemConceptComments extends Message<CodeSystemConceptComments> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CodeSystemConceptComments>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemConceptComments";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemConceptComments {
    return new CodeSystemConceptComments().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemConceptComments {
    return new CodeSystemConceptComments().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemConceptComments {
    return new CodeSystemConceptComments().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemConceptComments | PlainMessage<CodeSystemConceptComments> | undefined, b: CodeSystemConceptComments | PlainMessage<CodeSystemConceptComments> | undefined): boolean {
    return proto3.util.equals(CodeSystemConceptComments, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for conceptOrder.
 * Appearance order for user selection.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-conceptOrder
 *
 * @generated from message google.fhir.r4.core.CodeSystemConceptOrder
 */
export class CodeSystemConceptOrder extends Message<CodeSystemConceptOrder> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<CodeSystemConceptOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemConceptOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemConceptOrder {
    return new CodeSystemConceptOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemConceptOrder {
    return new CodeSystemConceptOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemConceptOrder {
    return new CodeSystemConceptOrder().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemConceptOrder | PlainMessage<CodeSystemConceptOrder> | undefined, b: CodeSystemConceptOrder | PlainMessage<CodeSystemConceptOrder> | undefined): boolean {
    return proto3.util.equals(CodeSystemConceptOrder, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for effectiveDate.
 * When the value set version becomes Active and is available for use.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-effectiveDate
 *
 * @generated from message google.fhir.r4.core.CodeSystemEffectiveDate
 */
export class CodeSystemEffectiveDate extends Message<CodeSystemEffectiveDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Date value_date = 3;
   */
  valueDate?: Date;

  constructor(data?: PartialMessage<CodeSystemEffectiveDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemEffectiveDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemEffectiveDate {
    return new CodeSystemEffectiveDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemEffectiveDate {
    return new CodeSystemEffectiveDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemEffectiveDate {
    return new CodeSystemEffectiveDate().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemEffectiveDate | PlainMessage<CodeSystemEffectiveDate> | undefined, b: CodeSystemEffectiveDate | PlainMessage<CodeSystemEffectiveDate> | undefined): boolean {
    return proto3.util.equals(CodeSystemEffectiveDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expirationDate.
 * When the value set version should no longer be used.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-expirationDate
 *
 * @generated from message google.fhir.r4.core.CodeSystemExpirationDate
 */
export class CodeSystemExpirationDate extends Message<CodeSystemExpirationDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Date value_date = 3;
   */
  valueDate?: Date;

  constructor(data?: PartialMessage<CodeSystemExpirationDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemExpirationDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemExpirationDate {
    return new CodeSystemExpirationDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemExpirationDate {
    return new CodeSystemExpirationDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemExpirationDate {
    return new CodeSystemExpirationDate().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemExpirationDate | PlainMessage<CodeSystemExpirationDate> | undefined, b: CodeSystemExpirationDate | PlainMessage<CodeSystemExpirationDate> | undefined): boolean {
    return proto3.util.equals(CodeSystemExpirationDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for history.
 * What has happened over time.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-history
 *
 * @generated from message google.fhir.r4.core.CodeSystemHistory
 */
export class CodeSystemHistory extends Message<CodeSystemHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The name of this set of history entries
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.CodeSystemHistory.Revision revision = 5;
   */
  revision: CodeSystemHistory_Revision[] = [];

  constructor(data?: PartialMessage<CodeSystemHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "revision", kind: "message", T: CodeSystemHistory_Revision, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemHistory {
    return new CodeSystemHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemHistory {
    return new CodeSystemHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemHistory {
    return new CodeSystemHistory().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemHistory | PlainMessage<CodeSystemHistory> | undefined, b: CodeSystemHistory | PlainMessage<CodeSystemHistory> | undefined): boolean {
    return proto3.util.equals(CodeSystemHistory, a, b);
  }
}

/**
 * Audit of all changes for a history entry
 *
 * @generated from message google.fhir.r4.core.CodeSystemHistory.Revision
 */
export class CodeSystemHistory_Revision extends Message<CodeSystemHistory_Revision> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Date the change was made
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 4;
   */
  date?: DateTime;

  /**
   * Version marker after the change was made
   *
   * @generated from field: google.fhir.r4.core.String id_slice = 5;
   */
  idSlice?: String;

  /**
   * Who made the change
   *
   * @generated from field: google.fhir.r4.core.String author = 6;
   */
  author?: String;

  /**
   * Information about the change
   *
   * @generated from field: google.fhir.r4.core.String notes = 7;
   */
  notes?: String;

  constructor(data?: PartialMessage<CodeSystemHistory_Revision>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemHistory.Revision";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 4, name: "date", kind: "message", T: DateTime },
    { no: 5, name: "id_slice", kind: "message", T: String },
    { no: 6, name: "author", kind: "message", T: String },
    { no: 7, name: "notes", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemHistory_Revision {
    return new CodeSystemHistory_Revision().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemHistory_Revision {
    return new CodeSystemHistory_Revision().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemHistory_Revision {
    return new CodeSystemHistory_Revision().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemHistory_Revision | PlainMessage<CodeSystemHistory_Revision> | undefined, b: CodeSystemHistory_Revision | PlainMessage<CodeSystemHistory_Revision> | undefined): boolean {
    return proto3.util.equals(CodeSystemHistory_Revision, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for keyWord.
 * Descriptors and key terms for search.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-keyWord
 *
 * @generated from message google.fhir.r4.core.CodeSystemKeyWord
 */
export class CodeSystemKeyWord extends Message<CodeSystemKeyWord> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CodeSystemKeyWord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemKeyWord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemKeyWord {
    return new CodeSystemKeyWord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemKeyWord {
    return new CodeSystemKeyWord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemKeyWord {
    return new CodeSystemKeyWord().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemKeyWord | PlainMessage<CodeSystemKeyWord> | undefined, b: CodeSystemKeyWord | PlainMessage<CodeSystemKeyWord> | undefined): boolean {
    return proto3.util.equals(CodeSystemKeyWord, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for label.
 * E.g. "(a)", "1.", etc.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-label
 *
 * @generated from message google.fhir.r4.core.CodeSystemLabel
 */
export class CodeSystemLabel extends Message<CodeSystemLabel> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CodeSystemLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemLabel {
    return new CodeSystemLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemLabel {
    return new CodeSystemLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemLabel {
    return new CodeSystemLabel().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemLabel | PlainMessage<CodeSystemLabel> | undefined, b: CodeSystemLabel | PlainMessage<CodeSystemLabel> | undefined): boolean {
    return proto3.util.equals(CodeSystemLabel, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for map.
 * A concept map relevant to interpret this value set.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-map
 *
 * @generated from message google.fhir.r4.core.CodeSystemMap
 */
export class CodeSystemMap extends Message<CodeSystemMap> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<CodeSystemMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemMap {
    return new CodeSystemMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemMap {
    return new CodeSystemMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemMap {
    return new CodeSystemMap().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemMap | PlainMessage<CodeSystemMap> | undefined, b: CodeSystemMap | PlainMessage<CodeSystemMap> | undefined): boolean {
    return proto3.util.equals(CodeSystemMap, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for otherName.
 * Alternative names.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-otherName
 *
 * @generated from message google.fhir.r4.core.CodeSystemOtherName
 */
export class CodeSystemOtherName extends Message<CodeSystemOtherName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Human readable, short and specific
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Which name is preferred for this language
   *
   * @generated from field: google.fhir.r4.core.Boolean preferred = 5;
   */
  preferred?: Boolean;

  constructor(data?: PartialMessage<CodeSystemOtherName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemOtherName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "preferred", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemOtherName {
    return new CodeSystemOtherName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemOtherName {
    return new CodeSystemOtherName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemOtherName {
    return new CodeSystemOtherName().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemOtherName | PlainMessage<CodeSystemOtherName> | undefined, b: CodeSystemOtherName | PlainMessage<CodeSystemOtherName> | undefined): boolean {
    return proto3.util.equals(CodeSystemOtherName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for replacedby.
 * A code that replaces this.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-replacedby
 *
 * @generated from message google.fhir.r4.core.CodeSystemReplacedby
 */
export class CodeSystemReplacedby extends Message<CodeSystemReplacedby> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<CodeSystemReplacedby>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemReplacedby";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemReplacedby {
    return new CodeSystemReplacedby().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemReplacedby {
    return new CodeSystemReplacedby().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemReplacedby {
    return new CodeSystemReplacedby().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemReplacedby | PlainMessage<CodeSystemReplacedby> | undefined, b: CodeSystemReplacedby | PlainMessage<CodeSystemReplacedby> | undefined): boolean {
    return proto3.util.equals(CodeSystemReplacedby, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sourceReference.
 * Where did this content come from.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-sourceReference
 *
 * @generated from message google.fhir.r4.core.CodeSystemSourceReference
 */
export class CodeSystemSourceReference extends Message<CodeSystemSourceReference> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<CodeSystemSourceReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemSourceReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemSourceReference {
    return new CodeSystemSourceReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemSourceReference {
    return new CodeSystemSourceReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemSourceReference {
    return new CodeSystemSourceReference().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemSourceReference | PlainMessage<CodeSystemSourceReference> | undefined, b: CodeSystemSourceReference | PlainMessage<CodeSystemSourceReference> | undefined): boolean {
    return proto3.util.equals(CodeSystemSourceReference, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for trusted-expansion.
 * Reference to a trusted expansion.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-trusted-expansion
 *
 * @generated from message google.fhir.r4.core.CodeSystemTrustedExpansion
 */
export class CodeSystemTrustedExpansion extends Message<CodeSystemTrustedExpansion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<CodeSystemTrustedExpansion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemTrustedExpansion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemTrustedExpansion {
    return new CodeSystemTrustedExpansion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemTrustedExpansion {
    return new CodeSystemTrustedExpansion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemTrustedExpansion {
    return new CodeSystemTrustedExpansion().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemTrustedExpansion | PlainMessage<CodeSystemTrustedExpansion> | undefined, b: CodeSystemTrustedExpansion | PlainMessage<CodeSystemTrustedExpansion> | undefined): boolean {
    return proto3.util.equals(CodeSystemTrustedExpansion, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for usage.
 * Who has used and how?.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-usage
 *
 * @generated from message google.fhir.r4.core.CodeSystemUsage
 */
export class CodeSystemUsage extends Message<CodeSystemUsage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * A consumer of or client for the value set
   *
   * @generated from field: google.fhir.r4.core.String user = 4;
   */
  user?: String;

  /**
   * Implementation/project/standard that uses value set
   *
   * @generated from field: google.fhir.r4.core.String use = 5;
   */
  use?: String;

  constructor(data?: PartialMessage<CodeSystemUsage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemUsage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "user", kind: "message", T: String },
    { no: 5, name: "use", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemUsage {
    return new CodeSystemUsage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemUsage {
    return new CodeSystemUsage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemUsage {
    return new CodeSystemUsage().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemUsage | PlainMessage<CodeSystemUsage> | undefined, b: CodeSystemUsage | PlainMessage<CodeSystemUsage> | undefined): boolean {
    return proto3.util.equals(CodeSystemUsage, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for warning.
 * Extra warning about the correct use of the value set.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-warning
 *
 * @generated from message google.fhir.r4.core.CodeSystemWarning
 */
export class CodeSystemWarning extends Message<CodeSystemWarning> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<CodeSystemWarning>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemWarning";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemWarning {
    return new CodeSystemWarning().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemWarning {
    return new CodeSystemWarning().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemWarning {
    return new CodeSystemWarning().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemWarning | PlainMessage<CodeSystemWarning> | undefined, b: CodeSystemWarning | PlainMessage<CodeSystemWarning> | undefined): boolean {
    return proto3.util.equals(CodeSystemWarning, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for workflowStatus.
 * Indicates the state of development of the value set.
 * See http://hl7.org/fhir/StructureDefinition/codesystem-workflowStatus
 *
 * @generated from message google.fhir.r4.core.CodeSystemWorkflowStatus
 */
export class CodeSystemWorkflowStatus extends Message<CodeSystemWorkflowStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CodeSystemWorkflowStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemWorkflowStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemWorkflowStatus {
    return new CodeSystemWorkflowStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemWorkflowStatus {
    return new CodeSystemWorkflowStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemWorkflowStatus {
    return new CodeSystemWorkflowStatus().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemWorkflowStatus | PlainMessage<CodeSystemWorkflowStatus> | undefined, b: CodeSystemWorkflowStatus | PlainMessage<CodeSystemWorkflowStatus> | undefined): boolean {
    return proto3.util.equals(CodeSystemWorkflowStatus, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sctdescid.
 * SNOMED CT Description ID.
 * See http://hl7.org/fhir/StructureDefinition/coding-sctdescid
 *
 * @generated from message google.fhir.r4.core.CodingSctdescid
 */
export class CodingSctdescid extends Message<CodingSctdescid> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Id value_id = 3;
   */
  valueId?: Id;

  constructor(data?: PartialMessage<CodingSctdescid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodingSctdescid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_id", kind: "message", T: Id },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodingSctdescid {
    return new CodingSctdescid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodingSctdescid {
    return new CodingSctdescid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodingSctdescid {
    return new CodingSctdescid().fromJsonString(jsonString, options);
  }

  static equals(a: CodingSctdescid | PlainMessage<CodingSctdescid> | undefined, b: CodingSctdescid | PlainMessage<CodingSctdescid> | undefined): boolean {
    return proto3.util.equals(CodingSctdescid, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for media.
 * Attached media.
 * See http://hl7.org/fhir/StructureDefinition/communication-media
 *
 * @generated from message google.fhir.r4.core.CommunicationMedia
 */
export class CommunicationMedia extends Message<CommunicationMedia> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Attachment value_attachment = 3;
   */
  valueAttachment?: Attachment;

  constructor(data?: PartialMessage<CommunicationMedia>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CommunicationMedia";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_attachment", kind: "message", T: Attachment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationMedia {
    return new CommunicationMedia().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationMedia {
    return new CommunicationMedia().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationMedia {
    return new CommunicationMedia().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationMedia | PlainMessage<CommunicationMedia> | undefined, b: CommunicationMedia | PlainMessage<CommunicationMedia> | undefined): boolean {
    return proto3.util.equals(CommunicationMedia, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for initiatingLocation.
 * Location where the CommunicationRequest was initiated.
 * See
 * http://hl7.org/fhir/StructureDefinition/communicationrequest-initiatingLocation
 *
 * @generated from message google.fhir.r4.core.CommunicationRequestInitiatingLocation
 */
export class CommunicationRequestInitiatingLocation extends Message<CommunicationRequestInitiatingLocation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<CommunicationRequestInitiatingLocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CommunicationRequestInitiatingLocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationRequestInitiatingLocation {
    return new CommunicationRequestInitiatingLocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationRequestInitiatingLocation {
    return new CommunicationRequestInitiatingLocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationRequestInitiatingLocation {
    return new CommunicationRequestInitiatingLocation().fromJsonString(jsonString, options);
  }

  static equals(a: CommunicationRequestInitiatingLocation | PlainMessage<CommunicationRequestInitiatingLocation> | undefined, b: CommunicationRequestInitiatingLocation | PlainMessage<CommunicationRequestInitiatingLocation> | undefined): boolean {
    return proto3.util.equals(CommunicationRequestInitiatingLocation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for otherConfidentiality.
 * Additional confidentiality codes.
 * See
 * http://hl7.org/fhir/StructureDefinition/composition-clinicaldocument-otherConfidentiality
 *
 * @generated from message google.fhir.r4.core.CompositionOtherConfidentiality
 */
export class CompositionOtherConfidentiality extends Message<CompositionOtherConfidentiality> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<CompositionOtherConfidentiality>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompositionOtherConfidentiality";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionOtherConfidentiality {
    return new CompositionOtherConfidentiality().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionOtherConfidentiality {
    return new CompositionOtherConfidentiality().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionOtherConfidentiality {
    return new CompositionOtherConfidentiality().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionOtherConfidentiality | PlainMessage<CompositionOtherConfidentiality> | undefined, b: CompositionOtherConfidentiality | PlainMessage<CompositionOtherConfidentiality> | undefined): boolean {
    return proto3.util.equals(CompositionOtherConfidentiality, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for section-subject.
 * Section has a different subject that it's container.
 * See http://hl7.org/fhir/StructureDefinition/composition-section-subject
 *
 * @generated from message google.fhir.r4.core.CompositionSectionSubject
 */
export class CompositionSectionSubject extends Message<CompositionSectionSubject> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CompositionSectionSubject>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompositionSectionSubject";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionSectionSubject {
    return new CompositionSectionSubject().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionSectionSubject {
    return new CompositionSectionSubject().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionSectionSubject {
    return new CompositionSectionSubject().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionSectionSubject | PlainMessage<CompositionSectionSubject> | undefined, b: CompositionSectionSubject | PlainMessage<CompositionSectionSubject> | undefined): boolean {
    return proto3.util.equals(CompositionSectionSubject, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ValidityPeriod.
 * Validity Period.
 * See http://hl7.org/fhir/StructureDefinition/cqm-ValidityPeriod
 *
 * @generated from message google.fhir.r4.core.CompositionValidityPeriod
 */
export class CompositionValidityPeriod extends Message<CompositionValidityPeriod> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<CompositionValidityPeriod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompositionValidityPeriod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionValidityPeriod {
    return new CompositionValidityPeriod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionValidityPeriod {
    return new CompositionValidityPeriod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionValidityPeriod {
    return new CompositionValidityPeriod().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionValidityPeriod | PlainMessage<CompositionValidityPeriod> | undefined, b: CompositionValidityPeriod | PlainMessage<CompositionValidityPeriod> | undefined): boolean {
    return proto3.util.equals(CompositionValidityPeriod, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for versionNumber.
 * Version-specific identifier for composition.
 * See
 * http://hl7.org/fhir/StructureDefinition/composition-clinicaldocument-versionNumber
 *
 * @generated from message google.fhir.r4.core.CompositionVersionNumber
 */
export class CompositionVersionNumber extends Message<CompositionVersionNumber> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<CompositionVersionNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompositionVersionNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionVersionNumber {
    return new CompositionVersionNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionVersionNumber {
    return new CompositionVersionNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionVersionNumber {
    return new CompositionVersionNumber().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionVersionNumber | PlainMessage<CompositionVersionNumber> | undefined, b: CompositionVersionNumber | PlainMessage<CompositionVersionNumber> | undefined): boolean {
    return proto3.util.equals(CompositionVersionNumber, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for bidirectional.
 * Whether the map can be interpreted in reverse.
 * See http://hl7.org/fhir/StructureDefinition/concept-bidirectional
 *
 * @generated from message google.fhir.r4.core.ConceptMapBidirectional
 */
export class ConceptMapBidirectional extends Message<ConceptMapBidirectional> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ConceptMapBidirectional>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConceptMapBidirectional";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMapBidirectional {
    return new ConceptMapBidirectional().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMapBidirectional {
    return new ConceptMapBidirectional().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMapBidirectional {
    return new ConceptMapBidirectional().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMapBidirectional | PlainMessage<ConceptMapBidirectional> | undefined, b: ConceptMapBidirectional | PlainMessage<ConceptMapBidirectional> | undefined): boolean {
    return proto3.util.equals(ConceptMapBidirectional, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for assertedDate.
 * Date the condition was first asserted.
 * See http://hl7.org/fhir/StructureDefinition/condition-assertedDate
 *
 * @generated from message google.fhir.r4.core.ConditionAssertedDate
 */
export class ConditionAssertedDate extends Message<ConditionAssertedDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<ConditionAssertedDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionAssertedDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionAssertedDate {
    return new ConditionAssertedDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionAssertedDate {
    return new ConditionAssertedDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionAssertedDate {
    return new ConditionAssertedDate().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionAssertedDate | PlainMessage<ConditionAssertedDate> | undefined, b: ConditionAssertedDate | PlainMessage<ConditionAssertedDate> | undefined): boolean {
    return proto3.util.equals(ConditionAssertedDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for basedOn.
 * Fulfills plan, proposal or order.
 * See http://hl7.org/fhir/StructureDefinition/event-basedOn
 *
 * @generated from message google.fhir.r4.core.ConditionBasedOn
 */
export class ConditionBasedOn extends Message<ConditionBasedOn> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ConditionBasedOn>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionBasedOn";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionBasedOn {
    return new ConditionBasedOn().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionBasedOn {
    return new ConditionBasedOn().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionBasedOn {
    return new ConditionBasedOn().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionBasedOn | PlainMessage<ConditionBasedOn> | undefined, b: ConditionBasedOn | PlainMessage<ConditionBasedOn> | undefined): boolean {
    return proto3.util.equals(ConditionBasedOn, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for dueTo.
 * Causes for this Condition.
 * See http://hl7.org/fhir/StructureDefinition/condition-dueTo
 *
 * @generated from message google.fhir.r4.core.ConditionDueTo
 */
export class ConditionDueTo extends Message<ConditionDueTo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ConditionDueTo.ValueX value = 3;
   */
  value?: ConditionDueTo_ValueX;

  constructor(data?: PartialMessage<ConditionDueTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionDueTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ConditionDueTo_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionDueTo {
    return new ConditionDueTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionDueTo {
    return new ConditionDueTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionDueTo {
    return new ConditionDueTo().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionDueTo | PlainMessage<ConditionDueTo> | undefined, b: ConditionDueTo | PlainMessage<ConditionDueTo> | undefined): boolean {
    return proto3.util.equals(ConditionDueTo, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ConditionDueTo.ValueX
 */
export class ConditionDueTo_ValueX extends Message<ConditionDueTo_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ConditionDueTo.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ConditionDueTo_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionDueTo.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionDueTo_ValueX {
    return new ConditionDueTo_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionDueTo_ValueX {
    return new ConditionDueTo_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionDueTo_ValueX {
    return new ConditionDueTo_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionDueTo_ValueX | PlainMessage<ConditionDueTo_ValueX> | undefined, b: ConditionDueTo_ValueX | PlainMessage<ConditionDueTo_ValueX> | undefined): boolean {
    return proto3.util.equals(ConditionDueTo_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for occurredFollowing.
 * Precedent for this Condition.
 * See http://hl7.org/fhir/StructureDefinition/condition-occurredFollowing
 *
 * @generated from message google.fhir.r4.core.ConditionOccurredFollowing
 */
export class ConditionOccurredFollowing extends Message<ConditionOccurredFollowing> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ConditionOccurredFollowing.ValueX value = 3;
   */
  value?: ConditionOccurredFollowing_ValueX;

  constructor(data?: PartialMessage<ConditionOccurredFollowing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionOccurredFollowing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ConditionOccurredFollowing_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionOccurredFollowing {
    return new ConditionOccurredFollowing().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionOccurredFollowing {
    return new ConditionOccurredFollowing().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionOccurredFollowing {
    return new ConditionOccurredFollowing().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionOccurredFollowing | PlainMessage<ConditionOccurredFollowing> | undefined, b: ConditionOccurredFollowing | PlainMessage<ConditionOccurredFollowing> | undefined): boolean {
    return proto3.util.equals(ConditionOccurredFollowing, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ConditionOccurredFollowing.ValueX
 */
export class ConditionOccurredFollowing_ValueX extends Message<ConditionOccurredFollowing_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ConditionOccurredFollowing.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ConditionOccurredFollowing_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionOccurredFollowing.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionOccurredFollowing_ValueX {
    return new ConditionOccurredFollowing_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionOccurredFollowing_ValueX {
    return new ConditionOccurredFollowing_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionOccurredFollowing_ValueX {
    return new ConditionOccurredFollowing_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionOccurredFollowing_ValueX | PlainMessage<ConditionOccurredFollowing_ValueX> | undefined, b: ConditionOccurredFollowing_ValueX | PlainMessage<ConditionOccurredFollowing_ValueX> | undefined): boolean {
    return proto3.util.equals(ConditionOccurredFollowing_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for outcome.
 * A consequence of the Condition.
 * See http://hl7.org/fhir/StructureDefinition/condition-outcome
 *
 * @generated from message google.fhir.r4.core.ConditionOutcome
 */
export class ConditionOutcome extends Message<ConditionOutcome> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ConditionOutcome>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionOutcome";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionOutcome {
    return new ConditionOutcome().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionOutcome {
    return new ConditionOutcome().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionOutcome {
    return new ConditionOutcome().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionOutcome | PlainMessage<ConditionOutcome> | undefined, b: ConditionOutcome | PlainMessage<ConditionOutcome> | undefined): boolean {
    return proto3.util.equals(ConditionOutcome, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for related.
 * Conditions associated with this condition.
 * See http://hl7.org/fhir/StructureDefinition/condition-related
 *
 * @generated from message google.fhir.r4.core.ConditionRelated
 */
export class ConditionRelated extends Message<ConditionRelated> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ConditionRelated>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionRelated";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionRelated {
    return new ConditionRelated().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionRelated {
    return new ConditionRelated().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionRelated {
    return new ConditionRelated().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionRelated | PlainMessage<ConditionRelated> | undefined, b: ConditionRelated | PlainMessage<ConditionRelated> | undefined): boolean {
    return proto3.util.equals(ConditionRelated, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ruledOut.
 * Conditions ruled out for this condition.
 * See http://hl7.org/fhir/StructureDefinition/condition-ruledOut
 *
 * @generated from message google.fhir.r4.core.ConditionRuledOut
 */
export class ConditionRuledOut extends Message<ConditionRuledOut> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ConditionRuledOut>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionRuledOut";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionRuledOut {
    return new ConditionRuledOut().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionRuledOut {
    return new ConditionRuledOut().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionRuledOut {
    return new ConditionRuledOut().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionRuledOut | PlainMessage<ConditionRuledOut> | undefined, b: ConditionRuledOut | PlainMessage<ConditionRuledOut> | undefined): boolean {
    return proto3.util.equals(ConditionRuledOut, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for location.
 * A location specific constraint.
 * See http://hl7.org/fhir/StructureDefinition/consent-location
 *
 * @generated from message google.fhir.r4.core.ConsentLocation
 */
export class ConsentLocation extends Message<ConsentLocation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ConsentLocation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentLocation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentLocation {
    return new ConsentLocation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentLocation {
    return new ConsentLocation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentLocation {
    return new ConsentLocation().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentLocation | PlainMessage<ConsentLocation> | undefined, b: ConsentLocation | PlainMessage<ConsentLocation> | undefined): boolean {
    return proto3.util.equals(ConsentLocation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for NotificationEndpoint.
 * Notification Endpoint.
 * See http://hl7.org/fhir/StructureDefinition/consent-NotificationEndpoint
 *
 * @generated from message google.fhir.r4.core.ConsentNotificationEndpoint
 */
export class ConsentNotificationEndpoint extends Message<ConsentNotificationEndpoint> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ConsentNotificationEndpoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentNotificationEndpoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentNotificationEndpoint {
    return new ConsentNotificationEndpoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentNotificationEndpoint {
    return new ConsentNotificationEndpoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentNotificationEndpoint {
    return new ConsentNotificationEndpoint().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentNotificationEndpoint | PlainMessage<ConsentNotificationEndpoint> | undefined, b: ConsentNotificationEndpoint | PlainMessage<ConsentNotificationEndpoint> | undefined): boolean {
    return proto3.util.equals(ConsentNotificationEndpoint, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Transcriber.
 * Transcribed consent.
 * See http://hl7.org/fhir/StructureDefinition/consent-Transcriber
 *
 * @generated from message google.fhir.r4.core.ConsentTranscriber
 */
export class ConsentTranscriber extends Message<ConsentTranscriber> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ConsentTranscriber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentTranscriber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentTranscriber {
    return new ConsentTranscriber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentTranscriber {
    return new ConsentTranscriber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentTranscriber {
    return new ConsentTranscriber().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentTranscriber | PlainMessage<ConsentTranscriber> | undefined, b: ConsentTranscriber | PlainMessage<ConsentTranscriber> | undefined): boolean {
    return proto3.util.equals(ConsentTranscriber, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Witness.
 * Witness to Consent.
 * See http://hl7.org/fhir/StructureDefinition/consent-Witness
 *
 * @generated from message google.fhir.r4.core.ConsentWitness
 */
export class ConsentWitness extends Message<ConsentWitness> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ConsentWitness>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentWitness";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentWitness {
    return new ConsentWitness().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentWitness {
    return new ConsentWitness().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentWitness {
    return new ConsentWitness().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentWitness | PlainMessage<ConsentWitness> | undefined, b: ConsentWitness | PlainMessage<ConsentWitness> | undefined): boolean {
    return proto3.util.equals(ConsentWitness, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for area.
 * Area/zone/city code.
 * See http://hl7.org/fhir/StructureDefinition/contactpoint-area
 *
 * @generated from message google.fhir.r4.core.ContactPointArea
 */
export class ContactPointArea extends Message<ContactPointArea> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ContactPointArea>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointArea";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointArea {
    return new ContactPointArea().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointArea {
    return new ContactPointArea().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointArea {
    return new ContactPointArea().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointArea | PlainMessage<ContactPointArea> | undefined, b: ContactPointArea | PlainMessage<ContactPointArea> | undefined): boolean {
    return proto3.util.equals(ContactPointArea, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for country.
 * Country code as defined by the ITU.
 * See http://hl7.org/fhir/StructureDefinition/contactpoint-country
 *
 * @generated from message google.fhir.r4.core.ContactPointCountry
 */
export class ContactPointCountry extends Message<ContactPointCountry> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ContactPointCountry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointCountry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointCountry {
    return new ContactPointCountry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointCountry {
    return new ContactPointCountry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointCountry {
    return new ContactPointCountry().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointCountry | PlainMessage<ContactPointCountry> | undefined, b: ContactPointCountry | PlainMessage<ContactPointCountry> | undefined): boolean {
    return proto3.util.equals(ContactPointCountry, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for extension.
 * Number within private network.
 * See http://hl7.org/fhir/StructureDefinition/contactpoint-extension
 *
 * @generated from message google.fhir.r4.core.ContactPointExtension
 */
export class ContactPointExtension extends Message<ContactPointExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ContactPointExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointExtension {
    return new ContactPointExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointExtension {
    return new ContactPointExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointExtension {
    return new ContactPointExtension().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointExtension | PlainMessage<ContactPointExtension> | undefined, b: ContactPointExtension | PlainMessage<ContactPointExtension> | undefined): boolean {
    return proto3.util.equals(ContactPointExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for local.
 * Local number that must always be dialled.
 * See http://hl7.org/fhir/StructureDefinition/contactpoint-local
 *
 * @generated from message google.fhir.r4.core.ContactPointLocal
 */
export class ContactPointLocal extends Message<ContactPointLocal> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ContactPointLocal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointLocal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointLocal {
    return new ContactPointLocal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointLocal {
    return new ContactPointLocal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointLocal {
    return new ContactPointLocal().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointLocal | PlainMessage<ContactPointLocal> | undefined, b: ContactPointLocal | PlainMessage<ContactPointLocal> | undefined): boolean {
    return proto3.util.equals(ContactPointLocal, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for TEL-address.
 * RFC 3966 compliant telephone or fax number.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-TEL-address
 *
 * @generated from message google.fhir.r4.core.ContactPointTELAddress
 */
export class ContactPointTELAddress extends Message<ContactPointTELAddress> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Url value_url = 3;
   */
  valueUrl?: Url;

  constructor(data?: PartialMessage<ContactPointTELAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointTELAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_url", kind: "message", T: Url },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointTELAddress {
    return new ContactPointTELAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointTELAddress {
    return new ContactPointTELAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointTELAddress {
    return new ContactPointTELAddress().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointTELAddress | PlainMessage<ContactPointTELAddress> | undefined, b: ContactPointTELAddress | PlainMessage<ContactPointTELAddress> | undefined): boolean {
    return proto3.util.equals(ContactPointTELAddress, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expression.
 * An dynamic expression.
 * See http://hl7.org/fhir/StructureDefinition/cqf-expression
 *
 * @generated from message google.fhir.r4.core.CqfExpression
 */
export class CqfExpression extends Message<CqfExpression> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Expression value_expression = 3;
   */
  valueExpression?: Expression;

  constructor(data?: PartialMessage<CqfExpression>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CqfExpression";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_expression", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CqfExpression {
    return new CqfExpression().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CqfExpression {
    return new CqfExpression().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CqfExpression {
    return new CqfExpression().fromJsonString(jsonString, options);
  }

  static equals(a: CqfExpression | PlainMessage<CqfExpression> | undefined, b: CqfExpression | PlainMessage<CqfExpression> | undefined): boolean {
    return proto3.util.equals(CqfExpression, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for library.
 * A library containing logic used by the artifact.
 * See http://hl7.org/fhir/StructureDefinition/cqf-library
 *
 * @generated from message google.fhir.r4.core.CqfLibrary
 */
export class CqfLibrary extends Message<CqfLibrary> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<CqfLibrary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CqfLibrary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CqfLibrary {
    return new CqfLibrary().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CqfLibrary {
    return new CqfLibrary().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CqfLibrary {
    return new CqfLibrary().fromJsonString(jsonString, options);
  }

  static equals(a: CqfLibrary | PlainMessage<CqfLibrary> | undefined, b: CqfLibrary | PlainMessage<CqfLibrary> | undefined): boolean {
    return proto3.util.equals(CqfLibrary, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Data Absent Reason.
 * unknown | asked | temp | notasked | masked | unsupported | astext | error.
 * See http://hl7.org/fhir/StructureDefinition/data-absent-reason
 *
 * @generated from message google.fhir.r4.core.DataAbsentReason
 */
export class DataAbsentReason extends Message<DataAbsentReason> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.DataAbsentReason.ValueCode value_code = 3;
   */
  valueCode?: DataAbsentReason_ValueCode;

  constructor(data?: PartialMessage<DataAbsentReason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataAbsentReason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: DataAbsentReason_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAbsentReason {
    return new DataAbsentReason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAbsentReason {
    return new DataAbsentReason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAbsentReason {
    return new DataAbsentReason().fromJsonString(jsonString, options);
  }

  static equals(a: DataAbsentReason | PlainMessage<DataAbsentReason> | undefined, b: DataAbsentReason | PlainMessage<DataAbsentReason> | undefined): boolean {
    return proto3.util.equals(DataAbsentReason, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.DataAbsentReason.ValueCode
 */
export class DataAbsentReason_ValueCode extends Message<DataAbsentReason_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.DataAbsentReasonCode.Value value = 1;
   */
  value = DataAbsentReasonCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DataAbsentReason_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataAbsentReason.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DataAbsentReasonCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAbsentReason_ValueCode {
    return new DataAbsentReason_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAbsentReason_ValueCode {
    return new DataAbsentReason_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAbsentReason_ValueCode {
    return new DataAbsentReason_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataAbsentReason_ValueCode | PlainMessage<DataAbsentReason_ValueCode> | undefined, b: DataAbsentReason_ValueCode | PlainMessage<DataAbsentReason_ValueCode> | undefined): boolean {
    return proto3.util.equals(DataAbsentReason_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Timezone Offset.
 * Timezone offset, for dates (no timezone in date).
 * See http://hl7.org/fhir/StructureDefinition/tz-offset
 *
 * @generated from message google.fhir.r4.core.DateTimezoneOffset
 */
export class DateTimezoneOffset extends Message<DateTimezoneOffset> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<DateTimezoneOffset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DateTimezoneOffset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DateTimezoneOffset {
    return new DateTimezoneOffset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DateTimezoneOffset {
    return new DateTimezoneOffset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DateTimezoneOffset {
    return new DateTimezoneOffset().fromJsonString(jsonString, options);
  }

  static equals(a: DateTimezoneOffset | PlainMessage<DateTimezoneOffset> | undefined, b: DateTimezoneOffset | PlainMessage<DateTimezoneOffset> | undefined): boolean {
    return proto3.util.equals(DateTimezoneOffset, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for daysOfCycle.
 * Days on which the action should be performed.
 * See http://hl7.org/fhir/StructureDefinition/timing-daysOfCycle
 *
 * @generated from message google.fhir.r4.core.DaysOfCycle
 */
export class DaysOfCycle extends Message<DaysOfCycle> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * What day to perform
   *
   * @generated from field: repeated google.fhir.r4.core.Integer day = 4;
   */
  day: Integer[] = [];

  constructor(data?: PartialMessage<DaysOfCycle>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DaysOfCycle";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "day", kind: "message", T: Integer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DaysOfCycle {
    return new DaysOfCycle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DaysOfCycle {
    return new DaysOfCycle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DaysOfCycle {
    return new DaysOfCycle().fromJsonString(jsonString, options);
  }

  static equals(a: DaysOfCycle | PlainMessage<DaysOfCycle> | undefined, b: DaysOfCycle | PlainMessage<DaysOfCycle> | undefined): boolean {
    return proto3.util.equals(DaysOfCycle, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for precision.
 * Explicit precision (number of significant decimal places).
 * See http://hl7.org/fhir/StructureDefinition/quantity-precision
 *
 * @generated from message google.fhir.r4.core.DecimalPrecision
 */
export class DecimalPrecision extends Message<DecimalPrecision> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<DecimalPrecision>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DecimalPrecision";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecimalPrecision {
    return new DecimalPrecision().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecimalPrecision {
    return new DecimalPrecision().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecimalPrecision {
    return new DecimalPrecision().fromJsonString(jsonString, options);
  }

  static equals(a: DecimalPrecision | PlainMessage<DecimalPrecision> | undefined, b: DecimalPrecision | PlainMessage<DecimalPrecision> | undefined): boolean {
    return proto3.util.equals(DecimalPrecision, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Design Note.
 * Design comments.
 * See http://hl7.org/fhir/StructureDefinition/designNote
 *
 * @generated from message google.fhir.r4.core.DesignNote
 */
export class DesignNote extends Message<DesignNote> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<DesignNote>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DesignNote";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DesignNote {
    return new DesignNote().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DesignNote {
    return new DesignNote().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DesignNote {
    return new DesignNote().fromJsonString(jsonString, options);
  }

  static equals(a: DesignNote | PlainMessage<DesignNote> | undefined, b: DesignNote | PlainMessage<DesignNote> | undefined): boolean {
    return proto3.util.equals(DesignNote, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for implantStatus.
 * Implant Status.
 * See http://hl7.org/fhir/StructureDefinition/device-implantStatus
 *
 * @generated from message google.fhir.r4.core.DeviceImplantStatus
 */
export class DeviceImplantStatus extends Message<DeviceImplantStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.DeviceImplantStatus.ValueCode value_code = 3;
   */
  valueCode?: DeviceImplantStatus_ValueCode;

  constructor(data?: PartialMessage<DeviceImplantStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceImplantStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: DeviceImplantStatus_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceImplantStatus {
    return new DeviceImplantStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceImplantStatus {
    return new DeviceImplantStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceImplantStatus {
    return new DeviceImplantStatus().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceImplantStatus | PlainMessage<DeviceImplantStatus> | undefined, b: DeviceImplantStatus | PlainMessage<DeviceImplantStatus> | undefined): boolean {
    return proto3.util.equals(DeviceImplantStatus, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.DeviceImplantStatus.ValueCode
 */
export class DeviceImplantStatus_ValueCode extends Message<DeviceImplantStatus_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ImplantStatusCode.Value value = 1;
   */
  value = ImplantStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceImplantStatus_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceImplantStatus.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImplantStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceImplantStatus_ValueCode {
    return new DeviceImplantStatus_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceImplantStatus_ValueCode {
    return new DeviceImplantStatus_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceImplantStatus_ValueCode {
    return new DeviceImplantStatus_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceImplantStatus_ValueCode | PlainMessage<DeviceImplantStatus_ValueCode> | undefined, b: DeviceImplantStatus_ValueCode | PlainMessage<DeviceImplantStatus_ValueCode> | undefined): boolean {
    return proto3.util.equals(DeviceImplantStatus_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for patientInstruction.
 * Patient Friendly Insructions.
 * See http://hl7.org/fhir/StructureDefinition/devicerequest-patientInstruction
 *
 * @generated from message google.fhir.r4.core.DeviceRequestPatientInstruction
 */
export class DeviceRequestPatientInstruction extends Message<DeviceRequestPatientInstruction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Language
   *
   * @generated from field: google.fhir.r4.core.Code lang = 4;
   */
  lang?: Code;

  /**
   * Text
   *
   * @generated from field: google.fhir.r4.core.String content = 5;
   */
  content?: String;

  constructor(data?: PartialMessage<DeviceRequestPatientInstruction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequestPatientInstruction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "lang", kind: "message", T: Code },
    { no: 5, name: "content", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequestPatientInstruction {
    return new DeviceRequestPatientInstruction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequestPatientInstruction {
    return new DeviceRequestPatientInstruction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequestPatientInstruction {
    return new DeviceRequestPatientInstruction().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequestPatientInstruction | PlainMessage<DeviceRequestPatientInstruction> | undefined, b: DeviceRequestPatientInstruction | PlainMessage<DeviceRequestPatientInstruction> | undefined): boolean {
    return proto3.util.equals(DeviceRequestPatientInstruction, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for addendumOf.
 * Additional or Supplement Content.
 * See http://hl7.org/fhir/StructureDefinition/diagnosticReport-addendumOf
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportAddendumOf
 */
export class DiagnosticReportAddendumOf extends Message<DiagnosticReportAddendumOf> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportAddendumOf>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportAddendumOf";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportAddendumOf {
    return new DiagnosticReportAddendumOf().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportAddendumOf {
    return new DiagnosticReportAddendumOf().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportAddendumOf {
    return new DiagnosticReportAddendumOf().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportAddendumOf | PlainMessage<DiagnosticReportAddendumOf> | undefined, b: DiagnosticReportAddendumOf | PlainMessage<DiagnosticReportAddendumOf> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportAddendumOf, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for allele-database.
 * Allele Database.
 * See
 * http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-allele-database
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportAlleleDatabase
 */
export class DiagnosticReportAlleleDatabase extends Message<DiagnosticReportAlleleDatabase> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<DiagnosticReportAlleleDatabase>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportAlleleDatabase";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportAlleleDatabase {
    return new DiagnosticReportAlleleDatabase().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportAlleleDatabase {
    return new DiagnosticReportAlleleDatabase().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportAlleleDatabase {
    return new DiagnosticReportAlleleDatabase().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportAlleleDatabase | PlainMessage<DiagnosticReportAlleleDatabase> | undefined, b: DiagnosticReportAlleleDatabase | PlainMessage<DiagnosticReportAlleleDatabase> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportAlleleDatabase, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Analysis.
 * Analysis.
 * See http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAnalysis
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportAnalysis
 */
export class DiagnosticReportAnalysis extends Message<DiagnosticReportAnalysis> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Analysis type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Analysis interpretation
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept interpretation = 5;
   */
  interpretation?: CodeableConcept;

  constructor(data?: PartialMessage<DiagnosticReportAnalysis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportAnalysis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "interpretation", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportAnalysis {
    return new DiagnosticReportAnalysis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportAnalysis {
    return new DiagnosticReportAnalysis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportAnalysis {
    return new DiagnosticReportAnalysis().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportAnalysis | PlainMessage<DiagnosticReportAnalysis> | undefined, b: DiagnosticReportAnalysis | PlainMessage<DiagnosticReportAnalysis> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportAnalysis, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for AssessedCondition.
 * AssessedCondition.
 * See
 * http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsAssessedCondition
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportAssessedCondition
 */
export class DiagnosticReportAssessedCondition extends Message<DiagnosticReportAssessedCondition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportAssessedCondition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportAssessedCondition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportAssessedCondition {
    return new DiagnosticReportAssessedCondition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportAssessedCondition {
    return new DiagnosticReportAssessedCondition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportAssessedCondition {
    return new DiagnosticReportAssessedCondition().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportAssessedCondition | PlainMessage<DiagnosticReportAssessedCondition> | undefined, b: DiagnosticReportAssessedCondition | PlainMessage<DiagnosticReportAssessedCondition> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportAssessedCondition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for extends.
 * Related reports.
 * See http://hl7.org/fhir/StructureDefinition/diagnosticReport-extends
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportExtends
 */
export class DiagnosticReportExtends extends Message<DiagnosticReportExtends> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportExtends>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportExtends";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportExtends {
    return new DiagnosticReportExtends().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportExtends {
    return new DiagnosticReportExtends().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportExtends {
    return new DiagnosticReportExtends().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportExtends | PlainMessage<DiagnosticReportExtends> | undefined, b: DiagnosticReportExtends | PlainMessage<DiagnosticReportExtends> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportExtends, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for FamilyMemberHistory.
 * FamilyHistory.
 * See
 * http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsFamilyMemberHistory
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportFamilyMemberHistory
 */
export class DiagnosticReportFamilyMemberHistory extends Message<DiagnosticReportFamilyMemberHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportFamilyMemberHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportFamilyMemberHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportFamilyMemberHistory {
    return new DiagnosticReportFamilyMemberHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportFamilyMemberHistory {
    return new DiagnosticReportFamilyMemberHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportFamilyMemberHistory {
    return new DiagnosticReportFamilyMemberHistory().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportFamilyMemberHistory | PlainMessage<DiagnosticReportFamilyMemberHistory> | undefined, b: DiagnosticReportFamilyMemberHistory | PlainMessage<DiagnosticReportFamilyMemberHistory> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportFamilyMemberHistory, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for glstring.
 * glstring.
 * See http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-glstring
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportGlstring
 */
export class DiagnosticReportGlstring extends Message<DiagnosticReportGlstring> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * glstring.url
   *
   * @generated from field: google.fhir.r4.core.Uri url = 4;
   */
  url?: Uri;

  /**
   * glstring.text
   *
   * @generated from field: google.fhir.r4.core.String text = 5;
   */
  text?: String;

  constructor(data?: PartialMessage<DiagnosticReportGlstring>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportGlstring";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "url", kind: "message", T: Uri },
    { no: 5, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportGlstring {
    return new DiagnosticReportGlstring().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportGlstring {
    return new DiagnosticReportGlstring().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportGlstring {
    return new DiagnosticReportGlstring().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportGlstring | PlainMessage<DiagnosticReportGlstring> | undefined, b: DiagnosticReportGlstring | PlainMessage<DiagnosticReportGlstring> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportGlstring, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for haploid.
 * haploid.
 * See http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-haploid
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportHaploid
 */
export class DiagnosticReportHaploid extends Message<DiagnosticReportHaploid> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * haploid-locus
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept locus = 4;
   */
  locus?: CodeableConcept;

  /**
   * haploid-type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * haploid-method
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 6;
   */
  method?: CodeableConcept;

  constructor(data?: PartialMessage<DiagnosticReportHaploid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportHaploid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "locus", kind: "message", T: CodeableConcept },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "method", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportHaploid {
    return new DiagnosticReportHaploid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportHaploid {
    return new DiagnosticReportHaploid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportHaploid {
    return new DiagnosticReportHaploid().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportHaploid | PlainMessage<DiagnosticReportHaploid> | undefined, b: DiagnosticReportHaploid | PlainMessage<DiagnosticReportHaploid> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportHaploid, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Item.
 * The items the orderer requested.
 * See http://hl7.org/fhir/StructureDefinition/servicerequest-geneticsItem
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportItem
 */
export class DiagnosticReportItem extends Message<DiagnosticReportItem> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code to indicate the item (test, panel or sequence variant) being ordered
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Indicate the genetic variant ordered to be tested
   *
   * @generated from field: google.fhir.r4.core.Reference genetics_observation = 5;
   */
  geneticsObservation?: Reference;

  /**
   * If this item relates to specific specimens
   *
   * @generated from field: google.fhir.r4.core.Reference specimen = 6;
   */
  specimen?: Reference;

  /**
   * proposed | draft | planned | requested | received | accepted | in-progress
   * | review | completed | cancelled | suspended | rejected | failed
   *
   * @generated from field: google.fhir.r4.core.Code status = 7;
   */
  status?: Code;

  constructor(data?: PartialMessage<DiagnosticReportItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "genetics_observation", kind: "message", T: Reference },
    { no: 6, name: "specimen", kind: "message", T: Reference },
    { no: 7, name: "status", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportItem {
    return new DiagnosticReportItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportItem {
    return new DiagnosticReportItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportItem {
    return new DiagnosticReportItem().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportItem | PlainMessage<DiagnosticReportItem> | undefined, b: DiagnosticReportItem | PlainMessage<DiagnosticReportItem> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportItem, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for locationPerformed.
 * Location Performed.
 * See
 * http://hl7.org/fhir/StructureDefinition/diagnosticReport-locationPerformed
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportLocationPerformed
 */
export class DiagnosticReportLocationPerformed extends Message<DiagnosticReportLocationPerformed> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportLocationPerformed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportLocationPerformed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportLocationPerformed {
    return new DiagnosticReportLocationPerformed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportLocationPerformed {
    return new DiagnosticReportLocationPerformed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportLocationPerformed {
    return new DiagnosticReportLocationPerformed().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportLocationPerformed | PlainMessage<DiagnosticReportLocationPerformed> | undefined, b: DiagnosticReportLocationPerformed | PlainMessage<DiagnosticReportLocationPerformed> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportLocationPerformed, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for method.
 * The platform, methodology and software applied at the time of the
 * genotyping.
 * See http://hl7.org/fhir/StructureDefinition/hla-genotyping-results-method
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportMethod
 */
export class DiagnosticReportMethod extends Message<DiagnosticReportMethod> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<DiagnosticReportMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportMethod {
    return new DiagnosticReportMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportMethod {
    return new DiagnosticReportMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportMethod {
    return new DiagnosticReportMethod().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportMethod | PlainMessage<DiagnosticReportMethod> | undefined, b: DiagnosticReportMethod | PlainMessage<DiagnosticReportMethod> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportMethod, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for References.
 * Additional bibliographic reference information.
 * See
 * http://hl7.org/fhir/StructureDefinition/DiagnosticReport-geneticsReferences
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportReferences
 */
export class DiagnosticReportReferences extends Message<DiagnosticReportReferences> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Reference description
   *
   * @generated from field: google.fhir.r4.core.String description = 4;
   */
  description?: String;

  /**
   * Reference URI
   *
   * @generated from field: repeated google.fhir.r4.core.Uri reference = 5;
   */
  reference: Uri[] = [];

  /**
   * Reference type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  constructor(data?: PartialMessage<DiagnosticReportReferences>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportReferences";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "reference", kind: "message", T: Uri, repeated: true },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportReferences {
    return new DiagnosticReportReferences().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportReferences {
    return new DiagnosticReportReferences().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportReferences {
    return new DiagnosticReportReferences().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportReferences | PlainMessage<DiagnosticReportReferences> | undefined, b: DiagnosticReportReferences | PlainMessage<DiagnosticReportReferences> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportReferences, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for replaces.
 * Replacement for another report.
 * See http://hl7.org/fhir/StructureDefinition/diagnosticReport-replaces
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportReplaces
 */
export class DiagnosticReportReplaces extends Message<DiagnosticReportReplaces> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportReplaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportReplaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportReplaces {
    return new DiagnosticReportReplaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportReplaces {
    return new DiagnosticReportReplaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportReplaces {
    return new DiagnosticReportReplaces().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportReplaces | PlainMessage<DiagnosticReportReplaces> | undefined, b: DiagnosticReportReplaces | PlainMessage<DiagnosticReportReplaces> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportReplaces, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for summaryOf.
 * Summary Of Other Reports.
 * See http://hl7.org/fhir/StructureDefinition/diagnosticReport-summaryOf
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportSummaryOf
 */
export class DiagnosticReportSummaryOf extends Message<DiagnosticReportSummaryOf> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<DiagnosticReportSummaryOf>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportSummaryOf";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportSummaryOf {
    return new DiagnosticReportSummaryOf().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportSummaryOf {
    return new DiagnosticReportSummaryOf().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportSummaryOf {
    return new DiagnosticReportSummaryOf().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportSummaryOf | PlainMessage<DiagnosticReportSummaryOf> | undefined, b: DiagnosticReportSummaryOf | PlainMessage<DiagnosticReportSummaryOf> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportSummaryOf, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for directedBy.
 * Who has decision-making authority.
 * See http://hl7.org/fhir/StructureDefinition/procedure-directedBy
 *
 * @generated from message google.fhir.r4.core.DirectedBy
 */
export class DirectedBy extends Message<DirectedBy> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.DirectedBy.ValueX value = 3;
   */
  value?: DirectedBy_ValueX;

  constructor(data?: PartialMessage<DirectedBy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DirectedBy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: DirectedBy_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectedBy {
    return new DirectedBy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectedBy {
    return new DirectedBy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectedBy {
    return new DirectedBy().fromJsonString(jsonString, options);
  }

  static equals(a: DirectedBy | PlainMessage<DirectedBy> | undefined, b: DirectedBy | PlainMessage<DirectedBy> | undefined): boolean {
    return proto3.util.equals(DirectedBy, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.DirectedBy.ValueX
 */
export class DirectedBy_ValueX extends Message<DirectedBy_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.DirectedBy.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DirectedBy_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DirectedBy.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectedBy_ValueX {
    return new DirectedBy_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectedBy_ValueX {
    return new DirectedBy_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectedBy_ValueX {
    return new DirectedBy_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: DirectedBy_ValueX | PlainMessage<DirectedBy_ValueX> | undefined, b: DirectedBy_ValueX | PlainMessage<DirectedBy_ValueX> | undefined): boolean {
    return proto3.util.equals(DirectedBy_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for effectivePeriod.
 * The effective date range for the resource.
 * See http://hl7.org/fhir/StructureDefinition/resource-effectivePeriod
 *
 * @generated from message google.fhir.r4.core.EffectivePeriod
 */
export class EffectivePeriod extends Message<EffectivePeriod> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Period value_period = 3;
   */
  valuePeriod?: Period;

  constructor(data?: PartialMessage<EffectivePeriod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EffectivePeriod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EffectivePeriod {
    return new EffectivePeriod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EffectivePeriod {
    return new EffectivePeriod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EffectivePeriod {
    return new EffectivePeriod().fromJsonString(jsonString, options);
  }

  static equals(a: EffectivePeriod | PlainMessage<EffectivePeriod> | undefined, b: EffectivePeriod | PlainMessage<EffectivePeriod> | undefined): boolean {
    return proto3.util.equals(EffectivePeriod, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for allowedUnits.
 * Units to use for measured value.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionAllowedUnits
 */
export class ElementDefinitionAllowedUnits extends Message<ElementDefinitionAllowedUnits> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinitionAllowedUnits.ValueX value = 3;
   */
  value?: ElementDefinitionAllowedUnits_ValueX;

  constructor(data?: PartialMessage<ElementDefinitionAllowedUnits>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionAllowedUnits";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ElementDefinitionAllowedUnits_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionAllowedUnits {
    return new ElementDefinitionAllowedUnits().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionAllowedUnits {
    return new ElementDefinitionAllowedUnits().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionAllowedUnits {
    return new ElementDefinitionAllowedUnits().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionAllowedUnits | PlainMessage<ElementDefinitionAllowedUnits> | undefined, b: ElementDefinitionAllowedUnits | PlainMessage<ElementDefinitionAllowedUnits> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionAllowedUnits, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionAllowedUnits.ValueX
 */
export class ElementDefinitionAllowedUnits_ValueX extends Message<ElementDefinitionAllowedUnits_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinitionAllowedUnits.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 2;
     */
    value: Canonical;
    case: "canonical";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinitionAllowedUnits_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionAllowedUnits.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionAllowedUnits_ValueX {
    return new ElementDefinitionAllowedUnits_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionAllowedUnits_ValueX {
    return new ElementDefinitionAllowedUnits_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionAllowedUnits_ValueX {
    return new ElementDefinitionAllowedUnits_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionAllowedUnits_ValueX | PlainMessage<ElementDefinitionAllowedUnits_ValueX> | undefined, b: ElementDefinitionAllowedUnits_ValueX | PlainMessage<ElementDefinitionAllowedUnits_ValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionAllowedUnits_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for bestpractice.
 * Mark a warning invariant as 'best practice'.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionBestpractice
 */
export class ElementDefinitionBestpractice extends Message<ElementDefinitionBestpractice> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinitionBestpractice.ValueX value = 3;
   */
  value?: ElementDefinitionBestpractice_ValueX;

  constructor(data?: PartialMessage<ElementDefinitionBestpractice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionBestpractice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ElementDefinitionBestpractice_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionBestpractice {
    return new ElementDefinitionBestpractice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionBestpractice {
    return new ElementDefinitionBestpractice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionBestpractice {
    return new ElementDefinitionBestpractice().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionBestpractice | PlainMessage<ElementDefinitionBestpractice> | undefined, b: ElementDefinitionBestpractice | PlainMessage<ElementDefinitionBestpractice> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionBestpractice, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionBestpractice.ValueX
 */
export class ElementDefinitionBestpractice_ValueX extends Message<ElementDefinitionBestpractice_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinitionBestpractice.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinitionBestpractice_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionBestpractice.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionBestpractice_ValueX {
    return new ElementDefinitionBestpractice_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionBestpractice_ValueX {
    return new ElementDefinitionBestpractice_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionBestpractice_ValueX {
    return new ElementDefinitionBestpractice_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionBestpractice_ValueX | PlainMessage<ElementDefinitionBestpractice_ValueX> | undefined, b: ElementDefinitionBestpractice_ValueX | PlainMessage<ElementDefinitionBestpractice_ValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionBestpractice_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for bestpractice-explanation.
 * Explains why an invariant is labelled as best practice.
 * See
 * http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionBestpracticeExplanation
 */
export class ElementDefinitionBestpracticeExplanation extends Message<ElementDefinitionBestpracticeExplanation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<ElementDefinitionBestpracticeExplanation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionBestpracticeExplanation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionBestpracticeExplanation {
    return new ElementDefinitionBestpracticeExplanation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionBestpracticeExplanation {
    return new ElementDefinitionBestpracticeExplanation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionBestpracticeExplanation {
    return new ElementDefinitionBestpracticeExplanation().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionBestpracticeExplanation | PlainMessage<ElementDefinitionBestpracticeExplanation> | undefined, b: ElementDefinitionBestpracticeExplanation | PlainMessage<ElementDefinitionBestpracticeExplanation> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionBestpracticeExplanation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for bindingName.
 * Suggested Name for code generation.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionBindingName
 */
export class ElementDefinitionBindingName extends Message<ElementDefinitionBindingName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ElementDefinitionBindingName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionBindingName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionBindingName {
    return new ElementDefinitionBindingName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionBindingName {
    return new ElementDefinitionBindingName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionBindingName {
    return new ElementDefinitionBindingName().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionBindingName | PlainMessage<ElementDefinitionBindingName> | undefined, b: ElementDefinitionBindingName | PlainMessage<ElementDefinitionBindingName> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionBindingName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for display-hint.
 * Hinting information for the narrative generator.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-display-hint
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionDisplayHint
 */
export class ElementDefinitionDisplayHint extends Message<ElementDefinitionDisplayHint> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ElementDefinitionDisplayHint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionDisplayHint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionDisplayHint {
    return new ElementDefinitionDisplayHint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionDisplayHint {
    return new ElementDefinitionDisplayHint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionDisplayHint {
    return new ElementDefinitionDisplayHint().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionDisplayHint | PlainMessage<ElementDefinitionDisplayHint> | undefined, b: ElementDefinitionDisplayHint | PlainMessage<ElementDefinitionDisplayHint> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionDisplayHint, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for equivalence.
 * equivalent | equal | wider | subsumes | narrower | specializes | inexact |
 * unmatched | disjoint. See
 * http://hl7.org/fhir/StructureDefinition/elementdefinition-equivalence
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionEquivalence
 */
export class ElementDefinitionEquivalence extends Message<ElementDefinitionEquivalence> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinitionEquivalence.ValueCode value_code = 3;
   */
  valueCode?: ElementDefinitionEquivalence_ValueCode;

  constructor(data?: PartialMessage<ElementDefinitionEquivalence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionEquivalence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: ElementDefinitionEquivalence_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionEquivalence {
    return new ElementDefinitionEquivalence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionEquivalence {
    return new ElementDefinitionEquivalence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionEquivalence {
    return new ElementDefinitionEquivalence().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionEquivalence | PlainMessage<ElementDefinitionEquivalence> | undefined, b: ElementDefinitionEquivalence | PlainMessage<ElementDefinitionEquivalence> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionEquivalence, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionEquivalence.ValueCode
 */
export class ElementDefinitionEquivalence_ValueCode extends Message<ElementDefinitionEquivalence_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ConceptMapEquivalenceCode.Value value = 1;
   */
  value = ConceptMapEquivalenceCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinitionEquivalence_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionEquivalence.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConceptMapEquivalenceCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionEquivalence_ValueCode {
    return new ElementDefinitionEquivalence_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionEquivalence_ValueCode {
    return new ElementDefinitionEquivalence_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionEquivalence_ValueCode {
    return new ElementDefinitionEquivalence_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionEquivalence_ValueCode | PlainMessage<ElementDefinitionEquivalence_ValueCode> | undefined, b: ElementDefinitionEquivalence_ValueCode | PlainMessage<ElementDefinitionEquivalence_ValueCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionEquivalence_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for explicit-type-name.
 * Advisory - name of Type for implementations.
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionExplicitTypeName
 */
export class ElementDefinitionExplicitTypeName extends Message<ElementDefinitionExplicitTypeName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ElementDefinitionExplicitTypeName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionExplicitTypeName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionExplicitTypeName {
    return new ElementDefinitionExplicitTypeName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionExplicitTypeName {
    return new ElementDefinitionExplicitTypeName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionExplicitTypeName {
    return new ElementDefinitionExplicitTypeName().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionExplicitTypeName | PlainMessage<ElementDefinitionExplicitTypeName> | undefined, b: ElementDefinitionExplicitTypeName | PlainMessage<ElementDefinitionExplicitTypeName> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionExplicitTypeName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for fhir-type.
 * FHIR type for value property - when a simple system type.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionFhirType
 */
export class ElementDefinitionFhirType extends Message<ElementDefinitionFhirType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Url value_url = 3;
   */
  valueUrl?: Url;

  constructor(data?: PartialMessage<ElementDefinitionFhirType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionFhirType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_url", kind: "message", T: Url },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionFhirType {
    return new ElementDefinitionFhirType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionFhirType {
    return new ElementDefinitionFhirType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionFhirType {
    return new ElementDefinitionFhirType().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionFhirType | PlainMessage<ElementDefinitionFhirType> | undefined, b: ElementDefinitionFhirType | PlainMessage<ElementDefinitionFhirType> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionFhirType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for hierarchy.
 * Whether a circular reference is allowed to (transitively) point back to the
 * same instance. See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-hierarchy
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionHierarchy
 */
export class ElementDefinitionHierarchy extends Message<ElementDefinitionHierarchy> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ElementDefinitionHierarchy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionHierarchy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionHierarchy {
    return new ElementDefinitionHierarchy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionHierarchy {
    return new ElementDefinitionHierarchy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionHierarchy {
    return new ElementDefinitionHierarchy().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionHierarchy | PlainMessage<ElementDefinitionHierarchy> | undefined, b: ElementDefinitionHierarchy | PlainMessage<ElementDefinitionHierarchy> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionHierarchy, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for identifier.
 * External Identifier associated with this element.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-identifier
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionIdentifier
 */
export class ElementDefinitionIdentifier extends Message<ElementDefinitionIdentifier> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Identifier value_identifier = 3;
   */
  valueIdentifier?: Identifier;

  constructor(data?: PartialMessage<ElementDefinitionIdentifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionIdentifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionIdentifier {
    return new ElementDefinitionIdentifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionIdentifier {
    return new ElementDefinitionIdentifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionIdentifier {
    return new ElementDefinitionIdentifier().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionIdentifier | PlainMessage<ElementDefinitionIdentifier> | undefined, b: ElementDefinitionIdentifier | PlainMessage<ElementDefinitionIdentifier> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionIdentifier, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for inheritedExtensibleValueSet.
 * An extensible Value Set specified in a parent profile.
 * See
 * http://hl7.org/fhir/StructureDefinition/elementdefinition-inheritedExtensibleValueSet
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionInheritedExtensibleValueSet
 */
export class ElementDefinitionInheritedExtensibleValueSet extends Message<ElementDefinitionInheritedExtensibleValueSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinitionInheritedExtensibleValueSet.ValueX value = 3;
   */
  value?: ElementDefinitionInheritedExtensibleValueSet_ValueX;

  constructor(data?: PartialMessage<ElementDefinitionInheritedExtensibleValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionInheritedExtensibleValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ElementDefinitionInheritedExtensibleValueSet_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionInheritedExtensibleValueSet {
    return new ElementDefinitionInheritedExtensibleValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionInheritedExtensibleValueSet {
    return new ElementDefinitionInheritedExtensibleValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionInheritedExtensibleValueSet {
    return new ElementDefinitionInheritedExtensibleValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionInheritedExtensibleValueSet | PlainMessage<ElementDefinitionInheritedExtensibleValueSet> | undefined, b: ElementDefinitionInheritedExtensibleValueSet | PlainMessage<ElementDefinitionInheritedExtensibleValueSet> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionInheritedExtensibleValueSet, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionInheritedExtensibleValueSet.ValueX
 */
export class ElementDefinitionInheritedExtensibleValueSet_ValueX extends Message<ElementDefinitionInheritedExtensibleValueSet_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinitionInheritedExtensibleValueSet.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 2;
     */
    value: Canonical;
    case: "canonical";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinitionInheritedExtensibleValueSet_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionInheritedExtensibleValueSet.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 2, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionInheritedExtensibleValueSet_ValueX {
    return new ElementDefinitionInheritedExtensibleValueSet_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionInheritedExtensibleValueSet_ValueX {
    return new ElementDefinitionInheritedExtensibleValueSet_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionInheritedExtensibleValueSet_ValueX {
    return new ElementDefinitionInheritedExtensibleValueSet_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionInheritedExtensibleValueSet_ValueX | PlainMessage<ElementDefinitionInheritedExtensibleValueSet_ValueX> | undefined, b: ElementDefinitionInheritedExtensibleValueSet_ValueX | PlainMessage<ElementDefinitionInheritedExtensibleValueSet_ValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionInheritedExtensibleValueSet_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for isCommonBinding.
 * Whether used on multiple resources.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionIsCommonBinding
 */
export class ElementDefinitionIsCommonBinding extends Message<ElementDefinitionIsCommonBinding> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ElementDefinitionIsCommonBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionIsCommonBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionIsCommonBinding {
    return new ElementDefinitionIsCommonBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionIsCommonBinding {
    return new ElementDefinitionIsCommonBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionIsCommonBinding {
    return new ElementDefinitionIsCommonBinding().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionIsCommonBinding | PlainMessage<ElementDefinitionIsCommonBinding> | undefined, b: ElementDefinitionIsCommonBinding | PlainMessage<ElementDefinitionIsCommonBinding> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionIsCommonBinding, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for maxValueSet.
 * Maximum Value Set (when strength = extensible).
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionMaxValueSet
 */
export class ElementDefinitionMaxValueSet extends Message<ElementDefinitionMaxValueSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinitionMaxValueSet.ValueX value = 3;
   */
  value?: ElementDefinitionMaxValueSet_ValueX;

  constructor(data?: PartialMessage<ElementDefinitionMaxValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionMaxValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ElementDefinitionMaxValueSet_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionMaxValueSet {
    return new ElementDefinitionMaxValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionMaxValueSet {
    return new ElementDefinitionMaxValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionMaxValueSet {
    return new ElementDefinitionMaxValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionMaxValueSet | PlainMessage<ElementDefinitionMaxValueSet> | undefined, b: ElementDefinitionMaxValueSet | PlainMessage<ElementDefinitionMaxValueSet> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionMaxValueSet, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionMaxValueSet.ValueX
 */
export class ElementDefinitionMaxValueSet_ValueX extends Message<ElementDefinitionMaxValueSet_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinitionMaxValueSet.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 2;
     */
    value: Canonical;
    case: "canonical";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinitionMaxValueSet_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionMaxValueSet.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 2, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionMaxValueSet_ValueX {
    return new ElementDefinitionMaxValueSet_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionMaxValueSet_ValueX {
    return new ElementDefinitionMaxValueSet_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionMaxValueSet_ValueX {
    return new ElementDefinitionMaxValueSet_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionMaxValueSet_ValueX | PlainMessage<ElementDefinitionMaxValueSet_ValueX> | undefined, b: ElementDefinitionMaxValueSet_ValueX | PlainMessage<ElementDefinitionMaxValueSet_ValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionMaxValueSet_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for minValueSet.
 * Minimum Value Set (what system must support).
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-minValueSet
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionMinValueSet
 */
export class ElementDefinitionMinValueSet extends Message<ElementDefinitionMinValueSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinitionMinValueSet.ValueX value = 3;
   */
  value?: ElementDefinitionMinValueSet_ValueX;

  constructor(data?: PartialMessage<ElementDefinitionMinValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionMinValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: ElementDefinitionMinValueSet_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionMinValueSet {
    return new ElementDefinitionMinValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionMinValueSet {
    return new ElementDefinitionMinValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionMinValueSet {
    return new ElementDefinitionMinValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionMinValueSet | PlainMessage<ElementDefinitionMinValueSet> | undefined, b: ElementDefinitionMinValueSet | PlainMessage<ElementDefinitionMinValueSet> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionMinValueSet, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionMinValueSet.ValueX
 */
export class ElementDefinitionMinValueSet_ValueX extends Message<ElementDefinitionMinValueSet_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinitionMinValueSet.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 1;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 2;
     */
    value: Canonical;
    case: "canonical";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinitionMinValueSet_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionMinValueSet.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 2, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionMinValueSet_ValueX {
    return new ElementDefinitionMinValueSet_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionMinValueSet_ValueX {
    return new ElementDefinitionMinValueSet_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionMinValueSet_ValueX {
    return new ElementDefinitionMinValueSet_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionMinValueSet_ValueX | PlainMessage<ElementDefinitionMinValueSet_ValueX> | undefined, b: ElementDefinitionMinValueSet_ValueX | PlainMessage<ElementDefinitionMinValueSet_ValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionMinValueSet_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for objectClass.
 * Object Class.
 * See http://hl7.org/fhir/StructureDefinition/11179-objectClass
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionObjectClass
 */
export class ElementDefinitionObjectClass extends Message<ElementDefinitionObjectClass> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<ElementDefinitionObjectClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionObjectClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionObjectClass {
    return new ElementDefinitionObjectClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionObjectClass {
    return new ElementDefinitionObjectClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionObjectClass {
    return new ElementDefinitionObjectClass().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionObjectClass | PlainMessage<ElementDefinitionObjectClass> | undefined, b: ElementDefinitionObjectClass | PlainMessage<ElementDefinitionObjectClass> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionObjectClass, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for objectClassProperty.
 * Object Class Property.
 * See http://hl7.org/fhir/StructureDefinition/11179-objectClassProperty
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionObjectClassProperty
 */
export class ElementDefinitionObjectClassProperty extends Message<ElementDefinitionObjectClassProperty> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<ElementDefinitionObjectClassProperty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionObjectClassProperty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionObjectClassProperty {
    return new ElementDefinitionObjectClassProperty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionObjectClassProperty {
    return new ElementDefinitionObjectClassProperty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionObjectClassProperty {
    return new ElementDefinitionObjectClassProperty().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionObjectClassProperty | PlainMessage<ElementDefinitionObjectClassProperty> | undefined, b: ElementDefinitionObjectClassProperty | PlainMessage<ElementDefinitionObjectClassProperty> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionObjectClassProperty, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for profile-element.
 * Specific element for profile (for backbone elements).
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-profile-element
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionProfileElement
 */
export class ElementDefinitionProfileElement extends Message<ElementDefinitionProfileElement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ElementDefinitionProfileElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionProfileElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionProfileElement {
    return new ElementDefinitionProfileElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionProfileElement {
    return new ElementDefinitionProfileElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionProfileElement {
    return new ElementDefinitionProfileElement().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionProfileElement | PlainMessage<ElementDefinitionProfileElement> | undefined, b: ElementDefinitionProfileElement | PlainMessage<ElementDefinitionProfileElement> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionProfileElement, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for question.
 * Prompt for element phrased as question.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-question
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionQuestion
 */
export class ElementDefinitionQuestion extends Message<ElementDefinitionQuestion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ElementDefinitionQuestion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionQuestion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionQuestion {
    return new ElementDefinitionQuestion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionQuestion {
    return new ElementDefinitionQuestion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionQuestion {
    return new ElementDefinitionQuestion().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionQuestion | PlainMessage<ElementDefinitionQuestion> | undefined, b: ElementDefinitionQuestion | PlainMessage<ElementDefinitionQuestion> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionQuestion, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for selector.
 * FHIRPath that defines the selection criteria for a slice.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-selector
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionSelector
 */
export class ElementDefinitionSelector extends Message<ElementDefinitionSelector> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ElementDefinitionSelector>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionSelector";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionSelector {
    return new ElementDefinitionSelector().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionSelector {
    return new ElementDefinitionSelector().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionSelector {
    return new ElementDefinitionSelector().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionSelector | PlainMessage<ElementDefinitionSelector> | undefined, b: ElementDefinitionSelector | PlainMessage<ElementDefinitionSelector> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionSelector, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for translatable.
 * Whether translations apply to this element.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable
 *
 * @generated from message google.fhir.r4.core.ElementDefinitionTranslatable
 */
export class ElementDefinitionTranslatable extends Message<ElementDefinitionTranslatable> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ElementDefinitionTranslatable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinitionTranslatable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinitionTranslatable {
    return new ElementDefinitionTranslatable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinitionTranslatable {
    return new ElementDefinitionTranslatable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinitionTranslatable {
    return new ElementDefinitionTranslatable().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinitionTranslatable | PlainMessage<ElementDefinitionTranslatable> | undefined, b: ElementDefinitionTranslatable | PlainMessage<ElementDefinitionTranslatable> | undefined): boolean {
    return proto3.util.equals(ElementDefinitionTranslatable, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for associatedEncounter.
 * Associated Encounter.
 * See http://hl7.org/fhir/StructureDefinition/encounter-associatedEncounter
 *
 * @generated from message google.fhir.r4.core.EncounterAssociatedEncounter
 */
export class EncounterAssociatedEncounter extends Message<EncounterAssociatedEncounter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<EncounterAssociatedEncounter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EncounterAssociatedEncounter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterAssociatedEncounter {
    return new EncounterAssociatedEncounter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterAssociatedEncounter {
    return new EncounterAssociatedEncounter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterAssociatedEncounter {
    return new EncounterAssociatedEncounter().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterAssociatedEncounter | PlainMessage<EncounterAssociatedEncounter> | undefined, b: EncounterAssociatedEncounter | PlainMessage<EncounterAssociatedEncounter> | undefined): boolean {
    return proto3.util.equals(EncounterAssociatedEncounter, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for modeOfArrival.
 * The method of arrival of the patient into the facility.
 * See http://hl7.org/fhir/StructureDefinition/encounter-modeOfArrival
 *
 * @generated from message google.fhir.r4.core.EncounterModeOfArrival
 */
export class EncounterModeOfArrival extends Message<EncounterModeOfArrival> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<EncounterModeOfArrival>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EncounterModeOfArrival";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterModeOfArrival {
    return new EncounterModeOfArrival().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterModeOfArrival {
    return new EncounterModeOfArrival().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterModeOfArrival {
    return new EncounterModeOfArrival().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterModeOfArrival | PlainMessage<EncounterModeOfArrival> | undefined, b: EncounterModeOfArrival | PlainMessage<EncounterModeOfArrival> | undefined): boolean {
    return proto3.util.equals(EncounterModeOfArrival, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reasonCancelled.
 * Explanation for cancellation.
 * See http://hl7.org/fhir/StructureDefinition/encounter-reasonCancelled
 *
 * @generated from message google.fhir.r4.core.EncounterReasonCancelled
 */
export class EncounterReasonCancelled extends Message<EncounterReasonCancelled> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<EncounterReasonCancelled>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EncounterReasonCancelled";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterReasonCancelled {
    return new EncounterReasonCancelled().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterReasonCancelled {
    return new EncounterReasonCancelled().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterReasonCancelled {
    return new EncounterReasonCancelled().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterReasonCancelled | PlainMessage<EncounterReasonCancelled> | undefined, b: EncounterReasonCancelled | PlainMessage<EncounterReasonCancelled> | undefined): boolean {
    return proto3.util.equals(EncounterReasonCancelled, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for entryFormat.
 * User prompt for format.
 * See http://hl7.org/fhir/StructureDefinition/entryFormat
 *
 * @generated from message google.fhir.r4.core.EntryFormat
 */
export class EntryFormat extends Message<EntryFormat> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<EntryFormat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EntryFormat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EntryFormat {
    return new EntryFormat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EntryFormat {
    return new EntryFormat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EntryFormat {
    return new EntryFormat().fromJsonString(jsonString, options);
  }

  static equals(a: EntryFormat | PlainMessage<EntryFormat> | undefined, b: EntryFormat | PlainMessage<EntryFormat> | undefined): boolean {
    return proto3.util.equals(EntryFormat, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for episodeOfCare.
 * Associated Encounter episode of care.
 * See http://hl7.org/fhir/StructureDefinition/workflow-episodeOfCare
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCareExtension
 */
export class EpisodeOfCareExtension extends Message<EpisodeOfCareExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<EpisodeOfCareExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCareExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCareExtension {
    return new EpisodeOfCareExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCareExtension {
    return new EpisodeOfCareExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCareExtension {
    return new EpisodeOfCareExtension().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCareExtension | PlainMessage<EpisodeOfCareExtension> | undefined, b: EpisodeOfCareExtension | PlainMessage<EpisodeOfCareExtension> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCareExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for eventHistory.
 * Events of interest in the resource lifecycle.
 * See http://hl7.org/fhir/StructureDefinition/event-eventHistory
 *
 * @generated from message google.fhir.r4.core.EventHistory
 */
export class EventHistory extends Message<EventHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<EventHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EventHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventHistory {
    return new EventHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventHistory {
    return new EventHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventHistory {
    return new EventHistory().fromJsonString(jsonString, options);
  }

  static equals(a: EventHistory | PlainMessage<EventHistory> | undefined, b: EventHistory | PlainMessage<EventHistory> | undefined): boolean {
    return proto3.util.equals(EventHistory, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for abatement.
 * When (or if) the family member's condition resolved.
 * See http://hl7.org/fhir/StructureDefinition/familymemberhistory-abatement
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistoryAbatement
 */
export class FamilyMemberHistoryAbatement extends Message<FamilyMemberHistoryAbatement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.FamilyMemberHistoryAbatement.ValueX value = 3;
   */
  value?: FamilyMemberHistoryAbatement_ValueX;

  constructor(data?: PartialMessage<FamilyMemberHistoryAbatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistoryAbatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: FamilyMemberHistoryAbatement_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistoryAbatement {
    return new FamilyMemberHistoryAbatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistoryAbatement {
    return new FamilyMemberHistoryAbatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistoryAbatement {
    return new FamilyMemberHistoryAbatement().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistoryAbatement | PlainMessage<FamilyMemberHistoryAbatement> | undefined, b: FamilyMemberHistoryAbatement | PlainMessage<FamilyMemberHistoryAbatement> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistoryAbatement, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistoryAbatement.ValueX
 */
export class FamilyMemberHistoryAbatement_ValueX extends Message<FamilyMemberHistoryAbatement_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.FamilyMemberHistoryAbatement.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 3;
     */
    value: Boolean;
    case: "boolean";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<FamilyMemberHistoryAbatement_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistoryAbatement.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 3, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistoryAbatement_ValueX {
    return new FamilyMemberHistoryAbatement_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistoryAbatement_ValueX {
    return new FamilyMemberHistoryAbatement_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistoryAbatement_ValueX {
    return new FamilyMemberHistoryAbatement_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistoryAbatement_ValueX | PlainMessage<FamilyMemberHistoryAbatement_ValueX> | undefined, b: FamilyMemberHistoryAbatement_ValueX | PlainMessage<FamilyMemberHistoryAbatement_ValueX> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistoryAbatement_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for observation.
 * Genetic markers, ethnicity, etc.
 * See
 * http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-observation
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistoryObservation
 */
export class FamilyMemberHistoryObservation extends Message<FamilyMemberHistoryObservation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<FamilyMemberHistoryObservation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistoryObservation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistoryObservation {
    return new FamilyMemberHistoryObservation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistoryObservation {
    return new FamilyMemberHistoryObservation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistoryObservation {
    return new FamilyMemberHistoryObservation().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistoryObservation | PlainMessage<FamilyMemberHistoryObservation> | undefined, b: FamilyMemberHistoryObservation | PlainMessage<FamilyMemberHistoryObservation> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistoryObservation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for parent.
 * Mother(s) & Father(s) - genetic & other.
 * See
 * http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-parent
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistoryParent
 */
export class FamilyMemberHistoryParent extends Message<FamilyMemberHistoryParent> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * mother | father | adoptive mother | etc.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Link to parent relative(s)
   *
   * @generated from field: google.fhir.r4.core.Reference reference = 5;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<FamilyMemberHistoryParent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistoryParent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistoryParent {
    return new FamilyMemberHistoryParent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistoryParent {
    return new FamilyMemberHistoryParent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistoryParent {
    return new FamilyMemberHistoryParent().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistoryParent | PlainMessage<FamilyMemberHistoryParent> | undefined, b: FamilyMemberHistoryParent | PlainMessage<FamilyMemberHistoryParent> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistoryParent, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for patient-record.
 * Link to patient record.
 * See
 * http://hl7.org/fhir/StructureDefinition/familymemberhistory-patient-record
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistoryPatientRecord
 */
export class FamilyMemberHistoryPatientRecord extends Message<FamilyMemberHistoryPatientRecord> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<FamilyMemberHistoryPatientRecord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistoryPatientRecord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistoryPatientRecord {
    return new FamilyMemberHistoryPatientRecord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistoryPatientRecord {
    return new FamilyMemberHistoryPatientRecord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistoryPatientRecord {
    return new FamilyMemberHistoryPatientRecord().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistoryPatientRecord | PlainMessage<FamilyMemberHistoryPatientRecord> | undefined, b: FamilyMemberHistoryPatientRecord | PlainMessage<FamilyMemberHistoryPatientRecord> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistoryPatientRecord, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for severity.
 * The seriousness of the family member condition.
 * See http://hl7.org/fhir/StructureDefinition/familymemberhistory-severity
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistorySeverity
 */
export class FamilyMemberHistorySeverity extends Message<FamilyMemberHistorySeverity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<FamilyMemberHistorySeverity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistorySeverity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistorySeverity {
    return new FamilyMemberHistorySeverity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistorySeverity {
    return new FamilyMemberHistorySeverity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistorySeverity {
    return new FamilyMemberHistorySeverity().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistorySeverity | PlainMessage<FamilyMemberHistorySeverity> | undefined, b: FamilyMemberHistorySeverity | PlainMessage<FamilyMemberHistorySeverity> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistorySeverity, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sibling.
 * natural brother(s) & natural sister(s) - genetic & other.
 * See
 * http://hl7.org/fhir/StructureDefinition/family-member-history-genetics-sibling
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistorySibling
 */
export class FamilyMemberHistorySibling extends Message<FamilyMemberHistorySibling> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * sibling | brother | sister | etc.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Link to sibling relative(s)
   *
   * @generated from field: google.fhir.r4.core.Reference reference = 5;
   */
  reference?: Reference;

  constructor(data?: PartialMessage<FamilyMemberHistorySibling>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistorySibling";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistorySibling {
    return new FamilyMemberHistorySibling().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistorySibling {
    return new FamilyMemberHistorySibling().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistorySibling {
    return new FamilyMemberHistorySibling().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistorySibling | PlainMessage<FamilyMemberHistorySibling> | undefined, b: FamilyMemberHistorySibling | PlainMessage<FamilyMemberHistorySibling> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistorySibling, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for type.
 * Purpose of the family member history.
 * See http://hl7.org/fhir/StructureDefinition/familymemberhistory-type
 *
 * @generated from message google.fhir.r4.core.FamilyMemberHistoryType
 */
export class FamilyMemberHistoryType extends Message<FamilyMemberHistoryType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<FamilyMemberHistoryType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyMemberHistoryType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyMemberHistoryType {
    return new FamilyMemberHistoryType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyMemberHistoryType {
    return new FamilyMemberHistoryType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyMemberHistoryType {
    return new FamilyMemberHistoryType().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyMemberHistoryType | PlainMessage<FamilyMemberHistoryType> | undefined, b: FamilyMemberHistoryType | PlainMessage<FamilyMemberHistoryType> | undefined): boolean {
    return proto3.util.equals(FamilyMemberHistoryType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for detail.
 * Resource with details for flag.
 * See http://hl7.org/fhir/StructureDefinition/flag-detail
 *
 * @generated from message google.fhir.r4.core.FlagDetail
 */
export class FlagDetail extends Message<FlagDetail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<FlagDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FlagDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagDetail {
    return new FlagDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagDetail {
    return new FlagDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagDetail {
    return new FlagDetail().fromJsonString(jsonString, options);
  }

  static equals(a: FlagDetail | PlainMessage<FlagDetail> | undefined, b: FlagDetail | PlainMessage<FlagDetail> | undefined): boolean {
    return proto3.util.equals(FlagDetail, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for priority.
 * An alarm code.
 * See http://hl7.org/fhir/StructureDefinition/flag-priority
 *
 * @generated from message google.fhir.r4.core.FlagPriority
 */
export class FlagPriority extends Message<FlagPriority> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<FlagPriority>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FlagPriority";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagPriority {
    return new FlagPriority().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagPriority {
    return new FlagPriority().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagPriority {
    return new FlagPriority().fromJsonString(jsonString, options);
  }

  static equals(a: FlagPriority | PlainMessage<FlagPriority> | undefined, b: FlagPriority | PlainMessage<FlagPriority> | undefined): boolean {
    return proto3.util.equals(FlagPriority, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for fmm.
 * FMM Level.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm
 *
 * @generated from message google.fhir.r4.core.Fmm
 */
export class Fmm extends Message<Fmm> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<Fmm>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Fmm";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Fmm {
    return new Fmm().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Fmm {
    return new Fmm().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Fmm {
    return new Fmm().fromJsonString(jsonString, options);
  }

  static equals(a: Fmm | PlainMessage<Fmm> | undefined, b: Fmm | PlainMessage<Fmm> | undefined): boolean {
    return proto3.util.equals(Fmm, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for acceptance.
 * Individual acceptance of goal.
 * See http://hl7.org/fhir/StructureDefinition/goal-acceptance
 *
 * @generated from message google.fhir.r4.core.GoalAcceptance
 */
export class GoalAcceptance extends Message<GoalAcceptance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Individual whose acceptance is reflected
   *
   * @generated from field: google.fhir.r4.core.Reference individual = 4;
   */
  individual?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.GoalAcceptance.StatusCode status = 5;
   */
  status?: GoalAcceptance_StatusCode;

  /**
   * Priority of goal for individual
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 6;
   */
  priority?: CodeableConcept;

  constructor(data?: PartialMessage<GoalAcceptance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GoalAcceptance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "individual", kind: "message", T: Reference },
    { no: 5, name: "status", kind: "message", T: GoalAcceptance_StatusCode },
    { no: 6, name: "priority", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalAcceptance {
    return new GoalAcceptance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalAcceptance {
    return new GoalAcceptance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalAcceptance {
    return new GoalAcceptance().fromJsonString(jsonString, options);
  }

  static equals(a: GoalAcceptance | PlainMessage<GoalAcceptance> | undefined, b: GoalAcceptance | PlainMessage<GoalAcceptance> | undefined): boolean {
    return proto3.util.equals(GoalAcceptance, a, b);
  }
}

/**
 * agree | disagree | pending
 *
 * @generated from message google.fhir.r4.core.GoalAcceptance.StatusCode
 */
export class GoalAcceptance_StatusCode extends Message<GoalAcceptance_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.GoalAcceptanceStatusCode.Value value = 1;
   */
  value = GoalAcceptanceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<GoalAcceptance_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GoalAcceptance.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GoalAcceptanceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalAcceptance_StatusCode {
    return new GoalAcceptance_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalAcceptance_StatusCode {
    return new GoalAcceptance_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalAcceptance_StatusCode {
    return new GoalAcceptance_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalAcceptance_StatusCode | PlainMessage<GoalAcceptance_StatusCode> | undefined, b: GoalAcceptance_StatusCode | PlainMessage<GoalAcceptance_StatusCode> | undefined): boolean {
    return proto3.util.equals(GoalAcceptance_StatusCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reasonRejected.
 * The reason the goal was not accepted.
 * See http://hl7.org/fhir/StructureDefinition/goal-reasonRejected
 *
 * @generated from message google.fhir.r4.core.GoalReasonRejected
 */
export class GoalReasonRejected extends Message<GoalReasonRejected> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<GoalReasonRejected>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GoalReasonRejected";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalReasonRejected {
    return new GoalReasonRejected().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalReasonRejected {
    return new GoalReasonRejected().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalReasonRejected {
    return new GoalReasonRejected().fromJsonString(jsonString, options);
  }

  static equals(a: GoalReasonRejected | PlainMessage<GoalReasonRejected> | undefined, b: GoalReasonRejected | PlainMessage<GoalReasonRejected> | undefined): boolean {
    return proto3.util.equals(GoalReasonRejected, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for relationship.
 * Goals related to this Goal.
 * See http://hl7.org/fhir/StructureDefinition/goal-relationship
 *
 * @generated from message google.fhir.r4.core.GoalRelationship
 */
export class GoalRelationship extends Message<GoalRelationship> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * predecessor | successor | replacement | other
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Related goal
   *
   * @generated from field: google.fhir.r4.core.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<GoalRelationship>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GoalRelationship";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalRelationship {
    return new GoalRelationship().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalRelationship {
    return new GoalRelationship().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalRelationship {
    return new GoalRelationship().fromJsonString(jsonString, options);
  }

  static equals(a: GoalRelationship | PlainMessage<GoalRelationship> | undefined, b: GoalRelationship | PlainMessage<GoalRelationship> | undefined): boolean {
    return proto3.util.equals(GoalRelationship, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Human Language.
 * Human Language for the item.
 * See http://hl7.org/fhir/StructureDefinition/language
 *
 * @generated from message google.fhir.r4.core.HumanLanguage
 */
export class HumanLanguage extends Message<HumanLanguage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Code value_code = 3;
   */
  valueCode?: Code;

  constructor(data?: PartialMessage<HumanLanguage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanLanguage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanLanguage {
    return new HumanLanguage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanLanguage {
    return new HumanLanguage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanLanguage {
    return new HumanLanguage().fromJsonString(jsonString, options);
  }

  static equals(a: HumanLanguage | PlainMessage<HumanLanguage> | undefined, b: HumanLanguage | PlainMessage<HumanLanguage> | undefined): boolean {
    return proto3.util.equals(HumanLanguage, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for assembly-order.
 * Preferred display order of name parts.
 * See http://hl7.org/fhir/StructureDefinition/humanname-assembly-order
 *
 * @generated from message google.fhir.r4.core.HumanNameAssemblyOrder
 */
export class HumanNameAssemblyOrder extends Message<HumanNameAssemblyOrder> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.HumanNameAssemblyOrder.ValueCode value_code = 3;
   */
  valueCode?: HumanNameAssemblyOrder_ValueCode;

  constructor(data?: PartialMessage<HumanNameAssemblyOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameAssemblyOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: HumanNameAssemblyOrder_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameAssemblyOrder {
    return new HumanNameAssemblyOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrder {
    return new HumanNameAssemblyOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrder {
    return new HumanNameAssemblyOrder().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameAssemblyOrder | PlainMessage<HumanNameAssemblyOrder> | undefined, b: HumanNameAssemblyOrder | PlainMessage<HumanNameAssemblyOrder> | undefined): boolean {
    return proto3.util.equals(HumanNameAssemblyOrder, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.HumanNameAssemblyOrder.ValueCode
 */
export class HumanNameAssemblyOrder_ValueCode extends Message<HumanNameAssemblyOrder_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.HumanNameAssemblyOrderValueSet.Value value = 1;
   */
  value = HumanNameAssemblyOrderValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HumanNameAssemblyOrder_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameAssemblyOrder.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(HumanNameAssemblyOrderValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameAssemblyOrder_ValueCode {
    return new HumanNameAssemblyOrder_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrder_ValueCode {
    return new HumanNameAssemblyOrder_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrder_ValueCode {
    return new HumanNameAssemblyOrder_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameAssemblyOrder_ValueCode | PlainMessage<HumanNameAssemblyOrder_ValueCode> | undefined, b: HumanNameAssemblyOrder_ValueCode | PlainMessage<HumanNameAssemblyOrder_ValueCode> | undefined): boolean {
    return proto3.util.equals(HumanNameAssemblyOrder_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EN-qualifier.
 * LS | AC | NB | PR | HON | BR | AD | SP | MID | CL | IN | VV.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier
 *
 * @generated from message google.fhir.r4.core.HumanNameENQualifier
 */
export class HumanNameENQualifier extends Message<HumanNameENQualifier> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.HumanNameENQualifier.ValueCode value_code = 3;
   */
  valueCode?: HumanNameENQualifier_ValueCode;

  constructor(data?: PartialMessage<HumanNameENQualifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameENQualifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: HumanNameENQualifier_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameENQualifier {
    return new HumanNameENQualifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameENQualifier {
    return new HumanNameENQualifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameENQualifier {
    return new HumanNameENQualifier().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameENQualifier | PlainMessage<HumanNameENQualifier> | undefined, b: HumanNameENQualifier | PlainMessage<HumanNameENQualifier> | undefined): boolean {
    return proto3.util.equals(HumanNameENQualifier, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.HumanNameENQualifier.ValueCode
 */
export class HumanNameENQualifier_ValueCode extends Message<HumanNameENQualifier_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.EntityNamePartQualifierValueSet.Value value = 1;
   */
  value = EntityNamePartQualifierValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HumanNameENQualifier_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameENQualifier.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EntityNamePartQualifierValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameENQualifier_ValueCode {
    return new HumanNameENQualifier_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameENQualifier_ValueCode {
    return new HumanNameENQualifier_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameENQualifier_ValueCode {
    return new HumanNameENQualifier_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameENQualifier_ValueCode | PlainMessage<HumanNameENQualifier_ValueCode> | undefined, b: HumanNameENQualifier_ValueCode | PlainMessage<HumanNameENQualifier_ValueCode> | undefined): boolean {
    return proto3.util.equals(HumanNameENQualifier_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EN-representation.
 * ABC | IDE | SYL.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-EN-representation
 *
 * @generated from message google.fhir.r4.core.HumanNameENRepresentation
 */
export class HumanNameENRepresentation extends Message<HumanNameENRepresentation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.HumanNameENRepresentation.ValueCode value_code = 3;
   */
  valueCode?: HumanNameENRepresentation_ValueCode;

  constructor(data?: PartialMessage<HumanNameENRepresentation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameENRepresentation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: HumanNameENRepresentation_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameENRepresentation {
    return new HumanNameENRepresentation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameENRepresentation {
    return new HumanNameENRepresentation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameENRepresentation {
    return new HumanNameENRepresentation().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameENRepresentation | PlainMessage<HumanNameENRepresentation> | undefined, b: HumanNameENRepresentation | PlainMessage<HumanNameENRepresentation> | undefined): boolean {
    return proto3.util.equals(HumanNameENRepresentation, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.HumanNameENRepresentation.ValueCode
 */
export class HumanNameENRepresentation_ValueCode extends Message<HumanNameENRepresentation_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.NameRepresentationUseValueSet.Value value = 1;
   */
  value = NameRepresentationUseValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HumanNameENRepresentation_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameENRepresentation.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NameRepresentationUseValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameENRepresentation_ValueCode {
    return new HumanNameENRepresentation_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameENRepresentation_ValueCode {
    return new HumanNameENRepresentation_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameENRepresentation_ValueCode {
    return new HumanNameENRepresentation_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameENRepresentation_ValueCode | PlainMessage<HumanNameENRepresentation_ValueCode> | undefined, b: HumanNameENRepresentation_ValueCode | PlainMessage<HumanNameENRepresentation_ValueCode> | undefined): boolean {
    return proto3.util.equals(HumanNameENRepresentation_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for EN-use.
 * A | ANON | I | P | R | C | M | ABC | IDE | SYL | OLD | DN | OR | PHON | SRCH
 * | T. See http://hl7.org/fhir/StructureDefinition/iso21090-EN-use
 *
 * @generated from message google.fhir.r4.core.HumanNameENUse
 */
export class HumanNameENUse extends Message<HumanNameENUse> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.HumanNameENUse.ValueCode value_code = 3;
   */
  valueCode?: HumanNameENUse_ValueCode;

  constructor(data?: PartialMessage<HumanNameENUse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameENUse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: HumanNameENUse_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameENUse {
    return new HumanNameENUse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameENUse {
    return new HumanNameENUse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameENUse {
    return new HumanNameENUse().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameENUse | PlainMessage<HumanNameENUse> | undefined, b: HumanNameENUse | PlainMessage<HumanNameENUse> | undefined): boolean {
    return proto3.util.equals(HumanNameENUse, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.HumanNameENUse.ValueCode
 */
export class HumanNameENUse_ValueCode extends Message<HumanNameENUse_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.V3EntityNameUseR2Code.Value value = 1;
   */
  value = V3EntityNameUseR2Code_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HumanNameENUse_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameENUse.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(V3EntityNameUseR2Code_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameENUse_ValueCode {
    return new HumanNameENUse_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameENUse_ValueCode {
    return new HumanNameENUse_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameENUse_ValueCode {
    return new HumanNameENUse_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameENUse_ValueCode | PlainMessage<HumanNameENUse_ValueCode> | undefined, b: HumanNameENUse_ValueCode | PlainMessage<HumanNameENUse_ValueCode> | undefined): boolean {
    return proto3.util.equals(HumanNameENUse_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for fathers-family.
 * Portion of family name derived from father.
 * See http://hl7.org/fhir/StructureDefinition/humanname-fathers-family
 *
 * @generated from message google.fhir.r4.core.HumanNameFathersFamily
 */
export class HumanNameFathersFamily extends Message<HumanNameFathersFamily> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<HumanNameFathersFamily>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameFathersFamily";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameFathersFamily {
    return new HumanNameFathersFamily().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameFathersFamily {
    return new HumanNameFathersFamily().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameFathersFamily {
    return new HumanNameFathersFamily().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameFathersFamily | PlainMessage<HumanNameFathersFamily> | undefined, b: HumanNameFathersFamily | PlainMessage<HumanNameFathersFamily> | undefined): boolean {
    return proto3.util.equals(HumanNameFathersFamily, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for mothers-family.
 * Portion of family name derived from mother.
 * See http://hl7.org/fhir/StructureDefinition/humanname-mothers-family
 *
 * @generated from message google.fhir.r4.core.HumanNameMothersFamily
 */
export class HumanNameMothersFamily extends Message<HumanNameMothersFamily> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<HumanNameMothersFamily>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameMothersFamily";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameMothersFamily {
    return new HumanNameMothersFamily().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameMothersFamily {
    return new HumanNameMothersFamily().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameMothersFamily {
    return new HumanNameMothersFamily().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameMothersFamily | PlainMessage<HumanNameMothersFamily> | undefined, b: HumanNameMothersFamily | PlainMessage<HumanNameMothersFamily> | undefined): boolean {
    return proto3.util.equals(HumanNameMothersFamily, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for own-name.
 * Portion derived from person's own surname.
 * See http://hl7.org/fhir/StructureDefinition/humanname-own-name
 *
 * @generated from message google.fhir.r4.core.HumanNameOwnName
 */
export class HumanNameOwnName extends Message<HumanNameOwnName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<HumanNameOwnName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameOwnName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameOwnName {
    return new HumanNameOwnName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameOwnName {
    return new HumanNameOwnName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameOwnName {
    return new HumanNameOwnName().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameOwnName | PlainMessage<HumanNameOwnName> | undefined, b: HumanNameOwnName | PlainMessage<HumanNameOwnName> | undefined): boolean {
    return proto3.util.equals(HumanNameOwnName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for own-prefix.
 * Voorvoegsel derived from person's own surname.
 * See http://hl7.org/fhir/StructureDefinition/humanname-own-prefix
 *
 * @generated from message google.fhir.r4.core.HumanNameOwnPrefix
 */
export class HumanNameOwnPrefix extends Message<HumanNameOwnPrefix> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<HumanNameOwnPrefix>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameOwnPrefix";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameOwnPrefix {
    return new HumanNameOwnPrefix().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameOwnPrefix {
    return new HumanNameOwnPrefix().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameOwnPrefix {
    return new HumanNameOwnPrefix().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameOwnPrefix | PlainMessage<HumanNameOwnPrefix> | undefined, b: HumanNameOwnPrefix | PlainMessage<HumanNameOwnPrefix> | undefined): boolean {
    return proto3.util.equals(HumanNameOwnPrefix, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for partner-name.
 * Portion derived from person's partner's surname.
 * See http://hl7.org/fhir/StructureDefinition/humanname-partner-name
 *
 * @generated from message google.fhir.r4.core.HumanNamePartnerName
 */
export class HumanNamePartnerName extends Message<HumanNamePartnerName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<HumanNamePartnerName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNamePartnerName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNamePartnerName {
    return new HumanNamePartnerName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNamePartnerName {
    return new HumanNamePartnerName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNamePartnerName {
    return new HumanNamePartnerName().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNamePartnerName | PlainMessage<HumanNamePartnerName> | undefined, b: HumanNamePartnerName | PlainMessage<HumanNamePartnerName> | undefined): boolean {
    return proto3.util.equals(HumanNamePartnerName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for partner-prefix.
 * Voorvoegsel derived from person's partner's surname.
 * See http://hl7.org/fhir/StructureDefinition/humanname-partner-prefix
 *
 * @generated from message google.fhir.r4.core.HumanNamePartnerPrefix
 */
export class HumanNamePartnerPrefix extends Message<HumanNamePartnerPrefix> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<HumanNamePartnerPrefix>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNamePartnerPrefix";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNamePartnerPrefix {
    return new HumanNamePartnerPrefix().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNamePartnerPrefix {
    return new HumanNamePartnerPrefix().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNamePartnerPrefix {
    return new HumanNamePartnerPrefix().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNamePartnerPrefix | PlainMessage<HumanNamePartnerPrefix> | undefined, b: HumanNamePartnerPrefix | PlainMessage<HumanNamePartnerPrefix> | undefined): boolean {
    return proto3.util.equals(HumanNamePartnerPrefix, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for validDate.
 * External Identifier associated with this element.
 * See http://hl7.org/fhir/StructureDefinition/identifier-validDate
 *
 * @generated from message google.fhir.r4.core.IdentifierValidDate
 */
export class IdentifierValidDate extends Message<IdentifierValidDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<IdentifierValidDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.IdentifierValidDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdentifierValidDate {
    return new IdentifierValidDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdentifierValidDate {
    return new IdentifierValidDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdentifierValidDate {
    return new IdentifierValidDate().fromJsonString(jsonString, options);
  }

  static equals(a: IdentifierValidDate | PlainMessage<IdentifierValidDate> | undefined, b: IdentifierValidDate | PlainMessage<IdentifierValidDate> | undefined): boolean {
    return proto3.util.equals(IdentifierValidDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for initialValue.
 * An initial value expression.
 * See http://hl7.org/fhir/StructureDefinition/cqf-initialValue
 *
 * @generated from message google.fhir.r4.core.InitialValue
 */
export class InitialValue extends Message<InitialValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<InitialValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InitialValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InitialValue {
    return new InitialValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InitialValue {
    return new InitialValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InitialValue {
    return new InitialValue().fromJsonString(jsonString, options);
  }

  static equals(a: InitialValue | PlainMessage<InitialValue> | undefined, b: InitialValue | PlainMessage<InitialValue> | undefined): boolean {
    return proto3.util.equals(InitialValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for instantiatesCanonical.
 * FHIR protocol or definition.
 * See http://hl7.org/fhir/StructureDefinition/workflow-instantiatesCanonical
 *
 * @generated from message google.fhir.r4.core.InstantiatesCanonical
 */
export class InstantiatesCanonical extends Message<InstantiatesCanonical> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<InstantiatesCanonical>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InstantiatesCanonical";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstantiatesCanonical {
    return new InstantiatesCanonical().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstantiatesCanonical {
    return new InstantiatesCanonical().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstantiatesCanonical {
    return new InstantiatesCanonical().fromJsonString(jsonString, options);
  }

  static equals(a: InstantiatesCanonical | PlainMessage<InstantiatesCanonical> | undefined, b: InstantiatesCanonical | PlainMessage<InstantiatesCanonical> | undefined): boolean {
    return proto3.util.equals(InstantiatesCanonical, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for instantiatesUri.
 * External protocol or definition.
 * See http://hl7.org/fhir/StructureDefinition/workflow-instantiatesUri
 *
 * @generated from message google.fhir.r4.core.InstantiatesUri
 */
export class InstantiatesUri extends Message<InstantiatesUri> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<InstantiatesUri>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InstantiatesUri";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstantiatesUri {
    return new InstantiatesUri().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstantiatesUri {
    return new InstantiatesUri().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstantiatesUri {
    return new InstantiatesUri().fromJsonString(jsonString, options);
  }

  static equals(a: InstantiatesUri | PlainMessage<InstantiatesUri> | undefined, b: InstantiatesUri | PlainMessage<InstantiatesUri> | undefined): boolean {
    return proto3.util.equals(InstantiatesUri, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for lastReviewDate.
 * Last review date for the resource.
 * See http://hl7.org/fhir/StructureDefinition/resource-lastReviewDate
 *
 * @generated from message google.fhir.r4.core.LastReviewDate
 */
export class LastReviewDate extends Message<LastReviewDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Date value_date = 3;
   */
  valueDate?: Date;

  constructor(data?: PartialMessage<LastReviewDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LastReviewDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LastReviewDate {
    return new LastReviewDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LastReviewDate {
    return new LastReviewDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LastReviewDate {
    return new LastReviewDate().fromJsonString(jsonString, options);
  }

  static equals(a: LastReviewDate | PlainMessage<LastReviewDate> | undefined, b: LastReviewDate | PlainMessage<LastReviewDate> | undefined): boolean {
    return proto3.util.equals(LastReviewDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for changeBase.
 * Base List for changes.
 * See http://hl7.org/fhir/StructureDefinition/list-changeBase
 *
 * @generated from message google.fhir.r4.core.ListChangeBase
 */
export class ListChangeBase extends Message<ListChangeBase> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ListChangeBase>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ListChangeBase";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListChangeBase {
    return new ListChangeBase().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListChangeBase {
    return new ListChangeBase().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListChangeBase {
    return new ListChangeBase().fromJsonString(jsonString, options);
  }

  static equals(a: ListChangeBase | PlainMessage<ListChangeBase> | undefined, b: ListChangeBase | PlainMessage<ListChangeBase> | undefined): boolean {
    return proto3.util.equals(ListChangeBase, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for boundary-geojson.
 * A boundary shape that represents the outside edge of the location (in GeoJSON
 * format). See
 * http://hl7.org/fhir/StructureDefinition/location-boundary-geojson
 *
 * @generated from message google.fhir.r4.core.LocationBoundaryGeojson
 */
export class LocationBoundaryGeojson extends Message<LocationBoundaryGeojson> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Attachment value_attachment = 3;
   */
  valueAttachment?: Attachment;

  constructor(data?: PartialMessage<LocationBoundaryGeojson>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LocationBoundaryGeojson";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_attachment", kind: "message", T: Attachment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationBoundaryGeojson {
    return new LocationBoundaryGeojson().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationBoundaryGeojson {
    return new LocationBoundaryGeojson().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationBoundaryGeojson {
    return new LocationBoundaryGeojson().fromJsonString(jsonString, options);
  }

  static equals(a: LocationBoundaryGeojson | PlainMessage<LocationBoundaryGeojson> | undefined, b: LocationBoundaryGeojson | PlainMessage<LocationBoundaryGeojson> | undefined): boolean {
    return proto3.util.equals(LocationBoundaryGeojson, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for location.
 * Where event occurred.
 * See http://hl7.org/fhir/StructureDefinition/event-location
 *
 * @generated from message google.fhir.r4.core.LocationExtension
 */
export class LocationExtension extends Message<LocationExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<LocationExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LocationExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationExtension {
    return new LocationExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationExtension {
    return new LocationExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationExtension {
    return new LocationExtension().fromJsonString(jsonString, options);
  }

  static equals(a: LocationExtension | PlainMessage<LocationExtension> | undefined, b: LocationExtension | PlainMessage<LocationExtension> | undefined): boolean {
    return proto3.util.equals(LocationExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for maxDecimalPlaces.
 * Maximum digits after decimal.
 * See http://hl7.org/fhir/StructureDefinition/maxDecimalPlaces
 *
 * @generated from message google.fhir.r4.core.MaxDecimalPlaces
 */
export class MaxDecimalPlaces extends Message<MaxDecimalPlaces> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<MaxDecimalPlaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MaxDecimalPlaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MaxDecimalPlaces {
    return new MaxDecimalPlaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MaxDecimalPlaces {
    return new MaxDecimalPlaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MaxDecimalPlaces {
    return new MaxDecimalPlaces().fromJsonString(jsonString, options);
  }

  static equals(a: MaxDecimalPlaces | PlainMessage<MaxDecimalPlaces> | undefined, b: MaxDecimalPlaces | PlainMessage<MaxDecimalPlaces> | undefined): boolean {
    return proto3.util.equals(MaxDecimalPlaces, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for maxSize.
 * Max size in MB.
 * See http://hl7.org/fhir/StructureDefinition/maxSize
 *
 * @generated from message google.fhir.r4.core.MaxSize
 */
export class MaxSize extends Message<MaxSize> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Decimal value_decimal = 3;
   */
  valueDecimal?: Decimal;

  constructor(data?: PartialMessage<MaxSize>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MaxSize";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_decimal", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MaxSize {
    return new MaxSize().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MaxSize {
    return new MaxSize().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MaxSize {
    return new MaxSize().fromJsonString(jsonString, options);
  }

  static equals(a: MaxSize | PlainMessage<MaxSize> | undefined, b: MaxSize | PlainMessage<MaxSize> | undefined): boolean {
    return proto3.util.equals(MaxSize, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for measureInfo.
 * Measure criteria for the resource.
 * See http://hl7.org/fhir/StructureDefinition/cqf-measureInfo
 *
 * @generated from message google.fhir.r4.core.MeasureInfo
 */
export class MeasureInfo extends Message<MeasureInfo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The measure being calculated
   *
   * @generated from field: google.fhir.r4.core.Canonical measure = 4;
   */
  measure?: Canonical;

  /**
   * The group identifier
   *
   * @generated from field: google.fhir.r4.core.String group_id = 5;
   */
  groupId?: String;

  /**
   * The population identifier
   *
   * @generated from field: google.fhir.r4.core.String population_id = 6;
   */
  populationId?: String;

  constructor(data?: PartialMessage<MeasureInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MeasureInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "measure", kind: "message", T: Canonical },
    { no: 5, name: "group_id", kind: "message", T: String },
    { no: 6, name: "population_id", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureInfo {
    return new MeasureInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureInfo {
    return new MeasureInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureInfo {
    return new MeasureInfo().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureInfo | PlainMessage<MeasureInfo> | undefined, b: MeasureInfo | PlainMessage<MeasureInfo> | undefined): boolean {
    return proto3.util.equals(MeasureInfo, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for messageheader-response-request.
 * messageheader initiator requests a response.
 * See http://hl7.org/fhir/StructureDefinition/messageheader-response-request
 *
 * @generated from message google.fhir.r4.core.MessageHeaderMessageheaderResponseRequest
 */
export class MessageHeaderMessageheaderResponseRequest extends Message<MessageHeaderMessageheaderResponseRequest> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.MessageHeaderMessageheaderResponseRequest.ValueCode value_code = 3;
   */
  valueCode?: MessageHeaderMessageheaderResponseRequest_ValueCode;

  constructor(data?: PartialMessage<MessageHeaderMessageheaderResponseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageHeaderMessageheaderResponseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: MessageHeaderMessageheaderResponseRequest_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeaderMessageheaderResponseRequest {
    return new MessageHeaderMessageheaderResponseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeaderMessageheaderResponseRequest {
    return new MessageHeaderMessageheaderResponseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeaderMessageheaderResponseRequest {
    return new MessageHeaderMessageheaderResponseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeaderMessageheaderResponseRequest | PlainMessage<MessageHeaderMessageheaderResponseRequest> | undefined, b: MessageHeaderMessageheaderResponseRequest | PlainMessage<MessageHeaderMessageheaderResponseRequest> | undefined): boolean {
    return proto3.util.equals(MessageHeaderMessageheaderResponseRequest, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.MessageHeaderMessageheaderResponseRequest.ValueCode
 */
export class MessageHeaderMessageheaderResponseRequest_ValueCode extends Message<MessageHeaderMessageheaderResponseRequest_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.MessageheaderResponseRequestCode.Value value = 1;
   */
  value = MessageheaderResponseRequestCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageHeaderMessageheaderResponseRequest_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageHeaderMessageheaderResponseRequest.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageheaderResponseRequestCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageHeaderMessageheaderResponseRequest_ValueCode {
    return new MessageHeaderMessageheaderResponseRequest_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageHeaderMessageheaderResponseRequest_ValueCode {
    return new MessageHeaderMessageheaderResponseRequest_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageHeaderMessageheaderResponseRequest_ValueCode {
    return new MessageHeaderMessageheaderResponseRequest_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageHeaderMessageheaderResponseRequest_ValueCode | PlainMessage<MessageHeaderMessageheaderResponseRequest_ValueCode> | undefined, b: MessageHeaderMessageheaderResponseRequest_ValueCode | PlainMessage<MessageHeaderMessageheaderResponseRequest_ValueCode> | undefined): boolean {
    return proto3.util.equals(MessageHeaderMessageheaderResponseRequest_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for mimeType.
 * Type of attachment.
 * See http://hl7.org/fhir/StructureDefinition/mimeType
 *
 * @generated from message google.fhir.r4.core.MimeType
 */
export class MimeType extends Message<MimeType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.MimeType.ValueCode value_code = 3;
   */
  valueCode?: MimeType_ValueCode;

  constructor(data?: PartialMessage<MimeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MimeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: MimeType_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MimeType {
    return new MimeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MimeType {
    return new MimeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MimeType {
    return new MimeType().fromJsonString(jsonString, options);
  }

  static equals(a: MimeType | PlainMessage<MimeType> | undefined, b: MimeType | PlainMessage<MimeType> | undefined): boolean {
    return proto3.util.equals(MimeType, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.MimeType.ValueCode
 */
export class MimeType_ValueCode extends Message<MimeType_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<MimeType_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MimeType.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MimeType_ValueCode {
    return new MimeType_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MimeType_ValueCode {
    return new MimeType_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MimeType_ValueCode {
    return new MimeType_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: MimeType_ValueCode | PlainMessage<MimeType_ValueCode> | undefined, b: MimeType_ValueCode | PlainMessage<MimeType_ValueCode> | undefined): boolean {
    return proto3.util.equals(MimeType_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for minLength.
 * At least this many characters.
 * See http://hl7.org/fhir/StructureDefinition/minLength
 *
 * @generated from message google.fhir.r4.core.MinLength
 */
export class MinLength extends Message<MinLength> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<MinLength>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MinLength";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MinLength {
    return new MinLength().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MinLength {
    return new MinLength().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MinLength {
    return new MinLength().fromJsonString(jsonString, options);
  }

  static equals(a: MinLength | PlainMessage<MinLength> | undefined, b: MinLength | PlainMessage<MinLength> | undefined): boolean {
    return proto3.util.equals(MinLength, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for namespace.
 * specify namespace other than http://hl7.org/fhir.
 * See http://hl7.org/fhir/StructureDefinition/elementdefinition-namespace
 *
 * @generated from message google.fhir.r4.core.Namespace
 */
export class Namespace extends Message<Namespace> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<Namespace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Namespace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Namespace {
    return new Namespace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Namespace {
    return new Namespace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Namespace {
    return new Namespace().fromJsonString(jsonString, options);
  }

  static equals(a: Namespace | PlainMessage<Namespace> | undefined, b: Namespace | PlainMessage<Namespace> | undefined): boolean {
    return proto3.util.equals(Namespace, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Narrative Link.
 * Narrative Link.
 * See http://hl7.org/fhir/StructureDefinition/narrativeLink
 *
 * @generated from message google.fhir.r4.core.NarrativeLink
 */
export class NarrativeLink extends Message<NarrativeLink> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Url value_url = 3;
   */
  valueUrl?: Url;

  constructor(data?: PartialMessage<NarrativeLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NarrativeLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_url", kind: "message", T: Url },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NarrativeLink {
    return new NarrativeLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NarrativeLink {
    return new NarrativeLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NarrativeLink {
    return new NarrativeLink().fromJsonString(jsonString, options);
  }

  static equals(a: NarrativeLink | PlainMessage<NarrativeLink> | undefined, b: NarrativeLink | PlainMessage<NarrativeLink> | undefined): boolean {
    return proto3.util.equals(NarrativeLink, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for nullFlavor.
 * NI | OTH | NINF | PINF | UNK | ASKU | NAV | NASK | TRC | MSK | NA | QS.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor
 *
 * @generated from message google.fhir.r4.core.NullFlavor
 */
export class NullFlavor extends Message<NullFlavor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.NullFlavor.ValueCode value_code = 3;
   */
  valueCode?: NullFlavor_ValueCode;

  constructor(data?: PartialMessage<NullFlavor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NullFlavor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: NullFlavor_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NullFlavor {
    return new NullFlavor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NullFlavor {
    return new NullFlavor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NullFlavor {
    return new NullFlavor().fromJsonString(jsonString, options);
  }

  static equals(a: NullFlavor | PlainMessage<NullFlavor> | undefined, b: NullFlavor | PlainMessage<NullFlavor> | undefined): boolean {
    return proto3.util.equals(NullFlavor, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.NullFlavor.ValueCode
 */
export class NullFlavor_ValueCode extends Message<NullFlavor_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.V3NullFlavorCode.Value value = 1;
   */
  value = V3NullFlavorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NullFlavor_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NullFlavor.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(V3NullFlavorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NullFlavor_ValueCode {
    return new NullFlavor_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NullFlavor_ValueCode {
    return new NullFlavor_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NullFlavor_ValueCode {
    return new NullFlavor_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: NullFlavor_ValueCode | PlainMessage<NullFlavor_ValueCode> | undefined, b: NullFlavor_ValueCode | PlainMessage<NullFlavor_ValueCode> | undefined): boolean {
    return proto3.util.equals(NullFlavor_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for adaptiveFeedingDevice.
 * Adaptive Feeding Device.
 * See
 * http://hl7.org/fhir/StructureDefinition/nutritionorder-adaptiveFeedingDevice
 *
 * @generated from message google.fhir.r4.core.NutritionOrderAdaptiveFeedingDevice
 */
export class NutritionOrderAdaptiveFeedingDevice extends Message<NutritionOrderAdaptiveFeedingDevice> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<NutritionOrderAdaptiveFeedingDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrderAdaptiveFeedingDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrderAdaptiveFeedingDevice {
    return new NutritionOrderAdaptiveFeedingDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrderAdaptiveFeedingDevice {
    return new NutritionOrderAdaptiveFeedingDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrderAdaptiveFeedingDevice {
    return new NutritionOrderAdaptiveFeedingDevice().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrderAdaptiveFeedingDevice | PlainMessage<NutritionOrderAdaptiveFeedingDevice> | undefined, b: NutritionOrderAdaptiveFeedingDevice | PlainMessage<NutritionOrderAdaptiveFeedingDevice> | undefined): boolean {
    return proto3.util.equals(NutritionOrderAdaptiveFeedingDevice, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for doNotPerform.
 * true if request is prohibiting action.
 * See http://hl7.org/fhir/StructureDefinition/request-doNotPerform
 *
 * @generated from message google.fhir.r4.core.NutritionOrderDoNotPerform
 */
export class NutritionOrderDoNotPerform extends Message<NutritionOrderDoNotPerform> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<NutritionOrderDoNotPerform>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrderDoNotPerform";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrderDoNotPerform {
    return new NutritionOrderDoNotPerform().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrderDoNotPerform {
    return new NutritionOrderDoNotPerform().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrderDoNotPerform {
    return new NutritionOrderDoNotPerform().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrderDoNotPerform | PlainMessage<NutritionOrderDoNotPerform> | undefined, b: NutritionOrderDoNotPerform | PlainMessage<NutritionOrderDoNotPerform> | undefined): boolean {
    return proto3.util.equals(NutritionOrderDoNotPerform, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for insurance.
 * Associated insurance coverage.
 * See http://hl7.org/fhir/StructureDefinition/request-insurance
 *
 * @generated from message google.fhir.r4.core.NutritionOrderInsurance
 */
export class NutritionOrderInsurance extends Message<NutritionOrderInsurance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<NutritionOrderInsurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrderInsurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrderInsurance {
    return new NutritionOrderInsurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrderInsurance {
    return new NutritionOrderInsurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrderInsurance {
    return new NutritionOrderInsurance().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrderInsurance | PlainMessage<NutritionOrderInsurance> | undefined, b: NutritionOrderInsurance | PlainMessage<NutritionOrderInsurance> | undefined): boolean {
    return proto3.util.equals(NutritionOrderInsurance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for replaces.
 * Request(s) replaced by this request.
 * See http://hl7.org/fhir/StructureDefinition/request-replaces
 *
 * @generated from message google.fhir.r4.core.NutritionOrderReplaces
 */
export class NutritionOrderReplaces extends Message<NutritionOrderReplaces> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<NutritionOrderReplaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrderReplaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrderReplaces {
    return new NutritionOrderReplaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrderReplaces {
    return new NutritionOrderReplaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrderReplaces {
    return new NutritionOrderReplaces().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrderReplaces | PlainMessage<NutritionOrderReplaces> | undefined, b: NutritionOrderReplaces | PlainMessage<NutritionOrderReplaces> | undefined): boolean {
    return proto3.util.equals(NutritionOrderReplaces, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Allele.
 * Allele.
 * See http://hl7.org/fhir/StructureDefinition/observation-geneticsAllele
 *
 * @generated from message google.fhir.r4.core.ObservationAllele
 */
export class ObservationAllele extends Message<ObservationAllele> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Name of allele
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];
   */
  name?: CodeableConcept;

  /**
   * The level of occurrence of a single DNA sequence variant within a set of
   * chromosomes: Heteroplasmic / Homoplasmic / Homozygous / Heterozygous /
   * Hemizygous
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept state = 5 [json_name = "State"];
   */
  state?: CodeableConcept;

  /**
   * Allele frequency
   *
   * @generated from field: google.fhir.r4.core.Decimal frequency = 6 [json_name = "Frequency"];
   */
  frequency?: Decimal;

  constructor(data?: PartialMessage<ObservationAllele>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationAllele";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", jsonName: "Name", kind: "message", T: CodeableConcept },
    { no: 5, name: "state", jsonName: "State", kind: "message", T: CodeableConcept },
    { no: 6, name: "frequency", jsonName: "Frequency", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationAllele {
    return new ObservationAllele().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationAllele {
    return new ObservationAllele().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationAllele {
    return new ObservationAllele().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationAllele | PlainMessage<ObservationAllele> | undefined, b: ObservationAllele | PlainMessage<ObservationAllele> | undefined): boolean {
    return proto3.util.equals(ObservationAllele, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for AminoAcidChange.
 * AminoAcidChange.
 * See
 * http://hl7.org/fhir/StructureDefinition/observation-geneticsAminoAcidChange
 *
 * @generated from message google.fhir.r4.core.ObservationAminoAcidChange
 */
export class ObservationAminoAcidChange extends Message<ObservationAminoAcidChange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * HGVS nomenclature for observed Amino Acid Change
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];
   */
  name?: CodeableConcept;

  /**
   * Amino Acid Change Type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5 [json_name = "Type"];
   */
  type?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationAminoAcidChange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationAminoAcidChange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", jsonName: "Name", kind: "message", T: CodeableConcept },
    { no: 5, name: "type", jsonName: "Type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationAminoAcidChange {
    return new ObservationAminoAcidChange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationAminoAcidChange {
    return new ObservationAminoAcidChange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationAminoAcidChange {
    return new ObservationAminoAcidChange().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationAminoAcidChange | PlainMessage<ObservationAminoAcidChange> | undefined, b: ObservationAminoAcidChange | PlainMessage<ObservationAminoAcidChange> | undefined): boolean {
    return proto3.util.equals(ObservationAminoAcidChange, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Ancestry.
 * Ancestry.
 * See http://hl7.org/fhir/StructureDefinition/observation-geneticsAncestry
 *
 * @generated from message google.fhir.r4.core.ObservationAncestry
 */
export class ObservationAncestry extends Message<ObservationAncestry> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Ancestry name
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];
   */
  name?: CodeableConcept;

  /**
   * Ancestry percentage
   *
   * @generated from field: google.fhir.r4.core.Decimal percentage = 5 [json_name = "Percentage"];
   */
  percentage?: Decimal;

  /**
   * Source of ancestry report
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept source = 6 [json_name = "Source"];
   */
  source?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationAncestry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationAncestry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", jsonName: "Name", kind: "message", T: CodeableConcept },
    { no: 5, name: "percentage", jsonName: "Percentage", kind: "message", T: Decimal },
    { no: 6, name: "source", jsonName: "Source", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationAncestry {
    return new ObservationAncestry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationAncestry {
    return new ObservationAncestry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationAncestry {
    return new ObservationAncestry().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationAncestry | PlainMessage<ObservationAncestry> | undefined, b: ObservationAncestry | PlainMessage<ObservationAncestry> | undefined): boolean {
    return proto3.util.equals(ObservationAncestry, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CopyNumberEvent.
 * Copy number variation.
 * See
 * http://hl7.org/fhir/StructureDefinition/observation-geneticsCopyNumberEvent
 *
 * @generated from message google.fhir.r4.core.ObservationCopyNumberEvent
 */
export class ObservationCopyNumberEvent extends Message<ObservationCopyNumberEvent> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationCopyNumberEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationCopyNumberEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationCopyNumberEvent {
    return new ObservationCopyNumberEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationCopyNumberEvent {
    return new ObservationCopyNumberEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationCopyNumberEvent {
    return new ObservationCopyNumberEvent().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationCopyNumberEvent | PlainMessage<ObservationCopyNumberEvent> | undefined, b: ObservationCopyNumberEvent | PlainMessage<ObservationCopyNumberEvent> | undefined): boolean {
    return proto3.util.equals(ObservationCopyNumberEvent, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DNARegionName.
 * DNA region name.
 * See http://hl7.org/fhir/StructureDefinition/observation-geneticsDNARegionName
 *
 * @generated from message google.fhir.r4.core.ObservationDNARegionName
 */
export class ObservationDNARegionName extends Message<ObservationDNARegionName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ObservationDNARegionName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationDNARegionName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationDNARegionName {
    return new ObservationDNARegionName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationDNARegionName {
    return new ObservationDNARegionName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationDNARegionName {
    return new ObservationDNARegionName().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationDNARegionName | PlainMessage<ObservationDNARegionName> | undefined, b: ObservationDNARegionName | PlainMessage<ObservationDNARegionName> | undefined): boolean {
    return proto3.util.equals(ObservationDNARegionName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for delta.
 * Qualitative change or trend in the measurement.
 * See http://hl7.org/fhir/StructureDefinition/observation-delta
 *
 * @generated from message google.fhir.r4.core.ObservationDelta
 */
export class ObservationDelta extends Message<ObservationDelta> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationDelta>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationDelta";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationDelta {
    return new ObservationDelta().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationDelta {
    return new ObservationDelta().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationDelta {
    return new ObservationDelta().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationDelta | PlainMessage<ObservationDelta> | undefined, b: ObservationDelta | PlainMessage<ObservationDelta> | undefined): boolean {
    return proto3.util.equals(ObservationDelta, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for deviceCode.
 * A code representing the the type of device used for this observation.  Should
 * only be used if not implicit in the code found in `Observation.code`. See
 * http://hl7.org/fhir/StructureDefinition/observation-deviceCode
 *
 * @generated from message google.fhir.r4.core.ObservationDeviceCode
 */
export class ObservationDeviceCode extends Message<ObservationDeviceCode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationDeviceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationDeviceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationDeviceCode {
    return new ObservationDeviceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationDeviceCode {
    return new ObservationDeviceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationDeviceCode {
    return new ObservationDeviceCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationDeviceCode | PlainMessage<ObservationDeviceCode> | undefined, b: ObservationDeviceCode | PlainMessage<ObservationDeviceCode> | undefined): boolean {
    return proto3.util.equals(ObservationDeviceCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for focusCode.
 * Focus Code.
 * See http://hl7.org/fhir/StructureDefinition/observation-focusCode
 *
 * @generated from message google.fhir.r4.core.ObservationFocusCode
 */
export class ObservationFocusCode extends Message<ObservationFocusCode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationFocusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationFocusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationFocusCode {
    return new ObservationFocusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationFocusCode {
    return new ObservationFocusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationFocusCode {
    return new ObservationFocusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationFocusCode | PlainMessage<ObservationFocusCode> | undefined, b: ObservationFocusCode | PlainMessage<ObservationFocusCode> | undefined): boolean {
    return proto3.util.equals(ObservationFocusCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for gatewayDevice.
 * Gateway Device.
 * See http://hl7.org/fhir/StructureDefinition/observation-gatewayDevice
 *
 * @generated from message google.fhir.r4.core.ObservationGatewayDevice
 */
export class ObservationGatewayDevice extends Message<ObservationGatewayDevice> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ObservationGatewayDevice>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationGatewayDevice";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGatewayDevice {
    return new ObservationGatewayDevice().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGatewayDevice {
    return new ObservationGatewayDevice().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGatewayDevice {
    return new ObservationGatewayDevice().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGatewayDevice | PlainMessage<ObservationGatewayDevice> | undefined, b: ObservationGatewayDevice | PlainMessage<ObservationGatewayDevice> | undefined): boolean {
    return proto3.util.equals(ObservationGatewayDevice, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Gene.
 * HGNC gene symbol.
 * See http://hl7.org/fhir/StructureDefinition/observation-geneticsGene
 *
 * @generated from message google.fhir.r4.core.ObservationGene
 */
export class ObservationGene extends Message<ObservationGene> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationGene>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationGene";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGene {
    return new ObservationGene().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGene {
    return new ObservationGene().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGene {
    return new ObservationGene().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGene | PlainMessage<ObservationGene> | undefined, b: ObservationGene | PlainMessage<ObservationGene> | undefined): boolean {
    return proto3.util.equals(ObservationGene, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for GenomicSourceClass.
 * Genomic source class.
 * See
 * http://hl7.org/fhir/StructureDefinition/observation-geneticsGenomicSourceClass
 *
 * @generated from message google.fhir.r4.core.ObservationGenomicSourceClass
 */
export class ObservationGenomicSourceClass extends Message<ObservationGenomicSourceClass> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationGenomicSourceClass>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationGenomicSourceClass";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationGenomicSourceClass {
    return new ObservationGenomicSourceClass().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationGenomicSourceClass {
    return new ObservationGenomicSourceClass().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationGenomicSourceClass {
    return new ObservationGenomicSourceClass().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationGenomicSourceClass | PlainMessage<ObservationGenomicSourceClass> | undefined, b: ObservationGenomicSourceClass | PlainMessage<ObservationGenomicSourceClass> | undefined): boolean {
    return proto3.util.equals(ObservationGenomicSourceClass, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Interpretation.
 * Clinical interpretations for variant.
 * See
 * http://hl7.org/fhir/StructureDefinition/observation-geneticsInterpretation
 *
 * @generated from message google.fhir.r4.core.ObservationInterpretation
 */
export class ObservationInterpretation extends Message<ObservationInterpretation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ObservationInterpretation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationInterpretation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationInterpretation {
    return new ObservationInterpretation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationInterpretation {
    return new ObservationInterpretation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationInterpretation {
    return new ObservationInterpretation().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationInterpretation | PlainMessage<ObservationInterpretation> | undefined, b: ObservationInterpretation | PlainMessage<ObservationInterpretation> | undefined): boolean {
    return proto3.util.equals(ObservationInterpretation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for PhaseSet.
 * Phase set.
 * See http://hl7.org/fhir/StructureDefinition/observation-geneticsPhaseSet
 *
 * @generated from message google.fhir.r4.core.ObservationPhaseSet
 */
export class ObservationPhaseSet extends Message<ObservationPhaseSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Phase set ID
   *
   * @generated from field: google.fhir.r4.core.Uri id_slice = 4 [json_name = "IdSlice"];
   */
  idSlice?: Uri;

  /**
   * Phase set sequence
   *
   * @generated from field: repeated google.fhir.r4.core.Reference molecular_sequence = 5 [json_name = "MolecularSequence"];
   */
  molecularSequence: Reference[] = [];

  constructor(data?: PartialMessage<ObservationPhaseSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationPhaseSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "id_slice", jsonName: "IdSlice", kind: "message", T: Uri },
    { no: 5, name: "molecular_sequence", jsonName: "MolecularSequence", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationPhaseSet {
    return new ObservationPhaseSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationPhaseSet {
    return new ObservationPhaseSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationPhaseSet {
    return new ObservationPhaseSet().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationPhaseSet | PlainMessage<ObservationPhaseSet> | undefined, b: ObservationPhaseSet | PlainMessage<ObservationPhaseSet> | undefined): boolean {
    return proto3.util.equals(ObservationPhaseSet, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for precondition.
 * Other Observations needed to aid in  the interpretation of the source
 * observation. See
 * http://hl7.org/fhir/StructureDefinition/observation-precondition
 *
 * @generated from message google.fhir.r4.core.ObservationPrecondition
 */
export class ObservationPrecondition extends Message<ObservationPrecondition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ObservationPrecondition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationPrecondition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationPrecondition {
    return new ObservationPrecondition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationPrecondition {
    return new ObservationPrecondition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationPrecondition {
    return new ObservationPrecondition().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationPrecondition | PlainMessage<ObservationPrecondition> | undefined, b: ObservationPrecondition | PlainMessage<ObservationPrecondition> | undefined): boolean {
    return proto3.util.equals(ObservationPrecondition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reagent.
 * Reference to reagents used to generate this observation.
 * See http://hl7.org/fhir/StructureDefinition/observation-reagent
 *
 * @generated from message google.fhir.r4.core.ObservationReagent
 */
export class ObservationReagent extends Message<ObservationReagent> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ObservationReagent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationReagent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationReagent {
    return new ObservationReagent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationReagent {
    return new ObservationReagent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationReagent {
    return new ObservationReagent().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationReagent | PlainMessage<ObservationReagent> | undefined, b: ObservationReagent | PlainMessage<ObservationReagent> | undefined): boolean {
    return proto3.util.equals(ObservationReagent, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for replaces.
 * Replaces referenced Observation.
 * See http://hl7.org/fhir/StructureDefinition/observation-replaces
 *
 * @generated from message google.fhir.r4.core.ObservationReplaces
 */
export class ObservationReplaces extends Message<ObservationReplaces> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ObservationReplaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationReplaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationReplaces {
    return new ObservationReplaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationReplaces {
    return new ObservationReplaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationReplaces {
    return new ObservationReplaces().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationReplaces | PlainMessage<ObservationReplaces> | undefined, b: ObservationReplaces | PlainMessage<ObservationReplaces> | undefined): boolean {
    return proto3.util.equals(ObservationReplaces, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for secondaryFinding.
 * Secondary findings are genetic test results that provide information about
 * variants in a gene unrelated to the primary purpose for the testing, most
 * often discovered when [Whole Exome Sequencing
 * (WES)](https://en.wikipedia.org/wiki/Exome_sequencing) or [Whole Genome
 * Sequencing (WGS)](https://en.wikipedia.org/wiki/Whole_genome_sequencing) is
 * performed. This extension should be used to denote when a genetic finding is
 * being shared as a secondary finding, and ideally refer to a corresponding
 * guideline or policy statement.
 *
 * For more detail, please see:
 * https://ghr.nlm.nih.gov/primer/testing/secondaryfindings.
 * See http://hl7.org/fhir/StructureDefinition/observation-secondaryFinding
 *
 * @generated from message google.fhir.r4.core.ObservationSecondaryFinding
 */
export class ObservationSecondaryFinding extends Message<ObservationSecondaryFinding> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationSecondaryFinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationSecondaryFinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationSecondaryFinding {
    return new ObservationSecondaryFinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationSecondaryFinding {
    return new ObservationSecondaryFinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationSecondaryFinding {
    return new ObservationSecondaryFinding().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationSecondaryFinding | PlainMessage<ObservationSecondaryFinding> | undefined, b: ObservationSecondaryFinding | PlainMessage<ObservationSecondaryFinding> | undefined): boolean {
    return proto3.util.equals(ObservationSecondaryFinding, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sequelTo.
 * Sequel to referenced Observation.
 * See http://hl7.org/fhir/StructureDefinition/observation-sequelTo
 *
 * @generated from message google.fhir.r4.core.ObservationSequelTo
 */
export class ObservationSequelTo extends Message<ObservationSequelTo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ObservationSequelTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationSequelTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationSequelTo {
    return new ObservationSequelTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationSequelTo {
    return new ObservationSequelTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationSequelTo {
    return new ObservationSequelTo().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationSequelTo | PlainMessage<ObservationSequelTo> | undefined, b: ObservationSequelTo | PlainMessage<ObservationSequelTo> | undefined): boolean {
    return proto3.util.equals(ObservationSequelTo, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for specimenCode.
 * A code representing the the type of specimen used for this observation.
 * Should only be used if not implicit in the code found in `Observation.code`.
 * See http://hl7.org/fhir/StructureDefinition/observation-specimenCode
 *
 * @generated from message google.fhir.r4.core.ObservationSpecimenCode
 */
export class ObservationSpecimenCode extends Message<ObservationSpecimenCode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationSpecimenCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationSpecimenCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationSpecimenCode {
    return new ObservationSpecimenCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationSpecimenCode {
    return new ObservationSpecimenCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationSpecimenCode {
    return new ObservationSpecimenCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationSpecimenCode | PlainMessage<ObservationSpecimenCode> | undefined, b: ObservationSpecimenCode | PlainMessage<ObservationSpecimenCode> | undefined): boolean {
    return proto3.util.equals(ObservationSpecimenCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for timeOffset.
 * Time Offset for interlacing.
 * See http://hl7.org/fhir/StructureDefinition/observation-timeOffset
 *
 * @generated from message google.fhir.r4.core.ObservationTimeOffset
 */
export class ObservationTimeOffset extends Message<ObservationTimeOffset> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<ObservationTimeOffset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationTimeOffset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationTimeOffset {
    return new ObservationTimeOffset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationTimeOffset {
    return new ObservationTimeOffset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationTimeOffset {
    return new ObservationTimeOffset().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationTimeOffset | PlainMessage<ObservationTimeOffset> | undefined, b: ObservationTimeOffset | PlainMessage<ObservationTimeOffset> | undefined): boolean {
    return proto3.util.equals(ObservationTimeOffset, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Variant.
 * Variant.
 * See http://hl7.org/fhir/StructureDefinition/observation-geneticsVariant
 *
 * @generated from message google.fhir.r4.core.ObservationVariant
 */
export class ObservationVariant extends Message<ObservationVariant> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * HGVS nomenclature for observed DNA sequence variant
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];
   */
  name?: CodeableConcept;

  /**
   * DNA sequence variant ID
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept id_slice = 5 [json_name = "IdSlice"];
   */
  idSlice?: CodeableConcept;

  /**
   * DNA sequence variant type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6 [json_name = "Type"];
   */
  type?: CodeableConcept;

  constructor(data?: PartialMessage<ObservationVariant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationVariant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", jsonName: "Name", kind: "message", T: CodeableConcept },
    { no: 5, name: "id_slice", jsonName: "IdSlice", kind: "message", T: CodeableConcept },
    { no: 6, name: "type", jsonName: "Type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationVariant {
    return new ObservationVariant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationVariant {
    return new ObservationVariant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationVariant {
    return new ObservationVariant().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationVariant | PlainMessage<ObservationVariant> | undefined, b: ObservationVariant | PlainMessage<ObservationVariant> | undefined): boolean {
    return proto3.util.equals(ObservationVariant, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for allowed-type.
 * Which types are allowed for a parameter, when the base type is Abstract.
 * See http://hl7.org/fhir/StructureDefinition/operationdefinition-allowed-type
 *
 * @generated from message google.fhir.r4.core.OperationDefinitionAllowedType
 */
export class OperationDefinitionAllowedType extends Message<OperationDefinitionAllowedType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<OperationDefinitionAllowedType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationDefinitionAllowedType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinitionAllowedType {
    return new OperationDefinitionAllowedType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinitionAllowedType {
    return new OperationDefinitionAllowedType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinitionAllowedType {
    return new OperationDefinitionAllowedType().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinitionAllowedType | PlainMessage<OperationDefinitionAllowedType> | undefined, b: OperationDefinitionAllowedType | PlainMessage<OperationDefinitionAllowedType> | undefined): boolean {
    return proto3.util.equals(OperationDefinitionAllowedType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for profile.
 * Profiles (StructureDefinition or IG) - one must apply.
 * See http://hl7.org/fhir/StructureDefinition/operationdefinition-profile
 *
 * @generated from message google.fhir.r4.core.OperationDefinitionProfile
 */
export class OperationDefinitionProfile extends Message<OperationDefinitionProfile> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<OperationDefinitionProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationDefinitionProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationDefinitionProfile {
    return new OperationDefinitionProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationDefinitionProfile {
    return new OperationDefinitionProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationDefinitionProfile {
    return new OperationDefinitionProfile().fromJsonString(jsonString, options);
  }

  static equals(a: OperationDefinitionProfile | PlainMessage<OperationDefinitionProfile> | undefined, b: OperationDefinitionProfile | PlainMessage<OperationDefinitionProfile> | undefined): boolean {
    return proto3.util.equals(OperationDefinitionProfile, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for authority.
 * Reference to where the rule is defined.
 * See http://hl7.org/fhir/StructureDefinition/operationoutcome-authority
 *
 * @generated from message google.fhir.r4.core.OperationOutcomeAuthority
 */
export class OperationOutcomeAuthority extends Message<OperationOutcomeAuthority> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<OperationOutcomeAuthority>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationOutcomeAuthority";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationOutcomeAuthority {
    return new OperationOutcomeAuthority().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationOutcomeAuthority {
    return new OperationOutcomeAuthority().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationOutcomeAuthority {
    return new OperationOutcomeAuthority().fromJsonString(jsonString, options);
  }

  static equals(a: OperationOutcomeAuthority | PlainMessage<OperationOutcomeAuthority> | undefined, b: OperationOutcomeAuthority | PlainMessage<OperationOutcomeAuthority> | undefined): boolean {
    return proto3.util.equals(OperationOutcomeAuthority, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for detectedIssue.
 * Reference to a contra-indication that is the basis for this error.
 * See http://hl7.org/fhir/StructureDefinition/operationoutcome-detectedIssue
 *
 * @generated from message google.fhir.r4.core.OperationOutcomeDetectedIssue
 */
export class OperationOutcomeDetectedIssue extends Message<OperationOutcomeDetectedIssue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<OperationOutcomeDetectedIssue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationOutcomeDetectedIssue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationOutcomeDetectedIssue {
    return new OperationOutcomeDetectedIssue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationOutcomeDetectedIssue {
    return new OperationOutcomeDetectedIssue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationOutcomeDetectedIssue {
    return new OperationOutcomeDetectedIssue().fromJsonString(jsonString, options);
  }

  static equals(a: OperationOutcomeDetectedIssue | PlainMessage<OperationOutcomeDetectedIssue> | undefined, b: OperationOutcomeDetectedIssue | PlainMessage<OperationOutcomeDetectedIssue> | undefined): boolean {
    return proto3.util.equals(OperationOutcomeDetectedIssue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for issue-source.
 * Source of a validation message.
 * See http://hl7.org/fhir/StructureDefinition/operationoutcome-issue-source
 *
 * @generated from message google.fhir.r4.core.OperationOutcomeIssueSource
 */
export class OperationOutcomeIssueSource extends Message<OperationOutcomeIssueSource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<OperationOutcomeIssueSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationOutcomeIssueSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationOutcomeIssueSource {
    return new OperationOutcomeIssueSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationOutcomeIssueSource {
    return new OperationOutcomeIssueSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationOutcomeIssueSource {
    return new OperationOutcomeIssueSource().fromJsonString(jsonString, options);
  }

  static equals(a: OperationOutcomeIssueSource | PlainMessage<OperationOutcomeIssueSource> | undefined, b: OperationOutcomeIssueSource | PlainMessage<OperationOutcomeIssueSource> | undefined): boolean {
    return proto3.util.equals(OperationOutcomeIssueSource, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Ordinal Value.
 * Assigned Ordinal Value.
 * See http://hl7.org/fhir/StructureDefinition/ordinalValue
 *
 * @generated from message google.fhir.r4.core.OrdinalValue
 */
export class OrdinalValue extends Message<OrdinalValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Decimal value_decimal = 3;
   */
  valueDecimal?: Decimal;

  constructor(data?: PartialMessage<OrdinalValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OrdinalValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_decimal", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrdinalValue {
    return new OrdinalValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrdinalValue {
    return new OrdinalValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrdinalValue {
    return new OrdinalValue().fromJsonString(jsonString, options);
  }

  static equals(a: OrdinalValue | PlainMessage<OrdinalValue> | undefined, b: OrdinalValue | PlainMessage<OrdinalValue> | undefined): boolean {
    return proto3.util.equals(OrdinalValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for primaryInd.
 * Indicator of primary specialty.
 * See
 * http://hl7.org/fhir/StructureDefinition/organizationaffiliation-primaryInd
 *
 * @generated from message google.fhir.r4.core.OrganizationAffiliationPrimaryInd
 */
export class OrganizationAffiliationPrimaryInd extends Message<OrganizationAffiliationPrimaryInd> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<OrganizationAffiliationPrimaryInd>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OrganizationAffiliationPrimaryInd";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationAffiliationPrimaryInd {
    return new OrganizationAffiliationPrimaryInd().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationAffiliationPrimaryInd {
    return new OrganizationAffiliationPrimaryInd().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationAffiliationPrimaryInd {
    return new OrganizationAffiliationPrimaryInd().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationAffiliationPrimaryInd | PlainMessage<OrganizationAffiliationPrimaryInd> | undefined, b: OrganizationAffiliationPrimaryInd | PlainMessage<OrganizationAffiliationPrimaryInd> | undefined): boolean {
    return proto3.util.equals(OrganizationAffiliationPrimaryInd, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for period.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/organization-period
 *
 * @generated from message google.fhir.r4.core.OrganizationPeriod
 */
export class OrganizationPeriod extends Message<OrganizationPeriod> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Period value_period = 3;
   */
  valuePeriod?: Period;

  constructor(data?: PartialMessage<OrganizationPeriod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OrganizationPeriod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationPeriod {
    return new OrganizationPeriod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationPeriod {
    return new OrganizationPeriod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationPeriod {
    return new OrganizationPeriod().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationPeriod | PlainMessage<OrganizationPeriod> | undefined, b: OrganizationPeriod | PlainMessage<OrganizationPeriod> | undefined): boolean {
    return proto3.util.equals(OrganizationPeriod, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for preferredContact.
 * Extension.
 * See http://hl7.org/fhir/StructureDefinition/organization-preferredContact
 *
 * @generated from message google.fhir.r4.core.OrganizationPreferredContact
 */
export class OrganizationPreferredContact extends Message<OrganizationPreferredContact> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<OrganizationPreferredContact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OrganizationPreferredContact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationPreferredContact {
    return new OrganizationPreferredContact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationPreferredContact {
    return new OrganizationPreferredContact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationPreferredContact {
    return new OrganizationPreferredContact().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationPreferredContact | PlainMessage<OrganizationPreferredContact> | undefined, b: OrganizationPreferredContact | PlainMessage<OrganizationPreferredContact> | undefined): boolean {
    return proto3.util.equals(OrganizationPreferredContact, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Original Text.
 * Original Text that represents the data as seen/selected/uttered originally.
 * See http://hl7.org/fhir/StructureDefinition/originalText
 *
 * @generated from message google.fhir.r4.core.OriginalText
 */
export class OriginalText extends Message<OriginalText> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<OriginalText>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OriginalText";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OriginalText {
    return new OriginalText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OriginalText {
    return new OriginalText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OriginalText {
    return new OriginalText().fromJsonString(jsonString, options);
  }

  static equals(a: OriginalText | PlainMessage<OriginalText> | undefined, b: OriginalText | PlainMessage<OriginalText> | undefined): boolean {
    return proto3.util.equals(OriginalText, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for fullUrl.
 * fullUrl for resource.
 * See http://hl7.org/fhir/StructureDefinition/parameters-fullUrl
 *
 * @generated from message google.fhir.r4.core.ParametersFullUrl
 */
export class ParametersFullUrl extends Message<ParametersFullUrl> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ParametersFullUrl>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ParametersFullUrl";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParametersFullUrl {
    return new ParametersFullUrl().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParametersFullUrl {
    return new ParametersFullUrl().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParametersFullUrl {
    return new ParametersFullUrl().fromJsonString(jsonString, options);
  }

  static equals(a: ParametersFullUrl | PlainMessage<ParametersFullUrl> | undefined, b: ParametersFullUrl | PlainMessage<ParametersFullUrl> | undefined): boolean {
    return proto3.util.equals(ParametersFullUrl, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for partOf.
 * Part of referenced event.
 * See http://hl7.org/fhir/StructureDefinition/event-partOf
 *
 * @generated from message google.fhir.r4.core.PartOf
 */
export class PartOf extends Message<PartOf> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<PartOf>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PartOf";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PartOf {
    return new PartOf().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PartOf {
    return new PartOf().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PartOf {
    return new PartOf().fromJsonString(jsonString, options);
  }

  static equals(a: PartOf | PlainMessage<PartOf> | undefined, b: PartOf | PlainMessage<PartOf> | undefined): boolean {
    return proto3.util.equals(PartOf, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for adoptionInfo.
 * The adoption status of the patient.
 * See http://hl7.org/fhir/StructureDefinition/patient-adoptionInfo
 *
 * @generated from message google.fhir.r4.core.PatientAdoptionInfo
 */
export class PatientAdoptionInfo extends Message<PatientAdoptionInfo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<PatientAdoptionInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientAdoptionInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientAdoptionInfo {
    return new PatientAdoptionInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientAdoptionInfo {
    return new PatientAdoptionInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientAdoptionInfo {
    return new PatientAdoptionInfo().fromJsonString(jsonString, options);
  }

  static equals(a: PatientAdoptionInfo | PlainMessage<PatientAdoptionInfo> | undefined, b: PatientAdoptionInfo | PlainMessage<PatientAdoptionInfo> | undefined): boolean {
    return proto3.util.equals(PatientAdoptionInfo, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for animal.
 * This patient is known to be an animal (non-human).
 * See http://hl7.org/fhir/StructureDefinition/patient-animal
 *
 * @generated from message google.fhir.r4.core.PatientAnimal
 */
export class PatientAnimal extends Message<PatientAnimal> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The animal species.  E.g. Dog, Cow.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept species = 4;
   */
  species?: CodeableConcept;

  /**
   * The animal breed.  E.g. Poodle, Angus.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept breed = 5;
   */
  breed?: CodeableConcept;

  /**
   * The status of the animal's reproductive parts.  E.g. Neutered, Intact.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept gender_status = 6;
   */
  genderStatus?: CodeableConcept;

  constructor(data?: PartialMessage<PatientAnimal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientAnimal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "species", kind: "message", T: CodeableConcept },
    { no: 5, name: "breed", kind: "message", T: CodeableConcept },
    { no: 6, name: "gender_status", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientAnimal {
    return new PatientAnimal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientAnimal {
    return new PatientAnimal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientAnimal {
    return new PatientAnimal().fromJsonString(jsonString, options);
  }

  static equals(a: PatientAnimal | PlainMessage<PatientAnimal> | undefined, b: PatientAnimal | PlainMessage<PatientAnimal> | undefined): boolean {
    return proto3.util.equals(PatientAnimal, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for birthPlace.
 * Place of Birth for patient.
 * See http://hl7.org/fhir/StructureDefinition/patient-birthPlace
 *
 * @generated from message google.fhir.r4.core.PatientBirthPlace
 */
export class PatientBirthPlace extends Message<PatientBirthPlace> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Address value_address = 3;
   */
  valueAddress?: Address;

  constructor(data?: PartialMessage<PatientBirthPlace>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientBirthPlace";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_address", kind: "message", T: Address },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientBirthPlace {
    return new PatientBirthPlace().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientBirthPlace {
    return new PatientBirthPlace().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientBirthPlace {
    return new PatientBirthPlace().fromJsonString(jsonString, options);
  }

  static equals(a: PatientBirthPlace | PlainMessage<PatientBirthPlace> | undefined, b: PatientBirthPlace | PlainMessage<PatientBirthPlace> | undefined): boolean {
    return proto3.util.equals(PatientBirthPlace, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for birthTime.
 * Time of day of birth.
 * See http://hl7.org/fhir/StructureDefinition/patient-birthTime
 *
 * @generated from message google.fhir.r4.core.PatientBirthTime
 */
export class PatientBirthTime extends Message<PatientBirthTime> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<PatientBirthTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientBirthTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientBirthTime {
    return new PatientBirthTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientBirthTime {
    return new PatientBirthTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientBirthTime {
    return new PatientBirthTime().fromJsonString(jsonString, options);
  }

  static equals(a: PatientBirthTime | PlainMessage<PatientBirthTime> | undefined, b: PatientBirthTime | PlainMessage<PatientBirthTime> | undefined): boolean {
    return proto3.util.equals(PatientBirthTime, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for cadavericDonor.
 * Post-mortem donor status.
 * See http://hl7.org/fhir/StructureDefinition/patient-cadavericDonor
 *
 * @generated from message google.fhir.r4.core.PatientCadavericDonor
 */
export class PatientCadavericDonor extends Message<PatientCadavericDonor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<PatientCadavericDonor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientCadavericDonor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientCadavericDonor {
    return new PatientCadavericDonor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientCadavericDonor {
    return new PatientCadavericDonor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientCadavericDonor {
    return new PatientCadavericDonor().fromJsonString(jsonString, options);
  }

  static equals(a: PatientCadavericDonor | PlainMessage<PatientCadavericDonor> | undefined, b: PatientCadavericDonor | PlainMessage<PatientCadavericDonor> | undefined): boolean {
    return proto3.util.equals(PatientCadavericDonor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for citizenship.
 * Nation(s) where the patient claims citizenship.
 * See http://hl7.org/fhir/StructureDefinition/patient-citizenship
 *
 * @generated from message google.fhir.r4.core.PatientCitizenship
 */
export class PatientCitizenship extends Message<PatientCitizenship> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Nation code of citizenship
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Time period of citizenship
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<PatientCitizenship>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientCitizenship";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientCitizenship {
    return new PatientCitizenship().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientCitizenship {
    return new PatientCitizenship().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientCitizenship {
    return new PatientCitizenship().fromJsonString(jsonString, options);
  }

  static equals(a: PatientCitizenship | PlainMessage<PatientCitizenship> | undefined, b: PatientCitizenship | PlainMessage<PatientCitizenship> | undefined): boolean {
    return proto3.util.equals(PatientCitizenship, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for congregation.
 * A group of place of religious practice.
 * See http://hl7.org/fhir/StructureDefinition/patient-congregation
 *
 * @generated from message google.fhir.r4.core.PatientCongregation
 */
export class PatientCongregation extends Message<PatientCongregation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<PatientCongregation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientCongregation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientCongregation {
    return new PatientCongregation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientCongregation {
    return new PatientCongregation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientCongregation {
    return new PatientCongregation().fromJsonString(jsonString, options);
  }

  static equals(a: PatientCongregation | PlainMessage<PatientCongregation> | undefined, b: PatientCongregation | PlainMessage<PatientCongregation> | undefined): boolean {
    return proto3.util.equals(PatientCongregation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for disability.
 * Condition(s) limiting movement, senses, or activities.
 * See http://hl7.org/fhir/StructureDefinition/patient-disability
 *
 * @generated from message google.fhir.r4.core.PatientDisability
 */
export class PatientDisability extends Message<PatientDisability> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<PatientDisability>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientDisability";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientDisability {
    return new PatientDisability().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientDisability {
    return new PatientDisability().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientDisability {
    return new PatientDisability().fromJsonString(jsonString, options);
  }

  static equals(a: PatientDisability | PlainMessage<PatientDisability> | undefined, b: PatientDisability | PlainMessage<PatientDisability> | undefined): boolean {
    return proto3.util.equals(PatientDisability, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for genderIdentity.
 * The patient's gender identity.
 * See http://hl7.org/fhir/StructureDefinition/patient-genderIdentity
 *
 * @generated from message google.fhir.r4.core.PatientGenderIdentity
 */
export class PatientGenderIdentity extends Message<PatientGenderIdentity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<PatientGenderIdentity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientGenderIdentity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientGenderIdentity {
    return new PatientGenderIdentity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientGenderIdentity {
    return new PatientGenderIdentity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientGenderIdentity {
    return new PatientGenderIdentity().fromJsonString(jsonString, options);
  }

  static equals(a: PatientGenderIdentity | PlainMessage<PatientGenderIdentity> | undefined, b: PatientGenderIdentity | PlainMessage<PatientGenderIdentity> | undefined): boolean {
    return proto3.util.equals(PatientGenderIdentity, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for importance.
 * Special status given the patient.
 * See http://hl7.org/fhir/StructureDefinition/patient-importance
 *
 * @generated from message google.fhir.r4.core.PatientImportance
 */
export class PatientImportance extends Message<PatientImportance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<PatientImportance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientImportance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientImportance {
    return new PatientImportance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientImportance {
    return new PatientImportance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientImportance {
    return new PatientImportance().fromJsonString(jsonString, options);
  }

  static equals(a: PatientImportance | PlainMessage<PatientImportance> | undefined, b: PatientImportance | PlainMessage<PatientImportance> | undefined): boolean {
    return proto3.util.equals(PatientImportance, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for interpreterRequired.
 * Whether the patient needs an interpreter.
 * See http://hl7.org/fhir/StructureDefinition/patient-interpreterRequired
 *
 * @generated from message google.fhir.r4.core.PatientInterpreterRequired
 */
export class PatientInterpreterRequired extends Message<PatientInterpreterRequired> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<PatientInterpreterRequired>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientInterpreterRequired";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientInterpreterRequired {
    return new PatientInterpreterRequired().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientInterpreterRequired {
    return new PatientInterpreterRequired().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientInterpreterRequired {
    return new PatientInterpreterRequired().fromJsonString(jsonString, options);
  }

  static equals(a: PatientInterpreterRequired | PlainMessage<PatientInterpreterRequired> | undefined, b: PatientInterpreterRequired | PlainMessage<PatientInterpreterRequired> | undefined): boolean {
    return proto3.util.equals(PatientInterpreterRequired, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for mothersMaidenName.
 * Mother's Maiden name.
 * See http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName
 *
 * @generated from message google.fhir.r4.core.PatientMothersMaidenName
 */
export class PatientMothersMaidenName extends Message<PatientMothersMaidenName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<PatientMothersMaidenName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientMothersMaidenName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientMothersMaidenName {
    return new PatientMothersMaidenName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientMothersMaidenName {
    return new PatientMothersMaidenName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientMothersMaidenName {
    return new PatientMothersMaidenName().fromJsonString(jsonString, options);
  }

  static equals(a: PatientMothersMaidenName | PlainMessage<PatientMothersMaidenName> | undefined, b: PatientMothersMaidenName | PlainMessage<PatientMothersMaidenName> | undefined): boolean {
    return proto3.util.equals(PatientMothersMaidenName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for nationality.
 * Nationality.
 * See http://hl7.org/fhir/StructureDefinition/patient-nationality
 *
 * @generated from message google.fhir.r4.core.PatientNationality
 */
export class PatientNationality extends Message<PatientNationality> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Nationality Code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Nationality Period
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<PatientNationality>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientNationality";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientNationality {
    return new PatientNationality().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientNationality {
    return new PatientNationality().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientNationality {
    return new PatientNationality().fromJsonString(jsonString, options);
  }

  static equals(a: PatientNationality | PlainMessage<PatientNationality> | undefined, b: PatientNationality | PlainMessage<PatientNationality> | undefined): boolean {
    return proto3.util.equals(PatientNationality, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for preferenceType.
 * The type of the patient's preferred language.
 * See http://hl7.org/fhir/StructureDefinition/patient-preferenceType
 *
 * @generated from message google.fhir.r4.core.PatientPreferenceType
 */
export class PatientPreferenceType extends Message<PatientPreferenceType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<PatientPreferenceType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientPreferenceType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientPreferenceType {
    return new PatientPreferenceType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientPreferenceType {
    return new PatientPreferenceType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientPreferenceType {
    return new PatientPreferenceType().fromJsonString(jsonString, options);
  }

  static equals(a: PatientPreferenceType | PlainMessage<PatientPreferenceType> | undefined, b: PatientPreferenceType | PlainMessage<PatientPreferenceType> | undefined): boolean {
    return proto3.util.equals(PatientPreferenceType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for proficiency.
 * Proficiency level of the communication.
 * See http://hl7.org/fhir/StructureDefinition/patient-proficiency
 *
 * @generated from message google.fhir.r4.core.PatientProficiency
 */
export class PatientProficiency extends Message<PatientProficiency> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The proficiency level of the communication
   *
   * @generated from field: google.fhir.r4.core.Coding level = 4;
   */
  level?: Coding;

  /**
   * The proficiency type of the communication
   *
   * @generated from field: repeated google.fhir.r4.core.Coding type = 5;
   */
  type: Coding[] = [];

  constructor(data?: PartialMessage<PatientProficiency>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientProficiency";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "level", kind: "message", T: Coding },
    { no: 5, name: "type", kind: "message", T: Coding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientProficiency {
    return new PatientProficiency().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientProficiency {
    return new PatientProficiency().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientProficiency {
    return new PatientProficiency().fromJsonString(jsonString, options);
  }

  static equals(a: PatientProficiency | PlainMessage<PatientProficiency> | undefined, b: PatientProficiency | PlainMessage<PatientProficiency> | undefined): boolean {
    return proto3.util.equals(PatientProficiency, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for relatedPerson.
 * This contact may have further details in this RelatedPerson.
 * See http://hl7.org/fhir/StructureDefinition/patient-relatedPerson
 *
 * @generated from message google.fhir.r4.core.PatientRelatedPerson
 */
export class PatientRelatedPerson extends Message<PatientRelatedPerson> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<PatientRelatedPerson>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientRelatedPerson";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientRelatedPerson {
    return new PatientRelatedPerson().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientRelatedPerson {
    return new PatientRelatedPerson().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientRelatedPerson {
    return new PatientRelatedPerson().fromJsonString(jsonString, options);
  }

  static equals(a: PatientRelatedPerson | PlainMessage<PatientRelatedPerson> | undefined, b: PatientRelatedPerson | PlainMessage<PatientRelatedPerson> | undefined): boolean {
    return proto3.util.equals(PatientRelatedPerson, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for religion.
 * The patient's professed religious affiliations.
 * See http://hl7.org/fhir/StructureDefinition/patient-religion
 *
 * @generated from message google.fhir.r4.core.PatientReligion
 */
export class PatientReligion extends Message<PatientReligion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<PatientReligion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PatientReligion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PatientReligion {
    return new PatientReligion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PatientReligion {
    return new PatientReligion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PatientReligion {
    return new PatientReligion().fromJsonString(jsonString, options);
  }

  static equals(a: PatientReligion | PlainMessage<PatientReligion> | undefined, b: PatientReligion | PlainMessage<PatientReligion> | undefined): boolean {
    return proto3.util.equals(PatientReligion, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for performerFunction.
 * Type of performance.
 * See http://hl7.org/fhir/StructureDefinition/event-performerFunction
 *
 * @generated from message google.fhir.r4.core.PerformerFunction
 */
export class PerformerFunction extends Message<PerformerFunction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<PerformerFunction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PerformerFunction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PerformerFunction {
    return new PerformerFunction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PerformerFunction {
    return new PerformerFunction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PerformerFunction {
    return new PerformerFunction().fromJsonString(jsonString, options);
  }

  static equals(a: PerformerFunction | PlainMessage<PerformerFunction> | undefined, b: PerformerFunction | PlainMessage<PerformerFunction> | undefined): boolean {
    return proto3.util.equals(PerformerFunction, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for permitted-value-conceptmap.
 * Mapping from permitted to transmitted.
 * See http://hl7.org/fhir/StructureDefinition/11179-permitted-value-conceptmap
 *
 * @generated from message google.fhir.r4.core.PermittedValueConceptmap
 */
export class PermittedValueConceptmap extends Message<PermittedValueConceptmap> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<PermittedValueConceptmap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PermittedValueConceptmap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PermittedValueConceptmap {
    return new PermittedValueConceptmap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PermittedValueConceptmap {
    return new PermittedValueConceptmap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PermittedValueConceptmap {
    return new PermittedValueConceptmap().fromJsonString(jsonString, options);
  }

  static equals(a: PermittedValueConceptmap | PlainMessage<PermittedValueConceptmap> | undefined, b: PermittedValueConceptmap | PlainMessage<PermittedValueConceptmap> | undefined): boolean {
    return proto3.util.equals(PermittedValueConceptmap, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for permitted-value-valueset.
 * Permitted values.
 * See http://hl7.org/fhir/StructureDefinition/11179-permitted-value-valueset
 *
 * @generated from message google.fhir.r4.core.PermittedValueValueset
 */
export class PermittedValueValueset extends Message<PermittedValueValueset> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<PermittedValueValueset>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PermittedValueValueset";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PermittedValueValueset {
    return new PermittedValueValueset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PermittedValueValueset {
    return new PermittedValueValueset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PermittedValueValueset {
    return new PermittedValueValueset().fromJsonString(jsonString, options);
  }

  static equals(a: PermittedValueValueset | PlainMessage<PermittedValueValueset> | undefined, b: PermittedValueValueset | PlainMessage<PermittedValueValueset> | undefined): boolean {
    return proto3.util.equals(PermittedValueValueset, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for cdsHooksEndpoint.
 * Surface this ECA Rule here.
 * See http://hl7.org/fhir/StructureDefinition/cqf-cdsHooksEndpoint
 *
 * @generated from message google.fhir.r4.core.PlanDefinitionCdsHooksEndpoint
 */
export class PlanDefinitionCdsHooksEndpoint extends Message<PlanDefinitionCdsHooksEndpoint> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<PlanDefinitionCdsHooksEndpoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinitionCdsHooksEndpoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinitionCdsHooksEndpoint {
    return new PlanDefinitionCdsHooksEndpoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinitionCdsHooksEndpoint {
    return new PlanDefinitionCdsHooksEndpoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinitionCdsHooksEndpoint {
    return new PlanDefinitionCdsHooksEndpoint().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinitionCdsHooksEndpoint | PlainMessage<PlanDefinitionCdsHooksEndpoint> | undefined, b: PlanDefinitionCdsHooksEndpoint | PlainMessage<PlanDefinitionCdsHooksEndpoint> | undefined): boolean {
    return proto3.util.equals(PlanDefinitionCdsHooksEndpoint, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for primaryInd.
 * Indicator of primary specialty.
 * See http://hl7.org/fhir/StructureDefinition/practitionerrole-primaryInd
 *
 * @generated from message google.fhir.r4.core.PractitionerRolePrimaryInd
 */
export class PractitionerRolePrimaryInd extends Message<PractitionerRolePrimaryInd> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<PractitionerRolePrimaryInd>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PractitionerRolePrimaryInd";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PractitionerRolePrimaryInd {
    return new PractitionerRolePrimaryInd().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PractitionerRolePrimaryInd {
    return new PractitionerRolePrimaryInd().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PractitionerRolePrimaryInd {
    return new PractitionerRolePrimaryInd().fromJsonString(jsonString, options);
  }

  static equals(a: PractitionerRolePrimaryInd | PlainMessage<PractitionerRolePrimaryInd> | undefined, b: PractitionerRolePrimaryInd | PlainMessage<PractitionerRolePrimaryInd> | undefined): boolean {
    return proto3.util.equals(PractitionerRolePrimaryInd, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for preferred.
 * Preferred.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-preferred
 *
 * @generated from message google.fhir.r4.core.Preferred
 */
export class Preferred extends Message<Preferred> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<Preferred>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Preferred";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Preferred {
    return new Preferred().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Preferred {
    return new Preferred().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Preferred {
    return new Preferred().fromJsonString(jsonString, options);
  }

  static equals(a: Preferred | PlainMessage<Preferred> | undefined, b: Preferred | PlainMessage<Preferred> | undefined): boolean {
    return proto3.util.equals(Preferred, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for causedBy.
 * Related item that caused this procedure.
 * See http://hl7.org/fhir/StructureDefinition/procedure-causedBy
 *
 * @generated from message google.fhir.r4.core.ProcedureCausedBy
 */
export class ProcedureCausedBy extends Message<ProcedureCausedBy> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ProcedureCausedBy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProcedureCausedBy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureCausedBy {
    return new ProcedureCausedBy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureCausedBy {
    return new ProcedureCausedBy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureCausedBy {
    return new ProcedureCausedBy().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureCausedBy | PlainMessage<ProcedureCausedBy> | undefined, b: ProcedureCausedBy | PlainMessage<ProcedureCausedBy> | undefined): boolean {
    return proto3.util.equals(ProcedureCausedBy, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for incisionDateTime.
 * The first incision time.
 * See http://hl7.org/fhir/StructureDefinition/procedure-incisionDateTime
 *
 * @generated from message google.fhir.r4.core.ProcedureIncisionDateTime
 */
export class ProcedureIncisionDateTime extends Message<ProcedureIncisionDateTime> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<ProcedureIncisionDateTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProcedureIncisionDateTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureIncisionDateTime {
    return new ProcedureIncisionDateTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureIncisionDateTime {
    return new ProcedureIncisionDateTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureIncisionDateTime {
    return new ProcedureIncisionDateTime().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureIncisionDateTime | PlainMessage<ProcedureIncisionDateTime> | undefined, b: ProcedureIncisionDateTime | PlainMessage<ProcedureIncisionDateTime> | undefined): boolean {
    return proto3.util.equals(ProcedureIncisionDateTime, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for method.
 * The method used to perform the procedure.
 * See http://hl7.org/fhir/StructureDefinition/procedure-method
 *
 * @generated from message google.fhir.r4.core.ProcedureMethod
 */
export class ProcedureMethod extends Message<ProcedureMethod> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ProcedureMethod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProcedureMethod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureMethod {
    return new ProcedureMethod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureMethod {
    return new ProcedureMethod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureMethod {
    return new ProcedureMethod().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureMethod | PlainMessage<ProcedureMethod> | undefined, b: ProcedureMethod | PlainMessage<ProcedureMethod> | undefined): boolean {
    return proto3.util.equals(ProcedureMethod, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for progressStatus.
 * A details procedure progress.
 * See http://hl7.org/fhir/StructureDefinition/procedure-progressStatus
 *
 * @generated from message google.fhir.r4.core.ProcedureProgressStatus
 */
export class ProcedureProgressStatus extends Message<ProcedureProgressStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ProcedureProgressStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProcedureProgressStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureProgressStatus {
    return new ProcedureProgressStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureProgressStatus {
    return new ProcedureProgressStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureProgressStatus {
    return new ProcedureProgressStatus().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureProgressStatus | PlainMessage<ProcedureProgressStatus> | undefined, b: ProcedureProgressStatus | PlainMessage<ProcedureProgressStatus> | undefined): boolean {
    return proto3.util.equals(ProcedureProgressStatus, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for schedule.
 * Schedule followed.
 * See http://hl7.org/fhir/StructureDefinition/procedure-schedule
 *
 * @generated from message google.fhir.r4.core.ProcedureSchedule
 */
export class ProcedureSchedule extends Message<ProcedureSchedule> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Timing value_timing = 3;
   */
  valueTiming?: Timing;

  constructor(data?: PartialMessage<ProcedureSchedule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProcedureSchedule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_timing", kind: "message", T: Timing },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcedureSchedule {
    return new ProcedureSchedule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcedureSchedule {
    return new ProcedureSchedule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcedureSchedule {
    return new ProcedureSchedule().fromJsonString(jsonString, options);
  }

  static equals(a: ProcedureSchedule | PlainMessage<ProcedureSchedule> | undefined, b: ProcedureSchedule | PlainMessage<ProcedureSchedule> | undefined): boolean {
    return proto3.util.equals(ProcedureSchedule, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for PQ-translation.
 * Same quantity with different units.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation
 *
 * @generated from message google.fhir.r4.core.QuantityPQTranslation
 */
export class QuantityPQTranslation extends Message<QuantityPQTranslation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Quantity value_quantity = 3;
   */
  valueQuantity?: Quantity;

  constructor(data?: PartialMessage<QuantityPQTranslation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuantityPQTranslation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_quantity", kind: "message", T: Quantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuantityPQTranslation {
    return new QuantityPQTranslation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuantityPQTranslation {
    return new QuantityPQTranslation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuantityPQTranslation {
    return new QuantityPQTranslation().fromJsonString(jsonString, options);
  }

  static equals(a: QuantityPQTranslation | PlainMessage<QuantityPQTranslation> | undefined, b: QuantityPQTranslation | PlainMessage<QuantityPQTranslation> | undefined): boolean {
    return proto3.util.equals(QuantityPQTranslation, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for uncertainty.
 * Standard Deviation (same units as the quantity).
 * See http://hl7.org/fhir/StructureDefinition/iso21090-uncertainty
 *
 * @generated from message google.fhir.r4.core.QuantityUncertainty
 */
export class QuantityUncertainty extends Message<QuantityUncertainty> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Decimal value_decimal = 3;
   */
  valueDecimal?: Decimal;

  constructor(data?: PartialMessage<QuantityUncertainty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuantityUncertainty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_decimal", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuantityUncertainty {
    return new QuantityUncertainty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuantityUncertainty {
    return new QuantityUncertainty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuantityUncertainty {
    return new QuantityUncertainty().fromJsonString(jsonString, options);
  }

  static equals(a: QuantityUncertainty | PlainMessage<QuantityUncertainty> | undefined, b: QuantityUncertainty | PlainMessage<QuantityUncertainty> | undefined): boolean {
    return proto3.util.equals(QuantityUncertainty, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for uncertaintyType.
 * Probability Distribution Type for uncertainty.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-uncertaintyType
 *
 * @generated from message google.fhir.r4.core.QuantityUncertaintyType
 */
export class QuantityUncertaintyType extends Message<QuantityUncertaintyType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuantityUncertaintyType.ValueCode value_code = 3;
   */
  valueCode?: QuantityUncertaintyType_ValueCode;

  constructor(data?: PartialMessage<QuantityUncertaintyType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuantityUncertaintyType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: QuantityUncertaintyType_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuantityUncertaintyType {
    return new QuantityUncertaintyType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuantityUncertaintyType {
    return new QuantityUncertaintyType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuantityUncertaintyType {
    return new QuantityUncertaintyType().fromJsonString(jsonString, options);
  }

  static equals(a: QuantityUncertaintyType | PlainMessage<QuantityUncertaintyType> | undefined, b: QuantityUncertaintyType | PlainMessage<QuantityUncertaintyType> | undefined): boolean {
    return proto3.util.equals(QuantityUncertaintyType, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuantityUncertaintyType.ValueCode
 */
export class QuantityUncertaintyType_ValueCode extends Message<QuantityUncertaintyType_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ProbabilityDistributionTypeValueSet.Value value = 1;
   */
  value = ProbabilityDistributionTypeValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuantityUncertaintyType_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuantityUncertaintyType.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ProbabilityDistributionTypeValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuantityUncertaintyType_ValueCode {
    return new QuantityUncertaintyType_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuantityUncertaintyType_ValueCode {
    return new QuantityUncertaintyType_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuantityUncertaintyType_ValueCode {
    return new QuantityUncertaintyType_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuantityUncertaintyType_ValueCode | PlainMessage<QuantityUncertaintyType_ValueCode> | undefined, b: QuantityUncertaintyType_ValueCode | PlainMessage<QuantityUncertaintyType_ValueCode> | undefined): boolean {
    return proto3.util.equals(QuantityUncertaintyType_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for baseType.
 * Base Type for answer.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-baseType
 *
 * @generated from message google.fhir.r4.core.QuestionnaireBaseType
 */
export class QuestionnaireBaseType extends Message<QuestionnaireBaseType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireBaseType.ValueCode value_code = 3;
   */
  valueCode?: QuestionnaireBaseType_ValueCode;

  constructor(data?: PartialMessage<QuestionnaireBaseType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireBaseType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: QuestionnaireBaseType_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireBaseType {
    return new QuestionnaireBaseType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireBaseType {
    return new QuestionnaireBaseType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireBaseType {
    return new QuestionnaireBaseType().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireBaseType | PlainMessage<QuestionnaireBaseType> | undefined, b: QuestionnaireBaseType | PlainMessage<QuestionnaireBaseType> | undefined): boolean {
    return proto3.util.equals(QuestionnaireBaseType, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuestionnaireBaseType.ValueCode
 */
export class QuestionnaireBaseType_ValueCode extends Message<QuestionnaireBaseType_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.DataTypeCode.Value value = 1;
   */
  value = DataTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireBaseType_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireBaseType.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DataTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireBaseType_ValueCode {
    return new QuestionnaireBaseType_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireBaseType_ValueCode {
    return new QuestionnaireBaseType_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireBaseType_ValueCode {
    return new QuestionnaireBaseType_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireBaseType_ValueCode | PlainMessage<QuestionnaireBaseType_ValueCode> | undefined, b: QuestionnaireBaseType_ValueCode | PlainMessage<QuestionnaireBaseType_ValueCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireBaseType_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for choiceOrientation.
 * horizontal | vertical.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-choiceOrientation
 *
 * @generated from message google.fhir.r4.core.QuestionnaireChoiceOrientation
 */
export class QuestionnaireChoiceOrientation extends Message<QuestionnaireChoiceOrientation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireChoiceOrientation.ValueCode value_code = 3;
   */
  valueCode?: QuestionnaireChoiceOrientation_ValueCode;

  constructor(data?: PartialMessage<QuestionnaireChoiceOrientation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireChoiceOrientation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: QuestionnaireChoiceOrientation_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireChoiceOrientation {
    return new QuestionnaireChoiceOrientation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireChoiceOrientation {
    return new QuestionnaireChoiceOrientation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireChoiceOrientation {
    return new QuestionnaireChoiceOrientation().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireChoiceOrientation | PlainMessage<QuestionnaireChoiceOrientation> | undefined, b: QuestionnaireChoiceOrientation | PlainMessage<QuestionnaireChoiceOrientation> | undefined): boolean {
    return proto3.util.equals(QuestionnaireChoiceOrientation, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuestionnaireChoiceOrientation.ValueCode
 */
export class QuestionnaireChoiceOrientation_ValueCode extends Message<QuestionnaireChoiceOrientation_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ChoiceListOrientationCode.Value value = 1;
   */
  value = ChoiceListOrientationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireChoiceOrientation_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireChoiceOrientation.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ChoiceListOrientationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireChoiceOrientation_ValueCode {
    return new QuestionnaireChoiceOrientation_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireChoiceOrientation_ValueCode {
    return new QuestionnaireChoiceOrientation_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireChoiceOrientation_ValueCode {
    return new QuestionnaireChoiceOrientation_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireChoiceOrientation_ValueCode | PlainMessage<QuestionnaireChoiceOrientation_ValueCode> | undefined, b: QuestionnaireChoiceOrientation_ValueCode | PlainMessage<QuestionnaireChoiceOrientation_ValueCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireChoiceOrientation_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for constraint.
 * Constraint.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-constraint
 *
 * @generated from message google.fhir.r4.core.QuestionnaireConstraint
 */
export class QuestionnaireConstraint extends Message<QuestionnaireConstraint> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Unique identifier
   *
   * @generated from field: google.fhir.r4.core.Id key = 4;
   */
  key?: Id;

  /**
   * Why needed
   *
   * @generated from field: google.fhir.r4.core.String requirements = 5;
   */
  requirements?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireConstraint.SeverityCode severity = 6;
   */
  severity?: QuestionnaireConstraint_SeverityCode;

  /**
   * Formal rule
   *
   * @generated from field: google.fhir.r4.core.String expression = 7;
   */
  expression?: String;

  /**
   * Human-readable rule
   *
   * @generated from field: google.fhir.r4.core.String human = 8;
   */
  human?: String;

  /**
   * Relative path to elements
   *
   * @generated from field: repeated google.fhir.r4.core.String location = 9;
   */
  location: String[] = [];

  constructor(data?: PartialMessage<QuestionnaireConstraint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireConstraint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "key", kind: "message", T: Id },
    { no: 5, name: "requirements", kind: "message", T: String },
    { no: 6, name: "severity", kind: "message", T: QuestionnaireConstraint_SeverityCode },
    { no: 7, name: "expression", kind: "message", T: String },
    { no: 8, name: "human", kind: "message", T: String },
    { no: 9, name: "location", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireConstraint {
    return new QuestionnaireConstraint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireConstraint {
    return new QuestionnaireConstraint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireConstraint {
    return new QuestionnaireConstraint().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireConstraint | PlainMessage<QuestionnaireConstraint> | undefined, b: QuestionnaireConstraint | PlainMessage<QuestionnaireConstraint> | undefined): boolean {
    return proto3.util.equals(QuestionnaireConstraint, a, b);
  }
}

/**
 * error|warning
 *
 * @generated from message google.fhir.r4.core.QuestionnaireConstraint.SeverityCode
 */
export class QuestionnaireConstraint_SeverityCode extends Message<QuestionnaireConstraint_SeverityCode> {
  /**
   * @generated from field: google.fhir.r4.core.ConstraintSeverityCode.Value value = 1;
   */
  value = ConstraintSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireConstraint_SeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireConstraint.SeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConstraintSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireConstraint_SeverityCode {
    return new QuestionnaireConstraint_SeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireConstraint_SeverityCode {
    return new QuestionnaireConstraint_SeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireConstraint_SeverityCode {
    return new QuestionnaireConstraint_SeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireConstraint_SeverityCode | PlainMessage<QuestionnaireConstraint_SeverityCode> | undefined, b: QuestionnaireConstraint_SeverityCode | PlainMessage<QuestionnaireConstraint_SeverityCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireConstraint_SeverityCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for displayCategory.
 * Purpose of rendered text.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-displayCategory
 *
 * @generated from message google.fhir.r4.core.QuestionnaireDisplayCategory
 */
export class QuestionnaireDisplayCategory extends Message<QuestionnaireDisplayCategory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<QuestionnaireDisplayCategory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireDisplayCategory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireDisplayCategory {
    return new QuestionnaireDisplayCategory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireDisplayCategory {
    return new QuestionnaireDisplayCategory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireDisplayCategory {
    return new QuestionnaireDisplayCategory().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireDisplayCategory | PlainMessage<QuestionnaireDisplayCategory> | undefined, b: QuestionnaireDisplayCategory | PlainMessage<QuestionnaireDisplayCategory> | undefined): boolean {
    return proto3.util.equals(QuestionnaireDisplayCategory, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for fhirType.
 * The underlying FHIR data type.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-fhirType
 *
 * @generated from message google.fhir.r4.core.QuestionnaireFhirType
 */
export class QuestionnaireFhirType extends Message<QuestionnaireFhirType> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<QuestionnaireFhirType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireFhirType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireFhirType {
    return new QuestionnaireFhirType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireFhirType {
    return new QuestionnaireFhirType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireFhirType {
    return new QuestionnaireFhirType().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireFhirType | PlainMessage<QuestionnaireFhirType> | undefined, b: QuestionnaireFhirType | PlainMessage<QuestionnaireFhirType> | undefined): boolean {
    return proto3.util.equals(QuestionnaireFhirType, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for hidden.
 * Don't display to user.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-hidden
 *
 * @generated from message google.fhir.r4.core.QuestionnaireHidden
 */
export class QuestionnaireHidden extends Message<QuestionnaireHidden> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<QuestionnaireHidden>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireHidden";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireHidden {
    return new QuestionnaireHidden().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireHidden {
    return new QuestionnaireHidden().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireHidden {
    return new QuestionnaireHidden().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireHidden | PlainMessage<QuestionnaireHidden> | undefined, b: QuestionnaireHidden | PlainMessage<QuestionnaireHidden> | undefined): boolean {
    return proto3.util.equals(QuestionnaireHidden, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for itemControl.
 * E.g. Fly-over, Table, Checkbox, Combo-box, Lookup, etc.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl
 *
 * @generated from message google.fhir.r4.core.QuestionnaireItemControl
 */
export class QuestionnaireItemControl extends Message<QuestionnaireItemControl> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<QuestionnaireItemControl>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireItemControl";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemControl {
    return new QuestionnaireItemControl().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemControl {
    return new QuestionnaireItemControl().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemControl {
    return new QuestionnaireItemControl().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemControl | PlainMessage<QuestionnaireItemControl> | undefined, b: QuestionnaireItemControl | PlainMessage<QuestionnaireItemControl> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemControl, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for maxOccurs.
 * Maximum repetitions.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-maxOccurs
 *
 * @generated from message google.fhir.r4.core.QuestionnaireMaxOccurs
 */
export class QuestionnaireMaxOccurs extends Message<QuestionnaireMaxOccurs> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<QuestionnaireMaxOccurs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireMaxOccurs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireMaxOccurs {
    return new QuestionnaireMaxOccurs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireMaxOccurs {
    return new QuestionnaireMaxOccurs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireMaxOccurs {
    return new QuestionnaireMaxOccurs().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireMaxOccurs | PlainMessage<QuestionnaireMaxOccurs> | undefined, b: QuestionnaireMaxOccurs | PlainMessage<QuestionnaireMaxOccurs> | undefined): boolean {
    return proto3.util.equals(QuestionnaireMaxOccurs, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for maxValue.
 * Must be <= this value.
 * See http://hl7.org/fhir/StructureDefinition/maxValue
 *
 * @generated from message google.fhir.r4.core.QuestionnaireMaxValue
 */
export class QuestionnaireMaxValue extends Message<QuestionnaireMaxValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireMaxValue.ValueX value = 3;
   */
  value?: QuestionnaireMaxValue_ValueX;

  constructor(data?: PartialMessage<QuestionnaireMaxValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireMaxValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: QuestionnaireMaxValue_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireMaxValue {
    return new QuestionnaireMaxValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireMaxValue {
    return new QuestionnaireMaxValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireMaxValue {
    return new QuestionnaireMaxValue().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireMaxValue | PlainMessage<QuestionnaireMaxValue> | undefined, b: QuestionnaireMaxValue | PlainMessage<QuestionnaireMaxValue> | undefined): boolean {
    return proto3.util.equals(QuestionnaireMaxValue, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuestionnaireMaxValue.ValueX
 */
export class QuestionnaireMaxValue_ValueX extends Message<QuestionnaireMaxValue_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.QuestionnaireMaxValue.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 3;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 4;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<QuestionnaireMaxValue_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireMaxValue.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 3, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 4, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireMaxValue_ValueX {
    return new QuestionnaireMaxValue_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireMaxValue_ValueX {
    return new QuestionnaireMaxValue_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireMaxValue_ValueX {
    return new QuestionnaireMaxValue_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireMaxValue_ValueX | PlainMessage<QuestionnaireMaxValue_ValueX> | undefined, b: QuestionnaireMaxValue_ValueX | PlainMessage<QuestionnaireMaxValue_ValueX> | undefined): boolean {
    return proto3.util.equals(QuestionnaireMaxValue_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for minOccurs.
 * Minimum repetitions.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-minOccurs
 *
 * @generated from message google.fhir.r4.core.QuestionnaireMinOccurs
 */
export class QuestionnaireMinOccurs extends Message<QuestionnaireMinOccurs> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<QuestionnaireMinOccurs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireMinOccurs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireMinOccurs {
    return new QuestionnaireMinOccurs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireMinOccurs {
    return new QuestionnaireMinOccurs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireMinOccurs {
    return new QuestionnaireMinOccurs().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireMinOccurs | PlainMessage<QuestionnaireMinOccurs> | undefined, b: QuestionnaireMinOccurs | PlainMessage<QuestionnaireMinOccurs> | undefined): boolean {
    return proto3.util.equals(QuestionnaireMinOccurs, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for minValue.
 * Must be >= this value.
 * See http://hl7.org/fhir/StructureDefinition/minValue
 *
 * @generated from message google.fhir.r4.core.QuestionnaireMinValue
 */
export class QuestionnaireMinValue extends Message<QuestionnaireMinValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireMinValue.ValueX value = 3;
   */
  value?: QuestionnaireMinValue_ValueX;

  constructor(data?: PartialMessage<QuestionnaireMinValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireMinValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: QuestionnaireMinValue_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireMinValue {
    return new QuestionnaireMinValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireMinValue {
    return new QuestionnaireMinValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireMinValue {
    return new QuestionnaireMinValue().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireMinValue | PlainMessage<QuestionnaireMinValue> | undefined, b: QuestionnaireMinValue | PlainMessage<QuestionnaireMinValue> | undefined): boolean {
    return proto3.util.equals(QuestionnaireMinValue, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuestionnaireMinValue.ValueX
 */
export class QuestionnaireMinValue_ValueX extends Message<QuestionnaireMinValue_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.QuestionnaireMinValue.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 3;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 4;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 5;
     */
    value: Integer;
    case: "integer";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<QuestionnaireMinValue_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireMinValue.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 3, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 4, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 5, name: "integer", kind: "message", T: Integer, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireMinValue_ValueX {
    return new QuestionnaireMinValue_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireMinValue_ValueX {
    return new QuestionnaireMinValue_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireMinValue_ValueX {
    return new QuestionnaireMinValue_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireMinValue_ValueX | PlainMessage<QuestionnaireMinValue_ValueX> | undefined, b: QuestionnaireMinValue_ValueX | PlainMessage<QuestionnaireMinValue_ValueX> | undefined): boolean {
    return proto3.util.equals(QuestionnaireMinValue_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for optionExclusive.
 * Option is exclusive.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-optionExclusive
 *
 * @generated from message google.fhir.r4.core.QuestionnaireOptionExclusive
 */
export class QuestionnaireOptionExclusive extends Message<QuestionnaireOptionExclusive> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<QuestionnaireOptionExclusive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireOptionExclusive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireOptionExclusive {
    return new QuestionnaireOptionExclusive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireOptionExclusive {
    return new QuestionnaireOptionExclusive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireOptionExclusive {
    return new QuestionnaireOptionExclusive().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireOptionExclusive | PlainMessage<QuestionnaireOptionExclusive> | undefined, b: QuestionnaireOptionExclusive | PlainMessage<QuestionnaireOptionExclusive> | undefined): boolean {
    return proto3.util.equals(QuestionnaireOptionExclusive, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for optionPrefix.
 * E.g. "(a)", "1.", etc.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-optionPrefix
 *
 * @generated from message google.fhir.r4.core.QuestionnaireOptionPrefix
 */
export class QuestionnaireOptionPrefix extends Message<QuestionnaireOptionPrefix> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<QuestionnaireOptionPrefix>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireOptionPrefix";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireOptionPrefix {
    return new QuestionnaireOptionPrefix().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireOptionPrefix {
    return new QuestionnaireOptionPrefix().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireOptionPrefix {
    return new QuestionnaireOptionPrefix().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireOptionPrefix | PlainMessage<QuestionnaireOptionPrefix> | undefined, b: QuestionnaireOptionPrefix | PlainMessage<QuestionnaireOptionPrefix> | undefined): boolean {
    return proto3.util.equals(QuestionnaireOptionPrefix, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for referenceFilter.
 * Filter to apply when looking up references.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-referenceFilter
 *
 * @generated from message google.fhir.r4.core.QuestionnaireReferenceFilter
 */
export class QuestionnaireReferenceFilter extends Message<QuestionnaireReferenceFilter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<QuestionnaireReferenceFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireReferenceFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireReferenceFilter {
    return new QuestionnaireReferenceFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireReferenceFilter {
    return new QuestionnaireReferenceFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireReferenceFilter {
    return new QuestionnaireReferenceFilter().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireReferenceFilter | PlainMessage<QuestionnaireReferenceFilter> | undefined, b: QuestionnaireReferenceFilter | PlainMessage<QuestionnaireReferenceFilter> | undefined): boolean {
    return proto3.util.equals(QuestionnaireReferenceFilter, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for referenceProfile.
 * Allowed profile for reference.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-referenceProfile
 *
 * @generated from message google.fhir.r4.core.QuestionnaireReferenceProfile
 */
export class QuestionnaireReferenceProfile extends Message<QuestionnaireReferenceProfile> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<QuestionnaireReferenceProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireReferenceProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireReferenceProfile {
    return new QuestionnaireReferenceProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireReferenceProfile {
    return new QuestionnaireReferenceProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireReferenceProfile {
    return new QuestionnaireReferenceProfile().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireReferenceProfile | PlainMessage<QuestionnaireReferenceProfile> | undefined, b: QuestionnaireReferenceProfile | PlainMessage<QuestionnaireReferenceProfile> | undefined): boolean {
    return proto3.util.equals(QuestionnaireReferenceProfile, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for referenceResource.
 * Allowed resource for reference.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource
 *
 * @generated from message google.fhir.r4.core.QuestionnaireReferenceResource
 */
export class QuestionnaireReferenceResource extends Message<QuestionnaireReferenceResource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireReferenceResource.ValueCode value_code = 3;
   */
  valueCode?: QuestionnaireReferenceResource_ValueCode;

  constructor(data?: PartialMessage<QuestionnaireReferenceResource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireReferenceResource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: QuestionnaireReferenceResource_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireReferenceResource {
    return new QuestionnaireReferenceResource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireReferenceResource {
    return new QuestionnaireReferenceResource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireReferenceResource {
    return new QuestionnaireReferenceResource().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireReferenceResource | PlainMessage<QuestionnaireReferenceResource> | undefined, b: QuestionnaireReferenceResource | PlainMessage<QuestionnaireReferenceResource> | undefined): boolean {
    return proto3.util.equals(QuestionnaireReferenceResource, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuestionnaireReferenceResource.ValueCode
 */
export class QuestionnaireReferenceResource_ValueCode extends Message<QuestionnaireReferenceResource_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireReferenceResource_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireReferenceResource.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireReferenceResource_ValueCode {
    return new QuestionnaireReferenceResource_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireReferenceResource_ValueCode {
    return new QuestionnaireReferenceResource_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireReferenceResource_ValueCode {
    return new QuestionnaireReferenceResource_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireReferenceResource_ValueCode | PlainMessage<QuestionnaireReferenceResource_ValueCode> | undefined, b: QuestionnaireReferenceResource_ValueCode | PlainMessage<QuestionnaireReferenceResource_ValueCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireReferenceResource_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for author.
 * Who answered question/group.
 * See http://hl7.org/fhir/StructureDefinition/questionnaireresponse-author
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponseAuthor
 */
export class QuestionnaireResponseAuthor extends Message<QuestionnaireResponseAuthor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<QuestionnaireResponseAuthor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponseAuthor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseAuthor {
    return new QuestionnaireResponseAuthor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseAuthor {
    return new QuestionnaireResponseAuthor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseAuthor {
    return new QuestionnaireResponseAuthor().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseAuthor | PlainMessage<QuestionnaireResponseAuthor> | undefined, b: QuestionnaireResponseAuthor | PlainMessage<QuestionnaireResponseAuthor> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseAuthor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for completionMode.
 * E.g. Verbal, written, electronic.
 * See
 * http://hl7.org/fhir/StructureDefinition/questionnaireresponse-completionMode
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponseCompletionMode
 */
export class QuestionnaireResponseCompletionMode extends Message<QuestionnaireResponseCompletionMode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<QuestionnaireResponseCompletionMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponseCompletionMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseCompletionMode {
    return new QuestionnaireResponseCompletionMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseCompletionMode {
    return new QuestionnaireResponseCompletionMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseCompletionMode {
    return new QuestionnaireResponseCompletionMode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseCompletionMode | PlainMessage<QuestionnaireResponseCompletionMode> | undefined, b: QuestionnaireResponseCompletionMode | PlainMessage<QuestionnaireResponseCompletionMode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseCompletionMode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reason.
 * Why response was created.
 * See http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reason
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponseReason
 */
export class QuestionnaireResponseReason extends Message<QuestionnaireResponseReason> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<QuestionnaireResponseReason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponseReason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseReason {
    return new QuestionnaireResponseReason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseReason {
    return new QuestionnaireResponseReason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseReason {
    return new QuestionnaireResponseReason().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseReason | PlainMessage<QuestionnaireResponseReason> | undefined, b: QuestionnaireResponseReason | PlainMessage<QuestionnaireResponseReason> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseReason, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reviewer.
 * Who verified completion of form?.
 * See http://hl7.org/fhir/StructureDefinition/questionnaireresponse-reviewer
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponseReviewer
 */
export class QuestionnaireResponseReviewer extends Message<QuestionnaireResponseReviewer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<QuestionnaireResponseReviewer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponseReviewer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseReviewer {
    return new QuestionnaireResponseReviewer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseReviewer {
    return new QuestionnaireResponseReviewer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseReviewer {
    return new QuestionnaireResponseReviewer().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseReviewer | PlainMessage<QuestionnaireResponseReviewer> | undefined, b: QuestionnaireResponseReviewer | PlainMessage<QuestionnaireResponseReviewer> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseReviewer, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for signature.
 * A signature attesting to the content.
 * See http://hl7.org/fhir/StructureDefinition/questionnaireresponse-signature
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponseSignature
 */
export class QuestionnaireResponseSignature extends Message<QuestionnaireResponseSignature> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Signature value_signature = 3;
   */
  valueSignature?: Signature;

  constructor(data?: PartialMessage<QuestionnaireResponseSignature>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponseSignature";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_signature", kind: "message", T: Signature },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseSignature {
    return new QuestionnaireResponseSignature().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseSignature {
    return new QuestionnaireResponseSignature().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseSignature {
    return new QuestionnaireResponseSignature().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseSignature | PlainMessage<QuestionnaireResponseSignature> | undefined, b: QuestionnaireResponseSignature | PlainMessage<QuestionnaireResponseSignature> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseSignature, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for signatureRequired.
 * Is signature needed?.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-signatureRequired
 *
 * @generated from message google.fhir.r4.core.QuestionnaireSignatureRequired
 */
export class QuestionnaireSignatureRequired extends Message<QuestionnaireSignatureRequired> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<QuestionnaireSignatureRequired>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireSignatureRequired";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireSignatureRequired {
    return new QuestionnaireSignatureRequired().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireSignatureRequired {
    return new QuestionnaireSignatureRequired().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireSignatureRequired {
    return new QuestionnaireSignatureRequired().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireSignatureRequired | PlainMessage<QuestionnaireSignatureRequired> | undefined, b: QuestionnaireSignatureRequired | PlainMessage<QuestionnaireSignatureRequired> | undefined): boolean {
    return proto3.util.equals(QuestionnaireSignatureRequired, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sliderStepValue.
 * Increment value for slider.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-sliderStepValue
 *
 * @generated from message google.fhir.r4.core.QuestionnaireSliderStepValue
 */
export class QuestionnaireSliderStepValue extends Message<QuestionnaireSliderStepValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<QuestionnaireSliderStepValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireSliderStepValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireSliderStepValue {
    return new QuestionnaireSliderStepValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireSliderStepValue {
    return new QuestionnaireSliderStepValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireSliderStepValue {
    return new QuestionnaireSliderStepValue().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireSliderStepValue | PlainMessage<QuestionnaireSliderStepValue> | undefined, b: QuestionnaireSliderStepValue | PlainMessage<QuestionnaireSliderStepValue> | undefined): boolean {
    return proto3.util.equals(QuestionnaireSliderStepValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for supportLink.
 * Supporting information.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-supportLink
 *
 * @generated from message google.fhir.r4.core.QuestionnaireSupportLink
 */
export class QuestionnaireSupportLink extends Message<QuestionnaireSupportLink> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<QuestionnaireSupportLink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireSupportLink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireSupportLink {
    return new QuestionnaireSupportLink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireSupportLink {
    return new QuestionnaireSupportLink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireSupportLink {
    return new QuestionnaireSupportLink().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireSupportLink | PlainMessage<QuestionnaireSupportLink> | undefined, b: QuestionnaireSupportLink | PlainMessage<QuestionnaireSupportLink> | undefined): boolean {
    return proto3.util.equals(QuestionnaireSupportLink, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for unit.
 * Unit for numeric answer.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-unit
 *
 * @generated from message google.fhir.r4.core.QuestionnaireUnit
 */
export class QuestionnaireUnit extends Message<QuestionnaireUnit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<QuestionnaireUnit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireUnit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireUnit {
    return new QuestionnaireUnit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireUnit {
    return new QuestionnaireUnit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireUnit {
    return new QuestionnaireUnit().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireUnit | PlainMessage<QuestionnaireUnit> | undefined, b: QuestionnaireUnit | PlainMessage<QuestionnaireUnit> | undefined): boolean {
    return proto3.util.equals(QuestionnaireUnit, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for unitOption.
 * Unit choice.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-unitOption
 *
 * @generated from message google.fhir.r4.core.QuestionnaireUnitOption
 */
export class QuestionnaireUnitOption extends Message<QuestionnaireUnitOption> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<QuestionnaireUnitOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireUnitOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireUnitOption {
    return new QuestionnaireUnitOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireUnitOption {
    return new QuestionnaireUnitOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireUnitOption {
    return new QuestionnaireUnitOption().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireUnitOption | PlainMessage<QuestionnaireUnitOption> | undefined, b: QuestionnaireUnitOption | PlainMessage<QuestionnaireUnitOption> | undefined): boolean {
    return proto3.util.equals(QuestionnaireUnitOption, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for unitValueSet.
 * Unit choices.
 * See http://hl7.org/fhir/StructureDefinition/questionnaire-unitValueSet
 *
 * @generated from message google.fhir.r4.core.QuestionnaireUnitValueSet
 */
export class QuestionnaireUnitValueSet extends Message<QuestionnaireUnitValueSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<QuestionnaireUnitValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireUnitValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireUnitValueSet {
    return new QuestionnaireUnitValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireUnitValueSet {
    return new QuestionnaireUnitValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireUnitValueSet {
    return new QuestionnaireUnitValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireUnitValueSet | PlainMessage<QuestionnaireUnitValueSet> | undefined, b: QuestionnaireUnitValueSet | PlainMessage<QuestionnaireUnitValueSet> | undefined): boolean {
    return proto3.util.equals(QuestionnaireUnitValueSet, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for usageMode.
 * capture | display | display-non-empty | capture-display |
 * capture-display-non-empty. See
 * http://hl7.org/fhir/StructureDefinition/questionnaire-usageMode
 *
 * @generated from message google.fhir.r4.core.QuestionnaireUsageMode
 */
export class QuestionnaireUsageMode extends Message<QuestionnaireUsageMode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireUsageMode.ValueCode value_code = 3;
   */
  valueCode?: QuestionnaireUsageMode_ValueCode;

  constructor(data?: PartialMessage<QuestionnaireUsageMode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireUsageMode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: QuestionnaireUsageMode_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireUsageMode {
    return new QuestionnaireUsageMode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireUsageMode {
    return new QuestionnaireUsageMode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireUsageMode {
    return new QuestionnaireUsageMode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireUsageMode | PlainMessage<QuestionnaireUsageMode> | undefined, b: QuestionnaireUsageMode | PlainMessage<QuestionnaireUsageMode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireUsageMode, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.QuestionnaireUsageMode.ValueCode
 */
export class QuestionnaireUsageMode_ValueCode extends Message<QuestionnaireUsageMode_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireItemUsageModeCode.Value value = 1;
   */
  value = QuestionnaireItemUsageModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireUsageMode_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireUsageMode.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireItemUsageModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireUsageMode_ValueCode {
    return new QuestionnaireUsageMode_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireUsageMode_ValueCode {
    return new QuestionnaireUsageMode_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireUsageMode_ValueCode {
    return new QuestionnaireUsageMode_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireUsageMode_ValueCode | PlainMessage<QuestionnaireUsageMode_ValueCode> | undefined, b: QuestionnaireUsageMode_ValueCode | PlainMessage<QuestionnaireUsageMode_ValueCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireUsageMode_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Variable.
 * Variable for processing.
 * See http://hl7.org/fhir/StructureDefinition/variable
 *
 * @generated from message google.fhir.r4.core.QuestionnaireVariable
 */
export class QuestionnaireVariable extends Message<QuestionnaireVariable> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Expression value_expression = 3;
   */
  valueExpression?: Expression;

  constructor(data?: PartialMessage<QuestionnaireVariable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireVariable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_expression", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireVariable {
    return new QuestionnaireVariable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireVariable {
    return new QuestionnaireVariable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireVariable {
    return new QuestionnaireVariable().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireVariable | PlainMessage<QuestionnaireVariable> | undefined, b: QuestionnaireVariable | PlainMessage<QuestionnaireVariable> | undefined): boolean {
    return proto3.util.equals(QuestionnaireVariable, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reasonCode.
 * Why was event performed?.
 * See http://hl7.org/fhir/StructureDefinition/workflow-reasonCode
 *
 * @generated from message google.fhir.r4.core.ReasonCode
 */
export class ReasonCode extends Message<ReasonCode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReasonCode {
    return new ReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReasonCode {
    return new ReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReasonCode {
    return new ReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReasonCode | PlainMessage<ReasonCode> | undefined, b: ReasonCode | PlainMessage<ReasonCode> | undefined): boolean {
    return proto3.util.equals(ReasonCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reasonReference.
 * Why was event performed?.
 * See http://hl7.org/fhir/StructureDefinition/workflow-reasonReference
 *
 * @generated from message google.fhir.r4.core.ReasonReference
 */
export class ReasonReference extends Message<ReasonReference> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ReasonReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ReasonReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReasonReference {
    return new ReasonReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReasonReference {
    return new ReasonReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReasonReference {
    return new ReasonReference().fromJsonString(jsonString, options);
  }

  static equals(a: ReasonReference | PlainMessage<ReasonReference> | undefined, b: ReasonReference | PlainMessage<ReasonReference> | undefined): boolean {
    return proto3.util.equals(ReasonReference, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for regex.
 * Regular expression pattern.
 * See http://hl7.org/fhir/StructureDefinition/regex
 *
 * @generated from message google.fhir.r4.core.Regex
 */
export class Regex extends Message<Regex> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<Regex>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Regex";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Regex {
    return new Regex().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Regex {
    return new Regex().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Regex {
    return new Regex().fromJsonString(jsonString, options);
  }

  static equals(a: Regex | PlainMessage<Regex> | undefined, b: Regex | PlainMessage<Regex> | undefined): boolean {
    return proto3.util.equals(Regex, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for relatedArtifact.
 * Documentation relevant to the 'parent' resource.
 * See http://hl7.org/fhir/StructureDefinition/workflow-relatedArtifact
 *
 * @generated from message google.fhir.r4.core.RelatedArtifactExtension
 */
export class RelatedArtifactExtension extends Message<RelatedArtifactExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.RelatedArtifact value_related_artifact = 3;
   */
  valueRelatedArtifact?: RelatedArtifact;

  constructor(data?: PartialMessage<RelatedArtifactExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedArtifactExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_related_artifact", kind: "message", T: RelatedArtifact },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedArtifactExtension {
    return new RelatedArtifactExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedArtifactExtension {
    return new RelatedArtifactExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedArtifactExtension {
    return new RelatedArtifactExtension().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedArtifactExtension | PlainMessage<RelatedArtifactExtension> | undefined, b: RelatedArtifactExtension | PlainMessage<RelatedArtifactExtension> | undefined): boolean {
    return proto3.util.equals(RelatedArtifactExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Relative Date Criteria.
 * Relative Date Criteria.
 * See http://hl7.org/fhir/StructureDefinition/relative-date
 *
 * @generated from message google.fhir.r4.core.RelativeDateCriteria
 */
export class RelativeDateCriteria extends Message<RelativeDateCriteria> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.RelativeDateCriteria.EventX event = 4;
   */
  event?: RelativeDateCriteria_EventX;

  /**
   * @generated from field: google.fhir.r4.core.RelativeDateCriteria.RelationshipCode relationship = 5;
   */
  relationship?: RelativeDateCriteria_RelationshipCode;

  /**
   * Duration after the event
   *
   * @generated from field: google.fhir.r4.core.Duration offset = 6;
   */
  offset?: Duration;

  constructor(data?: PartialMessage<RelativeDateCriteria>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelativeDateCriteria";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "event", kind: "message", T: RelativeDateCriteria_EventX },
    { no: 5, name: "relationship", kind: "message", T: RelativeDateCriteria_RelationshipCode },
    { no: 6, name: "offset", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelativeDateCriteria {
    return new RelativeDateCriteria().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelativeDateCriteria {
    return new RelativeDateCriteria().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelativeDateCriteria {
    return new RelativeDateCriteria().fromJsonString(jsonString, options);
  }

  static equals(a: RelativeDateCriteria | PlainMessage<RelativeDateCriteria> | undefined, b: RelativeDateCriteria | PlainMessage<RelativeDateCriteria> | undefined): boolean {
    return proto3.util.equals(RelativeDateCriteria, a, b);
  }
}

/**
 * Event that the date is relative to
 *
 * @generated from message google.fhir.r4.core.RelativeDateCriteria.EventX
 */
export class RelativeDateCriteria_EventX extends Message<RelativeDateCriteria_EventX> {
  /**
   * @generated from oneof google.fhir.r4.core.RelativeDateCriteria.EventX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RelativeDateCriteria_EventX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelativeDateCriteria.EventX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelativeDateCriteria_EventX {
    return new RelativeDateCriteria_EventX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelativeDateCriteria_EventX {
    return new RelativeDateCriteria_EventX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelativeDateCriteria_EventX {
    return new RelativeDateCriteria_EventX().fromJsonString(jsonString, options);
  }

  static equals(a: RelativeDateCriteria_EventX | PlainMessage<RelativeDateCriteria_EventX> | undefined, b: RelativeDateCriteria_EventX | PlainMessage<RelativeDateCriteria_EventX> | undefined): boolean {
    return proto3.util.equals(RelativeDateCriteria_EventX, a, b);
  }
}

/**
 * before-start | before | before-end | concurrent-with-start | concurrent |
 * concurrent-with-end | after-start | after | after-end
 *
 * @generated from message google.fhir.r4.core.RelativeDateCriteria.RelationshipCode
 */
export class RelativeDateCriteria_RelationshipCode extends Message<RelativeDateCriteria_RelationshipCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionRelationshipTypeCode.Value value = 1;
   */
  value = ActionRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RelativeDateCriteria_RelationshipCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelativeDateCriteria.RelationshipCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelativeDateCriteria_RelationshipCode {
    return new RelativeDateCriteria_RelationshipCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelativeDateCriteria_RelationshipCode {
    return new RelativeDateCriteria_RelationshipCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelativeDateCriteria_RelationshipCode {
    return new RelativeDateCriteria_RelationshipCode().fromJsonString(jsonString, options);
  }

  static equals(a: RelativeDateCriteria_RelationshipCode | PlainMessage<RelativeDateCriteria_RelationshipCode> | undefined, b: RelativeDateCriteria_RelationshipCode | PlainMessage<RelativeDateCriteria_RelationshipCode> | undefined): boolean {
    return proto3.util.equals(RelativeDateCriteria_RelationshipCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for relativeDateTime.
 * A date/time that is specified relative to another event.
 * See http://hl7.org/fhir/StructureDefinition/cqf-relativeDateTime
 *
 * @generated from message google.fhir.r4.core.RelativeDateTime
 */
export class RelativeDateTime extends Message<RelativeDateTime> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Relative to what event
   *
   * @generated from field: google.fhir.r4.core.Reference target = 4;
   */
  target?: Reference;

  /**
   * Relative to which element on the event
   *
   * @generated from field: google.fhir.r4.core.String target_path = 5;
   */
  targetPath?: String;

  /**
   * @generated from field: google.fhir.r4.core.RelativeDateTime.RelationshipCode relationship = 6;
   */
  relationship?: RelativeDateTime_RelationshipCode;

  /**
   * @generated from field: google.fhir.r4.core.RelativeDateTime.OffsetX offset = 7;
   */
  offset?: RelativeDateTime_OffsetX;

  constructor(data?: PartialMessage<RelativeDateTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelativeDateTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "target", kind: "message", T: Reference },
    { no: 5, name: "target_path", kind: "message", T: String },
    { no: 6, name: "relationship", kind: "message", T: RelativeDateTime_RelationshipCode },
    { no: 7, name: "offset", kind: "message", T: RelativeDateTime_OffsetX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelativeDateTime {
    return new RelativeDateTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelativeDateTime {
    return new RelativeDateTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelativeDateTime {
    return new RelativeDateTime().fromJsonString(jsonString, options);
  }

  static equals(a: RelativeDateTime | PlainMessage<RelativeDateTime> | undefined, b: RelativeDateTime | PlainMessage<RelativeDateTime> | undefined): boolean {
    return proto3.util.equals(RelativeDateTime, a, b);
  }
}

/**
 * before-start | before | before-end | concurrent-with-start | concurrent |
 * concurrent-with-end | after-start | after | after-end
 *
 * @generated from message google.fhir.r4.core.RelativeDateTime.RelationshipCode
 */
export class RelativeDateTime_RelationshipCode extends Message<RelativeDateTime_RelationshipCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionRelationshipTypeCode.Value value = 1;
   */
  value = ActionRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RelativeDateTime_RelationshipCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelativeDateTime.RelationshipCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelativeDateTime_RelationshipCode {
    return new RelativeDateTime_RelationshipCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelativeDateTime_RelationshipCode {
    return new RelativeDateTime_RelationshipCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelativeDateTime_RelationshipCode {
    return new RelativeDateTime_RelationshipCode().fromJsonString(jsonString, options);
  }

  static equals(a: RelativeDateTime_RelationshipCode | PlainMessage<RelativeDateTime_RelationshipCode> | undefined, b: RelativeDateTime_RelationshipCode | PlainMessage<RelativeDateTime_RelationshipCode> | undefined): boolean {
    return proto3.util.equals(RelativeDateTime_RelationshipCode, a, b);
  }
}

/**
 * How long
 *
 * @generated from message google.fhir.r4.core.RelativeDateTime.OffsetX
 */
export class RelativeDateTime_OffsetX extends Message<RelativeDateTime_OffsetX> {
  /**
   * @generated from oneof google.fhir.r4.core.RelativeDateTime.OffsetX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 1;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<RelativeDateTime_OffsetX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelativeDateTime.OffsetX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelativeDateTime_OffsetX {
    return new RelativeDateTime_OffsetX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelativeDateTime_OffsetX {
    return new RelativeDateTime_OffsetX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelativeDateTime_OffsetX {
    return new RelativeDateTime_OffsetX().fromJsonString(jsonString, options);
  }

  static equals(a: RelativeDateTime_OffsetX | PlainMessage<RelativeDateTime_OffsetX> | undefined, b: RelativeDateTime_OffsetX | PlainMessage<RelativeDateTime_OffsetX> | undefined): boolean {
    return proto3.util.equals(RelativeDateTime_OffsetX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for relevantHistory.
 * Key events in history of request.
 * See http://hl7.org/fhir/StructureDefinition/request-relevantHistory
 *
 * @generated from message google.fhir.r4.core.RelevantHistory
 */
export class RelevantHistory extends Message<RelevantHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<RelevantHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelevantHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelevantHistory {
    return new RelevantHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelevantHistory {
    return new RelevantHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelevantHistory {
    return new RelevantHistory().fromJsonString(jsonString, options);
  }

  static equals(a: RelevantHistory | PlainMessage<RelevantHistory> | undefined, b: RelevantHistory | PlainMessage<RelevantHistory> | undefined): boolean {
    return proto3.util.equals(RelevantHistory, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Rendered Value.
 * What should be displayed to human (if default is not appropriate).
 * See http://hl7.org/fhir/StructureDefinition/rendered-value
 *
 * @generated from message google.fhir.r4.core.RenderedValue
 */
export class RenderedValue extends Message<RenderedValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<RenderedValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RenderedValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderedValue {
    return new RenderedValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderedValue {
    return new RenderedValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderedValue {
    return new RenderedValue().fromJsonString(jsonString, options);
  }

  static equals(a: RenderedValue | PlainMessage<RenderedValue> | undefined, b: RenderedValue | PlainMessage<RenderedValue> | undefined): boolean {
    return proto3.util.equals(RenderedValue, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for replaces.
 * References a resource that this resource replaces.
 * See http://hl7.org/fhir/StructureDefinition/replaces
 *
 * @generated from message google.fhir.r4.core.Replaces
 */
export class Replaces extends Message<Replaces> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<Replaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Replaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Replaces {
    return new Replaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Replaces {
    return new Replaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Replaces {
    return new Replaces().fromJsonString(jsonString, options);
  }

  static equals(a: Replaces | PlainMessage<Replaces> | undefined, b: Replaces | PlainMessage<Replaces> | undefined): boolean {
    return proto3.util.equals(Replaces, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for researchStudy.
 * Associated research study.
 * See http://hl7.org/fhir/StructureDefinition/workflow-researchStudy
 *
 * @generated from message google.fhir.r4.core.ResearchStudyExtension
 */
export class ResearchStudyExtension extends Message<ResearchStudyExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ResearchStudyExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResearchStudyExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchStudyExtension {
    return new ResearchStudyExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchStudyExtension {
    return new ResearchStudyExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchStudyExtension {
    return new ResearchStudyExtension().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchStudyExtension | PlainMessage<ResearchStudyExtension> | undefined, b: ResearchStudyExtension | PlainMessage<ResearchStudyExtension> | undefined): boolean {
    return proto3.util.equals(ResearchStudyExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for pertainsToGoal.
 * Pertains to goal.
 * See http://hl7.org/fhir/StructureDefinition/resource-pertainsToGoal
 *
 * @generated from message google.fhir.r4.core.ResourcePertainsToGoal
 */
export class ResourcePertainsToGoal extends Message<ResourcePertainsToGoal> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ResourcePertainsToGoal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResourcePertainsToGoal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourcePertainsToGoal {
    return new ResourcePertainsToGoal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourcePertainsToGoal {
    return new ResourcePertainsToGoal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourcePertainsToGoal {
    return new ResourcePertainsToGoal().fromJsonString(jsonString, options);
  }

  static equals(a: ResourcePertainsToGoal | PlainMessage<ResourcePertainsToGoal> | undefined, b: ResourcePertainsToGoal | PlainMessage<ResourcePertainsToGoal> | undefined): boolean {
    return proto3.util.equals(ResourcePertainsToGoal, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for risk.
 * Risk.
 * See http://hl7.org/fhir/StructureDefinition/diagnosticReport-risk
 *
 * @generated from message google.fhir.r4.core.Risk
 */
export class Risk extends Message<Risk> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<Risk>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Risk";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Risk {
    return new Risk().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Risk {
    return new Risk().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Risk {
    return new Risk().fromJsonString(jsonString, options);
  }

  static equals(a: Risk | PlainMessage<Risk> | undefined, b: Risk | PlainMessage<Risk> | undefined): boolean {
    return proto3.util.equals(Risk, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for performerOrder.
 * Performer Order.
 * See http://hl7.org/fhir/StructureDefinition/request-performerOrder
 *
 * @generated from message google.fhir.r4.core.ServiceRequestPerformerOrder
 */
export class ServiceRequestPerformerOrder extends Message<ServiceRequestPerformerOrder> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<ServiceRequestPerformerOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ServiceRequestPerformerOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceRequestPerformerOrder {
    return new ServiceRequestPerformerOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceRequestPerformerOrder {
    return new ServiceRequestPerformerOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceRequestPerformerOrder {
    return new ServiceRequestPerformerOrder().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceRequestPerformerOrder | PlainMessage<ServiceRequestPerformerOrder> | undefined, b: ServiceRequestPerformerOrder | PlainMessage<ServiceRequestPerformerOrder> | undefined): boolean {
    return proto3.util.equals(ServiceRequestPerformerOrder, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for precondition.
 * The condition or state of the patient for this test.
 * See http://hl7.org/fhir/StructureDefinition/servicerequest-precondition
 *
 * @generated from message google.fhir.r4.core.ServiceRequestPrecondition
 */
export class ServiceRequestPrecondition extends Message<ServiceRequestPrecondition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<ServiceRequestPrecondition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ServiceRequestPrecondition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceRequestPrecondition {
    return new ServiceRequestPrecondition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceRequestPrecondition {
    return new ServiceRequestPrecondition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceRequestPrecondition {
    return new ServiceRequestPrecondition().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceRequestPrecondition | PlainMessage<ServiceRequestPrecondition> | undefined, b: ServiceRequestPrecondition | PlainMessage<ServiceRequestPrecondition> | undefined): boolean {
    return proto3.util.equals(ServiceRequestPrecondition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for questionnaireRequest.
 * Questionnaire to be ordered.
 * See
 * http://hl7.org/fhir/StructureDefinition/servicerequest-questionnaireRequest
 *
 * @generated from message google.fhir.r4.core.ServiceRequestQuestionnaireRequest
 */
export class ServiceRequestQuestionnaireRequest extends Message<ServiceRequestQuestionnaireRequest> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<ServiceRequestQuestionnaireRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ServiceRequestQuestionnaireRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceRequestQuestionnaireRequest {
    return new ServiceRequestQuestionnaireRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceRequestQuestionnaireRequest {
    return new ServiceRequestQuestionnaireRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceRequestQuestionnaireRequest {
    return new ServiceRequestQuestionnaireRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceRequestQuestionnaireRequest | PlainMessage<ServiceRequestQuestionnaireRequest> | undefined, b: ServiceRequestQuestionnaireRequest | PlainMessage<ServiceRequestQuestionnaireRequest> | undefined): boolean {
    return proto3.util.equals(ServiceRequestQuestionnaireRequest, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for special-status.
 * Special note about status for implementers.
 * See http://hl7.org/fhir/StructureDefinition/valueset-special-status
 *
 * @generated from message google.fhir.r4.core.SpecialStatus
 */
export class SpecialStatus extends Message<SpecialStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<SpecialStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecialStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecialStatus {
    return new SpecialStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecialStatus {
    return new SpecialStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecialStatus {
    return new SpecialStatus().fromJsonString(jsonString, options);
  }

  static equals(a: SpecialStatus | PlainMessage<SpecialStatus> | undefined, b: SpecialStatus | PlainMessage<SpecialStatus> | undefined): boolean {
    return proto3.util.equals(SpecialStatus, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for collectionPriority.
 * Urgency for collection.
 * See http://hl7.org/fhir/StructureDefinition/specimen-collectionPriority
 *
 * @generated from message google.fhir.r4.core.SpecimenCollectionPriority
 */
export class SpecimenCollectionPriority extends Message<SpecimenCollectionPriority> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<SpecimenCollectionPriority>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenCollectionPriority";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenCollectionPriority {
    return new SpecimenCollectionPriority().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenCollectionPriority {
    return new SpecimenCollectionPriority().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenCollectionPriority {
    return new SpecimenCollectionPriority().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenCollectionPriority | PlainMessage<SpecimenCollectionPriority> | undefined, b: SpecimenCollectionPriority | PlainMessage<SpecimenCollectionPriority> | undefined): boolean {
    return proto3.util.equals(SpecimenCollectionPriority, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for isDryWeight.
 * Whether quantity is a dry weight.
 * See http://hl7.org/fhir/StructureDefinition/specimen-isDryWeight
 *
 * @generated from message google.fhir.r4.core.SpecimenIsDryWeight
 */
export class SpecimenIsDryWeight extends Message<SpecimenIsDryWeight> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<SpecimenIsDryWeight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenIsDryWeight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenIsDryWeight {
    return new SpecimenIsDryWeight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenIsDryWeight {
    return new SpecimenIsDryWeight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenIsDryWeight {
    return new SpecimenIsDryWeight().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenIsDryWeight | PlainMessage<SpecimenIsDryWeight> | undefined, b: SpecimenIsDryWeight | PlainMessage<SpecimenIsDryWeight> | undefined): boolean {
    return proto3.util.equals(SpecimenIsDryWeight, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for processingTime.
 * Time of processing.
 * See http://hl7.org/fhir/StructureDefinition/specimen-processingTime
 *
 * @generated from message google.fhir.r4.core.SpecimenProcessingTime
 */
export class SpecimenProcessingTime extends Message<SpecimenProcessingTime> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.SpecimenProcessingTime.ValueX value = 3;
   */
  value?: SpecimenProcessingTime_ValueX;

  constructor(data?: PartialMessage<SpecimenProcessingTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenProcessingTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value", kind: "message", T: SpecimenProcessingTime_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenProcessingTime {
    return new SpecimenProcessingTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenProcessingTime {
    return new SpecimenProcessingTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenProcessingTime {
    return new SpecimenProcessingTime().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenProcessingTime | PlainMessage<SpecimenProcessingTime> | undefined, b: SpecimenProcessingTime | PlainMessage<SpecimenProcessingTime> | undefined): boolean {
    return proto3.util.equals(SpecimenProcessingTime, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.SpecimenProcessingTime.ValueX
 */
export class SpecimenProcessingTime_ValueX extends Message<SpecimenProcessingTime_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.SpecimenProcessingTime.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 1;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 2;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SpecimenProcessingTime_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenProcessingTime.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 2, name: "duration", kind: "message", T: Duration, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenProcessingTime_ValueX {
    return new SpecimenProcessingTime_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenProcessingTime_ValueX {
    return new SpecimenProcessingTime_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenProcessingTime_ValueX {
    return new SpecimenProcessingTime_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenProcessingTime_ValueX | PlainMessage<SpecimenProcessingTime_ValueX> | undefined, b: SpecimenProcessingTime_ValueX | PlainMessage<SpecimenProcessingTime_ValueX> | undefined): boolean {
    return proto3.util.equals(SpecimenProcessingTime_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sequenceNumber.
 * The sequence number of the sample.
 * See http://hl7.org/fhir/StructureDefinition/specimen-sequenceNumber
 *
 * @generated from message google.fhir.r4.core.SpecimenSequenceNumber
 */
export class SpecimenSequenceNumber extends Message<SpecimenSequenceNumber> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<SpecimenSequenceNumber>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenSequenceNumber";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenSequenceNumber {
    return new SpecimenSequenceNumber().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenSequenceNumber {
    return new SpecimenSequenceNumber().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenSequenceNumber {
    return new SpecimenSequenceNumber().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenSequenceNumber | PlainMessage<SpecimenSequenceNumber> | undefined, b: SpecimenSequenceNumber | PlainMessage<SpecimenSequenceNumber> | undefined): boolean {
    return proto3.util.equals(SpecimenSequenceNumber, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for specialHandling.
 * Special handling of the specimen.
 * See http://hl7.org/fhir/StructureDefinition/specimen-specialHandling
 *
 * @generated from message google.fhir.r4.core.SpecimenSpecialHandling
 */
export class SpecimenSpecialHandling extends Message<SpecimenSpecialHandling> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<SpecimenSpecialHandling>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenSpecialHandling";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenSpecialHandling {
    return new SpecimenSpecialHandling().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenSpecialHandling {
    return new SpecimenSpecialHandling().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenSpecialHandling {
    return new SpecimenSpecialHandling().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenSpecialHandling | PlainMessage<SpecimenSpecialHandling> | undefined, b: SpecimenSpecialHandling | PlainMessage<SpecimenSpecialHandling> | undefined): boolean {
    return proto3.util.equals(SpecimenSpecialHandling, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for standards-status.
 * HL7 Ballot/Standards status of artifact.
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status
 *
 * @generated from message google.fhir.r4.core.StandardsStatus
 */
export class StandardsStatus extends Message<StandardsStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.StandardsStatus.ValueCode value_code = 3;
   */
  valueCode?: StandardsStatus_ValueCode;

  constructor(data?: PartialMessage<StandardsStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StandardsStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: StandardsStatus_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StandardsStatus {
    return new StandardsStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StandardsStatus {
    return new StandardsStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StandardsStatus {
    return new StandardsStatus().fromJsonString(jsonString, options);
  }

  static equals(a: StandardsStatus | PlainMessage<StandardsStatus> | undefined, b: StandardsStatus | PlainMessage<StandardsStatus> | undefined): boolean {
    return proto3.util.equals(StandardsStatus, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.StandardsStatus.ValueCode
 */
export class StandardsStatus_ValueCode extends Message<StandardsStatus_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.StandardsStatusCode.Value value = 1;
   */
  value = StandardsStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StandardsStatus_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StandardsStatus.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StandardsStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StandardsStatus_ValueCode {
    return new StandardsStatus_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StandardsStatus_ValueCode {
    return new StandardsStatus_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StandardsStatus_ValueCode {
    return new StandardsStatus_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: StandardsStatus_ValueCode | PlainMessage<StandardsStatus_ValueCode> | undefined, b: StandardsStatus_ValueCode | PlainMessage<StandardsStatus_ValueCode> | undefined): boolean {
    return proto3.util.equals(StandardsStatus_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for statusReason.
 * Reason for current status.
 * See http://hl7.org/fhir/StructureDefinition/event-statusReason
 *
 * @generated from message google.fhir.r4.core.StatusReason
 */
export class StatusReason extends Message<StatusReason> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<StatusReason>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StatusReason";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusReason {
    return new StatusReason().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusReason {
    return new StatusReason().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusReason {
    return new StatusReason().fromJsonString(jsonString, options);
  }

  static equals(a: StatusReason | PlainMessage<StatusReason> | undefined, b: StatusReason | PlainMessage<StatusReason> | undefined): boolean {
    return proto3.util.equals(StatusReason, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for statusReason.
 * Reason for current status.
 * See http://hl7.org/fhir/StructureDefinition/request-statusReason
 *
 * @generated from message google.fhir.r4.core.StatusReasonExtension
 */
export class StatusReasonExtension extends Message<StatusReasonExtension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept value_codeable_concept = 3;
   */
  valueCodeableConcept?: CodeableConcept;

  constructor(data?: PartialMessage<StatusReasonExtension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StatusReasonExtension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_codeable_concept", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusReasonExtension {
    return new StatusReasonExtension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusReasonExtension {
    return new StatusReasonExtension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusReasonExtension {
    return new StatusReasonExtension().fromJsonString(jsonString, options);
  }

  static equals(a: StatusReasonExtension | PlainMessage<StatusReasonExtension> | undefined, b: StatusReasonExtension | PlainMessage<StatusReasonExtension> | undefined): boolean {
    return proto3.util.equals(StatusReasonExtension, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for markdown.
 * String equivalent with markdown.
 * See http://hl7.org/fhir/StructureDefinition/rendering-markdown
 *
 * @generated from message google.fhir.r4.core.StringMarkdown
 */
export class StringMarkdown extends Message<StringMarkdown> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<StringMarkdown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StringMarkdown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StringMarkdown {
    return new StringMarkdown().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StringMarkdown {
    return new StringMarkdown().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StringMarkdown {
    return new StringMarkdown().fromJsonString(jsonString, options);
  }

  static equals(a: StringMarkdown | PlainMessage<StringMarkdown> | undefined, b: StringMarkdown | PlainMessage<StringMarkdown> | undefined): boolean {
    return proto3.util.equals(StringMarkdown, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SC-coding.
 * code for string.
 * See http://hl7.org/fhir/StructureDefinition/iso21090-SC-coding
 *
 * @generated from message google.fhir.r4.core.StringSCCoding
 */
export class StringSCCoding extends Message<StringSCCoding> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Coding value_coding = 3;
   */
  valueCoding?: Coding;

  constructor(data?: PartialMessage<StringSCCoding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StringSCCoding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_coding", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StringSCCoding {
    return new StringSCCoding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StringSCCoding {
    return new StringSCCoding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StringSCCoding {
    return new StringSCCoding().fromJsonString(jsonString, options);
  }

  static equals(a: StringSCCoding | PlainMessage<StringSCCoding> | undefined, b: StringSCCoding | PlainMessage<StringSCCoding> | undefined): boolean {
    return proto3.util.equals(StringSCCoding, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for xhtml.
 * String equivalent with html markup.
 * See http://hl7.org/fhir/StructureDefinition/rendering-xhtml
 *
 * @generated from message google.fhir.r4.core.StringXhtml
 */
export class StringXhtml extends Message<StringXhtml> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<StringXhtml>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StringXhtml";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StringXhtml {
    return new StringXhtml().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StringXhtml {
    return new StringXhtml().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StringXhtml {
    return new StringXhtml().fromJsonString(jsonString, options);
  }

  static equals(a: StringXhtml | PlainMessage<StringXhtml> | undefined, b: StringXhtml | PlainMessage<StringXhtml> | undefined): boolean {
    return proto3.util.equals(StringXhtml, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ancestor.
 * StructureDefinition this is derived from.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-ancestor
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionAncestor
 */
export class StructureDefinitionAncestor extends Message<StructureDefinitionAncestor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<StructureDefinitionAncestor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionAncestor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionAncestor {
    return new StructureDefinitionAncestor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionAncestor {
    return new StructureDefinitionAncestor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionAncestor {
    return new StructureDefinitionAncestor().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionAncestor | PlainMessage<StructureDefinitionAncestor> | undefined, b: StructureDefinitionAncestor | PlainMessage<StructureDefinitionAncestor> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionAncestor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for applicable-version.
 * Another Version this applies to.
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-applicable-version
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionApplicableVersion
 */
export class StructureDefinitionApplicableVersion extends Message<StructureDefinitionApplicableVersion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureDefinitionApplicableVersion.ValueCode value_code = 3;
   */
  valueCode?: StructureDefinitionApplicableVersion_ValueCode;

  constructor(data?: PartialMessage<StructureDefinitionApplicableVersion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionApplicableVersion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: StructureDefinitionApplicableVersion_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionApplicableVersion {
    return new StructureDefinitionApplicableVersion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionApplicableVersion {
    return new StructureDefinitionApplicableVersion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionApplicableVersion {
    return new StructureDefinitionApplicableVersion().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionApplicableVersion | PlainMessage<StructureDefinitionApplicableVersion> | undefined, b: StructureDefinitionApplicableVersion | PlainMessage<StructureDefinitionApplicableVersion> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionApplicableVersion, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionApplicableVersion.ValueCode
 */
export class StructureDefinitionApplicableVersion_ValueCode extends Message<StructureDefinitionApplicableVersion_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRVersionCode.Value value = 1;
   */
  value = FHIRVersionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureDefinitionApplicableVersion_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionApplicableVersion.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRVersionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionApplicableVersion_ValueCode {
    return new StructureDefinitionApplicableVersion_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionApplicableVersion_ValueCode {
    return new StructureDefinitionApplicableVersion_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionApplicableVersion_ValueCode {
    return new StructureDefinitionApplicableVersion_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionApplicableVersion_ValueCode | PlainMessage<StructureDefinitionApplicableVersion_ValueCode> | undefined, b: StructureDefinitionApplicableVersion_ValueCode | PlainMessage<StructureDefinitionApplicableVersion_ValueCode> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionApplicableVersion_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for category.
 * Category from official resource list.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-category
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionCategory
 */
export class StructureDefinitionCategory extends Message<StructureDefinitionCategory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<StructureDefinitionCategory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionCategory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionCategory {
    return new StructureDefinitionCategory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionCategory {
    return new StructureDefinitionCategory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionCategory {
    return new StructureDefinitionCategory().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionCategory | PlainMessage<StructureDefinitionCategory> | undefined, b: StructureDefinitionCategory | PlainMessage<StructureDefinitionCategory> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionCategory, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for codegen-super.
 * Use a different base when generating code.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-codegen-super
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionCodegenSuper
 */
export class StructureDefinitionCodegenSuper extends Message<StructureDefinitionCodegenSuper> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<StructureDefinitionCodegenSuper>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionCodegenSuper";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionCodegenSuper {
    return new StructureDefinitionCodegenSuper().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionCodegenSuper {
    return new StructureDefinitionCodegenSuper().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionCodegenSuper {
    return new StructureDefinitionCodegenSuper().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionCodegenSuper | PlainMessage<StructureDefinitionCodegenSuper> | undefined, b: StructureDefinitionCodegenSuper | PlainMessage<StructureDefinitionCodegenSuper> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionCodegenSuper, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for dependencies.
 * Dependent Profiles - must be valid against these too.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-dependencies
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionDependencies
 */
export class StructureDefinitionDependencies extends Message<StructureDefinitionDependencies> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<StructureDefinitionDependencies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionDependencies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionDependencies {
    return new StructureDefinitionDependencies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionDependencies {
    return new StructureDefinitionDependencies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionDependencies {
    return new StructureDefinitionDependencies().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionDependencies | PlainMessage<StructureDefinitionDependencies> | undefined, b: StructureDefinitionDependencies | PlainMessage<StructureDefinitionDependencies> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionDependencies, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for fmm-no-warnings.
 * FMM Level (if no warnings).
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm-no-warnings
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionFmmNoWarnings
 */
export class StructureDefinitionFmmNoWarnings extends Message<StructureDefinitionFmmNoWarnings> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<StructureDefinitionFmmNoWarnings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionFmmNoWarnings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionFmmNoWarnings {
    return new StructureDefinitionFmmNoWarnings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionFmmNoWarnings {
    return new StructureDefinitionFmmNoWarnings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionFmmNoWarnings {
    return new StructureDefinitionFmmNoWarnings().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionFmmNoWarnings | PlainMessage<StructureDefinitionFmmNoWarnings> | undefined, b: StructureDefinitionFmmNoWarnings | PlainMessage<StructureDefinitionFmmNoWarnings> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionFmmNoWarnings, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for normative-version.
 * If normative, which was the first normative version.
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionNormativeVersion
 */
export class StructureDefinitionNormativeVersion extends Message<StructureDefinitionNormativeVersion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureDefinitionNormativeVersion.ValueCode value_code = 3;
   */
  valueCode?: StructureDefinitionNormativeVersion_ValueCode;

  constructor(data?: PartialMessage<StructureDefinitionNormativeVersion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionNormativeVersion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: StructureDefinitionNormativeVersion_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionNormativeVersion {
    return new StructureDefinitionNormativeVersion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionNormativeVersion {
    return new StructureDefinitionNormativeVersion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionNormativeVersion {
    return new StructureDefinitionNormativeVersion().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionNormativeVersion | PlainMessage<StructureDefinitionNormativeVersion> | undefined, b: StructureDefinitionNormativeVersion | PlainMessage<StructureDefinitionNormativeVersion> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionNormativeVersion, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionNormativeVersion.ValueCode
 */
export class StructureDefinitionNormativeVersion_ValueCode extends Message<StructureDefinitionNormativeVersion_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRVersionCode.Value value = 1;
   */
  value = FHIRVersionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureDefinitionNormativeVersion_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionNormativeVersion.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRVersionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionNormativeVersion_ValueCode {
    return new StructureDefinitionNormativeVersion_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionNormativeVersion_ValueCode {
    return new StructureDefinitionNormativeVersion_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionNormativeVersion_ValueCode {
    return new StructureDefinitionNormativeVersion_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionNormativeVersion_ValueCode | PlainMessage<StructureDefinitionNormativeVersion_ValueCode> | undefined, b: StructureDefinitionNormativeVersion_ValueCode | PlainMessage<StructureDefinitionNormativeVersion_ValueCode> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionNormativeVersion_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for security-category.
 * Security Categorization for Resource.
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-security-category
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionSecurityCategory
 */
export class StructureDefinitionSecurityCategory extends Message<StructureDefinitionSecurityCategory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureDefinitionSecurityCategory.ValueCode value_code = 3;
   */
  valueCode?: StructureDefinitionSecurityCategory_ValueCode;

  constructor(data?: PartialMessage<StructureDefinitionSecurityCategory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionSecurityCategory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: StructureDefinitionSecurityCategory_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionSecurityCategory {
    return new StructureDefinitionSecurityCategory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionSecurityCategory {
    return new StructureDefinitionSecurityCategory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionSecurityCategory {
    return new StructureDefinitionSecurityCategory().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionSecurityCategory | PlainMessage<StructureDefinitionSecurityCategory> | undefined, b: StructureDefinitionSecurityCategory | PlainMessage<StructureDefinitionSecurityCategory> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionSecurityCategory, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionSecurityCategory.ValueCode
 */
export class StructureDefinitionSecurityCategory_ValueCode extends Message<StructureDefinitionSecurityCategory_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceSecurityCategoryCode.Value value = 1;
   */
  value = ResourceSecurityCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureDefinitionSecurityCategory_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionSecurityCategory.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceSecurityCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionSecurityCategory_ValueCode {
    return new StructureDefinitionSecurityCategory_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionSecurityCategory_ValueCode {
    return new StructureDefinitionSecurityCategory_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionSecurityCategory_ValueCode {
    return new StructureDefinitionSecurityCategory_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionSecurityCategory_ValueCode | PlainMessage<StructureDefinitionSecurityCategory_ValueCode> | undefined, b: StructureDefinitionSecurityCategory_ValueCode | PlainMessage<StructureDefinitionSecurityCategory_ValueCode> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionSecurityCategory_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for summary.
 * Additional text for the summary presentation.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-summary
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionSummary
 */
export class StructureDefinitionSummary extends Message<StructureDefinitionSummary> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<StructureDefinitionSummary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionSummary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionSummary {
    return new StructureDefinitionSummary().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionSummary {
    return new StructureDefinitionSummary().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionSummary {
    return new StructureDefinitionSummary().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionSummary | PlainMessage<StructureDefinitionSummary> | undefined, b: StructureDefinitionSummary | PlainMessage<StructureDefinitionSummary> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionSummary, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for table-name.
 * Show mappings in the summary table with this name.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-table-name
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionTableName
 */
export class StructureDefinitionTableName extends Message<StructureDefinitionTableName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<StructureDefinitionTableName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionTableName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionTableName {
    return new StructureDefinitionTableName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionTableName {
    return new StructureDefinitionTableName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionTableName {
    return new StructureDefinitionTableName().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionTableName | PlainMessage<StructureDefinitionTableName> | undefined, b: StructureDefinitionTableName | PlainMessage<StructureDefinitionTableName> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionTableName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for template-status.
 * Template Status Code (more authoring statuses).
 * See
 * http://hl7.org/fhir/StructureDefinition/structuredefinition-template-status
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionTemplateStatus
 */
export class StructureDefinitionTemplateStatus extends Message<StructureDefinitionTemplateStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureDefinitionTemplateStatus.ValueCode value_code = 3;
   */
  valueCode?: StructureDefinitionTemplateStatus_ValueCode;

  constructor(data?: PartialMessage<StructureDefinitionTemplateStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionTemplateStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: StructureDefinitionTemplateStatus_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionTemplateStatus {
    return new StructureDefinitionTemplateStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionTemplateStatus {
    return new StructureDefinitionTemplateStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionTemplateStatus {
    return new StructureDefinitionTemplateStatus().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionTemplateStatus | PlainMessage<StructureDefinitionTemplateStatus> | undefined, b: StructureDefinitionTemplateStatus | PlainMessage<StructureDefinitionTemplateStatus> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionTemplateStatus, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionTemplateStatus.ValueCode
 */
export class StructureDefinitionTemplateStatus_ValueCode extends Message<StructureDefinitionTemplateStatus_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.TemplateStatusCodeValueSet.Value value = 1;
   */
  value = TemplateStatusCodeValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureDefinitionTemplateStatus_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionTemplateStatus.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TemplateStatusCodeValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionTemplateStatus_ValueCode {
    return new StructureDefinitionTemplateStatus_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionTemplateStatus_ValueCode {
    return new StructureDefinitionTemplateStatus_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionTemplateStatus_ValueCode {
    return new StructureDefinitionTemplateStatus_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionTemplateStatus_ValueCode | PlainMessage<StructureDefinitionTemplateStatus_ValueCode> | undefined, b: StructureDefinitionTemplateStatus_ValueCode | PlainMessage<StructureDefinitionTemplateStatus_ValueCode> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionTemplateStatus_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for xml-no-order.
 * Whether elements can come in any order (XML).
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-no-order
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionXmlNoOrder
 */
export class StructureDefinitionXmlNoOrder extends Message<StructureDefinitionXmlNoOrder> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<StructureDefinitionXmlNoOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionXmlNoOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionXmlNoOrder {
    return new StructureDefinitionXmlNoOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionXmlNoOrder {
    return new StructureDefinitionXmlNoOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionXmlNoOrder {
    return new StructureDefinitionXmlNoOrder().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionXmlNoOrder | PlainMessage<StructureDefinitionXmlNoOrder> | undefined, b: StructureDefinitionXmlNoOrder | PlainMessage<StructureDefinitionXmlNoOrder> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionXmlNoOrder, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for style.
 * Html style value.
 * See http://hl7.org/fhir/StructureDefinition/rendering-style
 *
 * @generated from message google.fhir.r4.core.Style
 */
export class Style extends Message<Style> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<Style>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Style";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Style {
    return new Style().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Style {
    return new Style().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Style {
    return new Style().fromJsonString(jsonString, options);
  }

  static equals(a: Style | PlainMessage<Style> | undefined, b: Style | PlainMessage<Style> | undefined): boolean {
    return proto3.util.equals(Style, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for styleSensitive.
 * Are styles important for processing?.
 * See http://hl7.org/fhir/StructureDefinition/rendering-styleSensitive
 *
 * @generated from message google.fhir.r4.core.StyleSensitive
 */
export class StyleSensitive extends Message<StyleSensitive> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<StyleSensitive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StyleSensitive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StyleSensitive {
    return new StyleSensitive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StyleSensitive {
    return new StyleSensitive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StyleSensitive {
    return new StyleSensitive().fromJsonString(jsonString, options);
  }

  static equals(a: StyleSensitive | PlainMessage<StyleSensitive> | undefined, b: StyleSensitive | PlainMessage<StyleSensitive> | undefined): boolean {
    return proto3.util.equals(StyleSensitive, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for supportingInfo.
 * Other information that may be relevant to this event.
 * See http://hl7.org/fhir/StructureDefinition/workflow-supportingInfo
 *
 * @generated from message google.fhir.r4.core.SupportingInfo
 */
export class SupportingInfo extends Message<SupportingInfo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<SupportingInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SupportingInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupportingInfo {
    return new SupportingInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupportingInfo {
    return new SupportingInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupportingInfo {
    return new SupportingInfo().fromJsonString(jsonString, options);
  }

  static equals(a: SupportingInfo | PlainMessage<SupportingInfo> | undefined, b: SupportingInfo | PlainMessage<SupportingInfo> | undefined): boolean {
    return proto3.util.equals(SupportingInfo, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for targetBodyStructure.
 * The target point for this procedure.
 * See http://hl7.org/fhir/StructureDefinition/procedure-targetBodyStructure
 *
 * @generated from message google.fhir.r4.core.TargetBodyStructure
 */
export class TargetBodyStructure extends Message<TargetBodyStructure> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<TargetBodyStructure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TargetBodyStructure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TargetBodyStructure {
    return new TargetBodyStructure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TargetBodyStructure {
    return new TargetBodyStructure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TargetBodyStructure {
    return new TargetBodyStructure().fromJsonString(jsonString, options);
  }

  static equals(a: TargetBodyStructure | PlainMessage<TargetBodyStructure> | undefined, b: TargetBodyStructure | PlainMessage<TargetBodyStructure> | undefined): boolean {
    return proto3.util.equals(TargetBodyStructure, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for candidateList.
 * List of possible owners of Task.
 * See http://hl7.org/fhir/StructureDefinition/task-candidateList
 *
 * @generated from message google.fhir.r4.core.TaskCandidateList
 */
export class TaskCandidateList extends Message<TaskCandidateList> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<TaskCandidateList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TaskCandidateList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskCandidateList {
    return new TaskCandidateList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskCandidateList {
    return new TaskCandidateList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskCandidateList {
    return new TaskCandidateList().fromJsonString(jsonString, options);
  }

  static equals(a: TaskCandidateList | PlainMessage<TaskCandidateList> | undefined, b: TaskCandidateList | PlainMessage<TaskCandidateList> | undefined): boolean {
    return proto3.util.equals(TaskCandidateList, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for replaces.
 * Task(s) replaced by this Task.
 * See http://hl7.org/fhir/StructureDefinition/task-replaces
 *
 * @generated from message google.fhir.r4.core.TaskReplaces
 */
export class TaskReplaces extends Message<TaskReplaces> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Reference value_reference = 3;
   */
  valueReference?: Reference;

  constructor(data?: PartialMessage<TaskReplaces>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TaskReplaces";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_reference", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskReplaces {
    return new TaskReplaces().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskReplaces {
    return new TaskReplaces().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskReplaces {
    return new TaskReplaces().fromJsonString(jsonString, options);
  }

  static equals(a: TaskReplaces | PlainMessage<TaskReplaces> | undefined, b: TaskReplaces | PlainMessage<TaskReplaces> | undefined): boolean {
    return proto3.util.equals(TaskReplaces, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Timezone Code.
 * IANA Timezone Code per BCP 175.
 * See http://hl7.org/fhir/StructureDefinition/tz-code
 *
 * @generated from message google.fhir.r4.core.TimezoneCode
 */
export class TimezoneCode extends Message<TimezoneCode> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.TimezoneCode.ValueCode value_code = 3;
   */
  valueCode?: TimezoneCode_ValueCode;

  constructor(data?: PartialMessage<TimezoneCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TimezoneCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: TimezoneCode_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimezoneCode {
    return new TimezoneCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimezoneCode {
    return new TimezoneCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimezoneCode {
    return new TimezoneCode().fromJsonString(jsonString, options);
  }

  static equals(a: TimezoneCode | PlainMessage<TimezoneCode> | undefined, b: TimezoneCode | PlainMessage<TimezoneCode> | undefined): boolean {
    return proto3.util.equals(TimezoneCode, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.TimezoneCode.ValueCode
 */
export class TimezoneCode_ValueCode extends Message<TimezoneCode_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<TimezoneCode_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TimezoneCode.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimezoneCode_ValueCode {
    return new TimezoneCode_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimezoneCode_ValueCode {
    return new TimezoneCode_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimezoneCode_ValueCode {
    return new TimezoneCode_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: TimezoneCode_ValueCode | PlainMessage<TimezoneCode_ValueCode> | undefined, b: TimezoneCode_ValueCode | PlainMessage<TimezoneCode_ValueCode> | undefined): boolean {
    return proto3.util.equals(TimezoneCode_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for dayOfMonth.
 * Day of Month for schedule.
 * See http://hl7.org/fhir/StructureDefinition/timing-dayOfMonth
 *
 * @generated from message google.fhir.r4.core.TimingDayOfMonth
 */
export class TimingDayOfMonth extends Message<TimingDayOfMonth> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.PositiveInt value_positive_int = 3;
   */
  valuePositiveInt?: PositiveInt;

  constructor(data?: PartialMessage<TimingDayOfMonth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TimingDayOfMonth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_positive_int", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimingDayOfMonth {
    return new TimingDayOfMonth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimingDayOfMonth {
    return new TimingDayOfMonth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimingDayOfMonth {
    return new TimingDayOfMonth().fromJsonString(jsonString, options);
  }

  static equals(a: TimingDayOfMonth | PlainMessage<TimingDayOfMonth> | undefined, b: TimingDayOfMonth | PlainMessage<TimingDayOfMonth> | undefined): boolean {
    return proto3.util.equals(TimingDayOfMonth, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for exact.
 * Whether specified times must be followed as closely as possible.
 * See http://hl7.org/fhir/StructureDefinition/timing-exact
 *
 * @generated from message google.fhir.r4.core.TimingExact
 */
export class TimingExact extends Message<TimingExact> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<TimingExact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TimingExact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimingExact {
    return new TimingExact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimingExact {
    return new TimingExact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimingExact {
    return new TimingExact().fromJsonString(jsonString, options);
  }

  static equals(a: TimingExact | PlainMessage<TimingExact> | undefined, b: TimingExact | PlainMessage<TimingExact> | undefined): boolean {
    return proto3.util.equals(TimingExact, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Translation.
 * Language Translation (Localization).
 * See http://hl7.org/fhir/StructureDefinition/translation
 *
 * @generated from message google.fhir.r4.core.Translation
 */
export class Translation extends Message<Translation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code for Language
   *
   * @generated from field: google.fhir.r4.core.Code lang = 4;
   */
  lang?: Code;

  /**
   * @generated from field: google.fhir.r4.core.Translation.ContentX content = 5;
   */
  content?: Translation_ContentX;

  constructor(data?: PartialMessage<Translation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Translation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "lang", kind: "message", T: Code },
    { no: 5, name: "content", kind: "message", T: Translation_ContentX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Translation {
    return new Translation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Translation {
    return new Translation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Translation {
    return new Translation().fromJsonString(jsonString, options);
  }

  static equals(a: Translation | PlainMessage<Translation> | undefined, b: Translation | PlainMessage<Translation> | undefined): boolean {
    return proto3.util.equals(Translation, a, b);
  }
}

/**
 * Content in other Language
 *
 * @generated from message google.fhir.r4.core.Translation.ContentX
 */
export class Translation_ContentX extends Message<Translation_ContentX> {
  /**
   * @generated from oneof google.fhir.r4.core.Translation.ContentX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 2;
     */
    value: Markdown;
    case: "markdown";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Translation_ContentX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Translation.ContentX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 2, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Translation_ContentX {
    return new Translation_ContentX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Translation_ContentX {
    return new Translation_ContentX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Translation_ContentX {
    return new Translation_ContentX().fromJsonString(jsonString, options);
  }

  static equals(a: Translation_ContentX | PlainMessage<Translation_ContentX> | undefined, b: Translation_ContentX | PlainMessage<Translation_ContentX> | undefined): boolean {
    return proto3.util.equals(Translation_ContentX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for group.
 * The group which this usage context is part of.
 * See http://hl7.org/fhir/StructureDefinition/usagecontext-group
 *
 * @generated from message google.fhir.r4.core.UsageContextGroup
 */
export class UsageContextGroup extends Message<UsageContextGroup> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<UsageContextGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.UsageContextGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsageContextGroup {
    return new UsageContextGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsageContextGroup {
    return new UsageContextGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsageContextGroup {
    return new UsageContextGroup().fromJsonString(jsonString, options);
  }

  static equals(a: UsageContextGroup | PlainMessage<UsageContextGroup> | undefined, b: UsageContextGroup | PlainMessage<UsageContextGroup> | undefined): boolean {
    return proto3.util.equals(UsageContextGroup, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for activityStatusDate.
 * Date when the activity status is in effect.
 * See http://hl7.org/fhir/StructureDefinition/valueset-activityStatusDate
 *
 * @generated from message google.fhir.r4.core.ValueSetActivityStatusDate
 */
export class ValueSetActivityStatusDate extends Message<ValueSetActivityStatusDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Date value_date = 3;
   */
  valueDate?: Date;

  constructor(data?: PartialMessage<ValueSetActivityStatusDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetActivityStatusDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetActivityStatusDate {
    return new ValueSetActivityStatusDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetActivityStatusDate {
    return new ValueSetActivityStatusDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetActivityStatusDate {
    return new ValueSetActivityStatusDate().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetActivityStatusDate | PlainMessage<ValueSetActivityStatusDate> | undefined, b: ValueSetActivityStatusDate | PlainMessage<ValueSetActivityStatusDate> | undefined): boolean {
    return proto3.util.equals(ValueSetActivityStatusDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for author.
 * Entity/entities that create and may modify the Value Set.
 * See http://hl7.org/fhir/StructureDefinition/valueset-author
 *
 * @generated from message google.fhir.r4.core.ValueSetAuthor
 */
export class ValueSetAuthor extends Message<ValueSetAuthor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.ContactDetail value_contact_detail = 3;
   */
  valueContactDetail?: ContactDetail;

  constructor(data?: PartialMessage<ValueSetAuthor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetAuthor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_contact_detail", kind: "message", T: ContactDetail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetAuthor {
    return new ValueSetAuthor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetAuthor {
    return new ValueSetAuthor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetAuthor {
    return new ValueSetAuthor().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetAuthor | PlainMessage<ValueSetAuthor> | undefined, b: ValueSetAuthor | PlainMessage<ValueSetAuthor> | undefined): boolean {
    return proto3.util.equals(ValueSetAuthor, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for authoritativeSource.
 * Reference to the current trusted source of the ValueSet resource (metadata
 * and definition). See
 * http://hl7.org/fhir/StructureDefinition/valueset-authoritativeSource
 *
 * @generated from message google.fhir.r4.core.ValueSetAuthoritativeSource
 */
export class ValueSetAuthoritativeSource extends Message<ValueSetAuthoritativeSource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ValueSetAuthoritativeSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetAuthoritativeSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetAuthoritativeSource {
    return new ValueSetAuthoritativeSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetAuthoritativeSource {
    return new ValueSetAuthoritativeSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetAuthoritativeSource {
    return new ValueSetAuthoritativeSource().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetAuthoritativeSource | PlainMessage<ValueSetAuthoritativeSource> | undefined, b: ValueSetAuthoritativeSource | PlainMessage<ValueSetAuthoritativeSource> | undefined): boolean {
    return proto3.util.equals(ValueSetAuthoritativeSource, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for caseSensitive.
 * If code is case sensitive.
 * See http://hl7.org/fhir/StructureDefinition/valueset-caseSensitive
 *
 * @generated from message google.fhir.r4.core.ValueSetCaseSensitive
 */
export class ValueSetCaseSensitive extends Message<ValueSetCaseSensitive> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ValueSetCaseSensitive>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetCaseSensitive";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetCaseSensitive {
    return new ValueSetCaseSensitive().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetCaseSensitive {
    return new ValueSetCaseSensitive().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetCaseSensitive {
    return new ValueSetCaseSensitive().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetCaseSensitive | PlainMessage<ValueSetCaseSensitive> | undefined, b: ValueSetCaseSensitive | PlainMessage<ValueSetCaseSensitive> | undefined): boolean {
    return proto3.util.equals(ValueSetCaseSensitive, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for concept-comments.
 * Comment about the use of this code in this context.
 * See http://hl7.org/fhir/StructureDefinition/valueset-concept-comments
 *
 * @generated from message google.fhir.r4.core.ValueSetConceptComments
 */
export class ValueSetConceptComments extends Message<ValueSetConceptComments> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ValueSetConceptComments>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetConceptComments";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetConceptComments {
    return new ValueSetConceptComments().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetConceptComments {
    return new ValueSetConceptComments().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetConceptComments {
    return new ValueSetConceptComments().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetConceptComments | PlainMessage<ValueSetConceptComments> | undefined, b: ValueSetConceptComments | PlainMessage<ValueSetConceptComments> | undefined): boolean {
    return proto3.util.equals(ValueSetConceptComments, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for concept-definition.
 * A definition for this code.
 * See http://hl7.org/fhir/StructureDefinition/valueset-concept-definition
 *
 * @generated from message google.fhir.r4.core.ValueSetConceptDefinition
 */
export class ValueSetConceptDefinition extends Message<ValueSetConceptDefinition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ValueSetConceptDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetConceptDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetConceptDefinition {
    return new ValueSetConceptDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetConceptDefinition {
    return new ValueSetConceptDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetConceptDefinition {
    return new ValueSetConceptDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetConceptDefinition | PlainMessage<ValueSetConceptDefinition> | undefined, b: ValueSetConceptDefinition | PlainMessage<ValueSetConceptDefinition> | undefined): boolean {
    return proto3.util.equals(ValueSetConceptDefinition, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for conceptOrder.
 * Appearance order for user selection.
 * See http://hl7.org/fhir/StructureDefinition/valueset-conceptOrder
 *
 * @generated from message google.fhir.r4.core.ValueSetConceptOrder
 */
export class ValueSetConceptOrder extends Message<ValueSetConceptOrder> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Integer value_integer = 3;
   */
  valueInteger?: Integer;

  constructor(data?: PartialMessage<ValueSetConceptOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetConceptOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_integer", kind: "message", T: Integer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetConceptOrder {
    return new ValueSetConceptOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetConceptOrder {
    return new ValueSetConceptOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetConceptOrder {
    return new ValueSetConceptOrder().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetConceptOrder | PlainMessage<ValueSetConceptOrder> | undefined, b: ValueSetConceptOrder | PlainMessage<ValueSetConceptOrder> | undefined): boolean {
    return proto3.util.equals(ValueSetConceptOrder, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for deprecated.
 * The concept should not be used.
 * See http://hl7.org/fhir/StructureDefinition/valueset-deprecated
 *
 * @generated from message google.fhir.r4.core.ValueSetDeprecated
 */
export class ValueSetDeprecated extends Message<ValueSetDeprecated> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ValueSetDeprecated>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetDeprecated";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetDeprecated {
    return new ValueSetDeprecated().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetDeprecated {
    return new ValueSetDeprecated().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetDeprecated {
    return new ValueSetDeprecated().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetDeprecated | PlainMessage<ValueSetDeprecated> | undefined, b: ValueSetDeprecated | PlainMessage<ValueSetDeprecated> | undefined): boolean {
    return proto3.util.equals(ValueSetDeprecated, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for effectiveDate.
 * When the value set version becomes Active and is available for use.
 * See http://hl7.org/fhir/StructureDefinition/valueset-effectiveDate
 *
 * @generated from message google.fhir.r4.core.ValueSetEffectiveDate
 */
export class ValueSetEffectiveDate extends Message<ValueSetEffectiveDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.DateTime value_date_time = 3;
   */
  valueDateTime?: DateTime;

  constructor(data?: PartialMessage<ValueSetEffectiveDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetEffectiveDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date_time", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetEffectiveDate {
    return new ValueSetEffectiveDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetEffectiveDate {
    return new ValueSetEffectiveDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetEffectiveDate {
    return new ValueSetEffectiveDate().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetEffectiveDate | PlainMessage<ValueSetEffectiveDate> | undefined, b: ValueSetEffectiveDate | PlainMessage<ValueSetEffectiveDate> | undefined): boolean {
    return proto3.util.equals(ValueSetEffectiveDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expand-group.
 * Defines a hierarchy structure (when in UI mode).
 * See http://hl7.org/fhir/StructureDefinition/valueset-expand-group
 *
 * @generated from message google.fhir.r4.core.ValueSetExpandGroup
 */
export class ValueSetExpandGroup extends Message<ValueSetExpandGroup> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Underlying code from the system
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * Display for the group
   *
   * @generated from field: google.fhir.r4.core.String display = 5;
   */
  display?: String;

  /**
   * Codes or other groups in this group
   *
   * @generated from field: repeated google.fhir.r4.core.Code member = 6;
   */
  member: Code[] = [];

  constructor(data?: PartialMessage<ValueSetExpandGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExpandGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "member", kind: "message", T: Code, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExpandGroup {
    return new ValueSetExpandGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExpandGroup {
    return new ValueSetExpandGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExpandGroup {
    return new ValueSetExpandGroup().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExpandGroup | PlainMessage<ValueSetExpandGroup> | undefined, b: ValueSetExpandGroup | PlainMessage<ValueSetExpandGroup> | undefined): boolean {
    return proto3.util.equals(ValueSetExpandGroup, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expand-rules.
 * all-codes | ungrouped | groups-only.
 * See http://hl7.org/fhir/StructureDefinition/valueset-expand-rules
 *
 * @generated from message google.fhir.r4.core.ValueSetExpandRules
 */
export class ValueSetExpandRules extends Message<ValueSetExpandRules> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ValueSetExpandRules.ValueCode value_code = 3;
   */
  valueCode?: ValueSetExpandRules_ValueCode;

  constructor(data?: PartialMessage<ValueSetExpandRules>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExpandRules";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: ValueSetExpandRules_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExpandRules {
    return new ValueSetExpandRules().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExpandRules {
    return new ValueSetExpandRules().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExpandRules {
    return new ValueSetExpandRules().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExpandRules | PlainMessage<ValueSetExpandRules> | undefined, b: ValueSetExpandRules | PlainMessage<ValueSetExpandRules> | undefined): boolean {
    return proto3.util.equals(ValueSetExpandRules, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ValueSetExpandRules.ValueCode
 */
export class ValueSetExpandRules_ValueCode extends Message<ValueSetExpandRules_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ExpansionProcessingRuleCode.Value value = 1;
   */
  value = ExpansionProcessingRuleCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ValueSetExpandRules_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExpandRules.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExpansionProcessingRuleCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExpandRules_ValueCode {
    return new ValueSetExpandRules_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExpandRules_ValueCode {
    return new ValueSetExpandRules_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExpandRules_ValueCode {
    return new ValueSetExpandRules_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExpandRules_ValueCode | PlainMessage<ValueSetExpandRules_ValueCode> | undefined, b: ValueSetExpandRules_ValueCode | PlainMessage<ValueSetExpandRules_ValueCode> | undefined): boolean {
    return proto3.util.equals(ValueSetExpandRules_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expansionSource.
 * ValueSet definition used to generate this expansion (logical URL).
 * See http://hl7.org/fhir/StructureDefinition/valueset-expansionSource
 *
 * @generated from message google.fhir.r4.core.ValueSetExpansionSource
 */
export class ValueSetExpansionSource extends Message<ValueSetExpansionSource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ValueSetExpansionSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExpansionSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExpansionSource {
    return new ValueSetExpansionSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExpansionSource {
    return new ValueSetExpansionSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExpansionSource {
    return new ValueSetExpansionSource().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExpansionSource | PlainMessage<ValueSetExpansionSource> | undefined, b: ValueSetExpansionSource | PlainMessage<ValueSetExpansionSource> | undefined): boolean {
    return proto3.util.equals(ValueSetExpansionSource, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expirationDate.
 * When the value set version should no longer be used.
 * See http://hl7.org/fhir/StructureDefinition/valueset-expirationDate
 *
 * @generated from message google.fhir.r4.core.ValueSetExpirationDate
 */
export class ValueSetExpirationDate extends Message<ValueSetExpirationDate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Date value_date = 3;
   */
  valueDate?: Date;

  constructor(data?: PartialMessage<ValueSetExpirationDate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExpirationDate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_date", kind: "message", T: Date },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExpirationDate {
    return new ValueSetExpirationDate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExpirationDate {
    return new ValueSetExpirationDate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExpirationDate {
    return new ValueSetExpirationDate().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExpirationDate | PlainMessage<ValueSetExpirationDate> | undefined, b: ValueSetExpirationDate | PlainMessage<ValueSetExpirationDate> | undefined): boolean {
    return proto3.util.equals(ValueSetExpirationDate, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for expression.
 * An alternative computable expression of the value set content.
 * See http://hl7.org/fhir/StructureDefinition/valueset-expression
 *
 * @generated from message google.fhir.r4.core.ValueSetExpression
 */
export class ValueSetExpression extends Message<ValueSetExpression> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Expression value_expression = 3;
   */
  valueExpression?: Expression;

  constructor(data?: PartialMessage<ValueSetExpression>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExpression";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_expression", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExpression {
    return new ValueSetExpression().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExpression {
    return new ValueSetExpression().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExpression {
    return new ValueSetExpression().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExpression | PlainMessage<ValueSetExpression> | undefined, b: ValueSetExpression | PlainMessage<ValueSetExpression> | undefined): boolean {
    return proto3.util.equals(ValueSetExpression, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for extensible.
 * Intended to be used with an extensible binding (e.g. 'open').
 * See http://hl7.org/fhir/StructureDefinition/valueset-extensible
 *
 * @generated from message google.fhir.r4.core.ValueSetExtensible
 */
export class ValueSetExtensible extends Message<ValueSetExtensible> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ValueSetExtensible>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetExtensible";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetExtensible {
    return new ValueSetExtensible().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetExtensible {
    return new ValueSetExtensible().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetExtensible {
    return new ValueSetExtensible().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetExtensible | PlainMessage<ValueSetExtensible> | undefined, b: ValueSetExtensible | PlainMessage<ValueSetExtensible> | undefined): boolean {
    return proto3.util.equals(ValueSetExtensible, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for keyWord.
 * Descriptors and key terms for search.
 * See http://hl7.org/fhir/StructureDefinition/valueset-keyWord
 *
 * @generated from message google.fhir.r4.core.ValueSetKeyWord
 */
export class ValueSetKeyWord extends Message<ValueSetKeyWord> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ValueSetKeyWord>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetKeyWord";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetKeyWord {
    return new ValueSetKeyWord().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetKeyWord {
    return new ValueSetKeyWord().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetKeyWord {
    return new ValueSetKeyWord().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetKeyWord | PlainMessage<ValueSetKeyWord> | undefined, b: ValueSetKeyWord | PlainMessage<ValueSetKeyWord> | undefined): boolean {
    return proto3.util.equals(ValueSetKeyWord, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for label.
 * E.g. "(a)", "1.", etc.
 * See http://hl7.org/fhir/StructureDefinition/valueset-label
 *
 * @generated from message google.fhir.r4.core.ValueSetLabel
 */
export class ValueSetLabel extends Message<ValueSetLabel> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ValueSetLabel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetLabel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetLabel {
    return new ValueSetLabel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetLabel {
    return new ValueSetLabel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetLabel {
    return new ValueSetLabel().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetLabel | PlainMessage<ValueSetLabel> | undefined, b: ValueSetLabel | PlainMessage<ValueSetLabel> | undefined): boolean {
    return proto3.util.equals(ValueSetLabel, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for map.
 * A concept map relevant to interpret this value set.
 * See http://hl7.org/fhir/StructureDefinition/valueset-map
 *
 * @generated from message google.fhir.r4.core.ValueSetMap
 */
export class ValueSetMap extends Message<ValueSetMap> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<ValueSetMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetMap {
    return new ValueSetMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetMap {
    return new ValueSetMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetMap {
    return new ValueSetMap().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetMap | PlainMessage<ValueSetMap> | undefined, b: ValueSetMap | PlainMessage<ValueSetMap> | undefined): boolean {
    return proto3.util.equals(ValueSetMap, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for otherName.
 * Alternative names.
 * See http://hl7.org/fhir/StructureDefinition/valueset-otherName
 *
 * @generated from message google.fhir.r4.core.ValueSetOtherName
 */
export class ValueSetOtherName extends Message<ValueSetOtherName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Human readable, short and specific
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Which name is preferred for this language
   *
   * @generated from field: google.fhir.r4.core.Boolean preferred = 5;
   */
  preferred?: Boolean;

  constructor(data?: PartialMessage<ValueSetOtherName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetOtherName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "preferred", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetOtherName {
    return new ValueSetOtherName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetOtherName {
    return new ValueSetOtherName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetOtherName {
    return new ValueSetOtherName().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetOtherName | PlainMessage<ValueSetOtherName> | undefined, b: ValueSetOtherName | PlainMessage<ValueSetOtherName> | undefined): boolean {
    return proto3.util.equals(ValueSetOtherName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for parameterSource.
 * Declares the source of the parameter.
 * See http://hl7.org/fhir/StructureDefinition/valueset-parameterSource
 *
 * @generated from message google.fhir.r4.core.ValueSetParameterSource
 */
export class ValueSetParameterSource extends Message<ValueSetParameterSource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.ValueSetParameterSource.ValueCode value_code = 3;
   */
  valueCode?: ValueSetParameterSource_ValueCode;

  constructor(data?: PartialMessage<ValueSetParameterSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetParameterSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: ValueSetParameterSource_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetParameterSource {
    return new ValueSetParameterSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetParameterSource {
    return new ValueSetParameterSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetParameterSource {
    return new ValueSetParameterSource().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetParameterSource | PlainMessage<ValueSetParameterSource> | undefined, b: ValueSetParameterSource | PlainMessage<ValueSetParameterSource> | undefined): boolean {
    return proto3.util.equals(ValueSetParameterSource, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.ValueSetParameterSource.ValueCode
 */
export class ValueSetParameterSource_ValueCode extends Message<ValueSetParameterSource_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.ExpansionParameterSourceCode.Value value = 1;
   */
  value = ExpansionParameterSourceCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ValueSetParameterSource_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetParameterSource.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExpansionParameterSourceCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetParameterSource_ValueCode {
    return new ValueSetParameterSource_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetParameterSource_ValueCode {
    return new ValueSetParameterSource_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetParameterSource_ValueCode {
    return new ValueSetParameterSource_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetParameterSource_ValueCode | PlainMessage<ValueSetParameterSource_ValueCode> | undefined, b: ValueSetParameterSource_ValueCode | PlainMessage<ValueSetParameterSource_ValueCode> | undefined): boolean {
    return proto3.util.equals(ValueSetParameterSource_ValueCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for reference.
 * Url of Value set the code was chosen from.
 * See http://hl7.org/fhir/StructureDefinition/valueset-reference
 *
 * @generated from message google.fhir.r4.core.ValueSetReference
 */
export class ValueSetReference extends Message<ValueSetReference> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ValueSetReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetReference {
    return new ValueSetReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetReference {
    return new ValueSetReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetReference {
    return new ValueSetReference().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetReference | PlainMessage<ValueSetReference> | undefined, b: ValueSetReference | PlainMessage<ValueSetReference> | undefined): boolean {
    return proto3.util.equals(ValueSetReference, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for rules-text.
 * An alternative non-computable expression of the value set content.
 * See http://hl7.org/fhir/StructureDefinition/valueset-rules-text
 *
 * @generated from message google.fhir.r4.core.ValueSetRulesText
 */
export class ValueSetRulesText extends Message<ValueSetRulesText> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<ValueSetRulesText>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetRulesText";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetRulesText {
    return new ValueSetRulesText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetRulesText {
    return new ValueSetRulesText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetRulesText {
    return new ValueSetRulesText().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetRulesText | PlainMessage<ValueSetRulesText> | undefined, b: ValueSetRulesText | PlainMessage<ValueSetRulesText> | undefined): boolean {
    return proto3.util.equals(ValueSetRulesText, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for sourceReference.
 * Where did this content come from.
 * See http://hl7.org/fhir/StructureDefinition/valueset-sourceReference
 *
 * @generated from message google.fhir.r4.core.ValueSetSourceReference
 */
export class ValueSetSourceReference extends Message<ValueSetSourceReference> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ValueSetSourceReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetSourceReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetSourceReference {
    return new ValueSetSourceReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetSourceReference {
    return new ValueSetSourceReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetSourceReference {
    return new ValueSetSourceReference().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetSourceReference | PlainMessage<ValueSetSourceReference> | undefined, b: ValueSetSourceReference | PlainMessage<ValueSetSourceReference> | undefined): boolean {
    return proto3.util.equals(ValueSetSourceReference, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for steward.
 * Entity responsible for Value Set.
 * See http://hl7.org/fhir/StructureDefinition/valueset-steward
 *
 * @generated from message google.fhir.r4.core.ValueSetSteward
 */
export class ValueSetSteward extends Message<ValueSetSteward> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.ContactDetail value_contact_detail = 3;
   */
  valueContactDetail?: ContactDetail;

  constructor(data?: PartialMessage<ValueSetSteward>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetSteward";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_contact_detail", kind: "message", T: ContactDetail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetSteward {
    return new ValueSetSteward().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetSteward {
    return new ValueSetSteward().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetSteward {
    return new ValueSetSteward().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetSteward | PlainMessage<ValueSetSteward> | undefined, b: ValueSetSteward | PlainMessage<ValueSetSteward> | undefined): boolean {
    return proto3.util.equals(ValueSetSteward, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for supplement.
 * Declares dependency on a particular supplment.
 * See http://hl7.org/fhir/StructureDefinition/valueset-supplement
 *
 * @generated from message google.fhir.r4.core.ValueSetSupplement
 */
export class ValueSetSupplement extends Message<ValueSetSupplement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<ValueSetSupplement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetSupplement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetSupplement {
    return new ValueSetSupplement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetSupplement {
    return new ValueSetSupplement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetSupplement {
    return new ValueSetSupplement().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetSupplement | PlainMessage<ValueSetSupplement> | undefined, b: ValueSetSupplement | PlainMessage<ValueSetSupplement> | undefined): boolean {
    return proto3.util.equals(ValueSetSupplement, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for system.
 * Code system resource.
 * See http://hl7.org/fhir/StructureDefinition/valueset-system
 *
 * @generated from message google.fhir.r4.core.ValueSetSystem
 */
export class ValueSetSystem extends Message<ValueSetSystem> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Canonical value_canonical = 3;
   */
  valueCanonical?: Canonical;

  constructor(data?: PartialMessage<ValueSetSystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetSystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_canonical", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetSystem {
    return new ValueSetSystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetSystem {
    return new ValueSetSystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetSystem {
    return new ValueSetSystem().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetSystem | PlainMessage<ValueSetSystem> | undefined, b: ValueSetSystem | PlainMessage<ValueSetSystem> | undefined): boolean {
    return proto3.util.equals(ValueSetSystem, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for systemName.
 * Code system name.
 * See http://hl7.org/fhir/StructureDefinition/valueset-systemName
 *
 * @generated from message google.fhir.r4.core.ValueSetSystemName
 */
export class ValueSetSystemName extends Message<ValueSetSystemName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ValueSetSystemName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetSystemName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetSystemName {
    return new ValueSetSystemName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetSystemName {
    return new ValueSetSystemName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetSystemName {
    return new ValueSetSystemName().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetSystemName | PlainMessage<ValueSetSystemName> | undefined, b: ValueSetSystemName | PlainMessage<ValueSetSystemName> | undefined): boolean {
    return proto3.util.equals(ValueSetSystemName, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for systemRef.
 * Where to find code system.
 * See http://hl7.org/fhir/StructureDefinition/valueset-systemRef
 *
 * @generated from message google.fhir.r4.core.ValueSetSystemRef
 */
export class ValueSetSystemRef extends Message<ValueSetSystemRef> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ValueSetSystemRef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetSystemRef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetSystemRef {
    return new ValueSetSystemRef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetSystemRef {
    return new ValueSetSystemRef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetSystemRef {
    return new ValueSetSystemRef().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetSystemRef | PlainMessage<ValueSetSystemRef> | undefined, b: ValueSetSystemRef | PlainMessage<ValueSetSystemRef> | undefined): boolean {
    return proto3.util.equals(ValueSetSystemRef, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for toocostly.
 * The expansion is incomplete because the full expansion is too large.
 * See http://hl7.org/fhir/StructureDefinition/valueset-toocostly
 *
 * @generated from message google.fhir.r4.core.ValueSetToocostly
 */
export class ValueSetToocostly extends Message<ValueSetToocostly> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ValueSetToocostly>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetToocostly";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetToocostly {
    return new ValueSetToocostly().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetToocostly {
    return new ValueSetToocostly().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetToocostly {
    return new ValueSetToocostly().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetToocostly | PlainMessage<ValueSetToocostly> | undefined, b: ValueSetToocostly | PlainMessage<ValueSetToocostly> | undefined): boolean {
    return proto3.util.equals(ValueSetToocostly, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for trusted-expansion.
 * Reference to a trusted expansion.
 * See http://hl7.org/fhir/StructureDefinition/valueset-trusted-expansion
 *
 * @generated from message google.fhir.r4.core.ValueSetTrustedExpansion
 */
export class ValueSetTrustedExpansion extends Message<ValueSetTrustedExpansion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Uri value_uri = 3;
   */
  valueUri?: Uri;

  constructor(data?: PartialMessage<ValueSetTrustedExpansion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetTrustedExpansion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_uri", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetTrustedExpansion {
    return new ValueSetTrustedExpansion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetTrustedExpansion {
    return new ValueSetTrustedExpansion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetTrustedExpansion {
    return new ValueSetTrustedExpansion().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetTrustedExpansion | PlainMessage<ValueSetTrustedExpansion> | undefined, b: ValueSetTrustedExpansion | PlainMessage<ValueSetTrustedExpansion> | undefined): boolean {
    return proto3.util.equals(ValueSetTrustedExpansion, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for unclosed.
 * The expansion is incomplete (perhaps because of post-coordination).
 * See http://hl7.org/fhir/StructureDefinition/valueset-unclosed
 *
 * @generated from message google.fhir.r4.core.ValueSetUnclosed
 */
export class ValueSetUnclosed extends Message<ValueSetUnclosed> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Boolean value_boolean = 3;
   */
  valueBoolean?: Boolean;

  constructor(data?: PartialMessage<ValueSetUnclosed>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetUnclosed";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_boolean", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetUnclosed {
    return new ValueSetUnclosed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetUnclosed {
    return new ValueSetUnclosed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetUnclosed {
    return new ValueSetUnclosed().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetUnclosed | PlainMessage<ValueSetUnclosed> | undefined, b: ValueSetUnclosed | PlainMessage<ValueSetUnclosed> | undefined): boolean {
    return proto3.util.equals(ValueSetUnclosed, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for usage.
 * Who has used and how?.
 * See http://hl7.org/fhir/StructureDefinition/valueset-usage
 *
 * @generated from message google.fhir.r4.core.ValueSetUsage
 */
export class ValueSetUsage extends Message<ValueSetUsage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * A consumer of or client for the value set
   *
   * @generated from field: google.fhir.r4.core.String user = 4;
   */
  user?: String;

  /**
   * Implementation/project/standard that uses value set
   *
   * @generated from field: google.fhir.r4.core.String use = 5;
   */
  use?: String;

  constructor(data?: PartialMessage<ValueSetUsage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetUsage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "user", kind: "message", T: String },
    { no: 5, name: "use", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetUsage {
    return new ValueSetUsage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetUsage {
    return new ValueSetUsage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetUsage {
    return new ValueSetUsage().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetUsage | PlainMessage<ValueSetUsage> | undefined, b: ValueSetUsage | PlainMessage<ValueSetUsage> | undefined): boolean {
    return proto3.util.equals(ValueSetUsage, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for warning.
 * Extra warning about the correct use of the value set.
 * See http://hl7.org/fhir/StructureDefinition/valueset-warning
 *
 * @generated from message google.fhir.r4.core.ValueSetWarning
 */
export class ValueSetWarning extends Message<ValueSetWarning> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.Markdown value_markdown = 3;
   */
  valueMarkdown?: Markdown;

  constructor(data?: PartialMessage<ValueSetWarning>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetWarning";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_markdown", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetWarning {
    return new ValueSetWarning().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetWarning {
    return new ValueSetWarning().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetWarning {
    return new ValueSetWarning().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetWarning | PlainMessage<ValueSetWarning> | undefined, b: ValueSetWarning | PlainMessage<ValueSetWarning> | undefined): boolean {
    return proto3.util.equals(ValueSetWarning, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for workflowStatus.
 * Indicates the state of development of the value set.
 * See http://hl7.org/fhir/StructureDefinition/valueset-workflowStatus
 *
 * @generated from message google.fhir.r4.core.ValueSetWorkflowStatus
 */
export class ValueSetWorkflowStatus extends Message<ValueSetWorkflowStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Value of extension
   *
   * @generated from field: google.fhir.r4.core.String value_string = 3;
   */
  valueString?: String;

  constructor(data?: PartialMessage<ValueSetWorkflowStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ValueSetWorkflowStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_string", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ValueSetWorkflowStatus {
    return new ValueSetWorkflowStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ValueSetWorkflowStatus {
    return new ValueSetWorkflowStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ValueSetWorkflowStatus {
    return new ValueSetWorkflowStatus().fromJsonString(jsonString, options);
  }

  static equals(a: ValueSetWorkflowStatus | PlainMessage<ValueSetWorkflowStatus> | undefined, b: ValueSetWorkflowStatus | PlainMessage<ValueSetWorkflowStatus> | undefined): boolean {
    return proto3.util.equals(ValueSetWorkflowStatus, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for wg.
 * Owning Work Group.
 * See http://hl7.org/fhir/StructureDefinition/structuredefinition-wg
 *
 * @generated from message google.fhir.r4.core.Wg
 */
export class Wg extends Message<Wg> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * @generated from field: google.fhir.r4.core.Wg.ValueCode value_code = 3;
   */
  valueCode?: Wg_ValueCode;

  constructor(data?: PartialMessage<Wg>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Wg";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "value_code", kind: "message", T: Wg_ValueCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Wg {
    return new Wg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Wg {
    return new Wg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Wg {
    return new Wg().fromJsonString(jsonString, options);
  }

  static equals(a: Wg | PlainMessage<Wg> | undefined, b: Wg | PlainMessage<Wg> | undefined): boolean {
    return proto3.util.equals(Wg, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.Wg.ValueCode
 */
export class Wg_ValueCode extends Message<Wg_ValueCode> {
  /**
   * @generated from field: google.fhir.r4.core.HL7WorkgroupCode.Value value = 1;
   */
  value = HL7WorkgroupCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Wg_ValueCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Wg.ValueCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(HL7WorkgroupCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Wg_ValueCode {
    return new Wg_ValueCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Wg_ValueCode {
    return new Wg_ValueCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Wg_ValueCode {
    return new Wg_ValueCode().fromJsonString(jsonString, options);
  }

  static equals(a: Wg_ValueCode | PlainMessage<Wg_ValueCode> | undefined, b: Wg_ValueCode | PlainMessage<Wg_ValueCode> | undefined): boolean {
    return proto3.util.equals(Wg_ValueCode, a, b);
  }
}

