//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/datatypes.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { AddressTypeCode_Value, AddressUseCode_Value, AggregationModeCode_Value, BindingStrengthCode_Value, ConstraintSeverityCode_Value, ContactPointSystemCode_Value, ContactPointUseCode_Value, ContributorTypeCode_Value, DaysOfWeekCode_Value, DiscriminatorTypeCode_Value, IdentifierUseCode_Value, NameUseCode_Value, NarrativeStatusCode_Value, OperationParameterUseCode_Value, PropertyRepresentationCode_Value, QuantityComparatorCode_Value, ReferenceVersionRulesCode_Value, RelatedArtifactTypeCode_Value, SlicingRulesCode_Value, SortDirectionCode_Value, TriggerTypeCode_Value } from "./codes_pb.js";
import { EventTimingValueSet_Value, FHIRAllTypesValueSet_Value, UnitsOfTimeValueSet_Value } from "./valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for Address.
 * An address expressed using postal conventions (as opposed to GPS or other
 * location definition formats). See
 * http://hl7.org/fhir/StructureDefinition/Address
 *
 * @generated from message google.fhir.r4.core.Address
 */
export class Address extends Message<Address> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Address.UseCode use = 3;
   */
  use?: Address_UseCode;

  /**
   * @generated from field: google.fhir.r4.core.Address.TypeCode type = 4;
   */
  type?: Address_TypeCode;

  /**
   * Text representation of the address
   *
   * @generated from field: google.fhir.r4.core.String text = 5;
   */
  text?: String;

  /**
   * Street name, number, direction & P.O. Box etc.
   *
   * @generated from field: repeated google.fhir.r4.core.String line = 6;
   */
  line: String[] = [];

  /**
   * Name of city, town etc.
   *
   * @generated from field: google.fhir.r4.core.String city = 7;
   */
  city?: String;

  /**
   * District name (aka county)
   *
   * @generated from field: google.fhir.r4.core.String district = 8;
   */
  district?: String;

  /**
   * Sub-unit of country (abbreviations ok)
   *
   * @generated from field: google.fhir.r4.core.String state = 9;
   */
  state?: String;

  /**
   * Postal code for area
   *
   * @generated from field: google.fhir.r4.core.String postal_code = 10;
   */
  postalCode?: String;

  /**
   * Country (e.g. can be ISO 3166 2 or 3 letter code)
   *
   * @generated from field: google.fhir.r4.core.String country = 11;
   */
  country?: String;

  /**
   * Time period when address was/is in use
   *
   * @generated from field: google.fhir.r4.core.Period period = 12;
   */
  period?: Period;

  constructor(data?: PartialMessage<Address>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Address";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "use", kind: "message", T: Address_UseCode },
    { no: 4, name: "type", kind: "message", T: Address_TypeCode },
    { no: 5, name: "text", kind: "message", T: String },
    { no: 6, name: "line", kind: "message", T: String, repeated: true },
    { no: 7, name: "city", kind: "message", T: String },
    { no: 8, name: "district", kind: "message", T: String },
    { no: 9, name: "state", kind: "message", T: String },
    { no: 10, name: "postal_code", kind: "message", T: String },
    { no: 11, name: "country", kind: "message", T: String },
    { no: 12, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Address {
    return new Address().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Address {
    return new Address().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Address {
    return new Address().fromJsonString(jsonString, options);
  }

  static equals(a: Address | PlainMessage<Address> | undefined, b: Address | PlainMessage<Address> | undefined): boolean {
    return proto3.util.equals(Address, a, b);
  }
}

/**
 * home | work | temp | old | billing - purpose of this address
 *
 * @generated from message google.fhir.r4.core.Address.UseCode
 */
export class Address_UseCode extends Message<Address_UseCode> {
  /**
   * @generated from field: google.fhir.r4.core.AddressUseCode.Value value = 1;
   */
  value = AddressUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Address_UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Address.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AddressUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Address_UseCode {
    return new Address_UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Address_UseCode {
    return new Address_UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Address_UseCode {
    return new Address_UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: Address_UseCode | PlainMessage<Address_UseCode> | undefined, b: Address_UseCode | PlainMessage<Address_UseCode> | undefined): boolean {
    return proto3.util.equals(Address_UseCode, a, b);
  }
}

/**
 * postal | physical | both
 *
 * @generated from message google.fhir.r4.core.Address.TypeCode
 */
export class Address_TypeCode extends Message<Address_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.AddressTypeCode.Value value = 1;
   */
  value = AddressTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Address_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Address.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AddressTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Address_TypeCode {
    return new Address_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Address_TypeCode {
    return new Address_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Address_TypeCode {
    return new Address_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: Address_TypeCode | PlainMessage<Address_TypeCode> | undefined, b: Address_TypeCode | PlainMessage<Address_TypeCode> | undefined): boolean {
    return proto3.util.equals(Address_TypeCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Age.
 * A duration of time during which an organism (or a process) has existed.
 * See http://hl7.org/fhir/StructureDefinition/Age
 *
 * @generated from message google.fhir.r4.core.Age
 */
export class Age extends Message<Age> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Age.ComparatorCode comparator = 4;
   */
  comparator?: Age_ComparatorCode;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<Age>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Age";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "comparator", kind: "message", T: Age_ComparatorCode },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Age {
    return new Age().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Age {
    return new Age().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Age {
    return new Age().fromJsonString(jsonString, options);
  }

  static equals(a: Age | PlainMessage<Age> | undefined, b: Age | PlainMessage<Age> | undefined): boolean {
    return proto3.util.equals(Age, a, b);
  }
}

/**
 * < | <= | >= | > - how to understand the value
 *
 * @generated from message google.fhir.r4.core.Age.ComparatorCode
 */
export class Age_ComparatorCode extends Message<Age_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuantityComparatorCode.Value value = 1;
   */
  value = QuantityComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Age_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Age.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuantityComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Age_ComparatorCode {
    return new Age_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Age_ComparatorCode {
    return new Age_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Age_ComparatorCode {
    return new Age_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: Age_ComparatorCode | PlainMessage<Age_ComparatorCode> | undefined, b: Age_ComparatorCode | PlainMessage<Age_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(Age_ComparatorCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Annotation.
 * Text node with attribution.
 * See http://hl7.org/fhir/StructureDefinition/Annotation
 *
 * @generated from message google.fhir.r4.core.Annotation
 */
export class Annotation extends Message<Annotation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Annotation.AuthorX author = 3;
   */
  author?: Annotation_AuthorX;

  /**
   * When the annotation was made
   *
   * @generated from field: google.fhir.r4.core.DateTime time = 4;
   */
  time?: DateTime;

  /**
   * The annotation  - text content (as markdown)
   *
   * @generated from field: google.fhir.r4.core.Markdown text = 5;
   */
  text?: Markdown;

  constructor(data?: PartialMessage<Annotation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Annotation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "author", kind: "message", T: Annotation_AuthorX },
    { no: 4, name: "time", kind: "message", T: DateTime },
    { no: 5, name: "text", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Annotation {
    return new Annotation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Annotation {
    return new Annotation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Annotation {
    return new Annotation().fromJsonString(jsonString, options);
  }

  static equals(a: Annotation | PlainMessage<Annotation> | undefined, b: Annotation | PlainMessage<Annotation> | undefined): boolean {
    return proto3.util.equals(Annotation, a, b);
  }
}

/**
 * Individual responsible for the annotation
 *
 * @generated from message google.fhir.r4.core.Annotation.AuthorX
 */
export class Annotation_AuthorX extends Message<Annotation_AuthorX> {
  /**
   * @generated from oneof google.fhir.r4.core.Annotation.AuthorX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Annotation_AuthorX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Annotation.AuthorX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Annotation_AuthorX {
    return new Annotation_AuthorX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Annotation_AuthorX {
    return new Annotation_AuthorX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Annotation_AuthorX {
    return new Annotation_AuthorX().fromJsonString(jsonString, options);
  }

  static equals(a: Annotation_AuthorX | PlainMessage<Annotation_AuthorX> | undefined, b: Annotation_AuthorX | PlainMessage<Annotation_AuthorX> | undefined): boolean {
    return proto3.util.equals(Annotation_AuthorX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Attachment.
 * Content in a format defined elsewhere.
 * See http://hl7.org/fhir/StructureDefinition/Attachment
 *
 * @generated from message google.fhir.r4.core.Attachment
 */
export class Attachment extends Message<Attachment> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Attachment.ContentTypeCode content_type = 3;
   */
  contentType?: Attachment_ContentTypeCode;

  /**
   * Human language of the content (BCP-47)
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Data inline, base64ed
   *
   * @generated from field: google.fhir.r4.core.Base64Binary data = 5;
   */
  data?: Base64Binary;

  /**
   * Uri where the data can be found
   *
   * @generated from field: google.fhir.r4.core.Url url = 6;
   */
  url?: Url;

  /**
   * Number of bytes of content (if url provided)
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt size = 7;
   */
  size?: UnsignedInt;

  /**
   * Hash of the data (sha-1, base64ed)
   *
   * @generated from field: google.fhir.r4.core.Base64Binary hash = 8;
   */
  hash?: Base64Binary;

  /**
   * Label to display in place of the data
   *
   * @generated from field: google.fhir.r4.core.String title = 9;
   */
  title?: String;

  /**
   * Date attachment was first created
   *
   * @generated from field: google.fhir.r4.core.DateTime creation = 10;
   */
  creation?: DateTime;

  constructor(data?: PartialMessage<Attachment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Attachment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "content_type", kind: "message", T: Attachment_ContentTypeCode },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "data", kind: "message", T: Base64Binary },
    { no: 6, name: "url", kind: "message", T: Url },
    { no: 7, name: "size", kind: "message", T: UnsignedInt },
    { no: 8, name: "hash", kind: "message", T: Base64Binary },
    { no: 9, name: "title", kind: "message", T: String },
    { no: 10, name: "creation", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Attachment {
    return new Attachment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Attachment {
    return new Attachment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Attachment {
    return new Attachment().fromJsonString(jsonString, options);
  }

  static equals(a: Attachment | PlainMessage<Attachment> | undefined, b: Attachment | PlainMessage<Attachment> | undefined): boolean {
    return proto3.util.equals(Attachment, a, b);
  }
}

/**
 * Mime type of the content, with charset etc.
 *
 * @generated from message google.fhir.r4.core.Attachment.ContentTypeCode
 */
export class Attachment_ContentTypeCode extends Message<Attachment_ContentTypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<Attachment_ContentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Attachment.ContentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Attachment_ContentTypeCode {
    return new Attachment_ContentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Attachment_ContentTypeCode {
    return new Attachment_ContentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Attachment_ContentTypeCode {
    return new Attachment_ContentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: Attachment_ContentTypeCode | PlainMessage<Attachment_ContentTypeCode> | undefined, b: Attachment_ContentTypeCode | PlainMessage<Attachment_ContentTypeCode> | undefined): boolean {
    return proto3.util.equals(Attachment_ContentTypeCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for BackboneElement.
 * Base for elements defined inside a resource.
 * See http://hl7.org/fhir/StructureDefinition/BackboneElement
 *
 * @generated from message google.fhir.r4.core.BackboneElement
 */
export class BackboneElement extends Message<BackboneElement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  constructor(data?: PartialMessage<BackboneElement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BackboneElement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BackboneElement {
    return new BackboneElement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BackboneElement {
    return new BackboneElement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BackboneElement {
    return new BackboneElement().fromJsonString(jsonString, options);
  }

  static equals(a: BackboneElement | PlainMessage<BackboneElement> | undefined, b: BackboneElement | PlainMessage<BackboneElement> | undefined): boolean {
    return proto3.util.equals(BackboneElement, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for base64Binary.
 * Primitive Type base64Binary.
 * See http://hl7.org/fhir/StructureDefinition/base64Binary
 *
 * @generated from message google.fhir.r4.core.Base64Binary
 */
export class Base64Binary extends Message<Base64Binary> {
  /**
   * Primitive value for base64Binary
   *
   * @generated from field: bytes value = 1;
   */
  value = new Uint8Array(0);

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Base64Binary>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Base64Binary";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Base64Binary {
    return new Base64Binary().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Base64Binary {
    return new Base64Binary().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Base64Binary {
    return new Base64Binary().fromJsonString(jsonString, options);
  }

  static equals(a: Base64Binary | PlainMessage<Base64Binary> | undefined, b: Base64Binary | PlainMessage<Base64Binary> | undefined): boolean {
    return proto3.util.equals(Base64Binary, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for boolean.
 * Primitive Type boolean.
 * See http://hl7.org/fhir/StructureDefinition/boolean
 *
 * @generated from message google.fhir.r4.core.Boolean
 */
export class Boolean extends Message<Boolean> {
  /**
   * Primitive value for boolean
   *
   * @generated from field: bool value = 1;
   */
  value = false;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Boolean>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Boolean";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Boolean {
    return new Boolean().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Boolean {
    return new Boolean().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Boolean {
    return new Boolean().fromJsonString(jsonString, options);
  }

  static equals(a: Boolean | PlainMessage<Boolean> | undefined, b: Boolean | PlainMessage<Boolean> | undefined): boolean {
    return proto3.util.equals(Boolean, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for canonical.
 * Primitive Type canonical.
 * See http://hl7.org/fhir/StructureDefinition/canonical
 *
 * @generated from message google.fhir.r4.core.Canonical
 */
export class Canonical extends Message<Canonical> {
  /**
   * Primitive value for canonical
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Canonical>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Canonical";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Canonical {
    return new Canonical().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Canonical {
    return new Canonical().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Canonical {
    return new Canonical().fromJsonString(jsonString, options);
  }

  static equals(a: Canonical | PlainMessage<Canonical> | undefined, b: Canonical | PlainMessage<Canonical> | undefined): boolean {
    return proto3.util.equals(Canonical, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for code.
 * Primitive Type code.
 * See http://hl7.org/fhir/StructureDefinition/code
 *
 * @generated from message google.fhir.r4.core.Code
 */
export class Code extends Message<Code> {
  /**
   * Primitive value for code
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Code>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Code";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Code {
    return new Code().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Code {
    return new Code().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Code {
    return new Code().fromJsonString(jsonString, options);
  }

  static equals(a: Code | PlainMessage<Code> | undefined, b: Code | PlainMessage<Code> | undefined): boolean {
    return proto3.util.equals(Code, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for CodeableConcept.
 * Concept - reference to a terminology or just  text.
 * See http://hl7.org/fhir/StructureDefinition/CodeableConcept
 *
 * @generated from message google.fhir.r4.core.CodeableConcept
 */
export class CodeableConcept extends Message<CodeableConcept> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Code defined by a terminology system
   *
   * @generated from field: repeated google.fhir.r4.core.Coding coding = 3;
   */
  coding: Coding[] = [];

  /**
   * Plain text representation of the concept
   *
   * @generated from field: google.fhir.r4.core.String text = 4;
   */
  text?: String;

  constructor(data?: PartialMessage<CodeableConcept>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeableConcept";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "coding", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeableConcept {
    return new CodeableConcept().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeableConcept {
    return new CodeableConcept().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeableConcept {
    return new CodeableConcept().fromJsonString(jsonString, options);
  }

  static equals(a: CodeableConcept | PlainMessage<CodeableConcept> | undefined, b: CodeableConcept | PlainMessage<CodeableConcept> | undefined): boolean {
    return proto3.util.equals(CodeableConcept, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Coding.
 * A reference to a code defined by a terminology system.
 * See http://hl7.org/fhir/StructureDefinition/Coding
 *
 * @generated from message google.fhir.r4.core.Coding
 */
export class Coding extends Message<Coding> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Identity of the terminology system
   *
   * @generated from field: google.fhir.r4.core.Uri system = 3;
   */
  system?: Uri;

  /**
   * Version of the system - if relevant
   *
   * @generated from field: google.fhir.r4.core.String version = 4;
   */
  version?: String;

  /**
   * Symbol in syntax defined by the system
   *
   * @generated from field: google.fhir.r4.core.Code code = 5;
   */
  code?: Code;

  /**
   * Representation defined by the system
   *
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  /**
   * If this coding was chosen directly by the user
   *
   * @generated from field: google.fhir.r4.core.Boolean user_selected = 7;
   */
  userSelected?: Boolean;

  constructor(data?: PartialMessage<Coding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Coding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "system", kind: "message", T: Uri },
    { no: 4, name: "version", kind: "message", T: String },
    { no: 5, name: "code", kind: "message", T: Code },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "user_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coding {
    return new Coding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coding {
    return new Coding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coding {
    return new Coding().fromJsonString(jsonString, options);
  }

  static equals(a: Coding | PlainMessage<Coding> | undefined, b: Coding | PlainMessage<Coding> | undefined): boolean {
    return proto3.util.equals(Coding, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ContactDetail.
 * Contact information.
 * See http://hl7.org/fhir/StructureDefinition/ContactDetail
 *
 * @generated from message google.fhir.r4.core.ContactDetail
 */
export class ContactDetail extends Message<ContactDetail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Name of an individual to contact
   *
   * @generated from field: google.fhir.r4.core.String name = 3;
   */
  name?: String;

  /**
   * Contact details for individual or organization
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 4;
   */
  telecom: ContactPoint[] = [];

  constructor(data?: PartialMessage<ContactDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "name", kind: "message", T: String },
    { no: 4, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactDetail {
    return new ContactDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactDetail {
    return new ContactDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactDetail {
    return new ContactDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ContactDetail | PlainMessage<ContactDetail> | undefined, b: ContactDetail | PlainMessage<ContactDetail> | undefined): boolean {
    return proto3.util.equals(ContactDetail, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ContactPoint.
 * Details of a Technology mediated contact point (phone, fax, email, etc.).
 * See http://hl7.org/fhir/StructureDefinition/ContactPoint
 *
 * @generated from message google.fhir.r4.core.ContactPoint
 */
export class ContactPoint extends Message<ContactPoint> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ContactPoint.SystemCode system = 3;
   */
  system?: ContactPoint_SystemCode;

  /**
   * The actual contact point details
   *
   * @generated from field: google.fhir.r4.core.String value = 4;
   */
  value?: String;

  /**
   * @generated from field: google.fhir.r4.core.ContactPoint.UseCode use = 5;
   */
  use?: ContactPoint_UseCode;

  /**
   * Specify preferred order of use (1 = highest)
   *
   * @generated from field: google.fhir.r4.core.PositiveInt rank = 6;
   */
  rank?: PositiveInt;

  /**
   * Time period when the contact point was/is in use
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<ContactPoint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPoint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "system", kind: "message", T: ContactPoint_SystemCode },
    { no: 4, name: "value", kind: "message", T: String },
    { no: 5, name: "use", kind: "message", T: ContactPoint_UseCode },
    { no: 6, name: "rank", kind: "message", T: PositiveInt },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPoint {
    return new ContactPoint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPoint {
    return new ContactPoint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPoint {
    return new ContactPoint().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPoint | PlainMessage<ContactPoint> | undefined, b: ContactPoint | PlainMessage<ContactPoint> | undefined): boolean {
    return proto3.util.equals(ContactPoint, a, b);
  }
}

/**
 * phone | fax | email | pager | url | sms | other
 *
 * @generated from message google.fhir.r4.core.ContactPoint.SystemCode
 */
export class ContactPoint_SystemCode extends Message<ContactPoint_SystemCode> {
  /**
   * @generated from field: google.fhir.r4.core.ContactPointSystemCode.Value value = 1;
   */
  value = ContactPointSystemCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ContactPoint_SystemCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPoint.SystemCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContactPointSystemCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPoint_SystemCode {
    return new ContactPoint_SystemCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPoint_SystemCode {
    return new ContactPoint_SystemCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPoint_SystemCode {
    return new ContactPoint_SystemCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPoint_SystemCode | PlainMessage<ContactPoint_SystemCode> | undefined, b: ContactPoint_SystemCode | PlainMessage<ContactPoint_SystemCode> | undefined): boolean {
    return proto3.util.equals(ContactPoint_SystemCode, a, b);
  }
}

/**
 * home | work | temp | old | mobile - purpose of this contact point
 *
 * @generated from message google.fhir.r4.core.ContactPoint.UseCode
 */
export class ContactPoint_UseCode extends Message<ContactPoint_UseCode> {
  /**
   * @generated from field: google.fhir.r4.core.ContactPointUseCode.Value value = 1;
   */
  value = ContactPointUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ContactPoint_UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPoint.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContactPointUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPoint_UseCode {
    return new ContactPoint_UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPoint_UseCode {
    return new ContactPoint_UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPoint_UseCode {
    return new ContactPoint_UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPoint_UseCode | PlainMessage<ContactPoint_UseCode> | undefined, b: ContactPoint_UseCode | PlainMessage<ContactPoint_UseCode> | undefined): boolean {
    return proto3.util.equals(ContactPoint_UseCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Contributor.
 * Contributor information.
 * See http://hl7.org/fhir/StructureDefinition/Contributor
 *
 * @generated from message google.fhir.r4.core.Contributor
 */
export class Contributor extends Message<Contributor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Contributor.TypeCode type = 3;
   */
  type?: Contributor_TypeCode;

  /**
   * Who contributed the content
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Contact details of the contributor
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 5;
   */
  contact: ContactDetail[] = [];

  constructor(data?: PartialMessage<Contributor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Contributor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: Contributor_TypeCode },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "contact", kind: "message", T: ContactDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contributor {
    return new Contributor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contributor {
    return new Contributor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contributor {
    return new Contributor().fromJsonString(jsonString, options);
  }

  static equals(a: Contributor | PlainMessage<Contributor> | undefined, b: Contributor | PlainMessage<Contributor> | undefined): boolean {
    return proto3.util.equals(Contributor, a, b);
  }
}

/**
 * author | editor | reviewer | endorser
 *
 * @generated from message google.fhir.r4.core.Contributor.TypeCode
 */
export class Contributor_TypeCode extends Message<Contributor_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ContributorTypeCode.Value value = 1;
   */
  value = ContributorTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Contributor_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Contributor.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ContributorTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Contributor_TypeCode {
    return new Contributor_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Contributor_TypeCode {
    return new Contributor_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Contributor_TypeCode {
    return new Contributor_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: Contributor_TypeCode | PlainMessage<Contributor_TypeCode> | undefined, b: Contributor_TypeCode | PlainMessage<Contributor_TypeCode> | undefined): boolean {
    return proto3.util.equals(Contributor_TypeCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Count.
 * A measured or measurable amount.
 * See http://hl7.org/fhir/StructureDefinition/Count
 *
 * @generated from message google.fhir.r4.core.Count
 */
export class Count extends Message<Count> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Count.ComparatorCode comparator = 4;
   */
  comparator?: Count_ComparatorCode;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<Count>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Count";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "comparator", kind: "message", T: Count_ComparatorCode },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Count {
    return new Count().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Count {
    return new Count().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Count {
    return new Count().fromJsonString(jsonString, options);
  }

  static equals(a: Count | PlainMessage<Count> | undefined, b: Count | PlainMessage<Count> | undefined): boolean {
    return proto3.util.equals(Count, a, b);
  }
}

/**
 * < | <= | >= | > - how to understand the value
 *
 * @generated from message google.fhir.r4.core.Count.ComparatorCode
 */
export class Count_ComparatorCode extends Message<Count_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuantityComparatorCode.Value value = 1;
   */
  value = QuantityComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Count_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Count.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuantityComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Count_ComparatorCode {
    return new Count_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Count_ComparatorCode {
    return new Count_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Count_ComparatorCode {
    return new Count_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: Count_ComparatorCode | PlainMessage<Count_ComparatorCode> | undefined, b: Count_ComparatorCode | PlainMessage<Count_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(Count_ComparatorCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for DataRequirement.
 * Describes a required data item.
 * See http://hl7.org/fhir/StructureDefinition/DataRequirement
 *
 * @generated from message google.fhir.r4.core.DataRequirement
 */
export class DataRequirement extends Message<DataRequirement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DataRequirement.TypeCode type = 3;
   */
  type?: DataRequirement_TypeCode;

  /**
   * The profile of the required data
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical profile = 4;
   */
  profile: Canonical[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DataRequirement.SubjectX subject = 5;
   */
  subject?: DataRequirement_SubjectX;

  /**
   * Indicates specific structure elements that are referenced by the knowledge
   * module
   *
   * @generated from field: repeated google.fhir.r4.core.String must_support = 6;
   */
  mustSupport: String[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.DataRequirement.CodeFilter code_filter = 7;
   */
  codeFilter: DataRequirement_CodeFilter[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.DataRequirement.DateFilter date_filter = 8;
   */
  dateFilter: DataRequirement_DateFilter[] = [];

  /**
   * Number of results
   *
   * @generated from field: google.fhir.r4.core.PositiveInt limit = 9;
   */
  limit?: PositiveInt;

  /**
   * @generated from field: repeated google.fhir.r4.core.DataRequirement.Sort sort = 10;
   */
  sort: DataRequirement_Sort[] = [];

  constructor(data?: PartialMessage<DataRequirement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: DataRequirement_TypeCode },
    { no: 4, name: "profile", kind: "message", T: Canonical, repeated: true },
    { no: 5, name: "subject", kind: "message", T: DataRequirement_SubjectX },
    { no: 6, name: "must_support", kind: "message", T: String, repeated: true },
    { no: 7, name: "code_filter", kind: "message", T: DataRequirement_CodeFilter, repeated: true },
    { no: 8, name: "date_filter", kind: "message", T: DataRequirement_DateFilter, repeated: true },
    { no: 9, name: "limit", kind: "message", T: PositiveInt },
    { no: 10, name: "sort", kind: "message", T: DataRequirement_Sort, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement {
    return new DataRequirement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement {
    return new DataRequirement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement {
    return new DataRequirement().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement | PlainMessage<DataRequirement> | undefined, b: DataRequirement | PlainMessage<DataRequirement> | undefined): boolean {
    return proto3.util.equals(DataRequirement, a, b);
  }
}

/**
 * The type of the required data
 *
 * @generated from message google.fhir.r4.core.DataRequirement.TypeCode
 */
export class DataRequirement_TypeCode extends Message<DataRequirement_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRAllTypesValueSet.Value value = 1;
   */
  value = FHIRAllTypesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DataRequirement_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRAllTypesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_TypeCode {
    return new DataRequirement_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_TypeCode {
    return new DataRequirement_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_TypeCode {
    return new DataRequirement_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_TypeCode | PlainMessage<DataRequirement_TypeCode> | undefined, b: DataRequirement_TypeCode | PlainMessage<DataRequirement_TypeCode> | undefined): boolean {
    return proto3.util.equals(DataRequirement_TypeCode, a, b);
  }
}

/**
 * E.g. Patient, Practitioner, RelatedPerson, Organization, Location, Device
 *
 * @generated from message google.fhir.r4.core.DataRequirement.SubjectX
 */
export class DataRequirement_SubjectX extends Message<DataRequirement_SubjectX> {
  /**
   * @generated from oneof google.fhir.r4.core.DataRequirement.SubjectX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DataRequirement_SubjectX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.SubjectX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_SubjectX {
    return new DataRequirement_SubjectX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_SubjectX {
    return new DataRequirement_SubjectX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_SubjectX {
    return new DataRequirement_SubjectX().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_SubjectX | PlainMessage<DataRequirement_SubjectX> | undefined, b: DataRequirement_SubjectX | PlainMessage<DataRequirement_SubjectX> | undefined): boolean {
    return proto3.util.equals(DataRequirement_SubjectX, a, b);
  }
}

/**
 * What codes are expected
 *
 * @generated from message google.fhir.r4.core.DataRequirement.CodeFilter
 */
export class DataRequirement_CodeFilter extends Message<DataRequirement_CodeFilter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * A code-valued attribute to filter on
   *
   * @generated from field: google.fhir.r4.core.String path = 3;
   */
  path?: String;

  /**
   * A coded (token) parameter to search on
   *
   * @generated from field: google.fhir.r4.core.String search_param = 4;
   */
  searchParam?: String;

  /**
   * Valueset for the filter
   *
   * @generated from field: google.fhir.r4.core.Canonical value_set = 5;
   */
  valueSet?: Canonical;

  /**
   * What code is expected
   *
   * @generated from field: repeated google.fhir.r4.core.Coding code = 6;
   */
  code: Coding[] = [];

  constructor(data?: PartialMessage<DataRequirement_CodeFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.CodeFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "search_param", kind: "message", T: String },
    { no: 5, name: "value_set", kind: "message", T: Canonical },
    { no: 6, name: "code", kind: "message", T: Coding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_CodeFilter {
    return new DataRequirement_CodeFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_CodeFilter {
    return new DataRequirement_CodeFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_CodeFilter {
    return new DataRequirement_CodeFilter().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_CodeFilter | PlainMessage<DataRequirement_CodeFilter> | undefined, b: DataRequirement_CodeFilter | PlainMessage<DataRequirement_CodeFilter> | undefined): boolean {
    return proto3.util.equals(DataRequirement_CodeFilter, a, b);
  }
}

/**
 * What dates/date ranges are expected
 *
 * @generated from message google.fhir.r4.core.DataRequirement.DateFilter
 */
export class DataRequirement_DateFilter extends Message<DataRequirement_DateFilter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * A date-valued attribute to filter on
   *
   * @generated from field: google.fhir.r4.core.String path = 3;
   */
  path?: String;

  /**
   * A date valued parameter to search on
   *
   * @generated from field: google.fhir.r4.core.String search_param = 4;
   */
  searchParam?: String;

  /**
   * @generated from field: google.fhir.r4.core.DataRequirement.DateFilter.ValueX value = 5;
   */
  value?: DataRequirement_DateFilter_ValueX;

  constructor(data?: PartialMessage<DataRequirement_DateFilter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.DateFilter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "search_param", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: DataRequirement_DateFilter_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_DateFilter {
    return new DataRequirement_DateFilter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter {
    return new DataRequirement_DateFilter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter {
    return new DataRequirement_DateFilter().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_DateFilter | PlainMessage<DataRequirement_DateFilter> | undefined, b: DataRequirement_DateFilter | PlainMessage<DataRequirement_DateFilter> | undefined): boolean {
    return proto3.util.equals(DataRequirement_DateFilter, a, b);
  }
}

/**
 * The value of the filter, as a Period, DateTime, or Duration value
 *
 * @generated from message google.fhir.r4.core.DataRequirement.DateFilter.ValueX
 */
export class DataRequirement_DateFilter_ValueX extends Message<DataRequirement_DateFilter_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.DataRequirement.DateFilter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 3;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DataRequirement_DateFilter_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.DateFilter.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "duration", kind: "message", T: Duration, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_DateFilter_ValueX {
    return new DataRequirement_DateFilter_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter_ValueX {
    return new DataRequirement_DateFilter_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_DateFilter_ValueX {
    return new DataRequirement_DateFilter_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_DateFilter_ValueX | PlainMessage<DataRequirement_DateFilter_ValueX> | undefined, b: DataRequirement_DateFilter_ValueX | PlainMessage<DataRequirement_DateFilter_ValueX> | undefined): boolean {
    return proto3.util.equals(DataRequirement_DateFilter_ValueX, a, b);
  }
}

/**
 * Order of the results
 *
 * @generated from message google.fhir.r4.core.DataRequirement.Sort
 */
export class DataRequirement_Sort extends Message<DataRequirement_Sort> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The name of the attribute to perform the sort
   *
   * @generated from field: google.fhir.r4.core.String path = 3;
   */
  path?: String;

  /**
   * @generated from field: google.fhir.r4.core.DataRequirement.Sort.DirectionCode direction = 4;
   */
  direction?: DataRequirement_Sort_DirectionCode;

  constructor(data?: PartialMessage<DataRequirement_Sort>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.Sort";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "direction", kind: "message", T: DataRequirement_Sort_DirectionCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_Sort {
    return new DataRequirement_Sort().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_Sort {
    return new DataRequirement_Sort().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_Sort {
    return new DataRequirement_Sort().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_Sort | PlainMessage<DataRequirement_Sort> | undefined, b: DataRequirement_Sort | PlainMessage<DataRequirement_Sort> | undefined): boolean {
    return proto3.util.equals(DataRequirement_Sort, a, b);
  }
}

/**
 * ascending | descending
 *
 * @generated from message google.fhir.r4.core.DataRequirement.Sort.DirectionCode
 */
export class DataRequirement_Sort_DirectionCode extends Message<DataRequirement_Sort_DirectionCode> {
  /**
   * @generated from field: google.fhir.r4.core.SortDirectionCode.Value value = 1;
   */
  value = SortDirectionCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DataRequirement_Sort_DirectionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataRequirement.Sort.DirectionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SortDirectionCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataRequirement_Sort_DirectionCode {
    return new DataRequirement_Sort_DirectionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataRequirement_Sort_DirectionCode {
    return new DataRequirement_Sort_DirectionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataRequirement_Sort_DirectionCode {
    return new DataRequirement_Sort_DirectionCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataRequirement_Sort_DirectionCode | PlainMessage<DataRequirement_Sort_DirectionCode> | undefined, b: DataRequirement_Sort_DirectionCode | PlainMessage<DataRequirement_Sort_DirectionCode> | undefined): boolean {
    return proto3.util.equals(DataRequirement_Sort_DirectionCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for date.
 * Primitive Type date.
 * See http://hl7.org/fhir/StructureDefinition/date
 *
 * @generated from message google.fhir.r4.core.Date
 */
export class Date extends Message<Date> {
  /**
   * The absolute time of the event as a Unix epoch in mircoseconds.
   *
   * @generated from field: int64 value_us = 1;
   */
  valueUs = protoInt64.zero;

  /**
   * The local timezone in which the event was recorded.
   *
   * @generated from field: string timezone = 2;
   */
  timezone = "";

  /**
   * @generated from field: google.fhir.r4.core.Date.Precision precision = 3;
   */
  precision = Date_Precision.PRECISION_UNSPECIFIED;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 4;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 5;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Date>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Date";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value_us", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "precision", kind: "enum", T: proto3.getEnumType(Date_Precision) },
    { no: 4, name: "id", kind: "message", T: String },
    { no: 5, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Date {
    return new Date().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Date {
    return new Date().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Date {
    return new Date().fromJsonString(jsonString, options);
  }

  static equals(a: Date | PlainMessage<Date> | undefined, b: Date | PlainMessage<Date> | undefined): boolean {
    return proto3.util.equals(Date, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.Date.Precision
 */
export enum Date_Precision {
  /**
   * @generated from enum value: PRECISION_UNSPECIFIED = 0;
   */
  PRECISION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: YEAR = 1;
   */
  YEAR = 1,

  /**
   * @generated from enum value: MONTH = 2;
   */
  MONTH = 2,

  /**
   * @generated from enum value: DAY = 3;
   */
  DAY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(Date_Precision)
proto3.util.setEnumType(Date_Precision, "google.fhir.r4.core.Date.Precision", [
  { no: 0, name: "PRECISION_UNSPECIFIED" },
  { no: 1, name: "YEAR" },
  { no: 2, name: "MONTH" },
  { no: 3, name: "DAY" },
]);

/**
 * Auto-generated from StructureDefinition for dateTime.
 * Primitive Type dateTime.
 * See http://hl7.org/fhir/StructureDefinition/dateTime
 *
 * @generated from message google.fhir.r4.core.DateTime
 */
export class DateTime extends Message<DateTime> {
  /**
   * The absolute time of the event as a Unix epoch in mircoseconds.
   *
   * @generated from field: int64 value_us = 1;
   */
  valueUs = protoInt64.zero;

  /**
   * The local timezone in which the event was recorded.
   *
   * @generated from field: string timezone = 2;
   */
  timezone = "";

  /**
   * @generated from field: google.fhir.r4.core.DateTime.Precision precision = 3;
   */
  precision = DateTime_Precision.PRECISION_UNSPECIFIED;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 4;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 5;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DateTime>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DateTime";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value_us", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "precision", kind: "enum", T: proto3.getEnumType(DateTime_Precision) },
    { no: 4, name: "id", kind: "message", T: String },
    { no: 5, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DateTime {
    return new DateTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DateTime {
    return new DateTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DateTime {
    return new DateTime().fromJsonString(jsonString, options);
  }

  static equals(a: DateTime | PlainMessage<DateTime> | undefined, b: DateTime | PlainMessage<DateTime> | undefined): boolean {
    return proto3.util.equals(DateTime, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DateTime.Precision
 */
export enum DateTime_Precision {
  /**
   * @generated from enum value: PRECISION_UNSPECIFIED = 0;
   */
  PRECISION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: YEAR = 1;
   */
  YEAR = 1,

  /**
   * @generated from enum value: MONTH = 2;
   */
  MONTH = 2,

  /**
   * @generated from enum value: DAY = 3;
   */
  DAY = 3,

  /**
   * @generated from enum value: SECOND = 4;
   */
  SECOND = 4,

  /**
   * @generated from enum value: MILLISECOND = 5;
   */
  MILLISECOND = 5,

  /**
   * @generated from enum value: MICROSECOND = 6;
   */
  MICROSECOND = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(DateTime_Precision)
proto3.util.setEnumType(DateTime_Precision, "google.fhir.r4.core.DateTime.Precision", [
  { no: 0, name: "PRECISION_UNSPECIFIED" },
  { no: 1, name: "YEAR" },
  { no: 2, name: "MONTH" },
  { no: 3, name: "DAY" },
  { no: 4, name: "SECOND" },
  { no: 5, name: "MILLISECOND" },
  { no: 6, name: "MICROSECOND" },
]);

/**
 * Auto-generated from StructureDefinition for decimal.
 * Primitive Type decimal.
 * See http://hl7.org/fhir/StructureDefinition/decimal
 *
 * @generated from message google.fhir.r4.core.Decimal
 */
export class Decimal extends Message<Decimal> {
  /**
   * Primitive value for decimal
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Decimal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Decimal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Decimal {
    return new Decimal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Decimal {
    return new Decimal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Decimal {
    return new Decimal().fromJsonString(jsonString, options);
  }

  static equals(a: Decimal | PlainMessage<Decimal> | undefined, b: Decimal | PlainMessage<Decimal> | undefined): boolean {
    return proto3.util.equals(Decimal, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Distance.
 * A length - a value with a unit that is a physical distance.
 * See http://hl7.org/fhir/StructureDefinition/Distance
 *
 * @generated from message google.fhir.r4.core.Distance
 */
export class Distance extends Message<Distance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Distance.ComparatorCode comparator = 4;
   */
  comparator?: Distance_ComparatorCode;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<Distance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Distance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "comparator", kind: "message", T: Distance_ComparatorCode },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Distance {
    return new Distance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Distance {
    return new Distance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Distance {
    return new Distance().fromJsonString(jsonString, options);
  }

  static equals(a: Distance | PlainMessage<Distance> | undefined, b: Distance | PlainMessage<Distance> | undefined): boolean {
    return proto3.util.equals(Distance, a, b);
  }
}

/**
 * < | <= | >= | > - how to understand the value
 *
 * @generated from message google.fhir.r4.core.Distance.ComparatorCode
 */
export class Distance_ComparatorCode extends Message<Distance_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuantityComparatorCode.Value value = 1;
   */
  value = QuantityComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Distance_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Distance.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuantityComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Distance_ComparatorCode {
    return new Distance_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Distance_ComparatorCode {
    return new Distance_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Distance_ComparatorCode {
    return new Distance_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: Distance_ComparatorCode | PlainMessage<Distance_ComparatorCode> | undefined, b: Distance_ComparatorCode | PlainMessage<Distance_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(Distance_ComparatorCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Dosage.
 * How the medication is/was taken or should be taken.
 * See http://hl7.org/fhir/StructureDefinition/Dosage
 *
 * @generated from message google.fhir.r4.core.Dosage
 */
export class Dosage extends Message<Dosage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The order of the dosage instructions
   *
   * @generated from field: google.fhir.r4.core.Integer sequence = 4;
   */
  sequence?: Integer;

  /**
   * Free text dosage instructions e.g. SIG
   *
   * @generated from field: google.fhir.r4.core.String text = 5;
   */
  text?: String;

  /**
   * Supplemental instruction or warnings to the patient - e.g. "with meals",
   * "may cause drowsiness"
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept additional_instruction = 6;
   */
  additionalInstruction: CodeableConcept[] = [];

  /**
   * Patient or consumer oriented instructions
   *
   * @generated from field: google.fhir.r4.core.String patient_instruction = 7;
   */
  patientInstruction?: String;

  /**
   * When medication should be administered
   *
   * @generated from field: google.fhir.r4.core.Timing timing = 8;
   */
  timing?: Timing;

  /**
   * @generated from field: google.fhir.r4.core.Dosage.AsNeededX as_needed = 9;
   */
  asNeeded?: Dosage_AsNeededX;

  /**
   * Body site to administer to
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept site = 10;
   */
  site?: CodeableConcept;

  /**
   * How drug should enter body
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept route = 11;
   */
  route?: CodeableConcept;

  /**
   * Technique for administering medication
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 12;
   */
  method?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.Dosage.DoseAndRate dose_and_rate = 13;
   */
  doseAndRate: Dosage_DoseAndRate[] = [];

  /**
   * Upper limit on medication per unit of time
   *
   * @generated from field: google.fhir.r4.core.Ratio max_dose_per_period = 14;
   */
  maxDosePerPeriod?: Ratio;

  /**
   * Upper limit on medication per administration
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity max_dose_per_administration = 15;
   */
  maxDosePerAdministration?: SimpleQuantity;

  /**
   * Upper limit on medication per lifetime of the patient
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity max_dose_per_lifetime = 16;
   */
  maxDosePerLifetime?: SimpleQuantity;

  constructor(data?: PartialMessage<Dosage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Dosage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: Integer },
    { no: 5, name: "text", kind: "message", T: String },
    { no: 6, name: "additional_instruction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "patient_instruction", kind: "message", T: String },
    { no: 8, name: "timing", kind: "message", T: Timing },
    { no: 9, name: "as_needed", kind: "message", T: Dosage_AsNeededX },
    { no: 10, name: "site", kind: "message", T: CodeableConcept },
    { no: 11, name: "route", kind: "message", T: CodeableConcept },
    { no: 12, name: "method", kind: "message", T: CodeableConcept },
    { no: 13, name: "dose_and_rate", kind: "message", T: Dosage_DoseAndRate, repeated: true },
    { no: 14, name: "max_dose_per_period", kind: "message", T: Ratio },
    { no: 15, name: "max_dose_per_administration", kind: "message", T: SimpleQuantity },
    { no: 16, name: "max_dose_per_lifetime", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dosage {
    return new Dosage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dosage {
    return new Dosage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dosage {
    return new Dosage().fromJsonString(jsonString, options);
  }

  static equals(a: Dosage | PlainMessage<Dosage> | undefined, b: Dosage | PlainMessage<Dosage> | undefined): boolean {
    return proto3.util.equals(Dosage, a, b);
  }
}

/**
 * Take "as needed" (for x)
 *
 * @generated from message google.fhir.r4.core.Dosage.AsNeededX
 */
export class Dosage_AsNeededX extends Message<Dosage_AsNeededX> {
  /**
   * @generated from oneof google.fhir.r4.core.Dosage.AsNeededX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Dosage_AsNeededX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Dosage.AsNeededX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dosage_AsNeededX {
    return new Dosage_AsNeededX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dosage_AsNeededX {
    return new Dosage_AsNeededX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dosage_AsNeededX {
    return new Dosage_AsNeededX().fromJsonString(jsonString, options);
  }

  static equals(a: Dosage_AsNeededX | PlainMessage<Dosage_AsNeededX> | undefined, b: Dosage_AsNeededX | PlainMessage<Dosage_AsNeededX> | undefined): boolean {
    return proto3.util.equals(Dosage_AsNeededX, a, b);
  }
}

/**
 * Amount of medication administered
 *
 * @generated from message google.fhir.r4.core.Dosage.DoseAndRate
 */
export class Dosage_DoseAndRate extends Message<Dosage_DoseAndRate> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * The kind of dose or rate specified
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 3;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Dosage.DoseAndRate.DoseX dose = 4;
   */
  dose?: Dosage_DoseAndRate_DoseX;

  /**
   * @generated from field: google.fhir.r4.core.Dosage.DoseAndRate.RateX rate = 5;
   */
  rate?: Dosage_DoseAndRate_RateX;

  constructor(data?: PartialMessage<Dosage_DoseAndRate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Dosage.DoseAndRate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: CodeableConcept },
    { no: 4, name: "dose", kind: "message", T: Dosage_DoseAndRate_DoseX },
    { no: 5, name: "rate", kind: "message", T: Dosage_DoseAndRate_RateX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dosage_DoseAndRate {
    return new Dosage_DoseAndRate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dosage_DoseAndRate {
    return new Dosage_DoseAndRate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dosage_DoseAndRate {
    return new Dosage_DoseAndRate().fromJsonString(jsonString, options);
  }

  static equals(a: Dosage_DoseAndRate | PlainMessage<Dosage_DoseAndRate> | undefined, b: Dosage_DoseAndRate | PlainMessage<Dosage_DoseAndRate> | undefined): boolean {
    return proto3.util.equals(Dosage_DoseAndRate, a, b);
  }
}

/**
 * Amount of medication per dose
 *
 * @generated from message google.fhir.r4.core.Dosage.DoseAndRate.DoseX
 */
export class Dosage_DoseAndRate_DoseX extends Message<Dosage_DoseAndRate_DoseX> {
  /**
   * @generated from oneof google.fhir.r4.core.Dosage.DoseAndRate.DoseX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 1;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 2;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Dosage_DoseAndRate_DoseX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Dosage.DoseAndRate.DoseX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 2, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dosage_DoseAndRate_DoseX {
    return new Dosage_DoseAndRate_DoseX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dosage_DoseAndRate_DoseX {
    return new Dosage_DoseAndRate_DoseX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dosage_DoseAndRate_DoseX {
    return new Dosage_DoseAndRate_DoseX().fromJsonString(jsonString, options);
  }

  static equals(a: Dosage_DoseAndRate_DoseX | PlainMessage<Dosage_DoseAndRate_DoseX> | undefined, b: Dosage_DoseAndRate_DoseX | PlainMessage<Dosage_DoseAndRate_DoseX> | undefined): boolean {
    return proto3.util.equals(Dosage_DoseAndRate_DoseX, a, b);
  }
}

/**
 * Amount of medication per unit of time
 *
 * @generated from message google.fhir.r4.core.Dosage.DoseAndRate.RateX
 */
export class Dosage_DoseAndRate_RateX extends Message<Dosage_DoseAndRate_RateX> {
  /**
   * @generated from oneof google.fhir.r4.core.Dosage.DoseAndRate.RateX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 1;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 3;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Dosage_DoseAndRate_RateX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Dosage.DoseAndRate.RateX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 3, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dosage_DoseAndRate_RateX {
    return new Dosage_DoseAndRate_RateX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dosage_DoseAndRate_RateX {
    return new Dosage_DoseAndRate_RateX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dosage_DoseAndRate_RateX {
    return new Dosage_DoseAndRate_RateX().fromJsonString(jsonString, options);
  }

  static equals(a: Dosage_DoseAndRate_RateX | PlainMessage<Dosage_DoseAndRate_RateX> | undefined, b: Dosage_DoseAndRate_RateX | PlainMessage<Dosage_DoseAndRate_RateX> | undefined): boolean {
    return proto3.util.equals(Dosage_DoseAndRate_RateX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Duration.
 * A length of time.
 * See http://hl7.org/fhir/StructureDefinition/Duration
 *
 * @generated from message google.fhir.r4.core.Duration
 */
export class Duration extends Message<Duration> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Duration.ComparatorCode comparator = 4;
   */
  comparator?: Duration_ComparatorCode;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<Duration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Duration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "comparator", kind: "message", T: Duration_ComparatorCode },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Duration {
    return new Duration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Duration {
    return new Duration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Duration {
    return new Duration().fromJsonString(jsonString, options);
  }

  static equals(a: Duration | PlainMessage<Duration> | undefined, b: Duration | PlainMessage<Duration> | undefined): boolean {
    return proto3.util.equals(Duration, a, b);
  }
}

/**
 * < | <= | >= | > - how to understand the value
 *
 * @generated from message google.fhir.r4.core.Duration.ComparatorCode
 */
export class Duration_ComparatorCode extends Message<Duration_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuantityComparatorCode.Value value = 1;
   */
  value = QuantityComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Duration_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Duration.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuantityComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Duration_ComparatorCode {
    return new Duration_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Duration_ComparatorCode {
    return new Duration_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Duration_ComparatorCode {
    return new Duration_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: Duration_ComparatorCode | PlainMessage<Duration_ComparatorCode> | undefined, b: Duration_ComparatorCode | PlainMessage<Duration_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(Duration_ComparatorCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Element.
 * Base for all elements.
 * See http://hl7.org/fhir/StructureDefinition/Element
 *
 * @generated from message google.fhir.r4.core.Element
 */
export class Element extends Message<Element> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Element>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Element";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Element {
    return new Element().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Element {
    return new Element().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Element {
    return new Element().fromJsonString(jsonString, options);
  }

  static equals(a: Element | PlainMessage<Element> | undefined, b: Element | PlainMessage<Element> | undefined): boolean {
    return proto3.util.equals(Element, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ElementDefinition.
 * Definition of an element in a resource or extension.
 * See http://hl7.org/fhir/StructureDefinition/ElementDefinition
 *
 * @generated from message google.fhir.r4.core.ElementDefinition
 */
export class ElementDefinition extends Message<ElementDefinition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Path of the element in the hierarchy of elements
   *
   * @generated from field: google.fhir.r4.core.String path = 4;
   */
  path?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.RepresentationCode representation = 5;
   */
  representation: ElementDefinition_RepresentationCode[] = [];

  /**
   * Name for this particular element (in a set of slices)
   *
   * @generated from field: google.fhir.r4.core.String slice_name = 6;
   */
  sliceName?: String;

  /**
   * If this slice definition constrains an inherited slice definition (or not)
   *
   * @generated from field: google.fhir.r4.core.Boolean slice_is_constraining = 7;
   */
  sliceIsConstraining?: Boolean;

  /**
   * Name for element to display with or prompt for element
   *
   * @generated from field: google.fhir.r4.core.String label = 8;
   */
  label?: String;

  /**
   * Corresponding codes in terminologies
   *
   * @generated from field: repeated google.fhir.r4.core.Coding code = 9;
   */
  code: Coding[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Slicing slicing = 10;
   */
  slicing?: ElementDefinition_Slicing;

  /**
   * Concise definition for space-constrained presentation
   *
   * @generated from field: google.fhir.r4.core.String short = 11;
   */
  short?: String;

  /**
   * Full formal definition as narrative text
   *
   * @generated from field: google.fhir.r4.core.Markdown definition = 12;
   */
  definition?: Markdown;

  /**
   * Comments about the use of this element
   *
   * @generated from field: google.fhir.r4.core.Markdown comment = 13;
   */
  comment?: Markdown;

  /**
   * Why this resource has been created
   *
   * @generated from field: google.fhir.r4.core.Markdown requirements = 14;
   */
  requirements?: Markdown;

  /**
   * Other names
   *
   * @generated from field: repeated google.fhir.r4.core.String alias = 15;
   */
  alias: String[] = [];

  /**
   * Minimum Cardinality
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt min = 16;
   */
  min?: UnsignedInt;

  /**
   * Maximum Cardinality (a number or *)
   *
   * @generated from field: google.fhir.r4.core.String max = 17;
   */
  max?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Base base = 18;
   */
  base?: ElementDefinition_Base;

  /**
   * Reference to definition of content for the element
   *
   * @generated from field: google.fhir.r4.core.Uri content_reference = 19;
   */
  contentReference?: Uri;

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.TypeRef type = 20;
   */
  type: ElementDefinition_TypeRef[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.DefaultValueX default_value = 21;
   */
  defaultValue?: ElementDefinition_DefaultValueX;

  /**
   * Implicit meaning when this element is missing
   *
   * @generated from field: google.fhir.r4.core.Markdown meaning_when_missing = 22;
   */
  meaningWhenMissing?: Markdown;

  /**
   * What the order of the elements means
   *
   * @generated from field: google.fhir.r4.core.String order_meaning = 23;
   */
  orderMeaning?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.FixedX fixed = 24;
   */
  fixed?: ElementDefinition_FixedX;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.PatternX pattern = 25;
   */
  pattern?: ElementDefinition_PatternX;

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.Example example = 26;
   */
  example: ElementDefinition_Example[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.MinValueX min_value = 27;
   */
  minValue?: ElementDefinition_MinValueX;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.MaxValueX max_value = 28;
   */
  maxValue?: ElementDefinition_MaxValueX;

  /**
   * Max length for strings
   *
   * @generated from field: google.fhir.r4.core.Integer max_length = 29;
   */
  maxLength?: Integer;

  /**
   * Reference to invariant about presence
   *
   * @generated from field: repeated google.fhir.r4.core.Id condition = 30;
   */
  condition: Id[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.Constraint constraint = 31;
   */
  constraint: ElementDefinition_Constraint[] = [];

  /**
   * If the element must be supported
   *
   * @generated from field: google.fhir.r4.core.Boolean must_support = 32;
   */
  mustSupport?: Boolean;

  /**
   * If this modifies the meaning of other elements
   *
   * @generated from field: google.fhir.r4.core.Boolean is_modifier = 33;
   */
  isModifier?: Boolean;

  /**
   * Reason that this element is marked as a modifier
   *
   * @generated from field: google.fhir.r4.core.String is_modifier_reason = 34;
   */
  isModifierReason?: String;

  /**
   * Include when _summary = true?
   *
   * @generated from field: google.fhir.r4.core.Boolean is_summary = 35;
   */
  isSummary?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.ElementDefinitionBinding binding = 36;
   */
  binding?: ElementDefinition_ElementDefinitionBinding;

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.Mapping mapping = 37;
   */
  mapping: ElementDefinition_Mapping[] = [];

  constructor(data?: PartialMessage<ElementDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "path", kind: "message", T: String },
    { no: 5, name: "representation", kind: "message", T: ElementDefinition_RepresentationCode, repeated: true },
    { no: 6, name: "slice_name", kind: "message", T: String },
    { no: 7, name: "slice_is_constraining", kind: "message", T: Boolean },
    { no: 8, name: "label", kind: "message", T: String },
    { no: 9, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 10, name: "slicing", kind: "message", T: ElementDefinition_Slicing },
    { no: 11, name: "short", kind: "message", T: String },
    { no: 12, name: "definition", kind: "message", T: Markdown },
    { no: 13, name: "comment", kind: "message", T: Markdown },
    { no: 14, name: "requirements", kind: "message", T: Markdown },
    { no: 15, name: "alias", kind: "message", T: String, repeated: true },
    { no: 16, name: "min", kind: "message", T: UnsignedInt },
    { no: 17, name: "max", kind: "message", T: String },
    { no: 18, name: "base", kind: "message", T: ElementDefinition_Base },
    { no: 19, name: "content_reference", kind: "message", T: Uri },
    { no: 20, name: "type", kind: "message", T: ElementDefinition_TypeRef, repeated: true },
    { no: 21, name: "default_value", kind: "message", T: ElementDefinition_DefaultValueX },
    { no: 22, name: "meaning_when_missing", kind: "message", T: Markdown },
    { no: 23, name: "order_meaning", kind: "message", T: String },
    { no: 24, name: "fixed", kind: "message", T: ElementDefinition_FixedX },
    { no: 25, name: "pattern", kind: "message", T: ElementDefinition_PatternX },
    { no: 26, name: "example", kind: "message", T: ElementDefinition_Example, repeated: true },
    { no: 27, name: "min_value", kind: "message", T: ElementDefinition_MinValueX },
    { no: 28, name: "max_value", kind: "message", T: ElementDefinition_MaxValueX },
    { no: 29, name: "max_length", kind: "message", T: Integer },
    { no: 30, name: "condition", kind: "message", T: Id, repeated: true },
    { no: 31, name: "constraint", kind: "message", T: ElementDefinition_Constraint, repeated: true },
    { no: 32, name: "must_support", kind: "message", T: Boolean },
    { no: 33, name: "is_modifier", kind: "message", T: Boolean },
    { no: 34, name: "is_modifier_reason", kind: "message", T: String },
    { no: 35, name: "is_summary", kind: "message", T: Boolean },
    { no: 36, name: "binding", kind: "message", T: ElementDefinition_ElementDefinitionBinding },
    { no: 37, name: "mapping", kind: "message", T: ElementDefinition_Mapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition {
    return new ElementDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition {
    return new ElementDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition {
    return new ElementDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition | PlainMessage<ElementDefinition> | undefined, b: ElementDefinition | PlainMessage<ElementDefinition> | undefined): boolean {
    return proto3.util.equals(ElementDefinition, a, b);
  }
}

/**
 * xmlAttr | xmlText | typeAttr | cdaText | xhtml
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.RepresentationCode
 */
export class ElementDefinition_RepresentationCode extends Message<ElementDefinition_RepresentationCode> {
  /**
   * @generated from field: google.fhir.r4.core.PropertyRepresentationCode.Value value = 1;
   */
  value = PropertyRepresentationCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_RepresentationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.RepresentationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PropertyRepresentationCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_RepresentationCode {
    return new ElementDefinition_RepresentationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_RepresentationCode {
    return new ElementDefinition_RepresentationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_RepresentationCode {
    return new ElementDefinition_RepresentationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_RepresentationCode | PlainMessage<ElementDefinition_RepresentationCode> | undefined, b: ElementDefinition_RepresentationCode | PlainMessage<ElementDefinition_RepresentationCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_RepresentationCode, a, b);
  }
}

/**
 * This element is sliced - slices follow
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Slicing
 */
export class ElementDefinition_Slicing extends Message<ElementDefinition_Slicing> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.Slicing.Discriminator discriminator = 3;
   */
  discriminator: ElementDefinition_Slicing_Discriminator[] = [];

  /**
   * Text description of how slicing works (or not)
   *
   * @generated from field: google.fhir.r4.core.String description = 4;
   */
  description?: String;

  /**
   * If elements must be in same order as slices
   *
   * @generated from field: google.fhir.r4.core.Boolean ordered = 5;
   */
  ordered?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Slicing.RulesCode rules = 6;
   */
  rules?: ElementDefinition_Slicing_RulesCode;

  constructor(data?: PartialMessage<ElementDefinition_Slicing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Slicing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "discriminator", kind: "message", T: ElementDefinition_Slicing_Discriminator, repeated: true },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "ordered", kind: "message", T: Boolean },
    { no: 6, name: "rules", kind: "message", T: ElementDefinition_Slicing_RulesCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Slicing {
    return new ElementDefinition_Slicing().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing {
    return new ElementDefinition_Slicing().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing {
    return new ElementDefinition_Slicing().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Slicing | PlainMessage<ElementDefinition_Slicing> | undefined, b: ElementDefinition_Slicing | PlainMessage<ElementDefinition_Slicing> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Slicing, a, b);
  }
}

/**
 * Element values that are used to distinguish the slices
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Slicing.Discriminator
 */
export class ElementDefinition_Slicing_Discriminator extends Message<ElementDefinition_Slicing_Discriminator> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Slicing.Discriminator.TypeCode type = 3;
   */
  type?: ElementDefinition_Slicing_Discriminator_TypeCode;

  /**
   * Path to element value
   *
   * @generated from field: google.fhir.r4.core.String path = 4;
   */
  path?: String;

  constructor(data?: PartialMessage<ElementDefinition_Slicing_Discriminator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Slicing.Discriminator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: ElementDefinition_Slicing_Discriminator_TypeCode },
    { no: 4, name: "path", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Slicing_Discriminator {
    return new ElementDefinition_Slicing_Discriminator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_Discriminator {
    return new ElementDefinition_Slicing_Discriminator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_Discriminator {
    return new ElementDefinition_Slicing_Discriminator().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Slicing_Discriminator | PlainMessage<ElementDefinition_Slicing_Discriminator> | undefined, b: ElementDefinition_Slicing_Discriminator | PlainMessage<ElementDefinition_Slicing_Discriminator> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Slicing_Discriminator, a, b);
  }
}

/**
 * value | exists | pattern | type | profile
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Slicing.Discriminator.TypeCode
 */
export class ElementDefinition_Slicing_Discriminator_TypeCode extends Message<ElementDefinition_Slicing_Discriminator_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.DiscriminatorTypeCode.Value value = 1;
   */
  value = DiscriminatorTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_Slicing_Discriminator_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Slicing.Discriminator.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DiscriminatorTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Slicing_Discriminator_TypeCode {
    return new ElementDefinition_Slicing_Discriminator_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_Discriminator_TypeCode {
    return new ElementDefinition_Slicing_Discriminator_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_Discriminator_TypeCode {
    return new ElementDefinition_Slicing_Discriminator_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Slicing_Discriminator_TypeCode | PlainMessage<ElementDefinition_Slicing_Discriminator_TypeCode> | undefined, b: ElementDefinition_Slicing_Discriminator_TypeCode | PlainMessage<ElementDefinition_Slicing_Discriminator_TypeCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Slicing_Discriminator_TypeCode, a, b);
  }
}

/**
 * closed | open | openAtEnd
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Slicing.RulesCode
 */
export class ElementDefinition_Slicing_RulesCode extends Message<ElementDefinition_Slicing_RulesCode> {
  /**
   * @generated from field: google.fhir.r4.core.SlicingRulesCode.Value value = 1;
   */
  value = SlicingRulesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_Slicing_RulesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Slicing.RulesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SlicingRulesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Slicing_RulesCode {
    return new ElementDefinition_Slicing_RulesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_RulesCode {
    return new ElementDefinition_Slicing_RulesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Slicing_RulesCode {
    return new ElementDefinition_Slicing_RulesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Slicing_RulesCode | PlainMessage<ElementDefinition_Slicing_RulesCode> | undefined, b: ElementDefinition_Slicing_RulesCode | PlainMessage<ElementDefinition_Slicing_RulesCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Slicing_RulesCode, a, b);
  }
}

/**
 * Base definition information for tools
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Base
 */
export class ElementDefinition_Base extends Message<ElementDefinition_Base> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Path that identifies the base element
   *
   * @generated from field: google.fhir.r4.core.String path = 3;
   */
  path?: String;

  /**
   * Min cardinality of the base element
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt min = 4;
   */
  min?: UnsignedInt;

  /**
   * Max cardinality of the base element
   *
   * @generated from field: google.fhir.r4.core.String max = 5;
   */
  max?: String;

  constructor(data?: PartialMessage<ElementDefinition_Base>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Base";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "path", kind: "message", T: String },
    { no: 4, name: "min", kind: "message", T: UnsignedInt },
    { no: 5, name: "max", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Base {
    return new ElementDefinition_Base().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Base {
    return new ElementDefinition_Base().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Base {
    return new ElementDefinition_Base().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Base | PlainMessage<ElementDefinition_Base> | undefined, b: ElementDefinition_Base | PlainMessage<ElementDefinition_Base> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Base, a, b);
  }
}

/**
 * Data type and Profile for this element
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.TypeRef
 */
export class ElementDefinition_TypeRef extends Message<ElementDefinition_TypeRef> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Data type or Resource (reference to definition)
   *
   * @generated from field: google.fhir.r4.core.Uri code = 3;
   */
  code?: Uri;

  /**
   * Profiles (StructureDefinition or IG) - one must apply
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical profile = 4;
   */
  profile: Canonical[] = [];

  /**
   * Profile (StructureDefinition or IG) on the Reference/canonical target -
   * one must apply
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical target_profile = 5;
   */
  targetProfile: Canonical[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ElementDefinition.TypeRef.AggregationCode aggregation = 6;
   */
  aggregation: ElementDefinition_TypeRef_AggregationCode[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.TypeRef.VersioningCode versioning = 7;
   */
  versioning?: ElementDefinition_TypeRef_VersioningCode;

  constructor(data?: PartialMessage<ElementDefinition_TypeRef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.TypeRef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "code", kind: "message", T: Uri },
    { no: 4, name: "profile", kind: "message", T: Canonical, repeated: true },
    { no: 5, name: "target_profile", kind: "message", T: Canonical, repeated: true },
    { no: 6, name: "aggregation", kind: "message", T: ElementDefinition_TypeRef_AggregationCode, repeated: true },
    { no: 7, name: "versioning", kind: "message", T: ElementDefinition_TypeRef_VersioningCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_TypeRef {
    return new ElementDefinition_TypeRef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef {
    return new ElementDefinition_TypeRef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef {
    return new ElementDefinition_TypeRef().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_TypeRef | PlainMessage<ElementDefinition_TypeRef> | undefined, b: ElementDefinition_TypeRef | PlainMessage<ElementDefinition_TypeRef> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_TypeRef, a, b);
  }
}

/**
 * contained | referenced | bundled - how aggregated
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.TypeRef.AggregationCode
 */
export class ElementDefinition_TypeRef_AggregationCode extends Message<ElementDefinition_TypeRef_AggregationCode> {
  /**
   * @generated from field: google.fhir.r4.core.AggregationModeCode.Value value = 1;
   */
  value = AggregationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_TypeRef_AggregationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.TypeRef.AggregationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AggregationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_TypeRef_AggregationCode {
    return new ElementDefinition_TypeRef_AggregationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef_AggregationCode {
    return new ElementDefinition_TypeRef_AggregationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef_AggregationCode {
    return new ElementDefinition_TypeRef_AggregationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_TypeRef_AggregationCode | PlainMessage<ElementDefinition_TypeRef_AggregationCode> | undefined, b: ElementDefinition_TypeRef_AggregationCode | PlainMessage<ElementDefinition_TypeRef_AggregationCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_TypeRef_AggregationCode, a, b);
  }
}

/**
 * either | independent | specific
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.TypeRef.VersioningCode
 */
export class ElementDefinition_TypeRef_VersioningCode extends Message<ElementDefinition_TypeRef_VersioningCode> {
  /**
   * @generated from field: google.fhir.r4.core.ReferenceVersionRulesCode.Value value = 1;
   */
  value = ReferenceVersionRulesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_TypeRef_VersioningCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.TypeRef.VersioningCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ReferenceVersionRulesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_TypeRef_VersioningCode {
    return new ElementDefinition_TypeRef_VersioningCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef_VersioningCode {
    return new ElementDefinition_TypeRef_VersioningCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_TypeRef_VersioningCode {
    return new ElementDefinition_TypeRef_VersioningCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_TypeRef_VersioningCode | PlainMessage<ElementDefinition_TypeRef_VersioningCode> | undefined, b: ElementDefinition_TypeRef_VersioningCode | PlainMessage<ElementDefinition_TypeRef_VersioningCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_TypeRef_VersioningCode, a, b);
  }
}

/**
 * Specified value if missing from instance
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.DefaultValueX
 */
export class ElementDefinition_DefaultValueX extends Message<ElementDefinition_DefaultValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinition.DefaultValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_DefaultValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.DefaultValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_DefaultValueX {
    return new ElementDefinition_DefaultValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_DefaultValueX {
    return new ElementDefinition_DefaultValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_DefaultValueX {
    return new ElementDefinition_DefaultValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_DefaultValueX | PlainMessage<ElementDefinition_DefaultValueX> | undefined, b: ElementDefinition_DefaultValueX | PlainMessage<ElementDefinition_DefaultValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_DefaultValueX, a, b);
  }
}

/**
 * Value must be exactly this
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.FixedX
 */
export class ElementDefinition_FixedX extends Message<ElementDefinition_FixedX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinition.FixedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_FixedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.FixedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_FixedX {
    return new ElementDefinition_FixedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_FixedX {
    return new ElementDefinition_FixedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_FixedX {
    return new ElementDefinition_FixedX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_FixedX | PlainMessage<ElementDefinition_FixedX> | undefined, b: ElementDefinition_FixedX | PlainMessage<ElementDefinition_FixedX> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_FixedX, a, b);
  }
}

/**
 * Value must have at least these property values
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.PatternX
 */
export class ElementDefinition_PatternX extends Message<ElementDefinition_PatternX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinition.PatternX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_PatternX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.PatternX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_PatternX {
    return new ElementDefinition_PatternX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_PatternX {
    return new ElementDefinition_PatternX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_PatternX {
    return new ElementDefinition_PatternX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_PatternX | PlainMessage<ElementDefinition_PatternX> | undefined, b: ElementDefinition_PatternX | PlainMessage<ElementDefinition_PatternX> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_PatternX, a, b);
  }
}

/**
 * Example value (as defined for type)
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Example
 */
export class ElementDefinition_Example extends Message<ElementDefinition_Example> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Describes the purpose of this example
   *
   * @generated from field: google.fhir.r4.core.String label = 3;
   */
  label?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Example.ValueX value = 4;
   */
  value?: ElementDefinition_Example_ValueX;

  constructor(data?: PartialMessage<ElementDefinition_Example>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Example";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "label", kind: "message", T: String },
    { no: 4, name: "value", kind: "message", T: ElementDefinition_Example_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Example {
    return new ElementDefinition_Example().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Example {
    return new ElementDefinition_Example().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Example {
    return new ElementDefinition_Example().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Example | PlainMessage<ElementDefinition_Example> | undefined, b: ElementDefinition_Example | PlainMessage<ElementDefinition_Example> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Example, a, b);
  }
}

/**
 * Value of Example (one of allowed types)
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Example.ValueX
 */
export class ElementDefinition_Example_ValueX extends Message<ElementDefinition_Example_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinition.Example.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_Example_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Example.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Example_ValueX {
    return new ElementDefinition_Example_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Example_ValueX {
    return new ElementDefinition_Example_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Example_ValueX {
    return new ElementDefinition_Example_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Example_ValueX | PlainMessage<ElementDefinition_Example_ValueX> | undefined, b: ElementDefinition_Example_ValueX | PlainMessage<ElementDefinition_Example_ValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Example_ValueX, a, b);
  }
}

/**
 * Minimum Allowed Value (for some types)
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.MinValueX
 */
export class ElementDefinition_MinValueX extends Message<ElementDefinition_MinValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinition.MinValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 3;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 4;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 7;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 8;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_MinValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.MinValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 3, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 4, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 7, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 8, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_MinValueX {
    return new ElementDefinition_MinValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_MinValueX {
    return new ElementDefinition_MinValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_MinValueX {
    return new ElementDefinition_MinValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_MinValueX | PlainMessage<ElementDefinition_MinValueX> | undefined, b: ElementDefinition_MinValueX | PlainMessage<ElementDefinition_MinValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_MinValueX, a, b);
  }
}

/**
 * Maximum Allowed Value (for some types)
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.MaxValueX
 */
export class ElementDefinition_MaxValueX extends Message<ElementDefinition_MaxValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ElementDefinition.MaxValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 3;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 4;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 6;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 7;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 8;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ElementDefinition_MaxValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.MaxValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 3, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 4, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 6, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 7, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 8, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_MaxValueX {
    return new ElementDefinition_MaxValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_MaxValueX {
    return new ElementDefinition_MaxValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_MaxValueX {
    return new ElementDefinition_MaxValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_MaxValueX | PlainMessage<ElementDefinition_MaxValueX> | undefined, b: ElementDefinition_MaxValueX | PlainMessage<ElementDefinition_MaxValueX> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_MaxValueX, a, b);
  }
}

/**
 * Condition that must evaluate to true
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Constraint
 */
export class ElementDefinition_Constraint extends Message<ElementDefinition_Constraint> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Target of 'condition' reference above
   *
   * @generated from field: google.fhir.r4.core.Id key = 3;
   */
  key?: Id;

  /**
   * Why this constraint is necessary or appropriate
   *
   * @generated from field: google.fhir.r4.core.String requirements = 4;
   */
  requirements?: String;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Constraint.SeverityCode severity = 5;
   */
  severity?: ElementDefinition_Constraint_SeverityCode;

  /**
   * Human description of constraint
   *
   * @generated from field: google.fhir.r4.core.String human = 6;
   */
  human?: String;

  /**
   * FHIRPath expression of constraint
   *
   * @generated from field: google.fhir.r4.core.String expression = 7;
   */
  expression?: String;

  /**
   * XPath expression of constraint
   *
   * @generated from field: google.fhir.r4.core.String xpath = 8;
   */
  xpath?: String;

  /**
   * Reference to original source of constraint
   *
   * @generated from field: google.fhir.r4.core.Canonical source = 9;
   */
  source?: Canonical;

  constructor(data?: PartialMessage<ElementDefinition_Constraint>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Constraint";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "key", kind: "message", T: Id },
    { no: 4, name: "requirements", kind: "message", T: String },
    { no: 5, name: "severity", kind: "message", T: ElementDefinition_Constraint_SeverityCode },
    { no: 6, name: "human", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
    { no: 8, name: "xpath", kind: "message", T: String },
    { no: 9, name: "source", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Constraint {
    return new ElementDefinition_Constraint().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Constraint {
    return new ElementDefinition_Constraint().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Constraint {
    return new ElementDefinition_Constraint().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Constraint | PlainMessage<ElementDefinition_Constraint> | undefined, b: ElementDefinition_Constraint | PlainMessage<ElementDefinition_Constraint> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Constraint, a, b);
  }
}

/**
 * error | warning
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Constraint.SeverityCode
 */
export class ElementDefinition_Constraint_SeverityCode extends Message<ElementDefinition_Constraint_SeverityCode> {
  /**
   * @generated from field: google.fhir.r4.core.ConstraintSeverityCode.Value value = 1;
   */
  value = ConstraintSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_Constraint_SeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Constraint.SeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ConstraintSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Constraint_SeverityCode {
    return new ElementDefinition_Constraint_SeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Constraint_SeverityCode {
    return new ElementDefinition_Constraint_SeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Constraint_SeverityCode {
    return new ElementDefinition_Constraint_SeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Constraint_SeverityCode | PlainMessage<ElementDefinition_Constraint_SeverityCode> | undefined, b: ElementDefinition_Constraint_SeverityCode | PlainMessage<ElementDefinition_Constraint_SeverityCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Constraint_SeverityCode, a, b);
  }
}

/**
 * ValueSet details if this is coded
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.ElementDefinitionBinding
 */
export class ElementDefinition_ElementDefinitionBinding extends Message<ElementDefinition_ElementDefinitionBinding> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.ElementDefinitionBinding.StrengthCode strength = 3;
   */
  strength?: ElementDefinition_ElementDefinitionBinding_StrengthCode;

  /**
   * Human explanation of the value set
   *
   * @generated from field: google.fhir.r4.core.String description = 4;
   */
  description?: String;

  /**
   * Source of value set
   *
   * @generated from field: google.fhir.r4.core.Canonical value_set = 5;
   */
  valueSet?: Canonical;

  constructor(data?: PartialMessage<ElementDefinition_ElementDefinitionBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.ElementDefinitionBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "strength", kind: "message", T: ElementDefinition_ElementDefinitionBinding_StrengthCode },
    { no: 4, name: "description", kind: "message", T: String },
    { no: 5, name: "value_set", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_ElementDefinitionBinding {
    return new ElementDefinition_ElementDefinitionBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding {
    return new ElementDefinition_ElementDefinitionBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding {
    return new ElementDefinition_ElementDefinitionBinding().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_ElementDefinitionBinding | PlainMessage<ElementDefinition_ElementDefinitionBinding> | undefined, b: ElementDefinition_ElementDefinitionBinding | PlainMessage<ElementDefinition_ElementDefinitionBinding> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_ElementDefinitionBinding, a, b);
  }
}

/**
 * required | extensible | preferred | example
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.ElementDefinitionBinding.StrengthCode
 */
export class ElementDefinition_ElementDefinitionBinding_StrengthCode extends Message<ElementDefinition_ElementDefinitionBinding_StrengthCode> {
  /**
   * @generated from field: google.fhir.r4.core.BindingStrengthCode.Value value = 1;
   */
  value = BindingStrengthCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ElementDefinition_ElementDefinitionBinding_StrengthCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.ElementDefinitionBinding.StrengthCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(BindingStrengthCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_ElementDefinitionBinding_StrengthCode {
    return new ElementDefinition_ElementDefinitionBinding_StrengthCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding_StrengthCode {
    return new ElementDefinition_ElementDefinitionBinding_StrengthCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_ElementDefinitionBinding_StrengthCode {
    return new ElementDefinition_ElementDefinitionBinding_StrengthCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_ElementDefinitionBinding_StrengthCode | PlainMessage<ElementDefinition_ElementDefinitionBinding_StrengthCode> | undefined, b: ElementDefinition_ElementDefinitionBinding_StrengthCode | PlainMessage<ElementDefinition_ElementDefinitionBinding_StrengthCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_ElementDefinitionBinding_StrengthCode, a, b);
  }
}

/**
 * Map element to another set of definitions
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Mapping
 */
export class ElementDefinition_Mapping extends Message<ElementDefinition_Mapping> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Reference to mapping declaration
   *
   * @generated from field: google.fhir.r4.core.Id identity = 3;
   */
  identity?: Id;

  /**
   * @generated from field: google.fhir.r4.core.ElementDefinition.Mapping.LanguageCode language = 4;
   */
  language?: ElementDefinition_Mapping_LanguageCode;

  /**
   * Details of the mapping
   *
   * @generated from field: google.fhir.r4.core.String map = 5;
   */
  map?: String;

  /**
   * Comments about the mapping or its use
   *
   * @generated from field: google.fhir.r4.core.String comment = 6;
   */
  comment?: String;

  constructor(data?: PartialMessage<ElementDefinition_Mapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Mapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "identity", kind: "message", T: Id },
    { no: 4, name: "language", kind: "message", T: ElementDefinition_Mapping_LanguageCode },
    { no: 5, name: "map", kind: "message", T: String },
    { no: 6, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Mapping {
    return new ElementDefinition_Mapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Mapping {
    return new ElementDefinition_Mapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Mapping {
    return new ElementDefinition_Mapping().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Mapping | PlainMessage<ElementDefinition_Mapping> | undefined, b: ElementDefinition_Mapping | PlainMessage<ElementDefinition_Mapping> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Mapping, a, b);
  }
}

/**
 * Computable language of mapping
 *
 * @generated from message google.fhir.r4.core.ElementDefinition.Mapping.LanguageCode
 */
export class ElementDefinition_Mapping_LanguageCode extends Message<ElementDefinition_Mapping_LanguageCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<ElementDefinition_Mapping_LanguageCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ElementDefinition.Mapping.LanguageCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ElementDefinition_Mapping_LanguageCode {
    return new ElementDefinition_Mapping_LanguageCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ElementDefinition_Mapping_LanguageCode {
    return new ElementDefinition_Mapping_LanguageCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ElementDefinition_Mapping_LanguageCode {
    return new ElementDefinition_Mapping_LanguageCode().fromJsonString(jsonString, options);
  }

  static equals(a: ElementDefinition_Mapping_LanguageCode | PlainMessage<ElementDefinition_Mapping_LanguageCode> | undefined, b: ElementDefinition_Mapping_LanguageCode | PlainMessage<ElementDefinition_Mapping_LanguageCode> | undefined): boolean {
    return proto3.util.equals(ElementDefinition_Mapping_LanguageCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Expression.
 * An expression that can be used to generate a value.
 * See http://hl7.org/fhir/StructureDefinition/Expression
 *
 * @generated from message google.fhir.r4.core.Expression
 */
export class Expression extends Message<Expression> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Natural language description of the condition
   *
   * @generated from field: google.fhir.r4.core.String description = 3;
   */
  description?: String;

  /**
   * Short name assigned to expression for reuse
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * text/cql | text/fhirpath | application/x-fhir-query | etc.
   *
   * @generated from field: google.fhir.r4.core.Code language = 5;
   */
  language?: Code;

  /**
   * Expression in specified language
   *
   * @generated from field: google.fhir.r4.core.String expression = 6;
   */
  expression?: String;

  /**
   * Where the expression is found
   *
   * @generated from field: google.fhir.r4.core.Uri reference = 7;
   */
  reference?: Uri;

  constructor(data?: PartialMessage<Expression>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Expression";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "description", kind: "message", T: String },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "language", kind: "message", T: Code },
    { no: 6, name: "expression", kind: "message", T: String },
    { no: 7, name: "reference", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Expression {
    return new Expression().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Expression {
    return new Expression().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Expression {
    return new Expression().fromJsonString(jsonString, options);
  }

  static equals(a: Expression | PlainMessage<Expression> | undefined, b: Expression | PlainMessage<Expression> | undefined): boolean {
    return proto3.util.equals(Expression, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Extension.
 * Optional Extensions Element.
 * See http://hl7.org/fhir/StructureDefinition/Extension
 *
 * @generated from message google.fhir.r4.core.Extension
 */
export class Extension extends Message<Extension> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * identifies the meaning of the extension
   *
   * @generated from field: google.fhir.r4.core.Uri url = 2;
   */
  url?: Uri;

  /**
   * @generated from field: google.fhir.r4.core.Extension.ValueX value = 4;
   */
  value?: Extension_ValueX;

  constructor(data?: PartialMessage<Extension>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Extension";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 2, name: "url", kind: "message", T: Uri },
    { no: 4, name: "value", kind: "message", T: Extension_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Extension {
    return new Extension().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Extension {
    return new Extension().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Extension {
    return new Extension().fromJsonString(jsonString, options);
  }

  static equals(a: Extension | PlainMessage<Extension> | undefined, b: Extension | PlainMessage<Extension> | undefined): boolean {
    return proto3.util.equals(Extension, a, b);
  }
}

/**
 * Value of extension
 *
 * @generated from message google.fhir.r4.core.Extension.ValueX
 */
export class Extension_ValueX extends Message<Extension_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.Extension.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Extension_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Extension.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Extension_ValueX {
    return new Extension_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Extension_ValueX {
    return new Extension_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Extension_ValueX {
    return new Extension_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: Extension_ValueX | PlainMessage<Extension_ValueX> | undefined, b: Extension_ValueX | PlainMessage<Extension_ValueX> | undefined): boolean {
    return proto3.util.equals(Extension_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for HumanName.
 * Name of a human - parts and usage.
 * See http://hl7.org/fhir/StructureDefinition/HumanName
 *
 * @generated from message google.fhir.r4.core.HumanName
 */
export class HumanName extends Message<HumanName> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.HumanName.UseCode use = 3;
   */
  use?: HumanName_UseCode;

  /**
   * Text representation of the full name
   *
   * @generated from field: google.fhir.r4.core.String text = 4;
   */
  text?: String;

  /**
   * Family name (often called 'Surname')
   *
   * @generated from field: google.fhir.r4.core.String family = 5;
   */
  family?: String;

  /**
   * Given names (not always 'first'). Includes middle names
   *
   * @generated from field: repeated google.fhir.r4.core.String given = 6;
   */
  given: String[] = [];

  /**
   * Parts that come before the name
   *
   * @generated from field: repeated google.fhir.r4.core.String prefix = 7;
   */
  prefix: String[] = [];

  /**
   * Parts that come after the name
   *
   * @generated from field: repeated google.fhir.r4.core.String suffix = 8;
   */
  suffix: String[] = [];

  /**
   * Time period when name was/is in use
   *
   * @generated from field: google.fhir.r4.core.Period period = 9;
   */
  period?: Period;

  constructor(data?: PartialMessage<HumanName>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanName";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "use", kind: "message", T: HumanName_UseCode },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "family", kind: "message", T: String },
    { no: 6, name: "given", kind: "message", T: String, repeated: true },
    { no: 7, name: "prefix", kind: "message", T: String, repeated: true },
    { no: 8, name: "suffix", kind: "message", T: String, repeated: true },
    { no: 9, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanName {
    return new HumanName().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanName {
    return new HumanName().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanName {
    return new HumanName().fromJsonString(jsonString, options);
  }

  static equals(a: HumanName | PlainMessage<HumanName> | undefined, b: HumanName | PlainMessage<HumanName> | undefined): boolean {
    return proto3.util.equals(HumanName, a, b);
  }
}

/**
 * usual | official | temp | nickname | anonymous | old | maiden
 *
 * @generated from message google.fhir.r4.core.HumanName.UseCode
 */
export class HumanName_UseCode extends Message<HumanName_UseCode> {
  /**
   * @generated from field: google.fhir.r4.core.NameUseCode.Value value = 1;
   */
  value = NameUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<HumanName_UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanName.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NameUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanName_UseCode {
    return new HumanName_UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanName_UseCode {
    return new HumanName_UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanName_UseCode {
    return new HumanName_UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanName_UseCode | PlainMessage<HumanName_UseCode> | undefined, b: HumanName_UseCode | PlainMessage<HumanName_UseCode> | undefined): boolean {
    return proto3.util.equals(HumanName_UseCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for id.
 * Primitive Type id.
 * See http://hl7.org/fhir/StructureDefinition/id
 *
 * @generated from message google.fhir.r4.core.Id
 */
export class Id extends Message<Id> {
  /**
   * Primitive value for id
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Id>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Id";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Id {
    return new Id().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Id {
    return new Id().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Id {
    return new Id().fromJsonString(jsonString, options);
  }

  static equals(a: Id | PlainMessage<Id> | undefined, b: Id | PlainMessage<Id> | undefined): boolean {
    return proto3.util.equals(Id, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Identifier.
 * An identifier intended for computation.
 * See http://hl7.org/fhir/StructureDefinition/Identifier
 *
 * @generated from message google.fhir.r4.core.Identifier
 */
export class Identifier extends Message<Identifier> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Identifier.UseCode use = 3;
   */
  use?: Identifier_UseCode;

  /**
   * Description of identifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * The namespace for the identifier value
   *
   * @generated from field: google.fhir.r4.core.Uri system = 5;
   */
  system?: Uri;

  /**
   * The value that is unique
   *
   * @generated from field: google.fhir.r4.core.String value = 6;
   */
  value?: String;

  /**
   * Time period when id is/was valid for use
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;

  /**
   * Organization that issued id (may be just text)
   *
   * @generated from field: google.fhir.r4.core.Reference assigner = 8;
   */
  assigner?: Reference;

  constructor(data?: PartialMessage<Identifier>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Identifier";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "use", kind: "message", T: Identifier_UseCode },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "system", kind: "message", T: Uri },
    { no: 6, name: "value", kind: "message", T: String },
    { no: 7, name: "period", kind: "message", T: Period },
    { no: 8, name: "assigner", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Identifier {
    return new Identifier().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Identifier {
    return new Identifier().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Identifier {
    return new Identifier().fromJsonString(jsonString, options);
  }

  static equals(a: Identifier | PlainMessage<Identifier> | undefined, b: Identifier | PlainMessage<Identifier> | undefined): boolean {
    return proto3.util.equals(Identifier, a, b);
  }
}

/**
 * usual | official | temp | secondary | old (If known)
 *
 * @generated from message google.fhir.r4.core.Identifier.UseCode
 */
export class Identifier_UseCode extends Message<Identifier_UseCode> {
  /**
   * @generated from field: google.fhir.r4.core.IdentifierUseCode.Value value = 1;
   */
  value = IdentifierUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Identifier_UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Identifier.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(IdentifierUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Identifier_UseCode {
    return new Identifier_UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Identifier_UseCode {
    return new Identifier_UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Identifier_UseCode {
    return new Identifier_UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: Identifier_UseCode | PlainMessage<Identifier_UseCode> | undefined, b: Identifier_UseCode | PlainMessage<Identifier_UseCode> | undefined): boolean {
    return proto3.util.equals(Identifier_UseCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for instant.
 * Primitive Type instant.
 * See http://hl7.org/fhir/StructureDefinition/instant
 *
 * @generated from message google.fhir.r4.core.Instant
 */
export class Instant extends Message<Instant> {
  /**
   * The absolute time of the event as a Unix epoch in mircoseconds.
   *
   * @generated from field: int64 value_us = 1;
   */
  valueUs = protoInt64.zero;

  /**
   * The local timezone in which the event was recorded.
   *
   * @generated from field: string timezone = 2;
   */
  timezone = "";

  /**
   * @generated from field: google.fhir.r4.core.Instant.Precision precision = 3;
   */
  precision = Instant_Precision.PRECISION_UNSPECIFIED;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 4;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 5;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Instant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Instant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value_us", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "precision", kind: "enum", T: proto3.getEnumType(Instant_Precision) },
    { no: 4, name: "id", kind: "message", T: String },
    { no: 5, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Instant {
    return new Instant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Instant {
    return new Instant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Instant {
    return new Instant().fromJsonString(jsonString, options);
  }

  static equals(a: Instant | PlainMessage<Instant> | undefined, b: Instant | PlainMessage<Instant> | undefined): boolean {
    return proto3.util.equals(Instant, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.Instant.Precision
 */
export enum Instant_Precision {
  /**
   * @generated from enum value: PRECISION_UNSPECIFIED = 0;
   */
  PRECISION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SECOND = 1;
   */
  SECOND = 1,

  /**
   * @generated from enum value: MILLISECOND = 2;
   */
  MILLISECOND = 2,

  /**
   * @generated from enum value: MICROSECOND = 3;
   */
  MICROSECOND = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(Instant_Precision)
proto3.util.setEnumType(Instant_Precision, "google.fhir.r4.core.Instant.Precision", [
  { no: 0, name: "PRECISION_UNSPECIFIED" },
  { no: 1, name: "SECOND" },
  { no: 2, name: "MILLISECOND" },
  { no: 3, name: "MICROSECOND" },
]);

/**
 * Auto-generated from StructureDefinition for integer.
 * Primitive Type integer.
 * See http://hl7.org/fhir/StructureDefinition/integer
 *
 * @generated from message google.fhir.r4.core.Integer
 */
export class Integer extends Message<Integer> {
  /**
   * Primitive value for integer
   *
   * @generated from field: sint32 value = 1;
   */
  value = 0;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Integer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Integer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 17 /* ScalarType.SINT32 */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Integer {
    return new Integer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Integer {
    return new Integer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Integer {
    return new Integer().fromJsonString(jsonString, options);
  }

  static equals(a: Integer | PlainMessage<Integer> | undefined, b: Integer | PlainMessage<Integer> | undefined): boolean {
    return proto3.util.equals(Integer, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for markdown.
 * Primitive Type markdown.
 * See http://hl7.org/fhir/StructureDefinition/markdown
 *
 * @generated from message google.fhir.r4.core.Markdown
 */
export class Markdown extends Message<Markdown> {
  /**
   * Primitive value for markdown
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Markdown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Markdown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Markdown {
    return new Markdown().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Markdown {
    return new Markdown().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Markdown {
    return new Markdown().fromJsonString(jsonString, options);
  }

  static equals(a: Markdown | PlainMessage<Markdown> | undefined, b: Markdown | PlainMessage<Markdown> | undefined): boolean {
    return proto3.util.equals(Markdown, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MarketingStatus.
 * The marketing status describes the date when a medicinal product is actually
 * put on the market or the date as of which it is no longer available. See
 * http://hl7.org/fhir/StructureDefinition/MarketingStatus
 *
 * @generated from message google.fhir.r4.core.MarketingStatus
 */
export class MarketingStatus extends Message<MarketingStatus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The country in which the marketing authorisation has been granted shall be
   * specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code
   * elements
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept country = 4;
   */
  country?: CodeableConcept;

  /**
   * Where a Medicines Regulatory Agency has granted a marketing authorisation
   * for which specific provisions within a jurisdiction apply, the jurisdiction
   * can be specified using an appropriate controlled terminology The controlled
   * term and the controlled term identifier shall be specified
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept jurisdiction = 5;
   */
  jurisdiction?: CodeableConcept;

  /**
   * This attribute provides information on the status of the marketing of the
   * medicinal product See ISO/TS 20443 for more information and examples
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status = 6;
   */
  status?: CodeableConcept;

  /**
   * The date when the Medicinal Product is placed on the market by the
   * Marketing Authorisation Holder (or where applicable, the
   * manufacturer/distributor) in a country and/or jurisdiction shall be
   * provided A complete date consisting of day, month and year shall be
   * specified using the ISO 8601 date format NOTE “Placed on the market” refers
   * to the release of the Medicinal Product into the distribution chain
   *
   * @generated from field: google.fhir.r4.core.Period date_range = 7;
   */
  dateRange?: Period;

  /**
   * The date when the Medicinal Product is placed on the market by the
   * Marketing Authorisation Holder (or where applicable, the
   * manufacturer/distributor) in a country and/or jurisdiction shall be
   * provided A complete date consisting of day, month and year shall be
   * specified using the ISO 8601 date format NOTE “Placed on the market” refers
   * to the release of the Medicinal Product into the distribution chain
   *
   * @generated from field: google.fhir.r4.core.DateTime restore_date = 8;
   */
  restoreDate?: DateTime;

  constructor(data?: PartialMessage<MarketingStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MarketingStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "country", kind: "message", T: CodeableConcept },
    { no: 5, name: "jurisdiction", kind: "message", T: CodeableConcept },
    { no: 6, name: "status", kind: "message", T: CodeableConcept },
    { no: 7, name: "date_range", kind: "message", T: Period },
    { no: 8, name: "restore_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MarketingStatus {
    return new MarketingStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MarketingStatus {
    return new MarketingStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MarketingStatus {
    return new MarketingStatus().fromJsonString(jsonString, options);
  }

  static equals(a: MarketingStatus | PlainMessage<MarketingStatus> | undefined, b: MarketingStatus | PlainMessage<MarketingStatus> | undefined): boolean {
    return proto3.util.equals(MarketingStatus, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Meta.
 * Metadata about a resource.
 * See http://hl7.org/fhir/StructureDefinition/Meta
 *
 * @generated from message google.fhir.r4.core.Meta
 */
export class Meta extends Message<Meta> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Version specific identifier
   *
   * @generated from field: google.fhir.r4.core.Id version_id = 3;
   */
  versionId?: Id;

  /**
   * When the resource version last changed
   *
   * @generated from field: google.fhir.r4.core.Instant last_updated = 4;
   */
  lastUpdated?: Instant;

  /**
   * Identifies where the resource comes from
   *
   * @generated from field: google.fhir.r4.core.Uri source = 5;
   */
  source?: Uri;

  /**
   * Profiles this resource claims to conform to
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical profile = 6;
   */
  profile: Canonical[] = [];

  /**
   * Security Labels applied to this resource
   *
   * @generated from field: repeated google.fhir.r4.core.Coding security = 7;
   */
  security: Coding[] = [];

  /**
   * Tags applied to this resource
   *
   * @generated from field: repeated google.fhir.r4.core.Coding tag = 8;
   */
  tag: Coding[] = [];

  constructor(data?: PartialMessage<Meta>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Meta";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "version_id", kind: "message", T: Id },
    { no: 4, name: "last_updated", kind: "message", T: Instant },
    { no: 5, name: "source", kind: "message", T: Uri },
    { no: 6, name: "profile", kind: "message", T: Canonical, repeated: true },
    { no: 7, name: "security", kind: "message", T: Coding, repeated: true },
    { no: 8, name: "tag", kind: "message", T: Coding, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Meta {
    return new Meta().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Meta {
    return new Meta().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Meta {
    return new Meta().fromJsonString(jsonString, options);
  }

  static equals(a: Meta | PlainMessage<Meta> | undefined, b: Meta | PlainMessage<Meta> | undefined): boolean {
    return proto3.util.equals(Meta, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Money.
 * An amount of economic utility in some recognized currency.
 * See http://hl7.org/fhir/StructureDefinition/Money
 *
 * @generated from message google.fhir.r4.core.Money
 */
export class Money extends Message<Money> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Money.CurrencyCode currency = 4;
   */
  currency?: Money_CurrencyCode;

  constructor(data?: PartialMessage<Money>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Money";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "currency", kind: "message", T: Money_CurrencyCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Money {
    return new Money().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Money {
    return new Money().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Money {
    return new Money().fromJsonString(jsonString, options);
  }

  static equals(a: Money | PlainMessage<Money> | undefined, b: Money | PlainMessage<Money> | undefined): boolean {
    return proto3.util.equals(Money, a, b);
  }
}

/**
 * ISO 4217 Currency Code
 *
 * @generated from message google.fhir.r4.core.Money.CurrencyCode
 */
export class Money_CurrencyCode extends Message<Money_CurrencyCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<Money_CurrencyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Money.CurrencyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Money_CurrencyCode {
    return new Money_CurrencyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Money_CurrencyCode {
    return new Money_CurrencyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Money_CurrencyCode {
    return new Money_CurrencyCode().fromJsonString(jsonString, options);
  }

  static equals(a: Money_CurrencyCode | PlainMessage<Money_CurrencyCode> | undefined, b: Money_CurrencyCode | PlainMessage<Money_CurrencyCode> | undefined): boolean {
    return proto3.util.equals(Money_CurrencyCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for MoneyQuantity.
 * An amount of money. With regard to precision, see [Decimal
 * Precision](datatypes.html#precision). See
 * http://hl7.org/fhir/StructureDefinition/MoneyQuantity
 *
 * @generated from message google.fhir.r4.core.MoneyQuantity
 */
export class MoneyQuantity extends Message<MoneyQuantity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.MoneyQuantity.ComparatorCode comparator = 4;
   */
  comparator?: MoneyQuantity_ComparatorCode;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<MoneyQuantity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MoneyQuantity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "comparator", kind: "message", T: MoneyQuantity_ComparatorCode },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoneyQuantity {
    return new MoneyQuantity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoneyQuantity {
    return new MoneyQuantity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoneyQuantity {
    return new MoneyQuantity().fromJsonString(jsonString, options);
  }

  static equals(a: MoneyQuantity | PlainMessage<MoneyQuantity> | undefined, b: MoneyQuantity | PlainMessage<MoneyQuantity> | undefined): boolean {
    return proto3.util.equals(MoneyQuantity, a, b);
  }
}

/**
 * < | <= | >= | > - how to understand the value
 *
 * @generated from message google.fhir.r4.core.MoneyQuantity.ComparatorCode
 */
export class MoneyQuantity_ComparatorCode extends Message<MoneyQuantity_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuantityComparatorCode.Value value = 1;
   */
  value = QuantityComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MoneyQuantity_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MoneyQuantity.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuantityComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MoneyQuantity_ComparatorCode {
    return new MoneyQuantity_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MoneyQuantity_ComparatorCode {
    return new MoneyQuantity_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MoneyQuantity_ComparatorCode {
    return new MoneyQuantity_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: MoneyQuantity_ComparatorCode | PlainMessage<MoneyQuantity_ComparatorCode> | undefined, b: MoneyQuantity_ComparatorCode | PlainMessage<MoneyQuantity_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(MoneyQuantity_ComparatorCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Narrative.
 * Human-readable summary of the resource (essential clinical and business
 * information). See http://hl7.org/fhir/StructureDefinition/Narrative
 *
 * @generated from message google.fhir.r4.core.Narrative
 */
export class Narrative extends Message<Narrative> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Narrative.StatusCode status = 3;
   */
  status?: Narrative_StatusCode;

  /**
   * Limited xhtml content
   *
   * @generated from field: google.fhir.r4.core.Xhtml div = 4;
   */
  div?: Xhtml;

  constructor(data?: PartialMessage<Narrative>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Narrative";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "status", kind: "message", T: Narrative_StatusCode },
    { no: 4, name: "div", kind: "message", T: Xhtml },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Narrative {
    return new Narrative().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Narrative {
    return new Narrative().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Narrative {
    return new Narrative().fromJsonString(jsonString, options);
  }

  static equals(a: Narrative | PlainMessage<Narrative> | undefined, b: Narrative | PlainMessage<Narrative> | undefined): boolean {
    return proto3.util.equals(Narrative, a, b);
  }
}

/**
 * generated | extensions | additional | empty
 *
 * @generated from message google.fhir.r4.core.Narrative.StatusCode
 */
export class Narrative_StatusCode extends Message<Narrative_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.NarrativeStatusCode.Value value = 1;
   */
  value = NarrativeStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Narrative_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Narrative.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NarrativeStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Narrative_StatusCode {
    return new Narrative_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Narrative_StatusCode {
    return new Narrative_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Narrative_StatusCode {
    return new Narrative_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: Narrative_StatusCode | PlainMessage<Narrative_StatusCode> | undefined, b: Narrative_StatusCode | PlainMessage<Narrative_StatusCode> | undefined): boolean {
    return proto3.util.equals(Narrative_StatusCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for oid.
 * Primitive Type oid.
 * See http://hl7.org/fhir/StructureDefinition/oid
 *
 * @generated from message google.fhir.r4.core.Oid
 */
export class Oid extends Message<Oid> {
  /**
   * Primitive value for oid
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Oid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Oid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Oid {
    return new Oid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Oid {
    return new Oid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Oid {
    return new Oid().fromJsonString(jsonString, options);
  }

  static equals(a: Oid | PlainMessage<Oid> | undefined, b: Oid | PlainMessage<Oid> | undefined): boolean {
    return proto3.util.equals(Oid, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ParameterDefinition.
 * Definition of a parameter to a module.
 * See http://hl7.org/fhir/StructureDefinition/ParameterDefinition
 *
 * @generated from message google.fhir.r4.core.ParameterDefinition
 */
export class ParameterDefinition extends Message<ParameterDefinition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Name used to access the parameter value
   *
   * @generated from field: google.fhir.r4.core.Code name = 3;
   */
  name?: Code;

  /**
   * @generated from field: google.fhir.r4.core.ParameterDefinition.UseCode use = 4;
   */
  use?: ParameterDefinition_UseCode;

  /**
   * Minimum cardinality
   *
   * @generated from field: google.fhir.r4.core.Integer min = 5;
   */
  min?: Integer;

  /**
   * Maximum cardinality (a number of *)
   *
   * @generated from field: google.fhir.r4.core.String max = 6;
   */
  max?: String;

  /**
   * A brief description of the parameter
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;

  /**
   * @generated from field: google.fhir.r4.core.ParameterDefinition.TypeCode type = 8;
   */
  type?: ParameterDefinition_TypeCode;

  /**
   * What profile the value is expected to be
   *
   * @generated from field: google.fhir.r4.core.Canonical profile = 9;
   */
  profile?: Canonical;

  constructor(data?: PartialMessage<ParameterDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ParameterDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "name", kind: "message", T: Code },
    { no: 4, name: "use", kind: "message", T: ParameterDefinition_UseCode },
    { no: 5, name: "min", kind: "message", T: Integer },
    { no: 6, name: "max", kind: "message", T: String },
    { no: 7, name: "documentation", kind: "message", T: String },
    { no: 8, name: "type", kind: "message", T: ParameterDefinition_TypeCode },
    { no: 9, name: "profile", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParameterDefinition {
    return new ParameterDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParameterDefinition {
    return new ParameterDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParameterDefinition {
    return new ParameterDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ParameterDefinition | PlainMessage<ParameterDefinition> | undefined, b: ParameterDefinition | PlainMessage<ParameterDefinition> | undefined): boolean {
    return proto3.util.equals(ParameterDefinition, a, b);
  }
}

/**
 * in | out
 *
 * @generated from message google.fhir.r4.core.ParameterDefinition.UseCode
 */
export class ParameterDefinition_UseCode extends Message<ParameterDefinition_UseCode> {
  /**
   * @generated from field: google.fhir.r4.core.OperationParameterUseCode.Value value = 1;
   */
  value = OperationParameterUseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ParameterDefinition_UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ParameterDefinition.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(OperationParameterUseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParameterDefinition_UseCode {
    return new ParameterDefinition_UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParameterDefinition_UseCode {
    return new ParameterDefinition_UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParameterDefinition_UseCode {
    return new ParameterDefinition_UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: ParameterDefinition_UseCode | PlainMessage<ParameterDefinition_UseCode> | undefined, b: ParameterDefinition_UseCode | PlainMessage<ParameterDefinition_UseCode> | undefined): boolean {
    return proto3.util.equals(ParameterDefinition_UseCode, a, b);
  }
}

/**
 * What type of value
 *
 * @generated from message google.fhir.r4.core.ParameterDefinition.TypeCode
 */
export class ParameterDefinition_TypeCode extends Message<ParameterDefinition_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRAllTypesValueSet.Value value = 1;
   */
  value = FHIRAllTypesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ParameterDefinition_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ParameterDefinition.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRAllTypesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParameterDefinition_TypeCode {
    return new ParameterDefinition_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParameterDefinition_TypeCode {
    return new ParameterDefinition_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParameterDefinition_TypeCode {
    return new ParameterDefinition_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ParameterDefinition_TypeCode | PlainMessage<ParameterDefinition_TypeCode> | undefined, b: ParameterDefinition_TypeCode | PlainMessage<ParameterDefinition_TypeCode> | undefined): boolean {
    return proto3.util.equals(ParameterDefinition_TypeCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Period.
 * Time range defined by start and end date/time.
 * See http://hl7.org/fhir/StructureDefinition/Period
 *
 * @generated from message google.fhir.r4.core.Period
 */
export class Period extends Message<Period> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Starting time with inclusive boundary
   *
   * @generated from field: google.fhir.r4.core.DateTime start = 3;
   */
  start?: DateTime;

  /**
   * End time with inclusive boundary, if not ongoing
   *
   * @generated from field: google.fhir.r4.core.DateTime end = 4;
   */
  end?: DateTime;

  constructor(data?: PartialMessage<Period>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Period";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "start", kind: "message", T: DateTime },
    { no: 4, name: "end", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Period {
    return new Period().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Period {
    return new Period().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Period {
    return new Period().fromJsonString(jsonString, options);
  }

  static equals(a: Period | PlainMessage<Period> | undefined, b: Period | PlainMessage<Period> | undefined): boolean {
    return proto3.util.equals(Period, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Population.
 * A definition of a set of people that apply to some clinically related
 * context, for example people contraindicated for a certain medication. See
 * http://hl7.org/fhir/StructureDefinition/Population
 *
 * @generated from message google.fhir.r4.core.Population
 */
export class Population extends Message<Population> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Population.AgeX age = 4;
   */
  age?: Population_AgeX;

  /**
   * The gender of the specific population
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept gender = 5;
   */
  gender?: CodeableConcept;

  /**
   * Race of the specific population
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept race = 6;
   */
  race?: CodeableConcept;

  /**
   * The existing physiological conditions of the specific population to which
   * this applies
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept physiological_condition = 7;
   */
  physiologicalCondition?: CodeableConcept;

  constructor(data?: PartialMessage<Population>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Population";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "age", kind: "message", T: Population_AgeX },
    { no: 5, name: "gender", kind: "message", T: CodeableConcept },
    { no: 6, name: "race", kind: "message", T: CodeableConcept },
    { no: 7, name: "physiological_condition", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Population {
    return new Population().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Population {
    return new Population().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Population {
    return new Population().fromJsonString(jsonString, options);
  }

  static equals(a: Population | PlainMessage<Population> | undefined, b: Population | PlainMessage<Population> | undefined): boolean {
    return proto3.util.equals(Population, a, b);
  }
}

/**
 * The age of the specific population
 *
 * @generated from message google.fhir.r4.core.Population.AgeX
 */
export class Population_AgeX extends Message<Population_AgeX> {
  /**
   * @generated from oneof google.fhir.r4.core.Population.AgeX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 1;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Population_AgeX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Population.AgeX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Population_AgeX {
    return new Population_AgeX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Population_AgeX {
    return new Population_AgeX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Population_AgeX {
    return new Population_AgeX().fromJsonString(jsonString, options);
  }

  static equals(a: Population_AgeX | PlainMessage<Population_AgeX> | undefined, b: Population_AgeX | PlainMessage<Population_AgeX> | undefined): boolean {
    return proto3.util.equals(Population_AgeX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for positiveInt.
 * Primitive Type positiveInt.
 * See http://hl7.org/fhir/StructureDefinition/positiveInt
 *
 * @generated from message google.fhir.r4.core.PositiveInt
 */
export class PositiveInt extends Message<PositiveInt> {
  /**
   * Primitive value for positiveInt
   *
   * @generated from field: uint32 value = 1;
   */
  value = 0;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PositiveInt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PositiveInt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PositiveInt {
    return new PositiveInt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PositiveInt {
    return new PositiveInt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PositiveInt {
    return new PositiveInt().fromJsonString(jsonString, options);
  }

  static equals(a: PositiveInt | PlainMessage<PositiveInt> | undefined, b: PositiveInt | PlainMessage<PositiveInt> | undefined): boolean {
    return proto3.util.equals(PositiveInt, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ProdCharacteristic.
 * The marketing status describes the date when a medicinal product is actually
 * put on the market or the date as of which it is no longer available. See
 * http://hl7.org/fhir/StructureDefinition/ProdCharacteristic
 *
 * @generated from message google.fhir.r4.core.ProdCharacteristic
 */
export class ProdCharacteristic extends Message<ProdCharacteristic> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Where applicable, the height can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity height = 4;
   */
  height?: Quantity;

  /**
   * Where applicable, the width can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity width = 5;
   */
  width?: Quantity;

  /**
   * Where applicable, the depth can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity depth = 6;
   */
  depth?: Quantity;

  /**
   * Where applicable, the weight can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity weight = 7;
   */
  weight?: Quantity;

  /**
   * Where applicable, the nominal volume can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity nominal_volume = 8;
   */
  nominalVolume?: Quantity;

  /**
   * Where applicable, the external diameter can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity external_diameter = 9;
   */
  externalDiameter?: Quantity;

  /**
   * Where applicable, the shape can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.String shape = 10;
   */
  shape?: String;

  /**
   * Where applicable, the color can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   *
   * @generated from field: repeated google.fhir.r4.core.String color = 11;
   */
  color: String[] = [];

  /**
   * Where applicable, the imprint can be specified as text
   *
   * @generated from field: repeated google.fhir.r4.core.String imprint = 12;
   */
  imprint: String[] = [];

  /**
   * Where applicable, the image can be provided The format of the image
   * attachment shall be specified by regional implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment image = 13;
   */
  image: Attachment[] = [];

  /**
   * Where applicable, the scoring can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept scoring = 14;
   */
  scoring?: CodeableConcept;

  constructor(data?: PartialMessage<ProdCharacteristic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProdCharacteristic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "height", kind: "message", T: Quantity },
    { no: 5, name: "width", kind: "message", T: Quantity },
    { no: 6, name: "depth", kind: "message", T: Quantity },
    { no: 7, name: "weight", kind: "message", T: Quantity },
    { no: 8, name: "nominal_volume", kind: "message", T: Quantity },
    { no: 9, name: "external_diameter", kind: "message", T: Quantity },
    { no: 10, name: "shape", kind: "message", T: String },
    { no: 11, name: "color", kind: "message", T: String, repeated: true },
    { no: 12, name: "imprint", kind: "message", T: String, repeated: true },
    { no: 13, name: "image", kind: "message", T: Attachment, repeated: true },
    { no: 14, name: "scoring", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProdCharacteristic {
    return new ProdCharacteristic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProdCharacteristic {
    return new ProdCharacteristic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProdCharacteristic {
    return new ProdCharacteristic().fromJsonString(jsonString, options);
  }

  static equals(a: ProdCharacteristic | PlainMessage<ProdCharacteristic> | undefined, b: ProdCharacteristic | PlainMessage<ProdCharacteristic> | undefined): boolean {
    return proto3.util.equals(ProdCharacteristic, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for ProductShelfLife.
 * The shelf-life and storage information for a medicinal product item or
 * container can be described using this class. See
 * http://hl7.org/fhir/StructureDefinition/ProductShelfLife
 *
 * @generated from message google.fhir.r4.core.ProductShelfLife
 */
export class ProductShelfLife extends Message<ProductShelfLife> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier for the packaged Medicinal Product
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * This describes the shelf life, taking into account various scenarios such
   * as shelf life of the packaged Medicinal Product itself, shelf life after
   * transformation where necessary and shelf life after the first opening of a
   * bottle, etc. The shelf life type shall be specified using an appropriate
   * controlled vocabulary The controlled term and the controlled term
   * identifier shall be specified
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * The shelf life time period can be specified using a numerical value for the
   * period of time and its unit of time measurement The unit of measurement
   * shall be specified in accordance with ISO 11240 and the resulting
   * terminology The symbol and the symbol identifier shall be used
   *
   * @generated from field: google.fhir.r4.core.Quantity period = 6;
   */
  period?: Quantity;

  /**
   * Special precautions for storage, if any, can be specified using an
   * appropriate controlled vocabulary The controlled term and the controlled
   * term identifier shall be specified
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept special_precautions_for_storage = 7;
   */
  specialPrecautionsForStorage: CodeableConcept[] = [];

  constructor(data?: PartialMessage<ProductShelfLife>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProductShelfLife";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "period", kind: "message", T: Quantity },
    { no: 7, name: "special_precautions_for_storage", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductShelfLife {
    return new ProductShelfLife().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductShelfLife {
    return new ProductShelfLife().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductShelfLife {
    return new ProductShelfLife().fromJsonString(jsonString, options);
  }

  static equals(a: ProductShelfLife | PlainMessage<ProductShelfLife> | undefined, b: ProductShelfLife | PlainMessage<ProductShelfLife> | undefined): boolean {
    return proto3.util.equals(ProductShelfLife, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Quantity.
 * A measured or measurable amount.
 * See http://hl7.org/fhir/StructureDefinition/Quantity
 *
 * @generated from message google.fhir.r4.core.Quantity
 */
export class Quantity extends Message<Quantity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Quantity.ComparatorCode comparator = 4;
   */
  comparator?: Quantity_ComparatorCode;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<Quantity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Quantity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 4, name: "comparator", kind: "message", T: Quantity_ComparatorCode },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Quantity {
    return new Quantity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Quantity {
    return new Quantity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Quantity {
    return new Quantity().fromJsonString(jsonString, options);
  }

  static equals(a: Quantity | PlainMessage<Quantity> | undefined, b: Quantity | PlainMessage<Quantity> | undefined): boolean {
    return proto3.util.equals(Quantity, a, b);
  }
}

/**
 * < | <= | >= | > - how to understand the value
 *
 * @generated from message google.fhir.r4.core.Quantity.ComparatorCode
 */
export class Quantity_ComparatorCode extends Message<Quantity_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuantityComparatorCode.Value value = 1;
   */
  value = QuantityComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Quantity_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Quantity.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuantityComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Quantity_ComparatorCode {
    return new Quantity_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Quantity_ComparatorCode {
    return new Quantity_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Quantity_ComparatorCode {
    return new Quantity_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: Quantity_ComparatorCode | PlainMessage<Quantity_ComparatorCode> | undefined, b: Quantity_ComparatorCode | PlainMessage<Quantity_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(Quantity_ComparatorCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Range.
 * Set of values bounded by low and high.
 * See http://hl7.org/fhir/StructureDefinition/Range
 *
 * @generated from message google.fhir.r4.core.Range
 */
export class Range extends Message<Range> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Low limit
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity low = 3;
   */
  low?: SimpleQuantity;

  /**
   * High limit
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity high = 4;
   */
  high?: SimpleQuantity;

  constructor(data?: PartialMessage<Range>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Range";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "low", kind: "message", T: SimpleQuantity },
    { no: 4, name: "high", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Range {
    return new Range().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Range {
    return new Range().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Range {
    return new Range().fromJsonString(jsonString, options);
  }

  static equals(a: Range | PlainMessage<Range> | undefined, b: Range | PlainMessage<Range> | undefined): boolean {
    return proto3.util.equals(Range, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Ratio.
 * A ratio of two Quantity values - a numerator and a denominator.
 * See http://hl7.org/fhir/StructureDefinition/Ratio
 *
 * @generated from message google.fhir.r4.core.Ratio
 */
export class Ratio extends Message<Ratio> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerator value
   *
   * @generated from field: google.fhir.r4.core.Quantity numerator = 3;
   */
  numerator?: Quantity;

  /**
   * Denominator value
   *
   * @generated from field: google.fhir.r4.core.Quantity denominator = 4;
   */
  denominator?: Quantity;

  constructor(data?: PartialMessage<Ratio>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Ratio";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "numerator", kind: "message", T: Quantity },
    { no: 4, name: "denominator", kind: "message", T: Quantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Ratio {
    return new Ratio().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Ratio {
    return new Ratio().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Ratio {
    return new Ratio().fromJsonString(jsonString, options);
  }

  static equals(a: Ratio | PlainMessage<Ratio> | undefined, b: Ratio | PlainMessage<Ratio> | undefined): boolean {
    return proto3.util.equals(Ratio, a, b);
  }
}

/**
 *  A reference from one resource to another. See
 *  https://www.hl7.org/fhir/datatypes.html#Reference.
 *
 * @generated from message google.fhir.r4.core.Reference
 */
export class Reference extends Message<Reference> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Type the reference refers to (e.g. "Patient") - must be a resource in
   * resources
   *
   * @generated from field: google.fhir.r4.core.Uri type = 3;
   */
  type?: Uri;

  /**
   * Logical reference, when literal reference is not known
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 155;
   */
  identifier?: Identifier;

  /**
   * Text alternative for the resource.
   *
   * @generated from field: google.fhir.r4.core.String display = 156;
   */
  display?: String;

  /**
   * @generated from oneof google.fhir.r4.core.Reference.reference
   */
  reference: {
    /**
     * Field representing absolute URIs, which are untyped.
     *
     * @generated from field: google.fhir.r4.core.String uri = 4 [json_name = "reference"];
     */
    value: String;
    case: "uri";
  } | {
    /**
     * Field representing fragment URIs, which are untyped, and represented here
     * without the leading '#'
     *
     * @generated from field: google.fhir.r4.core.String fragment = 5;
     */
    value: String;
    case: "fragment";
  } | {
    /**
     * Typed relative urls are represented here.
     *
     * @generated from field: google.fhir.r4.core.ReferenceId resource_id = 6;
     */
    value: ReferenceId;
    case: "resourceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId account_id = 7;
     */
    value: ReferenceId;
    case: "accountId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId activity_definition_id = 8;
     */
    value: ReferenceId;
    case: "activityDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId adverse_event_id = 9;
     */
    value: ReferenceId;
    case: "adverseEventId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId allergy_intolerance_id = 10;
     */
    value: ReferenceId;
    case: "allergyIntoleranceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId appointment_id = 11;
     */
    value: ReferenceId;
    case: "appointmentId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId appointment_response_id = 12;
     */
    value: ReferenceId;
    case: "appointmentResponseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId audit_event_id = 13;
     */
    value: ReferenceId;
    case: "auditEventId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId basic_id = 14;
     */
    value: ReferenceId;
    case: "basicId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId binary_id = 15;
     */
    value: ReferenceId;
    case: "binaryId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId biologically_derived_product_id = 16;
     */
    value: ReferenceId;
    case: "biologicallyDerivedProductId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId body_structure_id = 17;
     */
    value: ReferenceId;
    case: "bodyStructureId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId bundle_id = 18;
     */
    value: ReferenceId;
    case: "bundleId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId capability_statement_id = 19;
     */
    value: ReferenceId;
    case: "capabilityStatementId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId care_plan_id = 20;
     */
    value: ReferenceId;
    case: "carePlanId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId care_team_id = 21;
     */
    value: ReferenceId;
    case: "careTeamId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId catalog_entry_id = 22;
     */
    value: ReferenceId;
    case: "catalogEntryId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId charge_item_id = 23;
     */
    value: ReferenceId;
    case: "chargeItemId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId charge_item_definition_id = 24;
     */
    value: ReferenceId;
    case: "chargeItemDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId claim_id = 25;
     */
    value: ReferenceId;
    case: "claimId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId claim_response_id = 26;
     */
    value: ReferenceId;
    case: "claimResponseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId clinical_impression_id = 27;
     */
    value: ReferenceId;
    case: "clinicalImpressionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId code_system_id = 28;
     */
    value: ReferenceId;
    case: "codeSystemId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId communication_id = 29;
     */
    value: ReferenceId;
    case: "communicationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId communication_request_id = 30;
     */
    value: ReferenceId;
    case: "communicationRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId compartment_definition_id = 31;
     */
    value: ReferenceId;
    case: "compartmentDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId composition_id = 32;
     */
    value: ReferenceId;
    case: "compositionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId concept_map_id = 33;
     */
    value: ReferenceId;
    case: "conceptMapId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId condition_id = 34;
     */
    value: ReferenceId;
    case: "conditionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId consent_id = 35;
     */
    value: ReferenceId;
    case: "consentId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId contract_id = 36;
     */
    value: ReferenceId;
    case: "contractId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId coverage_id = 37;
     */
    value: ReferenceId;
    case: "coverageId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId coverage_eligibility_request_id = 38;
     */
    value: ReferenceId;
    case: "coverageEligibilityRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId coverage_eligibility_response_id = 39;
     */
    value: ReferenceId;
    case: "coverageEligibilityResponseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId detected_issue_id = 40;
     */
    value: ReferenceId;
    case: "detectedIssueId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId device_id = 41;
     */
    value: ReferenceId;
    case: "deviceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId device_definition_id = 42;
     */
    value: ReferenceId;
    case: "deviceDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId device_metric_id = 43;
     */
    value: ReferenceId;
    case: "deviceMetricId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId device_request_id = 44;
     */
    value: ReferenceId;
    case: "deviceRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId device_use_statement_id = 45;
     */
    value: ReferenceId;
    case: "deviceUseStatementId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId diagnostic_report_id = 46;
     */
    value: ReferenceId;
    case: "diagnosticReportId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId document_manifest_id = 47;
     */
    value: ReferenceId;
    case: "documentManifestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId document_reference_id = 48;
     */
    value: ReferenceId;
    case: "documentReferenceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId domain_resource_id = 49;
     */
    value: ReferenceId;
    case: "domainResourceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId effect_evidence_synthesis_id = 50;
     */
    value: ReferenceId;
    case: "effectEvidenceSynthesisId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId encounter_id = 51;
     */
    value: ReferenceId;
    case: "encounterId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId endpoint_id = 52;
     */
    value: ReferenceId;
    case: "endpointId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId enrollment_request_id = 53;
     */
    value: ReferenceId;
    case: "enrollmentRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId enrollment_response_id = 54;
     */
    value: ReferenceId;
    case: "enrollmentResponseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId episode_of_care_id = 55;
     */
    value: ReferenceId;
    case: "episodeOfCareId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId event_definition_id = 56;
     */
    value: ReferenceId;
    case: "eventDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId evidence_id = 57;
     */
    value: ReferenceId;
    case: "evidenceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId evidence_variable_id = 58;
     */
    value: ReferenceId;
    case: "evidenceVariableId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId example_scenario_id = 59;
     */
    value: ReferenceId;
    case: "exampleScenarioId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId explanation_of_benefit_id = 60;
     */
    value: ReferenceId;
    case: "explanationOfBenefitId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId family_member_history_id = 61;
     */
    value: ReferenceId;
    case: "familyMemberHistoryId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId flag_id = 62;
     */
    value: ReferenceId;
    case: "flagId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId goal_id = 63;
     */
    value: ReferenceId;
    case: "goalId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId graph_definition_id = 64;
     */
    value: ReferenceId;
    case: "graphDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId group_id = 65;
     */
    value: ReferenceId;
    case: "groupId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId guidance_response_id = 66;
     */
    value: ReferenceId;
    case: "guidanceResponseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId healthcare_service_id = 67;
     */
    value: ReferenceId;
    case: "healthcareServiceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId imaging_study_id = 68;
     */
    value: ReferenceId;
    case: "imagingStudyId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId immunization_id = 69;
     */
    value: ReferenceId;
    case: "immunizationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId immunization_evaluation_id = 70;
     */
    value: ReferenceId;
    case: "immunizationEvaluationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId immunization_recommendation_id = 71;
     */
    value: ReferenceId;
    case: "immunizationRecommendationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId implementation_guide_id = 72;
     */
    value: ReferenceId;
    case: "implementationGuideId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId insurance_plan_id = 73;
     */
    value: ReferenceId;
    case: "insurancePlanId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId invoice_id = 74;
     */
    value: ReferenceId;
    case: "invoiceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId library_id = 75;
     */
    value: ReferenceId;
    case: "libraryId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId linkage_id = 76;
     */
    value: ReferenceId;
    case: "linkageId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId list_id = 77;
     */
    value: ReferenceId;
    case: "listId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId location_id = 78;
     */
    value: ReferenceId;
    case: "locationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId measure_id = 79;
     */
    value: ReferenceId;
    case: "measureId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId measure_report_id = 80;
     */
    value: ReferenceId;
    case: "measureReportId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId media_id = 81;
     */
    value: ReferenceId;
    case: "mediaId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medication_id = 82;
     */
    value: ReferenceId;
    case: "medicationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medication_administration_id = 83;
     */
    value: ReferenceId;
    case: "medicationAdministrationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medication_dispense_id = 84;
     */
    value: ReferenceId;
    case: "medicationDispenseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medication_knowledge_id = 85;
     */
    value: ReferenceId;
    case: "medicationKnowledgeId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medication_request_id = 86;
     */
    value: ReferenceId;
    case: "medicationRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medication_statement_id = 87;
     */
    value: ReferenceId;
    case: "medicationStatementId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_id = 88;
     */
    value: ReferenceId;
    case: "medicinalProductId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_authorization_id = 89;
     */
    value: ReferenceId;
    case: "medicinalProductAuthorizationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_contraindication_id = 90;
     */
    value: ReferenceId;
    case: "medicinalProductContraindicationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_indication_id = 91;
     */
    value: ReferenceId;
    case: "medicinalProductIndicationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_ingredient_id = 92;
     */
    value: ReferenceId;
    case: "medicinalProductIngredientId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_interaction_id = 93;
     */
    value: ReferenceId;
    case: "medicinalProductInteractionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_manufactured_id = 94;
     */
    value: ReferenceId;
    case: "medicinalProductManufacturedId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_packaged_id = 95;
     */
    value: ReferenceId;
    case: "medicinalProductPackagedId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_pharmaceutical_id = 96;
     */
    value: ReferenceId;
    case: "medicinalProductPharmaceuticalId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId medicinal_product_undesirable_effect_id = 97;
     */
    value: ReferenceId;
    case: "medicinalProductUndesirableEffectId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId message_definition_id = 98;
     */
    value: ReferenceId;
    case: "messageDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId message_header_id = 99;
     */
    value: ReferenceId;
    case: "messageHeaderId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId molecular_sequence_id = 100;
     */
    value: ReferenceId;
    case: "molecularSequenceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId naming_system_id = 101;
     */
    value: ReferenceId;
    case: "namingSystemId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId nutrition_order_id = 102;
     */
    value: ReferenceId;
    case: "nutritionOrderId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId observation_id = 103;
     */
    value: ReferenceId;
    case: "observationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId observation_definition_id = 104;
     */
    value: ReferenceId;
    case: "observationDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId operation_definition_id = 105;
     */
    value: ReferenceId;
    case: "operationDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId operation_outcome_id = 106;
     */
    value: ReferenceId;
    case: "operationOutcomeId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId organization_id = 107;
     */
    value: ReferenceId;
    case: "organizationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId organization_affiliation_id = 108;
     */
    value: ReferenceId;
    case: "organizationAffiliationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId parameters_id = 109;
     */
    value: ReferenceId;
    case: "parametersId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId patient_id = 110;
     */
    value: ReferenceId;
    case: "patientId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId payment_notice_id = 111;
     */
    value: ReferenceId;
    case: "paymentNoticeId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId payment_reconciliation_id = 112;
     */
    value: ReferenceId;
    case: "paymentReconciliationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId person_id = 113;
     */
    value: ReferenceId;
    case: "personId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId plan_definition_id = 114;
     */
    value: ReferenceId;
    case: "planDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId practitioner_id = 115;
     */
    value: ReferenceId;
    case: "practitionerId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId practitioner_role_id = 116;
     */
    value: ReferenceId;
    case: "practitionerRoleId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId procedure_id = 117;
     */
    value: ReferenceId;
    case: "procedureId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId provenance_id = 118;
     */
    value: ReferenceId;
    case: "provenanceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId questionnaire_id = 119;
     */
    value: ReferenceId;
    case: "questionnaireId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId questionnaire_response_id = 120;
     */
    value: ReferenceId;
    case: "questionnaireResponseId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId related_person_id = 121;
     */
    value: ReferenceId;
    case: "relatedPersonId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId request_group_id = 122;
     */
    value: ReferenceId;
    case: "requestGroupId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId research_definition_id = 123;
     */
    value: ReferenceId;
    case: "researchDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId research_element_definition_id = 124;
     */
    value: ReferenceId;
    case: "researchElementDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId research_study_id = 125;
     */
    value: ReferenceId;
    case: "researchStudyId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId research_subject_id = 126;
     */
    value: ReferenceId;
    case: "researchSubjectId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId risk_assessment_id = 127;
     */
    value: ReferenceId;
    case: "riskAssessmentId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId risk_evidence_synthesis_id = 128;
     */
    value: ReferenceId;
    case: "riskEvidenceSynthesisId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId schedule_id = 129;
     */
    value: ReferenceId;
    case: "scheduleId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId search_parameter_id = 130;
     */
    value: ReferenceId;
    case: "searchParameterId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId service_request_id = 131;
     */
    value: ReferenceId;
    case: "serviceRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId slot_id = 132;
     */
    value: ReferenceId;
    case: "slotId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId specimen_id = 133;
     */
    value: ReferenceId;
    case: "specimenId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId specimen_definition_id = 134;
     */
    value: ReferenceId;
    case: "specimenDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId structure_definition_id = 135;
     */
    value: ReferenceId;
    case: "structureDefinitionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId structure_map_id = 136;
     */
    value: ReferenceId;
    case: "structureMapId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId subscription_id = 137;
     */
    value: ReferenceId;
    case: "subscriptionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_id = 138;
     */
    value: ReferenceId;
    case: "substanceId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_nucleic_acid_id = 139;
     */
    value: ReferenceId;
    case: "substanceNucleicAcidId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_polymer_id = 140;
     */
    value: ReferenceId;
    case: "substancePolymerId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_protein_id = 141;
     */
    value: ReferenceId;
    case: "substanceProteinId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_reference_information_id = 142;
     */
    value: ReferenceId;
    case: "substanceReferenceInformationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_source_material_id = 143;
     */
    value: ReferenceId;
    case: "substanceSourceMaterialId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId substance_specification_id = 144;
     */
    value: ReferenceId;
    case: "substanceSpecificationId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId supply_delivery_id = 145;
     */
    value: ReferenceId;
    case: "supplyDeliveryId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId supply_request_id = 146;
     */
    value: ReferenceId;
    case: "supplyRequestId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId task_id = 147;
     */
    value: ReferenceId;
    case: "taskId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId terminology_capabilities_id = 148;
     */
    value: ReferenceId;
    case: "terminologyCapabilitiesId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId test_report_id = 149;
     */
    value: ReferenceId;
    case: "testReportId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId test_script_id = 150;
     */
    value: ReferenceId;
    case: "testScriptId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId value_set_id = 151;
     */
    value: ReferenceId;
    case: "valueSetId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId verification_result_id = 152;
     */
    value: ReferenceId;
    case: "verificationResultId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId vision_prescription_id = 153;
     */
    value: ReferenceId;
    case: "visionPrescriptionId";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ReferenceId metadata_resource_id = 154;
     */
    value: ReferenceId;
    case: "metadataResourceId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Reference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Reference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: Uri },
    { no: 155, name: "identifier", kind: "message", T: Identifier },
    { no: 156, name: "display", kind: "message", T: String },
    { no: 4, name: "uri", jsonName: "reference", kind: "message", T: String, oneof: "reference" },
    { no: 5, name: "fragment", kind: "message", T: String, oneof: "reference" },
    { no: 6, name: "resource_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 7, name: "account_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 8, name: "activity_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 9, name: "adverse_event_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 10, name: "allergy_intolerance_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 11, name: "appointment_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 12, name: "appointment_response_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 13, name: "audit_event_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 14, name: "basic_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 15, name: "binary_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 16, name: "biologically_derived_product_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 17, name: "body_structure_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 18, name: "bundle_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 19, name: "capability_statement_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 20, name: "care_plan_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 21, name: "care_team_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 22, name: "catalog_entry_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 23, name: "charge_item_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 24, name: "charge_item_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 25, name: "claim_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 26, name: "claim_response_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 27, name: "clinical_impression_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 28, name: "code_system_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 29, name: "communication_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 30, name: "communication_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 31, name: "compartment_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 32, name: "composition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 33, name: "concept_map_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 34, name: "condition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 35, name: "consent_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 36, name: "contract_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 37, name: "coverage_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 38, name: "coverage_eligibility_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 39, name: "coverage_eligibility_response_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 40, name: "detected_issue_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 41, name: "device_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 42, name: "device_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 43, name: "device_metric_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 44, name: "device_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 45, name: "device_use_statement_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 46, name: "diagnostic_report_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 47, name: "document_manifest_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 48, name: "document_reference_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 49, name: "domain_resource_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 50, name: "effect_evidence_synthesis_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 51, name: "encounter_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 52, name: "endpoint_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 53, name: "enrollment_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 54, name: "enrollment_response_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 55, name: "episode_of_care_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 56, name: "event_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 57, name: "evidence_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 58, name: "evidence_variable_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 59, name: "example_scenario_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 60, name: "explanation_of_benefit_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 61, name: "family_member_history_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 62, name: "flag_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 63, name: "goal_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 64, name: "graph_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 65, name: "group_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 66, name: "guidance_response_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 67, name: "healthcare_service_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 68, name: "imaging_study_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 69, name: "immunization_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 70, name: "immunization_evaluation_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 71, name: "immunization_recommendation_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 72, name: "implementation_guide_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 73, name: "insurance_plan_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 74, name: "invoice_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 75, name: "library_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 76, name: "linkage_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 77, name: "list_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 78, name: "location_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 79, name: "measure_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 80, name: "measure_report_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 81, name: "media_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 82, name: "medication_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 83, name: "medication_administration_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 84, name: "medication_dispense_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 85, name: "medication_knowledge_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 86, name: "medication_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 87, name: "medication_statement_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 88, name: "medicinal_product_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 89, name: "medicinal_product_authorization_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 90, name: "medicinal_product_contraindication_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 91, name: "medicinal_product_indication_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 92, name: "medicinal_product_ingredient_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 93, name: "medicinal_product_interaction_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 94, name: "medicinal_product_manufactured_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 95, name: "medicinal_product_packaged_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 96, name: "medicinal_product_pharmaceutical_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 97, name: "medicinal_product_undesirable_effect_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 98, name: "message_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 99, name: "message_header_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 100, name: "molecular_sequence_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 101, name: "naming_system_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 102, name: "nutrition_order_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 103, name: "observation_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 104, name: "observation_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 105, name: "operation_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 106, name: "operation_outcome_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 107, name: "organization_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 108, name: "organization_affiliation_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 109, name: "parameters_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 110, name: "patient_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 111, name: "payment_notice_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 112, name: "payment_reconciliation_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 113, name: "person_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 114, name: "plan_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 115, name: "practitioner_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 116, name: "practitioner_role_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 117, name: "procedure_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 118, name: "provenance_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 119, name: "questionnaire_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 120, name: "questionnaire_response_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 121, name: "related_person_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 122, name: "request_group_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 123, name: "research_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 124, name: "research_element_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 125, name: "research_study_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 126, name: "research_subject_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 127, name: "risk_assessment_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 128, name: "risk_evidence_synthesis_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 129, name: "schedule_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 130, name: "search_parameter_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 131, name: "service_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 132, name: "slot_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 133, name: "specimen_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 134, name: "specimen_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 135, name: "structure_definition_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 136, name: "structure_map_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 137, name: "subscription_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 138, name: "substance_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 139, name: "substance_nucleic_acid_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 140, name: "substance_polymer_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 141, name: "substance_protein_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 142, name: "substance_reference_information_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 143, name: "substance_source_material_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 144, name: "substance_specification_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 145, name: "supply_delivery_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 146, name: "supply_request_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 147, name: "task_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 148, name: "terminology_capabilities_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 149, name: "test_report_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 150, name: "test_script_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 151, name: "value_set_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 152, name: "verification_result_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 153, name: "vision_prescription_id", kind: "message", T: ReferenceId, oneof: "reference" },
    { no: 154, name: "metadata_resource_id", kind: "message", T: ReferenceId, oneof: "reference" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Reference {
    return new Reference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Reference {
    return new Reference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Reference {
    return new Reference().fromJsonString(jsonString, options);
  }

  static equals(a: Reference | PlainMessage<Reference> | undefined, b: Reference | PlainMessage<Reference> | undefined): boolean {
    return proto3.util.equals(Reference, a, b);
  }
}

/**
 * Typed representation of relative references for the Reference.reference
 * field. For instance, a JSON FHIR reference of 'Patient/1234' is represented
 * in FhirProto as {patientId {value:'1234'} }, where patientId is a field of
 * type ReferenceId.
 *
 * @generated from message google.fhir.r4.core.ReferenceId
 */
export class ReferenceId extends Message<ReferenceId> {
  /**
   * Id of the resource being referenced.
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * History version, if present.
   *
   * @generated from field: google.fhir.r4.core.Id history = 2;
   */
  history?: Id;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 3;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 4;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ReferenceId>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ReferenceId";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "history", kind: "message", T: Id },
    { no: 3, name: "id", kind: "message", T: String },
    { no: 4, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceId {
    return new ReferenceId().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceId {
    return new ReferenceId().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceId {
    return new ReferenceId().fromJsonString(jsonString, options);
  }

  static equals(a: ReferenceId | PlainMessage<ReferenceId> | undefined, b: ReferenceId | PlainMessage<ReferenceId> | undefined): boolean {
    return proto3.util.equals(ReferenceId, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for RelatedArtifact.
 * Related artifacts for a knowledge resource.
 * See http://hl7.org/fhir/StructureDefinition/RelatedArtifact
 *
 * @generated from message google.fhir.r4.core.RelatedArtifact
 */
export class RelatedArtifact extends Message<RelatedArtifact> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.RelatedArtifact.TypeCode type = 3;
   */
  type?: RelatedArtifact_TypeCode;

  /**
   * Short label
   *
   * @generated from field: google.fhir.r4.core.String label = 4;
   */
  label?: String;

  /**
   * Brief description of the related artifact
   *
   * @generated from field: google.fhir.r4.core.String display = 5;
   */
  display?: String;

  /**
   * Bibliographic citation for the artifact
   *
   * @generated from field: google.fhir.r4.core.Markdown citation = 6;
   */
  citation?: Markdown;

  /**
   * Where the artifact can be accessed
   *
   * @generated from field: google.fhir.r4.core.Url url = 7;
   */
  url?: Url;

  /**
   * What document is being referenced
   *
   * @generated from field: google.fhir.r4.core.Attachment document = 8;
   */
  document?: Attachment;

  /**
   * What resource is being referenced
   *
   * @generated from field: google.fhir.r4.core.Canonical resource = 9;
   */
  resource?: Canonical;

  constructor(data?: PartialMessage<RelatedArtifact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedArtifact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: RelatedArtifact_TypeCode },
    { no: 4, name: "label", kind: "message", T: String },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "citation", kind: "message", T: Markdown },
    { no: 7, name: "url", kind: "message", T: Url },
    { no: 8, name: "document", kind: "message", T: Attachment },
    { no: 9, name: "resource", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedArtifact {
    return new RelatedArtifact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedArtifact {
    return new RelatedArtifact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedArtifact {
    return new RelatedArtifact().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedArtifact | PlainMessage<RelatedArtifact> | undefined, b: RelatedArtifact | PlainMessage<RelatedArtifact> | undefined): boolean {
    return proto3.util.equals(RelatedArtifact, a, b);
  }
}

/**
 * documentation | justification | citation | predecessor | successor |
 * derived-from | depends-on | composed-of
 *
 * @generated from message google.fhir.r4.core.RelatedArtifact.TypeCode
 */
export class RelatedArtifact_TypeCode extends Message<RelatedArtifact_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.RelatedArtifactTypeCode.Value value = 1;
   */
  value = RelatedArtifactTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RelatedArtifact_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedArtifact.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RelatedArtifactTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedArtifact_TypeCode {
    return new RelatedArtifact_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedArtifact_TypeCode {
    return new RelatedArtifact_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedArtifact_TypeCode {
    return new RelatedArtifact_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedArtifact_TypeCode | PlainMessage<RelatedArtifact_TypeCode> | undefined, b: RelatedArtifact_TypeCode | PlainMessage<RelatedArtifact_TypeCode> | undefined): boolean {
    return proto3.util.equals(RelatedArtifact_TypeCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SampledData.
 * A series of measurements taken by a device.
 * See http://hl7.org/fhir/StructureDefinition/SampledData
 *
 * @generated from message google.fhir.r4.core.SampledData
 */
export class SampledData extends Message<SampledData> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Zero value and units
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity origin = 3;
   */
  origin?: SimpleQuantity;

  /**
   * Number of milliseconds between samples
   *
   * @generated from field: google.fhir.r4.core.Decimal period = 4;
   */
  period?: Decimal;

  /**
   * Multiply data by this before adding to origin
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 5;
   */
  factor?: Decimal;

  /**
   * Lower limit of detection
   *
   * @generated from field: google.fhir.r4.core.Decimal lower_limit = 6;
   */
  lowerLimit?: Decimal;

  /**
   * Upper limit of detection
   *
   * @generated from field: google.fhir.r4.core.Decimal upper_limit = 7;
   */
  upperLimit?: Decimal;

  /**
   * Number of sample points at each time point
   *
   * @generated from field: google.fhir.r4.core.PositiveInt dimensions = 8;
   */
  dimensions?: PositiveInt;

  /**
   * Decimal values with spaces, or "E" | "U" | "L"
   *
   * @generated from field: google.fhir.r4.core.String data = 9;
   */
  data?: String;

  constructor(data?: PartialMessage<SampledData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SampledData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "origin", kind: "message", T: SimpleQuantity },
    { no: 4, name: "period", kind: "message", T: Decimal },
    { no: 5, name: "factor", kind: "message", T: Decimal },
    { no: 6, name: "lower_limit", kind: "message", T: Decimal },
    { no: 7, name: "upper_limit", kind: "message", T: Decimal },
    { no: 8, name: "dimensions", kind: "message", T: PositiveInt },
    { no: 9, name: "data", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SampledData {
    return new SampledData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SampledData {
    return new SampledData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SampledData {
    return new SampledData().fromJsonString(jsonString, options);
  }

  static equals(a: SampledData | PlainMessage<SampledData> | undefined, b: SampledData | PlainMessage<SampledData> | undefined): boolean {
    return proto3.util.equals(SampledData, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for Signature.
 * A Signature - XML DigSig, JWS, Graphical image of signature, etc.
 * See http://hl7.org/fhir/StructureDefinition/Signature
 *
 * @generated from message google.fhir.r4.core.Signature
 */
export class Signature extends Message<Signature> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Indication of the reason the entity signed the object(s)
   *
   * @generated from field: repeated google.fhir.r4.core.Coding type = 3;
   */
  type: Coding[] = [];

  /**
   * When the signature was created
   *
   * @generated from field: google.fhir.r4.core.Instant when = 4;
   */
  when?: Instant;

  /**
   * Who signed
   *
   * @generated from field: google.fhir.r4.core.Reference who = 5;
   */
  who?: Reference;

  /**
   * The party represented
   *
   * @generated from field: google.fhir.r4.core.Reference on_behalf_of = 6;
   */
  onBehalfOf?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Signature.TargetFormatCode target_format = 7;
   */
  targetFormat?: Signature_TargetFormatCode;

  /**
   * @generated from field: google.fhir.r4.core.Signature.SigFormatCode sig_format = 8;
   */
  sigFormat?: Signature_SigFormatCode;

  /**
   * The actual signature content (XML DigSig. JWS, picture, etc.)
   *
   * @generated from field: google.fhir.r4.core.Base64Binary data = 9;
   */
  data?: Base64Binary;

  constructor(data?: PartialMessage<Signature>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Signature";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: Coding, repeated: true },
    { no: 4, name: "when", kind: "message", T: Instant },
    { no: 5, name: "who", kind: "message", T: Reference },
    { no: 6, name: "on_behalf_of", kind: "message", T: Reference },
    { no: 7, name: "target_format", kind: "message", T: Signature_TargetFormatCode },
    { no: 8, name: "sig_format", kind: "message", T: Signature_SigFormatCode },
    { no: 9, name: "data", kind: "message", T: Base64Binary },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Signature {
    return new Signature().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Signature {
    return new Signature().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Signature {
    return new Signature().fromJsonString(jsonString, options);
  }

  static equals(a: Signature | PlainMessage<Signature> | undefined, b: Signature | PlainMessage<Signature> | undefined): boolean {
    return proto3.util.equals(Signature, a, b);
  }
}

/**
 * The technical format of the signed resources
 *
 * @generated from message google.fhir.r4.core.Signature.TargetFormatCode
 */
export class Signature_TargetFormatCode extends Message<Signature_TargetFormatCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<Signature_TargetFormatCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Signature.TargetFormatCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Signature_TargetFormatCode {
    return new Signature_TargetFormatCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Signature_TargetFormatCode {
    return new Signature_TargetFormatCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Signature_TargetFormatCode {
    return new Signature_TargetFormatCode().fromJsonString(jsonString, options);
  }

  static equals(a: Signature_TargetFormatCode | PlainMessage<Signature_TargetFormatCode> | undefined, b: Signature_TargetFormatCode | PlainMessage<Signature_TargetFormatCode> | undefined): boolean {
    return proto3.util.equals(Signature_TargetFormatCode, a, b);
  }
}

/**
 * The technical format of the signature
 *
 * @generated from message google.fhir.r4.core.Signature.SigFormatCode
 */
export class Signature_SigFormatCode extends Message<Signature_SigFormatCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<Signature_SigFormatCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Signature.SigFormatCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Signature_SigFormatCode {
    return new Signature_SigFormatCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Signature_SigFormatCode {
    return new Signature_SigFormatCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Signature_SigFormatCode {
    return new Signature_SigFormatCode().fromJsonString(jsonString, options);
  }

  static equals(a: Signature_SigFormatCode | PlainMessage<Signature_SigFormatCode> | undefined, b: Signature_SigFormatCode | PlainMessage<Signature_SigFormatCode> | undefined): boolean {
    return proto3.util.equals(Signature_SigFormatCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SimpleQuantity.
 * A fixed quantity (no comparator).
 * See http://hl7.org/fhir/StructureDefinition/SimpleQuantity
 *
 * @generated from message google.fhir.r4.core.SimpleQuantity
 */
export class SimpleQuantity extends Message<SimpleQuantity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Numerical value (with implicit precision)
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 3;
   */
  value?: Decimal;

  /**
   * Unit representation
   *
   * @generated from field: google.fhir.r4.core.String unit = 5;
   */
  unit?: String;

  /**
   * System that defines coded unit form
   *
   * @generated from field: google.fhir.r4.core.Uri system = 6;
   */
  system?: Uri;

  /**
   * Coded form of the unit
   *
   * @generated from field: google.fhir.r4.core.Code code = 7;
   */
  code?: Code;

  constructor(data?: PartialMessage<SimpleQuantity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SimpleQuantity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "value", kind: "message", T: Decimal },
    { no: 5, name: "unit", kind: "message", T: String },
    { no: 6, name: "system", kind: "message", T: Uri },
    { no: 7, name: "code", kind: "message", T: Code },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SimpleQuantity {
    return new SimpleQuantity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SimpleQuantity {
    return new SimpleQuantity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SimpleQuantity {
    return new SimpleQuantity().fromJsonString(jsonString, options);
  }

  static equals(a: SimpleQuantity | PlainMessage<SimpleQuantity> | undefined, b: SimpleQuantity | PlainMessage<SimpleQuantity> | undefined): boolean {
    return proto3.util.equals(SimpleQuantity, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for string.
 * Primitive Type string.
 * See http://hl7.org/fhir/StructureDefinition/string
 *
 * @generated from message google.fhir.r4.core.String
 */
export class String extends Message<String> {
  /**
   * Primitive value for string
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<String>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.String";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): String {
    return new String().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): String {
    return new String().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): String {
    return new String().fromJsonString(jsonString, options);
  }

  static equals(a: String | PlainMessage<String> | undefined, b: String | PlainMessage<String> | undefined): boolean {
    return proto3.util.equals(String, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for SubstanceAmount.
 * Chemical substances are a single substance type whose primary defining
 * element is the molecular structure. Chemical substances shall be defined on
 * the basis of their complete covalent molecular structure; the presence of a
 * salt (counter-ion) and/or solvates (water, alcohols) is also captured.
 * Purity, grade, physical form or particle size are not taken into account in
 * the definition of a chemical substance or in the assignment of a Substance
 * ID. See http://hl7.org/fhir/StructureDefinition/SubstanceAmount
 *
 * @generated from message google.fhir.r4.core.SubstanceAmount
 */
export class SubstanceAmount extends Message<SubstanceAmount> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.SubstanceAmount.AmountX amount = 4;
   */
  amount?: SubstanceAmount_AmountX;

  /**
   * Most elements that require a quantitative value will also have a field
   * called amount type. Amount type should always be specified because the
   * actual value of the amount is often dependent on it. EXAMPLE: In capturing
   * the actual relative amounts of substances or molecular fragments it is
   * essential to indicate whether the amount refers to a mole ratio or weight
   * ratio. For any given element an effort should be made to use same the
   * amount type for all related definitional elements
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept amount_type = 5;
   */
  amountType?: CodeableConcept;

  /**
   * A textual comment on a numeric value
   *
   * @generated from field: google.fhir.r4.core.String amount_text = 6;
   */
  amountText?: String;

  /**
   * @generated from field: google.fhir.r4.core.SubstanceAmount.ReferenceRange reference_range = 7;
   */
  referenceRange?: SubstanceAmount_ReferenceRange;

  constructor(data?: PartialMessage<SubstanceAmount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstanceAmount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "amount", kind: "message", T: SubstanceAmount_AmountX },
    { no: 5, name: "amount_type", kind: "message", T: CodeableConcept },
    { no: 6, name: "amount_text", kind: "message", T: String },
    { no: 7, name: "reference_range", kind: "message", T: SubstanceAmount_ReferenceRange },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstanceAmount {
    return new SubstanceAmount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstanceAmount {
    return new SubstanceAmount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstanceAmount {
    return new SubstanceAmount().fromJsonString(jsonString, options);
  }

  static equals(a: SubstanceAmount | PlainMessage<SubstanceAmount> | undefined, b: SubstanceAmount | PlainMessage<SubstanceAmount> | undefined): boolean {
    return proto3.util.equals(SubstanceAmount, a, b);
  }
}

/**
 * Used to capture quantitative values for a variety of elements. If only
 * limits are given, the arithmetic mean would be the average. If only a
 * single definite value for a given element is given, it would be captured in
 * this field
 *
 * @generated from message google.fhir.r4.core.SubstanceAmount.AmountX
 */
export class SubstanceAmount_AmountX extends Message<SubstanceAmount_AmountX> {
  /**
   * @generated from oneof google.fhir.r4.core.SubstanceAmount.AmountX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SubstanceAmount_AmountX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstanceAmount.AmountX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstanceAmount_AmountX {
    return new SubstanceAmount_AmountX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstanceAmount_AmountX {
    return new SubstanceAmount_AmountX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstanceAmount_AmountX {
    return new SubstanceAmount_AmountX().fromJsonString(jsonString, options);
  }

  static equals(a: SubstanceAmount_AmountX | PlainMessage<SubstanceAmount_AmountX> | undefined, b: SubstanceAmount_AmountX | PlainMessage<SubstanceAmount_AmountX> | undefined): boolean {
    return proto3.util.equals(SubstanceAmount_AmountX, a, b);
  }
}

/**
 * Reference range of possible or expected values
 *
 * @generated from message google.fhir.r4.core.SubstanceAmount.ReferenceRange
 */
export class SubstanceAmount_ReferenceRange extends Message<SubstanceAmount_ReferenceRange> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Lower limit possible or expected
   *
   * @generated from field: google.fhir.r4.core.Quantity low_limit = 3;
   */
  lowLimit?: Quantity;

  /**
   * Upper limit possible or expected
   *
   * @generated from field: google.fhir.r4.core.Quantity high_limit = 4;
   */
  highLimit?: Quantity;

  constructor(data?: PartialMessage<SubstanceAmount_ReferenceRange>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstanceAmount.ReferenceRange";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "low_limit", kind: "message", T: Quantity },
    { no: 4, name: "high_limit", kind: "message", T: Quantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstanceAmount_ReferenceRange {
    return new SubstanceAmount_ReferenceRange().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstanceAmount_ReferenceRange {
    return new SubstanceAmount_ReferenceRange().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstanceAmount_ReferenceRange {
    return new SubstanceAmount_ReferenceRange().fromJsonString(jsonString, options);
  }

  static equals(a: SubstanceAmount_ReferenceRange | PlainMessage<SubstanceAmount_ReferenceRange> | undefined, b: SubstanceAmount_ReferenceRange | PlainMessage<SubstanceAmount_ReferenceRange> | undefined): boolean {
    return proto3.util.equals(SubstanceAmount_ReferenceRange, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for time.
 * Primitive Type time.
 * See http://hl7.org/fhir/StructureDefinition/time
 *
 * @generated from message google.fhir.r4.core.Time
 */
export class Time extends Message<Time> {
  /**
   * The absolute time of the event as a Unix epoch in mircoseconds.
   *
   * @generated from field: int64 value_us = 1;
   */
  valueUs = protoInt64.zero;

  /**
   * @generated from field: google.fhir.r4.core.Time.Precision precision = 2;
   */
  precision = Time_Precision.PRECISION_UNSPECIFIED;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 3;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 4;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Time>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Time";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value_us", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "precision", kind: "enum", T: proto3.getEnumType(Time_Precision) },
    { no: 3, name: "id", kind: "message", T: String },
    { no: 4, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Time {
    return new Time().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Time {
    return new Time().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Time {
    return new Time().fromJsonString(jsonString, options);
  }

  static equals(a: Time | PlainMessage<Time> | undefined, b: Time | PlainMessage<Time> | undefined): boolean {
    return proto3.util.equals(Time, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.Time.Precision
 */
export enum Time_Precision {
  /**
   * @generated from enum value: PRECISION_UNSPECIFIED = 0;
   */
  PRECISION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SECOND = 1;
   */
  SECOND = 1,

  /**
   * @generated from enum value: MILLISECOND = 2;
   */
  MILLISECOND = 2,

  /**
   * @generated from enum value: MICROSECOND = 3;
   */
  MICROSECOND = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(Time_Precision)
proto3.util.setEnumType(Time_Precision, "google.fhir.r4.core.Time.Precision", [
  { no: 0, name: "PRECISION_UNSPECIFIED" },
  { no: 1, name: "SECOND" },
  { no: 2, name: "MILLISECOND" },
  { no: 3, name: "MICROSECOND" },
]);

/**
 * Auto-generated from StructureDefinition for Timing.
 * A timing schedule that specifies an event that may occur multiple times.
 * See http://hl7.org/fhir/StructureDefinition/Timing
 *
 * @generated from message google.fhir.r4.core.Timing
 */
export class Timing extends Message<Timing> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When the event occurs
   *
   * @generated from field: repeated google.fhir.r4.core.DateTime event = 4;
   */
  event: DateTime[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Timing.Repeat repeat = 5;
   */
  repeat?: Timing_Repeat;

  /**
   * BID | TID | QID | AM | PM | QD | QOD | +
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  constructor(data?: PartialMessage<Timing>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "event", kind: "message", T: DateTime, repeated: true },
    { no: 5, name: "repeat", kind: "message", T: Timing_Repeat },
    { no: 6, name: "code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing {
    return new Timing().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing {
    return new Timing().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing {
    return new Timing().fromJsonString(jsonString, options);
  }

  static equals(a: Timing | PlainMessage<Timing> | undefined, b: Timing | PlainMessage<Timing> | undefined): boolean {
    return proto3.util.equals(Timing, a, b);
  }
}

/**
 * When the event is to occur
 *
 * @generated from message google.fhir.r4.core.Timing.Repeat
 */
export class Timing_Repeat extends Message<Timing_Repeat> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Timing.Repeat.BoundsX bounds = 3;
   */
  bounds?: Timing_Repeat_BoundsX;

  /**
   * Number of times to repeat
   *
   * @generated from field: google.fhir.r4.core.PositiveInt count = 4;
   */
  count?: PositiveInt;

  /**
   * Maximum number of times to repeat
   *
   * @generated from field: google.fhir.r4.core.PositiveInt count_max = 5;
   */
  countMax?: PositiveInt;

  /**
   * How long when it happens
   *
   * @generated from field: google.fhir.r4.core.Decimal duration = 6;
   */
  duration?: Decimal;

  /**
   * How long when it happens (Max)
   *
   * @generated from field: google.fhir.r4.core.Decimal duration_max = 7;
   */
  durationMax?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Timing.Repeat.DurationUnitCode duration_unit = 8;
   */
  durationUnit?: Timing_Repeat_DurationUnitCode;

  /**
   * Event occurs frequency times per period
   *
   * @generated from field: google.fhir.r4.core.PositiveInt frequency = 9;
   */
  frequency?: PositiveInt;

  /**
   * Event occurs up to frequencyMax times per period
   *
   * @generated from field: google.fhir.r4.core.PositiveInt frequency_max = 10;
   */
  frequencyMax?: PositiveInt;

  /**
   * Event occurs frequency times per period
   *
   * @generated from field: google.fhir.r4.core.Decimal period = 11;
   */
  period?: Decimal;

  /**
   * Upper limit of period (3-4 hours)
   *
   * @generated from field: google.fhir.r4.core.Decimal period_max = 12;
   */
  periodMax?: Decimal;

  /**
   * @generated from field: google.fhir.r4.core.Timing.Repeat.PeriodUnitCode period_unit = 13;
   */
  periodUnit?: Timing_Repeat_PeriodUnitCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.Timing.Repeat.DayOfWeekCode day_of_week = 14;
   */
  dayOfWeek: Timing_Repeat_DayOfWeekCode[] = [];

  /**
   * Time of day for action
   *
   * @generated from field: repeated google.fhir.r4.core.Time time_of_day = 15;
   */
  timeOfDay: Time[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.Timing.Repeat.WhenCode when = 16;
   */
  when: Timing_Repeat_WhenCode[] = [];

  /**
   * Minutes from event (before or after)
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt offset = 17;
   */
  offset?: UnsignedInt;

  constructor(data?: PartialMessage<Timing_Repeat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing.Repeat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "bounds", kind: "message", T: Timing_Repeat_BoundsX },
    { no: 4, name: "count", kind: "message", T: PositiveInt },
    { no: 5, name: "count_max", kind: "message", T: PositiveInt },
    { no: 6, name: "duration", kind: "message", T: Decimal },
    { no: 7, name: "duration_max", kind: "message", T: Decimal },
    { no: 8, name: "duration_unit", kind: "message", T: Timing_Repeat_DurationUnitCode },
    { no: 9, name: "frequency", kind: "message", T: PositiveInt },
    { no: 10, name: "frequency_max", kind: "message", T: PositiveInt },
    { no: 11, name: "period", kind: "message", T: Decimal },
    { no: 12, name: "period_max", kind: "message", T: Decimal },
    { no: 13, name: "period_unit", kind: "message", T: Timing_Repeat_PeriodUnitCode },
    { no: 14, name: "day_of_week", kind: "message", T: Timing_Repeat_DayOfWeekCode, repeated: true },
    { no: 15, name: "time_of_day", kind: "message", T: Time, repeated: true },
    { no: 16, name: "when", kind: "message", T: Timing_Repeat_WhenCode, repeated: true },
    { no: 17, name: "offset", kind: "message", T: UnsignedInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing_Repeat {
    return new Timing_Repeat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing_Repeat {
    return new Timing_Repeat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing_Repeat {
    return new Timing_Repeat().fromJsonString(jsonString, options);
  }

  static equals(a: Timing_Repeat | PlainMessage<Timing_Repeat> | undefined, b: Timing_Repeat | PlainMessage<Timing_Repeat> | undefined): boolean {
    return proto3.util.equals(Timing_Repeat, a, b);
  }
}

/**
 * Length/Range of lengths, or (Start and/or end) limits
 *
 * @generated from message google.fhir.r4.core.Timing.Repeat.BoundsX
 */
export class Timing_Repeat_BoundsX extends Message<Timing_Repeat_BoundsX> {
  /**
   * @generated from oneof google.fhir.r4.core.Timing.Repeat.BoundsX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 1;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Timing_Repeat_BoundsX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing.Repeat.BoundsX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing_Repeat_BoundsX {
    return new Timing_Repeat_BoundsX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing_Repeat_BoundsX {
    return new Timing_Repeat_BoundsX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing_Repeat_BoundsX {
    return new Timing_Repeat_BoundsX().fromJsonString(jsonString, options);
  }

  static equals(a: Timing_Repeat_BoundsX | PlainMessage<Timing_Repeat_BoundsX> | undefined, b: Timing_Repeat_BoundsX | PlainMessage<Timing_Repeat_BoundsX> | undefined): boolean {
    return proto3.util.equals(Timing_Repeat_BoundsX, a, b);
  }
}

/**
 * s | min | h | d | wk | mo | a - unit of time (UCUM)
 *
 * @generated from message google.fhir.r4.core.Timing.Repeat.DurationUnitCode
 */
export class Timing_Repeat_DurationUnitCode extends Message<Timing_Repeat_DurationUnitCode> {
  /**
   * @generated from field: google.fhir.r4.core.UnitsOfTimeValueSet.Value value = 1;
   */
  value = UnitsOfTimeValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Timing_Repeat_DurationUnitCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing.Repeat.DurationUnitCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UnitsOfTimeValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing_Repeat_DurationUnitCode {
    return new Timing_Repeat_DurationUnitCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing_Repeat_DurationUnitCode {
    return new Timing_Repeat_DurationUnitCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing_Repeat_DurationUnitCode {
    return new Timing_Repeat_DurationUnitCode().fromJsonString(jsonString, options);
  }

  static equals(a: Timing_Repeat_DurationUnitCode | PlainMessage<Timing_Repeat_DurationUnitCode> | undefined, b: Timing_Repeat_DurationUnitCode | PlainMessage<Timing_Repeat_DurationUnitCode> | undefined): boolean {
    return proto3.util.equals(Timing_Repeat_DurationUnitCode, a, b);
  }
}

/**
 * s | min | h | d | wk | mo | a - unit of time (UCUM)
 *
 * @generated from message google.fhir.r4.core.Timing.Repeat.PeriodUnitCode
 */
export class Timing_Repeat_PeriodUnitCode extends Message<Timing_Repeat_PeriodUnitCode> {
  /**
   * @generated from field: google.fhir.r4.core.UnitsOfTimeValueSet.Value value = 1;
   */
  value = UnitsOfTimeValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Timing_Repeat_PeriodUnitCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing.Repeat.PeriodUnitCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UnitsOfTimeValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing_Repeat_PeriodUnitCode {
    return new Timing_Repeat_PeriodUnitCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing_Repeat_PeriodUnitCode {
    return new Timing_Repeat_PeriodUnitCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing_Repeat_PeriodUnitCode {
    return new Timing_Repeat_PeriodUnitCode().fromJsonString(jsonString, options);
  }

  static equals(a: Timing_Repeat_PeriodUnitCode | PlainMessage<Timing_Repeat_PeriodUnitCode> | undefined, b: Timing_Repeat_PeriodUnitCode | PlainMessage<Timing_Repeat_PeriodUnitCode> | undefined): boolean {
    return proto3.util.equals(Timing_Repeat_PeriodUnitCode, a, b);
  }
}

/**
 * mon | tue | wed | thu | fri | sat | sun
 *
 * @generated from message google.fhir.r4.core.Timing.Repeat.DayOfWeekCode
 */
export class Timing_Repeat_DayOfWeekCode extends Message<Timing_Repeat_DayOfWeekCode> {
  /**
   * @generated from field: google.fhir.r4.core.DaysOfWeekCode.Value value = 1;
   */
  value = DaysOfWeekCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Timing_Repeat_DayOfWeekCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing.Repeat.DayOfWeekCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DaysOfWeekCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing_Repeat_DayOfWeekCode {
    return new Timing_Repeat_DayOfWeekCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing_Repeat_DayOfWeekCode {
    return new Timing_Repeat_DayOfWeekCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing_Repeat_DayOfWeekCode {
    return new Timing_Repeat_DayOfWeekCode().fromJsonString(jsonString, options);
  }

  static equals(a: Timing_Repeat_DayOfWeekCode | PlainMessage<Timing_Repeat_DayOfWeekCode> | undefined, b: Timing_Repeat_DayOfWeekCode | PlainMessage<Timing_Repeat_DayOfWeekCode> | undefined): boolean {
    return proto3.util.equals(Timing_Repeat_DayOfWeekCode, a, b);
  }
}

/**
 * Code for time period of occurrence
 *
 * @generated from message google.fhir.r4.core.Timing.Repeat.WhenCode
 */
export class Timing_Repeat_WhenCode extends Message<Timing_Repeat_WhenCode> {
  /**
   * @generated from field: google.fhir.r4.core.EventTimingValueSet.Value value = 1;
   */
  value = EventTimingValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Timing_Repeat_WhenCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Timing.Repeat.WhenCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EventTimingValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Timing_Repeat_WhenCode {
    return new Timing_Repeat_WhenCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Timing_Repeat_WhenCode {
    return new Timing_Repeat_WhenCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Timing_Repeat_WhenCode {
    return new Timing_Repeat_WhenCode().fromJsonString(jsonString, options);
  }

  static equals(a: Timing_Repeat_WhenCode | PlainMessage<Timing_Repeat_WhenCode> | undefined, b: Timing_Repeat_WhenCode | PlainMessage<Timing_Repeat_WhenCode> | undefined): boolean {
    return proto3.util.equals(Timing_Repeat_WhenCode, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for TriggerDefinition.
 * Defines an expected trigger for a module.
 * See http://hl7.org/fhir/StructureDefinition/TriggerDefinition
 *
 * @generated from message google.fhir.r4.core.TriggerDefinition
 */
export class TriggerDefinition extends Message<TriggerDefinition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TriggerDefinition.TypeCode type = 3;
   */
  type?: TriggerDefinition_TypeCode;

  /**
   * Name or URI that identifies the event
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.r4.core.TriggerDefinition.TimingX timing = 5;
   */
  timing?: TriggerDefinition_TimingX;

  /**
   * Triggering data of the event (multiple = 'and')
   *
   * @generated from field: repeated google.fhir.r4.core.DataRequirement data = 6;
   */
  data: DataRequirement[] = [];

  /**
   * Whether the event triggers (boolean expression)
   *
   * @generated from field: google.fhir.r4.core.Expression condition = 7;
   */
  condition?: Expression;

  constructor(data?: PartialMessage<TriggerDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TriggerDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "type", kind: "message", T: TriggerDefinition_TypeCode },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "timing", kind: "message", T: TriggerDefinition_TimingX },
    { no: 6, name: "data", kind: "message", T: DataRequirement, repeated: true },
    { no: 7, name: "condition", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerDefinition {
    return new TriggerDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerDefinition {
    return new TriggerDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerDefinition {
    return new TriggerDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerDefinition | PlainMessage<TriggerDefinition> | undefined, b: TriggerDefinition | PlainMessage<TriggerDefinition> | undefined): boolean {
    return proto3.util.equals(TriggerDefinition, a, b);
  }
}

/**
 * named-event | periodic | data-changed | data-added | data-modified |
 * data-removed | data-accessed | data-access-ended
 *
 * @generated from message google.fhir.r4.core.TriggerDefinition.TypeCode
 */
export class TriggerDefinition_TypeCode extends Message<TriggerDefinition_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.TriggerTypeCode.Value value = 1;
   */
  value = TriggerTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TriggerDefinition_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TriggerDefinition.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TriggerTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerDefinition_TypeCode {
    return new TriggerDefinition_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerDefinition_TypeCode {
    return new TriggerDefinition_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerDefinition_TypeCode {
    return new TriggerDefinition_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerDefinition_TypeCode | PlainMessage<TriggerDefinition_TypeCode> | undefined, b: TriggerDefinition_TypeCode | PlainMessage<TriggerDefinition_TypeCode> | undefined): boolean {
    return proto3.util.equals(TriggerDefinition_TypeCode, a, b);
  }
}

/**
 * Timing of the event
 *
 * @generated from message google.fhir.r4.core.TriggerDefinition.TimingX
 */
export class TriggerDefinition_TimingX extends Message<TriggerDefinition_TimingX> {
  /**
   * @generated from oneof google.fhir.r4.core.TriggerDefinition.TimingX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 3;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 4;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<TriggerDefinition_TimingX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TriggerDefinition.TimingX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 3, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 4, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerDefinition_TimingX {
    return new TriggerDefinition_TimingX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerDefinition_TimingX {
    return new TriggerDefinition_TimingX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerDefinition_TimingX {
    return new TriggerDefinition_TimingX().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerDefinition_TimingX | PlainMessage<TriggerDefinition_TimingX> | undefined, b: TriggerDefinition_TimingX | PlainMessage<TriggerDefinition_TimingX> | undefined): boolean {
    return proto3.util.equals(TriggerDefinition_TimingX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for unsignedInt.
 * Primitive Type unsignedInt.
 * See http://hl7.org/fhir/StructureDefinition/unsignedInt
 *
 * @generated from message google.fhir.r4.core.UnsignedInt
 */
export class UnsignedInt extends Message<UnsignedInt> {
  /**
   * Primitive value for unsignedInt
   *
   * @generated from field: uint32 value = 1;
   */
  value = 0;

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<UnsignedInt>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.UnsignedInt";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnsignedInt {
    return new UnsignedInt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnsignedInt {
    return new UnsignedInt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnsignedInt {
    return new UnsignedInt().fromJsonString(jsonString, options);
  }

  static equals(a: UnsignedInt | PlainMessage<UnsignedInt> | undefined, b: UnsignedInt | PlainMessage<UnsignedInt> | undefined): boolean {
    return proto3.util.equals(UnsignedInt, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for uri.
 * Primitive Type uri.
 * See http://hl7.org/fhir/StructureDefinition/uri
 *
 * @generated from message google.fhir.r4.core.Uri
 */
export class Uri extends Message<Uri> {
  /**
   * Primitive value for uri
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Uri>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Uri";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Uri {
    return new Uri().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Uri {
    return new Uri().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Uri {
    return new Uri().fromJsonString(jsonString, options);
  }

  static equals(a: Uri | PlainMessage<Uri> | undefined, b: Uri | PlainMessage<Uri> | undefined): boolean {
    return proto3.util.equals(Uri, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for url.
 * Primitive Type url.
 * See http://hl7.org/fhir/StructureDefinition/url
 *
 * @generated from message google.fhir.r4.core.Url
 */
export class Url extends Message<Url> {
  /**
   * Primitive value for url
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Url>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Url";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Url {
    return new Url().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Url {
    return new Url().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Url {
    return new Url().fromJsonString(jsonString, options);
  }

  static equals(a: Url | PlainMessage<Url> | undefined, b: Url | PlainMessage<Url> | undefined): boolean {
    return proto3.util.equals(Url, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for UsageContext.
 * Describes the context of use for a conformance or knowledge resource.
 * See http://hl7.org/fhir/StructureDefinition/UsageContext
 *
 * @generated from message google.fhir.r4.core.UsageContext
 */
export class UsageContext extends Message<UsageContext> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Type of context being specified
   *
   * @generated from field: google.fhir.r4.core.Coding code = 3;
   */
  code?: Coding;

  /**
   * @generated from field: google.fhir.r4.core.UsageContext.ValueX value = 4;
   */
  value?: UsageContext_ValueX;

  constructor(data?: PartialMessage<UsageContext>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.UsageContext";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "code", kind: "message", T: Coding },
    { no: 4, name: "value", kind: "message", T: UsageContext_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsageContext {
    return new UsageContext().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsageContext {
    return new UsageContext().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsageContext {
    return new UsageContext().fromJsonString(jsonString, options);
  }

  static equals(a: UsageContext | PlainMessage<UsageContext> | undefined, b: UsageContext | PlainMessage<UsageContext> | undefined): boolean {
    return proto3.util.equals(UsageContext, a, b);
  }
}

/**
 * Value that defines the context
 *
 * @generated from message google.fhir.r4.core.UsageContext.ValueX
 */
export class UsageContext_ValueX extends Message<UsageContext_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.UsageContext.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 2;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 3;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 4;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UsageContext_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.UsageContext.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 3, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 4, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UsageContext_ValueX {
    return new UsageContext_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UsageContext_ValueX {
    return new UsageContext_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UsageContext_ValueX {
    return new UsageContext_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: UsageContext_ValueX | PlainMessage<UsageContext_ValueX> | undefined, b: UsageContext_ValueX | PlainMessage<UsageContext_ValueX> | undefined): boolean {
    return proto3.util.equals(UsageContext_ValueX, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for uuid.
 * Primitive Type uuid.
 * See http://hl7.org/fhir/StructureDefinition/uuid
 *
 * @generated from message google.fhir.r4.core.Uuid
 */
export class Uuid extends Message<Uuid> {
  /**
   * Primitive value for uuid
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Uuid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Uuid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Uuid {
    return new Uuid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Uuid {
    return new Uuid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Uuid {
    return new Uuid().fromJsonString(jsonString, options);
  }

  static equals(a: Uuid | PlainMessage<Uuid> | undefined, b: Uuid | PlainMessage<Uuid> | undefined): boolean {
    return proto3.util.equals(Uuid, a, b);
  }
}

/**
 * Auto-generated from StructureDefinition for xhtml.
 * Primitive Type xhtml.
 * See http://hl7.org/fhir/StructureDefinition/xhtml
 *
 * @generated from message google.fhir.r4.core.Xhtml
 */
export class Xhtml extends Message<Xhtml> {
  /**
   * Actual xhtml
   *
   * @generated from field: string value = 1;
   */
  value = "";

  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  constructor(data?: PartialMessage<Xhtml>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Xhtml";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Xhtml {
    return new Xhtml().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Xhtml {
    return new Xhtml().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Xhtml {
    return new Xhtml().fromJsonString(jsonString, options);
  }

  static equals(a: Xhtml | PlainMessage<Xhtml> | undefined, b: Xhtml | PlainMessage<Xhtml> | undefined): boolean {
    return proto3.util.equals(Xhtml, a, b);
  }
}

/**
 * Specialization of Coding that drops the system and code fields.
 * Fields that use this message must be annotated with
 * fhir_inlined_coding_system and fhir_inlined_coding_code.
 * TODO(b/244184211): autogenerate this.
 *
 * @generated from message google.fhir.r4.core.CodingWithFixedCode
 */
export class CodingWithFixedCode extends Message<CodingWithFixedCode> {
  /**
   * xml:id (or equivalent in JSON)
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional Content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Version of the system - if relevant
   *
   * @generated from field: google.fhir.r4.core.String version = 4;
   */
  version?: String;

  /**
   * Representation defined by the system
   *
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  /**
   * If this coding was chosen directly by the user
   *
   * @generated from field: google.fhir.r4.core.Boolean user_selected = 7;
   */
  userSelected?: Boolean;

  constructor(data?: PartialMessage<CodingWithFixedCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodingWithFixedCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "version", kind: "message", T: String },
    { no: 6, name: "display", kind: "message", T: String },
    { no: 7, name: "user_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodingWithFixedCode {
    return new CodingWithFixedCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodingWithFixedCode {
    return new CodingWithFixedCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodingWithFixedCode {
    return new CodingWithFixedCode().fromJsonString(jsonString, options);
  }

  static equals(a: CodingWithFixedCode | PlainMessage<CodingWithFixedCode> | undefined, b: CodingWithFixedCode | PlainMessage<CodingWithFixedCode> | undefined): boolean {
    return proto3.util.equals(CodingWithFixedCode, a, b);
  }
}

