//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/profiles/shareable_value_set.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, Date, DateTime, Decimal, Extension, Id, Identifier, Integer, Markdown, Meta, Narrative, String, Uri, UsageContext } from "../datatypes_pb.js";
import { FilterOperatorCode_Value, PublicationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Shareable ValueSet.
 * A set of codes drawn from one or more code systems.
 * See http://hl7.org/fhir/StructureDefinition/shareablevalueset
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet
 */
export class ShareableValueSet extends Message<ShareableValueSet> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this value set, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the value set (business identifier)
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the value set
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this value set (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this value set (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.ShareableValueSet.StatusCode status = 15;
   */
  status?: ShareableValueSet_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 18;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 19;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the value set
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for value set (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Indicates whether or not any change to the content logical definition may
   * occur
   *
   * @generated from field: google.fhir.r4.core.Boolean immutable = 23;
   */
  immutable?: Boolean;

  /**
   * Why this value set is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 24;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 25;
   */
  copyright?: Markdown;

  /**
   * @generated from field: google.fhir.r4.core.ShareableValueSet.Compose compose = 26;
   */
  compose?: ShareableValueSet_Compose;

  /**
   * @generated from field: google.fhir.r4.core.ShareableValueSet.Expansion expansion = 27;
   */
  expansion?: ShareableValueSet_Expansion;

  constructor(data?: PartialMessage<ShareableValueSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "status", kind: "message", T: ShareableValueSet_StatusCode },
    { no: 16, name: "experimental", kind: "message", T: Boolean },
    { no: 17, name: "date", kind: "message", T: DateTime },
    { no: 18, name: "publisher", kind: "message", T: String },
    { no: 19, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 20, name: "description", kind: "message", T: Markdown },
    { no: 21, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 22, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "immutable", kind: "message", T: Boolean },
    { no: 24, name: "purpose", kind: "message", T: Markdown },
    { no: 25, name: "copyright", kind: "message", T: Markdown },
    { no: 26, name: "compose", kind: "message", T: ShareableValueSet_Compose },
    { no: 27, name: "expansion", kind: "message", T: ShareableValueSet_Expansion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet {
    return new ShareableValueSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet {
    return new ShareableValueSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet {
    return new ShareableValueSet().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet | PlainMessage<ShareableValueSet> | undefined, b: ShareableValueSet | PlainMessage<ShareableValueSet> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.StatusCode
 */
export class ShareableValueSet_StatusCode extends Message<ShareableValueSet_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_StatusCode {
    return new ShareableValueSet_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_StatusCode {
    return new ShareableValueSet_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_StatusCode {
    return new ShareableValueSet_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_StatusCode | PlainMessage<ShareableValueSet_StatusCode> | undefined, b: ShareableValueSet_StatusCode | PlainMessage<ShareableValueSet_StatusCode> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_StatusCode, a, b);
  }
}

/**
 * Content logical definition of the value set (CLD)
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Compose
 */
export class ShareableValueSet_Compose extends Message<ShareableValueSet_Compose> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Fixed date for references with no specified version (transitive)
   *
   * @generated from field: google.fhir.r4.core.Date locked_date = 4;
   */
  lockedDate?: Date;

  /**
   * Whether inactive codes are in the value set
   *
   * @generated from field: google.fhir.r4.core.Boolean inactive = 5;
   */
  inactive?: Boolean;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet include = 6;
   */
  include: ShareableValueSet_Compose_ConceptSet[] = [];

  /**
   * Explicitly exclude codes from a code system or other value sets
   *
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet exclude = 7;
   */
  exclude: ShareableValueSet_Compose_ConceptSet[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_Compose>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Compose";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "locked_date", kind: "message", T: Date },
    { no: 5, name: "inactive", kind: "message", T: Boolean },
    { no: 6, name: "include", kind: "message", T: ShareableValueSet_Compose_ConceptSet, repeated: true },
    { no: 7, name: "exclude", kind: "message", T: ShareableValueSet_Compose_ConceptSet, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Compose {
    return new ShareableValueSet_Compose().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose {
    return new ShareableValueSet_Compose().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose {
    return new ShareableValueSet_Compose().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Compose | PlainMessage<ShareableValueSet_Compose> | undefined, b: ShareableValueSet_Compose | PlainMessage<ShareableValueSet_Compose> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Compose, a, b);
  }
}

/**
 * Include one or more codes from a code system or other value set(s)
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet
 */
export class ShareableValueSet_Compose_ConceptSet extends Message<ShareableValueSet_Compose_ConceptSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The system the codes come from
   *
   * @generated from field: google.fhir.r4.core.Uri system = 4;
   */
  system?: Uri;

  /**
   * Specific version of the code system referred to
   *
   * @generated from field: google.fhir.r4.core.String version = 5;
   */
  version?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference concept = 6;
   */
  concept: ShareableValueSet_Compose_ConceptSet_ConceptReference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.Filter filter = 7;
   */
  filter: ShareableValueSet_Compose_ConceptSet_Filter[] = [];

  /**
   * Select the contents included in this value set
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical value_set = 8;
   */
  valueSet: Canonical[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_Compose_ConceptSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "version", kind: "message", T: String },
    { no: 6, name: "concept", kind: "message", T: ShareableValueSet_Compose_ConceptSet_ConceptReference, repeated: true },
    { no: 7, name: "filter", kind: "message", T: ShareableValueSet_Compose_ConceptSet_Filter, repeated: true },
    { no: 8, name: "value_set", kind: "message", T: Canonical, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Compose_ConceptSet {
    return new ShareableValueSet_Compose_ConceptSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet {
    return new ShareableValueSet_Compose_ConceptSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet {
    return new ShareableValueSet_Compose_ConceptSet().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Compose_ConceptSet | PlainMessage<ShareableValueSet_Compose_ConceptSet> | undefined, b: ShareableValueSet_Compose_ConceptSet | PlainMessage<ShareableValueSet_Compose_ConceptSet> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Compose_ConceptSet, a, b);
  }
}

/**
 * A concept defined in the system
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference
 */
export class ShareableValueSet_Compose_ConceptSet_ConceptReference extends Message<ShareableValueSet_Compose_ConceptSet_ConceptReference> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code or expression from system
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * Text to display for this code for this value set in this valueset
   *
   * @generated from field: google.fhir.r4.core.String display = 5;
   */
  display?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference.Designation designation = 6;
   */
  designation: ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_Compose_ConceptSet_ConceptReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "designation", kind: "message", T: ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Compose_ConceptSet_ConceptReference {
    return new ShareableValueSet_Compose_ConceptSet_ConceptReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_ConceptReference {
    return new ShareableValueSet_Compose_ConceptSet_ConceptReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_ConceptReference {
    return new ShareableValueSet_Compose_ConceptSet_ConceptReference().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Compose_ConceptSet_ConceptReference | PlainMessage<ShareableValueSet_Compose_ConceptSet_ConceptReference> | undefined, b: ShareableValueSet_Compose_ConceptSet_ConceptReference | PlainMessage<ShareableValueSet_Compose_ConceptSet_ConceptReference> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Compose_ConceptSet_ConceptReference, a, b);
  }
}

/**
 * Additional representations for this concept
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference.Designation
 */
export class ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation extends Message<ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Types of uses of designations
   *
   * @generated from field: google.fhir.r4.core.Coding use = 5;
   */
  use?: Coding;

  /**
   * The text value for this designation
   *
   * @generated from field: google.fhir.r4.core.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "use", kind: "message", T: Coding },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation {
    return new ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation {
    return new ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation {
    return new ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation | PlainMessage<ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation> | undefined, b: ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation | PlainMessage<ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation, a, b);
  }
}

/**
 * Select codes/concepts by their properties (including relationships)
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.Filter
 */
export class ShareableValueSet_Compose_ConceptSet_Filter extends Message<ShareableValueSet_Compose_ConceptSet_Filter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A property/filter defined by the code system
   *
   * @generated from field: google.fhir.r4.core.Code property = 4;
   */
  property?: Code;

  /**
   * @generated from field: google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.Filter.OpCode op = 5;
   */
  op?: ShareableValueSet_Compose_ConceptSet_Filter_OpCode;

  /**
   * Code from the system, or regex criteria, or boolean value for exists
   *
   * @generated from field: google.fhir.r4.core.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<ShareableValueSet_Compose_ConceptSet_Filter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.Filter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "property", kind: "message", T: Code },
    { no: 5, name: "op", kind: "message", T: ShareableValueSet_Compose_ConceptSet_Filter_OpCode },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Compose_ConceptSet_Filter {
    return new ShareableValueSet_Compose_ConceptSet_Filter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_Filter {
    return new ShareableValueSet_Compose_ConceptSet_Filter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_Filter {
    return new ShareableValueSet_Compose_ConceptSet_Filter().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Compose_ConceptSet_Filter | PlainMessage<ShareableValueSet_Compose_ConceptSet_Filter> | undefined, b: ShareableValueSet_Compose_ConceptSet_Filter | PlainMessage<ShareableValueSet_Compose_ConceptSet_Filter> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Compose_ConceptSet_Filter, a, b);
  }
}

/**
 * = | is-a | descendent-of | is-not-a | regex | in | not-in |
 * generalizes | exists
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.Filter.OpCode
 */
export class ShareableValueSet_Compose_ConceptSet_Filter_OpCode extends Message<ShareableValueSet_Compose_ConceptSet_Filter_OpCode> {
  /**
   * @generated from field: google.fhir.r4.core.FilterOperatorCode.Value value = 1;
   */
  value = FilterOperatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_Compose_ConceptSet_Filter_OpCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.Filter.OpCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FilterOperatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Compose_ConceptSet_Filter_OpCode {
    return new ShareableValueSet_Compose_ConceptSet_Filter_OpCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_Filter_OpCode {
    return new ShareableValueSet_Compose_ConceptSet_Filter_OpCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Compose_ConceptSet_Filter_OpCode {
    return new ShareableValueSet_Compose_ConceptSet_Filter_OpCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Compose_ConceptSet_Filter_OpCode | PlainMessage<ShareableValueSet_Compose_ConceptSet_Filter_OpCode> | undefined, b: ShareableValueSet_Compose_ConceptSet_Filter_OpCode | PlainMessage<ShareableValueSet_Compose_ConceptSet_Filter_OpCode> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Compose_ConceptSet_Filter_OpCode, a, b);
  }
}

/**
 * Used when the value set is "expanded"
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Expansion
 */
export class ShareableValueSet_Expansion extends Message<ShareableValueSet_Expansion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies the value set expansion (business identifier)
   *
   * @generated from field: google.fhir.r4.core.Uri identifier = 4;
   */
  identifier?: Uri;

  /**
   * Time ValueSet expansion happened
   *
   * @generated from field: google.fhir.r4.core.DateTime timestamp = 5;
   */
  timestamp?: DateTime;

  /**
   * Total number of codes in the expansion
   *
   * @generated from field: google.fhir.r4.core.Integer total = 6;
   */
  total?: Integer;

  /**
   * Offset at which this resource starts
   *
   * @generated from field: google.fhir.r4.core.Integer offset = 7;
   */
  offset?: Integer;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Expansion.Parameter parameter = 8;
   */
  parameter: ShareableValueSet_Expansion_Parameter[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Expansion.Contains contains = 9;
   */
  contains: ShareableValueSet_Expansion_Contains[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_Expansion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Expansion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Uri },
    { no: 5, name: "timestamp", kind: "message", T: DateTime },
    { no: 6, name: "total", kind: "message", T: Integer },
    { no: 7, name: "offset", kind: "message", T: Integer },
    { no: 8, name: "parameter", kind: "message", T: ShareableValueSet_Expansion_Parameter, repeated: true },
    { no: 9, name: "contains", kind: "message", T: ShareableValueSet_Expansion_Contains, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Expansion {
    return new ShareableValueSet_Expansion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion {
    return new ShareableValueSet_Expansion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion {
    return new ShareableValueSet_Expansion().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Expansion | PlainMessage<ShareableValueSet_Expansion> | undefined, b: ShareableValueSet_Expansion | PlainMessage<ShareableValueSet_Expansion> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Expansion, a, b);
  }
}

/**
 * Parameter that controlled the expansion process
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Expansion.Parameter
 */
export class ShareableValueSet_Expansion_Parameter extends Message<ShareableValueSet_Expansion_Parameter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name as assigned by the client or server
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.r4.core.ShareableValueSet.Expansion.Parameter.ValueX value = 5;
   */
  value?: ShareableValueSet_Expansion_Parameter_ValueX;

  constructor(data?: PartialMessage<ShareableValueSet_Expansion_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Expansion.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: ShareableValueSet_Expansion_Parameter_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Expansion_Parameter {
    return new ShareableValueSet_Expansion_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion_Parameter {
    return new ShareableValueSet_Expansion_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion_Parameter {
    return new ShareableValueSet_Expansion_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Expansion_Parameter | PlainMessage<ShareableValueSet_Expansion_Parameter> | undefined, b: ShareableValueSet_Expansion_Parameter | PlainMessage<ShareableValueSet_Expansion_Parameter> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Expansion_Parameter, a, b);
  }
}

/**
 * Value of the named parameter
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Expansion.Parameter.ValueX
 */
export class ShareableValueSet_Expansion_Parameter_ValueX extends Message<ShareableValueSet_Expansion_Parameter_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ShareableValueSet.Expansion.Parameter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 1 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 4;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 5;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 6;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 7;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ShareableValueSet_Expansion_Parameter_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Expansion.Parameter.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 4, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 5, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 6, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 7, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Expansion_Parameter_ValueX {
    return new ShareableValueSet_Expansion_Parameter_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion_Parameter_ValueX {
    return new ShareableValueSet_Expansion_Parameter_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion_Parameter_ValueX {
    return new ShareableValueSet_Expansion_Parameter_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Expansion_Parameter_ValueX | PlainMessage<ShareableValueSet_Expansion_Parameter_ValueX> | undefined, b: ShareableValueSet_Expansion_Parameter_ValueX | PlainMessage<ShareableValueSet_Expansion_Parameter_ValueX> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Expansion_Parameter_ValueX, a, b);
  }
}

/**
 * Codes in the value set
 *
 * @generated from message google.fhir.r4.core.ShareableValueSet.Expansion.Contains
 */
export class ShareableValueSet_Expansion_Contains extends Message<ShareableValueSet_Expansion_Contains> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * System value for the code
   *
   * @generated from field: google.fhir.r4.core.Uri system = 4;
   */
  system?: Uri;

  /**
   * If user cannot select this entry
   *
   * @generated from field: google.fhir.r4.core.Boolean abstract = 5;
   */
  abstract?: Boolean;

  /**
   * If concept is inactive in the code system
   *
   * @generated from field: google.fhir.r4.core.Boolean inactive = 6;
   */
  inactive?: Boolean;

  /**
   * Version in which this code/display is defined
   *
   * @generated from field: google.fhir.r4.core.String version = 7;
   */
  version?: String;

  /**
   * Code - if blank, this is not a selectable code
   *
   * @generated from field: google.fhir.r4.core.Code code = 8;
   */
  code?: Code;

  /**
   * User display for the concept
   *
   * @generated from field: google.fhir.r4.core.String display = 9;
   */
  display?: String;

  /**
   * Additional representations for this item
   *
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Compose.ConceptSet.ConceptReference.Designation designation = 10;
   */
  designation: ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation[] = [];

  /**
   * Codes contained under this entry
   *
   * @generated from field: repeated google.fhir.r4.core.ShareableValueSet.Expansion.Contains contains = 11;
   */
  contains: ShareableValueSet_Expansion_Contains[] = [];

  constructor(data?: PartialMessage<ShareableValueSet_Expansion_Contains>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableValueSet.Expansion.Contains";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "system", kind: "message", T: Uri },
    { no: 5, name: "abstract", kind: "message", T: Boolean },
    { no: 6, name: "inactive", kind: "message", T: Boolean },
    { no: 7, name: "version", kind: "message", T: String },
    { no: 8, name: "code", kind: "message", T: Code },
    { no: 9, name: "display", kind: "message", T: String },
    { no: 10, name: "designation", kind: "message", T: ShareableValueSet_Compose_ConceptSet_ConceptReference_Designation, repeated: true },
    { no: 11, name: "contains", kind: "message", T: ShareableValueSet_Expansion_Contains, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableValueSet_Expansion_Contains {
    return new ShareableValueSet_Expansion_Contains().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion_Contains {
    return new ShareableValueSet_Expansion_Contains().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableValueSet_Expansion_Contains {
    return new ShareableValueSet_Expansion_Contains().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableValueSet_Expansion_Contains | PlainMessage<ShareableValueSet_Expansion_Contains> | undefined, b: ShareableValueSet_Expansion_Contains | PlainMessage<ShareableValueSet_Expansion_Contains> | undefined): boolean {
    return proto3.util.equals(ShareableValueSet_Expansion_Contains, a, b);
  }
}

