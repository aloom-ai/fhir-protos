//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/profiles/shareable_code_system.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, DateTime, Decimal, Extension, Id, Identifier, Integer, Markdown, Meta, Narrative, String, UnsignedInt, Uri, UsageContext } from "../datatypes_pb.js";
import { CodeSystemContentModeCode_Value, CodeSystemHierarchyMeaningCode_Value, FilterOperatorCode_Value, PropertyTypeCode_Value, PublicationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Shareable CodeSystem.
 * Declares the existence of and describes a code system or code system
 * supplement. See http://hl7.org/fhir/StructureDefinition/shareablecodesystem
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem
 */
export class ShareableCodeSystem extends Message<ShareableCodeSystem> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this code system, represented as a URI (globally
   * unique) (Coding.system)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the code system (business identifier)
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the code system (Coding.version)
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this code system (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this code system (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.ShareableCodeSystem.StatusCode status = 15;
   */
  status?: ShareableCodeSystem_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 18;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 19;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the code system
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for code system (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this code system is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * If code comparison is case sensitive
   *
   * @generated from field: google.fhir.r4.core.Boolean case_sensitive = 25;
   */
  caseSensitive?: Boolean;

  /**
   * Canonical reference to the value set with entire code system
   *
   * @generated from field: google.fhir.r4.core.Canonical value_set = 26;
   */
  valueSet?: Canonical;

  /**
   * @generated from field: google.fhir.r4.core.ShareableCodeSystem.HierarchyMeaningCode hierarchy_meaning = 27;
   */
  hierarchyMeaning?: ShareableCodeSystem_HierarchyMeaningCode;

  /**
   * If code system defines a compositional grammar
   *
   * @generated from field: google.fhir.r4.core.Boolean compositional = 28;
   */
  compositional?: Boolean;

  /**
   * If definitions are not stable
   *
   * @generated from field: google.fhir.r4.core.Boolean version_needed = 29;
   */
  versionNeeded?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.ShareableCodeSystem.ContentCode content = 30;
   */
  content?: ShareableCodeSystem_ContentCode;

  /**
   * Canonical URL of Code System this adds designations and properties to
   *
   * @generated from field: google.fhir.r4.core.Canonical supplements = 31;
   */
  supplements?: Canonical;

  /**
   * Total concepts in the code system
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt count = 32;
   */
  count?: UnsignedInt;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.Filter filter = 33;
   */
  filter: ShareableCodeSystem_Filter[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.Property property = 34;
   */
  property: ShareableCodeSystem_Property[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition concept = 35;
   */
  concept: ShareableCodeSystem_ConceptDefinition[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "status", kind: "message", T: ShareableCodeSystem_StatusCode },
    { no: 16, name: "experimental", kind: "message", T: Boolean },
    { no: 17, name: "date", kind: "message", T: DateTime },
    { no: 18, name: "publisher", kind: "message", T: String },
    { no: 19, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 20, name: "description", kind: "message", T: Markdown },
    { no: 21, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 22, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "purpose", kind: "message", T: Markdown },
    { no: 24, name: "copyright", kind: "message", T: Markdown },
    { no: 25, name: "case_sensitive", kind: "message", T: Boolean },
    { no: 26, name: "value_set", kind: "message", T: Canonical },
    { no: 27, name: "hierarchy_meaning", kind: "message", T: ShareableCodeSystem_HierarchyMeaningCode },
    { no: 28, name: "compositional", kind: "message", T: Boolean },
    { no: 29, name: "version_needed", kind: "message", T: Boolean },
    { no: 30, name: "content", kind: "message", T: ShareableCodeSystem_ContentCode },
    { no: 31, name: "supplements", kind: "message", T: Canonical },
    { no: 32, name: "count", kind: "message", T: UnsignedInt },
    { no: 33, name: "filter", kind: "message", T: ShareableCodeSystem_Filter, repeated: true },
    { no: 34, name: "property", kind: "message", T: ShareableCodeSystem_Property, repeated: true },
    { no: 35, name: "concept", kind: "message", T: ShareableCodeSystem_ConceptDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem {
    return new ShareableCodeSystem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem {
    return new ShareableCodeSystem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem {
    return new ShareableCodeSystem().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem | PlainMessage<ShareableCodeSystem> | undefined, b: ShareableCodeSystem | PlainMessage<ShareableCodeSystem> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.StatusCode
 */
export class ShareableCodeSystem_StatusCode extends Message<ShareableCodeSystem_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_StatusCode {
    return new ShareableCodeSystem_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_StatusCode {
    return new ShareableCodeSystem_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_StatusCode {
    return new ShareableCodeSystem_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_StatusCode | PlainMessage<ShareableCodeSystem_StatusCode> | undefined, b: ShareableCodeSystem_StatusCode | PlainMessage<ShareableCodeSystem_StatusCode> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_StatusCode, a, b);
  }
}

/**
 * grouped-by | is-a | part-of | classified-with
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.HierarchyMeaningCode
 */
export class ShareableCodeSystem_HierarchyMeaningCode extends Message<ShareableCodeSystem_HierarchyMeaningCode> {
  /**
   * @generated from field: google.fhir.r4.core.CodeSystemHierarchyMeaningCode.Value value = 1;
   */
  value = CodeSystemHierarchyMeaningCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem_HierarchyMeaningCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.HierarchyMeaningCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CodeSystemHierarchyMeaningCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_HierarchyMeaningCode {
    return new ShareableCodeSystem_HierarchyMeaningCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_HierarchyMeaningCode {
    return new ShareableCodeSystem_HierarchyMeaningCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_HierarchyMeaningCode {
    return new ShareableCodeSystem_HierarchyMeaningCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_HierarchyMeaningCode | PlainMessage<ShareableCodeSystem_HierarchyMeaningCode> | undefined, b: ShareableCodeSystem_HierarchyMeaningCode | PlainMessage<ShareableCodeSystem_HierarchyMeaningCode> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_HierarchyMeaningCode, a, b);
  }
}

/**
 * not-present | example | fragment | complete | supplement
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.ContentCode
 */
export class ShareableCodeSystem_ContentCode extends Message<ShareableCodeSystem_ContentCode> {
  /**
   * @generated from field: google.fhir.r4.core.CodeSystemContentModeCode.Value value = 1;
   */
  value = CodeSystemContentModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem_ContentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.ContentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CodeSystemContentModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_ContentCode {
    return new ShareableCodeSystem_ContentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ContentCode {
    return new ShareableCodeSystem_ContentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ContentCode {
    return new ShareableCodeSystem_ContentCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_ContentCode | PlainMessage<ShareableCodeSystem_ContentCode> | undefined, b: ShareableCodeSystem_ContentCode | PlainMessage<ShareableCodeSystem_ContentCode> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_ContentCode, a, b);
  }
}

/**
 * Filter that can be used in a value set
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.Filter
 */
export class ShareableCodeSystem_Filter extends Message<ShareableCodeSystem_Filter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies the filter
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * How or why the filter is used
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.Filter.OperatorCode operator = 6;
   */
  operator: ShareableCodeSystem_Filter_OperatorCode[] = [];

  /**
   * What to use for the value
   *
   * @generated from field: google.fhir.r4.core.String value = 7;
   */
  value?: String;

  constructor(data?: PartialMessage<ShareableCodeSystem_Filter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.Filter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "operator", kind: "message", T: ShareableCodeSystem_Filter_OperatorCode, repeated: true },
    { no: 7, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_Filter {
    return new ShareableCodeSystem_Filter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Filter {
    return new ShareableCodeSystem_Filter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Filter {
    return new ShareableCodeSystem_Filter().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_Filter | PlainMessage<ShareableCodeSystem_Filter> | undefined, b: ShareableCodeSystem_Filter | PlainMessage<ShareableCodeSystem_Filter> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_Filter, a, b);
  }
}

/**
 * = | is-a | descendent-of | is-not-a | regex | in | not-in | generalizes |
 * exists
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.Filter.OperatorCode
 */
export class ShareableCodeSystem_Filter_OperatorCode extends Message<ShareableCodeSystem_Filter_OperatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.FilterOperatorCode.Value value = 1;
   */
  value = FilterOperatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem_Filter_OperatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.Filter.OperatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FilterOperatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_Filter_OperatorCode {
    return new ShareableCodeSystem_Filter_OperatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Filter_OperatorCode {
    return new ShareableCodeSystem_Filter_OperatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Filter_OperatorCode {
    return new ShareableCodeSystem_Filter_OperatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_Filter_OperatorCode | PlainMessage<ShareableCodeSystem_Filter_OperatorCode> | undefined, b: ShareableCodeSystem_Filter_OperatorCode | PlainMessage<ShareableCodeSystem_Filter_OperatorCode> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_Filter_OperatorCode, a, b);
  }
}

/**
 * Additional information supplied about each concept
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.Property
 */
export class ShareableCodeSystem_Property extends Message<ShareableCodeSystem_Property> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifies the property on the concepts, and when referred to in
   * operations
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * Formal identifier for the property
   *
   * @generated from field: google.fhir.r4.core.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * Why the property is defined, and/or what it conveys
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.core.ShareableCodeSystem.Property.TypeCode type = 7;
   */
  type?: ShareableCodeSystem_Property_TypeCode;

  constructor(data?: PartialMessage<ShareableCodeSystem_Property>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.Property";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "type", kind: "message", T: ShareableCodeSystem_Property_TypeCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_Property {
    return new ShareableCodeSystem_Property().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Property {
    return new ShareableCodeSystem_Property().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Property {
    return new ShareableCodeSystem_Property().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_Property | PlainMessage<ShareableCodeSystem_Property> | undefined, b: ShareableCodeSystem_Property | PlainMessage<ShareableCodeSystem_Property> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_Property, a, b);
  }
}

/**
 * code | Coding | string | integer | boolean | dateTime | decimal
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.Property.TypeCode
 */
export class ShareableCodeSystem_Property_TypeCode extends Message<ShareableCodeSystem_Property_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.PropertyTypeCode.Value value = 1;
   */
  value = PropertyTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem_Property_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.Property.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PropertyTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_Property_TypeCode {
    return new ShareableCodeSystem_Property_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Property_TypeCode {
    return new ShareableCodeSystem_Property_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_Property_TypeCode {
    return new ShareableCodeSystem_Property_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_Property_TypeCode | PlainMessage<ShareableCodeSystem_Property_TypeCode> | undefined, b: ShareableCodeSystem_Property_TypeCode | PlainMessage<ShareableCodeSystem_Property_TypeCode> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_Property_TypeCode, a, b);
  }
}

/**
 * Concepts in the code system
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition
 */
export class ShareableCodeSystem_ConceptDefinition extends Message<ShareableCodeSystem_ConceptDefinition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies concept
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * Text to display to the user
   *
   * @generated from field: google.fhir.r4.core.String display = 5;
   */
  display?: String;

  /**
   * Formal definition
   *
   * @generated from field: google.fhir.r4.core.String definition = 6;
   */
  definition?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.Designation designation = 7;
   */
  designation: ShareableCodeSystem_ConceptDefinition_Designation[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty property = 8;
   */
  property: ShareableCodeSystem_ConceptDefinition_ConceptProperty[] = [];

  /**
   * Child Concepts (is-a/contains/categorizes)
   *
   * @generated from field: repeated google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition concept = 9;
   */
  concept: ShareableCodeSystem_ConceptDefinition[] = [];

  constructor(data?: PartialMessage<ShareableCodeSystem_ConceptDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "display", kind: "message", T: String },
    { no: 6, name: "definition", kind: "message", T: String },
    { no: 7, name: "designation", kind: "message", T: ShareableCodeSystem_ConceptDefinition_Designation, repeated: true },
    { no: 8, name: "property", kind: "message", T: ShareableCodeSystem_ConceptDefinition_ConceptProperty, repeated: true },
    { no: 9, name: "concept", kind: "message", T: ShareableCodeSystem_ConceptDefinition, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_ConceptDefinition {
    return new ShareableCodeSystem_ConceptDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition {
    return new ShareableCodeSystem_ConceptDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition {
    return new ShareableCodeSystem_ConceptDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_ConceptDefinition | PlainMessage<ShareableCodeSystem_ConceptDefinition> | undefined, b: ShareableCodeSystem_ConceptDefinition | PlainMessage<ShareableCodeSystem_ConceptDefinition> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_ConceptDefinition, a, b);
  }
}

/**
 * Additional representations for the concept
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.Designation
 */
export class ShareableCodeSystem_ConceptDefinition_Designation extends Message<ShareableCodeSystem_ConceptDefinition_Designation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human language of the designation
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Details how this designation would be used
   *
   * @generated from field: google.fhir.r4.core.Coding use = 5;
   */
  use?: Coding;

  /**
   * The text value for this designation
   *
   * @generated from field: google.fhir.r4.core.String value = 6;
   */
  value?: String;

  constructor(data?: PartialMessage<ShareableCodeSystem_ConceptDefinition_Designation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.Designation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "use", kind: "message", T: Coding },
    { no: 6, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_ConceptDefinition_Designation {
    return new ShareableCodeSystem_ConceptDefinition_Designation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition_Designation {
    return new ShareableCodeSystem_ConceptDefinition_Designation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition_Designation {
    return new ShareableCodeSystem_ConceptDefinition_Designation().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_ConceptDefinition_Designation | PlainMessage<ShareableCodeSystem_ConceptDefinition_Designation> | undefined, b: ShareableCodeSystem_ConceptDefinition_Designation | PlainMessage<ShareableCodeSystem_ConceptDefinition_Designation> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_ConceptDefinition_Designation, a, b);
  }
}

/**
 * Property value for the concept
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty
 */
export class ShareableCodeSystem_ConceptDefinition_ConceptProperty extends Message<ShareableCodeSystem_ConceptDefinition_ConceptProperty> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to CodeSystem.property.code
   *
   * @generated from field: google.fhir.r4.core.Code code = 4;
   */
  code?: Code;

  /**
   * @generated from field: google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty.ValueX value = 5;
   */
  value?: ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX;

  constructor(data?: PartialMessage<ShareableCodeSystem_ConceptDefinition_ConceptProperty>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: Code },
    { no: 5, name: "value", kind: "message", T: ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_ConceptDefinition_ConceptProperty {
    return new ShareableCodeSystem_ConceptDefinition_ConceptProperty().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition_ConceptProperty {
    return new ShareableCodeSystem_ConceptDefinition_ConceptProperty().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition_ConceptProperty {
    return new ShareableCodeSystem_ConceptDefinition_ConceptProperty().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_ConceptDefinition_ConceptProperty | PlainMessage<ShareableCodeSystem_ConceptDefinition_ConceptProperty> | undefined, b: ShareableCodeSystem_ConceptDefinition_ConceptProperty | PlainMessage<ShareableCodeSystem_ConceptDefinition_ConceptProperty> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_ConceptDefinition_ConceptProperty, a, b);
  }
}

/**
 * Value of the property for this concept
 *
 * @generated from message google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty.ValueX
 */
export class ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX extends Message<ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 1;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 2;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 4;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 5;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableCodeSystem.ConceptDefinition.ConceptProperty.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 2, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 4, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 5, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX {
    return new ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX {
    return new ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX {
    return new ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX | PlainMessage<ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX> | undefined, b: ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX | PlainMessage<ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX> | undefined): boolean {
    return proto3.util.equals(ShareableCodeSystem_ConceptDefinition_ConceptProperty_ValueX, a, b);
  }
}

