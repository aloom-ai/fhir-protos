//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/profiles/cqf_questionnaire.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Attachment, Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, Date, DateTime, Decimal, Extension, Id, Identifier, Integer, Markdown, Meta, Narrative, Period, Quantity, Reference, String, Time, Uri, UsageContext } from "../datatypes_pb.js";
import { EnableWhenBehaviorCode_Value, PublicationStatusCode_Value, QuestionnaireItemOperatorCode_Value, QuestionnaireItemTypeCode_Value, ResourceTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for CQF-Questionnaire.
 * A questionnaire with the ability to specify behavior associated with
 * questions or groups of questions. See
 * http://hl7.org/fhir/StructureDefinition/cqf-questionnaire
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire
 */
export class CQFQuestionnaire extends Message<CQFQuestionnaire> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Extension
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this questionnaire, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the questionnaire
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the questionnaire
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this questionnaire (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this questionnaire (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical derived_from = 15;
   */
  derivedFrom: Canonical[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.StatusCode status = 16;
   */
  status?: CQFQuestionnaire_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 17;
   */
  experimental?: Boolean;

  /**
   * @generated from field: repeated google.fhir.r4.core.CQFQuestionnaire.SubjectTypeCode subject_type = 18;
   */
  subjectType: CQFQuestionnaire_SubjectTypeCode[] = [];

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 19;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 20;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 21;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the questionnaire
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 22;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 23;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for questionnaire (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 24;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this questionnaire is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 25;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 26;
   */
  copyright?: Markdown;

  /**
   * When the questionnaire was approved by publisher
   *
   * @generated from field: google.fhir.r4.core.Date approval_date = 27;
   */
  approvalDate?: Date;

  /**
   * When the questionnaire was last reviewed
   *
   * @generated from field: google.fhir.r4.core.Date last_review_date = 28;
   */
  lastReviewDate?: Date;

  /**
   * When the questionnaire is expected to be used
   *
   * @generated from field: google.fhir.r4.core.Period effective_period = 29;
   */
  effectivePeriod?: Period;

  /**
   * Concept that represents the overall questionnaire
   *
   * @generated from field: repeated google.fhir.r4.core.Coding code = 30;
   */
  code: Coding[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.CQFQuestionnaire.Item item = 31;
   */
  item: CQFQuestionnaire_Item[] = [];

  /**
   * A library containing logic referenced by the questionnaire
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical library = 32;
   */
  library: Canonical[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "derived_from", kind: "message", T: Canonical, repeated: true },
    { no: 16, name: "status", kind: "message", T: CQFQuestionnaire_StatusCode },
    { no: 17, name: "experimental", kind: "message", T: Boolean },
    { no: 18, name: "subject_type", kind: "message", T: CQFQuestionnaire_SubjectTypeCode, repeated: true },
    { no: 19, name: "date", kind: "message", T: DateTime },
    { no: 20, name: "publisher", kind: "message", T: String },
    { no: 21, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 22, name: "description", kind: "message", T: Markdown },
    { no: 23, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 24, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "purpose", kind: "message", T: Markdown },
    { no: 26, name: "copyright", kind: "message", T: Markdown },
    { no: 27, name: "approval_date", kind: "message", T: Date },
    { no: 28, name: "last_review_date", kind: "message", T: Date },
    { no: 29, name: "effective_period", kind: "message", T: Period },
    { no: 30, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 31, name: "item", kind: "message", T: CQFQuestionnaire_Item, repeated: true },
    { no: 32, name: "library", kind: "message", T: Canonical, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire {
    return new CQFQuestionnaire().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire {
    return new CQFQuestionnaire().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire {
    return new CQFQuestionnaire().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire | PlainMessage<CQFQuestionnaire> | undefined, b: CQFQuestionnaire | PlainMessage<CQFQuestionnaire> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.StatusCode
 */
export class CQFQuestionnaire_StatusCode extends Message<CQFQuestionnaire_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_StatusCode {
    return new CQFQuestionnaire_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_StatusCode {
    return new CQFQuestionnaire_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_StatusCode {
    return new CQFQuestionnaire_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_StatusCode | PlainMessage<CQFQuestionnaire_StatusCode> | undefined, b: CQFQuestionnaire_StatusCode | PlainMessage<CQFQuestionnaire_StatusCode> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_StatusCode, a, b);
  }
}

/**
 * Resource that can be subject of QuestionnaireResponse
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.SubjectTypeCode
 */
export class CQFQuestionnaire_SubjectTypeCode extends Message<CQFQuestionnaire_SubjectTypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire_SubjectTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.SubjectTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_SubjectTypeCode {
    return new CQFQuestionnaire_SubjectTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_SubjectTypeCode {
    return new CQFQuestionnaire_SubjectTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_SubjectTypeCode {
    return new CQFQuestionnaire_SubjectTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_SubjectTypeCode | PlainMessage<CQFQuestionnaire_SubjectTypeCode> | undefined, b: CQFQuestionnaire_SubjectTypeCode | PlainMessage<CQFQuestionnaire_SubjectTypeCode> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_SubjectTypeCode, a, b);
  }
}

/**
 * Questions and sections within the Questionnaire
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item
 */
export class CQFQuestionnaire_Item extends Message<CQFQuestionnaire_Item> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id for item in questionnaire
   *
   * @generated from field: google.fhir.r4.core.String link_id = 4;
   */
  linkId?: String;

  /**
   * ElementDefinition - details for the item
   *
   * @generated from field: google.fhir.r4.core.Uri definition = 5;
   */
  definition?: Uri;

  /**
   * Corresponding concept for this item in a terminology
   *
   * @generated from field: repeated google.fhir.r4.core.Coding code = 6;
   */
  code: Coding[] = [];

  /**
   * E.g. "1(a)", "2.5.3"
   *
   * @generated from field: google.fhir.r4.core.String prefix = 7;
   */
  prefix?: String;

  /**
   * Primary text for the item
   *
   * @generated from field: google.fhir.r4.core.String text = 8;
   */
  text?: String;

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.Item.TypeCode type = 9;
   */
  type?: CQFQuestionnaire_Item_TypeCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen enable_when = 10;
   */
  enableWhen: CQFQuestionnaire_Item_EnableWhen[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.Item.EnableBehaviorCode enable_behavior = 11;
   */
  enableBehavior?: CQFQuestionnaire_Item_EnableBehaviorCode;

  /**
   * Whether the item must be included in data results
   *
   * @generated from field: google.fhir.r4.core.Boolean required = 12;
   */
  required?: Boolean;

  /**
   * Whether the item may repeat
   *
   * @generated from field: google.fhir.r4.core.Boolean repeats = 13;
   */
  repeats?: Boolean;

  /**
   * Don't allow human editing
   *
   * @generated from field: google.fhir.r4.core.Boolean read_only = 14;
   */
  readOnly?: Boolean;

  /**
   * No more than this many characters
   *
   * @generated from field: google.fhir.r4.core.Integer max_length = 15;
   */
  maxLength?: Integer;

  /**
   * Valueset containing permitted answers
   *
   * @generated from field: google.fhir.r4.core.Canonical answer_value_set = 16;
   */
  answerValueSet?: Canonical;

  /**
   * @generated from field: repeated google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption answer_option = 17;
   */
  answerOption: CQFQuestionnaire_Item_AnswerOption[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.CQFQuestionnaire.Item.Initial initial = 18;
   */
  initial: CQFQuestionnaire_Item_Initial[] = [];

  /**
   * Nested questionnaire items
   *
   * @generated from field: repeated google.fhir.r4.core.CQFQuestionnaire.Item item = 19;
   */
  item: CQFQuestionnaire_Item[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link_id", kind: "message", T: String },
    { no: 5, name: "definition", kind: "message", T: Uri },
    { no: 6, name: "code", kind: "message", T: Coding, repeated: true },
    { no: 7, name: "prefix", kind: "message", T: String },
    { no: 8, name: "text", kind: "message", T: String },
    { no: 9, name: "type", kind: "message", T: CQFQuestionnaire_Item_TypeCode },
    { no: 10, name: "enable_when", kind: "message", T: CQFQuestionnaire_Item_EnableWhen, repeated: true },
    { no: 11, name: "enable_behavior", kind: "message", T: CQFQuestionnaire_Item_EnableBehaviorCode },
    { no: 12, name: "required", kind: "message", T: Boolean },
    { no: 13, name: "repeats", kind: "message", T: Boolean },
    { no: 14, name: "read_only", kind: "message", T: Boolean },
    { no: 15, name: "max_length", kind: "message", T: Integer },
    { no: 16, name: "answer_value_set", kind: "message", T: Canonical },
    { no: 17, name: "answer_option", kind: "message", T: CQFQuestionnaire_Item_AnswerOption, repeated: true },
    { no: 18, name: "initial", kind: "message", T: CQFQuestionnaire_Item_Initial, repeated: true },
    { no: 19, name: "item", kind: "message", T: CQFQuestionnaire_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item {
    return new CQFQuestionnaire_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item {
    return new CQFQuestionnaire_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item {
    return new CQFQuestionnaire_Item().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item | PlainMessage<CQFQuestionnaire_Item> | undefined, b: CQFQuestionnaire_Item | PlainMessage<CQFQuestionnaire_Item> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item, a, b);
  }
}

/**
 * group | display | boolean | decimal | integer | date | dateTime +
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.TypeCode
 */
export class CQFQuestionnaire_Item_TypeCode extends Message<CQFQuestionnaire_Item_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireItemTypeCode.Value value = 1;
   */
  value = QuestionnaireItemTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireItemTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_TypeCode {
    return new CQFQuestionnaire_Item_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_TypeCode {
    return new CQFQuestionnaire_Item_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_TypeCode {
    return new CQFQuestionnaire_Item_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_TypeCode | PlainMessage<CQFQuestionnaire_Item_TypeCode> | undefined, b: CQFQuestionnaire_Item_TypeCode | PlainMessage<CQFQuestionnaire_Item_TypeCode> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_TypeCode, a, b);
  }
}

/**
 * Only allow data when
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen
 */
export class CQFQuestionnaire_Item_EnableWhen extends Message<CQFQuestionnaire_Item_EnableWhen> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Question that determines whether item is enabled
   *
   * @generated from field: google.fhir.r4.core.String question = 4;
   */
  question?: String;

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.OperatorCode operator = 5;
   */
  operator?: CQFQuestionnaire_Item_EnableWhen_OperatorCode;

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.AnswerX answer = 6;
   */
  answer?: CQFQuestionnaire_Item_EnableWhen_AnswerX;

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_EnableWhen>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "question", kind: "message", T: String },
    { no: 5, name: "operator", kind: "message", T: CQFQuestionnaire_Item_EnableWhen_OperatorCode },
    { no: 6, name: "answer", kind: "message", T: CQFQuestionnaire_Item_EnableWhen_AnswerX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_EnableWhen {
    return new CQFQuestionnaire_Item_EnableWhen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableWhen {
    return new CQFQuestionnaire_Item_EnableWhen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableWhen {
    return new CQFQuestionnaire_Item_EnableWhen().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_EnableWhen | PlainMessage<CQFQuestionnaire_Item_EnableWhen> | undefined, b: CQFQuestionnaire_Item_EnableWhen | PlainMessage<CQFQuestionnaire_Item_EnableWhen> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_EnableWhen, a, b);
  }
}

/**
 * exists | = | != | > | < | >= | <=
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.OperatorCode
 */
export class CQFQuestionnaire_Item_EnableWhen_OperatorCode extends Message<CQFQuestionnaire_Item_EnableWhen_OperatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireItemOperatorCode.Value value = 1;
   */
  value = QuestionnaireItemOperatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_EnableWhen_OperatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.OperatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireItemOperatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_EnableWhen_OperatorCode {
    return new CQFQuestionnaire_Item_EnableWhen_OperatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableWhen_OperatorCode {
    return new CQFQuestionnaire_Item_EnableWhen_OperatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableWhen_OperatorCode {
    return new CQFQuestionnaire_Item_EnableWhen_OperatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_EnableWhen_OperatorCode | PlainMessage<CQFQuestionnaire_Item_EnableWhen_OperatorCode> | undefined, b: CQFQuestionnaire_Item_EnableWhen_OperatorCode | PlainMessage<CQFQuestionnaire_Item_EnableWhen_OperatorCode> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_EnableWhen_OperatorCode, a, b);
  }
}

/**
 * Value for question comparison based on operator
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.AnswerX
 */
export class CQFQuestionnaire_Item_EnableWhen_AnswerX extends Message<CQFQuestionnaire_Item_EnableWhen_AnswerX> {
  /**
   * @generated from oneof google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.AnswerX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 2;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 6;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 7 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 8;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 9;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 10;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_EnableWhen_AnswerX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.EnableWhen.AnswerX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 6, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 7, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 8, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 9, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 10, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_EnableWhen_AnswerX {
    return new CQFQuestionnaire_Item_EnableWhen_AnswerX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableWhen_AnswerX {
    return new CQFQuestionnaire_Item_EnableWhen_AnswerX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableWhen_AnswerX {
    return new CQFQuestionnaire_Item_EnableWhen_AnswerX().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_EnableWhen_AnswerX | PlainMessage<CQFQuestionnaire_Item_EnableWhen_AnswerX> | undefined, b: CQFQuestionnaire_Item_EnableWhen_AnswerX | PlainMessage<CQFQuestionnaire_Item_EnableWhen_AnswerX> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_EnableWhen_AnswerX, a, b);
  }
}

/**
 * all | any
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.EnableBehaviorCode
 */
export class CQFQuestionnaire_Item_EnableBehaviorCode extends Message<CQFQuestionnaire_Item_EnableBehaviorCode> {
  /**
   * @generated from field: google.fhir.r4.core.EnableWhenBehaviorCode.Value value = 1;
   */
  value = EnableWhenBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_EnableBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.EnableBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EnableWhenBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_EnableBehaviorCode {
    return new CQFQuestionnaire_Item_EnableBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableBehaviorCode {
    return new CQFQuestionnaire_Item_EnableBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_EnableBehaviorCode {
    return new CQFQuestionnaire_Item_EnableBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_EnableBehaviorCode | PlainMessage<CQFQuestionnaire_Item_EnableBehaviorCode> | undefined, b: CQFQuestionnaire_Item_EnableBehaviorCode | PlainMessage<CQFQuestionnaire_Item_EnableBehaviorCode> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_EnableBehaviorCode, a, b);
  }
}

/**
 * Permitted answer
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption
 */
export class CQFQuestionnaire_Item_AnswerOption extends Message<CQFQuestionnaire_Item_AnswerOption> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption.ValueX value = 4;
   */
  value?: CQFQuestionnaire_Item_AnswerOption_ValueX;

  /**
   * Whether option is selected by default
   *
   * @generated from field: google.fhir.r4.core.Boolean initial_selected = 5;
   */
  initialSelected?: Boolean;

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_AnswerOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: CQFQuestionnaire_Item_AnswerOption_ValueX },
    { no: 5, name: "initial_selected", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_AnswerOption {
    return new CQFQuestionnaire_Item_AnswerOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_AnswerOption {
    return new CQFQuestionnaire_Item_AnswerOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_AnswerOption {
    return new CQFQuestionnaire_Item_AnswerOption().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_AnswerOption | PlainMessage<CQFQuestionnaire_Item_AnswerOption> | undefined, b: CQFQuestionnaire_Item_AnswerOption | PlainMessage<CQFQuestionnaire_Item_AnswerOption> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_AnswerOption, a, b);
  }
}

/**
 * Answer value
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption.ValueX
 */
export class CQFQuestionnaire_Item_AnswerOption_ValueX extends Message<CQFQuestionnaire_Item_AnswerOption_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 1;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 2;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 3;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 4 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 5;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 6;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_AnswerOption_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.AnswerOption.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 2, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 3, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 4, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 5, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 6, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_AnswerOption_ValueX {
    return new CQFQuestionnaire_Item_AnswerOption_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_AnswerOption_ValueX {
    return new CQFQuestionnaire_Item_AnswerOption_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_AnswerOption_ValueX {
    return new CQFQuestionnaire_Item_AnswerOption_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_AnswerOption_ValueX | PlainMessage<CQFQuestionnaire_Item_AnswerOption_ValueX> | undefined, b: CQFQuestionnaire_Item_AnswerOption_ValueX | PlainMessage<CQFQuestionnaire_Item_AnswerOption_ValueX> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_AnswerOption_ValueX, a, b);
  }
}

/**
 * Initial value(s) when item is first rendered
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.Initial
 */
export class CQFQuestionnaire_Item_Initial extends Message<CQFQuestionnaire_Item_Initial> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CQFQuestionnaire.Item.Initial.ValueX value = 4;
   */
  value?: CQFQuestionnaire_Item_Initial_ValueX;

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_Initial>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.Initial";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: CQFQuestionnaire_Item_Initial_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_Initial {
    return new CQFQuestionnaire_Item_Initial().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_Initial {
    return new CQFQuestionnaire_Item_Initial().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_Initial {
    return new CQFQuestionnaire_Item_Initial().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_Initial | PlainMessage<CQFQuestionnaire_Item_Initial> | undefined, b: CQFQuestionnaire_Item_Initial | PlainMessage<CQFQuestionnaire_Item_Initial> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_Initial, a, b);
  }
}

/**
 * Actual value for initializing the question
 *
 * @generated from message google.fhir.r4.core.CQFQuestionnaire.Item.Initial.ValueX
 */
export class CQFQuestionnaire_Item_Initial_ValueX extends Message<CQFQuestionnaire_Item_Initial_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.CQFQuestionnaire.Item.Initial.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 2;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 6;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 7 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 8;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 9;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 10;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 11;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 12;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CQFQuestionnaire_Item_Initial_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CQFQuestionnaire.Item.Initial.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 6, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 7, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 8, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 9, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 10, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 11, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 12, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CQFQuestionnaire_Item_Initial_ValueX {
    return new CQFQuestionnaire_Item_Initial_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_Initial_ValueX {
    return new CQFQuestionnaire_Item_Initial_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CQFQuestionnaire_Item_Initial_ValueX {
    return new CQFQuestionnaire_Item_Initial_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: CQFQuestionnaire_Item_Initial_ValueX | PlainMessage<CQFQuestionnaire_Item_Initial_ValueX> | undefined, b: CQFQuestionnaire_Item_Initial_ValueX | PlainMessage<CQFQuestionnaire_Item_Initial_ValueX> | undefined): boolean {
    return proto3.util.equals(CQFQuestionnaire_Item_Initial_ValueX, a, b);
  }
}

