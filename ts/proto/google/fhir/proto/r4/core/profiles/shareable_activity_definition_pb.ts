//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/profiles/shareable_activity_definition.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Age, Boolean, Canonical, Code, CodeableConcept, ContactDetail, Date, DateTime, Dosage, Duration, Expression, Extension, Id, Identifier, Markdown, Meta, Narrative, Period, Range, Reference, RelatedArtifact, SimpleQuantity, String, Timing, Uri, UsageContext } from "../datatypes_pb.js";
import { ActionParticipantTypeCode_Value, PublicationStatusCode_Value, RequestIntentCode_Value, RequestPriorityCode_Value, RequestResourceTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Shareable ActivityDefinition.
 * The definition of a specific activity to be taken, independent of any
 * particular patient or context. See
 * http://hl7.org/fhir/StructureDefinition/shareableactivitydefinition
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition
 */
export class ShareableActivityDefinition extends Message<ShareableActivityDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this activity definition, represented as a URI
   * (globally unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the activity definition
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the activity definition
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this activity definition (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this activity definition (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * Subordinate title of the activity definition
   *
   * @generated from field: google.fhir.r4.core.String subtitle = 15;
   */
  subtitle?: String;

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.StatusCode status = 16;
   */
  status?: ShareableActivityDefinition_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 17;
   */
  experimental?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.SubjectX subject = 18;
   */
  subject?: ShareableActivityDefinition_SubjectX;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 19;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 20;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 21;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the activity definition
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 22;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 23;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for activity definition (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 24;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this activity definition is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 25;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the activity definition
   *
   * @generated from field: google.fhir.r4.core.String usage = 26;
   */
  usage?: String;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 27;
   */
  copyright?: Markdown;

  /**
   * When the activity definition was approved by publisher
   *
   * @generated from field: google.fhir.r4.core.Date approval_date = 28;
   */
  approvalDate?: Date;

  /**
   * When the activity definition was last reviewed
   *
   * @generated from field: google.fhir.r4.core.Date last_review_date = 29;
   */
  lastReviewDate?: Date;

  /**
   * When the activity definition is expected to be used
   *
   * @generated from field: google.fhir.r4.core.Period effective_period = 30;
   */
  effectivePeriod?: Period;

  /**
   * E.g. Education, Treatment, Assessment, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept topic = 31;
   */
  topic: CodeableConcept[] = [];

  /**
   * Who authored the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail author = 32;
   */
  author: ContactDetail[] = [];

  /**
   * Who edited the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail editor = 33;
   */
  editor: ContactDetail[] = [];

  /**
   * Who reviewed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail reviewer = 34;
   */
  reviewer: ContactDetail[] = [];

  /**
   * Who endorsed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail endorser = 35;
   */
  endorser: ContactDetail[] = [];

  /**
   * Additional documentation, citations, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact related_artifact = 36;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Logic used by the activity definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical library = 37;
   */
  library: Canonical[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.KindCode kind = 38;
   */
  kind?: ShareableActivityDefinition_KindCode;

  /**
   * What profile the resource needs to conform to
   *
   * @generated from field: google.fhir.r4.core.Canonical profile = 39;
   */
  profile?: Canonical;

  /**
   * Detail type of activity
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 40;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.IntentCode intent = 41;
   */
  intent?: ShareableActivityDefinition_IntentCode;

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.PriorityCode priority = 42;
   */
  priority?: ShareableActivityDefinition_PriorityCode;

  /**
   * True if the activity should not be performed
   *
   * @generated from field: google.fhir.r4.core.Boolean do_not_perform = 43;
   */
  doNotPerform?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.TimingX timing = 44;
   */
  timing?: ShareableActivityDefinition_TimingX;

  /**
   * Where it should happen
   *
   * @generated from field: google.fhir.r4.core.Reference location = 45;
   */
  location?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableActivityDefinition.Participant participant = 46;
   */
  participant: ShareableActivityDefinition_Participant[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.ProductX product = 47;
   */
  product?: ShareableActivityDefinition_ProductX;

  /**
   * How much is administered/consumed/supplied
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 48;
   */
  quantity?: SimpleQuantity;

  /**
   * Detailed dosage instructions
   *
   * @generated from field: repeated google.fhir.r4.core.Dosage dosage = 49;
   */
  dosage: Dosage[] = [];

  /**
   * What part of body to perform on
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept body_site = 50;
   */
  bodySite: CodeableConcept[] = [];

  /**
   * What specimens are required to perform this action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference specimen_requirement = 51;
   */
  specimenRequirement: Reference[] = [];

  /**
   * What observations are required to perform this action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference observation_requirement = 52;
   */
  observationRequirement: Reference[] = [];

  /**
   * What observations must be produced by this action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference observation_result_requirement = 53;
   */
  observationResultRequirement: Reference[] = [];

  /**
   * Transform to apply the template
   *
   * @generated from field: google.fhir.r4.core.Canonical transform = 54;
   */
  transform?: Canonical;

  /**
   * @generated from field: repeated google.fhir.r4.core.ShareableActivityDefinition.DynamicValue dynamic_value = 55;
   */
  dynamicValue: ShareableActivityDefinition_DynamicValue[] = [];

  constructor(data?: PartialMessage<ShareableActivityDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "subtitle", kind: "message", T: String },
    { no: 16, name: "status", kind: "message", T: ShareableActivityDefinition_StatusCode },
    { no: 17, name: "experimental", kind: "message", T: Boolean },
    { no: 18, name: "subject", kind: "message", T: ShareableActivityDefinition_SubjectX },
    { no: 19, name: "date", kind: "message", T: DateTime },
    { no: 20, name: "publisher", kind: "message", T: String },
    { no: 21, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 22, name: "description", kind: "message", T: Markdown },
    { no: 23, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 24, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "purpose", kind: "message", T: Markdown },
    { no: 26, name: "usage", kind: "message", T: String },
    { no: 27, name: "copyright", kind: "message", T: Markdown },
    { no: 28, name: "approval_date", kind: "message", T: Date },
    { no: 29, name: "last_review_date", kind: "message", T: Date },
    { no: 30, name: "effective_period", kind: "message", T: Period },
    { no: 31, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 32, name: "author", kind: "message", T: ContactDetail, repeated: true },
    { no: 33, name: "editor", kind: "message", T: ContactDetail, repeated: true },
    { no: 34, name: "reviewer", kind: "message", T: ContactDetail, repeated: true },
    { no: 35, name: "endorser", kind: "message", T: ContactDetail, repeated: true },
    { no: 36, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 37, name: "library", kind: "message", T: Canonical, repeated: true },
    { no: 38, name: "kind", kind: "message", T: ShareableActivityDefinition_KindCode },
    { no: 39, name: "profile", kind: "message", T: Canonical },
    { no: 40, name: "code", kind: "message", T: CodeableConcept },
    { no: 41, name: "intent", kind: "message", T: ShareableActivityDefinition_IntentCode },
    { no: 42, name: "priority", kind: "message", T: ShareableActivityDefinition_PriorityCode },
    { no: 43, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 44, name: "timing", kind: "message", T: ShareableActivityDefinition_TimingX },
    { no: 45, name: "location", kind: "message", T: Reference },
    { no: 46, name: "participant", kind: "message", T: ShareableActivityDefinition_Participant, repeated: true },
    { no: 47, name: "product", kind: "message", T: ShareableActivityDefinition_ProductX },
    { no: 48, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 49, name: "dosage", kind: "message", T: Dosage, repeated: true },
    { no: 50, name: "body_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 51, name: "specimen_requirement", kind: "message", T: Reference, repeated: true },
    { no: 52, name: "observation_requirement", kind: "message", T: Reference, repeated: true },
    { no: 53, name: "observation_result_requirement", kind: "message", T: Reference, repeated: true },
    { no: 54, name: "transform", kind: "message", T: Canonical },
    { no: 55, name: "dynamic_value", kind: "message", T: ShareableActivityDefinition_DynamicValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition {
    return new ShareableActivityDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition {
    return new ShareableActivityDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition {
    return new ShareableActivityDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition | PlainMessage<ShareableActivityDefinition> | undefined, b: ShareableActivityDefinition | PlainMessage<ShareableActivityDefinition> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.StatusCode
 */
export class ShareableActivityDefinition_StatusCode extends Message<ShareableActivityDefinition_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableActivityDefinition_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_StatusCode {
    return new ShareableActivityDefinition_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_StatusCode {
    return new ShareableActivityDefinition_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_StatusCode {
    return new ShareableActivityDefinition_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_StatusCode | PlainMessage<ShareableActivityDefinition_StatusCode> | undefined, b: ShareableActivityDefinition_StatusCode | PlainMessage<ShareableActivityDefinition_StatusCode> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_StatusCode, a, b);
  }
}

/**
 * Type of individual the activity definition is intended for
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.SubjectX
 */
export class ShareableActivityDefinition_SubjectX extends Message<ShareableActivityDefinition_SubjectX> {
  /**
   * @generated from oneof google.fhir.r4.core.ShareableActivityDefinition.SubjectX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ShareableActivityDefinition_SubjectX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.SubjectX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_SubjectX {
    return new ShareableActivityDefinition_SubjectX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_SubjectX {
    return new ShareableActivityDefinition_SubjectX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_SubjectX {
    return new ShareableActivityDefinition_SubjectX().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_SubjectX | PlainMessage<ShareableActivityDefinition_SubjectX> | undefined, b: ShareableActivityDefinition_SubjectX | PlainMessage<ShareableActivityDefinition_SubjectX> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_SubjectX, a, b);
  }
}

/**
 * Kind of resource
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.KindCode
 */
export class ShareableActivityDefinition_KindCode extends Message<ShareableActivityDefinition_KindCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestResourceTypeCode.Value value = 1;
   */
  value = RequestResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableActivityDefinition_KindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.KindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_KindCode {
    return new ShareableActivityDefinition_KindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_KindCode {
    return new ShareableActivityDefinition_KindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_KindCode {
    return new ShareableActivityDefinition_KindCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_KindCode | PlainMessage<ShareableActivityDefinition_KindCode> | undefined, b: ShareableActivityDefinition_KindCode | PlainMessage<ShareableActivityDefinition_KindCode> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_KindCode, a, b);
  }
}

/**
 * proposal | plan | directive | order | original-order | reflex-order |
 * filler-order | instance-order | option
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.IntentCode
 */
export class ShareableActivityDefinition_IntentCode extends Message<ShareableActivityDefinition_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestIntentCode.Value value = 1;
   */
  value = RequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableActivityDefinition_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_IntentCode {
    return new ShareableActivityDefinition_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_IntentCode {
    return new ShareableActivityDefinition_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_IntentCode {
    return new ShareableActivityDefinition_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_IntentCode | PlainMessage<ShareableActivityDefinition_IntentCode> | undefined, b: ShareableActivityDefinition_IntentCode | PlainMessage<ShareableActivityDefinition_IntentCode> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_IntentCode, a, b);
  }
}

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.PriorityCode
 */
export class ShareableActivityDefinition_PriorityCode extends Message<ShareableActivityDefinition_PriorityCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableActivityDefinition_PriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.PriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_PriorityCode {
    return new ShareableActivityDefinition_PriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_PriorityCode {
    return new ShareableActivityDefinition_PriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_PriorityCode {
    return new ShareableActivityDefinition_PriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_PriorityCode | PlainMessage<ShareableActivityDefinition_PriorityCode> | undefined, b: ShareableActivityDefinition_PriorityCode | PlainMessage<ShareableActivityDefinition_PriorityCode> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_PriorityCode, a, b);
  }
}

/**
 * When activity is to occur
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.TimingX
 */
export class ShareableActivityDefinition_TimingX extends Message<ShareableActivityDefinition_TimingX> {
  /**
   * @generated from oneof google.fhir.r4.core.ShareableActivityDefinition.TimingX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 2;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 3;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 4;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 6;
     */
    value: Duration;
    case: "duration";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ShareableActivityDefinition_TimingX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.TimingX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 2, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 3, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 4, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 6, name: "duration", kind: "message", T: Duration, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_TimingX {
    return new ShareableActivityDefinition_TimingX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_TimingX {
    return new ShareableActivityDefinition_TimingX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_TimingX {
    return new ShareableActivityDefinition_TimingX().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_TimingX | PlainMessage<ShareableActivityDefinition_TimingX> | undefined, b: ShareableActivityDefinition_TimingX | PlainMessage<ShareableActivityDefinition_TimingX> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_TimingX, a, b);
  }
}

/**
 * Who should participate in the action
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.Participant
 */
export class ShareableActivityDefinition_Participant extends Message<ShareableActivityDefinition_Participant> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ShareableActivityDefinition.Participant.TypeCode type = 4;
   */
  type?: ShareableActivityDefinition_Participant_TypeCode;

  /**
   * E.g. Nurse, Surgeon, Parent, etc.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  constructor(data?: PartialMessage<ShareableActivityDefinition_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: ShareableActivityDefinition_Participant_TypeCode },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_Participant {
    return new ShareableActivityDefinition_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_Participant {
    return new ShareableActivityDefinition_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_Participant {
    return new ShareableActivityDefinition_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_Participant | PlainMessage<ShareableActivityDefinition_Participant> | undefined, b: ShareableActivityDefinition_Participant | PlainMessage<ShareableActivityDefinition_Participant> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_Participant, a, b);
  }
}

/**
 * patient | practitioner | related-person | device
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.Participant.TypeCode
 */
export class ShareableActivityDefinition_Participant_TypeCode extends Message<ShareableActivityDefinition_Participant_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionParticipantTypeCode.Value value = 1;
   */
  value = ActionParticipantTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ShareableActivityDefinition_Participant_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.Participant.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionParticipantTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_Participant_TypeCode {
    return new ShareableActivityDefinition_Participant_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_Participant_TypeCode {
    return new ShareableActivityDefinition_Participant_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_Participant_TypeCode {
    return new ShareableActivityDefinition_Participant_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_Participant_TypeCode | PlainMessage<ShareableActivityDefinition_Participant_TypeCode> | undefined, b: ShareableActivityDefinition_Participant_TypeCode | PlainMessage<ShareableActivityDefinition_Participant_TypeCode> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_Participant_TypeCode, a, b);
  }
}

/**
 * What's administered/supplied
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.ProductX
 */
export class ShareableActivityDefinition_ProductX extends Message<ShareableActivityDefinition_ProductX> {
  /**
   * @generated from oneof google.fhir.r4.core.ShareableActivityDefinition.ProductX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ShareableActivityDefinition_ProductX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.ProductX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_ProductX {
    return new ShareableActivityDefinition_ProductX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_ProductX {
    return new ShareableActivityDefinition_ProductX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_ProductX {
    return new ShareableActivityDefinition_ProductX().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_ProductX | PlainMessage<ShareableActivityDefinition_ProductX> | undefined, b: ShareableActivityDefinition_ProductX | PlainMessage<ShareableActivityDefinition_ProductX> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_ProductX, a, b);
  }
}

/**
 * Dynamic aspects of the definition
 *
 * @generated from message google.fhir.r4.core.ShareableActivityDefinition.DynamicValue
 */
export class ShareableActivityDefinition_DynamicValue extends Message<ShareableActivityDefinition_DynamicValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The path to the element to be set dynamically
   *
   * @generated from field: google.fhir.r4.core.String path = 4;
   */
  path?: String;

  /**
   * An expression that provides the dynamic value for the customization
   *
   * @generated from field: google.fhir.r4.core.Expression expression = 5;
   */
  expression?: Expression;

  constructor(data?: PartialMessage<ShareableActivityDefinition_DynamicValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ShareableActivityDefinition.DynamicValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "path", kind: "message", T: String },
    { no: 5, name: "expression", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShareableActivityDefinition_DynamicValue {
    return new ShareableActivityDefinition_DynamicValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_DynamicValue {
    return new ShareableActivityDefinition_DynamicValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShareableActivityDefinition_DynamicValue {
    return new ShareableActivityDefinition_DynamicValue().fromJsonString(jsonString, options);
  }

  static equals(a: ShareableActivityDefinition_DynamicValue | PlainMessage<ShareableActivityDefinition_DynamicValue> | undefined, b: ShareableActivityDefinition_DynamicValue | PlainMessage<ShareableActivityDefinition_DynamicValue> | undefined): boolean {
    return proto3.util.equals(ShareableActivityDefinition_DynamicValue, a, b);
  }
}

