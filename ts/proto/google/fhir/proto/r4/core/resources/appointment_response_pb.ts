//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/appointment_response.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, Extension, Id, Identifier, Instant, Meta, Narrative, Reference, String, Uri } from "../datatypes_pb.js";
import { ParticipationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for AppointmentResponse.
 * A reply to an appointment request for a patient and/or practitioner(s), such
 * as a confirmation or rejection. See
 * http://hl7.org/fhir/StructureDefinition/AppointmentResponse
 *
 * @generated from message google.fhir.r4.core.AppointmentResponse
 */
export class AppointmentResponse extends Message<AppointmentResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this item
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Appointment this response relates to
   *
   * @generated from field: google.fhir.r4.core.Reference appointment = 11;
   */
  appointment?: Reference;

  /**
   * Time from appointment, or requested new start time
   *
   * @generated from field: google.fhir.r4.core.Instant start = 12;
   */
  start?: Instant;

  /**
   * Time from appointment, or requested new end time
   *
   * @generated from field: google.fhir.r4.core.Instant end = 13;
   */
  end?: Instant;

  /**
   * Role of participant in the appointment
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept participant_type = 14;
   */
  participantType: CodeableConcept[] = [];

  /**
   * Person, Location, HealthcareService, or Device
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 15;
   */
  actor?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.AppointmentResponse.ParticipantStatusCode participant_status = 16;
   */
  participantStatus?: AppointmentResponse_ParticipantStatusCode;

  /**
   * Additional comments
   *
   * @generated from field: google.fhir.r4.core.String comment = 17;
   */
  comment?: String;

  constructor(data?: PartialMessage<AppointmentResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AppointmentResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "appointment", kind: "message", T: Reference },
    { no: 12, name: "start", kind: "message", T: Instant },
    { no: 13, name: "end", kind: "message", T: Instant },
    { no: 14, name: "participant_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "actor", kind: "message", T: Reference },
    { no: 16, name: "participant_status", kind: "message", T: AppointmentResponse_ParticipantStatusCode },
    { no: 17, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppointmentResponse {
    return new AppointmentResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppointmentResponse {
    return new AppointmentResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppointmentResponse {
    return new AppointmentResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AppointmentResponse | PlainMessage<AppointmentResponse> | undefined, b: AppointmentResponse | PlainMessage<AppointmentResponse> | undefined): boolean {
    return proto3.util.equals(AppointmentResponse, a, b);
  }
}

/**
 * accepted | declined | tentative | needs-action
 *
 * @generated from message google.fhir.r4.core.AppointmentResponse.ParticipantStatusCode
 */
export class AppointmentResponse_ParticipantStatusCode extends Message<AppointmentResponse_ParticipantStatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ParticipationStatusCode.Value value = 1;
   */
  value = ParticipationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AppointmentResponse_ParticipantStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AppointmentResponse.ParticipantStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ParticipationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppointmentResponse_ParticipantStatusCode {
    return new AppointmentResponse_ParticipantStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppointmentResponse_ParticipantStatusCode {
    return new AppointmentResponse_ParticipantStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppointmentResponse_ParticipantStatusCode {
    return new AppointmentResponse_ParticipantStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AppointmentResponse_ParticipantStatusCode | PlainMessage<AppointmentResponse_ParticipantStatusCode> | undefined, b: AppointmentResponse_ParticipantStatusCode | PlainMessage<AppointmentResponse_ParticipantStatusCode> | undefined): boolean {
    return proto3.util.equals(AppointmentResponse_ParticipantStatusCode, a, b);
  }
}

