//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/linkage.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Code, Extension, Id, Meta, Narrative, Reference, String, Uri } from "../datatypes_pb.js";
import { LinkageTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Linkage.
 * Links records for 'same' item.
 * See http://hl7.org/fhir/StructureDefinition/Linkage
 *
 * @generated from message google.fhir.r4.core.Linkage
 */
export class Linkage extends Message<Linkage> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether this linkage assertion is active or not
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 10;
   */
  active?: Boolean;

  /**
   * Who is responsible for linkages
   *
   * @generated from field: google.fhir.r4.core.Reference author = 11;
   */
  author?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Linkage.Item item = 12;
   */
  item: Linkage_Item[] = [];

  constructor(data?: PartialMessage<Linkage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Linkage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "active", kind: "message", T: Boolean },
    { no: 11, name: "author", kind: "message", T: Reference },
    { no: 12, name: "item", kind: "message", T: Linkage_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Linkage {
    return new Linkage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Linkage {
    return new Linkage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Linkage {
    return new Linkage().fromJsonString(jsonString, options);
  }

  static equals(a: Linkage | PlainMessage<Linkage> | undefined, b: Linkage | PlainMessage<Linkage> | undefined): boolean {
    return proto3.util.equals(Linkage, a, b);
  }
}

/**
 * Item to be linked
 *
 * @generated from message google.fhir.r4.core.Linkage.Item
 */
export class Linkage_Item extends Message<Linkage_Item> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Linkage.Item.TypeCode type = 4;
   */
  type?: Linkage_Item_TypeCode;

  /**
   * Resource being linked
   *
   * @generated from field: google.fhir.r4.core.Reference resource = 5;
   */
  resource?: Reference;

  constructor(data?: PartialMessage<Linkage_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Linkage.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: Linkage_Item_TypeCode },
    { no: 5, name: "resource", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Linkage_Item {
    return new Linkage_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Linkage_Item {
    return new Linkage_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Linkage_Item {
    return new Linkage_Item().fromJsonString(jsonString, options);
  }

  static equals(a: Linkage_Item | PlainMessage<Linkage_Item> | undefined, b: Linkage_Item | PlainMessage<Linkage_Item> | undefined): boolean {
    return proto3.util.equals(Linkage_Item, a, b);
  }
}

/**
 * source | alternate | historical
 *
 * @generated from message google.fhir.r4.core.Linkage.Item.TypeCode
 */
export class Linkage_Item_TypeCode extends Message<Linkage_Item_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.LinkageTypeCode.Value value = 1;
   */
  value = LinkageTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Linkage_Item_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Linkage.Item.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LinkageTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Linkage_Item_TypeCode {
    return new Linkage_Item_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Linkage_Item_TypeCode {
    return new Linkage_Item_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Linkage_Item_TypeCode {
    return new Linkage_Item_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: Linkage_Item_TypeCode | PlainMessage<Linkage_Item_TypeCode> | undefined, b: Linkage_Item_TypeCode | PlainMessage<Linkage_Item_TypeCode> | undefined): boolean {
    return proto3.util.equals(Linkage_Item_TypeCode, a, b);
  }
}

