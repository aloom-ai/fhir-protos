//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/insurance_plan.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Code, CodeableConcept, ContactPoint, Extension, HumanName, Id, Identifier, Meta, Money, Narrative, Period, PositiveInt, Quantity, Reference, String, Uri } from "../datatypes_pb.js";
import { PublicationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for InsurancePlan.
 * Details of a Health Insurance product/plan provided by an organization.
 * See http://hl7.org/fhir/StructureDefinition/InsurancePlan
 *
 * @generated from message google.fhir.r4.core.InsurancePlan
 */
export class InsurancePlan extends Message<InsurancePlan> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for Product
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.InsurancePlan.StatusCode status = 11;
   */
  status?: InsurancePlan_StatusCode;

  /**
   * Kind of product
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 12;
   */
  type: CodeableConcept[] = [];

  /**
   * Official name
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Alternate names
   *
   * @generated from field: repeated google.fhir.r4.core.String alias = 14;
   */
  alias: String[] = [];

  /**
   * When the product is available
   *
   * @generated from field: google.fhir.r4.core.Period period = 15;
   */
  period?: Period;

  /**
   * Plan issuer
   *
   * @generated from field: google.fhir.r4.core.Reference owned_by = 16;
   */
  ownedBy?: Reference;

  /**
   * Product administrator
   *
   * @generated from field: google.fhir.r4.core.Reference administered_by = 17;
   */
  administeredBy?: Reference;

  /**
   * Where product applies
   *
   * @generated from field: repeated google.fhir.r4.core.Reference coverage_area = 18;
   */
  coverageArea: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Contact contact = 19;
   */
  contact: InsurancePlan_Contact[] = [];

  /**
   * Technical endpoint
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 20;
   */
  endpoint: Reference[] = [];

  /**
   * What networks are Included
   *
   * @generated from field: repeated google.fhir.r4.core.Reference network = 21;
   */
  network: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Coverage coverage = 22;
   */
  coverage: InsurancePlan_Coverage[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Plan plan = 23;
   */
  plan: InsurancePlan_Plan[] = [];

  constructor(data?: PartialMessage<InsurancePlan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: InsurancePlan_StatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "alias", kind: "message", T: String, repeated: true },
    { no: 15, name: "period", kind: "message", T: Period },
    { no: 16, name: "owned_by", kind: "message", T: Reference },
    { no: 17, name: "administered_by", kind: "message", T: Reference },
    { no: 18, name: "coverage_area", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "contact", kind: "message", T: InsurancePlan_Contact, repeated: true },
    { no: 20, name: "endpoint", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "network", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "coverage", kind: "message", T: InsurancePlan_Coverage, repeated: true },
    { no: 23, name: "plan", kind: "message", T: InsurancePlan_Plan, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan {
    return new InsurancePlan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan {
    return new InsurancePlan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan {
    return new InsurancePlan().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan | PlainMessage<InsurancePlan> | undefined, b: InsurancePlan | PlainMessage<InsurancePlan> | undefined): boolean {
    return proto3.util.equals(InsurancePlan, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.StatusCode
 */
export class InsurancePlan_StatusCode extends Message<InsurancePlan_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<InsurancePlan_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_StatusCode {
    return new InsurancePlan_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_StatusCode {
    return new InsurancePlan_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_StatusCode {
    return new InsurancePlan_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_StatusCode | PlainMessage<InsurancePlan_StatusCode> | undefined, b: InsurancePlan_StatusCode | PlainMessage<InsurancePlan_StatusCode> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_StatusCode, a, b);
  }
}

/**
 * Contact for the product
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Contact
 */
export class InsurancePlan_Contact extends Message<InsurancePlan_Contact> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The type of contact
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept purpose = 4;
   */
  purpose?: CodeableConcept;

  /**
   * A name associated with the contact
   *
   * @generated from field: google.fhir.r4.core.HumanName name = 5;
   */
  name?: HumanName;

  /**
   * Contact details (telephone, email, etc.)  for a contact
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 6;
   */
  telecom: ContactPoint[] = [];

  /**
   * Visiting or postal addresses for the contact
   *
   * @generated from field: google.fhir.r4.core.Address address = 7;
   */
  address?: Address;

  constructor(data?: PartialMessage<InsurancePlan_Contact>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Contact";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "purpose", kind: "message", T: CodeableConcept },
    { no: 5, name: "name", kind: "message", T: HumanName },
    { no: 6, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 7, name: "address", kind: "message", T: Address },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Contact {
    return new InsurancePlan_Contact().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Contact {
    return new InsurancePlan_Contact().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Contact {
    return new InsurancePlan_Contact().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Contact | PlainMessage<InsurancePlan_Contact> | undefined, b: InsurancePlan_Contact | PlainMessage<InsurancePlan_Contact> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Contact, a, b);
  }
}

/**
 * Coverage details
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Coverage
 */
export class InsurancePlan_Coverage extends Message<InsurancePlan_Coverage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of coverage
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * What networks provide coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference network = 5;
   */
  network: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Coverage.CoverageBenefit benefit = 6;
   */
  benefit: InsurancePlan_Coverage_CoverageBenefit[] = [];

  constructor(data?: PartialMessage<InsurancePlan_Coverage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Coverage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "network", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "benefit", kind: "message", T: InsurancePlan_Coverage_CoverageBenefit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Coverage {
    return new InsurancePlan_Coverage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Coverage {
    return new InsurancePlan_Coverage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Coverage {
    return new InsurancePlan_Coverage().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Coverage | PlainMessage<InsurancePlan_Coverage> | undefined, b: InsurancePlan_Coverage | PlainMessage<InsurancePlan_Coverage> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Coverage, a, b);
  }
}

/**
 * List of benefits
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Coverage.CoverageBenefit
 */
export class InsurancePlan_Coverage_CoverageBenefit extends Message<InsurancePlan_Coverage_CoverageBenefit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of benefit
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Referral requirements
   *
   * @generated from field: google.fhir.r4.core.String requirement = 5;
   */
  requirement?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Coverage.CoverageBenefit.Limit limit = 6;
   */
  limit: InsurancePlan_Coverage_CoverageBenefit_Limit[] = [];

  constructor(data?: PartialMessage<InsurancePlan_Coverage_CoverageBenefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Coverage.CoverageBenefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "requirement", kind: "message", T: String },
    { no: 6, name: "limit", kind: "message", T: InsurancePlan_Coverage_CoverageBenefit_Limit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Coverage_CoverageBenefit {
    return new InsurancePlan_Coverage_CoverageBenefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Coverage_CoverageBenefit {
    return new InsurancePlan_Coverage_CoverageBenefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Coverage_CoverageBenefit {
    return new InsurancePlan_Coverage_CoverageBenefit().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Coverage_CoverageBenefit | PlainMessage<InsurancePlan_Coverage_CoverageBenefit> | undefined, b: InsurancePlan_Coverage_CoverageBenefit | PlainMessage<InsurancePlan_Coverage_CoverageBenefit> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Coverage_CoverageBenefit, a, b);
  }
}

/**
 * Benefit limits
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Coverage.CoverageBenefit.Limit
 */
export class InsurancePlan_Coverage_CoverageBenefit_Limit extends Message<InsurancePlan_Coverage_CoverageBenefit_Limit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Maximum value allowed
   *
   * @generated from field: google.fhir.r4.core.Quantity value = 4;
   */
  value?: Quantity;

  /**
   * Benefit limit details
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 5;
   */
  code?: CodeableConcept;

  constructor(data?: PartialMessage<InsurancePlan_Coverage_CoverageBenefit_Limit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Coverage.CoverageBenefit.Limit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: Quantity },
    { no: 5, name: "code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Coverage_CoverageBenefit_Limit {
    return new InsurancePlan_Coverage_CoverageBenefit_Limit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Coverage_CoverageBenefit_Limit {
    return new InsurancePlan_Coverage_CoverageBenefit_Limit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Coverage_CoverageBenefit_Limit {
    return new InsurancePlan_Coverage_CoverageBenefit_Limit().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Coverage_CoverageBenefit_Limit | PlainMessage<InsurancePlan_Coverage_CoverageBenefit_Limit> | undefined, b: InsurancePlan_Coverage_CoverageBenefit_Limit | PlainMessage<InsurancePlan_Coverage_CoverageBenefit_Limit> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Coverage_CoverageBenefit_Limit, a, b);
  }
}

/**
 * Plan details
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Plan
 */
export class InsurancePlan_Plan extends Message<InsurancePlan_Plan> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for Product
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 4;
   */
  identifier: Identifier[] = [];

  /**
   * Type of plan
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Where product applies
   *
   * @generated from field: repeated google.fhir.r4.core.Reference coverage_area = 6;
   */
  coverageArea: Reference[] = [];

  /**
   * What networks provide coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference network = 7;
   */
  network: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Plan.GeneralCost general_cost = 8;
   */
  generalCost: InsurancePlan_Plan_GeneralCost[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Plan.SpecificCost specific_cost = 9;
   */
  specificCost: InsurancePlan_Plan_SpecificCost[] = [];

  constructor(data?: PartialMessage<InsurancePlan_Plan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Plan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "coverage_area", kind: "message", T: Reference, repeated: true },
    { no: 7, name: "network", kind: "message", T: Reference, repeated: true },
    { no: 8, name: "general_cost", kind: "message", T: InsurancePlan_Plan_GeneralCost, repeated: true },
    { no: 9, name: "specific_cost", kind: "message", T: InsurancePlan_Plan_SpecificCost, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Plan {
    return new InsurancePlan_Plan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Plan {
    return new InsurancePlan_Plan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Plan {
    return new InsurancePlan_Plan().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Plan | PlainMessage<InsurancePlan_Plan> | undefined, b: InsurancePlan_Plan | PlainMessage<InsurancePlan_Plan> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Plan, a, b);
  }
}

/**
 * Overall costs
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Plan.GeneralCost
 */
export class InsurancePlan_Plan_GeneralCost extends Message<InsurancePlan_Plan_GeneralCost> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of cost
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Number of enrollees
   *
   * @generated from field: google.fhir.r4.core.PositiveInt group_size = 5;
   */
  groupSize?: PositiveInt;

  /**
   * Cost value
   *
   * @generated from field: google.fhir.r4.core.Money cost = 6;
   */
  cost?: Money;

  /**
   * Additional cost information
   *
   * @generated from field: google.fhir.r4.core.String comment = 7;
   */
  comment?: String;

  constructor(data?: PartialMessage<InsurancePlan_Plan_GeneralCost>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Plan.GeneralCost";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "group_size", kind: "message", T: PositiveInt },
    { no: 6, name: "cost", kind: "message", T: Money },
    { no: 7, name: "comment", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Plan_GeneralCost {
    return new InsurancePlan_Plan_GeneralCost().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_GeneralCost {
    return new InsurancePlan_Plan_GeneralCost().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_GeneralCost {
    return new InsurancePlan_Plan_GeneralCost().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Plan_GeneralCost | PlainMessage<InsurancePlan_Plan_GeneralCost> | undefined, b: InsurancePlan_Plan_GeneralCost | PlainMessage<InsurancePlan_Plan_GeneralCost> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Plan_GeneralCost, a, b);
  }
}

/**
 * Specific costs
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Plan.SpecificCost
 */
export class InsurancePlan_Plan_SpecificCost extends Message<InsurancePlan_Plan_SpecificCost> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * General category of benefit
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Plan.SpecificCost.PlanBenefit benefit = 5;
   */
  benefit: InsurancePlan_Plan_SpecificCost_PlanBenefit[] = [];

  constructor(data?: PartialMessage<InsurancePlan_Plan_SpecificCost>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Plan.SpecificCost";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "benefit", kind: "message", T: InsurancePlan_Plan_SpecificCost_PlanBenefit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Plan_SpecificCost {
    return new InsurancePlan_Plan_SpecificCost().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_SpecificCost {
    return new InsurancePlan_Plan_SpecificCost().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_SpecificCost {
    return new InsurancePlan_Plan_SpecificCost().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Plan_SpecificCost | PlainMessage<InsurancePlan_Plan_SpecificCost> | undefined, b: InsurancePlan_Plan_SpecificCost | PlainMessage<InsurancePlan_Plan_SpecificCost> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Plan_SpecificCost, a, b);
  }
}

/**
 * Benefits list
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Plan.SpecificCost.PlanBenefit
 */
export class InsurancePlan_Plan_SpecificCost_PlanBenefit extends Message<InsurancePlan_Plan_SpecificCost_PlanBenefit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of specific benefit
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.InsurancePlan.Plan.SpecificCost.PlanBenefit.Cost cost = 5;
   */
  cost: InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost[] = [];

  constructor(data?: PartialMessage<InsurancePlan_Plan_SpecificCost_PlanBenefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Plan.SpecificCost.PlanBenefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "cost", kind: "message", T: InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Plan_SpecificCost_PlanBenefit {
    return new InsurancePlan_Plan_SpecificCost_PlanBenefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_SpecificCost_PlanBenefit {
    return new InsurancePlan_Plan_SpecificCost_PlanBenefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_SpecificCost_PlanBenefit {
    return new InsurancePlan_Plan_SpecificCost_PlanBenefit().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Plan_SpecificCost_PlanBenefit | PlainMessage<InsurancePlan_Plan_SpecificCost_PlanBenefit> | undefined, b: InsurancePlan_Plan_SpecificCost_PlanBenefit | PlainMessage<InsurancePlan_Plan_SpecificCost_PlanBenefit> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Plan_SpecificCost_PlanBenefit, a, b);
  }
}

/**
 * List of the costs
 *
 * @generated from message google.fhir.r4.core.InsurancePlan.Plan.SpecificCost.PlanBenefit.Cost
 */
export class InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost extends Message<InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of cost
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * in-network | out-of-network | other
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept applicability = 5;
   */
  applicability?: CodeableConcept;

  /**
   * Additional information about the cost
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept qualifiers = 6;
   */
  qualifiers: CodeableConcept[] = [];

  /**
   * The actual cost value
   *
   * @generated from field: google.fhir.r4.core.Quantity value = 7;
   */
  value?: Quantity;

  constructor(data?: PartialMessage<InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InsurancePlan.Plan.SpecificCost.PlanBenefit.Cost";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "applicability", kind: "message", T: CodeableConcept },
    { no: 6, name: "qualifiers", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "value", kind: "message", T: Quantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost {
    return new InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost {
    return new InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost {
    return new InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost().fromJsonString(jsonString, options);
  }

  static equals(a: InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost | PlainMessage<InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost> | undefined, b: InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost | PlainMessage<InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost> | undefined): boolean {
    return proto3.util.equals(InsurancePlan_Plan_SpecificCost_PlanBenefit_Cost, a, b);
  }
}

