//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/substance_polymer.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Attachment, Boolean, Code, CodeableConcept, Extension, Id, Integer, Meta, Narrative, String, SubstanceAmount, Uri } from "../datatypes_pb.js";

/**
 * Auto-generated from StructureDefinition for SubstancePolymer.
 * Todo.
 * See http://hl7.org/fhir/StructureDefinition/SubstancePolymer
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer
 */
export class SubstancePolymer extends Message<SubstancePolymer> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept class_value = 10 [json_name = "class"];
   */
  classValue?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept geometry = 11;
   */
  geometry?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept copolymer_connectivity = 12;
   */
  copolymerConnectivity: CodeableConcept[] = [];

  /**
   * Todo
   *
   * @generated from field: repeated google.fhir.r4.core.String modification = 13;
   */
  modification: String[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.SubstancePolymer.MonomerSet monomer_set = 14;
   */
  monomerSet: SubstancePolymer_MonomerSet[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.SubstancePolymer.Repeat repeat = 15;
   */
  repeat: SubstancePolymer_Repeat[] = [];

  constructor(data?: PartialMessage<SubstancePolymer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "class_value", jsonName: "class", kind: "message", T: CodeableConcept },
    { no: 11, name: "geometry", kind: "message", T: CodeableConcept },
    { no: 12, name: "copolymer_connectivity", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "modification", kind: "message", T: String, repeated: true },
    { no: 14, name: "monomer_set", kind: "message", T: SubstancePolymer_MonomerSet, repeated: true },
    { no: 15, name: "repeat", kind: "message", T: SubstancePolymer_Repeat, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer {
    return new SubstancePolymer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer {
    return new SubstancePolymer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer {
    return new SubstancePolymer().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer | PlainMessage<SubstancePolymer> | undefined, b: SubstancePolymer | PlainMessage<SubstancePolymer> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer, a, b);
  }
}

/**
 * Todo
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer.MonomerSet
 */
export class SubstancePolymer_MonomerSet extends Message<SubstancePolymer_MonomerSet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept ratio_type = 4;
   */
  ratioType?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial starting_material = 5;
   */
  startingMaterial: SubstancePolymer_MonomerSet_StartingMaterial[] = [];

  constructor(data?: PartialMessage<SubstancePolymer_MonomerSet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer.MonomerSet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "ratio_type", kind: "message", T: CodeableConcept },
    { no: 5, name: "starting_material", kind: "message", T: SubstancePolymer_MonomerSet_StartingMaterial, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer_MonomerSet {
    return new SubstancePolymer_MonomerSet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer_MonomerSet {
    return new SubstancePolymer_MonomerSet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer_MonomerSet {
    return new SubstancePolymer_MonomerSet().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer_MonomerSet | PlainMessage<SubstancePolymer_MonomerSet> | undefined, b: SubstancePolymer_MonomerSet | PlainMessage<SubstancePolymer_MonomerSet> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer_MonomerSet, a, b);
  }
}

/**
 * Todo
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial
 */
export class SubstancePolymer_MonomerSet_StartingMaterial extends Message<SubstancePolymer_MonomerSet_StartingMaterial> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept material = 4;
   */
  material?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.Boolean is_defining = 6;
   */
  isDefining?: Boolean;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.SubstanceAmount amount = 7;
   */
  amount?: SubstanceAmount;

  constructor(data?: PartialMessage<SubstancePolymer_MonomerSet_StartingMaterial>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "material", kind: "message", T: CodeableConcept },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "is_defining", kind: "message", T: Boolean },
    { no: 7, name: "amount", kind: "message", T: SubstanceAmount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer_MonomerSet_StartingMaterial {
    return new SubstancePolymer_MonomerSet_StartingMaterial().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer_MonomerSet_StartingMaterial {
    return new SubstancePolymer_MonomerSet_StartingMaterial().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer_MonomerSet_StartingMaterial {
    return new SubstancePolymer_MonomerSet_StartingMaterial().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer_MonomerSet_StartingMaterial | PlainMessage<SubstancePolymer_MonomerSet_StartingMaterial> | undefined, b: SubstancePolymer_MonomerSet_StartingMaterial | PlainMessage<SubstancePolymer_MonomerSet_StartingMaterial> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer_MonomerSet_StartingMaterial, a, b);
  }
}

/**
 * Todo
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer.Repeat
 */
export class SubstancePolymer_Repeat extends Message<SubstancePolymer_Repeat> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.Integer number_of_units = 4;
   */
  numberOfUnits?: Integer;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.String average_molecular_formula = 5;
   */
  averageMolecularFormula?: String;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept repeat_unit_amount_type = 6;
   */
  repeatUnitAmountType?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit repeat_unit = 7;
   */
  repeatUnit: SubstancePolymer_Repeat_RepeatUnit[] = [];

  constructor(data?: PartialMessage<SubstancePolymer_Repeat>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer.Repeat";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "number_of_units", kind: "message", T: Integer },
    { no: 5, name: "average_molecular_formula", kind: "message", T: String },
    { no: 6, name: "repeat_unit_amount_type", kind: "message", T: CodeableConcept },
    { no: 7, name: "repeat_unit", kind: "message", T: SubstancePolymer_Repeat_RepeatUnit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer_Repeat {
    return new SubstancePolymer_Repeat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat {
    return new SubstancePolymer_Repeat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat {
    return new SubstancePolymer_Repeat().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer_Repeat | PlainMessage<SubstancePolymer_Repeat> | undefined, b: SubstancePolymer_Repeat | PlainMessage<SubstancePolymer_Repeat> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer_Repeat, a, b);
  }
}

/**
 * Todo
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit
 */
export class SubstancePolymer_Repeat_RepeatUnit extends Message<SubstancePolymer_Repeat_RepeatUnit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept orientation_of_polymerisation = 4;
   */
  orientationOfPolymerisation?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.String repeat_unit = 5;
   */
  repeatUnit?: String;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.SubstanceAmount amount = 6;
   */
  amount?: SubstanceAmount;

  /**
   * @generated from field: repeated google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation degree_of_polymerisation = 7;
   */
  degreeOfPolymerisation: SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation structural_representation = 8;
   */
  structuralRepresentation: SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation[] = [];

  constructor(data?: PartialMessage<SubstancePolymer_Repeat_RepeatUnit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "orientation_of_polymerisation", kind: "message", T: CodeableConcept },
    { no: 5, name: "repeat_unit", kind: "message", T: String },
    { no: 6, name: "amount", kind: "message", T: SubstanceAmount },
    { no: 7, name: "degree_of_polymerisation", kind: "message", T: SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation, repeated: true },
    { no: 8, name: "structural_representation", kind: "message", T: SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer_Repeat_RepeatUnit {
    return new SubstancePolymer_Repeat_RepeatUnit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat_RepeatUnit {
    return new SubstancePolymer_Repeat_RepeatUnit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat_RepeatUnit {
    return new SubstancePolymer_Repeat_RepeatUnit().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer_Repeat_RepeatUnit | PlainMessage<SubstancePolymer_Repeat_RepeatUnit> | undefined, b: SubstancePolymer_Repeat_RepeatUnit | PlainMessage<SubstancePolymer_Repeat_RepeatUnit> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer_Repeat_RepeatUnit, a, b);
  }
}

/**
 * Todo
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation
 */
export class SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation extends Message<SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept degree = 4;
   */
  degree?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.SubstanceAmount amount = 5;
   */
  amount?: SubstanceAmount;

  constructor(data?: PartialMessage<SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "degree", kind: "message", T: CodeableConcept },
    { no: 5, name: "amount", kind: "message", T: SubstanceAmount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation {
    return new SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation {
    return new SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation {
    return new SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation | PlainMessage<SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation> | undefined, b: SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation | PlainMessage<SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation, a, b);
  }
}

/**
 * Todo
 *
 * @generated from message google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation
 */
export class SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation extends Message<SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.String representation = 5;
   */
  representation?: String;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.Attachment attachment = 6;
   */
  attachment?: Attachment;

  constructor(data?: PartialMessage<SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "representation", kind: "message", T: String },
    { no: 6, name: "attachment", kind: "message", T: Attachment },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation {
    return new SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation {
    return new SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation {
    return new SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation().fromJsonString(jsonString, options);
  }

  static equals(a: SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation | PlainMessage<SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation> | undefined, b: SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation | PlainMessage<SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation> | undefined): boolean {
    return proto3.util.equals(SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation, a, b);
  }
}

