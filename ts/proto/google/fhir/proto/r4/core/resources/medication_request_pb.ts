//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/medication_request.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Boolean, Canonical, Code, CodeableConcept, DateTime, Dosage, Duration, Extension, Id, Identifier, Meta, Narrative, Period, Reference, SimpleQuantity, String, UnsignedInt, Uri } from "../datatypes_pb.js";
import { MedicationRequestIntentCode_Value, MedicationrequestStatusCode_Value, RequestPriorityCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for MedicationRequest.
 * Ordering of medication for patient or group.
 * See http://hl7.org/fhir/StructureDefinition/MedicationRequest
 *
 * @generated from message google.fhir.r4.core.MedicationRequest
 */
export class MedicationRequest extends Message<MedicationRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External ids for this request
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.StatusCode status = 11;
   */
  status?: MedicationRequest_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 12;
   */
  statusReason?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.IntentCode intent = 13;
   */
  intent?: MedicationRequest_IntentCode;

  /**
   * Type of medication usage
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 14;
   */
  category: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.PriorityCode priority = 15;
   */
  priority?: MedicationRequest_PriorityCode;

  /**
   * True if request is prohibiting action
   *
   * @generated from field: google.fhir.r4.core.Boolean do_not_perform = 16;
   */
  doNotPerform?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.ReportedX reported = 17;
   */
  reported?: MedicationRequest_ReportedX;

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.MedicationX medication = 18;
   */
  medication?: MedicationRequest_MedicationX;

  /**
   * Who or group medication request is for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 19;
   */
  subject?: Reference;

  /**
   * Encounter created as part of encounter/admission/stay
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 20;
   */
  encounter?: Reference;

  /**
   * Information to support ordering of the medication
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_information = 21;
   */
  supportingInformation: Reference[] = [];

  /**
   * When request was initially authored
   *
   * @generated from field: google.fhir.r4.core.DateTime authored_on = 22;
   */
  authoredOn?: DateTime;

  /**
   * Who/What requested the Request
   *
   * @generated from field: google.fhir.r4.core.Reference requester = 23;
   */
  requester?: Reference;

  /**
   * Intended performer of administration
   *
   * @generated from field: google.fhir.r4.core.Reference performer = 24;
   */
  performer?: Reference;

  /**
   * Desired kind of performer of the medication administration
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept performer_type = 25;
   */
  performerType?: CodeableConcept;

  /**
   * Person who entered the request
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 26;
   */
  recorder?: Reference;

  /**
   * Reason or indication for ordering or not ordering the medication
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 27;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or observation that supports why the prescription is being
   * written
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 28;
   */
  reasonReference: Reference[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 29;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 30;
   */
  instantiatesUri: Uri[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 31;
   */
  basedOn: Reference[] = [];

  /**
   * Composite request this is part of
   *
   * @generated from field: google.fhir.r4.core.Identifier group_identifier = 32;
   */
  groupIdentifier?: Identifier;

  /**
   * Overall pattern of medication administration
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept course_of_therapy_type = 33;
   */
  courseOfTherapyType?: CodeableConcept;

  /**
   * Associated insurance coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference insurance = 34;
   */
  insurance: Reference[] = [];

  /**
   * Information about the prescription
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 35;
   */
  note: Annotation[] = [];

  /**
   * How the medication should be taken
   *
   * @generated from field: repeated google.fhir.r4.core.Dosage dosage_instruction = 36;
   */
  dosageInstruction: Dosage[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.DispenseRequest dispense_request = 37;
   */
  dispenseRequest?: MedicationRequest_DispenseRequest;

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.Substitution substitution = 38;
   */
  substitution?: MedicationRequest_Substitution;

  /**
   * An order/prescription that is being replaced
   *
   * @generated from field: google.fhir.r4.core.Reference prior_prescription = 39;
   */
  priorPrescription?: Reference;

  /**
   * Clinical Issue with action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detected_issue = 40;
   */
  detectedIssue: Reference[] = [];

  /**
   * A list of events of interest in the lifecycle
   *
   * @generated from field: repeated google.fhir.r4.core.Reference event_history = 41;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<MedicationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: MedicationRequest_StatusCode },
    { no: 12, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 13, name: "intent", kind: "message", T: MedicationRequest_IntentCode },
    { no: 14, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "priority", kind: "message", T: MedicationRequest_PriorityCode },
    { no: 16, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 17, name: "reported", kind: "message", T: MedicationRequest_ReportedX },
    { no: 18, name: "medication", kind: "message", T: MedicationRequest_MedicationX },
    { no: 19, name: "subject", kind: "message", T: Reference },
    { no: 20, name: "encounter", kind: "message", T: Reference },
    { no: 21, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 22, name: "authored_on", kind: "message", T: DateTime },
    { no: 23, name: "requester", kind: "message", T: Reference },
    { no: 24, name: "performer", kind: "message", T: Reference },
    { no: 25, name: "performer_type", kind: "message", T: CodeableConcept },
    { no: 26, name: "recorder", kind: "message", T: Reference },
    { no: 27, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 28, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 30, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 31, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "group_identifier", kind: "message", T: Identifier },
    { no: 33, name: "course_of_therapy_type", kind: "message", T: CodeableConcept },
    { no: 34, name: "insurance", kind: "message", T: Reference, repeated: true },
    { no: 35, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 36, name: "dosage_instruction", kind: "message", T: Dosage, repeated: true },
    { no: 37, name: "dispense_request", kind: "message", T: MedicationRequest_DispenseRequest },
    { no: 38, name: "substitution", kind: "message", T: MedicationRequest_Substitution },
    { no: 39, name: "prior_prescription", kind: "message", T: Reference },
    { no: 40, name: "detected_issue", kind: "message", T: Reference, repeated: true },
    { no: 41, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest {
    return new MedicationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest {
    return new MedicationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest {
    return new MedicationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest | PlainMessage<MedicationRequest> | undefined, b: MedicationRequest | PlainMessage<MedicationRequest> | undefined): boolean {
    return proto3.util.equals(MedicationRequest, a, b);
  }
}

/**
 * active | on-hold | cancelled | completed | entered-in-error | stopped |
 * draft | unknown
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.StatusCode
 */
export class MedicationRequest_StatusCode extends Message<MedicationRequest_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationrequestStatusCode.Value value = 1;
   */
  value = MedicationrequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequest_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationrequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_StatusCode {
    return new MedicationRequest_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_StatusCode {
    return new MedicationRequest_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_StatusCode {
    return new MedicationRequest_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_StatusCode | PlainMessage<MedicationRequest_StatusCode> | undefined, b: MedicationRequest_StatusCode | PlainMessage<MedicationRequest_StatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_StatusCode, a, b);
  }
}

/**
 * proposal | plan | order | original-order | reflex-order | filler-order |
 * instance-order | option
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.IntentCode
 */
export class MedicationRequest_IntentCode extends Message<MedicationRequest_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationRequestIntentCode.Value value = 1;
   */
  value = MedicationRequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequest_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationRequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_IntentCode {
    return new MedicationRequest_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_IntentCode {
    return new MedicationRequest_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_IntentCode {
    return new MedicationRequest_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_IntentCode | PlainMessage<MedicationRequest_IntentCode> | undefined, b: MedicationRequest_IntentCode | PlainMessage<MedicationRequest_IntentCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_IntentCode, a, b);
  }
}

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.PriorityCode
 */
export class MedicationRequest_PriorityCode extends Message<MedicationRequest_PriorityCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationRequest_PriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.PriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_PriorityCode {
    return new MedicationRequest_PriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_PriorityCode {
    return new MedicationRequest_PriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_PriorityCode {
    return new MedicationRequest_PriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_PriorityCode | PlainMessage<MedicationRequest_PriorityCode> | undefined, b: MedicationRequest_PriorityCode | PlainMessage<MedicationRequest_PriorityCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_PriorityCode, a, b);
  }
}

/**
 * Reported rather than primary record
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.ReportedX
 */
export class MedicationRequest_ReportedX extends Message<MedicationRequest_ReportedX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationRequest.ReportedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationRequest_ReportedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.ReportedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_ReportedX {
    return new MedicationRequest_ReportedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_ReportedX {
    return new MedicationRequest_ReportedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_ReportedX {
    return new MedicationRequest_ReportedX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_ReportedX | PlainMessage<MedicationRequest_ReportedX> | undefined, b: MedicationRequest_ReportedX | PlainMessage<MedicationRequest_ReportedX> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_ReportedX, a, b);
  }
}

/**
 * Medication to be taken
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.MedicationX
 */
export class MedicationRequest_MedicationX extends Message<MedicationRequest_MedicationX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationRequest.MedicationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationRequest_MedicationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.MedicationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_MedicationX {
    return new MedicationRequest_MedicationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_MedicationX {
    return new MedicationRequest_MedicationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_MedicationX {
    return new MedicationRequest_MedicationX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_MedicationX | PlainMessage<MedicationRequest_MedicationX> | undefined, b: MedicationRequest_MedicationX | PlainMessage<MedicationRequest_MedicationX> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_MedicationX, a, b);
  }
}

/**
 * Medication supply authorization
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.DispenseRequest
 */
export class MedicationRequest_DispenseRequest extends Message<MedicationRequest_DispenseRequest> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.DispenseRequest.InitialFill initial_fill = 4;
   */
  initialFill?: MedicationRequest_DispenseRequest_InitialFill;

  /**
   * Minimum period of time between dispenses
   *
   * @generated from field: google.fhir.r4.core.Duration dispense_interval = 5;
   */
  dispenseInterval?: Duration;

  /**
   * Time period supply is authorized for
   *
   * @generated from field: google.fhir.r4.core.Period validity_period = 6;
   */
  validityPeriod?: Period;

  /**
   * Number of refills authorized
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt number_of_repeats_allowed = 7;
   */
  numberOfRepeatsAllowed?: UnsignedInt;

  /**
   * Amount of medication to supply per dispense
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 8;
   */
  quantity?: SimpleQuantity;

  /**
   * Number of days supply per dispense
   *
   * @generated from field: google.fhir.r4.core.Duration expected_supply_duration = 9;
   */
  expectedSupplyDuration?: Duration;

  /**
   * Intended dispenser
   *
   * @generated from field: google.fhir.r4.core.Reference performer = 10;
   */
  performer?: Reference;

  constructor(data?: PartialMessage<MedicationRequest_DispenseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.DispenseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "initial_fill", kind: "message", T: MedicationRequest_DispenseRequest_InitialFill },
    { no: 5, name: "dispense_interval", kind: "message", T: Duration },
    { no: 6, name: "validity_period", kind: "message", T: Period },
    { no: 7, name: "number_of_repeats_allowed", kind: "message", T: UnsignedInt },
    { no: 8, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 9, name: "expected_supply_duration", kind: "message", T: Duration },
    { no: 10, name: "performer", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_DispenseRequest {
    return new MedicationRequest_DispenseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_DispenseRequest {
    return new MedicationRequest_DispenseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_DispenseRequest {
    return new MedicationRequest_DispenseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_DispenseRequest | PlainMessage<MedicationRequest_DispenseRequest> | undefined, b: MedicationRequest_DispenseRequest | PlainMessage<MedicationRequest_DispenseRequest> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_DispenseRequest, a, b);
  }
}

/**
 * First fill details
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.DispenseRequest.InitialFill
 */
export class MedicationRequest_DispenseRequest_InitialFill extends Message<MedicationRequest_DispenseRequest_InitialFill> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * First fill quantity
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 4;
   */
  quantity?: SimpleQuantity;

  /**
   * First fill duration
   *
   * @generated from field: google.fhir.r4.core.Duration duration = 5;
   */
  duration?: Duration;

  constructor(data?: PartialMessage<MedicationRequest_DispenseRequest_InitialFill>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.DispenseRequest.InitialFill";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 5, name: "duration", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_DispenseRequest_InitialFill {
    return new MedicationRequest_DispenseRequest_InitialFill().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_DispenseRequest_InitialFill {
    return new MedicationRequest_DispenseRequest_InitialFill().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_DispenseRequest_InitialFill {
    return new MedicationRequest_DispenseRequest_InitialFill().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_DispenseRequest_InitialFill | PlainMessage<MedicationRequest_DispenseRequest_InitialFill> | undefined, b: MedicationRequest_DispenseRequest_InitialFill | PlainMessage<MedicationRequest_DispenseRequest_InitialFill> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_DispenseRequest_InitialFill, a, b);
  }
}

/**
 * Any restrictions on medication substitution
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.Substitution
 */
export class MedicationRequest_Substitution extends Message<MedicationRequest_Substitution> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationRequest.Substitution.AllowedX allowed = 4;
   */
  allowed?: MedicationRequest_Substitution_AllowedX;

  /**
   * Why should (not) substitution be made
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  constructor(data?: PartialMessage<MedicationRequest_Substitution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.Substitution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "allowed", kind: "message", T: MedicationRequest_Substitution_AllowedX },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_Substitution {
    return new MedicationRequest_Substitution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_Substitution {
    return new MedicationRequest_Substitution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_Substitution {
    return new MedicationRequest_Substitution().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_Substitution | PlainMessage<MedicationRequest_Substitution> | undefined, b: MedicationRequest_Substitution | PlainMessage<MedicationRequest_Substitution> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_Substitution, a, b);
  }
}

/**
 * Whether substitution is allowed or not
 *
 * @generated from message google.fhir.r4.core.MedicationRequest.Substitution.AllowedX
 */
export class MedicationRequest_Substitution_AllowedX extends Message<MedicationRequest_Substitution_AllowedX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationRequest.Substitution.AllowedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationRequest_Substitution_AllowedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequest.Substitution.AllowedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequest_Substitution_AllowedX {
    return new MedicationRequest_Substitution_AllowedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequest_Substitution_AllowedX {
    return new MedicationRequest_Substitution_AllowedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequest_Substitution_AllowedX {
    return new MedicationRequest_Substitution_AllowedX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequest_Substitution_AllowedX | PlainMessage<MedicationRequest_Substitution_AllowedX> | undefined, b: MedicationRequest_Substitution_AllowedX | PlainMessage<MedicationRequest_Substitution_AllowedX> | undefined): boolean {
    return proto3.util.equals(MedicationRequest_Substitution_AllowedX, a, b);
  }
}

