//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/message_definition.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, DateTime, Extension, Id, Identifier, Markdown, Meta, Narrative, String, UnsignedInt, Uri, UsageContext } from "../datatypes_pb.js";
import { MessageheaderResponseRequestCode_Value, MessageSignificanceCategoryCode_Value, PublicationStatusCode_Value, ResourceTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for MessageDefinition.
 * A resource that defines a type of message that can be exchanged between
 * systems. See http://hl7.org/fhir/StructureDefinition/MessageDefinition
 *
 * @generated from message google.fhir.r4.core.MessageDefinition
 */
export class MessageDefinition extends Message<MessageDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for a given MessageDefinition
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Primary key for the message definition on a given server
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the message definition
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this message definition (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this message definition (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * Takes the place of
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical replaces = 15;
   */
  replaces: Canonical[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MessageDefinition.StatusCode status = 16;
   */
  status?: MessageDefinition_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 17;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 18;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 19;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 20;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the message definition
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 21;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 22;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for message definition (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 23;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this message definition is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 24;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 25;
   */
  copyright?: Markdown;

  /**
   * Definition this one is based on
   *
   * @generated from field: google.fhir.r4.core.Canonical base = 26;
   */
  base?: Canonical;

  /**
   * Protocol/workflow this is part of
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical parent = 27;
   */
  parent: Canonical[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MessageDefinition.EventX event = 28;
   */
  event?: MessageDefinition_EventX;

  /**
   * @generated from field: google.fhir.r4.core.MessageDefinition.CategoryCode category = 29;
   */
  category?: MessageDefinition_CategoryCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.MessageDefinition.Focus focus = 30;
   */
  focus: MessageDefinition_Focus[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MessageDefinition.ResponseRequiredCode response_required = 31;
   */
  responseRequired?: MessageDefinition_ResponseRequiredCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.MessageDefinition.AllowedResponse allowed_response = 32;
   */
  allowedResponse: MessageDefinition_AllowedResponse[] = [];

  /**
   * Canonical reference to a GraphDefinition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical graph = 33;
   */
  graph: Canonical[] = [];

  constructor(data?: PartialMessage<MessageDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "replaces", kind: "message", T: Canonical, repeated: true },
    { no: 16, name: "status", kind: "message", T: MessageDefinition_StatusCode },
    { no: 17, name: "experimental", kind: "message", T: Boolean },
    { no: 18, name: "date", kind: "message", T: DateTime },
    { no: 19, name: "publisher", kind: "message", T: String },
    { no: 20, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 21, name: "description", kind: "message", T: Markdown },
    { no: 22, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 23, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "purpose", kind: "message", T: Markdown },
    { no: 25, name: "copyright", kind: "message", T: Markdown },
    { no: 26, name: "base", kind: "message", T: Canonical },
    { no: 27, name: "parent", kind: "message", T: Canonical, repeated: true },
    { no: 28, name: "event", kind: "message", T: MessageDefinition_EventX },
    { no: 29, name: "category", kind: "message", T: MessageDefinition_CategoryCode },
    { no: 30, name: "focus", kind: "message", T: MessageDefinition_Focus, repeated: true },
    { no: 31, name: "response_required", kind: "message", T: MessageDefinition_ResponseRequiredCode },
    { no: 32, name: "allowed_response", kind: "message", T: MessageDefinition_AllowedResponse, repeated: true },
    { no: 33, name: "graph", kind: "message", T: Canonical, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition {
    return new MessageDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition {
    return new MessageDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition {
    return new MessageDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition | PlainMessage<MessageDefinition> | undefined, b: MessageDefinition | PlainMessage<MessageDefinition> | undefined): boolean {
    return proto3.util.equals(MessageDefinition, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.StatusCode
 */
export class MessageDefinition_StatusCode extends Message<MessageDefinition_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageDefinition_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_StatusCode {
    return new MessageDefinition_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_StatusCode {
    return new MessageDefinition_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_StatusCode {
    return new MessageDefinition_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_StatusCode | PlainMessage<MessageDefinition_StatusCode> | undefined, b: MessageDefinition_StatusCode | PlainMessage<MessageDefinition_StatusCode> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_StatusCode, a, b);
  }
}

/**
 * Event code  or link to the EventDefinition
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.EventX
 */
export class MessageDefinition_EventX extends Message<MessageDefinition_EventX> {
  /**
   * @generated from oneof google.fhir.r4.core.MessageDefinition.EventX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 1;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 2;
     */
    value: Uri;
    case: "uri";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MessageDefinition_EventX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.EventX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 2, name: "uri", kind: "message", T: Uri, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_EventX {
    return new MessageDefinition_EventX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_EventX {
    return new MessageDefinition_EventX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_EventX {
    return new MessageDefinition_EventX().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_EventX | PlainMessage<MessageDefinition_EventX> | undefined, b: MessageDefinition_EventX | PlainMessage<MessageDefinition_EventX> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_EventX, a, b);
  }
}

/**
 * consequence | currency | notification
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.CategoryCode
 */
export class MessageDefinition_CategoryCode extends Message<MessageDefinition_CategoryCode> {
  /**
   * @generated from field: google.fhir.r4.core.MessageSignificanceCategoryCode.Value value = 1;
   */
  value = MessageSignificanceCategoryCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageDefinition_CategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.CategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageSignificanceCategoryCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_CategoryCode {
    return new MessageDefinition_CategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_CategoryCode {
    return new MessageDefinition_CategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_CategoryCode {
    return new MessageDefinition_CategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_CategoryCode | PlainMessage<MessageDefinition_CategoryCode> | undefined, b: MessageDefinition_CategoryCode | PlainMessage<MessageDefinition_CategoryCode> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_CategoryCode, a, b);
  }
}

/**
 * Resource(s) that are the subject of the event
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.Focus
 */
export class MessageDefinition_Focus extends Message<MessageDefinition_Focus> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MessageDefinition.Focus.CodeType code = 4;
   */
  code?: MessageDefinition_Focus_CodeType;

  /**
   * Profile that must be adhered to by focus
   *
   * @generated from field: google.fhir.r4.core.Canonical profile = 5;
   */
  profile?: Canonical;

  /**
   * Minimum number of focuses of this type
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt min = 6;
   */
  min?: UnsignedInt;

  /**
   * Maximum number of focuses of this type
   *
   * @generated from field: google.fhir.r4.core.String max = 7;
   */
  max?: String;

  constructor(data?: PartialMessage<MessageDefinition_Focus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.Focus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: MessageDefinition_Focus_CodeType },
    { no: 5, name: "profile", kind: "message", T: Canonical },
    { no: 6, name: "min", kind: "message", T: UnsignedInt },
    { no: 7, name: "max", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_Focus {
    return new MessageDefinition_Focus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_Focus {
    return new MessageDefinition_Focus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_Focus {
    return new MessageDefinition_Focus().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_Focus | PlainMessage<MessageDefinition_Focus> | undefined, b: MessageDefinition_Focus | PlainMessage<MessageDefinition_Focus> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_Focus, a, b);
  }
}

/**
 * Type of resource
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.Focus.CodeType
 */
export class MessageDefinition_Focus_CodeType extends Message<MessageDefinition_Focus_CodeType> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageDefinition_Focus_CodeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.Focus.CodeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_Focus_CodeType {
    return new MessageDefinition_Focus_CodeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_Focus_CodeType {
    return new MessageDefinition_Focus_CodeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_Focus_CodeType {
    return new MessageDefinition_Focus_CodeType().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_Focus_CodeType | PlainMessage<MessageDefinition_Focus_CodeType> | undefined, b: MessageDefinition_Focus_CodeType | PlainMessage<MessageDefinition_Focus_CodeType> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_Focus_CodeType, a, b);
  }
}

/**
 * always | on-error | never | on-success
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.ResponseRequiredCode
 */
export class MessageDefinition_ResponseRequiredCode extends Message<MessageDefinition_ResponseRequiredCode> {
  /**
   * @generated from field: google.fhir.r4.core.MessageheaderResponseRequestCode.Value value = 1;
   */
  value = MessageheaderResponseRequestCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MessageDefinition_ResponseRequiredCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.ResponseRequiredCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MessageheaderResponseRequestCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_ResponseRequiredCode {
    return new MessageDefinition_ResponseRequiredCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_ResponseRequiredCode {
    return new MessageDefinition_ResponseRequiredCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_ResponseRequiredCode {
    return new MessageDefinition_ResponseRequiredCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_ResponseRequiredCode | PlainMessage<MessageDefinition_ResponseRequiredCode> | undefined, b: MessageDefinition_ResponseRequiredCode | PlainMessage<MessageDefinition_ResponseRequiredCode> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_ResponseRequiredCode, a, b);
  }
}

/**
 * Responses to this message
 *
 * @generated from message google.fhir.r4.core.MessageDefinition.AllowedResponse
 */
export class MessageDefinition_AllowedResponse extends Message<MessageDefinition_AllowedResponse> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to allowed message definition response
   *
   * @generated from field: google.fhir.r4.core.Canonical message = 4;
   */
  message?: Canonical;

  /**
   * When should this response be used
   *
   * @generated from field: google.fhir.r4.core.Markdown situation = 5;
   */
  situation?: Markdown;

  constructor(data?: PartialMessage<MessageDefinition_AllowedResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageDefinition.AllowedResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "message", kind: "message", T: Canonical },
    { no: 5, name: "situation", kind: "message", T: Markdown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageDefinition_AllowedResponse {
    return new MessageDefinition_AllowedResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageDefinition_AllowedResponse {
    return new MessageDefinition_AllowedResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageDefinition_AllowedResponse {
    return new MessageDefinition_AllowedResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MessageDefinition_AllowedResponse | PlainMessage<MessageDefinition_AllowedResponse> | undefined, b: MessageDefinition_AllowedResponse | PlainMessage<MessageDefinition_AllowedResponse> | undefined): boolean {
    return proto3.util.equals(MessageDefinition_AllowedResponse, a, b);
  }
}

