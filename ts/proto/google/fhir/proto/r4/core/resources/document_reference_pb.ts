//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/document_reference.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Attachment, Code, CodeableConcept, Coding, Extension, Id, Identifier, Instant, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb.js";
import { CompositionStatusCode_Value, DocumentReferenceStatusCode_Value, DocumentRelationshipTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for DocumentReference.
 * A reference to a document.
 * See http://hl7.org/fhir/StructureDefinition/DocumentReference
 *
 * @generated from message google.fhir.r4.core.DocumentReference
 */
export class DocumentReference extends Message<DocumentReference> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Master Version Specific Identifier
   *
   * @generated from field: google.fhir.r4.core.Identifier master_identifier = 10;
   */
  masterIdentifier?: Identifier;

  /**
   * Other identifiers for the document
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DocumentReference.StatusCode status = 12;
   */
  status?: DocumentReference_StatusCode;

  /**
   * @generated from field: google.fhir.r4.core.DocumentReference.DocStatusCode doc_status = 13;
   */
  docStatus?: DocumentReference_DocStatusCode;

  /**
   * Kind of document (LOINC if possible)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 14;
   */
  type?: CodeableConcept;

  /**
   * Categorization of document
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 15;
   */
  category: CodeableConcept[] = [];

  /**
   * Who/what is the subject of the document
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * When this document reference was created
   *
   * @generated from field: google.fhir.r4.core.Instant date = 17;
   */
  date?: Instant;

  /**
   * Who and/or what authored the document
   *
   * @generated from field: repeated google.fhir.r4.core.Reference author = 18;
   */
  author: Reference[] = [];

  /**
   * Who/what authenticated the document
   *
   * @generated from field: google.fhir.r4.core.Reference authenticator = 19;
   */
  authenticator?: Reference;

  /**
   * Organization which maintains the document
   *
   * @generated from field: google.fhir.r4.core.Reference custodian = 20;
   */
  custodian?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.DocumentReference.RelatesTo relates_to = 21;
   */
  relatesTo: DocumentReference_RelatesTo[] = [];

  /**
   * Human-readable description
   *
   * @generated from field: google.fhir.r4.core.String description = 22;
   */
  description?: String;

  /**
   * Document security-tags
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept security_label = 23;
   */
  securityLabel: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.DocumentReference.Content content = 24;
   */
  content: DocumentReference_Content[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DocumentReference.Context context = 25;
   */
  context?: DocumentReference_Context;

  constructor(data?: PartialMessage<DocumentReference>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "master_identifier", kind: "message", T: Identifier },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "status", kind: "message", T: DocumentReference_StatusCode },
    { no: 13, name: "doc_status", kind: "message", T: DocumentReference_DocStatusCode },
    { no: 14, name: "type", kind: "message", T: CodeableConcept },
    { no: 15, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "date", kind: "message", T: Instant },
    { no: 18, name: "author", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "authenticator", kind: "message", T: Reference },
    { no: 20, name: "custodian", kind: "message", T: Reference },
    { no: 21, name: "relates_to", kind: "message", T: DocumentReference_RelatesTo, repeated: true },
    { no: 22, name: "description", kind: "message", T: String },
    { no: 23, name: "security_label", kind: "message", T: CodeableConcept, repeated: true },
    { no: 24, name: "content", kind: "message", T: DocumentReference_Content, repeated: true },
    { no: 25, name: "context", kind: "message", T: DocumentReference_Context },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference {
    return new DocumentReference().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference {
    return new DocumentReference().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference {
    return new DocumentReference().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference | PlainMessage<DocumentReference> | undefined, b: DocumentReference | PlainMessage<DocumentReference> | undefined): boolean {
    return proto3.util.equals(DocumentReference, a, b);
  }
}

/**
 * current | superseded | entered-in-error
 *
 * @generated from message google.fhir.r4.core.DocumentReference.StatusCode
 */
export class DocumentReference_StatusCode extends Message<DocumentReference_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.DocumentReferenceStatusCode.Value value = 1;
   */
  value = DocumentReferenceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DocumentReference_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentReferenceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_StatusCode {
    return new DocumentReference_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_StatusCode {
    return new DocumentReference_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_StatusCode {
    return new DocumentReference_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_StatusCode | PlainMessage<DocumentReference_StatusCode> | undefined, b: DocumentReference_StatusCode | PlainMessage<DocumentReference_StatusCode> | undefined): boolean {
    return proto3.util.equals(DocumentReference_StatusCode, a, b);
  }
}

/**
 * preliminary | final | amended | entered-in-error
 *
 * @generated from message google.fhir.r4.core.DocumentReference.DocStatusCode
 */
export class DocumentReference_DocStatusCode extends Message<DocumentReference_DocStatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.CompositionStatusCode.Value value = 1;
   */
  value = CompositionStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DocumentReference_DocStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference.DocStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompositionStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_DocStatusCode {
    return new DocumentReference_DocStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_DocStatusCode {
    return new DocumentReference_DocStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_DocStatusCode {
    return new DocumentReference_DocStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_DocStatusCode | PlainMessage<DocumentReference_DocStatusCode> | undefined, b: DocumentReference_DocStatusCode | PlainMessage<DocumentReference_DocStatusCode> | undefined): boolean {
    return proto3.util.equals(DocumentReference_DocStatusCode, a, b);
  }
}

/**
 * Relationships to other documents
 *
 * @generated from message google.fhir.r4.core.DocumentReference.RelatesTo
 */
export class DocumentReference_RelatesTo extends Message<DocumentReference_RelatesTo> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DocumentReference.RelatesTo.CodeType code = 4;
   */
  code?: DocumentReference_RelatesTo_CodeType;

  /**
   * Target of the relationship
   *
   * @generated from field: google.fhir.r4.core.Reference target = 5;
   */
  target?: Reference;

  constructor(data?: PartialMessage<DocumentReference_RelatesTo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference.RelatesTo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: DocumentReference_RelatesTo_CodeType },
    { no: 5, name: "target", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_RelatesTo {
    return new DocumentReference_RelatesTo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_RelatesTo {
    return new DocumentReference_RelatesTo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_RelatesTo {
    return new DocumentReference_RelatesTo().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_RelatesTo | PlainMessage<DocumentReference_RelatesTo> | undefined, b: DocumentReference_RelatesTo | PlainMessage<DocumentReference_RelatesTo> | undefined): boolean {
    return proto3.util.equals(DocumentReference_RelatesTo, a, b);
  }
}

/**
 * replaces | transforms | signs | appends
 *
 * @generated from message google.fhir.r4.core.DocumentReference.RelatesTo.CodeType
 */
export class DocumentReference_RelatesTo_CodeType extends Message<DocumentReference_RelatesTo_CodeType> {
  /**
   * @generated from field: google.fhir.r4.core.DocumentRelationshipTypeCode.Value value = 1;
   */
  value = DocumentRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DocumentReference_RelatesTo_CodeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference.RelatesTo.CodeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DocumentRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_RelatesTo_CodeType {
    return new DocumentReference_RelatesTo_CodeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_RelatesTo_CodeType {
    return new DocumentReference_RelatesTo_CodeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_RelatesTo_CodeType {
    return new DocumentReference_RelatesTo_CodeType().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_RelatesTo_CodeType | PlainMessage<DocumentReference_RelatesTo_CodeType> | undefined, b: DocumentReference_RelatesTo_CodeType | PlainMessage<DocumentReference_RelatesTo_CodeType> | undefined): boolean {
    return proto3.util.equals(DocumentReference_RelatesTo_CodeType, a, b);
  }
}

/**
 * Document referenced
 *
 * @generated from message google.fhir.r4.core.DocumentReference.Content
 */
export class DocumentReference_Content extends Message<DocumentReference_Content> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Where to access the document
   *
   * @generated from field: google.fhir.r4.core.Attachment attachment = 4;
   */
  attachment?: Attachment;

  /**
   * Format/content rules for the document
   *
   * @generated from field: google.fhir.r4.core.Coding format = 5;
   */
  format?: Coding;

  constructor(data?: PartialMessage<DocumentReference_Content>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference.Content";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "attachment", kind: "message", T: Attachment },
    { no: 5, name: "format", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_Content {
    return new DocumentReference_Content().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_Content {
    return new DocumentReference_Content().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_Content {
    return new DocumentReference_Content().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_Content | PlainMessage<DocumentReference_Content> | undefined, b: DocumentReference_Content | PlainMessage<DocumentReference_Content> | undefined): boolean {
    return proto3.util.equals(DocumentReference_Content, a, b);
  }
}

/**
 * Clinical context of document
 *
 * @generated from message google.fhir.r4.core.DocumentReference.Context
 */
export class DocumentReference_Context extends Message<DocumentReference_Context> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Context of the document  content
   *
   * @generated from field: repeated google.fhir.r4.core.Reference encounter = 4;
   */
  encounter: Reference[] = [];

  /**
   * Main clinical acts documented
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept event = 5;
   */
  event: CodeableConcept[] = [];

  /**
   * Time of service that is being documented
   *
   * @generated from field: google.fhir.r4.core.Period period = 6;
   */
  period?: Period;

  /**
   * Kind of facility where patient was seen
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept facility_type = 7;
   */
  facilityType?: CodeableConcept;

  /**
   * Additional details about where the content was created (e.g. clinical
   * specialty)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept practice_setting = 8;
   */
  practiceSetting?: CodeableConcept;

  /**
   * Patient demographics from source
   *
   * @generated from field: google.fhir.r4.core.Reference source_patient_info = 9;
   */
  sourcePatientInfo?: Reference;

  /**
   * Related identifiers or resources
   *
   * @generated from field: repeated google.fhir.r4.core.Reference related = 10;
   */
  related: Reference[] = [];

  constructor(data?: PartialMessage<DocumentReference_Context>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReference.Context";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "encounter", kind: "message", T: Reference, repeated: true },
    { no: 5, name: "event", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "period", kind: "message", T: Period },
    { no: 7, name: "facility_type", kind: "message", T: CodeableConcept },
    { no: 8, name: "practice_setting", kind: "message", T: CodeableConcept },
    { no: 9, name: "source_patient_info", kind: "message", T: Reference },
    { no: 10, name: "related", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReference_Context {
    return new DocumentReference_Context().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReference_Context {
    return new DocumentReference_Context().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReference_Context {
    return new DocumentReference_Context().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReference_Context | PlainMessage<DocumentReference_Context> | undefined, b: DocumentReference_Context | PlainMessage<DocumentReference_Context> | undefined): boolean {
    return proto3.util.equals(DocumentReference_Context, a, b);
  }
}

