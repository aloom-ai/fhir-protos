//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/medication_administration.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Ratio, Reference, SimpleQuantity, String, Uri } from "../datatypes_pb.js";
import { MedicationAdministrationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for MedicationAdministration.
 * Administration of medication to a patient.
 * See http://hl7.org/fhir/StructureDefinition/MedicationAdministration
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration
 */
export class MedicationAdministration extends Message<MedicationAdministration> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates = 11;
   */
  instantiates: Uri[] = [];

  /**
   * Part of referenced event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationAdministration.StatusCode status = 13;
   */
  status?: MedicationAdministration_StatusCode;

  /**
   * Reason administration not performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept status_reason = 14;
   */
  statusReason: CodeableConcept[] = [];

  /**
   * Type of medication usage
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 15;
   */
  category?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.MedicationAdministration.MedicationX medication = 16;
   */
  medication?: MedicationAdministration_MedicationX;

  /**
   * Who received medication
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 17;
   */
  subject?: Reference;

  /**
   * Encounter or Episode of Care administered as part of
   *
   * @generated from field: google.fhir.r4.core.Reference context = 18;
   */
  context?: Reference;

  /**
   * Additional information to support administration
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_information = 19;
   */
  supportingInformation: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationAdministration.EffectiveX effective = 20;
   */
  effective?: MedicationAdministration_EffectiveX;

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationAdministration.Performer performer = 21;
   */
  performer: MedicationAdministration_Performer[] = [];

  /**
   * Reason administration performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 22;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Condition or observation that supports why the medication was administered
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 23;
   */
  reasonReference: Reference[] = [];

  /**
   * Request administration performed against
   *
   * @generated from field: google.fhir.r4.core.Reference request = 24;
   */
  request?: Reference;

  /**
   * Device used to administer
   *
   * @generated from field: repeated google.fhir.r4.core.Reference device = 25;
   */
  device: Reference[] = [];

  /**
   * Information about the administration
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 26;
   */
  note: Annotation[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationAdministration.Dosage dosage = 27;
   */
  dosage?: MedicationAdministration_Dosage;

  /**
   * A list of events of interest in the lifecycle
   *
   * @generated from field: repeated google.fhir.r4.core.Reference event_history = 28;
   */
  eventHistory: Reference[] = [];

  constructor(data?: PartialMessage<MedicationAdministration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates", kind: "message", T: Uri, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "status", kind: "message", T: MedicationAdministration_StatusCode },
    { no: 14, name: "status_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 15, name: "category", kind: "message", T: CodeableConcept },
    { no: 16, name: "medication", kind: "message", T: MedicationAdministration_MedicationX },
    { no: 17, name: "subject", kind: "message", T: Reference },
    { no: 18, name: "context", kind: "message", T: Reference },
    { no: 19, name: "supporting_information", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "effective", kind: "message", T: MedicationAdministration_EffectiveX },
    { no: 21, name: "performer", kind: "message", T: MedicationAdministration_Performer, repeated: true },
    { no: 22, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "request", kind: "message", T: Reference },
    { no: 25, name: "device", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 27, name: "dosage", kind: "message", T: MedicationAdministration_Dosage },
    { no: 28, name: "event_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration {
    return new MedicationAdministration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration {
    return new MedicationAdministration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration {
    return new MedicationAdministration().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration | PlainMessage<MedicationAdministration> | undefined, b: MedicationAdministration | PlainMessage<MedicationAdministration> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration, a, b);
  }
}

/**
 * in-progress | not-done | on-hold | completed | entered-in-error | stopped |
 * unknown
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration.StatusCode
 */
export class MedicationAdministration_StatusCode extends Message<MedicationAdministration_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationAdministrationStatusCode.Value value = 1;
   */
  value = MedicationAdministrationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationAdministration_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationAdministrationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_StatusCode {
    return new MedicationAdministration_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_StatusCode {
    return new MedicationAdministration_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_StatusCode {
    return new MedicationAdministration_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_StatusCode | PlainMessage<MedicationAdministration_StatusCode> | undefined, b: MedicationAdministration_StatusCode | PlainMessage<MedicationAdministration_StatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_StatusCode, a, b);
  }
}

/**
 * What was administered
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration.MedicationX
 */
export class MedicationAdministration_MedicationX extends Message<MedicationAdministration_MedicationX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationAdministration.MedicationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationAdministration_MedicationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration.MedicationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_MedicationX {
    return new MedicationAdministration_MedicationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_MedicationX {
    return new MedicationAdministration_MedicationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_MedicationX {
    return new MedicationAdministration_MedicationX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_MedicationX | PlainMessage<MedicationAdministration_MedicationX> | undefined, b: MedicationAdministration_MedicationX | PlainMessage<MedicationAdministration_MedicationX> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_MedicationX, a, b);
  }
}

/**
 * Start and end time of administration
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration.EffectiveX
 */
export class MedicationAdministration_EffectiveX extends Message<MedicationAdministration_EffectiveX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationAdministration.EffectiveX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationAdministration_EffectiveX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration.EffectiveX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_EffectiveX {
    return new MedicationAdministration_EffectiveX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_EffectiveX {
    return new MedicationAdministration_EffectiveX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_EffectiveX {
    return new MedicationAdministration_EffectiveX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_EffectiveX | PlainMessage<MedicationAdministration_EffectiveX> | undefined, b: MedicationAdministration_EffectiveX | PlainMessage<MedicationAdministration_EffectiveX> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_EffectiveX, a, b);
  }
}

/**
 * Who performed the medication administration and what they did
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration.Performer
 */
export class MedicationAdministration_Performer extends Message<MedicationAdministration_Performer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of performance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * Who performed the medication administration
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<MedicationAdministration_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "function", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Performer {
    return new MedicationAdministration_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Performer {
    return new MedicationAdministration_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Performer {
    return new MedicationAdministration_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Performer | PlainMessage<MedicationAdministration_Performer> | undefined, b: MedicationAdministration_Performer | PlainMessage<MedicationAdministration_Performer> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Performer, a, b);
  }
}

/**
 * Details of how medication was taken
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration.Dosage
 */
export class MedicationAdministration_Dosage extends Message<MedicationAdministration_Dosage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Free text dosage instructions e.g. SIG
   *
   * @generated from field: google.fhir.r4.core.String text = 4;
   */
  text?: String;

  /**
   * Body site administered to
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept site = 5;
   */
  site?: CodeableConcept;

  /**
   * Path of substance into body
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept route = 6;
   */
  route?: CodeableConcept;

  /**
   * How drug was administered
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 7;
   */
  method?: CodeableConcept;

  /**
   * Amount of medication per dose
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity dose = 8;
   */
  dose?: SimpleQuantity;

  /**
   * @generated from field: google.fhir.r4.core.MedicationAdministration.Dosage.RateX rate = 9;
   */
  rate?: MedicationAdministration_Dosage_RateX;

  constructor(data?: PartialMessage<MedicationAdministration_Dosage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration.Dosage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "text", kind: "message", T: String },
    { no: 5, name: "site", kind: "message", T: CodeableConcept },
    { no: 6, name: "route", kind: "message", T: CodeableConcept },
    { no: 7, name: "method", kind: "message", T: CodeableConcept },
    { no: 8, name: "dose", kind: "message", T: SimpleQuantity },
    { no: 9, name: "rate", kind: "message", T: MedicationAdministration_Dosage_RateX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Dosage {
    return new MedicationAdministration_Dosage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage {
    return new MedicationAdministration_Dosage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage {
    return new MedicationAdministration_Dosage().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Dosage | PlainMessage<MedicationAdministration_Dosage> | undefined, b: MedicationAdministration_Dosage | PlainMessage<MedicationAdministration_Dosage> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Dosage, a, b);
  }
}

/**
 * Dose quantity per unit of time
 *
 * @generated from message google.fhir.r4.core.MedicationAdministration.Dosage.RateX
 */
export class MedicationAdministration_Dosage_RateX extends Message<MedicationAdministration_Dosage_RateX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationAdministration.Dosage.RateX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 1;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 2;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationAdministration_Dosage_RateX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministration.Dosage.RateX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 2, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministration_Dosage_RateX {
    return new MedicationAdministration_Dosage_RateX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage_RateX {
    return new MedicationAdministration_Dosage_RateX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministration_Dosage_RateX {
    return new MedicationAdministration_Dosage_RateX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministration_Dosage_RateX | PlainMessage<MedicationAdministration_Dosage_RateX> | undefined, b: MedicationAdministration_Dosage_RateX | PlainMessage<MedicationAdministration_Dosage_RateX> | undefined): boolean {
    return proto3.util.equals(MedicationAdministration_Dosage_RateX, a, b);
  }
}

