//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/structure_map.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, Date, DateTime, Decimal, Distance, Dosage, Duration, Expression, Extension, HumanName, Id, Identifier, Instant, Integer, Markdown, Meta, Money, Narrative, Oid, ParameterDefinition, Period, PositiveInt, Quantity, Range, Ratio, Reference, RelatedArtifact, SampledData, Signature, String, Time, Timing, TriggerDefinition, UnsignedInt, Uri, Url, UsageContext, Uuid } from "../datatypes_pb.js";
import { PublicationStatusCode_Value, StructureMapContextTypeCode_Value, StructureMapGroupTypeModeCode_Value, StructureMapInputModeCode_Value, StructureMapModelModeCode_Value, StructureMapSourceListModeCode_Value, StructureMapTargetListModeCode_Value, StructureMapTransformCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for StructureMap.
 * A Map of relationships between 2 structures that can be used to transform
 * data. See http://hl7.org/fhir/StructureDefinition/StructureMap
 *
 * @generated from message google.fhir.r4.core.StructureMap
 */
export class StructureMap extends Message<StructureMap> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this structure map, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the structure map
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the structure map
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this structure map (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this structure map (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.StatusCode status = 15;
   */
  status?: StructureMap_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 18;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 19;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the structure map
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for structure map (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this structure map is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Structure structure = 25;
   */
  structure: StructureMap_Structure[] = [];

  /**
   * Other maps used by this map (canonical URLs)
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical import = 26;
   */
  import: Canonical[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group group = 27;
   */
  group: StructureMap_Group[] = [];

  constructor(data?: PartialMessage<StructureMap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "status", kind: "message", T: StructureMap_StatusCode },
    { no: 16, name: "experimental", kind: "message", T: Boolean },
    { no: 17, name: "date", kind: "message", T: DateTime },
    { no: 18, name: "publisher", kind: "message", T: String },
    { no: 19, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 20, name: "description", kind: "message", T: Markdown },
    { no: 21, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 22, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "purpose", kind: "message", T: Markdown },
    { no: 24, name: "copyright", kind: "message", T: Markdown },
    { no: 25, name: "structure", kind: "message", T: StructureMap_Structure, repeated: true },
    { no: 26, name: "import", kind: "message", T: Canonical, repeated: true },
    { no: 27, name: "group", kind: "message", T: StructureMap_Group, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap {
    return new StructureMap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap {
    return new StructureMap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap {
    return new StructureMap().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap | PlainMessage<StructureMap> | undefined, b: StructureMap | PlainMessage<StructureMap> | undefined): boolean {
    return proto3.util.equals(StructureMap, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.StructureMap.StatusCode
 */
export class StructureMap_StatusCode extends Message<StructureMap_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_StatusCode {
    return new StructureMap_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_StatusCode {
    return new StructureMap_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_StatusCode {
    return new StructureMap_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_StatusCode | PlainMessage<StructureMap_StatusCode> | undefined, b: StructureMap_StatusCode | PlainMessage<StructureMap_StatusCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_StatusCode, a, b);
  }
}

/**
 * Structure Definition used by this map
 *
 * @generated from message google.fhir.r4.core.StructureMap.Structure
 */
export class StructureMap_Structure extends Message<StructureMap_Structure> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical reference to structure definition
   *
   * @generated from field: google.fhir.r4.core.Canonical url = 4;
   */
  url?: Canonical;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Structure.ModeCode mode = 5;
   */
  mode?: StructureMap_Structure_ModeCode;

  /**
   * Name for type in this map
   *
   * @generated from field: google.fhir.r4.core.String alias = 6;
   */
  alias?: String;

  /**
   * Documentation on use of structure
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;

  constructor(data?: PartialMessage<StructureMap_Structure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Structure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "url", kind: "message", T: Canonical },
    { no: 5, name: "mode", kind: "message", T: StructureMap_Structure_ModeCode },
    { no: 6, name: "alias", kind: "message", T: String },
    { no: 7, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Structure {
    return new StructureMap_Structure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Structure {
    return new StructureMap_Structure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Structure {
    return new StructureMap_Structure().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Structure | PlainMessage<StructureMap_Structure> | undefined, b: StructureMap_Structure | PlainMessage<StructureMap_Structure> | undefined): boolean {
    return proto3.util.equals(StructureMap_Structure, a, b);
  }
}

/**
 * source | queried | target | produced
 *
 * @generated from message google.fhir.r4.core.StructureMap.Structure.ModeCode
 */
export class StructureMap_Structure_ModeCode extends Message<StructureMap_Structure_ModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapModelModeCode.Value value = 1;
   */
  value = StructureMapModelModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Structure_ModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Structure.ModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapModelModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Structure_ModeCode {
    return new StructureMap_Structure_ModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Structure_ModeCode {
    return new StructureMap_Structure_ModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Structure_ModeCode {
    return new StructureMap_Structure_ModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Structure_ModeCode | PlainMessage<StructureMap_Structure_ModeCode> | undefined, b: StructureMap_Structure_ModeCode | PlainMessage<StructureMap_Structure_ModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Structure_ModeCode, a, b);
  }
}

/**
 * Named sections for reader convenience
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group
 */
export class StructureMap_Group extends Message<StructureMap_Group> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Human-readable label
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * Another group that this group adds rules to
   *
   * @generated from field: google.fhir.r4.core.Id extends = 5;
   */
  extends?: Id;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.TypeModeCode type_mode = 6;
   */
  typeMode?: StructureMap_Group_TypeModeCode;

  /**
   * Additional description/explanation for group
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Input input = 8;
   */
  input: StructureMap_Group_Input[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule rule = 9;
   */
  rule: StructureMap_Group_Rule[] = [];

  constructor(data?: PartialMessage<StructureMap_Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "extends", kind: "message", T: Id },
    { no: 6, name: "type_mode", kind: "message", T: StructureMap_Group_TypeModeCode },
    { no: 7, name: "documentation", kind: "message", T: String },
    { no: 8, name: "input", kind: "message", T: StructureMap_Group_Input, repeated: true },
    { no: 9, name: "rule", kind: "message", T: StructureMap_Group_Rule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group {
    return new StructureMap_Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group {
    return new StructureMap_Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group {
    return new StructureMap_Group().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group | PlainMessage<StructureMap_Group> | undefined, b: StructureMap_Group | PlainMessage<StructureMap_Group> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group, a, b);
  }
}

/**
 * none | types | type-and-types
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.TypeModeCode
 */
export class StructureMap_Group_TypeModeCode extends Message<StructureMap_Group_TypeModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapGroupTypeModeCode.Value value = 1;
   */
  value = StructureMapGroupTypeModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_TypeModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.TypeModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapGroupTypeModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_TypeModeCode {
    return new StructureMap_Group_TypeModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_TypeModeCode {
    return new StructureMap_Group_TypeModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_TypeModeCode {
    return new StructureMap_Group_TypeModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_TypeModeCode | PlainMessage<StructureMap_Group_TypeModeCode> | undefined, b: StructureMap_Group_TypeModeCode | PlainMessage<StructureMap_Group_TypeModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_TypeModeCode, a, b);
  }
}

/**
 * Named instance provided when invoking the map
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Input
 */
export class StructureMap_Group_Input extends Message<StructureMap_Group_Input> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name for this instance of data
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * Type for this instance of data
   *
   * @generated from field: google.fhir.r4.core.String type = 5;
   */
  type?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Input.ModeCode mode = 6;
   */
  mode?: StructureMap_Group_Input_ModeCode;

  /**
   * Documentation for this instance of data
   *
   * @generated from field: google.fhir.r4.core.String documentation = 7;
   */
  documentation?: String;

  constructor(data?: PartialMessage<StructureMap_Group_Input>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Input";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "type", kind: "message", T: String },
    { no: 6, name: "mode", kind: "message", T: StructureMap_Group_Input_ModeCode },
    { no: 7, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Input {
    return new StructureMap_Group_Input().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Input {
    return new StructureMap_Group_Input().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Input {
    return new StructureMap_Group_Input().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Input | PlainMessage<StructureMap_Group_Input> | undefined, b: StructureMap_Group_Input | PlainMessage<StructureMap_Group_Input> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Input, a, b);
  }
}

/**
 * source | target
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Input.ModeCode
 */
export class StructureMap_Group_Input_ModeCode extends Message<StructureMap_Group_Input_ModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapInputModeCode.Value value = 1;
   */
  value = StructureMapInputModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Input_ModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Input.ModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapInputModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Input_ModeCode {
    return new StructureMap_Group_Input_ModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Input_ModeCode {
    return new StructureMap_Group_Input_ModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Input_ModeCode {
    return new StructureMap_Group_Input_ModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Input_ModeCode | PlainMessage<StructureMap_Group_Input_ModeCode> | undefined, b: StructureMap_Group_Input_ModeCode | PlainMessage<StructureMap_Group_Input_ModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Input_ModeCode, a, b);
  }
}

/**
 * Transform Rule from source to target
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule
 */
export class StructureMap_Group_Rule extends Message<StructureMap_Group_Rule> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of the rule for internal references
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Source source = 5;
   */
  source: StructureMap_Group_Rule_Source[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Target target = 6;
   */
  target: StructureMap_Group_Rule_Target[] = [];

  /**
   * Rules contained in this rule
   *
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule rule = 7;
   */
  rule: StructureMap_Group_Rule[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Dependent dependent = 8;
   */
  dependent: StructureMap_Group_Rule_Dependent[] = [];

  /**
   * Documentation for this instance of data
   *
   * @generated from field: google.fhir.r4.core.String documentation = 9;
   */
  documentation?: String;

  constructor(data?: PartialMessage<StructureMap_Group_Rule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "source", kind: "message", T: StructureMap_Group_Rule_Source, repeated: true },
    { no: 6, name: "target", kind: "message", T: StructureMap_Group_Rule_Target, repeated: true },
    { no: 7, name: "rule", kind: "message", T: StructureMap_Group_Rule, repeated: true },
    { no: 8, name: "dependent", kind: "message", T: StructureMap_Group_Rule_Dependent, repeated: true },
    { no: 9, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule {
    return new StructureMap_Group_Rule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule {
    return new StructureMap_Group_Rule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule {
    return new StructureMap_Group_Rule().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule | PlainMessage<StructureMap_Group_Rule> | undefined, b: StructureMap_Group_Rule | PlainMessage<StructureMap_Group_Rule> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule, a, b);
  }
}

/**
 * Source inputs to the mapping
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Source
 */
export class StructureMap_Group_Rule_Source extends Message<StructureMap_Group_Rule_Source> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type or variable this rule applies to
   *
   * @generated from field: google.fhir.r4.core.Id context = 4;
   */
  context?: Id;

  /**
   * Specified minimum cardinality
   *
   * @generated from field: google.fhir.r4.core.Integer min = 5;
   */
  min?: Integer;

  /**
   * Specified maximum cardinality (number or *)
   *
   * @generated from field: google.fhir.r4.core.String max = 6;
   */
  max?: String;

  /**
   * Rule only applies if source has this type
   *
   * @generated from field: google.fhir.r4.core.String type = 7;
   */
  type?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX default_value = 8;
   */
  defaultValue?: StructureMap_Group_Rule_Source_DefaultValueX;

  /**
   * Optional field for this source
   *
   * @generated from field: google.fhir.r4.core.String element = 9;
   */
  element?: String;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode list_mode = 10;
   */
  listMode?: StructureMap_Group_Rule_Source_ListModeCode;

  /**
   * Named context for field, if a field is specified
   *
   * @generated from field: google.fhir.r4.core.Id variable = 11;
   */
  variable?: Id;

  /**
   * FHIRPath expression  - must be true or the rule does not apply
   *
   * @generated from field: google.fhir.r4.core.String condition = 12;
   */
  condition?: String;

  /**
   * FHIRPath expression  - must be true or the mapping engine throws an
   * error instead of completing
   *
   * @generated from field: google.fhir.r4.core.String check = 13;
   */
  check?: String;

  /**
   * Message to put in log if source exists (FHIRPath)
   *
   * @generated from field: google.fhir.r4.core.String log_message = 14;
   */
  logMessage?: String;

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Source>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Source";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "context", kind: "message", T: Id },
    { no: 5, name: "min", kind: "message", T: Integer },
    { no: 6, name: "max", kind: "message", T: String },
    { no: 7, name: "type", kind: "message", T: String },
    { no: 8, name: "default_value", kind: "message", T: StructureMap_Group_Rule_Source_DefaultValueX },
    { no: 9, name: "element", kind: "message", T: String },
    { no: 10, name: "list_mode", kind: "message", T: StructureMap_Group_Rule_Source_ListModeCode },
    { no: 11, name: "variable", kind: "message", T: Id },
    { no: 12, name: "condition", kind: "message", T: String },
    { no: 13, name: "check", kind: "message", T: String },
    { no: 14, name: "log_message", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Source {
    return new StructureMap_Group_Rule_Source().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source {
    return new StructureMap_Group_Rule_Source().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source {
    return new StructureMap_Group_Rule_Source().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Source | PlainMessage<StructureMap_Group_Rule_Source> | undefined, b: StructureMap_Group_Rule_Source | PlainMessage<StructureMap_Group_Rule_Source> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Source, a, b);
  }
}

/**
 * Default value if no value exists
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX
 */
export class StructureMap_Group_Rule_Source_DefaultValueX extends Message<StructureMap_Group_Rule_Source_DefaultValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Source_DefaultValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Source.DefaultValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Source_DefaultValueX {
    return new StructureMap_Group_Rule_Source_DefaultValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source_DefaultValueX {
    return new StructureMap_Group_Rule_Source_DefaultValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source_DefaultValueX {
    return new StructureMap_Group_Rule_Source_DefaultValueX().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Source_DefaultValueX | PlainMessage<StructureMap_Group_Rule_Source_DefaultValueX> | undefined, b: StructureMap_Group_Rule_Source_DefaultValueX | PlainMessage<StructureMap_Group_Rule_Source_DefaultValueX> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Source_DefaultValueX, a, b);
  }
}

/**
 * first | not_first | last | not_last | only_one
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode
 */
export class StructureMap_Group_Rule_Source_ListModeCode extends Message<StructureMap_Group_Rule_Source_ListModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapSourceListModeCode.Value value = 1;
   */
  value = StructureMapSourceListModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Source_ListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Source.ListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapSourceListModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Source_ListModeCode {
    return new StructureMap_Group_Rule_Source_ListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source_ListModeCode {
    return new StructureMap_Group_Rule_Source_ListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Source_ListModeCode {
    return new StructureMap_Group_Rule_Source_ListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Source_ListModeCode | PlainMessage<StructureMap_Group_Rule_Source_ListModeCode> | undefined, b: StructureMap_Group_Rule_Source_ListModeCode | PlainMessage<StructureMap_Group_Rule_Source_ListModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Source_ListModeCode, a, b);
  }
}

/**
 * Content to create because of this mapping rule
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target
 */
export class StructureMap_Group_Rule_Target extends Message<StructureMap_Group_Rule_Target> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type or variable this rule applies to
   *
   * @generated from field: google.fhir.r4.core.Id context = 4;
   */
  context?: Id;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode context_type = 5;
   */
  contextType?: StructureMap_Group_Rule_Target_ContextTypeCode;

  /**
   * Field to create in the context
   *
   * @generated from field: google.fhir.r4.core.String element = 6;
   */
  element?: String;

  /**
   * Named context for field, if desired, and a field is specified
   *
   * @generated from field: google.fhir.r4.core.Id variable = 7;
   */
  variable?: Id;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode list_mode = 8;
   */
  listMode: StructureMap_Group_Rule_Target_ListModeCode[] = [];

  /**
   * Internal rule reference for shared list items
   *
   * @generated from field: google.fhir.r4.core.Id list_rule_id = 9;
   */
  listRuleId?: Id;

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode transform = 10;
   */
  transform?: StructureMap_Group_Rule_Target_TransformCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter parameter = 11;
   */
  parameter: StructureMap_Group_Rule_Target_Parameter[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "context", kind: "message", T: Id },
    { no: 5, name: "context_type", kind: "message", T: StructureMap_Group_Rule_Target_ContextTypeCode },
    { no: 6, name: "element", kind: "message", T: String },
    { no: 7, name: "variable", kind: "message", T: Id },
    { no: 8, name: "list_mode", kind: "message", T: StructureMap_Group_Rule_Target_ListModeCode, repeated: true },
    { no: 9, name: "list_rule_id", kind: "message", T: Id },
    { no: 10, name: "transform", kind: "message", T: StructureMap_Group_Rule_Target_TransformCode },
    { no: 11, name: "parameter", kind: "message", T: StructureMap_Group_Rule_Target_Parameter, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target {
    return new StructureMap_Group_Rule_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target {
    return new StructureMap_Group_Rule_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target {
    return new StructureMap_Group_Rule_Target().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target | PlainMessage<StructureMap_Group_Rule_Target> | undefined, b: StructureMap_Group_Rule_Target | PlainMessage<StructureMap_Group_Rule_Target> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target, a, b);
  }
}

/**
 * type | variable
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode
 */
export class StructureMap_Group_Rule_Target_ContextTypeCode extends Message<StructureMap_Group_Rule_Target_ContextTypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapContextTypeCode.Value value = 1;
   */
  value = StructureMapContextTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_ContextTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Target.ContextTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapContextTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_ContextTypeCode {
    return new StructureMap_Group_Rule_Target_ContextTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_ContextTypeCode {
    return new StructureMap_Group_Rule_Target_ContextTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_ContextTypeCode {
    return new StructureMap_Group_Rule_Target_ContextTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_ContextTypeCode | PlainMessage<StructureMap_Group_Rule_Target_ContextTypeCode> | undefined, b: StructureMap_Group_Rule_Target_ContextTypeCode | PlainMessage<StructureMap_Group_Rule_Target_ContextTypeCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_ContextTypeCode, a, b);
  }
}

/**
 * first | share | last | collate
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode
 */
export class StructureMap_Group_Rule_Target_ListModeCode extends Message<StructureMap_Group_Rule_Target_ListModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapTargetListModeCode.Value value = 1;
   */
  value = StructureMapTargetListModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_ListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Target.ListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapTargetListModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_ListModeCode {
    return new StructureMap_Group_Rule_Target_ListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_ListModeCode {
    return new StructureMap_Group_Rule_Target_ListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_ListModeCode {
    return new StructureMap_Group_Rule_Target_ListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_ListModeCode | PlainMessage<StructureMap_Group_Rule_Target_ListModeCode> | undefined, b: StructureMap_Group_Rule_Target_ListModeCode | PlainMessage<StructureMap_Group_Rule_Target_ListModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_ListModeCode, a, b);
  }
}

/**
 * create | copy +
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode
 */
export class StructureMap_Group_Rule_Target_TransformCode extends Message<StructureMap_Group_Rule_Target_TransformCode> {
  /**
   * @generated from field: google.fhir.r4.core.StructureMapTransformCode.Value value = 1;
   */
  value = StructureMapTransformCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_TransformCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Target.TransformCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StructureMapTransformCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_TransformCode {
    return new StructureMap_Group_Rule_Target_TransformCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_TransformCode {
    return new StructureMap_Group_Rule_Target_TransformCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_TransformCode {
    return new StructureMap_Group_Rule_Target_TransformCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_TransformCode | PlainMessage<StructureMap_Group_Rule_Target_TransformCode> | undefined, b: StructureMap_Group_Rule_Target_TransformCode | PlainMessage<StructureMap_Group_Rule_Target_TransformCode> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_TransformCode, a, b);
  }
}

/**
 * Parameters to the transform
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter
 */
export class StructureMap_Group_Rule_Target_Parameter extends Message<StructureMap_Group_Rule_Target_Parameter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX value = 4;
   */
  value?: StructureMap_Group_Rule_Target_Parameter_ValueX;

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: StructureMap_Group_Rule_Target_Parameter_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_Parameter {
    return new StructureMap_Group_Rule_Target_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter {
    return new StructureMap_Group_Rule_Target_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter {
    return new StructureMap_Group_Rule_Target_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_Parameter | PlainMessage<StructureMap_Group_Rule_Target_Parameter> | undefined, b: StructureMap_Group_Rule_Target_Parameter | PlainMessage<StructureMap_Group_Rule_Target_Parameter> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_Parameter, a, b);
  }
}

/**
 * Parameter value - variable or literal
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX
 */
export class StructureMap_Group_Rule_Target_Parameter_ValueX extends Message<StructureMap_Group_Rule_Target_Parameter_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 1;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 3;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 4;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 5;
     */
    value: Decimal;
    case: "decimal";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Target_Parameter_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Target.Parameter.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 3, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 4, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 5, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Target_Parameter_ValueX {
    return new StructureMap_Group_Rule_Target_Parameter_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter_ValueX {
    return new StructureMap_Group_Rule_Target_Parameter_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Target_Parameter_ValueX {
    return new StructureMap_Group_Rule_Target_Parameter_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Target_Parameter_ValueX | PlainMessage<StructureMap_Group_Rule_Target_Parameter_ValueX> | undefined, b: StructureMap_Group_Rule_Target_Parameter_ValueX | PlainMessage<StructureMap_Group_Rule_Target_Parameter_ValueX> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Target_Parameter_ValueX, a, b);
  }
}

/**
 * Which other rules to apply in the context of this rule
 *
 * @generated from message google.fhir.r4.core.StructureMap.Group.Rule.Dependent
 */
export class StructureMap_Group_Rule_Dependent extends Message<StructureMap_Group_Rule_Dependent> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of a rule or group to apply
   *
   * @generated from field: google.fhir.r4.core.Id name = 4;
   */
  name?: Id;

  /**
   * Variable to pass to the rule or group
   *
   * @generated from field: repeated google.fhir.r4.core.String variable = 5;
   */
  variable: String[] = [];

  constructor(data?: PartialMessage<StructureMap_Group_Rule_Dependent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMap.Group.Rule.Dependent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: Id },
    { no: 5, name: "variable", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMap_Group_Rule_Dependent {
    return new StructureMap_Group_Rule_Dependent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Dependent {
    return new StructureMap_Group_Rule_Dependent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMap_Group_Rule_Dependent {
    return new StructureMap_Group_Rule_Dependent().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMap_Group_Rule_Dependent | PlainMessage<StructureMap_Group_Rule_Dependent> | undefined, b: StructureMap_Group_Rule_Dependent | PlainMessage<StructureMap_Group_Rule_Dependent> | undefined): boolean {
    return proto3.util.equals(StructureMap_Group_Rule_Dependent, a, b);
  }
}

