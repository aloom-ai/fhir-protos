//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/catalog_entry.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb.js";
import { CatalogEntryRelationTypeCode_Value, PublicationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for CatalogEntry.
 * An entry in a catalog.
 * See http://hl7.org/fhir/StructureDefinition/CatalogEntry
 *
 * @generated from message google.fhir.r4.core.CatalogEntry
 */
export class CatalogEntry extends Message<CatalogEntry> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique identifier of the catalog item
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * The type of item - medication, device, service, protocol or other
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 11;
   */
  type?: CodeableConcept;

  /**
   * Whether the entry represents an orderable item
   *
   * @generated from field: google.fhir.r4.core.Boolean orderable = 12;
   */
  orderable?: Boolean;

  /**
   * The item that is being defined
   *
   * @generated from field: google.fhir.r4.core.Reference referenced_item = 13;
   */
  referencedItem?: Reference;

  /**
   * Any additional identifier(s) for the catalog item, in the same granularity
   * or concept
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier additional_identifier = 14;
   */
  additionalIdentifier: Identifier[] = [];

  /**
   * Classification (category or class) of the item entry
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept classification = 15;
   */
  classification: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CatalogEntry.StatusCode status = 16;
   */
  status?: CatalogEntry_StatusCode;

  /**
   * The time period in which this catalog entry is expected to be active
   *
   * @generated from field: google.fhir.r4.core.Period validity_period = 17;
   */
  validityPeriod?: Period;

  /**
   * The date until which this catalog entry is expected to be active
   *
   * @generated from field: google.fhir.r4.core.DateTime valid_to = 18;
   */
  validTo?: DateTime;

  /**
   * When was this catalog last updated
   *
   * @generated from field: google.fhir.r4.core.DateTime last_updated = 19;
   */
  lastUpdated?: DateTime;

  /**
   * Additional characteristics of the catalog entry
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept additional_characteristic = 20;
   */
  additionalCharacteristic: CodeableConcept[] = [];

  /**
   * Additional classification of the catalog entry
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept additional_classification = 21;
   */
  additionalClassification: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.CatalogEntry.RelatedEntry related_entry = 22;
   */
  relatedEntry: CatalogEntry_RelatedEntry[] = [];

  constructor(data?: PartialMessage<CatalogEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CatalogEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "type", kind: "message", T: CodeableConcept },
    { no: 12, name: "orderable", kind: "message", T: Boolean },
    { no: 13, name: "referenced_item", kind: "message", T: Reference },
    { no: 14, name: "additional_identifier", kind: "message", T: Identifier, repeated: true },
    { no: 15, name: "classification", kind: "message", T: CodeableConcept, repeated: true },
    { no: 16, name: "status", kind: "message", T: CatalogEntry_StatusCode },
    { no: 17, name: "validity_period", kind: "message", T: Period },
    { no: 18, name: "valid_to", kind: "message", T: DateTime },
    { no: 19, name: "last_updated", kind: "message", T: DateTime },
    { no: 20, name: "additional_characteristic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 21, name: "additional_classification", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "related_entry", kind: "message", T: CatalogEntry_RelatedEntry, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatalogEntry {
    return new CatalogEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatalogEntry {
    return new CatalogEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatalogEntry {
    return new CatalogEntry().fromJsonString(jsonString, options);
  }

  static equals(a: CatalogEntry | PlainMessage<CatalogEntry> | undefined, b: CatalogEntry | PlainMessage<CatalogEntry> | undefined): boolean {
    return proto3.util.equals(CatalogEntry, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.CatalogEntry.StatusCode
 */
export class CatalogEntry_StatusCode extends Message<CatalogEntry_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CatalogEntry_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CatalogEntry.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatalogEntry_StatusCode {
    return new CatalogEntry_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatalogEntry_StatusCode {
    return new CatalogEntry_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatalogEntry_StatusCode {
    return new CatalogEntry_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CatalogEntry_StatusCode | PlainMessage<CatalogEntry_StatusCode> | undefined, b: CatalogEntry_StatusCode | PlainMessage<CatalogEntry_StatusCode> | undefined): boolean {
    return proto3.util.equals(CatalogEntry_StatusCode, a, b);
  }
}

/**
 * An item that this catalog entry is related to
 *
 * @generated from message google.fhir.r4.core.CatalogEntry.RelatedEntry
 */
export class CatalogEntry_RelatedEntry extends Message<CatalogEntry_RelatedEntry> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CatalogEntry.RelatedEntry.RelationtypeCode relationtype = 4;
   */
  relationtype?: CatalogEntry_RelatedEntry_RelationtypeCode;

  /**
   * The reference to the related item
   *
   * @generated from field: google.fhir.r4.core.Reference item = 5;
   */
  item?: Reference;

  constructor(data?: PartialMessage<CatalogEntry_RelatedEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CatalogEntry.RelatedEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "relationtype", kind: "message", T: CatalogEntry_RelatedEntry_RelationtypeCode },
    { no: 5, name: "item", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatalogEntry_RelatedEntry {
    return new CatalogEntry_RelatedEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatalogEntry_RelatedEntry {
    return new CatalogEntry_RelatedEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatalogEntry_RelatedEntry {
    return new CatalogEntry_RelatedEntry().fromJsonString(jsonString, options);
  }

  static equals(a: CatalogEntry_RelatedEntry | PlainMessage<CatalogEntry_RelatedEntry> | undefined, b: CatalogEntry_RelatedEntry | PlainMessage<CatalogEntry_RelatedEntry> | undefined): boolean {
    return proto3.util.equals(CatalogEntry_RelatedEntry, a, b);
  }
}

/**
 * triggers | is-replaced-by
 *
 * @generated from message google.fhir.r4.core.CatalogEntry.RelatedEntry.RelationtypeCode
 */
export class CatalogEntry_RelatedEntry_RelationtypeCode extends Message<CatalogEntry_RelatedEntry_RelationtypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.CatalogEntryRelationTypeCode.Value value = 1;
   */
  value = CatalogEntryRelationTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CatalogEntry_RelatedEntry_RelationtypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CatalogEntry.RelatedEntry.RelationtypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CatalogEntryRelationTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatalogEntry_RelatedEntry_RelationtypeCode {
    return new CatalogEntry_RelatedEntry_RelationtypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatalogEntry_RelatedEntry_RelationtypeCode {
    return new CatalogEntry_RelatedEntry_RelationtypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatalogEntry_RelatedEntry_RelationtypeCode {
    return new CatalogEntry_RelatedEntry_RelationtypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CatalogEntry_RelatedEntry_RelationtypeCode | PlainMessage<CatalogEntry_RelatedEntry_RelationtypeCode> | undefined, b: CatalogEntry_RelatedEntry_RelationtypeCode | PlainMessage<CatalogEntry_RelatedEntry_RelationtypeCode> | undefined): boolean {
    return proto3.util.equals(CatalogEntry_RelatedEntry_RelationtypeCode, a, b);
  }
}

