//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/medication_knowledge.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Base64Binary, Boolean, Code, CodeableConcept, Dosage, Duration, Extension, Id, Markdown, Meta, Money, Narrative, Ratio, Reference, SimpleQuantity, String, Uri } from "../datatypes_pb.js";
import { MedicationKnowledgeStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for MedicationKnowledge.
 * Definition of Medication Knowledge.
 * See http://hl7.org/fhir/StructureDefinition/MedicationKnowledge
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge
 */
export class MedicationKnowledge extends Message<MedicationKnowledge> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code that identifies this medication
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 10;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.StatusCode status = 11;
   */
  status?: MedicationKnowledge_StatusCode;

  /**
   * Manufacturer of the item
   *
   * @generated from field: google.fhir.r4.core.Reference manufacturer = 12;
   */
  manufacturer?: Reference;

  /**
   * powder | tablets | capsule +
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept dose_form = 13;
   */
  doseForm?: CodeableConcept;

  /**
   * Amount of drug in package
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity amount = 14;
   */
  amount?: SimpleQuantity;

  /**
   * Additional names for a medication
   *
   * @generated from field: repeated google.fhir.r4.core.String synonym = 15;
   */
  synonym: String[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.RelatedMedicationKnowledge related_medication_knowledge = 16;
   */
  relatedMedicationKnowledge: MedicationKnowledge_RelatedMedicationKnowledge[] = [];

  /**
   * A medication resource that is associated with this medication
   *
   * @generated from field: repeated google.fhir.r4.core.Reference associated_medication = 17;
   */
  associatedMedication: Reference[] = [];

  /**
   * Category of the medication or product
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept product_type = 18;
   */
  productType: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Monograph monograph = 19;
   */
  monograph: MedicationKnowledge_Monograph[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Ingredient ingredient = 20;
   */
  ingredient: MedicationKnowledge_Ingredient[] = [];

  /**
   * The instructions for preparing the medication
   *
   * @generated from field: google.fhir.r4.core.Markdown preparation_instruction = 21;
   */
  preparationInstruction?: Markdown;

  /**
   * The intended or approved route of administration
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept intended_route = 22;
   */
  intendedRoute: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Cost cost = 23;
   */
  cost: MedicationKnowledge_Cost[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.MonitoringProgram monitoring_program = 24;
   */
  monitoringProgram: MedicationKnowledge_MonitoringProgram[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines administration_guidelines = 25;
   */
  administrationGuidelines: MedicationKnowledge_AdministrationGuidelines[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.MedicineClassification medicine_classification = 26;
   */
  medicineClassification: MedicationKnowledge_MedicineClassification[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.Packaging packaging = 27;
   */
  packaging?: MedicationKnowledge_Packaging;

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic drug_characteristic = 28;
   */
  drugCharacteristic: MedicationKnowledge_DrugCharacteristic[] = [];

  /**
   * Potential clinical issue with or between medication(s)
   *
   * @generated from field: repeated google.fhir.r4.core.Reference contraindication = 29;
   */
  contraindication: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Regulatory regulatory = 30;
   */
  regulatory: MedicationKnowledge_Regulatory[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Kinetics kinetics = 31;
   */
  kinetics: MedicationKnowledge_Kinetics[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "code", kind: "message", T: CodeableConcept },
    { no: 11, name: "status", kind: "message", T: MedicationKnowledge_StatusCode },
    { no: 12, name: "manufacturer", kind: "message", T: Reference },
    { no: 13, name: "dose_form", kind: "message", T: CodeableConcept },
    { no: 14, name: "amount", kind: "message", T: SimpleQuantity },
    { no: 15, name: "synonym", kind: "message", T: String, repeated: true },
    { no: 16, name: "related_medication_knowledge", kind: "message", T: MedicationKnowledge_RelatedMedicationKnowledge, repeated: true },
    { no: 17, name: "associated_medication", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "product_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "monograph", kind: "message", T: MedicationKnowledge_Monograph, repeated: true },
    { no: 20, name: "ingredient", kind: "message", T: MedicationKnowledge_Ingredient, repeated: true },
    { no: 21, name: "preparation_instruction", kind: "message", T: Markdown },
    { no: 22, name: "intended_route", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "cost", kind: "message", T: MedicationKnowledge_Cost, repeated: true },
    { no: 24, name: "monitoring_program", kind: "message", T: MedicationKnowledge_MonitoringProgram, repeated: true },
    { no: 25, name: "administration_guidelines", kind: "message", T: MedicationKnowledge_AdministrationGuidelines, repeated: true },
    { no: 26, name: "medicine_classification", kind: "message", T: MedicationKnowledge_MedicineClassification, repeated: true },
    { no: 27, name: "packaging", kind: "message", T: MedicationKnowledge_Packaging },
    { no: 28, name: "drug_characteristic", kind: "message", T: MedicationKnowledge_DrugCharacteristic, repeated: true },
    { no: 29, name: "contraindication", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "regulatory", kind: "message", T: MedicationKnowledge_Regulatory, repeated: true },
    { no: 31, name: "kinetics", kind: "message", T: MedicationKnowledge_Kinetics, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge {
    return new MedicationKnowledge().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge {
    return new MedicationKnowledge().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge {
    return new MedicationKnowledge().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge | PlainMessage<MedicationKnowledge> | undefined, b: MedicationKnowledge | PlainMessage<MedicationKnowledge> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge, a, b);
  }
}

/**
 * active | inactive | entered-in-error
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.StatusCode
 */
export class MedicationKnowledge_StatusCode extends Message<MedicationKnowledge_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledgeStatusCode.Value value = 1;
   */
  value = MedicationKnowledgeStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(MedicationKnowledgeStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_StatusCode {
    return new MedicationKnowledge_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_StatusCode {
    return new MedicationKnowledge_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_StatusCode {
    return new MedicationKnowledge_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_StatusCode | PlainMessage<MedicationKnowledge_StatusCode> | undefined, b: MedicationKnowledge_StatusCode | PlainMessage<MedicationKnowledge_StatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_StatusCode, a, b);
  }
}

/**
 * Associated or related medication information
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.RelatedMedicationKnowledge
 */
export class MedicationKnowledge_RelatedMedicationKnowledge extends Message<MedicationKnowledge_RelatedMedicationKnowledge> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Category of medicationKnowledge
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Associated documentation about the associated medication knowledge
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reference = 5;
   */
  reference: Reference[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge_RelatedMedicationKnowledge>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.RelatedMedicationKnowledge";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "reference", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_RelatedMedicationKnowledge {
    return new MedicationKnowledge_RelatedMedicationKnowledge().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_RelatedMedicationKnowledge {
    return new MedicationKnowledge_RelatedMedicationKnowledge().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_RelatedMedicationKnowledge {
    return new MedicationKnowledge_RelatedMedicationKnowledge().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_RelatedMedicationKnowledge | PlainMessage<MedicationKnowledge_RelatedMedicationKnowledge> | undefined, b: MedicationKnowledge_RelatedMedicationKnowledge | PlainMessage<MedicationKnowledge_RelatedMedicationKnowledge> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_RelatedMedicationKnowledge, a, b);
  }
}

/**
 * Associated documentation about the medication
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Monograph
 */
export class MedicationKnowledge_Monograph extends Message<MedicationKnowledge_Monograph> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The category of medication document
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Associated documentation about the medication
   *
   * @generated from field: google.fhir.r4.core.Reference source = 5;
   */
  source?: Reference;

  constructor(data?: PartialMessage<MedicationKnowledge_Monograph>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Monograph";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "source", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Monograph {
    return new MedicationKnowledge_Monograph().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Monograph {
    return new MedicationKnowledge_Monograph().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Monograph {
    return new MedicationKnowledge_Monograph().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Monograph | PlainMessage<MedicationKnowledge_Monograph> | undefined, b: MedicationKnowledge_Monograph | PlainMessage<MedicationKnowledge_Monograph> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Monograph, a, b);
  }
}

/**
 * Active or inactive ingredient
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Ingredient
 */
export class MedicationKnowledge_Ingredient extends Message<MedicationKnowledge_Ingredient> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.Ingredient.ItemX item = 4;
   */
  item?: MedicationKnowledge_Ingredient_ItemX;

  /**
   * Active ingredient indicator
   *
   * @generated from field: google.fhir.r4.core.Boolean is_active = 5;
   */
  isActive?: Boolean;

  /**
   * Quantity of ingredient present
   *
   * @generated from field: google.fhir.r4.core.Ratio strength = 6;
   */
  strength?: Ratio;

  constructor(data?: PartialMessage<MedicationKnowledge_Ingredient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Ingredient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item", kind: "message", T: MedicationKnowledge_Ingredient_ItemX },
    { no: 5, name: "is_active", kind: "message", T: Boolean },
    { no: 6, name: "strength", kind: "message", T: Ratio },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Ingredient {
    return new MedicationKnowledge_Ingredient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Ingredient {
    return new MedicationKnowledge_Ingredient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Ingredient {
    return new MedicationKnowledge_Ingredient().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Ingredient | PlainMessage<MedicationKnowledge_Ingredient> | undefined, b: MedicationKnowledge_Ingredient | PlainMessage<MedicationKnowledge_Ingredient> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Ingredient, a, b);
  }
}

/**
 * Medication(s) or substance(s) contained in the medication
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Ingredient.ItemX
 */
export class MedicationKnowledge_Ingredient_ItemX extends Message<MedicationKnowledge_Ingredient_ItemX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationKnowledge.Ingredient.ItemX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationKnowledge_Ingredient_ItemX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Ingredient.ItemX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Ingredient_ItemX {
    return new MedicationKnowledge_Ingredient_ItemX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Ingredient_ItemX {
    return new MedicationKnowledge_Ingredient_ItemX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Ingredient_ItemX {
    return new MedicationKnowledge_Ingredient_ItemX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Ingredient_ItemX | PlainMessage<MedicationKnowledge_Ingredient_ItemX> | undefined, b: MedicationKnowledge_Ingredient_ItemX | PlainMessage<MedicationKnowledge_Ingredient_ItemX> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Ingredient_ItemX, a, b);
  }
}

/**
 * The pricing of the medication
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Cost
 */
export class MedicationKnowledge_Cost extends Message<MedicationKnowledge_Cost> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The category of the cost information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * The source or owner for the price information
   *
   * @generated from field: google.fhir.r4.core.String source = 5;
   */
  source?: String;

  /**
   * The price of the medication
   *
   * @generated from field: google.fhir.r4.core.Money cost = 6;
   */
  cost?: Money;

  constructor(data?: PartialMessage<MedicationKnowledge_Cost>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Cost";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "source", kind: "message", T: String },
    { no: 6, name: "cost", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Cost {
    return new MedicationKnowledge_Cost().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Cost {
    return new MedicationKnowledge_Cost().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Cost {
    return new MedicationKnowledge_Cost().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Cost | PlainMessage<MedicationKnowledge_Cost> | undefined, b: MedicationKnowledge_Cost | PlainMessage<MedicationKnowledge_Cost> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Cost, a, b);
  }
}

/**
 * Program under which a medication is reviewed
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.MonitoringProgram
 */
export class MedicationKnowledge_MonitoringProgram extends Message<MedicationKnowledge_MonitoringProgram> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of program under which the medication is monitored
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Name of the reviewing program
   *
   * @generated from field: google.fhir.r4.core.String name = 5;
   */
  name?: String;

  constructor(data?: PartialMessage<MedicationKnowledge_MonitoringProgram>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.MonitoringProgram";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "name", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_MonitoringProgram {
    return new MedicationKnowledge_MonitoringProgram().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_MonitoringProgram {
    return new MedicationKnowledge_MonitoringProgram().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_MonitoringProgram {
    return new MedicationKnowledge_MonitoringProgram().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_MonitoringProgram | PlainMessage<MedicationKnowledge_MonitoringProgram> | undefined, b: MedicationKnowledge_MonitoringProgram | PlainMessage<MedicationKnowledge_MonitoringProgram> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_MonitoringProgram, a, b);
  }
}

/**
 * Guidelines for administration of the medication
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines
 */
export class MedicationKnowledge_AdministrationGuidelines extends Message<MedicationKnowledge_AdministrationGuidelines> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.Dosage dosage = 4;
   */
  dosage: MedicationKnowledge_AdministrationGuidelines_Dosage[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.IndicationX indication = 5;
   */
  indication?: MedicationKnowledge_AdministrationGuidelines_IndicationX;

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics patient_characteristics = 6;
   */
  patientCharacteristics: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge_AdministrationGuidelines>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "dosage", kind: "message", T: MedicationKnowledge_AdministrationGuidelines_Dosage, repeated: true },
    { no: 5, name: "indication", kind: "message", T: MedicationKnowledge_AdministrationGuidelines_IndicationX },
    { no: 6, name: "patient_characteristics", kind: "message", T: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_AdministrationGuidelines {
    return new MedicationKnowledge_AdministrationGuidelines().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines {
    return new MedicationKnowledge_AdministrationGuidelines().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines {
    return new MedicationKnowledge_AdministrationGuidelines().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_AdministrationGuidelines | PlainMessage<MedicationKnowledge_AdministrationGuidelines> | undefined, b: MedicationKnowledge_AdministrationGuidelines | PlainMessage<MedicationKnowledge_AdministrationGuidelines> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_AdministrationGuidelines, a, b);
  }
}

/**
 * Dosage for the medication for the specific guidelines
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.Dosage
 */
export class MedicationKnowledge_AdministrationGuidelines_Dosage extends Message<MedicationKnowledge_AdministrationGuidelines_Dosage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of dosage
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Dosage for the medication for the specific guidelines
   *
   * @generated from field: repeated google.fhir.r4.core.Dosage dosage = 5;
   */
  dosage: Dosage[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge_AdministrationGuidelines_Dosage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.Dosage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "dosage", kind: "message", T: Dosage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_AdministrationGuidelines_Dosage {
    return new MedicationKnowledge_AdministrationGuidelines_Dosage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_Dosage {
    return new MedicationKnowledge_AdministrationGuidelines_Dosage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_Dosage {
    return new MedicationKnowledge_AdministrationGuidelines_Dosage().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_AdministrationGuidelines_Dosage | PlainMessage<MedicationKnowledge_AdministrationGuidelines_Dosage> | undefined, b: MedicationKnowledge_AdministrationGuidelines_Dosage | PlainMessage<MedicationKnowledge_AdministrationGuidelines_Dosage> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_AdministrationGuidelines_Dosage, a, b);
  }
}

/**
 * Indication for use that apply to the specific administration guidelines
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.IndicationX
 */
export class MedicationKnowledge_AdministrationGuidelines_IndicationX extends Message<MedicationKnowledge_AdministrationGuidelines_IndicationX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.IndicationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationKnowledge_AdministrationGuidelines_IndicationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.IndicationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_AdministrationGuidelines_IndicationX {
    return new MedicationKnowledge_AdministrationGuidelines_IndicationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_IndicationX {
    return new MedicationKnowledge_AdministrationGuidelines_IndicationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_IndicationX {
    return new MedicationKnowledge_AdministrationGuidelines_IndicationX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_AdministrationGuidelines_IndicationX | PlainMessage<MedicationKnowledge_AdministrationGuidelines_IndicationX> | undefined, b: MedicationKnowledge_AdministrationGuidelines_IndicationX | PlainMessage<MedicationKnowledge_AdministrationGuidelines_IndicationX> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_AdministrationGuidelines_IndicationX, a, b);
  }
}

/**
 * Characteristics of the patient that are relevant to the administration
 * guidelines
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics
 */
export class MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics extends Message<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics.CharacteristicX characteristic = 4;
   */
  characteristic?: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX;

  /**
   * The specific characteristic
   *
   * @generated from field: repeated google.fhir.r4.core.String value = 5;
   */
  value: String[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "characteristic", kind: "message", T: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX },
    { no: 5, name: "value", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics {
    return new MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics {
    return new MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics {
    return new MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics | PlainMessage<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics> | undefined, b: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics | PlainMessage<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics, a, b);
  }
}

/**
 * Specific characteristic that is relevant to the administration
 * guideline
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics.CharacteristicX
 */
export class MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX extends Message<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics.CharacteristicX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 2;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.AdministrationGuidelines.PatientCharacteristics.CharacteristicX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX {
    return new MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX {
    return new MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX {
    return new MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX | PlainMessage<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX> | undefined, b: MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX | PlainMessage<MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics_CharacteristicX, a, b);
  }
}

/**
 * Categorization of the medication within a formulary or classification
 * system
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.MedicineClassification
 */
export class MedicationKnowledge_MedicineClassification extends Message<MedicationKnowledge_MedicineClassification> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The type of category for the medication (for example, therapeutic
   * classification, therapeutic sub-classification)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Specific category assigned to the medication
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept classification = 5;
   */
  classification: CodeableConcept[] = [];

  constructor(data?: PartialMessage<MedicationKnowledge_MedicineClassification>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.MedicineClassification";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "classification", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_MedicineClassification {
    return new MedicationKnowledge_MedicineClassification().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_MedicineClassification {
    return new MedicationKnowledge_MedicineClassification().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_MedicineClassification {
    return new MedicationKnowledge_MedicineClassification().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_MedicineClassification | PlainMessage<MedicationKnowledge_MedicineClassification> | undefined, b: MedicationKnowledge_MedicineClassification | PlainMessage<MedicationKnowledge_MedicineClassification> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_MedicineClassification, a, b);
  }
}

/**
 * Details about packaged medications
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Packaging
 */
export class MedicationKnowledge_Packaging extends Message<MedicationKnowledge_Packaging> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A code that defines the specific type of packaging that the medication
   * can be found in
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * The number of product units the package would contain if fully loaded
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 5;
   */
  quantity?: SimpleQuantity;

  constructor(data?: PartialMessage<MedicationKnowledge_Packaging>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Packaging";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "quantity", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Packaging {
    return new MedicationKnowledge_Packaging().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Packaging {
    return new MedicationKnowledge_Packaging().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Packaging {
    return new MedicationKnowledge_Packaging().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Packaging | PlainMessage<MedicationKnowledge_Packaging> | undefined, b: MedicationKnowledge_Packaging | PlainMessage<MedicationKnowledge_Packaging> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Packaging, a, b);
  }
}

/**
 * Specifies descriptive properties of the medicine
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic
 */
export class MedicationKnowledge_DrugCharacteristic extends Message<MedicationKnowledge_DrugCharacteristic> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code specifying the type of characteristic of medication
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic.ValueX value = 5;
   */
  value?: MedicationKnowledge_DrugCharacteristic_ValueX;

  constructor(data?: PartialMessage<MedicationKnowledge_DrugCharacteristic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: MedicationKnowledge_DrugCharacteristic_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_DrugCharacteristic {
    return new MedicationKnowledge_DrugCharacteristic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_DrugCharacteristic {
    return new MedicationKnowledge_DrugCharacteristic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_DrugCharacteristic {
    return new MedicationKnowledge_DrugCharacteristic().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_DrugCharacteristic | PlainMessage<MedicationKnowledge_DrugCharacteristic> | undefined, b: MedicationKnowledge_DrugCharacteristic | PlainMessage<MedicationKnowledge_DrugCharacteristic> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_DrugCharacteristic, a, b);
  }
}

/**
 * Description of the characteristic
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic.ValueX
 */
export class MedicationKnowledge_DrugCharacteristic_ValueX extends Message<MedicationKnowledge_DrugCharacteristic_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 3;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 4;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<MedicationKnowledge_DrugCharacteristic_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.DrugCharacteristic.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 3, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "choice" },
    { no: 4, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_DrugCharacteristic_ValueX {
    return new MedicationKnowledge_DrugCharacteristic_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_DrugCharacteristic_ValueX {
    return new MedicationKnowledge_DrugCharacteristic_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_DrugCharacteristic_ValueX {
    return new MedicationKnowledge_DrugCharacteristic_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_DrugCharacteristic_ValueX | PlainMessage<MedicationKnowledge_DrugCharacteristic_ValueX> | undefined, b: MedicationKnowledge_DrugCharacteristic_ValueX | PlainMessage<MedicationKnowledge_DrugCharacteristic_ValueX> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_DrugCharacteristic_ValueX, a, b);
  }
}

/**
 * Regulatory information about a medication
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Regulatory
 */
export class MedicationKnowledge_Regulatory extends Message<MedicationKnowledge_Regulatory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specifies the authority of the regulation
   *
   * @generated from field: google.fhir.r4.core.Reference regulatory_authority = 4;
   */
  regulatoryAuthority?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Regulatory.Substitution substitution = 5;
   */
  substitution: MedicationKnowledge_Regulatory_Substitution[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicationKnowledge.Regulatory.Schedule schedule = 6;
   */
  schedule: MedicationKnowledge_Regulatory_Schedule[] = [];

  /**
   * @generated from field: google.fhir.r4.core.MedicationKnowledge.Regulatory.MaxDispense max_dispense = 7;
   */
  maxDispense?: MedicationKnowledge_Regulatory_MaxDispense;

  constructor(data?: PartialMessage<MedicationKnowledge_Regulatory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Regulatory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "regulatory_authority", kind: "message", T: Reference },
    { no: 5, name: "substitution", kind: "message", T: MedicationKnowledge_Regulatory_Substitution, repeated: true },
    { no: 6, name: "schedule", kind: "message", T: MedicationKnowledge_Regulatory_Schedule, repeated: true },
    { no: 7, name: "max_dispense", kind: "message", T: MedicationKnowledge_Regulatory_MaxDispense },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Regulatory {
    return new MedicationKnowledge_Regulatory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory {
    return new MedicationKnowledge_Regulatory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory {
    return new MedicationKnowledge_Regulatory().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Regulatory | PlainMessage<MedicationKnowledge_Regulatory> | undefined, b: MedicationKnowledge_Regulatory | PlainMessage<MedicationKnowledge_Regulatory> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Regulatory, a, b);
  }
}

/**
 * Specifies if changes are allowed when dispensing a medication from a
 * regulatory perspective
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Regulatory.Substitution
 */
export class MedicationKnowledge_Regulatory_Substitution extends Message<MedicationKnowledge_Regulatory_Substitution> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specifies the type of substitution allowed
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Specifies if regulation allows for changes in the medication when
   * dispensing
   *
   * @generated from field: google.fhir.r4.core.Boolean allowed = 5;
   */
  allowed?: Boolean;

  constructor(data?: PartialMessage<MedicationKnowledge_Regulatory_Substitution>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Regulatory.Substitution";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "allowed", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Regulatory_Substitution {
    return new MedicationKnowledge_Regulatory_Substitution().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory_Substitution {
    return new MedicationKnowledge_Regulatory_Substitution().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory_Substitution {
    return new MedicationKnowledge_Regulatory_Substitution().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Regulatory_Substitution | PlainMessage<MedicationKnowledge_Regulatory_Substitution> | undefined, b: MedicationKnowledge_Regulatory_Substitution | PlainMessage<MedicationKnowledge_Regulatory_Substitution> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Regulatory_Substitution, a, b);
  }
}

/**
 * Specifies the schedule of a medication in jurisdiction
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Regulatory.Schedule
 */
export class MedicationKnowledge_Regulatory_Schedule extends Message<MedicationKnowledge_Regulatory_Schedule> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Specifies the specific drug schedule
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept schedule = 4;
   */
  schedule?: CodeableConcept;

  constructor(data?: PartialMessage<MedicationKnowledge_Regulatory_Schedule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Regulatory.Schedule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "schedule", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Regulatory_Schedule {
    return new MedicationKnowledge_Regulatory_Schedule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory_Schedule {
    return new MedicationKnowledge_Regulatory_Schedule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory_Schedule {
    return new MedicationKnowledge_Regulatory_Schedule().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Regulatory_Schedule | PlainMessage<MedicationKnowledge_Regulatory_Schedule> | undefined, b: MedicationKnowledge_Regulatory_Schedule | PlainMessage<MedicationKnowledge_Regulatory_Schedule> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Regulatory_Schedule, a, b);
  }
}

/**
 * The maximum number of units of the medication that can be dispensed in a
 * period
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Regulatory.MaxDispense
 */
export class MedicationKnowledge_Regulatory_MaxDispense extends Message<MedicationKnowledge_Regulatory_MaxDispense> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The maximum number of units of the medication that can be dispensed
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 4;
   */
  quantity?: SimpleQuantity;

  /**
   * The period that applies to the maximum number of units
   *
   * @generated from field: google.fhir.r4.core.Duration period = 5;
   */
  period?: Duration;

  constructor(data?: PartialMessage<MedicationKnowledge_Regulatory_MaxDispense>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Regulatory.MaxDispense";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 5, name: "period", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Regulatory_MaxDispense {
    return new MedicationKnowledge_Regulatory_MaxDispense().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory_MaxDispense {
    return new MedicationKnowledge_Regulatory_MaxDispense().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Regulatory_MaxDispense {
    return new MedicationKnowledge_Regulatory_MaxDispense().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Regulatory_MaxDispense | PlainMessage<MedicationKnowledge_Regulatory_MaxDispense> | undefined, b: MedicationKnowledge_Regulatory_MaxDispense | PlainMessage<MedicationKnowledge_Regulatory_MaxDispense> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Regulatory_MaxDispense, a, b);
  }
}

/**
 * The time course of drug absorption, distribution, metabolism and excretion
 * of a medication from the body
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledge.Kinetics
 */
export class MedicationKnowledge_Kinetics extends Message<MedicationKnowledge_Kinetics> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The drug concentration measured at certain discrete points in time
   *
   * @generated from field: repeated google.fhir.r4.core.SimpleQuantity area_under_curve = 4;
   */
  areaUnderCurve: SimpleQuantity[] = [];

  /**
   * The median lethal dose of a drug
   *
   * @generated from field: repeated google.fhir.r4.core.SimpleQuantity lethal_dose50 = 5;
   */
  lethalDose50: SimpleQuantity[] = [];

  /**
   * Time required for concentration in the body to decrease by half
   *
   * @generated from field: google.fhir.r4.core.Duration half_life_period = 6;
   */
  halfLifePeriod?: Duration;

  constructor(data?: PartialMessage<MedicationKnowledge_Kinetics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledge.Kinetics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "area_under_curve", kind: "message", T: SimpleQuantity, repeated: true },
    { no: 5, name: "lethal_dose50", kind: "message", T: SimpleQuantity, repeated: true },
    { no: 6, name: "half_life_period", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledge_Kinetics {
    return new MedicationKnowledge_Kinetics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledge_Kinetics {
    return new MedicationKnowledge_Kinetics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledge_Kinetics {
    return new MedicationKnowledge_Kinetics().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledge_Kinetics | PlainMessage<MedicationKnowledge_Kinetics> | undefined, b: MedicationKnowledge_Kinetics | PlainMessage<MedicationKnowledge_Kinetics> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledge_Kinetics, a, b);
  }
}

