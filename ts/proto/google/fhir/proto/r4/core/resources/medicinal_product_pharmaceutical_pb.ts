//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/medicinal_product_pharmaceutical.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, Duration, Extension, Id, Identifier, Meta, Narrative, Quantity, Ratio, Reference, String, Uri } from "../datatypes_pb.js";

/**
 * Auto-generated from StructureDefinition for MedicinalProductPharmaceutical.
 * A pharmaceutical product described in terms of its composition and dose form.
 * See http://hl7.org/fhir/StructureDefinition/MedicinalProductPharmaceutical
 *
 * @generated from message google.fhir.r4.core.MedicinalProductPharmaceutical
 */
export class MedicinalProductPharmaceutical extends Message<MedicinalProductPharmaceutical> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * An identifier for the pharmaceutical medicinal product
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * The administrable dose form, after necessary reconstitution
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept administrable_dose_form = 11;
   */
  administrableDoseForm?: CodeableConcept;

  /**
   * Todo
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept unit_of_presentation = 12;
   */
  unitOfPresentation?: CodeableConcept;

  /**
   * Ingredient
   *
   * @generated from field: repeated google.fhir.r4.core.Reference ingredient = 13;
   */
  ingredient: Reference[] = [];

  /**
   * Accompanying device
   *
   * @generated from field: repeated google.fhir.r4.core.Reference device = 14;
   */
  device: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicinalProductPharmaceutical.Characteristics characteristics = 15;
   */
  characteristics: MedicinalProductPharmaceutical_Characteristics[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration route_of_administration = 16;
   */
  routeOfAdministration: MedicinalProductPharmaceutical_RouteOfAdministration[] = [];

  constructor(data?: PartialMessage<MedicinalProductPharmaceutical>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicinalProductPharmaceutical";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "administrable_dose_form", kind: "message", T: CodeableConcept },
    { no: 12, name: "unit_of_presentation", kind: "message", T: CodeableConcept },
    { no: 13, name: "ingredient", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "device", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "characteristics", kind: "message", T: MedicinalProductPharmaceutical_Characteristics, repeated: true },
    { no: 16, name: "route_of_administration", kind: "message", T: MedicinalProductPharmaceutical_RouteOfAdministration, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicinalProductPharmaceutical {
    return new MedicinalProductPharmaceutical().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical {
    return new MedicinalProductPharmaceutical().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical {
    return new MedicinalProductPharmaceutical().fromJsonString(jsonString, options);
  }

  static equals(a: MedicinalProductPharmaceutical | PlainMessage<MedicinalProductPharmaceutical> | undefined, b: MedicinalProductPharmaceutical | PlainMessage<MedicinalProductPharmaceutical> | undefined): boolean {
    return proto3.util.equals(MedicinalProductPharmaceutical, a, b);
  }
}

/**
 * Characteristics e.g. a products onset of action
 *
 * @generated from message google.fhir.r4.core.MedicinalProductPharmaceutical.Characteristics
 */
export class MedicinalProductPharmaceutical_Characteristics extends Message<MedicinalProductPharmaceutical_Characteristics> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * A coded characteristic
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * The status of characteristic e.g. assigned or pending
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status = 5;
   */
  status?: CodeableConcept;

  constructor(data?: PartialMessage<MedicinalProductPharmaceutical_Characteristics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicinalProductPharmaceutical.Characteristics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "status", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicinalProductPharmaceutical_Characteristics {
    return new MedicinalProductPharmaceutical_Characteristics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_Characteristics {
    return new MedicinalProductPharmaceutical_Characteristics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_Characteristics {
    return new MedicinalProductPharmaceutical_Characteristics().fromJsonString(jsonString, options);
  }

  static equals(a: MedicinalProductPharmaceutical_Characteristics | PlainMessage<MedicinalProductPharmaceutical_Characteristics> | undefined, b: MedicinalProductPharmaceutical_Characteristics | PlainMessage<MedicinalProductPharmaceutical_Characteristics> | undefined): boolean {
    return proto3.util.equals(MedicinalProductPharmaceutical_Characteristics, a, b);
  }
}

/**
 * The path by which the pharmaceutical product is taken into or makes contact
 * with the body
 *
 * @generated from message google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration
 */
export class MedicinalProductPharmaceutical_RouteOfAdministration extends Message<MedicinalProductPharmaceutical_RouteOfAdministration> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Coded expression for the route
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * The first dose (dose quantity) administered in humans can be specified,
   * for a product under investigation, using a numerical value and its unit
   * of measurement
   *
   * @generated from field: google.fhir.r4.core.Quantity first_dose = 5;
   */
  firstDose?: Quantity;

  /**
   * The maximum single dose that can be administered as per the protocol of a
   * clinical trial can be specified using a numerical value and its unit of
   * measurement
   *
   * @generated from field: google.fhir.r4.core.Quantity max_single_dose = 6;
   */
  maxSingleDose?: Quantity;

  /**
   * The maximum dose per day (maximum dose quantity to be administered in any
   * one 24-h period) that can be administered as per the protocol referenced
   * in the clinical trial authorisation
   *
   * @generated from field: google.fhir.r4.core.Quantity max_dose_per_day = 7;
   */
  maxDosePerDay?: Quantity;

  /**
   * The maximum dose per treatment period that can be administered as per the
   * protocol referenced in the clinical trial authorisation
   *
   * @generated from field: google.fhir.r4.core.Ratio max_dose_per_treatment_period = 8;
   */
  maxDosePerTreatmentPeriod?: Ratio;

  /**
   * The maximum treatment period during which an Investigational Medicinal
   * Product can be administered as per the protocol referenced in the
   * clinical trial authorisation
   *
   * @generated from field: google.fhir.r4.core.Duration max_treatment_period = 9;
   */
  maxTreatmentPeriod?: Duration;

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies target_species = 10;
   */
  targetSpecies: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies[] = [];

  constructor(data?: PartialMessage<MedicinalProductPharmaceutical_RouteOfAdministration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "first_dose", kind: "message", T: Quantity },
    { no: 6, name: "max_single_dose", kind: "message", T: Quantity },
    { no: 7, name: "max_dose_per_day", kind: "message", T: Quantity },
    { no: 8, name: "max_dose_per_treatment_period", kind: "message", T: Ratio },
    { no: 9, name: "max_treatment_period", kind: "message", T: Duration },
    { no: 10, name: "target_species", kind: "message", T: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration {
    return new MedicinalProductPharmaceutical_RouteOfAdministration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration {
    return new MedicinalProductPharmaceutical_RouteOfAdministration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration {
    return new MedicinalProductPharmaceutical_RouteOfAdministration().fromJsonString(jsonString, options);
  }

  static equals(a: MedicinalProductPharmaceutical_RouteOfAdministration | PlainMessage<MedicinalProductPharmaceutical_RouteOfAdministration> | undefined, b: MedicinalProductPharmaceutical_RouteOfAdministration | PlainMessage<MedicinalProductPharmaceutical_RouteOfAdministration> | undefined): boolean {
    return proto3.util.equals(MedicinalProductPharmaceutical_RouteOfAdministration, a, b);
  }
}

/**
 * A species for which this route applies
 *
 * @generated from message google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies
 */
export class MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies extends Message<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Coded expression for the species
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies.WithdrawalPeriod withdrawal_period = 5;
   */
  withdrawalPeriod: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod[] = [];

  constructor(data?: PartialMessage<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "withdrawal_period", kind: "message", T: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies {
    return new MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies {
    return new MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies {
    return new MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies().fromJsonString(jsonString, options);
  }

  static equals(a: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies | PlainMessage<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies> | undefined, b: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies | PlainMessage<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies> | undefined): boolean {
    return proto3.util.equals(MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies, a, b);
  }
}

/**
 * A species specific time during which consumption of animal product is
 * not appropriate
 *
 * @generated from message google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies.WithdrawalPeriod
 */
export class MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod extends Message<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Coded expression for the type of tissue for which the withdrawal
   * period applues, e.g. meat, milk
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept tissue = 4;
   */
  tissue?: CodeableConcept;

  /**
   * A value for the time
   *
   * @generated from field: google.fhir.r4.core.Quantity value = 5;
   */
  value?: Quantity;

  /**
   * Extra information about the withdrawal period
   *
   * @generated from field: google.fhir.r4.core.String supporting_information = 6;
   */
  supportingInformation?: String;

  constructor(data?: PartialMessage<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicinalProductPharmaceutical.RouteOfAdministration.TargetSpecies.WithdrawalPeriod";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "tissue", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Quantity },
    { no: 6, name: "supporting_information", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod {
    return new MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod {
    return new MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod {
    return new MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod().fromJsonString(jsonString, options);
  }

  static equals(a: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod | PlainMessage<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod> | undefined, b: MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod | PlainMessage<MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod> | undefined): boolean {
    return proto3.util.equals(MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod, a, b);
  }
}

