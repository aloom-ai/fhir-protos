//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/questionnaire_response.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Attachment, Boolean, Canonical, Code, Coding, Date, DateTime, Decimal, Extension, Id, Identifier, Integer, Meta, Narrative, Quantity, Reference, String, Time, Uri } from "../datatypes_pb.js";
import { QuestionnaireResponseStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for QuestionnaireResponse.
 * A structured set of questions and their answers.
 * See http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponse
 */
export class QuestionnaireResponse extends Message<QuestionnaireResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id for this set of answers
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Request fulfilled by this QuestionnaireResponse
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * Part of this action
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 12;
   */
  partOf: Reference[] = [];

  /**
   * Form being answered
   *
   * @generated from field: google.fhir.r4.core.Canonical questionnaire = 13;
   */
  questionnaire?: Canonical;

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireResponse.StatusCode status = 14;
   */
  status?: QuestionnaireResponse_StatusCode;

  /**
   * The subject of the questions
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 15;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 16;
   */
  encounter?: Reference;

  /**
   * Date the answers were gathered
   *
   * @generated from field: google.fhir.r4.core.DateTime authored = 17;
   */
  authored?: DateTime;

  /**
   * Person who received and recorded the answers
   *
   * @generated from field: google.fhir.r4.core.Reference author = 18;
   */
  author?: Reference;

  /**
   * The person who answered the questions
   *
   * @generated from field: google.fhir.r4.core.Reference source = 19;
   */
  source?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.QuestionnaireResponse.Item item = 20;
   */
  item: QuestionnaireResponse_Item[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 13, name: "questionnaire", kind: "message", T: Canonical },
    { no: 14, name: "status", kind: "message", T: QuestionnaireResponse_StatusCode },
    { no: 15, name: "subject", kind: "message", T: Reference },
    { no: 16, name: "encounter", kind: "message", T: Reference },
    { no: 17, name: "authored", kind: "message", T: DateTime },
    { no: 18, name: "author", kind: "message", T: Reference },
    { no: 19, name: "source", kind: "message", T: Reference },
    { no: 20, name: "item", kind: "message", T: QuestionnaireResponse_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse {
    return new QuestionnaireResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse {
    return new QuestionnaireResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse {
    return new QuestionnaireResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse | PlainMessage<QuestionnaireResponse> | undefined, b: QuestionnaireResponse | PlainMessage<QuestionnaireResponse> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse, a, b);
  }
}

/**
 * in-progress | completed | amended | entered-in-error | stopped
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponse.StatusCode
 */
export class QuestionnaireResponse_StatusCode extends Message<QuestionnaireResponse_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireResponseStatusCode.Value value = 1;
   */
  value = QuestionnaireResponseStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponse.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(QuestionnaireResponseStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_StatusCode {
    return new QuestionnaireResponse_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_StatusCode {
    return new QuestionnaireResponse_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_StatusCode {
    return new QuestionnaireResponse_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_StatusCode | PlainMessage<QuestionnaireResponse_StatusCode> | undefined, b: QuestionnaireResponse_StatusCode | PlainMessage<QuestionnaireResponse_StatusCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_StatusCode, a, b);
  }
}

/**
 * Groups and questions
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponse.Item
 */
export class QuestionnaireResponse_Item extends Message<QuestionnaireResponse_Item> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Pointer to specific item from Questionnaire
   *
   * @generated from field: google.fhir.r4.core.String link_id = 4;
   */
  linkId?: String;

  /**
   * ElementDefinition - details for the item
   *
   * @generated from field: google.fhir.r4.core.Uri definition = 5;
   */
  definition?: Uri;

  /**
   * Name for group or question text
   *
   * @generated from field: google.fhir.r4.core.String text = 6;
   */
  text?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.QuestionnaireResponse.Item.Answer answer = 7;
   */
  answer: QuestionnaireResponse_Item_Answer[] = [];

  /**
   * Nested questionnaire response items
   *
   * @generated from field: repeated google.fhir.r4.core.QuestionnaireResponse.Item item = 8;
   */
  item: QuestionnaireResponse_Item[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponse.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link_id", kind: "message", T: String },
    { no: 5, name: "definition", kind: "message", T: Uri },
    { no: 6, name: "text", kind: "message", T: String },
    { no: 7, name: "answer", kind: "message", T: QuestionnaireResponse_Item_Answer, repeated: true },
    { no: 8, name: "item", kind: "message", T: QuestionnaireResponse_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_Item {
    return new QuestionnaireResponse_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item {
    return new QuestionnaireResponse_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item {
    return new QuestionnaireResponse_Item().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_Item | PlainMessage<QuestionnaireResponse_Item> | undefined, b: QuestionnaireResponse_Item | PlainMessage<QuestionnaireResponse_Item> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_Item, a, b);
  }
}

/**
 * The response(s) to the question
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponse.Item.Answer
 */
export class QuestionnaireResponse_Item_Answer extends Message<QuestionnaireResponse_Item_Answer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.QuestionnaireResponse.Item.Answer.ValueX value = 4;
   */
  value?: QuestionnaireResponse_Item_Answer_ValueX;

  /**
   * Nested groups and questions
   *
   * @generated from field: repeated google.fhir.r4.core.QuestionnaireResponse.Item item = 5;
   */
  item: QuestionnaireResponse_Item[] = [];

  constructor(data?: PartialMessage<QuestionnaireResponse_Item_Answer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponse.Item.Answer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "message", T: QuestionnaireResponse_Item_Answer_ValueX },
    { no: 5, name: "item", kind: "message", T: QuestionnaireResponse_Item, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_Item_Answer {
    return new QuestionnaireResponse_Item_Answer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer {
    return new QuestionnaireResponse_Item_Answer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer {
    return new QuestionnaireResponse_Item_Answer().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_Item_Answer | PlainMessage<QuestionnaireResponse_Item_Answer> | undefined, b: QuestionnaireResponse_Item_Answer | PlainMessage<QuestionnaireResponse_Item_Answer> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_Item_Answer, a, b);
  }
}

/**
 * Single-valued answer to the question
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponse.Item.Answer.ValueX
 */
export class QuestionnaireResponse_Item_Answer_ValueX extends Message<QuestionnaireResponse_Item_Answer_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.QuestionnaireResponse.Item.Answer.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 2;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 3;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 4;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 5;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 6;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 7 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 8;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 9;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 10;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 11;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 12;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<QuestionnaireResponse_Item_Answer_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponse.Item.Answer.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 3, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 4, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 5, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 6, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 7, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 8, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 9, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 10, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 11, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 12, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponse_Item_Answer_ValueX {
    return new QuestionnaireResponse_Item_Answer_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer_ValueX {
    return new QuestionnaireResponse_Item_Answer_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponse_Item_Answer_ValueX {
    return new QuestionnaireResponse_Item_Answer_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponse_Item_Answer_ValueX | PlainMessage<QuestionnaireResponse_Item_Answer_ValueX> | undefined, b: QuestionnaireResponse_Item_Answer_ValueX | PlainMessage<QuestionnaireResponse_Item_Answer_ValueX> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponse_Item_Answer_ValueX, a, b);
  }
}

