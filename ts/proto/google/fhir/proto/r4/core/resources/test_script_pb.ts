//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/test_script.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, DateTime, Extension, Id, Identifier, Integer, Markdown, Meta, Narrative, Reference, String, Uri, UsageContext } from "../datatypes_pb.js";
import { AssertionDirectionTypeCode_Value, AssertionOperatorTypeCode_Value, AssertionResponseTypesCode_Value, PublicationStatusCode_Value, TestScriptRequestMethodCode_Value } from "../codes_pb.js";
import { FHIRDefinedTypeValueSet_Value } from "../valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for TestScript.
 * Describes a set of tests.
 * See http://hl7.org/fhir/StructureDefinition/TestScript
 *
 * @generated from message google.fhir.r4.core.TestScript
 */
export class TestScript extends Message<TestScript> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this test script, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the test script
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier?: Identifier;

  /**
   * Business version of the test script
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this test script (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this test script (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.StatusCode status = 15;
   */
  status?: TestScript_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 16;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 17;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 18;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 19;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the test script
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 20;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 21;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for test script (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 22;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this test script is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 23;
   */
  purpose?: Markdown;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 24;
   */
  copyright?: Markdown;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Origin origin = 25;
   */
  origin: TestScript_Origin[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Destination destination = 26;
   */
  destination: TestScript_Destination[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Metadata metadata = 27;
   */
  metadata?: TestScript_Metadata;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Fixture fixture = 28;
   */
  fixture: TestScript_Fixture[] = [];

  /**
   * Reference of the validation profile
   *
   * @generated from field: repeated google.fhir.r4.core.Reference profile = 29;
   */
  profile: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Variable variable = 30;
   */
  variable: TestScript_Variable[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup setup = 31;
   */
  setup?: TestScript_Setup;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Test test = 32;
   */
  test: TestScript_Test[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Teardown teardown = 33;
   */
  teardown?: TestScript_Teardown;

  constructor(data?: PartialMessage<TestScript>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "status", kind: "message", T: TestScript_StatusCode },
    { no: 16, name: "experimental", kind: "message", T: Boolean },
    { no: 17, name: "date", kind: "message", T: DateTime },
    { no: 18, name: "publisher", kind: "message", T: String },
    { no: 19, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 20, name: "description", kind: "message", T: Markdown },
    { no: 21, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 22, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "purpose", kind: "message", T: Markdown },
    { no: 24, name: "copyright", kind: "message", T: Markdown },
    { no: 25, name: "origin", kind: "message", T: TestScript_Origin, repeated: true },
    { no: 26, name: "destination", kind: "message", T: TestScript_Destination, repeated: true },
    { no: 27, name: "metadata", kind: "message", T: TestScript_Metadata },
    { no: 28, name: "fixture", kind: "message", T: TestScript_Fixture, repeated: true },
    { no: 29, name: "profile", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "variable", kind: "message", T: TestScript_Variable, repeated: true },
    { no: 31, name: "setup", kind: "message", T: TestScript_Setup },
    { no: 32, name: "test", kind: "message", T: TestScript_Test, repeated: true },
    { no: 33, name: "teardown", kind: "message", T: TestScript_Teardown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript {
    return new TestScript().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript {
    return new TestScript().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript {
    return new TestScript().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript | PlainMessage<TestScript> | undefined, b: TestScript | PlainMessage<TestScript> | undefined): boolean {
    return proto3.util.equals(TestScript, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.TestScript.StatusCode
 */
export class TestScript_StatusCode extends Message<TestScript_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_StatusCode {
    return new TestScript_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_StatusCode {
    return new TestScript_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_StatusCode {
    return new TestScript_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_StatusCode | PlainMessage<TestScript_StatusCode> | undefined, b: TestScript_StatusCode | PlainMessage<TestScript_StatusCode> | undefined): boolean {
    return proto3.util.equals(TestScript_StatusCode, a, b);
  }
}

/**
 * An abstract server representing a client or sender in a message exchange
 *
 * @generated from message google.fhir.r4.core.TestScript.Origin
 */
export class TestScript_Origin extends Message<TestScript_Origin> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The index of the abstract origin server starting at 1
   *
   * @generated from field: google.fhir.r4.core.Integer index = 4;
   */
  index?: Integer;

  /**
   * FHIR-Client | FHIR-SDC-FormFiller
   *
   * @generated from field: google.fhir.r4.core.Coding profile = 5;
   */
  profile?: Coding;

  constructor(data?: PartialMessage<TestScript_Origin>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Origin";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "index", kind: "message", T: Integer },
    { no: 5, name: "profile", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Origin {
    return new TestScript_Origin().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Origin {
    return new TestScript_Origin().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Origin {
    return new TestScript_Origin().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Origin | PlainMessage<TestScript_Origin> | undefined, b: TestScript_Origin | PlainMessage<TestScript_Origin> | undefined): boolean {
    return proto3.util.equals(TestScript_Origin, a, b);
  }
}

/**
 * An abstract server representing a destination or receiver in a message
 * exchange
 *
 * @generated from message google.fhir.r4.core.TestScript.Destination
 */
export class TestScript_Destination extends Message<TestScript_Destination> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The index of the abstract destination server starting at 1
   *
   * @generated from field: google.fhir.r4.core.Integer index = 4;
   */
  index?: Integer;

  /**
   * FHIR-Server | FHIR-SDC-FormManager | FHIR-SDC-FormReceiver |
   * FHIR-SDC-FormProcessor
   *
   * @generated from field: google.fhir.r4.core.Coding profile = 5;
   */
  profile?: Coding;

  constructor(data?: PartialMessage<TestScript_Destination>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Destination";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "index", kind: "message", T: Integer },
    { no: 5, name: "profile", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Destination {
    return new TestScript_Destination().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Destination {
    return new TestScript_Destination().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Destination {
    return new TestScript_Destination().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Destination | PlainMessage<TestScript_Destination> | undefined, b: TestScript_Destination | PlainMessage<TestScript_Destination> | undefined): boolean {
    return proto3.util.equals(TestScript_Destination, a, b);
  }
}

/**
 * Required capability that is assumed to function correctly on the FHIR
 * server being tested
 *
 * @generated from message google.fhir.r4.core.TestScript.Metadata
 */
export class TestScript_Metadata extends Message<TestScript_Metadata> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Metadata.Link link = 4;
   */
  link: TestScript_Metadata_Link[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Metadata.Capability capability = 5;
   */
  capability: TestScript_Metadata_Capability[] = [];

  constructor(data?: PartialMessage<TestScript_Metadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Metadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "link", kind: "message", T: TestScript_Metadata_Link, repeated: true },
    { no: 5, name: "capability", kind: "message", T: TestScript_Metadata_Capability, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Metadata {
    return new TestScript_Metadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Metadata {
    return new TestScript_Metadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Metadata {
    return new TestScript_Metadata().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Metadata | PlainMessage<TestScript_Metadata> | undefined, b: TestScript_Metadata | PlainMessage<TestScript_Metadata> | undefined): boolean {
    return proto3.util.equals(TestScript_Metadata, a, b);
  }
}

/**
 * Links to the FHIR specification
 *
 * @generated from message google.fhir.r4.core.TestScript.Metadata.Link
 */
export class TestScript_Metadata_Link extends Message<TestScript_Metadata_Link> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * URL to the specification
   *
   * @generated from field: google.fhir.r4.core.Uri url = 4;
   */
  url?: Uri;

  /**
   * Short description
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  constructor(data?: PartialMessage<TestScript_Metadata_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Metadata.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "url", kind: "message", T: Uri },
    { no: 5, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Metadata_Link {
    return new TestScript_Metadata_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Metadata_Link {
    return new TestScript_Metadata_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Metadata_Link {
    return new TestScript_Metadata_Link().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Metadata_Link | PlainMessage<TestScript_Metadata_Link> | undefined, b: TestScript_Metadata_Link | PlainMessage<TestScript_Metadata_Link> | undefined): boolean {
    return proto3.util.equals(TestScript_Metadata_Link, a, b);
  }
}

/**
 * Capabilities  that are assumed to function correctly on the FHIR server
 * being tested
 *
 * @generated from message google.fhir.r4.core.TestScript.Metadata.Capability
 */
export class TestScript_Metadata_Capability extends Message<TestScript_Metadata_Capability> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Are the capabilities required?
   *
   * @generated from field: google.fhir.r4.core.Boolean required = 4;
   */
  required?: Boolean;

  /**
   * Are the capabilities validated?
   *
   * @generated from field: google.fhir.r4.core.Boolean validated = 5;
   */
  validated?: Boolean;

  /**
   * The expected capabilities of the server
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * Which origin server these requirements apply to
   *
   * @generated from field: repeated google.fhir.r4.core.Integer origin = 7;
   */
  origin: Integer[] = [];

  /**
   * Which server these requirements apply to
   *
   * @generated from field: google.fhir.r4.core.Integer destination = 8;
   */
  destination?: Integer;

  /**
   * Links to the FHIR specification
   *
   * @generated from field: repeated google.fhir.r4.core.Uri link = 9;
   */
  link: Uri[] = [];

  /**
   * Required Capability Statement
   *
   * @generated from field: google.fhir.r4.core.Canonical capabilities = 10;
   */
  capabilities?: Canonical;

  constructor(data?: PartialMessage<TestScript_Metadata_Capability>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Metadata.Capability";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "required", kind: "message", T: Boolean },
    { no: 5, name: "validated", kind: "message", T: Boolean },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "origin", kind: "message", T: Integer, repeated: true },
    { no: 8, name: "destination", kind: "message", T: Integer },
    { no: 9, name: "link", kind: "message", T: Uri, repeated: true },
    { no: 10, name: "capabilities", kind: "message", T: Canonical },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Metadata_Capability {
    return new TestScript_Metadata_Capability().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Metadata_Capability {
    return new TestScript_Metadata_Capability().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Metadata_Capability {
    return new TestScript_Metadata_Capability().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Metadata_Capability | PlainMessage<TestScript_Metadata_Capability> | undefined, b: TestScript_Metadata_Capability | PlainMessage<TestScript_Metadata_Capability> | undefined): boolean {
    return proto3.util.equals(TestScript_Metadata_Capability, a, b);
  }
}

/**
 * Fixture in the test script - by reference (uri)
 *
 * @generated from message google.fhir.r4.core.TestScript.Fixture
 */
export class TestScript_Fixture extends Message<TestScript_Fixture> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Whether or not to implicitly create the fixture during setup
   *
   * @generated from field: google.fhir.r4.core.Boolean autocreate = 4;
   */
  autocreate?: Boolean;

  /**
   * Whether or not to implicitly delete the fixture during teardown
   *
   * @generated from field: google.fhir.r4.core.Boolean autodelete = 5;
   */
  autodelete?: Boolean;

  /**
   * Reference of the resource
   *
   * @generated from field: google.fhir.r4.core.Reference resource = 6;
   */
  resource?: Reference;

  constructor(data?: PartialMessage<TestScript_Fixture>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Fixture";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "autocreate", kind: "message", T: Boolean },
    { no: 5, name: "autodelete", kind: "message", T: Boolean },
    { no: 6, name: "resource", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Fixture {
    return new TestScript_Fixture().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Fixture {
    return new TestScript_Fixture().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Fixture {
    return new TestScript_Fixture().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Fixture | PlainMessage<TestScript_Fixture> | undefined, b: TestScript_Fixture | PlainMessage<TestScript_Fixture> | undefined): boolean {
    return proto3.util.equals(TestScript_Fixture, a, b);
  }
}

/**
 * Placeholder for evaluated elements
 *
 * @generated from message google.fhir.r4.core.TestScript.Variable
 */
export class TestScript_Variable extends Message<TestScript_Variable> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Descriptive name for this variable
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Default, hard-coded, or user-defined value for this variable
   *
   * @generated from field: google.fhir.r4.core.String default_value = 5;
   */
  defaultValue?: String;

  /**
   * Natural language description of the variable
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * The FHIRPath expression against the fixture body
   *
   * @generated from field: google.fhir.r4.core.String expression = 7;
   */
  expression?: String;

  /**
   * HTTP header field name for source
   *
   * @generated from field: google.fhir.r4.core.String header_field = 8;
   */
  headerField?: String;

  /**
   * Hint help text for default value to enter
   *
   * @generated from field: google.fhir.r4.core.String hint = 9;
   */
  hint?: String;

  /**
   * XPath or JSONPath against the fixture body
   *
   * @generated from field: google.fhir.r4.core.String path = 10;
   */
  path?: String;

  /**
   * Fixture Id of source expression or headerField within this variable
   *
   * @generated from field: google.fhir.r4.core.Id source_id = 11;
   */
  sourceId?: Id;

  constructor(data?: PartialMessage<TestScript_Variable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Variable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "default_value", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "expression", kind: "message", T: String },
    { no: 8, name: "header_field", kind: "message", T: String },
    { no: 9, name: "hint", kind: "message", T: String },
    { no: 10, name: "path", kind: "message", T: String },
    { no: 11, name: "source_id", kind: "message", T: Id },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Variable {
    return new TestScript_Variable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Variable {
    return new TestScript_Variable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Variable {
    return new TestScript_Variable().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Variable | PlainMessage<TestScript_Variable> | undefined, b: TestScript_Variable | PlainMessage<TestScript_Variable> | undefined): boolean {
    return proto3.util.equals(TestScript_Variable, a, b);
  }
}

/**
 * A series of required setup operations before tests are executed
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup
 */
export class TestScript_Setup extends Message<TestScript_Setup> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Setup.SetupAction action = 4;
   */
  action: TestScript_Setup_SetupAction[] = [];

  constructor(data?: PartialMessage<TestScript_Setup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestScript_Setup_SetupAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup {
    return new TestScript_Setup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup {
    return new TestScript_Setup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup {
    return new TestScript_Setup().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup | PlainMessage<TestScript_Setup> | undefined, b: TestScript_Setup | PlainMessage<TestScript_Setup> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup, a, b);
  }
}

/**
 * A setup operation or assert to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction
 */
export class TestScript_Setup_SetupAction extends Message<TestScript_Setup_SetupAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestScript_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestScript_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestScript_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction {
    return new TestScript_Setup_SetupAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction {
    return new TestScript_Setup_SetupAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction {
    return new TestScript_Setup_SetupAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction | PlainMessage<TestScript_Setup_SetupAction> | undefined, b: TestScript_Setup_SetupAction | PlainMessage<TestScript_Setup_SetupAction> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction, a, b);
  }
}

/**
 * The setup operation to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation
 */
export class TestScript_Setup_SetupAction_Operation extends Message<TestScript_Setup_SetupAction_Operation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The operation code type that will be executed
   *
   * @generated from field: google.fhir.r4.core.Coding type = 4;
   */
  type?: Coding;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode resource = 5;
   */
  resource?: TestScript_Setup_SetupAction_Operation_ResourceCode;

  /**
   * Tracking/logging operation label
   *
   * @generated from field: google.fhir.r4.core.String label = 6;
   */
  label?: String;

  /**
   * Tracking/reporting operation description
   *
   * @generated from field: google.fhir.r4.core.String description = 7;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode accept = 8;
   */
  accept?: TestScript_Setup_SetupAction_Operation_AcceptCode;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode content_type = 9;
   */
  contentType?: TestScript_Setup_SetupAction_Operation_ContentTypeCode;

  /**
   * Server responding to the request
   *
   * @generated from field: google.fhir.r4.core.Integer destination = 10;
   */
  destination?: Integer;

  /**
   * Whether or not to send the request url in encoded format
   *
   * @generated from field: google.fhir.r4.core.Boolean encode_request_url = 11;
   */
  encodeRequestUrl?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode method = 12;
   */
  method?: TestScript_Setup_SetupAction_Operation_MethodCode;

  /**
   * Server initiating the request
   *
   * @generated from field: google.fhir.r4.core.Integer origin = 13;
   */
  origin?: Integer;

  /**
   * Explicitly defined path parameters
   *
   * @generated from field: google.fhir.r4.core.String params = 14;
   */
  params?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader request_header = 15;
   */
  requestHeader: TestScript_Setup_SetupAction_Operation_RequestHeader[] = [];

  /**
   * Fixture Id of mapped request
   *
   * @generated from field: google.fhir.r4.core.Id request_id = 16;
   */
  requestId?: Id;

  /**
   * Fixture Id of mapped response
   *
   * @generated from field: google.fhir.r4.core.Id response_id = 17;
   */
  responseId?: Id;

  /**
   * Fixture Id of body for PUT and POST requests
   *
   * @generated from field: google.fhir.r4.core.Id source_id = 18;
   */
  sourceId?: Id;

  /**
   * Id of fixture used for extracting the [id],  [type], and [vid] for
   * GET requests
   *
   * @generated from field: google.fhir.r4.core.Id target_id = 19;
   */
  targetId?: Id;

  /**
   * Request URL
   *
   * @generated from field: google.fhir.r4.core.String url = 20;
   */
  url?: String;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Operation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: Coding },
    { no: 5, name: "resource", kind: "message", T: TestScript_Setup_SetupAction_Operation_ResourceCode },
    { no: 6, name: "label", kind: "message", T: String },
    { no: 7, name: "description", kind: "message", T: String },
    { no: 8, name: "accept", kind: "message", T: TestScript_Setup_SetupAction_Operation_AcceptCode },
    { no: 9, name: "content_type", kind: "message", T: TestScript_Setup_SetupAction_Operation_ContentTypeCode },
    { no: 10, name: "destination", kind: "message", T: Integer },
    { no: 11, name: "encode_request_url", kind: "message", T: Boolean },
    { no: 12, name: "method", kind: "message", T: TestScript_Setup_SetupAction_Operation_MethodCode },
    { no: 13, name: "origin", kind: "message", T: Integer },
    { no: 14, name: "params", kind: "message", T: String },
    { no: 15, name: "request_header", kind: "message", T: TestScript_Setup_SetupAction_Operation_RequestHeader, repeated: true },
    { no: 16, name: "request_id", kind: "message", T: Id },
    { no: 17, name: "response_id", kind: "message", T: Id },
    { no: 18, name: "source_id", kind: "message", T: Id },
    { no: 19, name: "target_id", kind: "message", T: Id },
    { no: 20, name: "url", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation {
    return new TestScript_Setup_SetupAction_Operation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation {
    return new TestScript_Setup_SetupAction_Operation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation {
    return new TestScript_Setup_SetupAction_Operation().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation | PlainMessage<TestScript_Setup_SetupAction_Operation> | undefined, b: TestScript_Setup_SetupAction_Operation | PlainMessage<TestScript_Setup_SetupAction_Operation> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation, a, b);
  }
}

/**
 * Resource type
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode
 */
export class TestScript_Setup_SetupAction_Operation_ResourceCode extends Message<TestScript_Setup_SetupAction_Operation_ResourceCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRDefinedTypeValueSet.Value value = 1;
   */
  value = FHIRDefinedTypeValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation_ResourceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ResourceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRDefinedTypeValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation_ResourceCode {
    return new TestScript_Setup_SetupAction_Operation_ResourceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_ResourceCode {
    return new TestScript_Setup_SetupAction_Operation_ResourceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_ResourceCode {
    return new TestScript_Setup_SetupAction_Operation_ResourceCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation_ResourceCode | PlainMessage<TestScript_Setup_SetupAction_Operation_ResourceCode> | undefined, b: TestScript_Setup_SetupAction_Operation_ResourceCode | PlainMessage<TestScript_Setup_SetupAction_Operation_ResourceCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation_ResourceCode, a, b);
  }
}

/**
 * Mime type to accept in the payload of the response, with charset etc.
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode
 */
export class TestScript_Setup_SetupAction_Operation_AcceptCode extends Message<TestScript_Setup_SetupAction_Operation_AcceptCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation_AcceptCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.AcceptCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation_AcceptCode {
    return new TestScript_Setup_SetupAction_Operation_AcceptCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_AcceptCode {
    return new TestScript_Setup_SetupAction_Operation_AcceptCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_AcceptCode {
    return new TestScript_Setup_SetupAction_Operation_AcceptCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation_AcceptCode | PlainMessage<TestScript_Setup_SetupAction_Operation_AcceptCode> | undefined, b: TestScript_Setup_SetupAction_Operation_AcceptCode | PlainMessage<TestScript_Setup_SetupAction_Operation_AcceptCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation_AcceptCode, a, b);
  }
}

/**
 * Mime type of the request payload contents, with charset etc.
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode
 */
export class TestScript_Setup_SetupAction_Operation_ContentTypeCode extends Message<TestScript_Setup_SetupAction_Operation_ContentTypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation_ContentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.ContentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation_ContentTypeCode {
    return new TestScript_Setup_SetupAction_Operation_ContentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_ContentTypeCode {
    return new TestScript_Setup_SetupAction_Operation_ContentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_ContentTypeCode {
    return new TestScript_Setup_SetupAction_Operation_ContentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation_ContentTypeCode | PlainMessage<TestScript_Setup_SetupAction_Operation_ContentTypeCode> | undefined, b: TestScript_Setup_SetupAction_Operation_ContentTypeCode | PlainMessage<TestScript_Setup_SetupAction_Operation_ContentTypeCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation_ContentTypeCode, a, b);
  }
}

/**
 * delete | get | options | patch | post | put | head
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode
 */
export class TestScript_Setup_SetupAction_Operation_MethodCode extends Message<TestScript_Setup_SetupAction_Operation_MethodCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestScriptRequestMethodCode.Value value = 1;
   */
  value = TestScriptRequestMethodCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation_MethodCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.MethodCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestScriptRequestMethodCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation_MethodCode {
    return new TestScript_Setup_SetupAction_Operation_MethodCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_MethodCode {
    return new TestScript_Setup_SetupAction_Operation_MethodCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_MethodCode {
    return new TestScript_Setup_SetupAction_Operation_MethodCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation_MethodCode | PlainMessage<TestScript_Setup_SetupAction_Operation_MethodCode> | undefined, b: TestScript_Setup_SetupAction_Operation_MethodCode | PlainMessage<TestScript_Setup_SetupAction_Operation_MethodCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation_MethodCode, a, b);
  }
}

/**
 * Each operation can have one or more header elements
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader
 */
export class TestScript_Setup_SetupAction_Operation_RequestHeader extends Message<TestScript_Setup_SetupAction_Operation_RequestHeader> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * HTTP header field name
   *
   * @generated from field: google.fhir.r4.core.String field = 4;
   */
  field?: String;

  /**
   * HTTP headerfield value
   *
   * @generated from field: google.fhir.r4.core.String value = 5;
   */
  value?: String;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Operation_RequestHeader>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Operation.RequestHeader";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "field", kind: "message", T: String },
    { no: 5, name: "value", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Operation_RequestHeader {
    return new TestScript_Setup_SetupAction_Operation_RequestHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_RequestHeader {
    return new TestScript_Setup_SetupAction_Operation_RequestHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Operation_RequestHeader {
    return new TestScript_Setup_SetupAction_Operation_RequestHeader().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Operation_RequestHeader | PlainMessage<TestScript_Setup_SetupAction_Operation_RequestHeader> | undefined, b: TestScript_Setup_SetupAction_Operation_RequestHeader | PlainMessage<TestScript_Setup_SetupAction_Operation_RequestHeader> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Operation_RequestHeader, a, b);
  }
}

/**
 * The assertion to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert
 */
export class TestScript_Setup_SetupAction_Assert extends Message<TestScript_Setup_SetupAction_Assert> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Tracking/logging assertion label
   *
   * @generated from field: google.fhir.r4.core.String label = 4;
   */
  label?: String;

  /**
   * Tracking/reporting assertion description
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode direction = 6;
   */
  direction?: TestScript_Setup_SetupAction_Assert_DirectionCode;

  /**
   * Id of the source fixture to be evaluated
   *
   * @generated from field: google.fhir.r4.core.String compare_to_source_id = 7;
   */
  compareToSourceId?: String;

  /**
   * The FHIRPath expression to evaluate against the source fixture
   *
   * @generated from field: google.fhir.r4.core.String compare_to_source_expression = 8;
   */
  compareToSourceExpression?: String;

  /**
   * XPath or JSONPath expression to evaluate against the source fixture
   *
   * @generated from field: google.fhir.r4.core.String compare_to_source_path = 9;
   */
  compareToSourcePath?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode content_type = 10;
   */
  contentType?: TestScript_Setup_SetupAction_Assert_ContentTypeCode;

  /**
   * The FHIRPath expression to be evaluated
   *
   * @generated from field: google.fhir.r4.core.String expression = 11;
   */
  expression?: String;

  /**
   * HTTP header field name
   *
   * @generated from field: google.fhir.r4.core.String header_field = 12;
   */
  headerField?: String;

  /**
   * Fixture Id of minimum content resource
   *
   * @generated from field: google.fhir.r4.core.String minimum_id = 13;
   */
  minimumId?: String;

  /**
   * Perform validation on navigation links?
   *
   * @generated from field: google.fhir.r4.core.Boolean navigation_links = 14;
   */
  navigationLinks?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode operator = 15;
   */
  operator?: TestScript_Setup_SetupAction_Assert_OperatorCode;

  /**
   * XPath or JSONPath expression
   *
   * @generated from field: google.fhir.r4.core.String path = 16;
   */
  path?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode request_method = 17;
   */
  requestMethod?: TestScript_Setup_SetupAction_Assert_RequestMethodCode;

  /**
   * Request URL comparison value
   *
   * @generated from field: google.fhir.r4.core.String request_url = 18 [json_name = "requestURL"];
   */
  requestUrl?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode resource = 19;
   */
  resource?: TestScript_Setup_SetupAction_Assert_ResourceCode;

  /**
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode response = 20;
   */
  response?: TestScript_Setup_SetupAction_Assert_ResponseCode;

  /**
   * HTTP response code to test
   *
   * @generated from field: google.fhir.r4.core.String response_code = 21;
   */
  responseCode?: String;

  /**
   * Fixture Id of source expression or headerField
   *
   * @generated from field: google.fhir.r4.core.Id source_id = 22;
   */
  sourceId?: Id;

  /**
   * Profile Id of validation profile reference
   *
   * @generated from field: google.fhir.r4.core.Id validate_profile_id = 23;
   */
  validateProfileId?: Id;

  /**
   * The value to compare to
   *
   * @generated from field: google.fhir.r4.core.String value = 24;
   */
  value?: String;

  /**
   * Will this assert produce a warning only on error?
   *
   * @generated from field: google.fhir.r4.core.Boolean warning_only = 25;
   */
  warningOnly?: Boolean;

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "label", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "direction", kind: "message", T: TestScript_Setup_SetupAction_Assert_DirectionCode },
    { no: 7, name: "compare_to_source_id", kind: "message", T: String },
    { no: 8, name: "compare_to_source_expression", kind: "message", T: String },
    { no: 9, name: "compare_to_source_path", kind: "message", T: String },
    { no: 10, name: "content_type", kind: "message", T: TestScript_Setup_SetupAction_Assert_ContentTypeCode },
    { no: 11, name: "expression", kind: "message", T: String },
    { no: 12, name: "header_field", kind: "message", T: String },
    { no: 13, name: "minimum_id", kind: "message", T: String },
    { no: 14, name: "navigation_links", kind: "message", T: Boolean },
    { no: 15, name: "operator", kind: "message", T: TestScript_Setup_SetupAction_Assert_OperatorCode },
    { no: 16, name: "path", kind: "message", T: String },
    { no: 17, name: "request_method", kind: "message", T: TestScript_Setup_SetupAction_Assert_RequestMethodCode },
    { no: 18, name: "request_url", jsonName: "requestURL", kind: "message", T: String },
    { no: 19, name: "resource", kind: "message", T: TestScript_Setup_SetupAction_Assert_ResourceCode },
    { no: 20, name: "response", kind: "message", T: TestScript_Setup_SetupAction_Assert_ResponseCode },
    { no: 21, name: "response_code", kind: "message", T: String },
    { no: 22, name: "source_id", kind: "message", T: Id },
    { no: 23, name: "validate_profile_id", kind: "message", T: Id },
    { no: 24, name: "value", kind: "message", T: String },
    { no: 25, name: "warning_only", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert {
    return new TestScript_Setup_SetupAction_Assert().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert {
    return new TestScript_Setup_SetupAction_Assert().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert {
    return new TestScript_Setup_SetupAction_Assert().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert | PlainMessage<TestScript_Setup_SetupAction_Assert> | undefined, b: TestScript_Setup_SetupAction_Assert | PlainMessage<TestScript_Setup_SetupAction_Assert> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert, a, b);
  }
}

/**
 * response | request
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode
 */
export class TestScript_Setup_SetupAction_Assert_DirectionCode extends Message<TestScript_Setup_SetupAction_Assert_DirectionCode> {
  /**
   * @generated from field: google.fhir.r4.core.AssertionDirectionTypeCode.Value value = 1;
   */
  value = AssertionDirectionTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_DirectionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.DirectionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AssertionDirectionTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_DirectionCode {
    return new TestScript_Setup_SetupAction_Assert_DirectionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_DirectionCode {
    return new TestScript_Setup_SetupAction_Assert_DirectionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_DirectionCode {
    return new TestScript_Setup_SetupAction_Assert_DirectionCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_DirectionCode | PlainMessage<TestScript_Setup_SetupAction_Assert_DirectionCode> | undefined, b: TestScript_Setup_SetupAction_Assert_DirectionCode | PlainMessage<TestScript_Setup_SetupAction_Assert_DirectionCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_DirectionCode, a, b);
  }
}

/**
 * Mime type to compare against the 'Content-Type' header
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode
 */
export class TestScript_Setup_SetupAction_Assert_ContentTypeCode extends Message<TestScript_Setup_SetupAction_Assert_ContentTypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  /**
   * This valueset is not enumerable, and so is represented as a string.
   *
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ContentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ContentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ContentTypeCode {
    return new TestScript_Setup_SetupAction_Assert_ContentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ContentTypeCode {
    return new TestScript_Setup_SetupAction_Assert_ContentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ContentTypeCode {
    return new TestScript_Setup_SetupAction_Assert_ContentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ContentTypeCode | PlainMessage<TestScript_Setup_SetupAction_Assert_ContentTypeCode> | undefined, b: TestScript_Setup_SetupAction_Assert_ContentTypeCode | PlainMessage<TestScript_Setup_SetupAction_Assert_ContentTypeCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ContentTypeCode, a, b);
  }
}

/**
 * equals | notEquals | in | notIn | greaterThan | lessThan | empty |
 * notEmpty | contains | notContains | eval
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode
 */
export class TestScript_Setup_SetupAction_Assert_OperatorCode extends Message<TestScript_Setup_SetupAction_Assert_OperatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.AssertionOperatorTypeCode.Value value = 1;
   */
  value = AssertionOperatorTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_OperatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.OperatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AssertionOperatorTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_OperatorCode {
    return new TestScript_Setup_SetupAction_Assert_OperatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_OperatorCode {
    return new TestScript_Setup_SetupAction_Assert_OperatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_OperatorCode {
    return new TestScript_Setup_SetupAction_Assert_OperatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_OperatorCode | PlainMessage<TestScript_Setup_SetupAction_Assert_OperatorCode> | undefined, b: TestScript_Setup_SetupAction_Assert_OperatorCode | PlainMessage<TestScript_Setup_SetupAction_Assert_OperatorCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_OperatorCode, a, b);
  }
}

/**
 * delete | get | options | patch | post | put | head
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode
 */
export class TestScript_Setup_SetupAction_Assert_RequestMethodCode extends Message<TestScript_Setup_SetupAction_Assert_RequestMethodCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestScriptRequestMethodCode.Value value = 1;
   */
  value = TestScriptRequestMethodCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_RequestMethodCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.RequestMethodCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestScriptRequestMethodCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_RequestMethodCode {
    return new TestScript_Setup_SetupAction_Assert_RequestMethodCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_RequestMethodCode {
    return new TestScript_Setup_SetupAction_Assert_RequestMethodCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_RequestMethodCode {
    return new TestScript_Setup_SetupAction_Assert_RequestMethodCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_RequestMethodCode | PlainMessage<TestScript_Setup_SetupAction_Assert_RequestMethodCode> | undefined, b: TestScript_Setup_SetupAction_Assert_RequestMethodCode | PlainMessage<TestScript_Setup_SetupAction_Assert_RequestMethodCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_RequestMethodCode, a, b);
  }
}

/**
 * Resource type
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode
 */
export class TestScript_Setup_SetupAction_Assert_ResourceCode extends Message<TestScript_Setup_SetupAction_Assert_ResourceCode> {
  /**
   * @generated from field: google.fhir.r4.core.FHIRDefinedTypeValueSet.Value value = 1;
   */
  value = FHIRDefinedTypeValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ResourceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResourceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FHIRDefinedTypeValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ResourceCode {
    return new TestScript_Setup_SetupAction_Assert_ResourceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ResourceCode {
    return new TestScript_Setup_SetupAction_Assert_ResourceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ResourceCode {
    return new TestScript_Setup_SetupAction_Assert_ResourceCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ResourceCode | PlainMessage<TestScript_Setup_SetupAction_Assert_ResourceCode> | undefined, b: TestScript_Setup_SetupAction_Assert_ResourceCode | PlainMessage<TestScript_Setup_SetupAction_Assert_ResourceCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ResourceCode, a, b);
  }
}

/**
 * okay | created | noContent | notModified | bad | forbidden | notFound
 * | methodNotAllowed | conflict | gone | preconditionFailed |
 * unprocessable
 *
 * @generated from message google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode
 */
export class TestScript_Setup_SetupAction_Assert_ResponseCode extends Message<TestScript_Setup_SetupAction_Assert_ResponseCode> {
  /**
   * @generated from field: google.fhir.r4.core.AssertionResponseTypesCode.Value value = 1;
   */
  value = AssertionResponseTypesCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestScript_Setup_SetupAction_Assert_ResponseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Setup.SetupAction.Assert.ResponseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AssertionResponseTypesCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Setup_SetupAction_Assert_ResponseCode {
    return new TestScript_Setup_SetupAction_Assert_ResponseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ResponseCode {
    return new TestScript_Setup_SetupAction_Assert_ResponseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Setup_SetupAction_Assert_ResponseCode {
    return new TestScript_Setup_SetupAction_Assert_ResponseCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Setup_SetupAction_Assert_ResponseCode | PlainMessage<TestScript_Setup_SetupAction_Assert_ResponseCode> | undefined, b: TestScript_Setup_SetupAction_Assert_ResponseCode | PlainMessage<TestScript_Setup_SetupAction_Assert_ResponseCode> | undefined): boolean {
    return proto3.util.equals(TestScript_Setup_SetupAction_Assert_ResponseCode, a, b);
  }
}

/**
 * A test in this script
 *
 * @generated from message google.fhir.r4.core.TestScript.Test
 */
export class TestScript_Test extends Message<TestScript_Test> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Tracking/logging name of this test
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Tracking/reporting short description of the test
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Test.TestAction action = 6;
   */
  action: TestScript_Test_TestAction[] = [];

  constructor(data?: PartialMessage<TestScript_Test>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Test";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "action", kind: "message", T: TestScript_Test_TestAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Test {
    return new TestScript_Test().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Test {
    return new TestScript_Test().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Test {
    return new TestScript_Test().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Test | PlainMessage<TestScript_Test> | undefined, b: TestScript_Test | PlainMessage<TestScript_Test> | undefined): boolean {
    return proto3.util.equals(TestScript_Test, a, b);
  }
}

/**
 * A test operation or assert to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Test.TestAction
 */
export class TestScript_Test_TestAction extends Message<TestScript_Test_TestAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The setup operation to perform
   *
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  /**
   * The setup assertion to perform
   *
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestScript_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestScript_Test_TestAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Test.TestAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestScript_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestScript_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Test_TestAction {
    return new TestScript_Test_TestAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Test_TestAction {
    return new TestScript_Test_TestAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Test_TestAction {
    return new TestScript_Test_TestAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Test_TestAction | PlainMessage<TestScript_Test_TestAction> | undefined, b: TestScript_Test_TestAction | PlainMessage<TestScript_Test_TestAction> | undefined): boolean {
    return proto3.util.equals(TestScript_Test_TestAction, a, b);
  }
}

/**
 * A series of required clean up steps
 *
 * @generated from message google.fhir.r4.core.TestScript.Teardown
 */
export class TestScript_Teardown extends Message<TestScript_Teardown> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestScript.Teardown.TeardownAction action = 4;
   */
  action: TestScript_Teardown_TeardownAction[] = [];

  constructor(data?: PartialMessage<TestScript_Teardown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Teardown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestScript_Teardown_TeardownAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Teardown {
    return new TestScript_Teardown().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Teardown {
    return new TestScript_Teardown().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Teardown {
    return new TestScript_Teardown().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Teardown | PlainMessage<TestScript_Teardown> | undefined, b: TestScript_Teardown | PlainMessage<TestScript_Teardown> | undefined): boolean {
    return proto3.util.equals(TestScript_Teardown, a, b);
  }
}

/**
 * One or more teardown operations to perform
 *
 * @generated from message google.fhir.r4.core.TestScript.Teardown.TeardownAction
 */
export class TestScript_Teardown_TeardownAction extends Message<TestScript_Teardown_TeardownAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The teardown operation to perform
   *
   * @generated from field: google.fhir.r4.core.TestScript.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestScript_Setup_SetupAction_Operation;

  constructor(data?: PartialMessage<TestScript_Teardown_TeardownAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScript.Teardown.TeardownAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestScript_Setup_SetupAction_Operation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScript_Teardown_TeardownAction {
    return new TestScript_Teardown_TeardownAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScript_Teardown_TeardownAction {
    return new TestScript_Teardown_TeardownAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScript_Teardown_TeardownAction {
    return new TestScript_Teardown_TeardownAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestScript_Teardown_TeardownAction | PlainMessage<TestScript_Teardown_TeardownAction> | undefined, b: TestScript_Teardown_TeardownAction | PlainMessage<TestScript_Teardown_TeardownAction> | undefined): boolean {
    return proto3.util.equals(TestScript_Teardown_TeardownAction, a, b);
  }
}

