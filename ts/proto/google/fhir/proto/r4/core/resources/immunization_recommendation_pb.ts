//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/immunization_recommendation.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, PositiveInt, Reference, String, Uri } from "../datatypes_pb.js";

/**
 * Auto-generated from StructureDefinition for ImmunizationRecommendation.
 * Guidance or advice relating to an immunization.
 * See http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation
 *
 * @generated from message google.fhir.r4.core.ImmunizationRecommendation
 */
export class ImmunizationRecommendation extends Message<ImmunizationRecommendation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Who this profile is for
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 11;
   */
  patient?: Reference;

  /**
   * Date recommendation(s) created
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 12;
   */
  date?: DateTime;

  /**
   * Who is responsible for protocol
   *
   * @generated from field: google.fhir.r4.core.Reference authority = 13;
   */
  authority?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.ImmunizationRecommendation.Recommendation recommendation = 14;
   */
  recommendation: ImmunizationRecommendation_Recommendation[] = [];

  constructor(data?: PartialMessage<ImmunizationRecommendation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationRecommendation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "patient", kind: "message", T: Reference },
    { no: 12, name: "date", kind: "message", T: DateTime },
    { no: 13, name: "authority", kind: "message", T: Reference },
    { no: 14, name: "recommendation", kind: "message", T: ImmunizationRecommendation_Recommendation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation {
    return new ImmunizationRecommendation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation {
    return new ImmunizationRecommendation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation {
    return new ImmunizationRecommendation().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation | PlainMessage<ImmunizationRecommendation> | undefined, b: ImmunizationRecommendation | PlainMessage<ImmunizationRecommendation> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation, a, b);
  }
}

/**
 * Vaccine administration recommendations
 *
 * @generated from message google.fhir.r4.core.ImmunizationRecommendation.Recommendation
 */
export class ImmunizationRecommendation_Recommendation extends Message<ImmunizationRecommendation_Recommendation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Vaccine  or vaccine group recommendation applies to
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept vaccine_code = 4;
   */
  vaccineCode: CodeableConcept[] = [];

  /**
   * Disease to be immunized against
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept target_disease = 5;
   */
  targetDisease?: CodeableConcept;

  /**
   * Vaccine which is contraindicated to fulfill the recommendation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept contraindicated_vaccine_code = 6;
   */
  contraindicatedVaccineCode: CodeableConcept[] = [];

  /**
   * Vaccine recommendation status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept forecast_status = 7;
   */
  forecastStatus?: CodeableConcept;

  /**
   * Vaccine administration status reason
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept forecast_reason = 8;
   */
  forecastReason: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion date_criterion = 9;
   */
  dateCriterion: ImmunizationRecommendation_Recommendation_DateCriterion[] = [];

  /**
   * Protocol details
   *
   * @generated from field: google.fhir.r4.core.String description = 10;
   */
  description?: String;

  /**
   * Name of vaccination series
   *
   * @generated from field: google.fhir.r4.core.String series = 11;
   */
  series?: String;

  /**
   * @generated from field: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX dose_number = 12;
   */
  doseNumber?: ImmunizationRecommendation_Recommendation_DoseNumberX;

  /**
   * @generated from field: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX series_doses = 13;
   */
  seriesDoses?: ImmunizationRecommendation_Recommendation_SeriesDosesX;

  /**
   * Past immunizations supporting recommendation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_immunization = 14;
   */
  supportingImmunization: Reference[] = [];

  /**
   * Patient observations supporting recommendation
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_patient_information = 15;
   */
  supportingPatientInformation: Reference[] = [];

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationRecommendation.Recommendation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "vaccine_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "target_disease", kind: "message", T: CodeableConcept },
    { no: 6, name: "contraindicated_vaccine_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "forecast_status", kind: "message", T: CodeableConcept },
    { no: 8, name: "forecast_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "date_criterion", kind: "message", T: ImmunizationRecommendation_Recommendation_DateCriterion, repeated: true },
    { no: 10, name: "description", kind: "message", T: String },
    { no: 11, name: "series", kind: "message", T: String },
    { no: 12, name: "dose_number", kind: "message", T: ImmunizationRecommendation_Recommendation_DoseNumberX },
    { no: 13, name: "series_doses", kind: "message", T: ImmunizationRecommendation_Recommendation_SeriesDosesX },
    { no: 14, name: "supporting_immunization", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "supporting_patient_information", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation {
    return new ImmunizationRecommendation_Recommendation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation {
    return new ImmunizationRecommendation_Recommendation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation {
    return new ImmunizationRecommendation_Recommendation().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation | PlainMessage<ImmunizationRecommendation_Recommendation> | undefined, b: ImmunizationRecommendation_Recommendation | PlainMessage<ImmunizationRecommendation_Recommendation> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation, a, b);
  }
}

/**
 * Dates governing proposed immunization
 *
 * @generated from message google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion
 */
export class ImmunizationRecommendation_Recommendation_DateCriterion extends Message<ImmunizationRecommendation_Recommendation_DateCriterion> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of date
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * Recommended date
   *
   * @generated from field: google.fhir.r4.core.DateTime value = 5;
   */
  value?: DateTime;

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation_DateCriterion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation_DateCriterion {
    return new ImmunizationRecommendation_Recommendation_DateCriterion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_DateCriterion {
    return new ImmunizationRecommendation_Recommendation_DateCriterion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_DateCriterion {
    return new ImmunizationRecommendation_Recommendation_DateCriterion().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation_DateCriterion | PlainMessage<ImmunizationRecommendation_Recommendation_DateCriterion> | undefined, b: ImmunizationRecommendation_Recommendation_DateCriterion | PlainMessage<ImmunizationRecommendation_Recommendation_DateCriterion> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation_DateCriterion, a, b);
  }
}

/**
 * Recommended dose number within series
 *
 * @generated from message google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX
 */
export class ImmunizationRecommendation_Recommendation_DoseNumberX extends Message<ImmunizationRecommendation_Recommendation_DoseNumberX> {
  /**
   * @generated from oneof google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation_DoseNumberX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation_DoseNumberX {
    return new ImmunizationRecommendation_Recommendation_DoseNumberX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_DoseNumberX {
    return new ImmunizationRecommendation_Recommendation_DoseNumberX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_DoseNumberX {
    return new ImmunizationRecommendation_Recommendation_DoseNumberX().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation_DoseNumberX | PlainMessage<ImmunizationRecommendation_Recommendation_DoseNumberX> | undefined, b: ImmunizationRecommendation_Recommendation_DoseNumberX | PlainMessage<ImmunizationRecommendation_Recommendation_DoseNumberX> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation_DoseNumberX, a, b);
  }
}

/**
 * Recommended number of doses for immunity
 *
 * @generated from message google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX
 */
export class ImmunizationRecommendation_Recommendation_SeriesDosesX extends Message<ImmunizationRecommendation_Recommendation_SeriesDosesX> {
  /**
   * @generated from oneof google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ImmunizationRecommendation_Recommendation_SeriesDosesX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationRecommendation_Recommendation_SeriesDosesX {
    return new ImmunizationRecommendation_Recommendation_SeriesDosesX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_SeriesDosesX {
    return new ImmunizationRecommendation_Recommendation_SeriesDosesX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationRecommendation_Recommendation_SeriesDosesX {
    return new ImmunizationRecommendation_Recommendation_SeriesDosesX().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationRecommendation_Recommendation_SeriesDosesX | PlainMessage<ImmunizationRecommendation_Recommendation_SeriesDosesX> | undefined, b: ImmunizationRecommendation_Recommendation_SeriesDosesX | PlainMessage<ImmunizationRecommendation_Recommendation_SeriesDosesX> | undefined): boolean {
    return proto3.util.equals(ImmunizationRecommendation_Recommendation_SeriesDosesX, a, b);
  }
}

