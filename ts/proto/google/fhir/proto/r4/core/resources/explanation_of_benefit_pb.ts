//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/explanation_of_benefit.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Attachment, Boolean, Code, CodeableConcept, Coding, Date, DateTime, Decimal, Extension, Id, Identifier, Meta, Money, Narrative, Period, PositiveInt, Quantity, Reference, SimpleQuantity, String, UnsignedInt, Uri } from "../datatypes_pb.js";
import { ClaimProcessingCode_Value, ExplanationOfBenefitStatusCode_Value, NoteTypeCode_Value, UseCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for ExplanationOfBenefit.
 * Explanation of Benefit resource.
 * See http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit
 */
export class ExplanationOfBenefit extends Message<ExplanationOfBenefit> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for the resource
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.StatusCode status = 11;
   */
  status?: ExplanationOfBenefit_StatusCode;

  /**
   * Category or discipline
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * More granular claim type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept sub_type = 13;
   */
  subType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.UseCode use = 14;
   */
  use?: ExplanationOfBenefit_UseCode;

  /**
   * The recipient of the products and services
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 15;
   */
  patient?: Reference;

  /**
   * Relevant time frame for the claim
   *
   * @generated from field: google.fhir.r4.core.Period billable_period = 16;
   */
  billablePeriod?: Period;

  /**
   * Response creation date
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 17;
   */
  created?: DateTime;

  /**
   * Author of the claim
   *
   * @generated from field: google.fhir.r4.core.Reference enterer = 18;
   */
  enterer?: Reference;

  /**
   * Party responsible for reimbursement
   *
   * @generated from field: google.fhir.r4.core.Reference insurer = 19;
   */
  insurer?: Reference;

  /**
   * Party responsible for the claim
   *
   * @generated from field: google.fhir.r4.core.Reference provider = 20;
   */
  provider?: Reference;

  /**
   * Desired processing urgency
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 21;
   */
  priority?: CodeableConcept;

  /**
   * For whom to reserve funds
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept funds_reserve_requested = 22;
   */
  fundsReserveRequested?: CodeableConcept;

  /**
   * Funds reserved status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept funds_reserve = 23;
   */
  fundsReserve?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.RelatedClaim related = 24;
   */
  related: ExplanationOfBenefit_RelatedClaim[] = [];

  /**
   * Prescription authorizing services or products
   *
   * @generated from field: google.fhir.r4.core.Reference prescription = 25;
   */
  prescription?: Reference;

  /**
   * Original prescription if superceded by fulfiller
   *
   * @generated from field: google.fhir.r4.core.Reference original_prescription = 26;
   */
  originalPrescription?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Payee payee = 27;
   */
  payee?: ExplanationOfBenefit_Payee;

  /**
   * Treatment Referral
   *
   * @generated from field: google.fhir.r4.core.Reference referral = 28;
   */
  referral?: Reference;

  /**
   * Servicing Facility
   *
   * @generated from field: google.fhir.r4.core.Reference facility = 29;
   */
  facility?: Reference;

  /**
   * Claim reference
   *
   * @generated from field: google.fhir.r4.core.Reference claim = 30;
   */
  claim?: Reference;

  /**
   * Claim response reference
   *
   * @generated from field: google.fhir.r4.core.Reference claim_response = 31;
   */
  claimResponse?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.OutcomeCode outcome = 32;
   */
  outcome?: ExplanationOfBenefit_OutcomeCode;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.r4.core.String disposition = 33;
   */
  disposition?: String;

  /**
   * Preauthorization reference
   *
   * @generated from field: repeated google.fhir.r4.core.String pre_auth_ref = 34;
   */
  preAuthRef: String[] = [];

  /**
   * Preauthorization in-effect period
   *
   * @generated from field: repeated google.fhir.r4.core.Period pre_auth_ref_period = 35;
   */
  preAuthRefPeriod: Period[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.CareTeam care_team = 36;
   */
  careTeam: ExplanationOfBenefit_CareTeam[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation supporting_info = 37;
   */
  supportingInfo: ExplanationOfBenefit_SupportingInformation[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Diagnosis diagnosis = 38;
   */
  diagnosis: ExplanationOfBenefit_Diagnosis[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Procedure procedure = 39;
   */
  procedure: ExplanationOfBenefit_Procedure[] = [];

  /**
   * Precedence (primary, secondary, etc.)
   *
   * @generated from field: google.fhir.r4.core.PositiveInt precedence = 40;
   */
  precedence?: PositiveInt;

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Insurance insurance = 41;
   */
  insurance: ExplanationOfBenefit_Insurance[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Accident accident = 42;
   */
  accident?: ExplanationOfBenefit_Accident;

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item item = 43;
   */
  item: ExplanationOfBenefit_Item[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.AddedItem add_item = 44;
   */
  addItem: ExplanationOfBenefit_AddedItem[] = [];

  /**
   * Header-level adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 45;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Total total = 46;
   */
  total: ExplanationOfBenefit_Total[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Payment payment = 47;
   */
  payment?: ExplanationOfBenefit_Payment;

  /**
   * Printed form identifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept form_code = 48;
   */
  formCode?: CodeableConcept;

  /**
   * Printed reference or actual form
   *
   * @generated from field: google.fhir.r4.core.Attachment form = 49;
   */
  form?: Attachment;

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Note process_note = 50;
   */
  processNote: ExplanationOfBenefit_Note[] = [];

  /**
   * When the benefits are applicable
   *
   * @generated from field: google.fhir.r4.core.Period benefit_period = 51;
   */
  benefitPeriod?: Period;

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance benefit_balance = 52;
   */
  benefitBalance: ExplanationOfBenefit_BenefitBalance[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: ExplanationOfBenefit_StatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept },
    { no: 13, name: "sub_type", kind: "message", T: CodeableConcept },
    { no: 14, name: "use", kind: "message", T: ExplanationOfBenefit_UseCode },
    { no: 15, name: "patient", kind: "message", T: Reference },
    { no: 16, name: "billable_period", kind: "message", T: Period },
    { no: 17, name: "created", kind: "message", T: DateTime },
    { no: 18, name: "enterer", kind: "message", T: Reference },
    { no: 19, name: "insurer", kind: "message", T: Reference },
    { no: 20, name: "provider", kind: "message", T: Reference },
    { no: 21, name: "priority", kind: "message", T: CodeableConcept },
    { no: 22, name: "funds_reserve_requested", kind: "message", T: CodeableConcept },
    { no: 23, name: "funds_reserve", kind: "message", T: CodeableConcept },
    { no: 24, name: "related", kind: "message", T: ExplanationOfBenefit_RelatedClaim, repeated: true },
    { no: 25, name: "prescription", kind: "message", T: Reference },
    { no: 26, name: "original_prescription", kind: "message", T: Reference },
    { no: 27, name: "payee", kind: "message", T: ExplanationOfBenefit_Payee },
    { no: 28, name: "referral", kind: "message", T: Reference },
    { no: 29, name: "facility", kind: "message", T: Reference },
    { no: 30, name: "claim", kind: "message", T: Reference },
    { no: 31, name: "claim_response", kind: "message", T: Reference },
    { no: 32, name: "outcome", kind: "message", T: ExplanationOfBenefit_OutcomeCode },
    { no: 33, name: "disposition", kind: "message", T: String },
    { no: 34, name: "pre_auth_ref", kind: "message", T: String, repeated: true },
    { no: 35, name: "pre_auth_ref_period", kind: "message", T: Period, repeated: true },
    { no: 36, name: "care_team", kind: "message", T: ExplanationOfBenefit_CareTeam, repeated: true },
    { no: 37, name: "supporting_info", kind: "message", T: ExplanationOfBenefit_SupportingInformation, repeated: true },
    { no: 38, name: "diagnosis", kind: "message", T: ExplanationOfBenefit_Diagnosis, repeated: true },
    { no: 39, name: "procedure", kind: "message", T: ExplanationOfBenefit_Procedure, repeated: true },
    { no: 40, name: "precedence", kind: "message", T: PositiveInt },
    { no: 41, name: "insurance", kind: "message", T: ExplanationOfBenefit_Insurance, repeated: true },
    { no: 42, name: "accident", kind: "message", T: ExplanationOfBenefit_Accident },
    { no: 43, name: "item", kind: "message", T: ExplanationOfBenefit_Item, repeated: true },
    { no: 44, name: "add_item", kind: "message", T: ExplanationOfBenefit_AddedItem, repeated: true },
    { no: 45, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 46, name: "total", kind: "message", T: ExplanationOfBenefit_Total, repeated: true },
    { no: 47, name: "payment", kind: "message", T: ExplanationOfBenefit_Payment },
    { no: 48, name: "form_code", kind: "message", T: CodeableConcept },
    { no: 49, name: "form", kind: "message", T: Attachment },
    { no: 50, name: "process_note", kind: "message", T: ExplanationOfBenefit_Note, repeated: true },
    { no: 51, name: "benefit_period", kind: "message", T: Period },
    { no: 52, name: "benefit_balance", kind: "message", T: ExplanationOfBenefit_BenefitBalance, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit {
    return new ExplanationOfBenefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit {
    return new ExplanationOfBenefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit {
    return new ExplanationOfBenefit().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit | PlainMessage<ExplanationOfBenefit> | undefined, b: ExplanationOfBenefit | PlainMessage<ExplanationOfBenefit> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit, a, b);
  }
}

/**
 * active | cancelled | draft | entered-in-error
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.StatusCode
 */
export class ExplanationOfBenefit_StatusCode extends Message<ExplanationOfBenefit_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefitStatusCode.Value value = 1;
   */
  value = ExplanationOfBenefitStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ExplanationOfBenefitStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_StatusCode {
    return new ExplanationOfBenefit_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_StatusCode {
    return new ExplanationOfBenefit_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_StatusCode {
    return new ExplanationOfBenefit_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_StatusCode | PlainMessage<ExplanationOfBenefit_StatusCode> | undefined, b: ExplanationOfBenefit_StatusCode | PlainMessage<ExplanationOfBenefit_StatusCode> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_StatusCode, a, b);
  }
}

/**
 * claim | preauthorization | predetermination
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.UseCode
 */
export class ExplanationOfBenefit_UseCode extends Message<ExplanationOfBenefit_UseCode> {
  /**
   * @generated from field: google.fhir.r4.core.UseCode.Value value = 1;
   */
  value = UseCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(UseCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_UseCode {
    return new ExplanationOfBenefit_UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_UseCode {
    return new ExplanationOfBenefit_UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_UseCode {
    return new ExplanationOfBenefit_UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_UseCode | PlainMessage<ExplanationOfBenefit_UseCode> | undefined, b: ExplanationOfBenefit_UseCode | PlainMessage<ExplanationOfBenefit_UseCode> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_UseCode, a, b);
  }
}

/**
 * Prior or corollary claims
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.RelatedClaim
 */
export class ExplanationOfBenefit_RelatedClaim extends Message<ExplanationOfBenefit_RelatedClaim> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the related claim
   *
   * @generated from field: google.fhir.r4.core.Reference claim = 4;
   */
  claim?: Reference;

  /**
   * How the reference claim is related
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept relationship = 5;
   */
  relationship?: CodeableConcept;

  /**
   * File or case reference
   *
   * @generated from field: google.fhir.r4.core.Identifier reference = 6;
   */
  reference?: Identifier;

  constructor(data?: PartialMessage<ExplanationOfBenefit_RelatedClaim>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.RelatedClaim";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "claim", kind: "message", T: Reference },
    { no: 5, name: "relationship", kind: "message", T: CodeableConcept },
    { no: 6, name: "reference", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_RelatedClaim {
    return new ExplanationOfBenefit_RelatedClaim().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_RelatedClaim {
    return new ExplanationOfBenefit_RelatedClaim().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_RelatedClaim {
    return new ExplanationOfBenefit_RelatedClaim().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_RelatedClaim | PlainMessage<ExplanationOfBenefit_RelatedClaim> | undefined, b: ExplanationOfBenefit_RelatedClaim | PlainMessage<ExplanationOfBenefit_RelatedClaim> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_RelatedClaim, a, b);
  }
}

/**
 * Recipient of benefits payable
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Payee
 */
export class ExplanationOfBenefit_Payee extends Message<ExplanationOfBenefit_Payee> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Category of recipient
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Recipient reference
   *
   * @generated from field: google.fhir.r4.core.Reference party = 5;
   */
  party?: Reference;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Payee>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Payee";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "party", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Payee {
    return new ExplanationOfBenefit_Payee().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payee {
    return new ExplanationOfBenefit_Payee().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payee {
    return new ExplanationOfBenefit_Payee().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Payee | PlainMessage<ExplanationOfBenefit_Payee> | undefined, b: ExplanationOfBenefit_Payee | PlainMessage<ExplanationOfBenefit_Payee> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Payee, a, b);
  }
}

/**
 * queued | complete | error | partial
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.OutcomeCode
 */
export class ExplanationOfBenefit_OutcomeCode extends Message<ExplanationOfBenefit_OutcomeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ClaimProcessingCode.Value value = 1;
   */
  value = ClaimProcessingCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_OutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.OutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ClaimProcessingCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_OutcomeCode {
    return new ExplanationOfBenefit_OutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_OutcomeCode {
    return new ExplanationOfBenefit_OutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_OutcomeCode {
    return new ExplanationOfBenefit_OutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_OutcomeCode | PlainMessage<ExplanationOfBenefit_OutcomeCode> | undefined, b: ExplanationOfBenefit_OutcomeCode | PlainMessage<ExplanationOfBenefit_OutcomeCode> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_OutcomeCode, a, b);
  }
}

/**
 * Care Team members
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.CareTeam
 */
export class ExplanationOfBenefit_CareTeam extends Message<ExplanationOfBenefit_CareTeam> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Order of care team
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Practitioner or organization
   *
   * @generated from field: google.fhir.r4.core.Reference provider = 5;
   */
  provider?: Reference;

  /**
   * Indicator of the lead practitioner
   *
   * @generated from field: google.fhir.r4.core.Boolean responsible = 6;
   */
  responsible?: Boolean;

  /**
   * Function within the team
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept role = 7;
   */
  role?: CodeableConcept;

  /**
   * Practitioner credential or specialization
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept qualification = 8;
   */
  qualification?: CodeableConcept;

  constructor(data?: PartialMessage<ExplanationOfBenefit_CareTeam>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.CareTeam";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "provider", kind: "message", T: Reference },
    { no: 6, name: "responsible", kind: "message", T: Boolean },
    { no: 7, name: "role", kind: "message", T: CodeableConcept },
    { no: 8, name: "qualification", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_CareTeam {
    return new ExplanationOfBenefit_CareTeam().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_CareTeam {
    return new ExplanationOfBenefit_CareTeam().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_CareTeam {
    return new ExplanationOfBenefit_CareTeam().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_CareTeam | PlainMessage<ExplanationOfBenefit_CareTeam> | undefined, b: ExplanationOfBenefit_CareTeam | PlainMessage<ExplanationOfBenefit_CareTeam> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_CareTeam, a, b);
  }
}

/**
 * Supporting information
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation
 */
export class ExplanationOfBenefit_SupportingInformation extends Message<ExplanationOfBenefit_SupportingInformation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Information instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Classification of the supplied information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 5;
   */
  category?: CodeableConcept;

  /**
   * Type of information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 6;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.TimingX timing = 7;
   */
  timing?: ExplanationOfBenefit_SupportingInformation_TimingX;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.ValueX value = 8;
   */
  value?: ExplanationOfBenefit_SupportingInformation_ValueX;

  /**
   * Explanation for the information
   *
   * @generated from field: google.fhir.r4.core.Coding reason = 9;
   */
  reason?: Coding;

  constructor(data?: PartialMessage<ExplanationOfBenefit_SupportingInformation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "category", kind: "message", T: CodeableConcept },
    { no: 6, name: "code", kind: "message", T: CodeableConcept },
    { no: 7, name: "timing", kind: "message", T: ExplanationOfBenefit_SupportingInformation_TimingX },
    { no: 8, name: "value", kind: "message", T: ExplanationOfBenefit_SupportingInformation_ValueX },
    { no: 9, name: "reason", kind: "message", T: Coding },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_SupportingInformation {
    return new ExplanationOfBenefit_SupportingInformation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation {
    return new ExplanationOfBenefit_SupportingInformation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation {
    return new ExplanationOfBenefit_SupportingInformation().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_SupportingInformation | PlainMessage<ExplanationOfBenefit_SupportingInformation> | undefined, b: ExplanationOfBenefit_SupportingInformation | PlainMessage<ExplanationOfBenefit_SupportingInformation> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_SupportingInformation, a, b);
  }
}

/**
 * When it occurred
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.TimingX
 */
export class ExplanationOfBenefit_SupportingInformation_TimingX extends Message<ExplanationOfBenefit_SupportingInformation_TimingX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.TimingX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_SupportingInformation_TimingX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.TimingX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_SupportingInformation_TimingX {
    return new ExplanationOfBenefit_SupportingInformation_TimingX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_TimingX {
    return new ExplanationOfBenefit_SupportingInformation_TimingX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_TimingX {
    return new ExplanationOfBenefit_SupportingInformation_TimingX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_SupportingInformation_TimingX | PlainMessage<ExplanationOfBenefit_SupportingInformation_TimingX> | undefined, b: ExplanationOfBenefit_SupportingInformation_TimingX | PlainMessage<ExplanationOfBenefit_SupportingInformation_TimingX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_SupportingInformation_TimingX, a, b);
  }
}

/**
 * Data to be provided
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.ValueX
 */
export class ExplanationOfBenefit_SupportingInformation_ValueX extends Message<ExplanationOfBenefit_SupportingInformation_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 1;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 3;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 4;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 5;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_SupportingInformation_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.SupportingInformation.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 3, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 4, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 5, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_SupportingInformation_ValueX {
    return new ExplanationOfBenefit_SupportingInformation_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_ValueX {
    return new ExplanationOfBenefit_SupportingInformation_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_SupportingInformation_ValueX {
    return new ExplanationOfBenefit_SupportingInformation_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_SupportingInformation_ValueX | PlainMessage<ExplanationOfBenefit_SupportingInformation_ValueX> | undefined, b: ExplanationOfBenefit_SupportingInformation_ValueX | PlainMessage<ExplanationOfBenefit_SupportingInformation_ValueX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_SupportingInformation_ValueX, a, b);
  }
}

/**
 * Pertinent diagnosis information
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Diagnosis
 */
export class ExplanationOfBenefit_Diagnosis extends Message<ExplanationOfBenefit_Diagnosis> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Diagnosis instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Diagnosis.DiagnosisX diagnosis = 5;
   */
  diagnosis?: ExplanationOfBenefit_Diagnosis_DiagnosisX;

  /**
   * Timing or nature of the diagnosis
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 6;
   */
  type: CodeableConcept[] = [];

  /**
   * Present on admission
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept on_admission = 7;
   */
  onAdmission?: CodeableConcept;

  /**
   * Package billing code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept package_code = 8;
   */
  packageCode?: CodeableConcept;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "diagnosis", kind: "message", T: ExplanationOfBenefit_Diagnosis_DiagnosisX },
    { no: 6, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "on_admission", kind: "message", T: CodeableConcept },
    { no: 8, name: "package_code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Diagnosis {
    return new ExplanationOfBenefit_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis {
    return new ExplanationOfBenefit_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis {
    return new ExplanationOfBenefit_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Diagnosis | PlainMessage<ExplanationOfBenefit_Diagnosis> | undefined, b: ExplanationOfBenefit_Diagnosis | PlainMessage<ExplanationOfBenefit_Diagnosis> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Diagnosis, a, b);
  }
}

/**
 * Nature of illness or problem
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Diagnosis.DiagnosisX
 */
export class ExplanationOfBenefit_Diagnosis_DiagnosisX extends Message<ExplanationOfBenefit_Diagnosis_DiagnosisX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.Diagnosis.DiagnosisX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Diagnosis_DiagnosisX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Diagnosis.DiagnosisX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Diagnosis_DiagnosisX {
    return new ExplanationOfBenefit_Diagnosis_DiagnosisX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis_DiagnosisX {
    return new ExplanationOfBenefit_Diagnosis_DiagnosisX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Diagnosis_DiagnosisX {
    return new ExplanationOfBenefit_Diagnosis_DiagnosisX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Diagnosis_DiagnosisX | PlainMessage<ExplanationOfBenefit_Diagnosis_DiagnosisX> | undefined, b: ExplanationOfBenefit_Diagnosis_DiagnosisX | PlainMessage<ExplanationOfBenefit_Diagnosis_DiagnosisX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Diagnosis_DiagnosisX, a, b);
  }
}

/**
 * Clinical procedures performed
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Procedure
 */
export class ExplanationOfBenefit_Procedure extends Message<ExplanationOfBenefit_Procedure> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Procedure instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Category of Procedure
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 5;
   */
  type: CodeableConcept[] = [];

  /**
   * When the procedure was performed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 6;
   */
  date?: DateTime;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Procedure.ProcedureX procedure = 7;
   */
  procedure?: ExplanationOfBenefit_Procedure_ProcedureX;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 8;
   */
  udi: Reference[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Procedure>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Procedure";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "date", kind: "message", T: DateTime },
    { no: 7, name: "procedure", kind: "message", T: ExplanationOfBenefit_Procedure_ProcedureX },
    { no: 8, name: "udi", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Procedure {
    return new ExplanationOfBenefit_Procedure().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure {
    return new ExplanationOfBenefit_Procedure().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure {
    return new ExplanationOfBenefit_Procedure().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Procedure | PlainMessage<ExplanationOfBenefit_Procedure> | undefined, b: ExplanationOfBenefit_Procedure | PlainMessage<ExplanationOfBenefit_Procedure> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Procedure, a, b);
  }
}

/**
 * Specific clinical procedure
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Procedure.ProcedureX
 */
export class ExplanationOfBenefit_Procedure_ProcedureX extends Message<ExplanationOfBenefit_Procedure_ProcedureX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.Procedure.ProcedureX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Procedure_ProcedureX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Procedure.ProcedureX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Procedure_ProcedureX {
    return new ExplanationOfBenefit_Procedure_ProcedureX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure_ProcedureX {
    return new ExplanationOfBenefit_Procedure_ProcedureX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Procedure_ProcedureX {
    return new ExplanationOfBenefit_Procedure_ProcedureX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Procedure_ProcedureX | PlainMessage<ExplanationOfBenefit_Procedure_ProcedureX> | undefined, b: ExplanationOfBenefit_Procedure_ProcedureX | PlainMessage<ExplanationOfBenefit_Procedure_ProcedureX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Procedure_ProcedureX, a, b);
  }
}

/**
 * Patient insurance information
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Insurance
 */
export class ExplanationOfBenefit_Insurance extends Message<ExplanationOfBenefit_Insurance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Coverage to be used for adjudication
   *
   * @generated from field: google.fhir.r4.core.Boolean focal = 4;
   */
  focal?: Boolean;

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.r4.core.Reference coverage = 5;
   */
  coverage?: Reference;

  /**
   * Prior authorization reference number
   *
   * @generated from field: repeated google.fhir.r4.core.String pre_auth_ref = 6;
   */
  preAuthRef: String[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Insurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Insurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "focal", kind: "message", T: Boolean },
    { no: 5, name: "coverage", kind: "message", T: Reference },
    { no: 6, name: "pre_auth_ref", kind: "message", T: String, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Insurance {
    return new ExplanationOfBenefit_Insurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Insurance {
    return new ExplanationOfBenefit_Insurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Insurance {
    return new ExplanationOfBenefit_Insurance().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Insurance | PlainMessage<ExplanationOfBenefit_Insurance> | undefined, b: ExplanationOfBenefit_Insurance | PlainMessage<ExplanationOfBenefit_Insurance> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Insurance, a, b);
  }
}

/**
 * Details of the event
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Accident
 */
export class ExplanationOfBenefit_Accident extends Message<ExplanationOfBenefit_Accident> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When the incident occurred
   *
   * @generated from field: google.fhir.r4.core.Date date = 4;
   */
  date?: Date;

  /**
   * The nature of the accident
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 5;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Accident.LocationX location = 6;
   */
  location?: ExplanationOfBenefit_Accident_LocationX;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Accident>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Accident";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: Date },
    { no: 5, name: "type", kind: "message", T: CodeableConcept },
    { no: 6, name: "location", kind: "message", T: ExplanationOfBenefit_Accident_LocationX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Accident {
    return new ExplanationOfBenefit_Accident().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident {
    return new ExplanationOfBenefit_Accident().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident {
    return new ExplanationOfBenefit_Accident().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Accident | PlainMessage<ExplanationOfBenefit_Accident> | undefined, b: ExplanationOfBenefit_Accident | PlainMessage<ExplanationOfBenefit_Accident> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Accident, a, b);
  }
}

/**
 * Where the event occurred
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Accident.LocationX
 */
export class ExplanationOfBenefit_Accident_LocationX extends Message<ExplanationOfBenefit_Accident_LocationX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.Accident.LocationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 1;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Accident_LocationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Accident.LocationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Accident_LocationX {
    return new ExplanationOfBenefit_Accident_LocationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident_LocationX {
    return new ExplanationOfBenefit_Accident_LocationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Accident_LocationX {
    return new ExplanationOfBenefit_Accident_LocationX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Accident_LocationX | PlainMessage<ExplanationOfBenefit_Accident_LocationX> | undefined, b: ExplanationOfBenefit_Accident_LocationX | PlainMessage<ExplanationOfBenefit_Accident_LocationX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Accident_LocationX, a, b);
  }
}

/**
 * Product or service provided
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Item
 */
export class ExplanationOfBenefit_Item extends Message<ExplanationOfBenefit_Item> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Item instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Applicable care team members
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt care_team_sequence = 5;
   */
  careTeamSequence: PositiveInt[] = [];

  /**
   * Applicable diagnoses
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt diagnosis_sequence = 6;
   */
  diagnosisSequence: PositiveInt[] = [];

  /**
   * Applicable procedures
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt procedure_sequence = 7;
   */
  procedureSequence: PositiveInt[] = [];

  /**
   * Applicable exception and supporting information
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt information_sequence = 8;
   */
  informationSequence: PositiveInt[] = [];

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept revenue = 9;
   */
  revenue?: CodeableConcept;

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 10;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 11;
   */
  productOrService?: CodeableConcept;

  /**
   * Product or service billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 12;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 13;
   */
  programCode: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Item.ServicedX serviced = 14;
   */
  serviced?: ExplanationOfBenefit_Item_ServicedX;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Item.LocationX location = 15;
   */
  location?: ExplanationOfBenefit_Item_LocationX;

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 16;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 17;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 18;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 19;
   */
  net?: Money;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 20;
   */
  udi: Reference[] = [];

  /**
   * Anatomical location
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 21;
   */
  bodySite?: CodeableConcept;

  /**
   * Anatomical sub-location
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept sub_site = 22;
   */
  subSite: CodeableConcept[] = [];

  /**
   * Encounters related to this billed item
   *
   * @generated from field: repeated google.fhir.r4.core.Reference encounter = 23;
   */
  encounter: Reference[] = [];

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 24;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 25;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Detail detail = 26;
   */
  detail: ExplanationOfBenefit_Item_Detail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Item";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "care_team_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "diagnosis_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 7, name: "procedure_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 8, name: "information_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 9, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 10, name: "category", kind: "message", T: CodeableConcept },
    { no: 11, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 12, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "serviced", kind: "message", T: ExplanationOfBenefit_Item_ServicedX },
    { no: 15, name: "location", kind: "message", T: ExplanationOfBenefit_Item_LocationX },
    { no: 16, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 17, name: "unit_price", kind: "message", T: Money },
    { no: 18, name: "factor", kind: "message", T: Decimal },
    { no: 19, name: "net", kind: "message", T: Money },
    { no: 20, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 22, name: "sub_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "encounter", kind: "message", T: Reference, repeated: true },
    { no: 24, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 25, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 26, name: "detail", kind: "message", T: ExplanationOfBenefit_Item_Detail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item {
    return new ExplanationOfBenefit_Item().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item {
    return new ExplanationOfBenefit_Item().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item {
    return new ExplanationOfBenefit_Item().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item | PlainMessage<ExplanationOfBenefit_Item> | undefined, b: ExplanationOfBenefit_Item | PlainMessage<ExplanationOfBenefit_Item> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item, a, b);
  }
}

/**
 * Date or dates of service or product delivery
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Item.ServicedX
 */
export class ExplanationOfBenefit_Item_ServicedX extends Message<ExplanationOfBenefit_Item_ServicedX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.Item.ServicedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_ServicedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Item.ServicedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_ServicedX {
    return new ExplanationOfBenefit_Item_ServicedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_ServicedX {
    return new ExplanationOfBenefit_Item_ServicedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_ServicedX {
    return new ExplanationOfBenefit_Item_ServicedX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_ServicedX | PlainMessage<ExplanationOfBenefit_Item_ServicedX> | undefined, b: ExplanationOfBenefit_Item_ServicedX | PlainMessage<ExplanationOfBenefit_Item_ServicedX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_ServicedX, a, b);
  }
}

/**
 * Place of service or where product was supplied
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Item.LocationX
 */
export class ExplanationOfBenefit_Item_LocationX extends Message<ExplanationOfBenefit_Item_LocationX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.Item.LocationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 2;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_LocationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Item.LocationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_LocationX {
    return new ExplanationOfBenefit_Item_LocationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_LocationX {
    return new ExplanationOfBenefit_Item_LocationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_LocationX {
    return new ExplanationOfBenefit_Item_LocationX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_LocationX | PlainMessage<ExplanationOfBenefit_Item_LocationX> | undefined, b: ExplanationOfBenefit_Item_LocationX | PlainMessage<ExplanationOfBenefit_Item_LocationX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_LocationX, a, b);
  }
}

/**
 * Adjudication details
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication
 */
export class ExplanationOfBenefit_Item_Adjudication extends Message<ExplanationOfBenefit_Item_Adjudication> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of adjudication information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Explanation of adjudication outcome
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept reason = 5;
   */
  reason?: CodeableConcept;

  /**
   * Monetary amount
   *
   * @generated from field: google.fhir.r4.core.Money amount = 6;
   */
  amount?: Money;

  /**
   * Non-monitary value
   *
   * @generated from field: google.fhir.r4.core.Decimal value = 7;
   */
  value?: Decimal;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Adjudication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "reason", kind: "message", T: CodeableConcept },
    { no: 6, name: "amount", kind: "message", T: Money },
    { no: 7, name: "value", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Adjudication {
    return new ExplanationOfBenefit_Item_Adjudication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Adjudication {
    return new ExplanationOfBenefit_Item_Adjudication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Adjudication {
    return new ExplanationOfBenefit_Item_Adjudication().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Adjudication | PlainMessage<ExplanationOfBenefit_Item_Adjudication> | undefined, b: ExplanationOfBenefit_Item_Adjudication | PlainMessage<ExplanationOfBenefit_Item_Adjudication> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Adjudication, a, b);
  }
}

/**
 * Additional items
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Item.Detail
 */
export class ExplanationOfBenefit_Item_Detail extends Message<ExplanationOfBenefit_Item_Detail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Product or service provided
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 7;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 9;
   */
  programCode: CodeableConcept[] = [];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 10;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 11;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 12;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 13;
   */
  net?: Money;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 14;
   */
  udi: Reference[] = [];

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 15;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Detail level adjudication details
   *
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 16;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Detail.SubDetail sub_detail = 17;
   */
  subDetail: ExplanationOfBenefit_Item_Detail_SubDetail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Item.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 6, name: "category", kind: "message", T: CodeableConcept },
    { no: 7, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 8, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 11, name: "unit_price", kind: "message", T: Money },
    { no: 12, name: "factor", kind: "message", T: Decimal },
    { no: 13, name: "net", kind: "message", T: Money },
    { no: 14, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 16, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 17, name: "sub_detail", kind: "message", T: ExplanationOfBenefit_Item_Detail_SubDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Detail {
    return new ExplanationOfBenefit_Item_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail {
    return new ExplanationOfBenefit_Item_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail {
    return new ExplanationOfBenefit_Item_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Detail | PlainMessage<ExplanationOfBenefit_Item_Detail> | undefined, b: ExplanationOfBenefit_Item_Detail | PlainMessage<ExplanationOfBenefit_Item_Detail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Detail, a, b);
  }
}

/**
 * Additional items
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Item.Detail.SubDetail
 */
export class ExplanationOfBenefit_Item_Detail_SubDetail extends Message<ExplanationOfBenefit_Item_Detail_SubDetail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Product or service provided
   *
   * @generated from field: google.fhir.r4.core.PositiveInt sequence = 4;
   */
  sequence?: PositiveInt;

  /**
   * Revenue or cost center code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept revenue = 5;
   */
  revenue?: CodeableConcept;

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 6;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 7;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 8;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 9;
   */
  programCode: CodeableConcept[] = [];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 10;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 11;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 12;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 13;
   */
  net?: Money;

  /**
   * Unique device identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Reference udi = 14;
   */
  udi: Reference[] = [];

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 15;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Subdetail level adjudication details
   *
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 16;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Item_Detail_SubDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Item.Detail.SubDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "sequence", kind: "message", T: PositiveInt },
    { no: 5, name: "revenue", kind: "message", T: CodeableConcept },
    { no: 6, name: "category", kind: "message", T: CodeableConcept },
    { no: 7, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 8, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 11, name: "unit_price", kind: "message", T: Money },
    { no: 12, name: "factor", kind: "message", T: Decimal },
    { no: 13, name: "net", kind: "message", T: Money },
    { no: 14, name: "udi", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 16, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Item_Detail_SubDetail {
    return new ExplanationOfBenefit_Item_Detail_SubDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail_SubDetail {
    return new ExplanationOfBenefit_Item_Detail_SubDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Item_Detail_SubDetail {
    return new ExplanationOfBenefit_Item_Detail_SubDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Item_Detail_SubDetail | PlainMessage<ExplanationOfBenefit_Item_Detail_SubDetail> | undefined, b: ExplanationOfBenefit_Item_Detail_SubDetail | PlainMessage<ExplanationOfBenefit_Item_Detail_SubDetail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Item_Detail_SubDetail, a, b);
  }
}

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.AddedItem
 */
export class ExplanationOfBenefit_AddedItem extends Message<ExplanationOfBenefit_AddedItem> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Item sequence number
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt item_sequence = 4;
   */
  itemSequence: PositiveInt[] = [];

  /**
   * Detail sequence number
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt detail_sequence = 5;
   */
  detailSequence: PositiveInt[] = [];

  /**
   * Subdetail sequence number
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt sub_detail_sequence = 6;
   */
  subDetailSequence: PositiveInt[] = [];

  /**
   * Authorized providers
   *
   * @generated from field: repeated google.fhir.r4.core.Reference provider = 7;
   */
  provider: Reference[] = [];

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 8;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 9;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Program the product or service is provided under
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_code = 10;
   */
  programCode: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.AddedItem.ServicedX serviced = 11;
   */
  serviced?: ExplanationOfBenefit_AddedItem_ServicedX;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.AddedItem.LocationX location = 12;
   */
  location?: ExplanationOfBenefit_AddedItem_LocationX;

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 13;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 14;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 15;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 16;
   */
  net?: Money;

  /**
   * Anatomical location
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 17;
   */
  bodySite?: CodeableConcept;

  /**
   * Anatomical sub-location
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept sub_site = 18;
   */
  subSite: CodeableConcept[] = [];

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 19;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 20;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.AddedItem.AddedItemDetail detail = 21;
   */
  detail: ExplanationOfBenefit_AddedItem_AddedItemDetail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.AddedItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "item_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 5, name: "detail_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 6, name: "sub_detail_sequence", kind: "message", T: PositiveInt, repeated: true },
    { no: 7, name: "provider", kind: "message", T: Reference, repeated: true },
    { no: 8, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 9, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "program_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "serviced", kind: "message", T: ExplanationOfBenefit_AddedItem_ServicedX },
    { no: 12, name: "location", kind: "message", T: ExplanationOfBenefit_AddedItem_LocationX },
    { no: 13, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 14, name: "unit_price", kind: "message", T: Money },
    { no: 15, name: "factor", kind: "message", T: Decimal },
    { no: 16, name: "net", kind: "message", T: Money },
    { no: 17, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 18, name: "sub_site", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 20, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 21, name: "detail", kind: "message", T: ExplanationOfBenefit_AddedItem_AddedItemDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem {
    return new ExplanationOfBenefit_AddedItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem {
    return new ExplanationOfBenefit_AddedItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem {
    return new ExplanationOfBenefit_AddedItem().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem | PlainMessage<ExplanationOfBenefit_AddedItem> | undefined, b: ExplanationOfBenefit_AddedItem | PlainMessage<ExplanationOfBenefit_AddedItem> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem, a, b);
  }
}

/**
 * Date or dates of service or product delivery
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.AddedItem.ServicedX
 */
export class ExplanationOfBenefit_AddedItem_ServicedX extends Message<ExplanationOfBenefit_AddedItem_ServicedX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.AddedItem.ServicedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem_ServicedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.AddedItem.ServicedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem_ServicedX {
    return new ExplanationOfBenefit_AddedItem_ServicedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_ServicedX {
    return new ExplanationOfBenefit_AddedItem_ServicedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_ServicedX {
    return new ExplanationOfBenefit_AddedItem_ServicedX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem_ServicedX | PlainMessage<ExplanationOfBenefit_AddedItem_ServicedX> | undefined, b: ExplanationOfBenefit_AddedItem_ServicedX | PlainMessage<ExplanationOfBenefit_AddedItem_ServicedX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem_ServicedX, a, b);
  }
}

/**
 * Place of service or where product was supplied
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.AddedItem.LocationX
 */
export class ExplanationOfBenefit_AddedItem_LocationX extends Message<ExplanationOfBenefit_AddedItem_LocationX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.AddedItem.LocationX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 2;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 3;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem_LocationX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.AddedItem.LocationX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 3, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem_LocationX {
    return new ExplanationOfBenefit_AddedItem_LocationX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_LocationX {
    return new ExplanationOfBenefit_AddedItem_LocationX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_LocationX {
    return new ExplanationOfBenefit_AddedItem_LocationX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem_LocationX | PlainMessage<ExplanationOfBenefit_AddedItem_LocationX> | undefined, b: ExplanationOfBenefit_AddedItem_LocationX | PlainMessage<ExplanationOfBenefit_AddedItem_LocationX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem_LocationX, a, b);
  }
}

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.AddedItem.AddedItemDetail
 */
export class ExplanationOfBenefit_AddedItem_AddedItemDetail extends Message<ExplanationOfBenefit_AddedItem_AddedItemDetail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 4;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 5;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 7;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 8;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 9;
   */
  net?: Money;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 10;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 11;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.AddedItem.AddedItemDetail.AddedItemDetailSubDetail sub_detail = 12;
   */
  subDetail: ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem_AddedItemDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.AddedItem.AddedItemDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 5, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 7, name: "unit_price", kind: "message", T: Money },
    { no: 8, name: "factor", kind: "message", T: Decimal },
    { no: 9, name: "net", kind: "message", T: Money },
    { no: 10, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 11, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
    { no: 12, name: "sub_detail", kind: "message", T: ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem_AddedItemDetail | PlainMessage<ExplanationOfBenefit_AddedItem_AddedItemDetail> | undefined, b: ExplanationOfBenefit_AddedItem_AddedItemDetail | PlainMessage<ExplanationOfBenefit_AddedItem_AddedItemDetail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem_AddedItemDetail, a, b);
  }
}

/**
 * Insurer added line items
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.AddedItem.AddedItemDetail.AddedItemDetailSubDetail
 */
export class ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail extends Message<ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 4;
   */
  productOrService?: CodeableConcept;

  /**
   * Service/Product billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 5;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Count of products or services
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 6;
   */
  quantity?: SimpleQuantity;

  /**
   * Fee, charge or cost per item
   *
   * @generated from field: google.fhir.r4.core.Money unit_price = 7;
   */
  unitPrice?: Money;

  /**
   * Price scaling factor
   *
   * @generated from field: google.fhir.r4.core.Decimal factor = 8;
   */
  factor?: Decimal;

  /**
   * Total item cost
   *
   * @generated from field: google.fhir.r4.core.Money net = 9;
   */
  net?: Money;

  /**
   * Applicable note numbers
   *
   * @generated from field: repeated google.fhir.r4.core.PositiveInt note_number = 10;
   */
  noteNumber: PositiveInt[] = [];

  /**
   * Added items adjudication
   *
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.Item.Adjudication adjudication = 11;
   */
  adjudication: ExplanationOfBenefit_Item_Adjudication[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.AddedItem.AddedItemDetail.AddedItemDetailSubDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 5, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 7, name: "unit_price", kind: "message", T: Money },
    { no: 8, name: "factor", kind: "message", T: Decimal },
    { no: 9, name: "net", kind: "message", T: Money },
    { no: 10, name: "note_number", kind: "message", T: PositiveInt, repeated: true },
    { no: 11, name: "adjudication", kind: "message", T: ExplanationOfBenefit_Item_Adjudication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail {
    return new ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail | PlainMessage<ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail> | undefined, b: ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail | PlainMessage<ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_AddedItem_AddedItemDetail_AddedItemDetailSubDetail, a, b);
  }
}

/**
 * Adjudication totals
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Total
 */
export class ExplanationOfBenefit_Total extends Message<ExplanationOfBenefit_Total> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of adjudication information
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Financial total for the category
   *
   * @generated from field: google.fhir.r4.core.Money amount = 5;
   */
  amount?: Money;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Total>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Total";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "amount", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Total {
    return new ExplanationOfBenefit_Total().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Total {
    return new ExplanationOfBenefit_Total().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Total {
    return new ExplanationOfBenefit_Total().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Total | PlainMessage<ExplanationOfBenefit_Total> | undefined, b: ExplanationOfBenefit_Total | PlainMessage<ExplanationOfBenefit_Total> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Total, a, b);
  }
}

/**
 * Payment Details
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Payment
 */
export class ExplanationOfBenefit_Payment extends Message<ExplanationOfBenefit_Payment> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Partial or complete payment
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Payment adjustment for non-claim issues
   *
   * @generated from field: google.fhir.r4.core.Money adjustment = 5;
   */
  adjustment?: Money;

  /**
   * Explanation for the variance
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept adjustment_reason = 6;
   */
  adjustmentReason?: CodeableConcept;

  /**
   * Expected date of payment
   *
   * @generated from field: google.fhir.r4.core.Date date = 7;
   */
  date?: Date;

  /**
   * Payable amount after adjustment
   *
   * @generated from field: google.fhir.r4.core.Money amount = 8;
   */
  amount?: Money;

  /**
   * Business identifier for the payment
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 9;
   */
  identifier?: Identifier;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Payment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Payment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "adjustment", kind: "message", T: Money },
    { no: 6, name: "adjustment_reason", kind: "message", T: CodeableConcept },
    { no: 7, name: "date", kind: "message", T: Date },
    { no: 8, name: "amount", kind: "message", T: Money },
    { no: 9, name: "identifier", kind: "message", T: Identifier },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Payment {
    return new ExplanationOfBenefit_Payment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payment {
    return new ExplanationOfBenefit_Payment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Payment {
    return new ExplanationOfBenefit_Payment().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Payment | PlainMessage<ExplanationOfBenefit_Payment> | undefined, b: ExplanationOfBenefit_Payment | PlainMessage<ExplanationOfBenefit_Payment> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Payment, a, b);
  }
}

/**
 * Note concerning adjudication
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Note
 */
export class ExplanationOfBenefit_Note extends Message<ExplanationOfBenefit_Note> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Note instance identifier
   *
   * @generated from field: google.fhir.r4.core.PositiveInt number = 4;
   */
  number?: PositiveInt;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.Note.TypeCode type = 5;
   */
  type?: ExplanationOfBenefit_Note_TypeCode;

  /**
   * Note explanatory text
   *
   * @generated from field: google.fhir.r4.core.String text = 6;
   */
  text?: String;

  /**
   * Language of the text
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept language = 7;
   */
  language?: CodeableConcept;

  constructor(data?: PartialMessage<ExplanationOfBenefit_Note>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Note";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "number", kind: "message", T: PositiveInt },
    { no: 5, name: "type", kind: "message", T: ExplanationOfBenefit_Note_TypeCode },
    { no: 6, name: "text", kind: "message", T: String },
    { no: 7, name: "language", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Note {
    return new ExplanationOfBenefit_Note().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Note {
    return new ExplanationOfBenefit_Note().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Note {
    return new ExplanationOfBenefit_Note().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Note | PlainMessage<ExplanationOfBenefit_Note> | undefined, b: ExplanationOfBenefit_Note | PlainMessage<ExplanationOfBenefit_Note> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Note, a, b);
  }
}

/**
 * display | print | printoper
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.Note.TypeCode
 */
export class ExplanationOfBenefit_Note_TypeCode extends Message<ExplanationOfBenefit_Note_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.NoteTypeCode.Value value = 1;
   */
  value = NoteTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_Note_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.Note.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NoteTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_Note_TypeCode {
    return new ExplanationOfBenefit_Note_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Note_TypeCode {
    return new ExplanationOfBenefit_Note_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_Note_TypeCode {
    return new ExplanationOfBenefit_Note_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_Note_TypeCode | PlainMessage<ExplanationOfBenefit_Note_TypeCode> | undefined, b: ExplanationOfBenefit_Note_TypeCode | PlainMessage<ExplanationOfBenefit_Note_TypeCode> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_Note_TypeCode, a, b);
  }
}

/**
 * Balance by Benefit Category
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance
 */
export class ExplanationOfBenefit_BenefitBalance extends Message<ExplanationOfBenefit_BenefitBalance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Excluded from the plan
   *
   * @generated from field: google.fhir.r4.core.Boolean excluded = 5;
   */
  excluded?: Boolean;

  /**
   * Short name for the benefit
   *
   * @generated from field: google.fhir.r4.core.String name = 6;
   */
  name?: String;

  /**
   * Description of the benefit or services covered
   *
   * @generated from field: google.fhir.r4.core.String description = 7;
   */
  description?: String;

  /**
   * In or out of network
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept network = 8;
   */
  network?: CodeableConcept;

  /**
   * Individual or family
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept unit = 9;
   */
  unit?: CodeableConcept;

  /**
   * Annual or lifetime
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept term = 10;
   */
  term?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit financial = 11;
   */
  financial: ExplanationOfBenefit_BenefitBalance_Benefit[] = [];

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "excluded", kind: "message", T: Boolean },
    { no: 6, name: "name", kind: "message", T: String },
    { no: 7, name: "description", kind: "message", T: String },
    { no: 8, name: "network", kind: "message", T: CodeableConcept },
    { no: 9, name: "unit", kind: "message", T: CodeableConcept },
    { no: 10, name: "term", kind: "message", T: CodeableConcept },
    { no: 11, name: "financial", kind: "message", T: ExplanationOfBenefit_BenefitBalance_Benefit, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance {
    return new ExplanationOfBenefit_BenefitBalance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance {
    return new ExplanationOfBenefit_BenefitBalance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance {
    return new ExplanationOfBenefit_BenefitBalance().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance | PlainMessage<ExplanationOfBenefit_BenefitBalance> | undefined, b: ExplanationOfBenefit_BenefitBalance | PlainMessage<ExplanationOfBenefit_BenefitBalance> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance, a, b);
  }
}

/**
 * Benefit Summary
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit
 */
export class ExplanationOfBenefit_BenefitBalance_Benefit extends Message<ExplanationOfBenefit_BenefitBalance_Benefit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.AllowedX allowed = 5;
   */
  allowed?: ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX;

  /**
   * @generated from field: google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.UsedX used = 6;
   */
  used?: ExplanationOfBenefit_BenefitBalance_Benefit_UsedX;

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance_Benefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "allowed", kind: "message", T: ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX },
    { no: 6, name: "used", kind: "message", T: ExplanationOfBenefit_BenefitBalance_Benefit_UsedX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit {
    return new ExplanationOfBenefit_BenefitBalance_Benefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit {
    return new ExplanationOfBenefit_BenefitBalance_Benefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit {
    return new ExplanationOfBenefit_BenefitBalance_Benefit().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance_Benefit | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit> | undefined, b: ExplanationOfBenefit_BenefitBalance_Benefit | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance_Benefit, a, b);
  }
}

/**
 * Benefits allowed
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.AllowedX
 */
export class ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX extends Message<ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.AllowedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 3;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.AllowedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 3, name: "money", kind: "message", T: Money, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX> | undefined, b: ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance_Benefit_AllowedX, a, b);
  }
}

/**
 * Benefits used
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.UsedX
 */
export class ExplanationOfBenefit_BenefitBalance_Benefit_UsedX extends Message<ExplanationOfBenefit_BenefitBalance_Benefit_UsedX> {
  /**
   * @generated from oneof google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.UsedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 2;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ExplanationOfBenefit_BenefitBalance_Benefit_UsedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefit.BenefitBalance.Benefit.UsedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 2, name: "money", kind: "message", T: Money, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_UsedX {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_UsedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_UsedX {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_UsedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefit_BenefitBalance_Benefit_UsedX {
    return new ExplanationOfBenefit_BenefitBalance_Benefit_UsedX().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefit_BenefitBalance_Benefit_UsedX | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_UsedX> | undefined, b: ExplanationOfBenefit_BenefitBalance_Benefit_UsedX | PlainMessage<ExplanationOfBenefit_BenefitBalance_Benefit_UsedX> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefit_BenefitBalance_Benefit_UsedX, a, b);
  }
}

