//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/plan_definition.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Age, Boolean, Canonical, Code, CodeableConcept, ContactDetail, DataRequirement, Date, DateTime, Duration, Expression, Extension, Id, Identifier, Markdown, Meta, Narrative, Period, Quantity, Range, Reference, RelatedArtifact, String, Timing, TriggerDefinition, Uri, UsageContext } from "../datatypes_pb.js";
import { ActionCardinalityBehaviorCode_Value, ActionConditionKindCode_Value, ActionGroupingBehaviorCode_Value, ActionParticipantTypeCode_Value, ActionPrecheckBehaviorCode_Value, ActionRelationshipTypeCode_Value, ActionRequiredBehaviorCode_Value, ActionSelectionBehaviorCode_Value, PublicationStatusCode_Value, RequestPriorityCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for PlanDefinition.
 * The definition of a plan for a series of actions, independent of any specific
 * patient or context. See
 * http://hl7.org/fhir/StructureDefinition/PlanDefinition
 *
 * @generated from message google.fhir.r4.core.PlanDefinition
 */
export class PlanDefinition extends Message<PlanDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this plan definition, represented as a URI
   * (globally unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the plan definition
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the plan definition
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this plan definition (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this plan definition (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * Subordinate title of the plan definition
   *
   * @generated from field: google.fhir.r4.core.String subtitle = 15;
   */
  subtitle?: String;

  /**
   * order-set | clinical-protocol | eca-rule | workflow-definition
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 16;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.StatusCode status = 17;
   */
  status?: PlanDefinition_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 18;
   */
  experimental?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.SubjectX subject = 19;
   */
  subject?: PlanDefinition_SubjectX;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 20;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 21;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 22;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the plan definition
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 23;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 24;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for plan definition (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 25;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this plan definition is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 26;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the plan
   *
   * @generated from field: google.fhir.r4.core.String usage = 27;
   */
  usage?: String;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 28;
   */
  copyright?: Markdown;

  /**
   * When the plan definition was approved by publisher
   *
   * @generated from field: google.fhir.r4.core.Date approval_date = 29;
   */
  approvalDate?: Date;

  /**
   * When the plan definition was last reviewed
   *
   * @generated from field: google.fhir.r4.core.Date last_review_date = 30;
   */
  lastReviewDate?: Date;

  /**
   * When the plan definition is expected to be used
   *
   * @generated from field: google.fhir.r4.core.Period effective_period = 31;
   */
  effectivePeriod?: Period;

  /**
   * E.g. Education, Treatment, Assessment
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept topic = 32;
   */
  topic: CodeableConcept[] = [];

  /**
   * Who authored the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail author = 33;
   */
  author: ContactDetail[] = [];

  /**
   * Who edited the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail editor = 34;
   */
  editor: ContactDetail[] = [];

  /**
   * Who reviewed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail reviewer = 35;
   */
  reviewer: ContactDetail[] = [];

  /**
   * Who endorsed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail endorser = 36;
   */
  endorser: ContactDetail[] = [];

  /**
   * Additional documentation, citations
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact related_artifact = 37;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Logic used by the plan definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical library = 38;
   */
  library: Canonical[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Goal goal = 39;
   */
  goal: PlanDefinition_Goal[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Action action = 40;
   */
  action: PlanDefinition_Action[] = [];

  constructor(data?: PartialMessage<PlanDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "subtitle", kind: "message", T: String },
    { no: 16, name: "type", kind: "message", T: CodeableConcept },
    { no: 17, name: "status", kind: "message", T: PlanDefinition_StatusCode },
    { no: 18, name: "experimental", kind: "message", T: Boolean },
    { no: 19, name: "subject", kind: "message", T: PlanDefinition_SubjectX },
    { no: 20, name: "date", kind: "message", T: DateTime },
    { no: 21, name: "publisher", kind: "message", T: String },
    { no: 22, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 23, name: "description", kind: "message", T: Markdown },
    { no: 24, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 25, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "purpose", kind: "message", T: Markdown },
    { no: 27, name: "usage", kind: "message", T: String },
    { no: 28, name: "copyright", kind: "message", T: Markdown },
    { no: 29, name: "approval_date", kind: "message", T: Date },
    { no: 30, name: "last_review_date", kind: "message", T: Date },
    { no: 31, name: "effective_period", kind: "message", T: Period },
    { no: 32, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 33, name: "author", kind: "message", T: ContactDetail, repeated: true },
    { no: 34, name: "editor", kind: "message", T: ContactDetail, repeated: true },
    { no: 35, name: "reviewer", kind: "message", T: ContactDetail, repeated: true },
    { no: 36, name: "endorser", kind: "message", T: ContactDetail, repeated: true },
    { no: 37, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 38, name: "library", kind: "message", T: Canonical, repeated: true },
    { no: 39, name: "goal", kind: "message", T: PlanDefinition_Goal, repeated: true },
    { no: 40, name: "action", kind: "message", T: PlanDefinition_Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition {
    return new PlanDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition {
    return new PlanDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition {
    return new PlanDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition | PlainMessage<PlanDefinition> | undefined, b: PlanDefinition | PlainMessage<PlanDefinition> | undefined): boolean {
    return proto3.util.equals(PlanDefinition, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.StatusCode
 */
export class PlanDefinition_StatusCode extends Message<PlanDefinition_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_StatusCode {
    return new PlanDefinition_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_StatusCode {
    return new PlanDefinition_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_StatusCode {
    return new PlanDefinition_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_StatusCode | PlainMessage<PlanDefinition_StatusCode> | undefined, b: PlanDefinition_StatusCode | PlainMessage<PlanDefinition_StatusCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_StatusCode, a, b);
  }
}

/**
 * Type of individual the plan definition is focused on
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.SubjectX
 */
export class PlanDefinition_SubjectX extends Message<PlanDefinition_SubjectX> {
  /**
   * @generated from oneof google.fhir.r4.core.PlanDefinition.SubjectX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_SubjectX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.SubjectX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_SubjectX {
    return new PlanDefinition_SubjectX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_SubjectX {
    return new PlanDefinition_SubjectX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_SubjectX {
    return new PlanDefinition_SubjectX().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_SubjectX | PlainMessage<PlanDefinition_SubjectX> | undefined, b: PlanDefinition_SubjectX | PlainMessage<PlanDefinition_SubjectX> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_SubjectX, a, b);
  }
}

/**
 * What the plan is trying to accomplish
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Goal
 */
export class PlanDefinition_Goal extends Message<PlanDefinition_Goal> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * E.g. Treatment, dietary, behavioral
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Code or text describing the goal
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept description = 5;
   */
  description?: CodeableConcept;

  /**
   * high-priority | medium-priority | low-priority
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept priority = 6;
   */
  priority?: CodeableConcept;

  /**
   * When goal pursuit begins
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept start = 7;
   */
  start?: CodeableConcept;

  /**
   * What does the goal address
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept addresses = 8;
   */
  addresses: CodeableConcept[] = [];

  /**
   * Supporting documentation for the goal
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact documentation = 9;
   */
  documentation: RelatedArtifact[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Goal.Target target = 10;
   */
  target: PlanDefinition_Goal_Target[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Goal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Goal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "description", kind: "message", T: CodeableConcept },
    { no: 6, name: "priority", kind: "message", T: CodeableConcept },
    { no: 7, name: "start", kind: "message", T: CodeableConcept },
    { no: 8, name: "addresses", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "documentation", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 10, name: "target", kind: "message", T: PlanDefinition_Goal_Target, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Goal {
    return new PlanDefinition_Goal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Goal {
    return new PlanDefinition_Goal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Goal {
    return new PlanDefinition_Goal().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Goal | PlainMessage<PlanDefinition_Goal> | undefined, b: PlanDefinition_Goal | PlainMessage<PlanDefinition_Goal> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Goal, a, b);
  }
}

/**
 * Target outcome for the goal
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Goal.Target
 */
export class PlanDefinition_Goal_Target extends Message<PlanDefinition_Goal_Target> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The parameter whose value is to be tracked
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept measure = 4;
   */
  measure?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Goal.Target.DetailX detail = 5;
   */
  detail?: PlanDefinition_Goal_Target_DetailX;

  /**
   * Reach goal within
   *
   * @generated from field: google.fhir.r4.core.Duration due = 6;
   */
  due?: Duration;

  constructor(data?: PartialMessage<PlanDefinition_Goal_Target>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Goal.Target";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "measure", kind: "message", T: CodeableConcept },
    { no: 5, name: "detail", kind: "message", T: PlanDefinition_Goal_Target_DetailX },
    { no: 6, name: "due", kind: "message", T: Duration },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Goal_Target {
    return new PlanDefinition_Goal_Target().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target {
    return new PlanDefinition_Goal_Target().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target {
    return new PlanDefinition_Goal_Target().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Goal_Target | PlainMessage<PlanDefinition_Goal_Target> | undefined, b: PlanDefinition_Goal_Target | PlainMessage<PlanDefinition_Goal_Target> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Goal_Target, a, b);
  }
}

/**
 * The target value to be achieved
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Goal.Target.DetailX
 */
export class PlanDefinition_Goal_Target_DetailX extends Message<PlanDefinition_Goal_Target_DetailX> {
  /**
   * @generated from oneof google.fhir.r4.core.PlanDefinition.Goal.Target.DetailX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 1;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 3;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Goal_Target_DetailX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Goal.Target.DetailX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 3, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Goal_Target_DetailX {
    return new PlanDefinition_Goal_Target_DetailX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target_DetailX {
    return new PlanDefinition_Goal_Target_DetailX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Goal_Target_DetailX {
    return new PlanDefinition_Goal_Target_DetailX().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Goal_Target_DetailX | PlainMessage<PlanDefinition_Goal_Target_DetailX> | undefined, b: PlanDefinition_Goal_Target_DetailX | PlainMessage<PlanDefinition_Goal_Target_DetailX> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Goal_Target_DetailX, a, b);
  }
}

/**
 * Action defined by the plan
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action
 */
export class PlanDefinition_Action extends Message<PlanDefinition_Action> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * User-visible prefix for the action (e.g. 1. or A.)
   *
   * @generated from field: google.fhir.r4.core.String prefix = 4;
   */
  prefix?: String;

  /**
   * User-visible title
   *
   * @generated from field: google.fhir.r4.core.String title = 5;
   */
  title?: String;

  /**
   * Brief description of the action
   *
   * @generated from field: google.fhir.r4.core.String description = 6;
   */
  description?: String;

  /**
   * Static text equivalent of the action, used if the dynamic aspects cannot
   * be interpreted by the receiving system
   *
   * @generated from field: google.fhir.r4.core.String text_equivalent = 7;
   */
  textEquivalent?: String;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.PriorityCode priority = 8;
   */
  priority?: PlanDefinition_Action_PriorityCode;

  /**
   * Code representing the meaning of the action or sub-actions
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 9;
   */
  code: CodeableConcept[] = [];

  /**
   * Why the action should be performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason = 10;
   */
  reason: CodeableConcept[] = [];

  /**
   * Supporting documentation for the intended performer of the action
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact documentation = 11;
   */
  documentation: RelatedArtifact[] = [];

  /**
   * What goals this action supports
   *
   * @generated from field: repeated google.fhir.r4.core.Id goal_id = 12;
   */
  goalId: Id[] = [];

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.SubjectX subject = 13;
   */
  subject?: PlanDefinition_Action_SubjectX;

  /**
   * When the action should be triggered
   *
   * @generated from field: repeated google.fhir.r4.core.TriggerDefinition trigger = 14;
   */
  trigger: TriggerDefinition[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Action.Condition condition = 15;
   */
  condition: PlanDefinition_Action_Condition[] = [];

  /**
   * Input data requirements
   *
   * @generated from field: repeated google.fhir.r4.core.DataRequirement input = 16;
   */
  input: DataRequirement[] = [];

  /**
   * Output data definition
   *
   * @generated from field: repeated google.fhir.r4.core.DataRequirement output = 17;
   */
  output: DataRequirement[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Action.RelatedAction related_action = 18;
   */
  relatedAction: PlanDefinition_Action_RelatedAction[] = [];

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.TimingX timing = 19;
   */
  timing?: PlanDefinition_Action_TimingX;

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Action.Participant participant = 20;
   */
  participant: PlanDefinition_Action_Participant[] = [];

  /**
   * create | update | remove | fire-event
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 21;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.GroupingBehaviorCode grouping_behavior = 22;
   */
  groupingBehavior?: PlanDefinition_Action_GroupingBehaviorCode;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.SelectionBehaviorCode selection_behavior = 23;
   */
  selectionBehavior?: PlanDefinition_Action_SelectionBehaviorCode;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.RequiredBehaviorCode required_behavior = 24;
   */
  requiredBehavior?: PlanDefinition_Action_RequiredBehaviorCode;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.PrecheckBehaviorCode precheck_behavior = 25;
   */
  precheckBehavior?: PlanDefinition_Action_PrecheckBehaviorCode;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.CardinalityBehaviorCode cardinality_behavior = 26;
   */
  cardinalityBehavior?: PlanDefinition_Action_CardinalityBehaviorCode;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.DefinitionX definition = 27;
   */
  definition?: PlanDefinition_Action_DefinitionX;

  /**
   * Transform to apply the template
   *
   * @generated from field: google.fhir.r4.core.Canonical transform = 28;
   */
  transform?: Canonical;

  /**
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Action.DynamicValue dynamic_value = 29;
   */
  dynamicValue: PlanDefinition_Action_DynamicValue[] = [];

  /**
   * A sub-action
   *
   * @generated from field: repeated google.fhir.r4.core.PlanDefinition.Action action = 30;
   */
  action: PlanDefinition_Action[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "prefix", kind: "message", T: String },
    { no: 5, name: "title", kind: "message", T: String },
    { no: 6, name: "description", kind: "message", T: String },
    { no: 7, name: "text_equivalent", kind: "message", T: String },
    { no: 8, name: "priority", kind: "message", T: PlanDefinition_Action_PriorityCode },
    { no: 9, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 10, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 11, name: "documentation", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 12, name: "goal_id", kind: "message", T: Id, repeated: true },
    { no: 13, name: "subject", kind: "message", T: PlanDefinition_Action_SubjectX },
    { no: 14, name: "trigger", kind: "message", T: TriggerDefinition, repeated: true },
    { no: 15, name: "condition", kind: "message", T: PlanDefinition_Action_Condition, repeated: true },
    { no: 16, name: "input", kind: "message", T: DataRequirement, repeated: true },
    { no: 17, name: "output", kind: "message", T: DataRequirement, repeated: true },
    { no: 18, name: "related_action", kind: "message", T: PlanDefinition_Action_RelatedAction, repeated: true },
    { no: 19, name: "timing", kind: "message", T: PlanDefinition_Action_TimingX },
    { no: 20, name: "participant", kind: "message", T: PlanDefinition_Action_Participant, repeated: true },
    { no: 21, name: "type", kind: "message", T: CodeableConcept },
    { no: 22, name: "grouping_behavior", kind: "message", T: PlanDefinition_Action_GroupingBehaviorCode },
    { no: 23, name: "selection_behavior", kind: "message", T: PlanDefinition_Action_SelectionBehaviorCode },
    { no: 24, name: "required_behavior", kind: "message", T: PlanDefinition_Action_RequiredBehaviorCode },
    { no: 25, name: "precheck_behavior", kind: "message", T: PlanDefinition_Action_PrecheckBehaviorCode },
    { no: 26, name: "cardinality_behavior", kind: "message", T: PlanDefinition_Action_CardinalityBehaviorCode },
    { no: 27, name: "definition", kind: "message", T: PlanDefinition_Action_DefinitionX },
    { no: 28, name: "transform", kind: "message", T: Canonical },
    { no: 29, name: "dynamic_value", kind: "message", T: PlanDefinition_Action_DynamicValue, repeated: true },
    { no: 30, name: "action", kind: "message", T: PlanDefinition_Action, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action {
    return new PlanDefinition_Action().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action {
    return new PlanDefinition_Action().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action {
    return new PlanDefinition_Action().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action | PlainMessage<PlanDefinition_Action> | undefined, b: PlanDefinition_Action | PlainMessage<PlanDefinition_Action> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action, a, b);
  }
}

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.PriorityCode
 */
export class PlanDefinition_Action_PriorityCode extends Message<PlanDefinition_Action_PriorityCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_PriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.PriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_PriorityCode {
    return new PlanDefinition_Action_PriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_PriorityCode {
    return new PlanDefinition_Action_PriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_PriorityCode {
    return new PlanDefinition_Action_PriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_PriorityCode | PlainMessage<PlanDefinition_Action_PriorityCode> | undefined, b: PlanDefinition_Action_PriorityCode | PlainMessage<PlanDefinition_Action_PriorityCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_PriorityCode, a, b);
  }
}

/**
 * Type of individual the action is focused on
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.SubjectX
 */
export class PlanDefinition_Action_SubjectX extends Message<PlanDefinition_Action_SubjectX> {
  /**
   * @generated from oneof google.fhir.r4.core.PlanDefinition.Action.SubjectX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Action_SubjectX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.SubjectX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_SubjectX {
    return new PlanDefinition_Action_SubjectX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_SubjectX {
    return new PlanDefinition_Action_SubjectX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_SubjectX {
    return new PlanDefinition_Action_SubjectX().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_SubjectX | PlainMessage<PlanDefinition_Action_SubjectX> | undefined, b: PlanDefinition_Action_SubjectX | PlainMessage<PlanDefinition_Action_SubjectX> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_SubjectX, a, b);
  }
}

/**
 * Whether or not the action is applicable
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.Condition
 */
export class PlanDefinition_Action_Condition extends Message<PlanDefinition_Action_Condition> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.Condition.KindCode kind = 4;
   */
  kind?: PlanDefinition_Action_Condition_KindCode;

  /**
   * Boolean-valued expression
   *
   * @generated from field: google.fhir.r4.core.Expression expression = 5;
   */
  expression?: Expression;

  constructor(data?: PartialMessage<PlanDefinition_Action_Condition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.Condition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "kind", kind: "message", T: PlanDefinition_Action_Condition_KindCode },
    { no: 5, name: "expression", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_Condition {
    return new PlanDefinition_Action_Condition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Condition {
    return new PlanDefinition_Action_Condition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Condition {
    return new PlanDefinition_Action_Condition().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_Condition | PlainMessage<PlanDefinition_Action_Condition> | undefined, b: PlanDefinition_Action_Condition | PlainMessage<PlanDefinition_Action_Condition> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_Condition, a, b);
  }
}

/**
 * applicability | start | stop
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.Condition.KindCode
 */
export class PlanDefinition_Action_Condition_KindCode extends Message<PlanDefinition_Action_Condition_KindCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionConditionKindCode.Value value = 1;
   */
  value = ActionConditionKindCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_Condition_KindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.Condition.KindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionConditionKindCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_Condition_KindCode {
    return new PlanDefinition_Action_Condition_KindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Condition_KindCode {
    return new PlanDefinition_Action_Condition_KindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Condition_KindCode {
    return new PlanDefinition_Action_Condition_KindCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_Condition_KindCode | PlainMessage<PlanDefinition_Action_Condition_KindCode> | undefined, b: PlanDefinition_Action_Condition_KindCode | PlainMessage<PlanDefinition_Action_Condition_KindCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_Condition_KindCode, a, b);
  }
}

/**
 * Relationship to another action
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.RelatedAction
 */
export class PlanDefinition_Action_RelatedAction extends Message<PlanDefinition_Action_RelatedAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What action is this related to
   *
   * @generated from field: google.fhir.r4.core.Id action_id = 4;
   */
  actionId?: Id;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.RelatedAction.RelationshipCode relationship = 5;
   */
  relationship?: PlanDefinition_Action_RelatedAction_RelationshipCode;

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.RelatedAction.OffsetX offset = 6;
   */
  offset?: PlanDefinition_Action_RelatedAction_OffsetX;

  constructor(data?: PartialMessage<PlanDefinition_Action_RelatedAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.RelatedAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action_id", kind: "message", T: Id },
    { no: 5, name: "relationship", kind: "message", T: PlanDefinition_Action_RelatedAction_RelationshipCode },
    { no: 6, name: "offset", kind: "message", T: PlanDefinition_Action_RelatedAction_OffsetX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_RelatedAction {
    return new PlanDefinition_Action_RelatedAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction {
    return new PlanDefinition_Action_RelatedAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction {
    return new PlanDefinition_Action_RelatedAction().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_RelatedAction | PlainMessage<PlanDefinition_Action_RelatedAction> | undefined, b: PlanDefinition_Action_RelatedAction | PlainMessage<PlanDefinition_Action_RelatedAction> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_RelatedAction, a, b);
  }
}

/**
 * before-start | before | before-end | concurrent-with-start | concurrent
 * | concurrent-with-end | after-start | after | after-end
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.RelatedAction.RelationshipCode
 */
export class PlanDefinition_Action_RelatedAction_RelationshipCode extends Message<PlanDefinition_Action_RelatedAction_RelationshipCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionRelationshipTypeCode.Value value = 1;
   */
  value = ActionRelationshipTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_RelatedAction_RelationshipCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.RelatedAction.RelationshipCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionRelationshipTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_RelatedAction_RelationshipCode {
    return new PlanDefinition_Action_RelatedAction_RelationshipCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction_RelationshipCode {
    return new PlanDefinition_Action_RelatedAction_RelationshipCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction_RelationshipCode {
    return new PlanDefinition_Action_RelatedAction_RelationshipCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_RelatedAction_RelationshipCode | PlainMessage<PlanDefinition_Action_RelatedAction_RelationshipCode> | undefined, b: PlanDefinition_Action_RelatedAction_RelationshipCode | PlainMessage<PlanDefinition_Action_RelatedAction_RelationshipCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_RelatedAction_RelationshipCode, a, b);
  }
}

/**
 * Time offset for the relationship
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.RelatedAction.OffsetX
 */
export class PlanDefinition_Action_RelatedAction_OffsetX extends Message<PlanDefinition_Action_RelatedAction_OffsetX> {
  /**
   * @generated from oneof google.fhir.r4.core.PlanDefinition.Action.RelatedAction.OffsetX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 1;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 2;
     */
    value: Range;
    case: "range";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Action_RelatedAction_OffsetX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.RelatedAction.OffsetX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 2, name: "range", kind: "message", T: Range, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_RelatedAction_OffsetX {
    return new PlanDefinition_Action_RelatedAction_OffsetX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction_OffsetX {
    return new PlanDefinition_Action_RelatedAction_OffsetX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RelatedAction_OffsetX {
    return new PlanDefinition_Action_RelatedAction_OffsetX().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_RelatedAction_OffsetX | PlainMessage<PlanDefinition_Action_RelatedAction_OffsetX> | undefined, b: PlanDefinition_Action_RelatedAction_OffsetX | PlainMessage<PlanDefinition_Action_RelatedAction_OffsetX> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_RelatedAction_OffsetX, a, b);
  }
}

/**
 * When the action should take place
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.TimingX
 */
export class PlanDefinition_Action_TimingX extends Message<PlanDefinition_Action_TimingX> {
  /**
   * @generated from oneof google.fhir.r4.core.PlanDefinition.Action.TimingX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 2;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 3;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 4;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 5;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 6;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Action_TimingX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.TimingX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 3, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 4, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 5, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 6, name: "timing", kind: "message", T: Timing, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_TimingX {
    return new PlanDefinition_Action_TimingX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_TimingX {
    return new PlanDefinition_Action_TimingX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_TimingX {
    return new PlanDefinition_Action_TimingX().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_TimingX | PlainMessage<PlanDefinition_Action_TimingX> | undefined, b: PlanDefinition_Action_TimingX | PlainMessage<PlanDefinition_Action_TimingX> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_TimingX, a, b);
  }
}

/**
 * Who should participate in the action
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.Participant
 */
export class PlanDefinition_Action_Participant extends Message<PlanDefinition_Action_Participant> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.PlanDefinition.Action.Participant.TypeCode type = 4;
   */
  type?: PlanDefinition_Action_Participant_TypeCode;

  /**
   * E.g. Nurse, Surgeon, Parent
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  constructor(data?: PartialMessage<PlanDefinition_Action_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: PlanDefinition_Action_Participant_TypeCode },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_Participant {
    return new PlanDefinition_Action_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Participant {
    return new PlanDefinition_Action_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Participant {
    return new PlanDefinition_Action_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_Participant | PlainMessage<PlanDefinition_Action_Participant> | undefined, b: PlanDefinition_Action_Participant | PlainMessage<PlanDefinition_Action_Participant> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_Participant, a, b);
  }
}

/**
 * patient | practitioner | related-person | device
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.Participant.TypeCode
 */
export class PlanDefinition_Action_Participant_TypeCode extends Message<PlanDefinition_Action_Participant_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionParticipantTypeCode.Value value = 1;
   */
  value = ActionParticipantTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_Participant_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.Participant.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionParticipantTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_Participant_TypeCode {
    return new PlanDefinition_Action_Participant_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Participant_TypeCode {
    return new PlanDefinition_Action_Participant_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_Participant_TypeCode {
    return new PlanDefinition_Action_Participant_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_Participant_TypeCode | PlainMessage<PlanDefinition_Action_Participant_TypeCode> | undefined, b: PlanDefinition_Action_Participant_TypeCode | PlainMessage<PlanDefinition_Action_Participant_TypeCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_Participant_TypeCode, a, b);
  }
}

/**
 * visual-group | logical-group | sentence-group
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.GroupingBehaviorCode
 */
export class PlanDefinition_Action_GroupingBehaviorCode extends Message<PlanDefinition_Action_GroupingBehaviorCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionGroupingBehaviorCode.Value value = 1;
   */
  value = ActionGroupingBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_GroupingBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.GroupingBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionGroupingBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_GroupingBehaviorCode {
    return new PlanDefinition_Action_GroupingBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_GroupingBehaviorCode {
    return new PlanDefinition_Action_GroupingBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_GroupingBehaviorCode {
    return new PlanDefinition_Action_GroupingBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_GroupingBehaviorCode | PlainMessage<PlanDefinition_Action_GroupingBehaviorCode> | undefined, b: PlanDefinition_Action_GroupingBehaviorCode | PlainMessage<PlanDefinition_Action_GroupingBehaviorCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_GroupingBehaviorCode, a, b);
  }
}

/**
 * any | all | all-or-none | exactly-one | at-most-one | one-or-more
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.SelectionBehaviorCode
 */
export class PlanDefinition_Action_SelectionBehaviorCode extends Message<PlanDefinition_Action_SelectionBehaviorCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionSelectionBehaviorCode.Value value = 1;
   */
  value = ActionSelectionBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_SelectionBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.SelectionBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionSelectionBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_SelectionBehaviorCode {
    return new PlanDefinition_Action_SelectionBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_SelectionBehaviorCode {
    return new PlanDefinition_Action_SelectionBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_SelectionBehaviorCode {
    return new PlanDefinition_Action_SelectionBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_SelectionBehaviorCode | PlainMessage<PlanDefinition_Action_SelectionBehaviorCode> | undefined, b: PlanDefinition_Action_SelectionBehaviorCode | PlainMessage<PlanDefinition_Action_SelectionBehaviorCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_SelectionBehaviorCode, a, b);
  }
}

/**
 * must | could | must-unless-documented
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.RequiredBehaviorCode
 */
export class PlanDefinition_Action_RequiredBehaviorCode extends Message<PlanDefinition_Action_RequiredBehaviorCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionRequiredBehaviorCode.Value value = 1;
   */
  value = ActionRequiredBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_RequiredBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.RequiredBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionRequiredBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_RequiredBehaviorCode {
    return new PlanDefinition_Action_RequiredBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RequiredBehaviorCode {
    return new PlanDefinition_Action_RequiredBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_RequiredBehaviorCode {
    return new PlanDefinition_Action_RequiredBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_RequiredBehaviorCode | PlainMessage<PlanDefinition_Action_RequiredBehaviorCode> | undefined, b: PlanDefinition_Action_RequiredBehaviorCode | PlainMessage<PlanDefinition_Action_RequiredBehaviorCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_RequiredBehaviorCode, a, b);
  }
}

/**
 * yes | no
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.PrecheckBehaviorCode
 */
export class PlanDefinition_Action_PrecheckBehaviorCode extends Message<PlanDefinition_Action_PrecheckBehaviorCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionPrecheckBehaviorCode.Value value = 1;
   */
  value = ActionPrecheckBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_PrecheckBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.PrecheckBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionPrecheckBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_PrecheckBehaviorCode {
    return new PlanDefinition_Action_PrecheckBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_PrecheckBehaviorCode {
    return new PlanDefinition_Action_PrecheckBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_PrecheckBehaviorCode {
    return new PlanDefinition_Action_PrecheckBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_PrecheckBehaviorCode | PlainMessage<PlanDefinition_Action_PrecheckBehaviorCode> | undefined, b: PlanDefinition_Action_PrecheckBehaviorCode | PlainMessage<PlanDefinition_Action_PrecheckBehaviorCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_PrecheckBehaviorCode, a, b);
  }
}

/**
 * single | multiple
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.CardinalityBehaviorCode
 */
export class PlanDefinition_Action_CardinalityBehaviorCode extends Message<PlanDefinition_Action_CardinalityBehaviorCode> {
  /**
   * @generated from field: google.fhir.r4.core.ActionCardinalityBehaviorCode.Value value = 1;
   */
  value = ActionCardinalityBehaviorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PlanDefinition_Action_CardinalityBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.CardinalityBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ActionCardinalityBehaviorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_CardinalityBehaviorCode {
    return new PlanDefinition_Action_CardinalityBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_CardinalityBehaviorCode {
    return new PlanDefinition_Action_CardinalityBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_CardinalityBehaviorCode {
    return new PlanDefinition_Action_CardinalityBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_CardinalityBehaviorCode | PlainMessage<PlanDefinition_Action_CardinalityBehaviorCode> | undefined, b: PlanDefinition_Action_CardinalityBehaviorCode | PlainMessage<PlanDefinition_Action_CardinalityBehaviorCode> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_CardinalityBehaviorCode, a, b);
  }
}

/**
 * Description of the activity to be performed
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.DefinitionX
 */
export class PlanDefinition_Action_DefinitionX extends Message<PlanDefinition_Action_DefinitionX> {
  /**
   * @generated from oneof google.fhir.r4.core.PlanDefinition.Action.DefinitionX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 1;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 2;
     */
    value: Uri;
    case: "uri";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PlanDefinition_Action_DefinitionX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.DefinitionX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 2, name: "uri", kind: "message", T: Uri, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_DefinitionX {
    return new PlanDefinition_Action_DefinitionX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_DefinitionX {
    return new PlanDefinition_Action_DefinitionX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_DefinitionX {
    return new PlanDefinition_Action_DefinitionX().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_DefinitionX | PlainMessage<PlanDefinition_Action_DefinitionX> | undefined, b: PlanDefinition_Action_DefinitionX | PlainMessage<PlanDefinition_Action_DefinitionX> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_DefinitionX, a, b);
  }
}

/**
 * Dynamic aspects of the definition
 *
 * @generated from message google.fhir.r4.core.PlanDefinition.Action.DynamicValue
 */
export class PlanDefinition_Action_DynamicValue extends Message<PlanDefinition_Action_DynamicValue> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The path to the element to be set dynamically
   *
   * @generated from field: google.fhir.r4.core.String path = 4;
   */
  path?: String;

  /**
   * An expression that provides the dynamic value for the customization
   *
   * @generated from field: google.fhir.r4.core.Expression expression = 5;
   */
  expression?: Expression;

  constructor(data?: PartialMessage<PlanDefinition_Action_DynamicValue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PlanDefinition.Action.DynamicValue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "path", kind: "message", T: String },
    { no: 5, name: "expression", kind: "message", T: Expression },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlanDefinition_Action_DynamicValue {
    return new PlanDefinition_Action_DynamicValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlanDefinition_Action_DynamicValue {
    return new PlanDefinition_Action_DynamicValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlanDefinition_Action_DynamicValue {
    return new PlanDefinition_Action_DynamicValue().fromJsonString(jsonString, options);
  }

  static equals(a: PlanDefinition_Action_DynamicValue | PlainMessage<PlanDefinition_Action_DynamicValue> | undefined, b: PlanDefinition_Action_DynamicValue | PlainMessage<PlanDefinition_Action_DynamicValue> | undefined): boolean {
    return proto3.util.equals(PlanDefinition_Action_DynamicValue, a, b);
  }
}

