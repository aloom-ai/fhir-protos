//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/payment_reconciliation.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, Date, DateTime, Extension, Id, Identifier, Meta, Money, Narrative, Period, Reference, String, Uri } from "../datatypes_pb.js";
import { ClaimProcessingCode_Value, FinancialResourceStatusCode_Value, NoteTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for PaymentReconciliation.
 * PaymentReconciliation resource.
 * See http://hl7.org/fhir/StructureDefinition/PaymentReconciliation
 *
 * @generated from message google.fhir.r4.core.PaymentReconciliation
 */
export class PaymentReconciliation extends Message<PaymentReconciliation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for a payment reconciliation
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.PaymentReconciliation.StatusCode status = 11;
   */
  status?: PaymentReconciliation_StatusCode;

  /**
   * Period covered
   *
   * @generated from field: google.fhir.r4.core.Period period = 12;
   */
  period?: Period;

  /**
   * Creation date
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 13;
   */
  created?: DateTime;

  /**
   * Party generating payment
   *
   * @generated from field: google.fhir.r4.core.Reference payment_issuer = 14;
   */
  paymentIssuer?: Reference;

  /**
   * Reference to requesting resource
   *
   * @generated from field: google.fhir.r4.core.Reference request = 15;
   */
  request?: Reference;

  /**
   * Responsible practitioner
   *
   * @generated from field: google.fhir.r4.core.Reference requestor = 16;
   */
  requestor?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.PaymentReconciliation.OutcomeCode outcome = 17;
   */
  outcome?: PaymentReconciliation_OutcomeCode;

  /**
   * Disposition message
   *
   * @generated from field: google.fhir.r4.core.String disposition = 18;
   */
  disposition?: String;

  /**
   * When payment issued
   *
   * @generated from field: google.fhir.r4.core.Date payment_date = 19;
   */
  paymentDate?: Date;

  /**
   * Total amount of Payment
   *
   * @generated from field: google.fhir.r4.core.Money payment_amount = 20;
   */
  paymentAmount?: Money;

  /**
   * Business identifier for the payment
   *
   * @generated from field: google.fhir.r4.core.Identifier payment_identifier = 21;
   */
  paymentIdentifier?: Identifier;

  /**
   * @generated from field: repeated google.fhir.r4.core.PaymentReconciliation.Details detail = 22;
   */
  detail: PaymentReconciliation_Details[] = [];

  /**
   * Printed form identifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept form_code = 23;
   */
  formCode?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.PaymentReconciliation.Notes process_note = 24;
   */
  processNote: PaymentReconciliation_Notes[] = [];

  constructor(data?: PartialMessage<PaymentReconciliation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PaymentReconciliation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: PaymentReconciliation_StatusCode },
    { no: 12, name: "period", kind: "message", T: Period },
    { no: 13, name: "created", kind: "message", T: DateTime },
    { no: 14, name: "payment_issuer", kind: "message", T: Reference },
    { no: 15, name: "request", kind: "message", T: Reference },
    { no: 16, name: "requestor", kind: "message", T: Reference },
    { no: 17, name: "outcome", kind: "message", T: PaymentReconciliation_OutcomeCode },
    { no: 18, name: "disposition", kind: "message", T: String },
    { no: 19, name: "payment_date", kind: "message", T: Date },
    { no: 20, name: "payment_amount", kind: "message", T: Money },
    { no: 21, name: "payment_identifier", kind: "message", T: Identifier },
    { no: 22, name: "detail", kind: "message", T: PaymentReconciliation_Details, repeated: true },
    { no: 23, name: "form_code", kind: "message", T: CodeableConcept },
    { no: 24, name: "process_note", kind: "message", T: PaymentReconciliation_Notes, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation {
    return new PaymentReconciliation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation {
    return new PaymentReconciliation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation {
    return new PaymentReconciliation().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation | PlainMessage<PaymentReconciliation> | undefined, b: PaymentReconciliation | PlainMessage<PaymentReconciliation> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation, a, b);
  }
}

/**
 * active | cancelled | draft | entered-in-error
 *
 * @generated from message google.fhir.r4.core.PaymentReconciliation.StatusCode
 */
export class PaymentReconciliation_StatusCode extends Message<PaymentReconciliation_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.FinancialResourceStatusCode.Value value = 1;
   */
  value = FinancialResourceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PaymentReconciliation_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PaymentReconciliation.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FinancialResourceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_StatusCode {
    return new PaymentReconciliation_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_StatusCode {
    return new PaymentReconciliation_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_StatusCode {
    return new PaymentReconciliation_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_StatusCode | PlainMessage<PaymentReconciliation_StatusCode> | undefined, b: PaymentReconciliation_StatusCode | PlainMessage<PaymentReconciliation_StatusCode> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_StatusCode, a, b);
  }
}

/**
 * queued | complete | error | partial
 *
 * @generated from message google.fhir.r4.core.PaymentReconciliation.OutcomeCode
 */
export class PaymentReconciliation_OutcomeCode extends Message<PaymentReconciliation_OutcomeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ClaimProcessingCode.Value value = 1;
   */
  value = ClaimProcessingCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PaymentReconciliation_OutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PaymentReconciliation.OutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ClaimProcessingCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_OutcomeCode {
    return new PaymentReconciliation_OutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_OutcomeCode {
    return new PaymentReconciliation_OutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_OutcomeCode {
    return new PaymentReconciliation_OutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_OutcomeCode | PlainMessage<PaymentReconciliation_OutcomeCode> | undefined, b: PaymentReconciliation_OutcomeCode | PlainMessage<PaymentReconciliation_OutcomeCode> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_OutcomeCode, a, b);
  }
}

/**
 * Settlement particulars
 *
 * @generated from message google.fhir.r4.core.PaymentReconciliation.Details
 */
export class PaymentReconciliation_Details extends Message<PaymentReconciliation_Details> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier of the payment detail
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 4;
   */
  identifier?: Identifier;

  /**
   * Business identifier of the prior payment detail
   *
   * @generated from field: google.fhir.r4.core.Identifier predecessor = 5;
   */
  predecessor?: Identifier;

  /**
   * Category of payment
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 6;
   */
  type?: CodeableConcept;

  /**
   * Request giving rise to the payment
   *
   * @generated from field: google.fhir.r4.core.Reference request = 7;
   */
  request?: Reference;

  /**
   * Submitter of the request
   *
   * @generated from field: google.fhir.r4.core.Reference submitter = 8;
   */
  submitter?: Reference;

  /**
   * Response committing to a payment
   *
   * @generated from field: google.fhir.r4.core.Reference response = 9;
   */
  response?: Reference;

  /**
   * Date of commitment to pay
   *
   * @generated from field: google.fhir.r4.core.Date date = 10;
   */
  date?: Date;

  /**
   * Contact for the response
   *
   * @generated from field: google.fhir.r4.core.Reference responsible = 11;
   */
  responsible?: Reference;

  /**
   * Recipient of the payment
   *
   * @generated from field: google.fhir.r4.core.Reference payee = 12;
   */
  payee?: Reference;

  /**
   * Amount allocated to this payable
   *
   * @generated from field: google.fhir.r4.core.Money amount = 13;
   */
  amount?: Money;

  constructor(data?: PartialMessage<PaymentReconciliation_Details>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PaymentReconciliation.Details";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "identifier", kind: "message", T: Identifier },
    { no: 5, name: "predecessor", kind: "message", T: Identifier },
    { no: 6, name: "type", kind: "message", T: CodeableConcept },
    { no: 7, name: "request", kind: "message", T: Reference },
    { no: 8, name: "submitter", kind: "message", T: Reference },
    { no: 9, name: "response", kind: "message", T: Reference },
    { no: 10, name: "date", kind: "message", T: Date },
    { no: 11, name: "responsible", kind: "message", T: Reference },
    { no: 12, name: "payee", kind: "message", T: Reference },
    { no: 13, name: "amount", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_Details {
    return new PaymentReconciliation_Details().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_Details {
    return new PaymentReconciliation_Details().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_Details {
    return new PaymentReconciliation_Details().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_Details | PlainMessage<PaymentReconciliation_Details> | undefined, b: PaymentReconciliation_Details | PlainMessage<PaymentReconciliation_Details> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_Details, a, b);
  }
}

/**
 * Note concerning processing
 *
 * @generated from message google.fhir.r4.core.PaymentReconciliation.Notes
 */
export class PaymentReconciliation_Notes extends Message<PaymentReconciliation_Notes> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.PaymentReconciliation.Notes.TypeCode type = 4;
   */
  type?: PaymentReconciliation_Notes_TypeCode;

  /**
   * Note explanatory text
   *
   * @generated from field: google.fhir.r4.core.String text = 5;
   */
  text?: String;

  constructor(data?: PartialMessage<PaymentReconciliation_Notes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PaymentReconciliation.Notes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: PaymentReconciliation_Notes_TypeCode },
    { no: 5, name: "text", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_Notes {
    return new PaymentReconciliation_Notes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_Notes {
    return new PaymentReconciliation_Notes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_Notes {
    return new PaymentReconciliation_Notes().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_Notes | PlainMessage<PaymentReconciliation_Notes> | undefined, b: PaymentReconciliation_Notes | PlainMessage<PaymentReconciliation_Notes> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_Notes, a, b);
  }
}

/**
 * display | print | printoper
 *
 * @generated from message google.fhir.r4.core.PaymentReconciliation.Notes.TypeCode
 */
export class PaymentReconciliation_Notes_TypeCode extends Message<PaymentReconciliation_Notes_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.NoteTypeCode.Value value = 1;
   */
  value = NoteTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<PaymentReconciliation_Notes_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PaymentReconciliation.Notes.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(NoteTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentReconciliation_Notes_TypeCode {
    return new PaymentReconciliation_Notes_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentReconciliation_Notes_TypeCode {
    return new PaymentReconciliation_Notes_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentReconciliation_Notes_TypeCode {
    return new PaymentReconciliation_Notes_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PaymentReconciliation_Notes_TypeCode | PlainMessage<PaymentReconciliation_Notes_TypeCode> | undefined, b: PaymentReconciliation_Notes_TypeCode | PlainMessage<PaymentReconciliation_Notes_TypeCode> | undefined): boolean {
    return proto3.util.equals(PaymentReconciliation_Notes_TypeCode, a, b);
  }
}

