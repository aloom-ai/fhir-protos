//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/person.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Attachment, Boolean, Code, ContactPoint, Date, Extension, HumanName, Id, Identifier, Meta, Narrative, Reference, String, Uri } from "../datatypes_pb.js";
import { AdministrativeGenderCode_Value, IdentityAssuranceLevelCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Person.
 * A generic person record.
 * See http://hl7.org/fhir/StructureDefinition/Person
 *
 * @generated from message google.fhir.r4.core.Person
 */
export class Person extends Message<Person> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * A human identifier for this person
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * A name associated with the person
   *
   * @generated from field: repeated google.fhir.r4.core.HumanName name = 11;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 12;
   */
  telecom: ContactPoint[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Person.GenderCode gender = 13;
   */
  gender?: Person_GenderCode;

  /**
   * The date on which the person was born
   *
   * @generated from field: google.fhir.r4.core.Date birth_date = 14;
   */
  birthDate?: Date;

  /**
   * One or more addresses for the person
   *
   * @generated from field: repeated google.fhir.r4.core.Address address = 15;
   */
  address: Address[] = [];

  /**
   * Image of the person
   *
   * @generated from field: google.fhir.r4.core.Attachment photo = 16;
   */
  photo?: Attachment;

  /**
   * The organization that is the custodian of the person record
   *
   * @generated from field: google.fhir.r4.core.Reference managing_organization = 17;
   */
  managingOrganization?: Reference;

  /**
   * This person's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 18;
   */
  active?: Boolean;

  /**
   * @generated from field: repeated google.fhir.r4.core.Person.Link link = 19;
   */
  link: Person_Link[] = [];

  constructor(data?: PartialMessage<Person>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Person";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 12, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 13, name: "gender", kind: "message", T: Person_GenderCode },
    { no: 14, name: "birth_date", kind: "message", T: Date },
    { no: 15, name: "address", kind: "message", T: Address, repeated: true },
    { no: 16, name: "photo", kind: "message", T: Attachment },
    { no: 17, name: "managing_organization", kind: "message", T: Reference },
    { no: 18, name: "active", kind: "message", T: Boolean },
    { no: 19, name: "link", kind: "message", T: Person_Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person {
    return new Person().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person {
    return new Person().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person {
    return new Person().fromJsonString(jsonString, options);
  }

  static equals(a: Person | PlainMessage<Person> | undefined, b: Person | PlainMessage<Person> | undefined): boolean {
    return proto3.util.equals(Person, a, b);
  }
}

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.core.Person.GenderCode
 */
export class Person_GenderCode extends Message<Person_GenderCode> {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value = AdministrativeGenderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Person_GenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Person.GenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdministrativeGenderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person_GenderCode {
    return new Person_GenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person_GenderCode {
    return new Person_GenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person_GenderCode {
    return new Person_GenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: Person_GenderCode | PlainMessage<Person_GenderCode> | undefined, b: Person_GenderCode | PlainMessage<Person_GenderCode> | undefined): boolean {
    return proto3.util.equals(Person_GenderCode, a, b);
  }
}

/**
 * Link to a resource that concerns the same actual person
 *
 * @generated from message google.fhir.r4.core.Person.Link
 */
export class Person_Link extends Message<Person_Link> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The resource to which this actual person is associated
   *
   * @generated from field: google.fhir.r4.core.Reference target = 4;
   */
  target?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Person.Link.AssuranceCode assurance = 5;
   */
  assurance?: Person_Link_AssuranceCode;

  constructor(data?: PartialMessage<Person_Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Person.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "target", kind: "message", T: Reference },
    { no: 5, name: "assurance", kind: "message", T: Person_Link_AssuranceCode },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person_Link {
    return new Person_Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person_Link {
    return new Person_Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person_Link {
    return new Person_Link().fromJsonString(jsonString, options);
  }

  static equals(a: Person_Link | PlainMessage<Person_Link> | undefined, b: Person_Link | PlainMessage<Person_Link> | undefined): boolean {
    return proto3.util.equals(Person_Link, a, b);
  }
}

/**
 * level1 | level2 | level3 | level4
 *
 * @generated from message google.fhir.r4.core.Person.Link.AssuranceCode
 */
export class Person_Link_AssuranceCode extends Message<Person_Link_AssuranceCode> {
  /**
   * @generated from field: google.fhir.r4.core.IdentityAssuranceLevelCode.Value value = 1;
   */
  value = IdentityAssuranceLevelCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Person_Link_AssuranceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Person.Link.AssuranceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(IdentityAssuranceLevelCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Person_Link_AssuranceCode {
    return new Person_Link_AssuranceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Person_Link_AssuranceCode {
    return new Person_Link_AssuranceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Person_Link_AssuranceCode {
    return new Person_Link_AssuranceCode().fromJsonString(jsonString, options);
  }

  static equals(a: Person_Link_AssuranceCode | PlainMessage<Person_Link_AssuranceCode> | undefined, b: Person_Link_AssuranceCode | PlainMessage<Person_Link_AssuranceCode> | undefined): boolean {
    return proto3.util.equals(Person_Link_AssuranceCode, a, b);
  }
}

