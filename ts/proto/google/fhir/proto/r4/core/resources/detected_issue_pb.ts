//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/detected_issue.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb.js";
import { DetectedIssueSeverityCode_Value, ObservationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for DetectedIssue.
 * Clinical issue with action.
 * See http://hl7.org/fhir/StructureDefinition/DetectedIssue
 *
 * @generated from message google.fhir.r4.core.DetectedIssue
 */
export class DetectedIssue extends Message<DetectedIssue> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id for the detected issue
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DetectedIssue.StatusCode status = 11;
   */
  status?: DetectedIssue_StatusCode;

  /**
   * Issue Category, e.g. drug-drug, duplicate therapy, etc.
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 12;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.DetectedIssue.SeverityCode severity = 13;
   */
  severity?: DetectedIssue_SeverityCode;

  /**
   * Associated patient
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.DetectedIssue.IdentifiedX identified = 15;
   */
  identified?: DetectedIssue_IdentifiedX;

  /**
   * The provider or device that identified the issue
   *
   * @generated from field: google.fhir.r4.core.Reference author = 16;
   */
  author?: Reference;

  /**
   * Problem resource
   *
   * @generated from field: repeated google.fhir.r4.core.Reference implicated = 17;
   */
  implicated: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.DetectedIssue.Evidence evidence = 18;
   */
  evidence: DetectedIssue_Evidence[] = [];

  /**
   * Description and context
   *
   * @generated from field: google.fhir.r4.core.String detail = 19;
   */
  detail?: String;

  /**
   * Authority for issue
   *
   * @generated from field: google.fhir.r4.core.Uri reference = 20;
   */
  reference?: Uri;

  /**
   * @generated from field: repeated google.fhir.r4.core.DetectedIssue.Mitigation mitigation = 21;
   */
  mitigation: DetectedIssue_Mitigation[] = [];

  constructor(data?: PartialMessage<DetectedIssue>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssue";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: DetectedIssue_StatusCode },
    { no: 12, name: "code", kind: "message", T: CodeableConcept },
    { no: 13, name: "severity", kind: "message", T: DetectedIssue_SeverityCode },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "identified", kind: "message", T: DetectedIssue_IdentifiedX },
    { no: 16, name: "author", kind: "message", T: Reference },
    { no: 17, name: "implicated", kind: "message", T: Reference, repeated: true },
    { no: 18, name: "evidence", kind: "message", T: DetectedIssue_Evidence, repeated: true },
    { no: 19, name: "detail", kind: "message", T: String },
    { no: 20, name: "reference", kind: "message", T: Uri },
    { no: 21, name: "mitigation", kind: "message", T: DetectedIssue_Mitigation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue {
    return new DetectedIssue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue {
    return new DetectedIssue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue {
    return new DetectedIssue().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue | PlainMessage<DetectedIssue> | undefined, b: DetectedIssue | PlainMessage<DetectedIssue> | undefined): boolean {
    return proto3.util.equals(DetectedIssue, a, b);
  }
}

/**
 * registered | preliminary | final | amended +
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.StatusCode
 */
export class DetectedIssue_StatusCode extends Message<DetectedIssue_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ObservationStatusCode.Value value = 1;
   */
  value = ObservationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DetectedIssue_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssue.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ObservationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue_StatusCode {
    return new DetectedIssue_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue_StatusCode {
    return new DetectedIssue_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue_StatusCode {
    return new DetectedIssue_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue_StatusCode | PlainMessage<DetectedIssue_StatusCode> | undefined, b: DetectedIssue_StatusCode | PlainMessage<DetectedIssue_StatusCode> | undefined): boolean {
    return proto3.util.equals(DetectedIssue_StatusCode, a, b);
  }
}

/**
 * high | moderate | low
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.SeverityCode
 */
export class DetectedIssue_SeverityCode extends Message<DetectedIssue_SeverityCode> {
  /**
   * @generated from field: google.fhir.r4.core.DetectedIssueSeverityCode.Value value = 1;
   */
  value = DetectedIssueSeverityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DetectedIssue_SeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssue.SeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DetectedIssueSeverityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue_SeverityCode {
    return new DetectedIssue_SeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue_SeverityCode {
    return new DetectedIssue_SeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue_SeverityCode {
    return new DetectedIssue_SeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue_SeverityCode | PlainMessage<DetectedIssue_SeverityCode> | undefined, b: DetectedIssue_SeverityCode | PlainMessage<DetectedIssue_SeverityCode> | undefined): boolean {
    return proto3.util.equals(DetectedIssue_SeverityCode, a, b);
  }
}

/**
 * When identified
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.IdentifiedX
 */
export class DetectedIssue_IdentifiedX extends Message<DetectedIssue_IdentifiedX> {
  /**
   * @generated from oneof google.fhir.r4.core.DetectedIssue.IdentifiedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DetectedIssue_IdentifiedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssue.IdentifiedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue_IdentifiedX {
    return new DetectedIssue_IdentifiedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue_IdentifiedX {
    return new DetectedIssue_IdentifiedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue_IdentifiedX {
    return new DetectedIssue_IdentifiedX().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue_IdentifiedX | PlainMessage<DetectedIssue_IdentifiedX> | undefined, b: DetectedIssue_IdentifiedX | PlainMessage<DetectedIssue_IdentifiedX> | undefined): boolean {
    return proto3.util.equals(DetectedIssue_IdentifiedX, a, b);
  }
}

/**
 * Supporting evidence
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.Evidence
 */
export class DetectedIssue_Evidence extends Message<DetectedIssue_Evidence> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Manifestation
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept code = 4;
   */
  code: CodeableConcept[] = [];

  /**
   * Supporting information
   *
   * @generated from field: repeated google.fhir.r4.core.Reference detail = 5;
   */
  detail: Reference[] = [];

  constructor(data?: PartialMessage<DetectedIssue_Evidence>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssue.Evidence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "detail", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue_Evidence {
    return new DetectedIssue_Evidence().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue_Evidence {
    return new DetectedIssue_Evidence().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue_Evidence {
    return new DetectedIssue_Evidence().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue_Evidence | PlainMessage<DetectedIssue_Evidence> | undefined, b: DetectedIssue_Evidence | PlainMessage<DetectedIssue_Evidence> | undefined): boolean {
    return proto3.util.equals(DetectedIssue_Evidence, a, b);
  }
}

/**
 * Step taken to address
 *
 * @generated from message google.fhir.r4.core.DetectedIssue.Mitigation
 */
export class DetectedIssue_Mitigation extends Message<DetectedIssue_Mitigation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What mitigation?
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept action = 4;
   */
  action?: CodeableConcept;

  /**
   * Date committed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 5;
   */
  date?: DateTime;

  /**
   * Who is committing?
   *
   * @generated from field: google.fhir.r4.core.Reference author = 6;
   */
  author?: Reference;

  constructor(data?: PartialMessage<DetectedIssue_Mitigation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssue.Mitigation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: CodeableConcept },
    { no: 5, name: "date", kind: "message", T: DateTime },
    { no: 6, name: "author", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssue_Mitigation {
    return new DetectedIssue_Mitigation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssue_Mitigation {
    return new DetectedIssue_Mitigation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssue_Mitigation {
    return new DetectedIssue_Mitigation().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssue_Mitigation | PlainMessage<DetectedIssue_Mitigation> | undefined, b: DetectedIssue_Mitigation | PlainMessage<DetectedIssue_Mitigation> | undefined): boolean {
    return proto3.util.equals(DetectedIssue_Mitigation, a, b);
  }
}

