//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/task.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Age, Annotation, Attachment, Base64Binary, Boolean, Canonical, Code, CodeableConcept, Coding, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, Date, DateTime, Decimal, Distance, Dosage, Duration, Expression, Extension, HumanName, Id, Identifier, Instant, Integer, Markdown, Meta, Money, Narrative, Oid, ParameterDefinition, Period, PositiveInt, Quantity, Range, Ratio, Reference, RelatedArtifact, SampledData, Signature, String, Time, Timing, TriggerDefinition, UnsignedInt, Uri, Url, UsageContext, Uuid } from "../datatypes_pb.js";
import { RequestPriorityCode_Value, TaskStatusCode_Value } from "../codes_pb.js";
import { TaskIntentValueSet_Value } from "../valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for Task.
 * A task to be performed.
 * See http://hl7.org/fhir/StructureDefinition/Task
 *
 * @generated from message google.fhir.r4.core.Task
 */
export class Task extends Message<Task> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Task Instance Identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Formal definition of task
   *
   * @generated from field: google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical?: Canonical;

  /**
   * Formal definition of task
   *
   * @generated from field: google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri?: Uri;

  /**
   * Request fulfilled by this task
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[] = [];

  /**
   * Requisition or grouper id
   *
   * @generated from field: google.fhir.r4.core.Identifier group_identifier = 14;
   */
  groupIdentifier?: Identifier;

  /**
   * Composite task
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 15;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Task.StatusCode status = 16;
   */
  status?: Task_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 17;
   */
  statusReason?: CodeableConcept;

  /**
   * E.g. "Specimen collected", "IV prepped"
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept business_status = 18;
   */
  businessStatus?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Task.IntentCode intent = 19;
   */
  intent?: Task_IntentCode;

  /**
   * @generated from field: google.fhir.r4.core.Task.PriorityCode priority = 20;
   */
  priority?: Task_PriorityCode;

  /**
   * Task Type
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 21;
   */
  code?: CodeableConcept;

  /**
   * Human-readable explanation of task
   *
   * @generated from field: google.fhir.r4.core.String description = 22;
   */
  description?: String;

  /**
   * What task is acting on
   *
   * @generated from field: google.fhir.r4.core.Reference focus = 23;
   */
  focus?: Reference;

  /**
   * Beneficiary of the Task
   *
   * @generated from field: google.fhir.r4.core.Reference for_value = 24 [json_name = "for"];
   */
  forValue?: Reference;

  /**
   * Healthcare event during which this task originated
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 25;
   */
  encounter?: Reference;

  /**
   * Start and end time of execution
   *
   * @generated from field: google.fhir.r4.core.Period execution_period = 26;
   */
  executionPeriod?: Period;

  /**
   * Task Creation Date
   *
   * @generated from field: google.fhir.r4.core.DateTime authored_on = 27;
   */
  authoredOn?: DateTime;

  /**
   * Task Last Modified Date
   *
   * @generated from field: google.fhir.r4.core.DateTime last_modified = 28;
   */
  lastModified?: DateTime;

  /**
   * Who is asking for task to be done
   *
   * @generated from field: google.fhir.r4.core.Reference requester = 29;
   */
  requester?: Reference;

  /**
   * Requested performer
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept performer_type = 30;
   */
  performerType: CodeableConcept[] = [];

  /**
   * Responsible individual
   *
   * @generated from field: google.fhir.r4.core.Reference owner = 31;
   */
  owner?: Reference;

  /**
   * Where task occurs
   *
   * @generated from field: google.fhir.r4.core.Reference location = 32;
   */
  location?: Reference;

  /**
   * Why task is needed
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept reason_code = 33;
   */
  reasonCode?: CodeableConcept;

  /**
   * Why task is needed
   *
   * @generated from field: google.fhir.r4.core.Reference reason_reference = 34;
   */
  reasonReference?: Reference;

  /**
   * Associated insurance coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference insurance = 35;
   */
  insurance: Reference[] = [];

  /**
   * Comments made about the task
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 36;
   */
  note: Annotation[] = [];

  /**
   * Key events in history of the Task
   *
   * @generated from field: repeated google.fhir.r4.core.Reference relevant_history = 37;
   */
  relevantHistory: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Task.Restriction restriction = 38;
   */
  restriction?: Task_Restriction;

  /**
   * @generated from field: repeated google.fhir.r4.core.Task.Parameter input = 39;
   */
  input: Task_Parameter[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.Task.Output output = 40;
   */
  output: Task_Output[] = [];

  constructor(data?: PartialMessage<Task>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates_canonical", kind: "message", T: Canonical },
    { no: 12, name: "instantiates_uri", kind: "message", T: Uri },
    { no: 13, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "group_identifier", kind: "message", T: Identifier },
    { no: 15, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "status", kind: "message", T: Task_StatusCode },
    { no: 17, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 18, name: "business_status", kind: "message", T: CodeableConcept },
    { no: 19, name: "intent", kind: "message", T: Task_IntentCode },
    { no: 20, name: "priority", kind: "message", T: Task_PriorityCode },
    { no: 21, name: "code", kind: "message", T: CodeableConcept },
    { no: 22, name: "description", kind: "message", T: String },
    { no: 23, name: "focus", kind: "message", T: Reference },
    { no: 24, name: "for_value", jsonName: "for", kind: "message", T: Reference },
    { no: 25, name: "encounter", kind: "message", T: Reference },
    { no: 26, name: "execution_period", kind: "message", T: Period },
    { no: 27, name: "authored_on", kind: "message", T: DateTime },
    { no: 28, name: "last_modified", kind: "message", T: DateTime },
    { no: 29, name: "requester", kind: "message", T: Reference },
    { no: 30, name: "performer_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 31, name: "owner", kind: "message", T: Reference },
    { no: 32, name: "location", kind: "message", T: Reference },
    { no: 33, name: "reason_code", kind: "message", T: CodeableConcept },
    { no: 34, name: "reason_reference", kind: "message", T: Reference },
    { no: 35, name: "insurance", kind: "message", T: Reference, repeated: true },
    { no: 36, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 37, name: "relevant_history", kind: "message", T: Reference, repeated: true },
    { no: 38, name: "restriction", kind: "message", T: Task_Restriction },
    { no: 39, name: "input", kind: "message", T: Task_Parameter, repeated: true },
    { no: 40, name: "output", kind: "message", T: Task_Output, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task {
    return new Task().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task {
    return new Task().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task {
    return new Task().fromJsonString(jsonString, options);
  }

  static equals(a: Task | PlainMessage<Task> | undefined, b: Task | PlainMessage<Task> | undefined): boolean {
    return proto3.util.equals(Task, a, b);
  }
}

/**
 * draft | requested | received | accepted | +
 *
 * @generated from message google.fhir.r4.core.Task.StatusCode
 */
export class Task_StatusCode extends Message<Task_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.TaskStatusCode.Value value = 1;
   */
  value = TaskStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Task_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TaskStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_StatusCode {
    return new Task_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_StatusCode {
    return new Task_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_StatusCode {
    return new Task_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: Task_StatusCode | PlainMessage<Task_StatusCode> | undefined, b: Task_StatusCode | PlainMessage<Task_StatusCode> | undefined): boolean {
    return proto3.util.equals(Task_StatusCode, a, b);
  }
}

/**
 * unknown | proposal | plan | order | original-order | reflex-order |
 * filler-order | instance-order | option
 *
 * @generated from message google.fhir.r4.core.Task.IntentCode
 */
export class Task_IntentCode extends Message<Task_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.TaskIntentValueSet.Value value = 1;
   */
  value = TaskIntentValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Task_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TaskIntentValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_IntentCode {
    return new Task_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_IntentCode {
    return new Task_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_IntentCode {
    return new Task_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: Task_IntentCode | PlainMessage<Task_IntentCode> | undefined, b: Task_IntentCode | PlainMessage<Task_IntentCode> | undefined): boolean {
    return proto3.util.equals(Task_IntentCode, a, b);
  }
}

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.core.Task.PriorityCode
 */
export class Task_PriorityCode extends Message<Task_PriorityCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Task_PriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.PriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_PriorityCode {
    return new Task_PriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_PriorityCode {
    return new Task_PriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_PriorityCode {
    return new Task_PriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: Task_PriorityCode | PlainMessage<Task_PriorityCode> | undefined, b: Task_PriorityCode | PlainMessage<Task_PriorityCode> | undefined): boolean {
    return proto3.util.equals(Task_PriorityCode, a, b);
  }
}

/**
 * Constraints on fulfillment tasks
 *
 * @generated from message google.fhir.r4.core.Task.Restriction
 */
export class Task_Restriction extends Message<Task_Restriction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * How many times to repeat
   *
   * @generated from field: google.fhir.r4.core.PositiveInt repetitions = 4;
   */
  repetitions?: PositiveInt;

  /**
   * When fulfillment sought
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  /**
   * For whom is fulfillment sought?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference recipient = 6;
   */
  recipient: Reference[] = [];

  constructor(data?: PartialMessage<Task_Restriction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.Restriction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "repetitions", kind: "message", T: PositiveInt },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "recipient", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Restriction {
    return new Task_Restriction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Restriction {
    return new Task_Restriction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Restriction {
    return new Task_Restriction().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Restriction | PlainMessage<Task_Restriction> | undefined, b: Task_Restriction | PlainMessage<Task_Restriction> | undefined): boolean {
    return proto3.util.equals(Task_Restriction, a, b);
  }
}

/**
 * Information used to perform task
 *
 * @generated from message google.fhir.r4.core.Task.Parameter
 */
export class Task_Parameter extends Message<Task_Parameter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for the input
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Task.Parameter.ValueX value = 5;
   */
  value?: Task_Parameter_ValueX;

  constructor(data?: PartialMessage<Task_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Task_Parameter_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Parameter {
    return new Task_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Parameter {
    return new Task_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Parameter {
    return new Task_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Parameter | PlainMessage<Task_Parameter> | undefined, b: Task_Parameter | PlainMessage<Task_Parameter> | undefined): boolean {
    return proto3.util.equals(Task_Parameter, a, b);
  }
}

/**
 * Content to use in performing the task
 *
 * @generated from message google.fhir.r4.core.Task.Parameter.ValueX
 */
export class Task_Parameter_ValueX extends Message<Task_Parameter_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.Task.Parameter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Task_Parameter_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.Parameter.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Parameter_ValueX {
    return new Task_Parameter_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Parameter_ValueX {
    return new Task_Parameter_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Parameter_ValueX {
    return new Task_Parameter_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Parameter_ValueX | PlainMessage<Task_Parameter_ValueX> | undefined, b: Task_Parameter_ValueX | PlainMessage<Task_Parameter_ValueX> | undefined): boolean {
    return proto3.util.equals(Task_Parameter_ValueX, a, b);
  }
}

/**
 * Information produced as part of task
 *
 * @generated from message google.fhir.r4.core.Task.Output
 */
export class Task_Output extends Message<Task_Output> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Label for output
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Task.Output.ValueX value = 5;
   */
  value?: Task_Output_ValueX;

  constructor(data?: PartialMessage<Task_Output>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.Output";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Task_Output_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Output {
    return new Task_Output().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Output {
    return new Task_Output().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Output {
    return new Task_Output().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Output | PlainMessage<Task_Output> | undefined, b: Task_Output | PlainMessage<Task_Output> | undefined): boolean {
    return proto3.util.equals(Task_Output, a, b);
  }
}

/**
 * Result of output
 *
 * @generated from message google.fhir.r4.core.Task.Output.ValueX
 */
export class Task_Output_ValueX extends Message<Task_Output_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.Task.Output.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Base64Binary base64_binary = 1;
     */
    value: Base64Binary;
    case: "base64Binary";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Canonical canonical = 3;
     */
    value: Canonical;
    case: "canonical";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Code code = 4;
     */
    value: Code;
    case: "code";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 5;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 6;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Decimal decimal = 7;
     */
    value: Decimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Id id = 8;
     */
    value: Id;
    case: "id";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Instant instant = 9;
     */
    value: Instant;
    case: "instant";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Integer integer = 10;
     */
    value: Integer;
    case: "integer";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Markdown markdown = 11;
     */
    value: Markdown;
    case: "markdown";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Oid oid = 12;
     */
    value: Oid;
    case: "oid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 13;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 14 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Time time = 15;
     */
    value: Time;
    case: "time";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 16;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uri uri = 17;
     */
    value: Uri;
    case: "uri";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Url url = 18;
     */
    value: Url;
    case: "url";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Uuid uuid = 19;
     */
    value: Uuid;
    case: "uuid";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Address address = 20;
     */
    value: Address;
    case: "address";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Age age = 21;
     */
    value: Age;
    case: "age";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Annotation annotation = 22;
     */
    value: Annotation;
    case: "annotation";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Attachment attachment = 23;
     */
    value: Attachment;
    case: "attachment";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 24;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Coding coding = 25;
     */
    value: Coding;
    case: "coding";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactPoint contact_point = 26;
     */
    value: ContactPoint;
    case: "contactPoint";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Count count = 27;
     */
    value: Count;
    case: "count";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Distance distance = 28;
     */
    value: Distance;
    case: "distance";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Duration duration = 29;
     */
    value: Duration;
    case: "duration";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.HumanName human_name = 30;
     */
    value: HumanName;
    case: "humanName";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Identifier identifier = 31;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 32;
     */
    value: Money;
    case: "money";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 33;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 34;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 35;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 36;
     */
    value: Ratio;
    case: "ratio";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 37;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.SampledData sampled_data = 38;
     */
    value: SampledData;
    case: "sampledData";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Signature signature = 39;
     */
    value: Signature;
    case: "signature";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 40;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ContactDetail contact_detail = 41;
     */
    value: ContactDetail;
    case: "contactDetail";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Contributor contributor = 42;
     */
    value: Contributor;
    case: "contributor";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DataRequirement data_requirement = 43;
     */
    value: DataRequirement;
    case: "dataRequirement";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Expression expression = 44;
     */
    value: Expression;
    case: "expression";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.ParameterDefinition parameter_definition = 45;
     */
    value: ParameterDefinition;
    case: "parameterDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.RelatedArtifact related_artifact = 46;
     */
    value: RelatedArtifact;
    case: "relatedArtifact";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.TriggerDefinition trigger_definition = 47;
     */
    value: TriggerDefinition;
    case: "triggerDefinition";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.UsageContext usage_context = 48;
     */
    value: UsageContext;
    case: "usageContext";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Dosage dosage = 49;
     */
    value: Dosage;
    case: "dosage";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Meta meta = 50;
     */
    value: Meta;
    case: "meta";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Task_Output_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Task.Output.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base64_binary", kind: "message", T: Base64Binary, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "canonical", kind: "message", T: Canonical, oneof: "choice" },
    { no: 4, name: "code", kind: "message", T: Code, oneof: "choice" },
    { no: 5, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 6, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 7, name: "decimal", kind: "message", T: Decimal, oneof: "choice" },
    { no: 8, name: "id", kind: "message", T: Id, oneof: "choice" },
    { no: 9, name: "instant", kind: "message", T: Instant, oneof: "choice" },
    { no: 10, name: "integer", kind: "message", T: Integer, oneof: "choice" },
    { no: 11, name: "markdown", kind: "message", T: Markdown, oneof: "choice" },
    { no: 12, name: "oid", kind: "message", T: Oid, oneof: "choice" },
    { no: 13, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 14, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 15, name: "time", kind: "message", T: Time, oneof: "choice" },
    { no: 16, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 17, name: "uri", kind: "message", T: Uri, oneof: "choice" },
    { no: 18, name: "url", kind: "message", T: Url, oneof: "choice" },
    { no: 19, name: "uuid", kind: "message", T: Uuid, oneof: "choice" },
    { no: 20, name: "address", kind: "message", T: Address, oneof: "choice" },
    { no: 21, name: "age", kind: "message", T: Age, oneof: "choice" },
    { no: 22, name: "annotation", kind: "message", T: Annotation, oneof: "choice" },
    { no: 23, name: "attachment", kind: "message", T: Attachment, oneof: "choice" },
    { no: 24, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 25, name: "coding", kind: "message", T: Coding, oneof: "choice" },
    { no: 26, name: "contact_point", kind: "message", T: ContactPoint, oneof: "choice" },
    { no: 27, name: "count", kind: "message", T: Count, oneof: "choice" },
    { no: 28, name: "distance", kind: "message", T: Distance, oneof: "choice" },
    { no: 29, name: "duration", kind: "message", T: Duration, oneof: "choice" },
    { no: 30, name: "human_name", kind: "message", T: HumanName, oneof: "choice" },
    { no: 31, name: "identifier", kind: "message", T: Identifier, oneof: "choice" },
    { no: 32, name: "money", kind: "message", T: Money, oneof: "choice" },
    { no: 33, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 34, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 35, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 36, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
    { no: 37, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 38, name: "sampled_data", kind: "message", T: SampledData, oneof: "choice" },
    { no: 39, name: "signature", kind: "message", T: Signature, oneof: "choice" },
    { no: 40, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 41, name: "contact_detail", kind: "message", T: ContactDetail, oneof: "choice" },
    { no: 42, name: "contributor", kind: "message", T: Contributor, oneof: "choice" },
    { no: 43, name: "data_requirement", kind: "message", T: DataRequirement, oneof: "choice" },
    { no: 44, name: "expression", kind: "message", T: Expression, oneof: "choice" },
    { no: 45, name: "parameter_definition", kind: "message", T: ParameterDefinition, oneof: "choice" },
    { no: 46, name: "related_artifact", kind: "message", T: RelatedArtifact, oneof: "choice" },
    { no: 47, name: "trigger_definition", kind: "message", T: TriggerDefinition, oneof: "choice" },
    { no: 48, name: "usage_context", kind: "message", T: UsageContext, oneof: "choice" },
    { no: 49, name: "dosage", kind: "message", T: Dosage, oneof: "choice" },
    { no: 50, name: "meta", kind: "message", T: Meta, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task_Output_ValueX {
    return new Task_Output_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task_Output_ValueX {
    return new Task_Output_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task_Output_ValueX {
    return new Task_Output_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: Task_Output_ValueX | PlainMessage<Task_Output_ValueX> | undefined, b: Task_Output_ValueX | PlainMessage<Task_Output_ValueX> | undefined): boolean {
    return proto3.util.equals(Task_Output_ValueX, a, b);
  }
}

