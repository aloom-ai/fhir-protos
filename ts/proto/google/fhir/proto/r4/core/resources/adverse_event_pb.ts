//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/adverse_event.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Reference, String, Uri } from "../datatypes_pb.js";
import { AdverseEventActualityCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for AdverseEvent.
 * Medical care, research study or other healthcare event causing physical
 * injury. See http://hl7.org/fhir/StructureDefinition/AdverseEvent
 *
 * @generated from message google.fhir.r4.core.AdverseEvent
 */
export class AdverseEvent extends Message<AdverseEvent> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier for the event
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * @generated from field: google.fhir.r4.core.AdverseEvent.ActualityCode actuality = 11;
   */
  actuality?: AdverseEvent_ActualityCode;

  /**
   * product-problem | product-quality | product-use-error | wrong-dose |
   * incorrect-prescribing-information | wrong-technique |
   * wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time |
   * expired-drug | medical-device-use-error | problem-different-manufacturer |
   * unsafe-physical-environment
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 12;
   */
  category: CodeableConcept[] = [];

  /**
   * Type of the event itself in relation to the subject
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept event = 13;
   */
  event?: CodeableConcept;

  /**
   * Subject impacted by event
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 14;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * When the event occurred
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * When the event was detected
   *
   * @generated from field: google.fhir.r4.core.DateTime detected = 17;
   */
  detected?: DateTime;

  /**
   * When the event was recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded_date = 18;
   */
  recordedDate?: DateTime;

  /**
   * Effect on the subject due to this event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference resulting_condition = 19;
   */
  resultingCondition: Reference[] = [];

  /**
   * Location where adverse event occurred
   *
   * @generated from field: google.fhir.r4.core.Reference location = 20;
   */
  location?: Reference;

  /**
   * Seriousness of the event
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept seriousness = 21;
   */
  seriousness?: CodeableConcept;

  /**
   * mild | moderate | severe
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept severity = 22;
   */
  severity?: CodeableConcept;

  /**
   * resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept outcome = 23;
   */
  outcome?: CodeableConcept;

  /**
   * Who recorded the adverse event
   *
   * @generated from field: google.fhir.r4.core.Reference recorder = 24;
   */
  recorder?: Reference;

  /**
   * Who  was involved in the adverse event or the potential adverse event
   *
   * @generated from field: repeated google.fhir.r4.core.Reference contributor = 25;
   */
  contributor: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.AdverseEvent.SuspectEntity suspect_entity = 26;
   */
  suspectEntity: AdverseEvent_SuspectEntity[] = [];

  /**
   * AdverseEvent.subjectMedicalHistory
   *
   * @generated from field: repeated google.fhir.r4.core.Reference subject_medical_history = 27;
   */
  subjectMedicalHistory: Reference[] = [];

  /**
   * AdverseEvent.referenceDocument
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reference_document = 28;
   */
  referenceDocument: Reference[] = [];

  /**
   * AdverseEvent.study
   *
   * @generated from field: repeated google.fhir.r4.core.Reference study = 29;
   */
  study: Reference[] = [];

  constructor(data?: PartialMessage<AdverseEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "actuality", kind: "message", T: AdverseEvent_ActualityCode },
    { no: 12, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 13, name: "event", kind: "message", T: CodeableConcept },
    { no: 14, name: "subject", kind: "message", T: Reference },
    { no: 15, name: "encounter", kind: "message", T: Reference },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "detected", kind: "message", T: DateTime },
    { no: 18, name: "recorded_date", kind: "message", T: DateTime },
    { no: 19, name: "resulting_condition", kind: "message", T: Reference, repeated: true },
    { no: 20, name: "location", kind: "message", T: Reference },
    { no: 21, name: "seriousness", kind: "message", T: CodeableConcept },
    { no: 22, name: "severity", kind: "message", T: CodeableConcept },
    { no: 23, name: "outcome", kind: "message", T: CodeableConcept },
    { no: 24, name: "recorder", kind: "message", T: Reference },
    { no: 25, name: "contributor", kind: "message", T: Reference, repeated: true },
    { no: 26, name: "suspect_entity", kind: "message", T: AdverseEvent_SuspectEntity, repeated: true },
    { no: 27, name: "subject_medical_history", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "reference_document", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "study", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEvent {
    return new AdverseEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEvent {
    return new AdverseEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEvent {
    return new AdverseEvent().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEvent | PlainMessage<AdverseEvent> | undefined, b: AdverseEvent | PlainMessage<AdverseEvent> | undefined): boolean {
    return proto3.util.equals(AdverseEvent, a, b);
  }
}

/**
 * actual | potential
 *
 * @generated from message google.fhir.r4.core.AdverseEvent.ActualityCode
 */
export class AdverseEvent_ActualityCode extends Message<AdverseEvent_ActualityCode> {
  /**
   * @generated from field: google.fhir.r4.core.AdverseEventActualityCode.Value value = 1;
   */
  value = AdverseEventActualityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<AdverseEvent_ActualityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEvent.ActualityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdverseEventActualityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEvent_ActualityCode {
    return new AdverseEvent_ActualityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEvent_ActualityCode {
    return new AdverseEvent_ActualityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEvent_ActualityCode {
    return new AdverseEvent_ActualityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEvent_ActualityCode | PlainMessage<AdverseEvent_ActualityCode> | undefined, b: AdverseEvent_ActualityCode | PlainMessage<AdverseEvent_ActualityCode> | undefined): boolean {
    return proto3.util.equals(AdverseEvent_ActualityCode, a, b);
  }
}

/**
 * The suspected agent causing the adverse event
 *
 * @generated from message google.fhir.r4.core.AdverseEvent.SuspectEntity
 */
export class AdverseEvent_SuspectEntity extends Message<AdverseEvent_SuspectEntity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Refers to the specific entity that caused the adverse event
   *
   * @generated from field: google.fhir.r4.core.Reference instance = 4;
   */
  instance?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.AdverseEvent.SuspectEntity.Causality causality = 5;
   */
  causality: AdverseEvent_SuspectEntity_Causality[] = [];

  constructor(data?: PartialMessage<AdverseEvent_SuspectEntity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEvent.SuspectEntity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "instance", kind: "message", T: Reference },
    { no: 5, name: "causality", kind: "message", T: AdverseEvent_SuspectEntity_Causality, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEvent_SuspectEntity {
    return new AdverseEvent_SuspectEntity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEvent_SuspectEntity {
    return new AdverseEvent_SuspectEntity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEvent_SuspectEntity {
    return new AdverseEvent_SuspectEntity().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEvent_SuspectEntity | PlainMessage<AdverseEvent_SuspectEntity> | undefined, b: AdverseEvent_SuspectEntity | PlainMessage<AdverseEvent_SuspectEntity> | undefined): boolean {
    return proto3.util.equals(AdverseEvent_SuspectEntity, a, b);
  }
}

/**
 * Information on the possible cause of the event
 *
 * @generated from message google.fhir.r4.core.AdverseEvent.SuspectEntity.Causality
 */
export class AdverseEvent_SuspectEntity_Causality extends Message<AdverseEvent_SuspectEntity_Causality> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Assessment of if the entity caused the event
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept assessment = 4;
   */
  assessment?: CodeableConcept;

  /**
   * AdverseEvent.suspectEntity.causalityProductRelatedness
   *
   * @generated from field: google.fhir.r4.core.String product_relatedness = 5;
   */
  productRelatedness?: String;

  /**
   * AdverseEvent.suspectEntity.causalityAuthor
   *
   * @generated from field: google.fhir.r4.core.Reference author = 6;
   */
  author?: Reference;

  /**
   * ProbabilityScale | Bayesian | Checklist
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept method = 7;
   */
  method?: CodeableConcept;

  constructor(data?: PartialMessage<AdverseEvent_SuspectEntity_Causality>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEvent.SuspectEntity.Causality";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "assessment", kind: "message", T: CodeableConcept },
    { no: 5, name: "product_relatedness", kind: "message", T: String },
    { no: 6, name: "author", kind: "message", T: Reference },
    { no: 7, name: "method", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEvent_SuspectEntity_Causality {
    return new AdverseEvent_SuspectEntity_Causality().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEvent_SuspectEntity_Causality {
    return new AdverseEvent_SuspectEntity_Causality().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEvent_SuspectEntity_Causality {
    return new AdverseEvent_SuspectEntity_Causality().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEvent_SuspectEntity_Causality | PlainMessage<AdverseEvent_SuspectEntity_Causality> | undefined, b: AdverseEvent_SuspectEntity_Causality | PlainMessage<AdverseEvent_SuspectEntity_Causality> | undefined): boolean {
    return proto3.util.equals(AdverseEvent_SuspectEntity_Causality, a, b);
  }
}

