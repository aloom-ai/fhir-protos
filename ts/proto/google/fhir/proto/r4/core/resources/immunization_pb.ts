//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/immunization.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Boolean, Code, CodeableConcept, Date, DateTime, Extension, Id, Identifier, Meta, Narrative, PositiveInt, Reference, SimpleQuantity, String, Uri } from "../datatypes_pb.js";
import { ImmunizationStatusCodesValueSet_Value } from "../valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for Immunization.
 * Immunization event information.
 * See http://hl7.org/fhir/StructureDefinition/Immunization
 *
 * @generated from message google.fhir.r4.core.Immunization
 */
export class Immunization extends Message<Immunization> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Immunization.StatusCode status = 11;
   */
  status?: Immunization_StatusCode;

  /**
   * Reason not done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 12;
   */
  statusReason?: CodeableConcept;

  /**
   * Vaccine product administered
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept vaccine_code = 13;
   */
  vaccineCode?: CodeableConcept;

  /**
   * Who was immunized
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 14;
   */
  patient?: Reference;

  /**
   * Encounter immunization was part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 15;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.Immunization.OccurrenceX occurrence = 16;
   */
  occurrence?: Immunization_OccurrenceX;

  /**
   * When the immunization was first captured in the subject's record
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded = 17;
   */
  recorded?: DateTime;

  /**
   * Indicates context the data was recorded in
   *
   * @generated from field: google.fhir.r4.core.Boolean primary_source = 18;
   */
  primarySource?: Boolean;

  /**
   * Indicates the source of a secondarily reported record
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept report_origin = 19;
   */
  reportOrigin?: CodeableConcept;

  /**
   * Where immunization occurred
   *
   * @generated from field: google.fhir.r4.core.Reference location = 20;
   */
  location?: Reference;

  /**
   * Vaccine manufacturer
   *
   * @generated from field: google.fhir.r4.core.Reference manufacturer = 21;
   */
  manufacturer?: Reference;

  /**
   * Vaccine lot number
   *
   * @generated from field: google.fhir.r4.core.String lot_number = 22;
   */
  lotNumber?: String;

  /**
   * Vaccine expiration date
   *
   * @generated from field: google.fhir.r4.core.Date expiration_date = 23;
   */
  expirationDate?: Date;

  /**
   * Body site vaccine  was administered
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept site = 24;
   */
  site?: CodeableConcept;

  /**
   * How vaccine entered body
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept route = 25;
   */
  route?: CodeableConcept;

  /**
   * Amount of vaccine administered
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity dose_quantity = 26;
   */
  doseQuantity?: SimpleQuantity;

  /**
   * @generated from field: repeated google.fhir.r4.core.Immunization.Performer performer = 27;
   */
  performer: Immunization_Performer[] = [];

  /**
   * Additional immunization notes
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 28;
   */
  note: Annotation[] = [];

  /**
   * Why immunization occurred
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 29;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why immunization occurred
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 30;
   */
  reasonReference: Reference[] = [];

  /**
   * Dose potency
   *
   * @generated from field: google.fhir.r4.core.Boolean is_subpotent = 31;
   */
  isSubpotent?: Boolean;

  /**
   * Reason for being subpotent
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept subpotent_reason = 32;
   */
  subpotentReason: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.Immunization.Education education = 33;
   */
  education: Immunization_Education[] = [];

  /**
   * Patient eligibility for a vaccination program
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept program_eligibility = 34;
   */
  programEligibility: CodeableConcept[] = [];

  /**
   * Funding source for the vaccine
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept funding_source = 35;
   */
  fundingSource?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.Immunization.Reaction reaction = 36;
   */
  reaction: Immunization_Reaction[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.Immunization.ProtocolApplied protocol_applied = 37;
   */
  protocolApplied: Immunization_ProtocolApplied[] = [];

  constructor(data?: PartialMessage<Immunization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: Immunization_StatusCode },
    { no: 12, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 13, name: "vaccine_code", kind: "message", T: CodeableConcept },
    { no: 14, name: "patient", kind: "message", T: Reference },
    { no: 15, name: "encounter", kind: "message", T: Reference },
    { no: 16, name: "occurrence", kind: "message", T: Immunization_OccurrenceX },
    { no: 17, name: "recorded", kind: "message", T: DateTime },
    { no: 18, name: "primary_source", kind: "message", T: Boolean },
    { no: 19, name: "report_origin", kind: "message", T: CodeableConcept },
    { no: 20, name: "location", kind: "message", T: Reference },
    { no: 21, name: "manufacturer", kind: "message", T: Reference },
    { no: 22, name: "lot_number", kind: "message", T: String },
    { no: 23, name: "expiration_date", kind: "message", T: Date },
    { no: 24, name: "site", kind: "message", T: CodeableConcept },
    { no: 25, name: "route", kind: "message", T: CodeableConcept },
    { no: 26, name: "dose_quantity", kind: "message", T: SimpleQuantity },
    { no: 27, name: "performer", kind: "message", T: Immunization_Performer, repeated: true },
    { no: 28, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 29, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 30, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "is_subpotent", kind: "message", T: Boolean },
    { no: 32, name: "subpotent_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 33, name: "education", kind: "message", T: Immunization_Education, repeated: true },
    { no: 34, name: "program_eligibility", kind: "message", T: CodeableConcept, repeated: true },
    { no: 35, name: "funding_source", kind: "message", T: CodeableConcept },
    { no: 36, name: "reaction", kind: "message", T: Immunization_Reaction, repeated: true },
    { no: 37, name: "protocol_applied", kind: "message", T: Immunization_ProtocolApplied, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization {
    return new Immunization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization {
    return new Immunization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization {
    return new Immunization().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization | PlainMessage<Immunization> | undefined, b: Immunization | PlainMessage<Immunization> | undefined): boolean {
    return proto3.util.equals(Immunization, a, b);
  }
}

/**
 * completed | entered-in-error | not-done
 *
 * @generated from message google.fhir.r4.core.Immunization.StatusCode
 */
export class Immunization_StatusCode extends Message<Immunization_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ImmunizationStatusCodesValueSet.Value value = 1;
   */
  value = ImmunizationStatusCodesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Immunization_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationStatusCodesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_StatusCode {
    return new Immunization_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_StatusCode {
    return new Immunization_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_StatusCode {
    return new Immunization_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_StatusCode | PlainMessage<Immunization_StatusCode> | undefined, b: Immunization_StatusCode | PlainMessage<Immunization_StatusCode> | undefined): boolean {
    return proto3.util.equals(Immunization_StatusCode, a, b);
  }
}

/**
 * Vaccine administration date
 *
 * @generated from message google.fhir.r4.core.Immunization.OccurrenceX
 */
export class Immunization_OccurrenceX extends Message<Immunization_OccurrenceX> {
  /**
   * @generated from oneof google.fhir.r4.core.Immunization.OccurrenceX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Immunization_OccurrenceX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.OccurrenceX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_OccurrenceX {
    return new Immunization_OccurrenceX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_OccurrenceX {
    return new Immunization_OccurrenceX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_OccurrenceX {
    return new Immunization_OccurrenceX().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_OccurrenceX | PlainMessage<Immunization_OccurrenceX> | undefined, b: Immunization_OccurrenceX | PlainMessage<Immunization_OccurrenceX> | undefined): boolean {
    return proto3.util.equals(Immunization_OccurrenceX, a, b);
  }
}

/**
 * Who performed event
 *
 * @generated from message google.fhir.r4.core.Immunization.Performer
 */
export class Immunization_Performer extends Message<Immunization_Performer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What type of performance was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * Individual or organization who was performing
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<Immunization_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "function", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_Performer {
    return new Immunization_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_Performer {
    return new Immunization_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_Performer {
    return new Immunization_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_Performer | PlainMessage<Immunization_Performer> | undefined, b: Immunization_Performer | PlainMessage<Immunization_Performer> | undefined): boolean {
    return proto3.util.equals(Immunization_Performer, a, b);
  }
}

/**
 * Educational material presented to patient
 *
 * @generated from message google.fhir.r4.core.Immunization.Education
 */
export class Immunization_Education extends Message<Immunization_Education> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Educational material document identifier
   *
   * @generated from field: google.fhir.r4.core.String document_type = 4;
   */
  documentType?: String;

  /**
   * Educational material reference pointer
   *
   * @generated from field: google.fhir.r4.core.Uri reference = 5;
   */
  reference?: Uri;

  /**
   * Educational material publication date
   *
   * @generated from field: google.fhir.r4.core.DateTime publication_date = 6;
   */
  publicationDate?: DateTime;

  /**
   * Educational material presentation date
   *
   * @generated from field: google.fhir.r4.core.DateTime presentation_date = 7;
   */
  presentationDate?: DateTime;

  constructor(data?: PartialMessage<Immunization_Education>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.Education";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "document_type", kind: "message", T: String },
    { no: 5, name: "reference", kind: "message", T: Uri },
    { no: 6, name: "publication_date", kind: "message", T: DateTime },
    { no: 7, name: "presentation_date", kind: "message", T: DateTime },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_Education {
    return new Immunization_Education().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_Education {
    return new Immunization_Education().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_Education {
    return new Immunization_Education().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_Education | PlainMessage<Immunization_Education> | undefined, b: Immunization_Education | PlainMessage<Immunization_Education> | undefined): boolean {
    return proto3.util.equals(Immunization_Education, a, b);
  }
}

/**
 * Details of a reaction that follows immunization
 *
 * @generated from message google.fhir.r4.core.Immunization.Reaction
 */
export class Immunization_Reaction extends Message<Immunization_Reaction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * When reaction started
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 4;
   */
  date?: DateTime;

  /**
   * Additional information on reaction
   *
   * @generated from field: google.fhir.r4.core.Reference detail = 5;
   */
  detail?: Reference;

  /**
   * Indicates self-reported reaction
   *
   * @generated from field: google.fhir.r4.core.Boolean reported = 6;
   */
  reported?: Boolean;

  constructor(data?: PartialMessage<Immunization_Reaction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.Reaction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "date", kind: "message", T: DateTime },
    { no: 5, name: "detail", kind: "message", T: Reference },
    { no: 6, name: "reported", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_Reaction {
    return new Immunization_Reaction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_Reaction {
    return new Immunization_Reaction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_Reaction {
    return new Immunization_Reaction().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_Reaction | PlainMessage<Immunization_Reaction> | undefined, b: Immunization_Reaction | PlainMessage<Immunization_Reaction> | undefined): boolean {
    return proto3.util.equals(Immunization_Reaction, a, b);
  }
}

/**
 * Protocol followed by the provider
 *
 * @generated from message google.fhir.r4.core.Immunization.ProtocolApplied
 */
export class Immunization_ProtocolApplied extends Message<Immunization_ProtocolApplied> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Name of vaccine series
   *
   * @generated from field: google.fhir.r4.core.String series = 4;
   */
  series?: String;

  /**
   * Who is responsible for publishing the recommendations
   *
   * @generated from field: google.fhir.r4.core.Reference authority = 5;
   */
  authority?: Reference;

  /**
   * Vaccine preventatable disease being targetted
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept target_disease = 6;
   */
  targetDisease: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Immunization.ProtocolApplied.DoseNumberX dose_number = 7;
   */
  doseNumber?: Immunization_ProtocolApplied_DoseNumberX;

  /**
   * @generated from field: google.fhir.r4.core.Immunization.ProtocolApplied.SeriesDosesX series_doses = 8;
   */
  seriesDoses?: Immunization_ProtocolApplied_SeriesDosesX;

  constructor(data?: PartialMessage<Immunization_ProtocolApplied>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.ProtocolApplied";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "series", kind: "message", T: String },
    { no: 5, name: "authority", kind: "message", T: Reference },
    { no: 6, name: "target_disease", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "dose_number", kind: "message", T: Immunization_ProtocolApplied_DoseNumberX },
    { no: 8, name: "series_doses", kind: "message", T: Immunization_ProtocolApplied_SeriesDosesX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_ProtocolApplied {
    return new Immunization_ProtocolApplied().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_ProtocolApplied {
    return new Immunization_ProtocolApplied().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_ProtocolApplied {
    return new Immunization_ProtocolApplied().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_ProtocolApplied | PlainMessage<Immunization_ProtocolApplied> | undefined, b: Immunization_ProtocolApplied | PlainMessage<Immunization_ProtocolApplied> | undefined): boolean {
    return proto3.util.equals(Immunization_ProtocolApplied, a, b);
  }
}

/**
 * Dose number within series
 *
 * @generated from message google.fhir.r4.core.Immunization.ProtocolApplied.DoseNumberX
 */
export class Immunization_ProtocolApplied_DoseNumberX extends Message<Immunization_ProtocolApplied_DoseNumberX> {
  /**
   * @generated from oneof google.fhir.r4.core.Immunization.ProtocolApplied.DoseNumberX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Immunization_ProtocolApplied_DoseNumberX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.ProtocolApplied.DoseNumberX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_ProtocolApplied_DoseNumberX {
    return new Immunization_ProtocolApplied_DoseNumberX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_ProtocolApplied_DoseNumberX {
    return new Immunization_ProtocolApplied_DoseNumberX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_ProtocolApplied_DoseNumberX {
    return new Immunization_ProtocolApplied_DoseNumberX().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_ProtocolApplied_DoseNumberX | PlainMessage<Immunization_ProtocolApplied_DoseNumberX> | undefined, b: Immunization_ProtocolApplied_DoseNumberX | PlainMessage<Immunization_ProtocolApplied_DoseNumberX> | undefined): boolean {
    return proto3.util.equals(Immunization_ProtocolApplied_DoseNumberX, a, b);
  }
}

/**
 * Recommended number of doses for immunity
 *
 * @generated from message google.fhir.r4.core.Immunization.ProtocolApplied.SeriesDosesX
 */
export class Immunization_ProtocolApplied_SeriesDosesX extends Message<Immunization_ProtocolApplied_SeriesDosesX> {
  /**
   * @generated from oneof google.fhir.r4.core.Immunization.ProtocolApplied.SeriesDosesX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Immunization_ProtocolApplied_SeriesDosesX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Immunization.ProtocolApplied.SeriesDosesX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Immunization_ProtocolApplied_SeriesDosesX {
    return new Immunization_ProtocolApplied_SeriesDosesX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Immunization_ProtocolApplied_SeriesDosesX {
    return new Immunization_ProtocolApplied_SeriesDosesX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Immunization_ProtocolApplied_SeriesDosesX {
    return new Immunization_ProtocolApplied_SeriesDosesX().fromJsonString(jsonString, options);
  }

  static equals(a: Immunization_ProtocolApplied_SeriesDosesX | PlainMessage<Immunization_ProtocolApplied_SeriesDosesX> | undefined, b: Immunization_ProtocolApplied_SeriesDosesX | PlainMessage<Immunization_ProtocolApplied_SeriesDosesX> | undefined): boolean {
    return proto3.util.equals(Immunization_ProtocolApplied_SeriesDosesX, a, b);
  }
}

