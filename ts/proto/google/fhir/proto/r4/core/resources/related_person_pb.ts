//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/related_person.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Attachment, Boolean, Code, CodeableConcept, ContactPoint, Date, Extension, HumanName, Id, Identifier, Meta, Narrative, Period, Reference, String, Uri } from "../datatypes_pb.js";
import { AdministrativeGenderCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for RelatedPerson.
 * A person that is related to a patient, but who is not a direct target of
 * care. See http://hl7.org/fhir/StructureDefinition/RelatedPerson
 *
 * @generated from message google.fhir.r4.core.RelatedPerson
 */
export class RelatedPerson extends Message<RelatedPerson> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * A human identifier for this person
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this related person's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * The patient this person is related to
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 12;
   */
  patient?: Reference;

  /**
   * The nature of the relationship
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept relationship = 13;
   */
  relationship: CodeableConcept[] = [];

  /**
   * A name associated with the person
   *
   * @generated from field: repeated google.fhir.r4.core.HumanName name = 14;
   */
  name: HumanName[] = [];

  /**
   * A contact detail for the person
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 15;
   */
  telecom: ContactPoint[] = [];

  /**
   * @generated from field: google.fhir.r4.core.RelatedPerson.GenderCode gender = 16;
   */
  gender?: RelatedPerson_GenderCode;

  /**
   * The date on which the related person was born
   *
   * @generated from field: google.fhir.r4.core.Date birth_date = 17;
   */
  birthDate?: Date;

  /**
   * Address where the related person can be contacted or visited
   *
   * @generated from field: repeated google.fhir.r4.core.Address address = 18;
   */
  address: Address[] = [];

  /**
   * Image of the person
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment photo = 19;
   */
  photo: Attachment[] = [];

  /**
   * Period of time that this relationship is considered valid
   *
   * @generated from field: google.fhir.r4.core.Period period = 20;
   */
  period?: Period;

  /**
   * @generated from field: repeated google.fhir.r4.core.RelatedPerson.Communication communication = 21;
   */
  communication: RelatedPerson_Communication[] = [];

  constructor(data?: PartialMessage<RelatedPerson>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedPerson";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "active", kind: "message", T: Boolean },
    { no: 12, name: "patient", kind: "message", T: Reference },
    { no: 13, name: "relationship", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "name", kind: "message", T: HumanName, repeated: true },
    { no: 15, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 16, name: "gender", kind: "message", T: RelatedPerson_GenderCode },
    { no: 17, name: "birth_date", kind: "message", T: Date },
    { no: 18, name: "address", kind: "message", T: Address, repeated: true },
    { no: 19, name: "photo", kind: "message", T: Attachment, repeated: true },
    { no: 20, name: "period", kind: "message", T: Period },
    { no: 21, name: "communication", kind: "message", T: RelatedPerson_Communication, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedPerson {
    return new RelatedPerson().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedPerson {
    return new RelatedPerson().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedPerson {
    return new RelatedPerson().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedPerson | PlainMessage<RelatedPerson> | undefined, b: RelatedPerson | PlainMessage<RelatedPerson> | undefined): boolean {
    return proto3.util.equals(RelatedPerson, a, b);
  }
}

/**
 * male | female | other | unknown
 *
 * @generated from message google.fhir.r4.core.RelatedPerson.GenderCode
 */
export class RelatedPerson_GenderCode extends Message<RelatedPerson_GenderCode> {
  /**
   * @generated from field: google.fhir.r4.core.AdministrativeGenderCode.Value value = 1;
   */
  value = AdministrativeGenderCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<RelatedPerson_GenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedPerson.GenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AdministrativeGenderCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedPerson_GenderCode {
    return new RelatedPerson_GenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedPerson_GenderCode {
    return new RelatedPerson_GenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedPerson_GenderCode {
    return new RelatedPerson_GenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedPerson_GenderCode | PlainMessage<RelatedPerson_GenderCode> | undefined, b: RelatedPerson_GenderCode | PlainMessage<RelatedPerson_GenderCode> | undefined): boolean {
    return proto3.util.equals(RelatedPerson_GenderCode, a, b);
  }
}

/**
 * A language which may be used to communicate with about the patient's health
 *
 * @generated from message google.fhir.r4.core.RelatedPerson.Communication
 */
export class RelatedPerson_Communication extends Message<RelatedPerson_Communication> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The language which can be used to communicate with the patient about his
   * or her health
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept language = 4;
   */
  language?: CodeableConcept;

  /**
   * Language preference indicator
   *
   * @generated from field: google.fhir.r4.core.Boolean preferred = 5;
   */
  preferred?: Boolean;

  constructor(data?: PartialMessage<RelatedPerson_Communication>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedPerson.Communication";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "language", kind: "message", T: CodeableConcept },
    { no: 5, name: "preferred", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedPerson_Communication {
    return new RelatedPerson_Communication().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedPerson_Communication {
    return new RelatedPerson_Communication().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedPerson_Communication {
    return new RelatedPerson_Communication().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedPerson_Communication | PlainMessage<RelatedPerson_Communication> | undefined, b: RelatedPerson_Communication | PlainMessage<RelatedPerson_Communication> | undefined): boolean {
    return proto3.util.equals(RelatedPerson_Communication, a, b);
  }
}

