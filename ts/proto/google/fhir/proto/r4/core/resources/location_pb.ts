//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/location.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Address, Boolean, Code, CodeableConcept, Coding, ContactPoint, Decimal, Extension, Id, Identifier, Meta, Narrative, Reference, String, Time, Uri } from "../datatypes_pb.js";
import { DaysOfWeekCode_Value, LocationModeCode_Value, LocationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Location.
 * Details and position information for a physical place.
 * See http://hl7.org/fhir/StructureDefinition/Location
 *
 * @generated from message google.fhir.r4.core.Location
 */
export class Location extends Message<Location> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique code or number identifying the location to its users
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Location.StatusCode status = 11;
   */
  status?: Location_StatusCode;

  /**
   * The operational status of the location (typically only for a bed/room)
   *
   * @generated from field: google.fhir.r4.core.Coding operational_status = 12;
   */
  operationalStatus?: Coding;

  /**
   * Name of the location as used by humans
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * A list of alternate names that the location is known as, or was known as,
   * in the past
   *
   * @generated from field: repeated google.fhir.r4.core.String alias = 14;
   */
  alias: String[] = [];

  /**
   * Additional details about the location that could be displayed as further
   * information to identify the location beyond its name
   *
   * @generated from field: google.fhir.r4.core.String description = 15;
   */
  description?: String;

  /**
   * @generated from field: google.fhir.r4.core.Location.ModeCode mode = 16;
   */
  mode?: Location_ModeCode;

  /**
   * Type of function performed
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 17;
   */
  type: CodeableConcept[] = [];

  /**
   * Contact details of the location
   *
   * @generated from field: repeated google.fhir.r4.core.ContactPoint telecom = 18;
   */
  telecom: ContactPoint[] = [];

  /**
   * Physical location
   *
   * @generated from field: google.fhir.r4.core.Address address = 19;
   */
  address?: Address;

  /**
   * Physical form of the location
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept physical_type = 20;
   */
  physicalType?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Location.Position position = 21;
   */
  position?: Location_Position;

  /**
   * Organization responsible for provisioning and upkeep
   *
   * @generated from field: google.fhir.r4.core.Reference managing_organization = 22;
   */
  managingOrganization?: Reference;

  /**
   * Another Location this one is physically a part of
   *
   * @generated from field: google.fhir.r4.core.Reference part_of = 23;
   */
  partOf?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Location.HoursOfOperation hours_of_operation = 24;
   */
  hoursOfOperation: Location_HoursOfOperation[] = [];

  /**
   * Description of availability exceptions
   *
   * @generated from field: google.fhir.r4.core.String availability_exceptions = 25;
   */
  availabilityExceptions?: String;

  /**
   * Technical endpoints providing access to services operated for the location
   *
   * @generated from field: repeated google.fhir.r4.core.Reference endpoint = 26;
   */
  endpoint: Reference[] = [];

  constructor(data?: PartialMessage<Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: Location_StatusCode },
    { no: 12, name: "operational_status", kind: "message", T: Coding },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "alias", kind: "message", T: String, repeated: true },
    { no: 15, name: "description", kind: "message", T: String },
    { no: 16, name: "mode", kind: "message", T: Location_ModeCode },
    { no: 17, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 18, name: "telecom", kind: "message", T: ContactPoint, repeated: true },
    { no: 19, name: "address", kind: "message", T: Address },
    { no: 20, name: "physical_type", kind: "message", T: CodeableConcept },
    { no: 21, name: "position", kind: "message", T: Location_Position },
    { no: 22, name: "managing_organization", kind: "message", T: Reference },
    { no: 23, name: "part_of", kind: "message", T: Reference },
    { no: 24, name: "hours_of_operation", kind: "message", T: Location_HoursOfOperation, repeated: true },
    { no: 25, name: "availability_exceptions", kind: "message", T: String },
    { no: 26, name: "endpoint", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location {
    return new Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location {
    return new Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location {
    return new Location().fromJsonString(jsonString, options);
  }

  static equals(a: Location | PlainMessage<Location> | undefined, b: Location | PlainMessage<Location> | undefined): boolean {
    return proto3.util.equals(Location, a, b);
  }
}

/**
 * active | suspended | inactive
 *
 * @generated from message google.fhir.r4.core.Location.StatusCode
 */
export class Location_StatusCode extends Message<Location_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.LocationStatusCode.Value value = 1;
   */
  value = LocationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Location_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Location.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location_StatusCode {
    return new Location_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location_StatusCode {
    return new Location_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location_StatusCode {
    return new Location_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: Location_StatusCode | PlainMessage<Location_StatusCode> | undefined, b: Location_StatusCode | PlainMessage<Location_StatusCode> | undefined): boolean {
    return proto3.util.equals(Location_StatusCode, a, b);
  }
}

/**
 * instance | kind
 *
 * @generated from message google.fhir.r4.core.Location.ModeCode
 */
export class Location_ModeCode extends Message<Location_ModeCode> {
  /**
   * @generated from field: google.fhir.r4.core.LocationModeCode.Value value = 1;
   */
  value = LocationModeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Location_ModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Location.ModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(LocationModeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location_ModeCode {
    return new Location_ModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location_ModeCode {
    return new Location_ModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location_ModeCode {
    return new Location_ModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: Location_ModeCode | PlainMessage<Location_ModeCode> | undefined, b: Location_ModeCode | PlainMessage<Location_ModeCode> | undefined): boolean {
    return proto3.util.equals(Location_ModeCode, a, b);
  }
}

/**
 * The absolute geographic location
 *
 * @generated from message google.fhir.r4.core.Location.Position
 */
export class Location_Position extends Message<Location_Position> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Longitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal longitude = 4;
   */
  longitude?: Decimal;

  /**
   * Latitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal latitude = 5;
   */
  latitude?: Decimal;

  /**
   * Altitude with WGS84 datum
   *
   * @generated from field: google.fhir.r4.core.Decimal altitude = 6;
   */
  altitude?: Decimal;

  constructor(data?: PartialMessage<Location_Position>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Location.Position";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "longitude", kind: "message", T: Decimal },
    { no: 5, name: "latitude", kind: "message", T: Decimal },
    { no: 6, name: "altitude", kind: "message", T: Decimal },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location_Position {
    return new Location_Position().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location_Position {
    return new Location_Position().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location_Position {
    return new Location_Position().fromJsonString(jsonString, options);
  }

  static equals(a: Location_Position | PlainMessage<Location_Position> | undefined, b: Location_Position | PlainMessage<Location_Position> | undefined): boolean {
    return proto3.util.equals(Location_Position, a, b);
  }
}

/**
 * What days/times during a week is this location usually open
 *
 * @generated from message google.fhir.r4.core.Location.HoursOfOperation
 */
export class Location_HoursOfOperation extends Message<Location_HoursOfOperation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.Location.HoursOfOperation.DaysOfWeekCode days_of_week = 4;
   */
  daysOfWeek: Location_HoursOfOperation_DaysOfWeekCode[] = [];

  /**
   * The Location is open all day
   *
   * @generated from field: google.fhir.r4.core.Boolean all_day = 5;
   */
  allDay?: Boolean;

  /**
   * Time that the Location opens
   *
   * @generated from field: google.fhir.r4.core.Time opening_time = 6;
   */
  openingTime?: Time;

  /**
   * Time that the Location closes
   *
   * @generated from field: google.fhir.r4.core.Time closing_time = 7;
   */
  closingTime?: Time;

  constructor(data?: PartialMessage<Location_HoursOfOperation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Location.HoursOfOperation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "days_of_week", kind: "message", T: Location_HoursOfOperation_DaysOfWeekCode, repeated: true },
    { no: 5, name: "all_day", kind: "message", T: Boolean },
    { no: 6, name: "opening_time", kind: "message", T: Time },
    { no: 7, name: "closing_time", kind: "message", T: Time },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location_HoursOfOperation {
    return new Location_HoursOfOperation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location_HoursOfOperation {
    return new Location_HoursOfOperation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location_HoursOfOperation {
    return new Location_HoursOfOperation().fromJsonString(jsonString, options);
  }

  static equals(a: Location_HoursOfOperation | PlainMessage<Location_HoursOfOperation> | undefined, b: Location_HoursOfOperation | PlainMessage<Location_HoursOfOperation> | undefined): boolean {
    return proto3.util.equals(Location_HoursOfOperation, a, b);
  }
}

/**
 * mon | tue | wed | thu | fri | sat | sun
 *
 * @generated from message google.fhir.r4.core.Location.HoursOfOperation.DaysOfWeekCode
 */
export class Location_HoursOfOperation_DaysOfWeekCode extends Message<Location_HoursOfOperation_DaysOfWeekCode> {
  /**
   * @generated from field: google.fhir.r4.core.DaysOfWeekCode.Value value = 1;
   */
  value = DaysOfWeekCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Location_HoursOfOperation_DaysOfWeekCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Location.HoursOfOperation.DaysOfWeekCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DaysOfWeekCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location_HoursOfOperation_DaysOfWeekCode {
    return new Location_HoursOfOperation_DaysOfWeekCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location_HoursOfOperation_DaysOfWeekCode {
    return new Location_HoursOfOperation_DaysOfWeekCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location_HoursOfOperation_DaysOfWeekCode {
    return new Location_HoursOfOperation_DaysOfWeekCode().fromJsonString(jsonString, options);
  }

  static equals(a: Location_HoursOfOperation_DaysOfWeekCode | PlainMessage<Location_HoursOfOperation_DaysOfWeekCode> | undefined, b: Location_HoursOfOperation_DaysOfWeekCode | PlainMessage<Location_HoursOfOperation_DaysOfWeekCode> | undefined): boolean {
    return proto3.util.equals(Location_HoursOfOperation_DaysOfWeekCode, a, b);
  }
}

