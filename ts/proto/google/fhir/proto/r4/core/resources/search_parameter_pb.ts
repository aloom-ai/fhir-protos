//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/search_parameter.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Canonical, Code, CodeableConcept, ContactDetail, DateTime, Extension, Id, Markdown, Meta, Narrative, String, Uri, UsageContext } from "../datatypes_pb.js";
import { PublicationStatusCode_Value, ResourceTypeCode_Value, SearchComparatorCode_Value, SearchModifierCode_Value, SearchParamTypeCode_Value, XPathUsageTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for SearchParameter.
 * Search parameter for a resource.
 * See http://hl7.org/fhir/StructureDefinition/SearchParameter
 *
 * @generated from message google.fhir.r4.core.SearchParameter
 */
export class SearchParameter extends Message<SearchParameter> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this search parameter, represented as a URI
   * (globally unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Business version of the search parameter
   *
   * @generated from field: google.fhir.r4.core.String version = 11;
   */
  version?: String;

  /**
   * Name for this search parameter (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 12;
   */
  name?: String;

  /**
   * Original definition for the search parameter
   *
   * @generated from field: google.fhir.r4.core.Canonical derived_from = 13;
   */
  derivedFrom?: Canonical;

  /**
   * @generated from field: google.fhir.r4.core.SearchParameter.StatusCode status = 14;
   */
  status?: SearchParameter_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 15;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 16;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 17;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 18;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the search parameter
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 19;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 20;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for search parameter (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 21;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this search parameter is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 22;
   */
  purpose?: Markdown;

  /**
   * Code used in URL
   *
   * @generated from field: google.fhir.r4.core.Code code = 23;
   */
  code?: Code;

  /**
   * @generated from field: repeated google.fhir.r4.core.SearchParameter.BaseCode base = 24;
   */
  base: SearchParameter_BaseCode[] = [];

  /**
   * @generated from field: google.fhir.r4.core.SearchParameter.TypeCode type = 25;
   */
  type?: SearchParameter_TypeCode;

  /**
   * FHIRPath expression that extracts the values
   *
   * @generated from field: google.fhir.r4.core.String expression = 26;
   */
  expression?: String;

  /**
   * XPath that extracts the values
   *
   * @generated from field: google.fhir.r4.core.String xpath = 27;
   */
  xpath?: String;

  /**
   * @generated from field: google.fhir.r4.core.SearchParameter.XpathUsageCode xpath_usage = 28;
   */
  xpathUsage?: SearchParameter_XpathUsageCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.SearchParameter.TargetCode target = 29;
   */
  target: SearchParameter_TargetCode[] = [];

  /**
   * Allow multiple values per parameter (or)
   *
   * @generated from field: google.fhir.r4.core.Boolean multiple_or = 30;
   */
  multipleOr?: Boolean;

  /**
   * Allow multiple parameters (and)
   *
   * @generated from field: google.fhir.r4.core.Boolean multiple_and = 31;
   */
  multipleAnd?: Boolean;

  /**
   * @generated from field: repeated google.fhir.r4.core.SearchParameter.ComparatorCode comparator = 32;
   */
  comparator: SearchParameter_ComparatorCode[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.SearchParameter.ModifierCode modifier = 33;
   */
  modifier: SearchParameter_ModifierCode[] = [];

  /**
   * Chained names supported
   *
   * @generated from field: repeated google.fhir.r4.core.String chain = 34;
   */
  chain: String[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.SearchParameter.Component component = 35;
   */
  component: SearchParameter_Component[] = [];

  constructor(data?: PartialMessage<SearchParameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "derived_from", kind: "message", T: Canonical },
    { no: 14, name: "status", kind: "message", T: SearchParameter_StatusCode },
    { no: 15, name: "experimental", kind: "message", T: Boolean },
    { no: 16, name: "date", kind: "message", T: DateTime },
    { no: 17, name: "publisher", kind: "message", T: String },
    { no: 18, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 19, name: "description", kind: "message", T: Markdown },
    { no: 20, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 21, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "purpose", kind: "message", T: Markdown },
    { no: 23, name: "code", kind: "message", T: Code },
    { no: 24, name: "base", kind: "message", T: SearchParameter_BaseCode, repeated: true },
    { no: 25, name: "type", kind: "message", T: SearchParameter_TypeCode },
    { no: 26, name: "expression", kind: "message", T: String },
    { no: 27, name: "xpath", kind: "message", T: String },
    { no: 28, name: "xpath_usage", kind: "message", T: SearchParameter_XpathUsageCode },
    { no: 29, name: "target", kind: "message", T: SearchParameter_TargetCode, repeated: true },
    { no: 30, name: "multiple_or", kind: "message", T: Boolean },
    { no: 31, name: "multiple_and", kind: "message", T: Boolean },
    { no: 32, name: "comparator", kind: "message", T: SearchParameter_ComparatorCode, repeated: true },
    { no: 33, name: "modifier", kind: "message", T: SearchParameter_ModifierCode, repeated: true },
    { no: 34, name: "chain", kind: "message", T: String, repeated: true },
    { no: 35, name: "component", kind: "message", T: SearchParameter_Component, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter {
    return new SearchParameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter {
    return new SearchParameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter {
    return new SearchParameter().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter | PlainMessage<SearchParameter> | undefined, b: SearchParameter | PlainMessage<SearchParameter> | undefined): boolean {
    return proto3.util.equals(SearchParameter, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.SearchParameter.StatusCode
 */
export class SearchParameter_StatusCode extends Message<SearchParameter_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_StatusCode {
    return new SearchParameter_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_StatusCode {
    return new SearchParameter_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_StatusCode {
    return new SearchParameter_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_StatusCode | PlainMessage<SearchParameter_StatusCode> | undefined, b: SearchParameter_StatusCode | PlainMessage<SearchParameter_StatusCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_StatusCode, a, b);
  }
}

/**
 * The resource type(s) this search parameter applies to
 *
 * @generated from message google.fhir.r4.core.SearchParameter.BaseCode
 */
export class SearchParameter_BaseCode extends Message<SearchParameter_BaseCode> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_BaseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.BaseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_BaseCode {
    return new SearchParameter_BaseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_BaseCode {
    return new SearchParameter_BaseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_BaseCode {
    return new SearchParameter_BaseCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_BaseCode | PlainMessage<SearchParameter_BaseCode> | undefined, b: SearchParameter_BaseCode | PlainMessage<SearchParameter_BaseCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_BaseCode, a, b);
  }
}

/**
 * number | date | string | token | reference | composite | quantity | uri |
 * special
 *
 * @generated from message google.fhir.r4.core.SearchParameter.TypeCode
 */
export class SearchParameter_TypeCode extends Message<SearchParameter_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.SearchParamTypeCode.Value value = 1;
   */
  value = SearchParamTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchParamTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_TypeCode {
    return new SearchParameter_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_TypeCode {
    return new SearchParameter_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_TypeCode {
    return new SearchParameter_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_TypeCode | PlainMessage<SearchParameter_TypeCode> | undefined, b: SearchParameter_TypeCode | PlainMessage<SearchParameter_TypeCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_TypeCode, a, b);
  }
}

/**
 * normal | phonetic | nearby | distance | other
 *
 * @generated from message google.fhir.r4.core.SearchParameter.XpathUsageCode
 */
export class SearchParameter_XpathUsageCode extends Message<SearchParameter_XpathUsageCode> {
  /**
   * @generated from field: google.fhir.r4.core.XPathUsageTypeCode.Value value = 1;
   */
  value = XPathUsageTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_XpathUsageCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.XpathUsageCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(XPathUsageTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_XpathUsageCode {
    return new SearchParameter_XpathUsageCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_XpathUsageCode {
    return new SearchParameter_XpathUsageCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_XpathUsageCode {
    return new SearchParameter_XpathUsageCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_XpathUsageCode | PlainMessage<SearchParameter_XpathUsageCode> | undefined, b: SearchParameter_XpathUsageCode | PlainMessage<SearchParameter_XpathUsageCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_XpathUsageCode, a, b);
  }
}

/**
 * Types of resource (if a resource reference)
 *
 * @generated from message google.fhir.r4.core.SearchParameter.TargetCode
 */
export class SearchParameter_TargetCode extends Message<SearchParameter_TargetCode> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_TargetCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.TargetCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_TargetCode {
    return new SearchParameter_TargetCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_TargetCode {
    return new SearchParameter_TargetCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_TargetCode {
    return new SearchParameter_TargetCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_TargetCode | PlainMessage<SearchParameter_TargetCode> | undefined, b: SearchParameter_TargetCode | PlainMessage<SearchParameter_TargetCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_TargetCode, a, b);
  }
}

/**
 * eq | ne | gt | lt | ge | le | sa | eb | ap
 *
 * @generated from message google.fhir.r4.core.SearchParameter.ComparatorCode
 */
export class SearchParameter_ComparatorCode extends Message<SearchParameter_ComparatorCode> {
  /**
   * @generated from field: google.fhir.r4.core.SearchComparatorCode.Value value = 1;
   */
  value = SearchComparatorCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_ComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.ComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchComparatorCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_ComparatorCode {
    return new SearchParameter_ComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_ComparatorCode {
    return new SearchParameter_ComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_ComparatorCode {
    return new SearchParameter_ComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_ComparatorCode | PlainMessage<SearchParameter_ComparatorCode> | undefined, b: SearchParameter_ComparatorCode | PlainMessage<SearchParameter_ComparatorCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_ComparatorCode, a, b);
  }
}

/**
 * missing | exact | contains | not | text | in | not-in | below | above |
 * type | identifier | ofType
 *
 * @generated from message google.fhir.r4.core.SearchParameter.ModifierCode
 */
export class SearchParameter_ModifierCode extends Message<SearchParameter_ModifierCode> {
  /**
   * @generated from field: google.fhir.r4.core.SearchModifierCode.Value value = 1;
   */
  value = SearchModifierCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<SearchParameter_ModifierCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.ModifierCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(SearchModifierCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_ModifierCode {
    return new SearchParameter_ModifierCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_ModifierCode {
    return new SearchParameter_ModifierCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_ModifierCode {
    return new SearchParameter_ModifierCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_ModifierCode | PlainMessage<SearchParameter_ModifierCode> | undefined, b: SearchParameter_ModifierCode | PlainMessage<SearchParameter_ModifierCode> | undefined): boolean {
    return proto3.util.equals(SearchParameter_ModifierCode, a, b);
  }
}

/**
 * For Composite resources to define the parts
 *
 * @generated from message google.fhir.r4.core.SearchParameter.Component
 */
export class SearchParameter_Component extends Message<SearchParameter_Component> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Defines how the part works
   *
   * @generated from field: google.fhir.r4.core.Canonical definition = 4;
   */
  definition?: Canonical;

  /**
   * Subexpression relative to main expression
   *
   * @generated from field: google.fhir.r4.core.String expression = 5;
   */
  expression?: String;

  constructor(data?: PartialMessage<SearchParameter_Component>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParameter.Component";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "definition", kind: "message", T: Canonical },
    { no: 5, name: "expression", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParameter_Component {
    return new SearchParameter_Component().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParameter_Component {
    return new SearchParameter_Component().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParameter_Component {
    return new SearchParameter_Component().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParameter_Component | PlainMessage<SearchParameter_Component> | undefined, b: SearchParameter_Component | PlainMessage<SearchParameter_Component> | undefined): boolean {
    return proto3.util.equals(SearchParameter_Component, a, b);
  }
}

