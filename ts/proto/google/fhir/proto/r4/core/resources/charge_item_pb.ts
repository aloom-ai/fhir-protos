//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/charge_item.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Canonical, Code, CodeableConcept, DateTime, Decimal, Extension, Id, Identifier, Meta, Money, Narrative, Period, Quantity, Reference, String, Timing, Uri } from "../datatypes_pb.js";
import { ChargeItemStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for ChargeItem.
 * Item containing charge code(s) associated with the provision of healthcare
 * provider products. See http://hl7.org/fhir/StructureDefinition/ChargeItem
 *
 * @generated from message google.fhir.r4.core.ChargeItem
 */
export class ChargeItem extends Message<ChargeItem> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for item
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Defining information about the code of this charge item
   *
   * @generated from field: repeated google.fhir.r4.core.Uri definition_uri = 11;
   */
  definitionUri: Uri[] = [];

  /**
   * Resource defining the code of this ChargeItem
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical definition_canonical = 12;
   */
  definitionCanonical: Canonical[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ChargeItem.StatusCode status = 13;
   */
  status?: ChargeItem_StatusCode;

  /**
   * Part of referenced ChargeItem
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 14;
   */
  partOf: Reference[] = [];

  /**
   * A code that identifies the charge, like a billing code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 15;
   */
  code?: CodeableConcept;

  /**
   * Individual service was done for/to
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 16;
   */
  subject?: Reference;

  /**
   * Encounter / Episode associated with event
   *
   * @generated from field: google.fhir.r4.core.Reference context = 17;
   */
  context?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.ChargeItem.OccurrenceX occurrence = 18;
   */
  occurrence?: ChargeItem_OccurrenceX;

  /**
   * @generated from field: repeated google.fhir.r4.core.ChargeItem.Performer performer = 19;
   */
  performer: ChargeItem_Performer[] = [];

  /**
   * Organization providing the charged service
   *
   * @generated from field: google.fhir.r4.core.Reference performing_organization = 20;
   */
  performingOrganization?: Reference;

  /**
   * Organization requesting the charged service
   *
   * @generated from field: google.fhir.r4.core.Reference requesting_organization = 21;
   */
  requestingOrganization?: Reference;

  /**
   * Organization that has ownership of the (potential, future) revenue
   *
   * @generated from field: google.fhir.r4.core.Reference cost_center = 22;
   */
  costCenter?: Reference;

  /**
   * Quantity of which the charge item has been serviced
   *
   * @generated from field: google.fhir.r4.core.Quantity quantity = 23;
   */
  quantity?: Quantity;

  /**
   * Anatomical location, if relevant
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept bodysite = 24;
   */
  bodysite: CodeableConcept[] = [];

  /**
   * Factor overriding the associated rules
   *
   * @generated from field: google.fhir.r4.core.Decimal factor_override = 25;
   */
  factorOverride?: Decimal;

  /**
   * Price overriding the associated rules
   *
   * @generated from field: google.fhir.r4.core.Money price_override = 26;
   */
  priceOverride?: Money;

  /**
   * Reason for overriding the list price/factor
   *
   * @generated from field: google.fhir.r4.core.String override_reason = 27;
   */
  overrideReason?: String;

  /**
   * Individual who was entering
   *
   * @generated from field: google.fhir.r4.core.Reference enterer = 28;
   */
  enterer?: Reference;

  /**
   * Date the charge item was entered
   *
   * @generated from field: google.fhir.r4.core.DateTime entered_date = 29;
   */
  enteredDate?: DateTime;

  /**
   * Why was the charged  service rendered?
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason = 30;
   */
  reason: CodeableConcept[] = [];

  /**
   * Which rendered service is being charged?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference service = 31;
   */
  service: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ChargeItem.ProductX product = 32;
   */
  product?: ChargeItem_ProductX;

  /**
   * Account to place this charge
   *
   * @generated from field: repeated google.fhir.r4.core.Reference account = 33;
   */
  account: Reference[] = [];

  /**
   * Comments made about the ChargeItem
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 34;
   */
  note: Annotation[] = [];

  /**
   * Further information supporting this charge
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_information = 35;
   */
  supportingInformation: Reference[] = [];

  constructor(data?: PartialMessage<ChargeItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChargeItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "definition_uri", kind: "message", T: Uri, repeated: true },
    { no: 12, name: "definition_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 13, name: "status", kind: "message", T: ChargeItem_StatusCode },
    { no: 14, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "code", kind: "message", T: CodeableConcept },
    { no: 16, name: "subject", kind: "message", T: Reference },
    { no: 17, name: "context", kind: "message", T: Reference },
    { no: 18, name: "occurrence", kind: "message", T: ChargeItem_OccurrenceX },
    { no: 19, name: "performer", kind: "message", T: ChargeItem_Performer, repeated: true },
    { no: 20, name: "performing_organization", kind: "message", T: Reference },
    { no: 21, name: "requesting_organization", kind: "message", T: Reference },
    { no: 22, name: "cost_center", kind: "message", T: Reference },
    { no: 23, name: "quantity", kind: "message", T: Quantity },
    { no: 24, name: "bodysite", kind: "message", T: CodeableConcept, repeated: true },
    { no: 25, name: "factor_override", kind: "message", T: Decimal },
    { no: 26, name: "price_override", kind: "message", T: Money },
    { no: 27, name: "override_reason", kind: "message", T: String },
    { no: 28, name: "enterer", kind: "message", T: Reference },
    { no: 29, name: "entered_date", kind: "message", T: DateTime },
    { no: 30, name: "reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 31, name: "service", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "product", kind: "message", T: ChargeItem_ProductX },
    { no: 33, name: "account", kind: "message", T: Reference, repeated: true },
    { no: 34, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 35, name: "supporting_information", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem {
    return new ChargeItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem {
    return new ChargeItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem {
    return new ChargeItem().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem | PlainMessage<ChargeItem> | undefined, b: ChargeItem | PlainMessage<ChargeItem> | undefined): boolean {
    return proto3.util.equals(ChargeItem, a, b);
  }
}

/**
 * planned | billable | not-billable | aborted | billed | entered-in-error |
 * unknown
 *
 * @generated from message google.fhir.r4.core.ChargeItem.StatusCode
 */
export class ChargeItem_StatusCode extends Message<ChargeItem_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ChargeItemStatusCode.Value value = 1;
   */
  value = ChargeItemStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ChargeItem_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChargeItem.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ChargeItemStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem_StatusCode {
    return new ChargeItem_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem_StatusCode {
    return new ChargeItem_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem_StatusCode {
    return new ChargeItem_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem_StatusCode | PlainMessage<ChargeItem_StatusCode> | undefined, b: ChargeItem_StatusCode | PlainMessage<ChargeItem_StatusCode> | undefined): boolean {
    return proto3.util.equals(ChargeItem_StatusCode, a, b);
  }
}

/**
 * When the charged service was applied
 *
 * @generated from message google.fhir.r4.core.ChargeItem.OccurrenceX
 */
export class ChargeItem_OccurrenceX extends Message<ChargeItem_OccurrenceX> {
  /**
   * @generated from oneof google.fhir.r4.core.ChargeItem.OccurrenceX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ChargeItem_OccurrenceX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChargeItem.OccurrenceX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem_OccurrenceX {
    return new ChargeItem_OccurrenceX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem_OccurrenceX {
    return new ChargeItem_OccurrenceX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem_OccurrenceX {
    return new ChargeItem_OccurrenceX().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem_OccurrenceX | PlainMessage<ChargeItem_OccurrenceX> | undefined, b: ChargeItem_OccurrenceX | PlainMessage<ChargeItem_OccurrenceX> | undefined): boolean {
    return proto3.util.equals(ChargeItem_OccurrenceX, a, b);
  }
}

/**
 * Who performed charged service
 *
 * @generated from message google.fhir.r4.core.ChargeItem.Performer
 */
export class ChargeItem_Performer extends Message<ChargeItem_Performer> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * What type of performance was done
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept function = 4;
   */
  function?: CodeableConcept;

  /**
   * Individual who was performing
   *
   * @generated from field: google.fhir.r4.core.Reference actor = 5;
   */
  actor?: Reference;

  constructor(data?: PartialMessage<ChargeItem_Performer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChargeItem.Performer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "function", kind: "message", T: CodeableConcept },
    { no: 5, name: "actor", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem_Performer {
    return new ChargeItem_Performer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem_Performer {
    return new ChargeItem_Performer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem_Performer {
    return new ChargeItem_Performer().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem_Performer | PlainMessage<ChargeItem_Performer> | undefined, b: ChargeItem_Performer | PlainMessage<ChargeItem_Performer> | undefined): boolean {
    return proto3.util.equals(ChargeItem_Performer, a, b);
  }
}

/**
 * Product charged
 *
 * @generated from message google.fhir.r4.core.ChargeItem.ProductX
 */
export class ChargeItem_ProductX extends Message<ChargeItem_ProductX> {
  /**
   * @generated from oneof google.fhir.r4.core.ChargeItem.ProductX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ChargeItem_ProductX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChargeItem.ProductX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItem_ProductX {
    return new ChargeItem_ProductX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItem_ProductX {
    return new ChargeItem_ProductX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItem_ProductX {
    return new ChargeItem_ProductX().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItem_ProductX | PlainMessage<ChargeItem_ProductX> | undefined, b: ChargeItem_ProductX | PlainMessage<ChargeItem_ProductX> | undefined): boolean {
    return proto3.util.equals(ChargeItem_ProductX, a, b);
  }
}

