//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/nutrition_order.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Canonical, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Ratio, Reference, SimpleQuantity, String, Timing, Uri } from "../datatypes_pb.js";
import { RequestIntentCode_Value, RequestStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for NutritionOrder.
 * Diet, formula or nutritional supplement request.
 * See http://hl7.org/fhir/StructureDefinition/NutritionOrder
 *
 * @generated from message google.fhir.r4.core.NutritionOrder
 */
export class NutritionOrder extends Message<NutritionOrder> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Identifiers assigned to this order
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[] = [];

  /**
   * Instantiates protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates = 13;
   */
  instantiates: Uri[] = [];

  /**
   * @generated from field: google.fhir.r4.core.NutritionOrder.StatusCode status = 14;
   */
  status?: NutritionOrder_StatusCode;

  /**
   * @generated from field: google.fhir.r4.core.NutritionOrder.IntentCode intent = 15;
   */
  intent?: NutritionOrder_IntentCode;

  /**
   * The person who requires the diet, formula or nutritional supplement
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 16;
   */
  patient?: Reference;

  /**
   * The encounter associated with this nutrition order
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 17;
   */
  encounter?: Reference;

  /**
   * Date and time the nutrition order was requested
   *
   * @generated from field: google.fhir.r4.core.DateTime date_time = 18;
   */
  dateTime?: DateTime;

  /**
   * Who ordered the diet, formula or nutritional supplement
   *
   * @generated from field: google.fhir.r4.core.Reference orderer = 19;
   */
  orderer?: Reference;

  /**
   * List of the patient's food and nutrition-related allergies and intolerances
   *
   * @generated from field: repeated google.fhir.r4.core.Reference allergy_intolerance = 20;
   */
  allergyIntolerance: Reference[] = [];

  /**
   * Order-specific modifier about the type of food that should be given
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept food_preference_modifier = 21;
   */
  foodPreferenceModifier: CodeableConcept[] = [];

  /**
   * Order-specific modifier about the type of food that should not be given
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept exclude_food_modifier = 22;
   */
  excludeFoodModifier: CodeableConcept[] = [];

  /**
   * @generated from field: google.fhir.r4.core.NutritionOrder.OralDiet oral_diet = 23;
   */
  oralDiet?: NutritionOrder_OralDiet;

  /**
   * @generated from field: repeated google.fhir.r4.core.NutritionOrder.Supplement supplement = 24;
   */
  supplement: NutritionOrder_Supplement[] = [];

  /**
   * @generated from field: google.fhir.r4.core.NutritionOrder.EnteralFormula enteral_formula = 25;
   */
  enteralFormula?: NutritionOrder_EnteralFormula;

  /**
   * Comments
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 26;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<NutritionOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 12, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 13, name: "instantiates", kind: "message", T: Uri, repeated: true },
    { no: 14, name: "status", kind: "message", T: NutritionOrder_StatusCode },
    { no: 15, name: "intent", kind: "message", T: NutritionOrder_IntentCode },
    { no: 16, name: "patient", kind: "message", T: Reference },
    { no: 17, name: "encounter", kind: "message", T: Reference },
    { no: 18, name: "date_time", kind: "message", T: DateTime },
    { no: 19, name: "orderer", kind: "message", T: Reference },
    { no: 20, name: "allergy_intolerance", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "food_preference_modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 22, name: "exclude_food_modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 23, name: "oral_diet", kind: "message", T: NutritionOrder_OralDiet },
    { no: 24, name: "supplement", kind: "message", T: NutritionOrder_Supplement, repeated: true },
    { no: 25, name: "enteral_formula", kind: "message", T: NutritionOrder_EnteralFormula },
    { no: 26, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder {
    return new NutritionOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder {
    return new NutritionOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder {
    return new NutritionOrder().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder | PlainMessage<NutritionOrder> | undefined, b: NutritionOrder | PlainMessage<NutritionOrder> | undefined): boolean {
    return proto3.util.equals(NutritionOrder, a, b);
  }
}

/**
 * draft | active | on-hold | revoked | completed | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.StatusCode
 */
export class NutritionOrder_StatusCode extends Message<NutritionOrder_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestStatusCode.Value value = 1;
   */
  value = RequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NutritionOrder_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_StatusCode {
    return new NutritionOrder_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_StatusCode {
    return new NutritionOrder_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_StatusCode {
    return new NutritionOrder_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_StatusCode | PlainMessage<NutritionOrder_StatusCode> | undefined, b: NutritionOrder_StatusCode | PlainMessage<NutritionOrder_StatusCode> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_StatusCode, a, b);
  }
}

/**
 * proposal | plan | directive | order | original-order | reflex-order |
 * filler-order | instance-order | option
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.IntentCode
 */
export class NutritionOrder_IntentCode extends Message<NutritionOrder_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestIntentCode.Value value = 1;
   */
  value = RequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<NutritionOrder_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_IntentCode {
    return new NutritionOrder_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_IntentCode {
    return new NutritionOrder_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_IntentCode {
    return new NutritionOrder_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_IntentCode | PlainMessage<NutritionOrder_IntentCode> | undefined, b: NutritionOrder_IntentCode | PlainMessage<NutritionOrder_IntentCode> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_IntentCode, a, b);
  }
}

/**
 * Oral diet components
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.OralDiet
 */
export class NutritionOrder_OralDiet extends Message<NutritionOrder_OralDiet> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of oral diet or diet restrictions that describe what can be consumed
   * orally
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 4;
   */
  type: CodeableConcept[] = [];

  /**
   * Scheduled frequency of diet
   *
   * @generated from field: repeated google.fhir.r4.core.Timing schedule = 5;
   */
  schedule: Timing[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.NutritionOrder.OralDiet.Nutrient nutrient = 6;
   */
  nutrient: NutritionOrder_OralDiet_Nutrient[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.NutritionOrder.OralDiet.Texture texture = 7;
   */
  texture: NutritionOrder_OralDiet_Texture[] = [];

  /**
   * The required consistency of fluids and liquids provided to the patient
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept fluid_consistency_type = 8;
   */
  fluidConsistencyType: CodeableConcept[] = [];

  /**
   * Instructions or additional information about the oral diet
   *
   * @generated from field: google.fhir.r4.core.String instruction = 9;
   */
  instruction?: String;

  constructor(data?: PartialMessage<NutritionOrder_OralDiet>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.OralDiet";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "schedule", kind: "message", T: Timing, repeated: true },
    { no: 6, name: "nutrient", kind: "message", T: NutritionOrder_OralDiet_Nutrient, repeated: true },
    { no: 7, name: "texture", kind: "message", T: NutritionOrder_OralDiet_Texture, repeated: true },
    { no: 8, name: "fluid_consistency_type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "instruction", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_OralDiet {
    return new NutritionOrder_OralDiet().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet {
    return new NutritionOrder_OralDiet().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet {
    return new NutritionOrder_OralDiet().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_OralDiet | PlainMessage<NutritionOrder_OralDiet> | undefined, b: NutritionOrder_OralDiet | PlainMessage<NutritionOrder_OralDiet> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_OralDiet, a, b);
  }
}

/**
 * Required  nutrient modifications
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.OralDiet.Nutrient
 */
export class NutritionOrder_OralDiet_Nutrient extends Message<NutritionOrder_OralDiet_Nutrient> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of nutrient that is being modified
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept modifier = 4;
   */
  modifier?: CodeableConcept;

  /**
   * Quantity of the specified nutrient
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity amount = 5;
   */
  amount?: SimpleQuantity;

  constructor(data?: PartialMessage<NutritionOrder_OralDiet_Nutrient>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.OralDiet.Nutrient";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "modifier", kind: "message", T: CodeableConcept },
    { no: 5, name: "amount", kind: "message", T: SimpleQuantity },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_OralDiet_Nutrient {
    return new NutritionOrder_OralDiet_Nutrient().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Nutrient {
    return new NutritionOrder_OralDiet_Nutrient().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Nutrient {
    return new NutritionOrder_OralDiet_Nutrient().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_OralDiet_Nutrient | PlainMessage<NutritionOrder_OralDiet_Nutrient> | undefined, b: NutritionOrder_OralDiet_Nutrient | PlainMessage<NutritionOrder_OralDiet_Nutrient> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_OralDiet_Nutrient, a, b);
  }
}

/**
 * Required  texture modifications
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.OralDiet.Texture
 */
export class NutritionOrder_OralDiet_Texture extends Message<NutritionOrder_OralDiet_Texture> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Code to indicate how to alter the texture of the foods, e.g. pureed
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept modifier = 4;
   */
  modifier?: CodeableConcept;

  /**
   * Concepts that are used to identify an entity that is ingested for
   * nutritional purposes
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept food_type = 5;
   */
  foodType?: CodeableConcept;

  constructor(data?: PartialMessage<NutritionOrder_OralDiet_Texture>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.OralDiet.Texture";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "modifier", kind: "message", T: CodeableConcept },
    { no: 5, name: "food_type", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_OralDiet_Texture {
    return new NutritionOrder_OralDiet_Texture().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Texture {
    return new NutritionOrder_OralDiet_Texture().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_OralDiet_Texture {
    return new NutritionOrder_OralDiet_Texture().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_OralDiet_Texture | PlainMessage<NutritionOrder_OralDiet_Texture> | undefined, b: NutritionOrder_OralDiet_Texture | PlainMessage<NutritionOrder_OralDiet_Texture> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_OralDiet_Texture, a, b);
  }
}

/**
 * Supplement components
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.Supplement
 */
export class NutritionOrder_Supplement extends Message<NutritionOrder_Supplement> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of supplement product requested
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * Product or brand name of the nutritional supplement
   *
   * @generated from field: google.fhir.r4.core.String product_name = 5;
   */
  productName?: String;

  /**
   * Scheduled frequency of supplement
   *
   * @generated from field: repeated google.fhir.r4.core.Timing schedule = 6;
   */
  schedule: Timing[] = [];

  /**
   * Amount of the nutritional supplement
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 7;
   */
  quantity?: SimpleQuantity;

  /**
   * Instructions or additional information about the oral supplement
   *
   * @generated from field: google.fhir.r4.core.String instruction = 8;
   */
  instruction?: String;

  constructor(data?: PartialMessage<NutritionOrder_Supplement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.Supplement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "product_name", kind: "message", T: String },
    { no: 6, name: "schedule", kind: "message", T: Timing, repeated: true },
    { no: 7, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 8, name: "instruction", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_Supplement {
    return new NutritionOrder_Supplement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_Supplement {
    return new NutritionOrder_Supplement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_Supplement {
    return new NutritionOrder_Supplement().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_Supplement | PlainMessage<NutritionOrder_Supplement> | undefined, b: NutritionOrder_Supplement | PlainMessage<NutritionOrder_Supplement> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_Supplement, a, b);
  }
}

/**
 * Enteral formula components
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.EnteralFormula
 */
export class NutritionOrder_EnteralFormula extends Message<NutritionOrder_EnteralFormula> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Type of enteral or infant formula
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept base_formula_type = 4;
   */
  baseFormulaType?: CodeableConcept;

  /**
   * Product or brand name of the enteral or infant formula
   *
   * @generated from field: google.fhir.r4.core.String base_formula_product_name = 5;
   */
  baseFormulaProductName?: String;

  /**
   * Type of modular component to add to the feeding
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept additive_type = 6;
   */
  additiveType?: CodeableConcept;

  /**
   * Product or brand name of the modular additive
   *
   * @generated from field: google.fhir.r4.core.String additive_product_name = 7;
   */
  additiveProductName?: String;

  /**
   * Amount of energy per specified volume that is required
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity caloric_density = 8;
   */
  caloricDensity?: SimpleQuantity;

  /**
   * How the formula should enter the patient's gastrointestinal tract
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept routeof_administration = 9;
   */
  routeofAdministration?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration administration = 10;
   */
  administration: NutritionOrder_EnteralFormula_Administration[] = [];

  /**
   * Upper limit on formula volume per unit of time
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity max_volume_to_deliver = 11;
   */
  maxVolumeToDeliver?: SimpleQuantity;

  /**
   * Formula feeding instructions expressed as text
   *
   * @generated from field: google.fhir.r4.core.String administration_instruction = 12;
   */
  administrationInstruction?: String;

  constructor(data?: PartialMessage<NutritionOrder_EnteralFormula>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.EnteralFormula";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "base_formula_type", kind: "message", T: CodeableConcept },
    { no: 5, name: "base_formula_product_name", kind: "message", T: String },
    { no: 6, name: "additive_type", kind: "message", T: CodeableConcept },
    { no: 7, name: "additive_product_name", kind: "message", T: String },
    { no: 8, name: "caloric_density", kind: "message", T: SimpleQuantity },
    { no: 9, name: "routeof_administration", kind: "message", T: CodeableConcept },
    { no: 10, name: "administration", kind: "message", T: NutritionOrder_EnteralFormula_Administration, repeated: true },
    { no: 11, name: "max_volume_to_deliver", kind: "message", T: SimpleQuantity },
    { no: 12, name: "administration_instruction", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_EnteralFormula {
    return new NutritionOrder_EnteralFormula().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula {
    return new NutritionOrder_EnteralFormula().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula {
    return new NutritionOrder_EnteralFormula().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_EnteralFormula | PlainMessage<NutritionOrder_EnteralFormula> | undefined, b: NutritionOrder_EnteralFormula | PlainMessage<NutritionOrder_EnteralFormula> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_EnteralFormula, a, b);
  }
}

/**
 * Formula feeding instruction as structured data
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration
 */
export class NutritionOrder_EnteralFormula_Administration extends Message<NutritionOrder_EnteralFormula_Administration> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Scheduled frequency of enteral feeding
   *
   * @generated from field: google.fhir.r4.core.Timing schedule = 4;
   */
  schedule?: Timing;

  /**
   * The volume of formula to provide
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 5;
   */
  quantity?: SimpleQuantity;

  /**
   * @generated from field: google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration.RateX rate = 6;
   */
  rate?: NutritionOrder_EnteralFormula_Administration_RateX;

  constructor(data?: PartialMessage<NutritionOrder_EnteralFormula_Administration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "schedule", kind: "message", T: Timing },
    { no: 5, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 6, name: "rate", kind: "message", T: NutritionOrder_EnteralFormula_Administration_RateX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_EnteralFormula_Administration {
    return new NutritionOrder_EnteralFormula_Administration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration {
    return new NutritionOrder_EnteralFormula_Administration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration {
    return new NutritionOrder_EnteralFormula_Administration().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_EnteralFormula_Administration | PlainMessage<NutritionOrder_EnteralFormula_Administration> | undefined, b: NutritionOrder_EnteralFormula_Administration | PlainMessage<NutritionOrder_EnteralFormula_Administration> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_EnteralFormula_Administration, a, b);
  }
}

/**
 * Speed with which the formula is provided per period of time
 *
 * @generated from message google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration.RateX
 */
export class NutritionOrder_EnteralFormula_Administration_RateX extends Message<NutritionOrder_EnteralFormula_Administration_RateX> {
  /**
   * @generated from oneof google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration.RateX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 1;
     */
    value: SimpleQuantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Ratio ratio = 2;
     */
    value: Ratio;
    case: "ratio";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<NutritionOrder_EnteralFormula_Administration_RateX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NutritionOrder.EnteralFormula.Administration.RateX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "quantity", kind: "message", T: SimpleQuantity, oneof: "choice" },
    { no: 2, name: "ratio", kind: "message", T: Ratio, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NutritionOrder_EnteralFormula_Administration_RateX {
    return new NutritionOrder_EnteralFormula_Administration_RateX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration_RateX {
    return new NutritionOrder_EnteralFormula_Administration_RateX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NutritionOrder_EnteralFormula_Administration_RateX {
    return new NutritionOrder_EnteralFormula_Administration_RateX().fromJsonString(jsonString, options);
  }

  static equals(a: NutritionOrder_EnteralFormula_Administration_RateX | PlainMessage<NutritionOrder_EnteralFormula_Administration_RateX> | undefined, b: NutritionOrder_EnteralFormula_Administration_RateX | PlainMessage<NutritionOrder_EnteralFormula_Administration_RateX> | undefined): boolean {
    return proto3.util.equals(NutritionOrder_EnteralFormula_Administration_RateX, a, b);
  }
}

