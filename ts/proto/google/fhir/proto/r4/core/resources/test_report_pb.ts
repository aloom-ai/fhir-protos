//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/test_report.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, DateTime, Decimal, Extension, Id, Identifier, Markdown, Meta, Narrative, Reference, String, Uri } from "../datatypes_pb.js";
import { TestReportActionResultCode_Value, TestReportParticipantTypeCode_Value, TestReportResultCode_Value, TestReportStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for TestReport.
 * Describes the results of a TestScript execution.
 * See http://hl7.org/fhir/StructureDefinition/TestReport
 *
 * @generated from message google.fhir.r4.core.TestReport
 */
export class TestReport extends Message<TestReport> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier
   *
   * @generated from field: google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier?: Identifier;

  /**
   * Informal name of the executed TestScript
   *
   * @generated from field: google.fhir.r4.core.String name = 11;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.r4.core.TestReport.StatusCode status = 12;
   */
  status?: TestReport_StatusCode;

  /**
   * Reference to the  version-specific TestScript that was executed to produce
   * this TestReport
   *
   * @generated from field: google.fhir.r4.core.Reference test_script = 13;
   */
  testScript?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.TestReport.ResultCode result = 14;
   */
  result?: TestReport_ResultCode;

  /**
   * The final score (percentage of tests passed) resulting from the execution
   * of the TestScript
   *
   * @generated from field: google.fhir.r4.core.Decimal score = 15;
   */
  score?: Decimal;

  /**
   * Name of the tester producing this report (Organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String tester = 16;
   */
  tester?: String;

  /**
   * When the TestScript was executed and this TestReport was generated
   *
   * @generated from field: google.fhir.r4.core.DateTime issued = 17;
   */
  issued?: DateTime;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestReport.Participant participant = 18;
   */
  participant: TestReport_Participant[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Setup setup = 19;
   */
  setup?: TestReport_Setup;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestReport.Test test = 20;
   */
  test: TestReport_Test[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Teardown teardown = 21;
   */
  teardown?: TestReport_Teardown;

  constructor(data?: PartialMessage<TestReport>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier },
    { no: 11, name: "name", kind: "message", T: String },
    { no: 12, name: "status", kind: "message", T: TestReport_StatusCode },
    { no: 13, name: "test_script", kind: "message", T: Reference },
    { no: 14, name: "result", kind: "message", T: TestReport_ResultCode },
    { no: 15, name: "score", kind: "message", T: Decimal },
    { no: 16, name: "tester", kind: "message", T: String },
    { no: 17, name: "issued", kind: "message", T: DateTime },
    { no: 18, name: "participant", kind: "message", T: TestReport_Participant, repeated: true },
    { no: 19, name: "setup", kind: "message", T: TestReport_Setup },
    { no: 20, name: "test", kind: "message", T: TestReport_Test, repeated: true },
    { no: 21, name: "teardown", kind: "message", T: TestReport_Teardown },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport {
    return new TestReport().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport {
    return new TestReport().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport {
    return new TestReport().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport | PlainMessage<TestReport> | undefined, b: TestReport | PlainMessage<TestReport> | undefined): boolean {
    return proto3.util.equals(TestReport, a, b);
  }
}

/**
 * completed | in-progress | waiting | stopped | entered-in-error
 *
 * @generated from message google.fhir.r4.core.TestReport.StatusCode
 */
export class TestReport_StatusCode extends Message<TestReport_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestReportStatusCode.Value value = 1;
   */
  value = TestReportStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReport_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_StatusCode {
    return new TestReport_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_StatusCode {
    return new TestReport_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_StatusCode {
    return new TestReport_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_StatusCode | PlainMessage<TestReport_StatusCode> | undefined, b: TestReport_StatusCode | PlainMessage<TestReport_StatusCode> | undefined): boolean {
    return proto3.util.equals(TestReport_StatusCode, a, b);
  }
}

/**
 * pass | fail | pending
 *
 * @generated from message google.fhir.r4.core.TestReport.ResultCode
 */
export class TestReport_ResultCode extends Message<TestReport_ResultCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestReportResultCode.Value value = 1;
   */
  value = TestReportResultCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReport_ResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.ResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportResultCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_ResultCode {
    return new TestReport_ResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_ResultCode {
    return new TestReport_ResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_ResultCode {
    return new TestReport_ResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_ResultCode | PlainMessage<TestReport_ResultCode> | undefined, b: TestReport_ResultCode | PlainMessage<TestReport_ResultCode> | undefined): boolean {
    return proto3.util.equals(TestReport_ResultCode, a, b);
  }
}

/**
 * A participant in the test execution, either the execution engine, a client,
 * or a server
 *
 * @generated from message google.fhir.r4.core.TestReport.Participant
 */
export class TestReport_Participant extends Message<TestReport_Participant> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Participant.TypeCode type = 4;
   */
  type?: TestReport_Participant_TypeCode;

  /**
   * The uri of the participant. An absolute URL is preferred
   *
   * @generated from field: google.fhir.r4.core.Uri uri = 5;
   */
  uri?: Uri;

  /**
   * The display name of the participant
   *
   * @generated from field: google.fhir.r4.core.String display = 6;
   */
  display?: String;

  constructor(data?: PartialMessage<TestReport_Participant>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Participant";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: TestReport_Participant_TypeCode },
    { no: 5, name: "uri", kind: "message", T: Uri },
    { no: 6, name: "display", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Participant {
    return new TestReport_Participant().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Participant {
    return new TestReport_Participant().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Participant {
    return new TestReport_Participant().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Participant | PlainMessage<TestReport_Participant> | undefined, b: TestReport_Participant | PlainMessage<TestReport_Participant> | undefined): boolean {
    return proto3.util.equals(TestReport_Participant, a, b);
  }
}

/**
 * test-engine | client | server
 *
 * @generated from message google.fhir.r4.core.TestReport.Participant.TypeCode
 */
export class TestReport_Participant_TypeCode extends Message<TestReport_Participant_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestReportParticipantTypeCode.Value value = 1;
   */
  value = TestReportParticipantTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReport_Participant_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Participant.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportParticipantTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Participant_TypeCode {
    return new TestReport_Participant_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Participant_TypeCode {
    return new TestReport_Participant_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Participant_TypeCode {
    return new TestReport_Participant_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Participant_TypeCode | PlainMessage<TestReport_Participant_TypeCode> | undefined, b: TestReport_Participant_TypeCode | PlainMessage<TestReport_Participant_TypeCode> | undefined): boolean {
    return proto3.util.equals(TestReport_Participant_TypeCode, a, b);
  }
}

/**
 * The results of the series of required setup operations before the tests
 * were executed
 *
 * @generated from message google.fhir.r4.core.TestReport.Setup
 */
export class TestReport_Setup extends Message<TestReport_Setup> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestReport.Setup.SetupAction action = 4;
   */
  action: TestReport_Setup_SetupAction[] = [];

  constructor(data?: PartialMessage<TestReport_Setup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Setup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestReport_Setup_SetupAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup {
    return new TestReport_Setup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup {
    return new TestReport_Setup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup {
    return new TestReport_Setup().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup | PlainMessage<TestReport_Setup> | undefined, b: TestReport_Setup | PlainMessage<TestReport_Setup> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup, a, b);
  }
}

/**
 * A setup operation or assert that was executed
 *
 * @generated from message google.fhir.r4.core.TestReport.Setup.SetupAction
 */
export class TestReport_Setup_SetupAction extends Message<TestReport_Setup_SetupAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestReport_Setup_SetupAction_Operation;

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestReport_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Setup.SetupAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestReport_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestReport_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction {
    return new TestReport_Setup_SetupAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction {
    return new TestReport_Setup_SetupAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction {
    return new TestReport_Setup_SetupAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction | PlainMessage<TestReport_Setup_SetupAction> | undefined, b: TestReport_Setup_SetupAction | PlainMessage<TestReport_Setup_SetupAction> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction, a, b);
  }
}

/**
 * The operation to perform
 *
 * @generated from message google.fhir.r4.core.TestReport.Setup.SetupAction.Operation
 */
export class TestReport_Setup_SetupAction_Operation extends Message<TestReport_Setup_SetupAction_Operation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Operation.ResultCode result = 4;
   */
  result?: TestReport_Setup_SetupAction_Operation_ResultCode;

  /**
   * A message associated with the result
   *
   * @generated from field: google.fhir.r4.core.Markdown message = 5;
   */
  message?: Markdown;

  /**
   * A link to further details on the result
   *
   * @generated from field: google.fhir.r4.core.Uri detail = 6;
   */
  detail?: Uri;

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction_Operation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Setup.SetupAction.Operation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "result", kind: "message", T: TestReport_Setup_SetupAction_Operation_ResultCode },
    { no: 5, name: "message", kind: "message", T: Markdown },
    { no: 6, name: "detail", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction_Operation {
    return new TestReport_Setup_SetupAction_Operation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Operation {
    return new TestReport_Setup_SetupAction_Operation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Operation {
    return new TestReport_Setup_SetupAction_Operation().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction_Operation | PlainMessage<TestReport_Setup_SetupAction_Operation> | undefined, b: TestReport_Setup_SetupAction_Operation | PlainMessage<TestReport_Setup_SetupAction_Operation> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction_Operation, a, b);
  }
}

/**
 * pass | skip | fail | warning | error
 *
 * @generated from message google.fhir.r4.core.TestReport.Setup.SetupAction.Operation.ResultCode
 */
export class TestReport_Setup_SetupAction_Operation_ResultCode extends Message<TestReport_Setup_SetupAction_Operation_ResultCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestReportActionResultCode.Value value = 1;
   */
  value = TestReportActionResultCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction_Operation_ResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Setup.SetupAction.Operation.ResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportActionResultCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction_Operation_ResultCode {
    return new TestReport_Setup_SetupAction_Operation_ResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Operation_ResultCode {
    return new TestReport_Setup_SetupAction_Operation_ResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Operation_ResultCode {
    return new TestReport_Setup_SetupAction_Operation_ResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction_Operation_ResultCode | PlainMessage<TestReport_Setup_SetupAction_Operation_ResultCode> | undefined, b: TestReport_Setup_SetupAction_Operation_ResultCode | PlainMessage<TestReport_Setup_SetupAction_Operation_ResultCode> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction_Operation_ResultCode, a, b);
  }
}

/**
 * The assertion to perform
 *
 * @generated from message google.fhir.r4.core.TestReport.Setup.SetupAction.Assert
 */
export class TestReport_Setup_SetupAction_Assert extends Message<TestReport_Setup_SetupAction_Assert> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Assert.ResultCode result = 4;
   */
  result?: TestReport_Setup_SetupAction_Assert_ResultCode;

  /**
   * A message associated with the result
   *
   * @generated from field: google.fhir.r4.core.Markdown message = 5;
   */
  message?: Markdown;

  /**
   * A link to further details on the result
   *
   * @generated from field: google.fhir.r4.core.String detail = 6;
   */
  detail?: String;

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction_Assert>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Setup.SetupAction.Assert";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "result", kind: "message", T: TestReport_Setup_SetupAction_Assert_ResultCode },
    { no: 5, name: "message", kind: "message", T: Markdown },
    { no: 6, name: "detail", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction_Assert {
    return new TestReport_Setup_SetupAction_Assert().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Assert {
    return new TestReport_Setup_SetupAction_Assert().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Assert {
    return new TestReport_Setup_SetupAction_Assert().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction_Assert | PlainMessage<TestReport_Setup_SetupAction_Assert> | undefined, b: TestReport_Setup_SetupAction_Assert | PlainMessage<TestReport_Setup_SetupAction_Assert> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction_Assert, a, b);
  }
}

/**
 * pass | skip | fail | warning | error
 *
 * @generated from message google.fhir.r4.core.TestReport.Setup.SetupAction.Assert.ResultCode
 */
export class TestReport_Setup_SetupAction_Assert_ResultCode extends Message<TestReport_Setup_SetupAction_Assert_ResultCode> {
  /**
   * @generated from field: google.fhir.r4.core.TestReportActionResultCode.Value value = 1;
   */
  value = TestReportActionResultCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<TestReport_Setup_SetupAction_Assert_ResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Setup.SetupAction.Assert.ResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(TestReportActionResultCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Setup_SetupAction_Assert_ResultCode {
    return new TestReport_Setup_SetupAction_Assert_ResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Assert_ResultCode {
    return new TestReport_Setup_SetupAction_Assert_ResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Setup_SetupAction_Assert_ResultCode {
    return new TestReport_Setup_SetupAction_Assert_ResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Setup_SetupAction_Assert_ResultCode | PlainMessage<TestReport_Setup_SetupAction_Assert_ResultCode> | undefined, b: TestReport_Setup_SetupAction_Assert_ResultCode | PlainMessage<TestReport_Setup_SetupAction_Assert_ResultCode> | undefined): boolean {
    return proto3.util.equals(TestReport_Setup_SetupAction_Assert_ResultCode, a, b);
  }
}

/**
 * A test executed from the test script
 *
 * @generated from message google.fhir.r4.core.TestReport.Test
 */
export class TestReport_Test extends Message<TestReport_Test> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Tracking/logging name of this test
   *
   * @generated from field: google.fhir.r4.core.String name = 4;
   */
  name?: String;

  /**
   * Tracking/reporting short description of the test
   *
   * @generated from field: google.fhir.r4.core.String description = 5;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.TestReport.Test.TestAction action = 6;
   */
  action: TestReport_Test_TestAction[] = [];

  constructor(data?: PartialMessage<TestReport_Test>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Test";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "name", kind: "message", T: String },
    { no: 5, name: "description", kind: "message", T: String },
    { no: 6, name: "action", kind: "message", T: TestReport_Test_TestAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Test {
    return new TestReport_Test().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Test {
    return new TestReport_Test().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Test {
    return new TestReport_Test().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Test | PlainMessage<TestReport_Test> | undefined, b: TestReport_Test | PlainMessage<TestReport_Test> | undefined): boolean {
    return proto3.util.equals(TestReport_Test, a, b);
  }
}

/**
 * A test operation or assert that was performed
 *
 * @generated from message google.fhir.r4.core.TestReport.Test.TestAction
 */
export class TestReport_Test_TestAction extends Message<TestReport_Test_TestAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The operation performed
   *
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestReport_Setup_SetupAction_Operation;

  /**
   * The assertion performed
   *
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Assert assert_value = 5 [json_name = "assert"];
   */
  assertValue?: TestReport_Setup_SetupAction_Assert;

  constructor(data?: PartialMessage<TestReport_Test_TestAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Test.TestAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestReport_Setup_SetupAction_Operation },
    { no: 5, name: "assert_value", jsonName: "assert", kind: "message", T: TestReport_Setup_SetupAction_Assert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Test_TestAction {
    return new TestReport_Test_TestAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Test_TestAction {
    return new TestReport_Test_TestAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Test_TestAction {
    return new TestReport_Test_TestAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Test_TestAction | PlainMessage<TestReport_Test_TestAction> | undefined, b: TestReport_Test_TestAction | PlainMessage<TestReport_Test_TestAction> | undefined): boolean {
    return proto3.util.equals(TestReport_Test_TestAction, a, b);
  }
}

/**
 * The results of running the series of required clean up steps
 *
 * @generated from message google.fhir.r4.core.TestReport.Teardown
 */
export class TestReport_Teardown extends Message<TestReport_Teardown> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.TestReport.Teardown.TeardownAction action = 4;
   */
  action: TestReport_Teardown_TeardownAction[] = [];

  constructor(data?: PartialMessage<TestReport_Teardown>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Teardown";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "action", kind: "message", T: TestReport_Teardown_TeardownAction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Teardown {
    return new TestReport_Teardown().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Teardown {
    return new TestReport_Teardown().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Teardown {
    return new TestReport_Teardown().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Teardown | PlainMessage<TestReport_Teardown> | undefined, b: TestReport_Teardown | PlainMessage<TestReport_Teardown> | undefined): boolean {
    return proto3.util.equals(TestReport_Teardown, a, b);
  }
}

/**
 * One or more teardown operations performed
 *
 * @generated from message google.fhir.r4.core.TestReport.Teardown.TeardownAction
 */
export class TestReport_Teardown_TeardownAction extends Message<TestReport_Teardown_TeardownAction> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The teardown operation performed
   *
   * @generated from field: google.fhir.r4.core.TestReport.Setup.SetupAction.Operation operation = 4;
   */
  operation?: TestReport_Setup_SetupAction_Operation;

  constructor(data?: PartialMessage<TestReport_Teardown_TeardownAction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReport.Teardown.TeardownAction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "operation", kind: "message", T: TestReport_Setup_SetupAction_Operation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReport_Teardown_TeardownAction {
    return new TestReport_Teardown_TeardownAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReport_Teardown_TeardownAction {
    return new TestReport_Teardown_TeardownAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReport_Teardown_TeardownAction {
    return new TestReport_Teardown_TeardownAction().fromJsonString(jsonString, options);
  }

  static equals(a: TestReport_Teardown_TeardownAction | PlainMessage<TestReport_Teardown_TeardownAction> | undefined, b: TestReport_Teardown_TeardownAction | PlainMessage<TestReport_Teardown_TeardownAction> | undefined): boolean {
    return proto3.util.equals(TestReport_Teardown_TeardownAction, a, b);
  }
}

