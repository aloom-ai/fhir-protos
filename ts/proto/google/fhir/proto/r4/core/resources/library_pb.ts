//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/library.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Attachment, Boolean, Code, CodeableConcept, ContactDetail, DataRequirement, Date, DateTime, Extension, Id, Identifier, Markdown, Meta, Narrative, ParameterDefinition, Period, Reference, RelatedArtifact, String, Uri, UsageContext } from "../datatypes_pb.js";
import { PublicationStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Library.
 * Represents a library of quality improvement components.
 * See http://hl7.org/fhir/StructureDefinition/Library
 *
 * @generated from message google.fhir.r4.core.Library
 */
export class Library extends Message<Library> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this library, represented as a URI (globally
   * unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Additional identifier for the library
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 11;
   */
  identifier: Identifier[] = [];

  /**
   * Business version of the library
   *
   * @generated from field: google.fhir.r4.core.String version = 12;
   */
  version?: String;

  /**
   * Name for this library (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * Name for this library (human friendly)
   *
   * @generated from field: google.fhir.r4.core.String title = 14;
   */
  title?: String;

  /**
   * Subordinate title of the library
   *
   * @generated from field: google.fhir.r4.core.String subtitle = 15;
   */
  subtitle?: String;

  /**
   * @generated from field: google.fhir.r4.core.Library.StatusCode status = 16;
   */
  status?: Library_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 17;
   */
  experimental?: Boolean;

  /**
   * logic-library | model-definition | asset-collection | module-definition
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 18;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Library.SubjectX subject = 19;
   */
  subject?: Library_SubjectX;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 20;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 21;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 22;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the library
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 23;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 24;
   */
  useContext: UsageContext[] = [];

  /**
   * Intended jurisdiction for library (if applicable)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept jurisdiction = 25;
   */
  jurisdiction: CodeableConcept[] = [];

  /**
   * Why this library is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 26;
   */
  purpose?: Markdown;

  /**
   * Describes the clinical usage of the library
   *
   * @generated from field: google.fhir.r4.core.String usage = 27;
   */
  usage?: String;

  /**
   * Use and/or publishing restrictions
   *
   * @generated from field: google.fhir.r4.core.Markdown copyright = 28;
   */
  copyright?: Markdown;

  /**
   * When the library was approved by publisher
   *
   * @generated from field: google.fhir.r4.core.Date approval_date = 29;
   */
  approvalDate?: Date;

  /**
   * When the library was last reviewed
   *
   * @generated from field: google.fhir.r4.core.Date last_review_date = 30;
   */
  lastReviewDate?: Date;

  /**
   * When the library is expected to be used
   *
   * @generated from field: google.fhir.r4.core.Period effective_period = 31;
   */
  effectivePeriod?: Period;

  /**
   * E.g. Education, Treatment, Assessment, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept topic = 32;
   */
  topic: CodeableConcept[] = [];

  /**
   * Who authored the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail author = 33;
   */
  author: ContactDetail[] = [];

  /**
   * Who edited the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail editor = 34;
   */
  editor: ContactDetail[] = [];

  /**
   * Who reviewed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail reviewer = 35;
   */
  reviewer: ContactDetail[] = [];

  /**
   * Who endorsed the content
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail endorser = 36;
   */
  endorser: ContactDetail[] = [];

  /**
   * Additional documentation, citations, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.RelatedArtifact related_artifact = 37;
   */
  relatedArtifact: RelatedArtifact[] = [];

  /**
   * Parameters defined by the library
   *
   * @generated from field: repeated google.fhir.r4.core.ParameterDefinition parameter = 38;
   */
  parameter: ParameterDefinition[] = [];

  /**
   * What data is referenced by this library
   *
   * @generated from field: repeated google.fhir.r4.core.DataRequirement data_requirement = 39;
   */
  dataRequirement: DataRequirement[] = [];

  /**
   * Contents of the library, either embedded or referenced
   *
   * @generated from field: repeated google.fhir.r4.core.Attachment content = 40;
   */
  content: Attachment[] = [];

  constructor(data?: PartialMessage<Library>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Library";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 12, name: "version", kind: "message", T: String },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "title", kind: "message", T: String },
    { no: 15, name: "subtitle", kind: "message", T: String },
    { no: 16, name: "status", kind: "message", T: Library_StatusCode },
    { no: 17, name: "experimental", kind: "message", T: Boolean },
    { no: 18, name: "type", kind: "message", T: CodeableConcept },
    { no: 19, name: "subject", kind: "message", T: Library_SubjectX },
    { no: 20, name: "date", kind: "message", T: DateTime },
    { no: 21, name: "publisher", kind: "message", T: String },
    { no: 22, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 23, name: "description", kind: "message", T: Markdown },
    { no: 24, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 25, name: "jurisdiction", kind: "message", T: CodeableConcept, repeated: true },
    { no: 26, name: "purpose", kind: "message", T: Markdown },
    { no: 27, name: "usage", kind: "message", T: String },
    { no: 28, name: "copyright", kind: "message", T: Markdown },
    { no: 29, name: "approval_date", kind: "message", T: Date },
    { no: 30, name: "last_review_date", kind: "message", T: Date },
    { no: 31, name: "effective_period", kind: "message", T: Period },
    { no: 32, name: "topic", kind: "message", T: CodeableConcept, repeated: true },
    { no: 33, name: "author", kind: "message", T: ContactDetail, repeated: true },
    { no: 34, name: "editor", kind: "message", T: ContactDetail, repeated: true },
    { no: 35, name: "reviewer", kind: "message", T: ContactDetail, repeated: true },
    { no: 36, name: "endorser", kind: "message", T: ContactDetail, repeated: true },
    { no: 37, name: "related_artifact", kind: "message", T: RelatedArtifact, repeated: true },
    { no: 38, name: "parameter", kind: "message", T: ParameterDefinition, repeated: true },
    { no: 39, name: "data_requirement", kind: "message", T: DataRequirement, repeated: true },
    { no: 40, name: "content", kind: "message", T: Attachment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Library {
    return new Library().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Library {
    return new Library().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Library {
    return new Library().fromJsonString(jsonString, options);
  }

  static equals(a: Library | PlainMessage<Library> | undefined, b: Library | PlainMessage<Library> | undefined): boolean {
    return proto3.util.equals(Library, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.Library.StatusCode
 */
export class Library_StatusCode extends Message<Library_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Library_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Library.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Library_StatusCode {
    return new Library_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Library_StatusCode {
    return new Library_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Library_StatusCode {
    return new Library_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: Library_StatusCode | PlainMessage<Library_StatusCode> | undefined, b: Library_StatusCode | PlainMessage<Library_StatusCode> | undefined): boolean {
    return proto3.util.equals(Library_StatusCode, a, b);
  }
}

/**
 * Type of individual the library content is focused on
 *
 * @generated from message google.fhir.r4.core.Library.SubjectX
 */
export class Library_SubjectX extends Message<Library_SubjectX> {
  /**
   * @generated from oneof google.fhir.r4.core.Library.SubjectX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Library_SubjectX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Library.SubjectX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Library_SubjectX {
    return new Library_SubjectX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Library_SubjectX {
    return new Library_SubjectX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Library_SubjectX {
    return new Library_SubjectX().fromJsonString(jsonString, options);
  }

  static equals(a: Library_SubjectX | PlainMessage<Library_SubjectX> | undefined, b: Library_SubjectX | PlainMessage<Library_SubjectX> | undefined): boolean {
    return proto3.util.equals(Library_SubjectX, a, b);
  }
}

