//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/verification_result.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, Date, DateTime, Extension, Id, Meta, Narrative, Reference, Signature, String, Timing, Uri } from "../datatypes_pb.js";
import { StatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for VerificationResult.
 * Describes validation requirements, source(s), status and dates for one or
 * more elements. See http://hl7.org/fhir/StructureDefinition/VerificationResult
 *
 * @generated from message google.fhir.r4.core.VerificationResult
 */
export class VerificationResult extends Message<VerificationResult> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * A resource that was validated
   *
   * @generated from field: repeated google.fhir.r4.core.Reference target = 10;
   */
  target: Reference[] = [];

  /**
   * The fhirpath location(s) within the resource that was validated
   *
   * @generated from field: repeated google.fhir.r4.core.String target_location = 11;
   */
  targetLocation: String[] = [];

  /**
   * none | initial | periodic
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept need = 12;
   */
  need?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.VerificationResult.StatusCode status = 13;
   */
  status?: VerificationResult_StatusCode;

  /**
   * When the validation status was updated
   *
   * @generated from field: google.fhir.r4.core.DateTime status_date = 14;
   */
  statusDate?: DateTime;

  /**
   * nothing | primary | multiple
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept validation_type = 15;
   */
  validationType?: CodeableConcept;

  /**
   * The primary process by which the target is validated (edit check; value
   * set; primary source; multiple sources; standalone; in context)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept validation_process = 16;
   */
  validationProcess: CodeableConcept[] = [];

  /**
   * Frequency of revalidation
   *
   * @generated from field: google.fhir.r4.core.Timing frequency = 17;
   */
  frequency?: Timing;

  /**
   * The date/time validation was last completed (including failed validations)
   *
   * @generated from field: google.fhir.r4.core.DateTime last_performed = 18;
   */
  lastPerformed?: DateTime;

  /**
   * The date when target is next validated, if appropriate
   *
   * @generated from field: google.fhir.r4.core.Date next_scheduled = 19;
   */
  nextScheduled?: Date;

  /**
   * fatal | warn | rec-only | none
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept failure_action = 20;
   */
  failureAction?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.VerificationResult.PrimarySource primary_source = 21;
   */
  primarySource: VerificationResult_PrimarySource[] = [];

  /**
   * @generated from field: google.fhir.r4.core.VerificationResult.Attestation attestation = 22;
   */
  attestation?: VerificationResult_Attestation;

  /**
   * @generated from field: repeated google.fhir.r4.core.VerificationResult.Validator validator = 23;
   */
  validator: VerificationResult_Validator[] = [];

  constructor(data?: PartialMessage<VerificationResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VerificationResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "target", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "target_location", kind: "message", T: String, repeated: true },
    { no: 12, name: "need", kind: "message", T: CodeableConcept },
    { no: 13, name: "status", kind: "message", T: VerificationResult_StatusCode },
    { no: 14, name: "status_date", kind: "message", T: DateTime },
    { no: 15, name: "validation_type", kind: "message", T: CodeableConcept },
    { no: 16, name: "validation_process", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "frequency", kind: "message", T: Timing },
    { no: 18, name: "last_performed", kind: "message", T: DateTime },
    { no: 19, name: "next_scheduled", kind: "message", T: Date },
    { no: 20, name: "failure_action", kind: "message", T: CodeableConcept },
    { no: 21, name: "primary_source", kind: "message", T: VerificationResult_PrimarySource, repeated: true },
    { no: 22, name: "attestation", kind: "message", T: VerificationResult_Attestation },
    { no: 23, name: "validator", kind: "message", T: VerificationResult_Validator, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerificationResult {
    return new VerificationResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerificationResult {
    return new VerificationResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerificationResult {
    return new VerificationResult().fromJsonString(jsonString, options);
  }

  static equals(a: VerificationResult | PlainMessage<VerificationResult> | undefined, b: VerificationResult | PlainMessage<VerificationResult> | undefined): boolean {
    return proto3.util.equals(VerificationResult, a, b);
  }
}

/**
 * attested | validated | in-process | req-revalid | val-fail | reval-fail
 *
 * @generated from message google.fhir.r4.core.VerificationResult.StatusCode
 */
export class VerificationResult_StatusCode extends Message<VerificationResult_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.StatusCode.Value value = 1;
   */
  value = StatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<VerificationResult_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VerificationResult.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(StatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerificationResult_StatusCode {
    return new VerificationResult_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerificationResult_StatusCode {
    return new VerificationResult_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerificationResult_StatusCode {
    return new VerificationResult_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: VerificationResult_StatusCode | PlainMessage<VerificationResult_StatusCode> | undefined, b: VerificationResult_StatusCode | PlainMessage<VerificationResult_StatusCode> | undefined): boolean {
    return proto3.util.equals(VerificationResult_StatusCode, a, b);
  }
}

/**
 * Information about the primary source(s) involved in validation
 *
 * @generated from message google.fhir.r4.core.VerificationResult.PrimarySource
 */
export class VerificationResult_PrimarySource extends Message<VerificationResult_PrimarySource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the primary source
   *
   * @generated from field: google.fhir.r4.core.Reference who = 4;
   */
  who?: Reference;

  /**
   * Type of primary source (License Board; Primary Education; Continuing
   * Education; Postal Service; Relationship owner; Registration Authority;
   * legal source; issuing source; authoritative source)
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 5;
   */
  type: CodeableConcept[] = [];

  /**
   * Method for exchanging information with the primary source
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept communication_method = 6;
   */
  communicationMethod: CodeableConcept[] = [];

  /**
   * successful | failed | unknown
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept validation_status = 7;
   */
  validationStatus?: CodeableConcept;

  /**
   * When the target was validated against the primary source
   *
   * @generated from field: google.fhir.r4.core.DateTime validation_date = 8;
   */
  validationDate?: DateTime;

  /**
   * yes | no | undetermined
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept can_push_updates = 9;
   */
  canPushUpdates?: CodeableConcept;

  /**
   * specific | any | source
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept push_type_available = 10;
   */
  pushTypeAvailable: CodeableConcept[] = [];

  constructor(data?: PartialMessage<VerificationResult_PrimarySource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VerificationResult.PrimarySource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "who", kind: "message", T: Reference },
    { no: 5, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 6, name: "communication_method", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "validation_status", kind: "message", T: CodeableConcept },
    { no: 8, name: "validation_date", kind: "message", T: DateTime },
    { no: 9, name: "can_push_updates", kind: "message", T: CodeableConcept },
    { no: 10, name: "push_type_available", kind: "message", T: CodeableConcept, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerificationResult_PrimarySource {
    return new VerificationResult_PrimarySource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerificationResult_PrimarySource {
    return new VerificationResult_PrimarySource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerificationResult_PrimarySource {
    return new VerificationResult_PrimarySource().fromJsonString(jsonString, options);
  }

  static equals(a: VerificationResult_PrimarySource | PlainMessage<VerificationResult_PrimarySource> | undefined, b: VerificationResult_PrimarySource | PlainMessage<VerificationResult_PrimarySource> | undefined): boolean {
    return proto3.util.equals(VerificationResult_PrimarySource, a, b);
  }
}

/**
 * Information about the entity attesting to information
 *
 * @generated from message google.fhir.r4.core.VerificationResult.Attestation
 */
export class VerificationResult_Attestation extends Message<VerificationResult_Attestation> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The individual or organization attesting to information
   *
   * @generated from field: google.fhir.r4.core.Reference who = 4;
   */
  who?: Reference;

  /**
   * When the who is asserting on behalf of another (organization or
   * individual)
   *
   * @generated from field: google.fhir.r4.core.Reference on_behalf_of = 5;
   */
  onBehalfOf?: Reference;

  /**
   * The method by which attested information was submitted/retrieved
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept communication_method = 6;
   */
  communicationMethod?: CodeableConcept;

  /**
   * The date the information was attested to
   *
   * @generated from field: google.fhir.r4.core.Date date = 7;
   */
  date?: Date;

  /**
   * A digital identity certificate associated with the attestation source
   *
   * @generated from field: google.fhir.r4.core.String source_identity_certificate = 8;
   */
  sourceIdentityCertificate?: String;

  /**
   * A digital identity certificate associated with the proxy entity
   * submitting attested information on behalf of the attestation source
   *
   * @generated from field: google.fhir.r4.core.String proxy_identity_certificate = 9;
   */
  proxyIdentityCertificate?: String;

  /**
   * Proxy signature
   *
   * @generated from field: google.fhir.r4.core.Signature proxy_signature = 10;
   */
  proxySignature?: Signature;

  /**
   * Attester signature
   *
   * @generated from field: google.fhir.r4.core.Signature source_signature = 11;
   */
  sourceSignature?: Signature;

  constructor(data?: PartialMessage<VerificationResult_Attestation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VerificationResult.Attestation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "who", kind: "message", T: Reference },
    { no: 5, name: "on_behalf_of", kind: "message", T: Reference },
    { no: 6, name: "communication_method", kind: "message", T: CodeableConcept },
    { no: 7, name: "date", kind: "message", T: Date },
    { no: 8, name: "source_identity_certificate", kind: "message", T: String },
    { no: 9, name: "proxy_identity_certificate", kind: "message", T: String },
    { no: 10, name: "proxy_signature", kind: "message", T: Signature },
    { no: 11, name: "source_signature", kind: "message", T: Signature },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerificationResult_Attestation {
    return new VerificationResult_Attestation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerificationResult_Attestation {
    return new VerificationResult_Attestation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerificationResult_Attestation {
    return new VerificationResult_Attestation().fromJsonString(jsonString, options);
  }

  static equals(a: VerificationResult_Attestation | PlainMessage<VerificationResult_Attestation> | undefined, b: VerificationResult_Attestation | PlainMessage<VerificationResult_Attestation> | undefined): boolean {
    return proto3.util.equals(VerificationResult_Attestation, a, b);
  }
}

/**
 * Information about the entity validating information
 *
 * @generated from message google.fhir.r4.core.VerificationResult.Validator
 */
export class VerificationResult_Validator extends Message<VerificationResult_Validator> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the organization validating information
   *
   * @generated from field: google.fhir.r4.core.Reference organization = 4;
   */
  organization?: Reference;

  /**
   * A digital identity certificate associated with the validator
   *
   * @generated from field: google.fhir.r4.core.String identity_certificate = 5;
   */
  identityCertificate?: String;

  /**
   * Validator signature
   *
   * @generated from field: google.fhir.r4.core.Signature attestation_signature = 6;
   */
  attestationSignature?: Signature;

  constructor(data?: PartialMessage<VerificationResult_Validator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VerificationResult.Validator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "organization", kind: "message", T: Reference },
    { no: 5, name: "identity_certificate", kind: "message", T: String },
    { no: 6, name: "attestation_signature", kind: "message", T: Signature },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerificationResult_Validator {
    return new VerificationResult_Validator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerificationResult_Validator {
    return new VerificationResult_Validator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerificationResult_Validator {
    return new VerificationResult_Validator().fromJsonString(jsonString, options);
  }

  static equals(a: VerificationResult_Validator | PlainMessage<VerificationResult_Validator> | undefined, b: VerificationResult_Validator | PlainMessage<VerificationResult_Validator> | undefined): boolean {
    return proto3.util.equals(VerificationResult_Validator, a, b);
  }
}

