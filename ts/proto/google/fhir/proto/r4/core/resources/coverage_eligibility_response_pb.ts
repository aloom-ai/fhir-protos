//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/coverage_eligibility_response.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Code, CodeableConcept, Date, DateTime, Extension, Id, Identifier, Meta, Money, Narrative, Period, Reference, String, UnsignedInt, Uri } from "../datatypes_pb.js";
import { ClaimProcessingCode_Value, EligibilityResponsePurposeCode_Value, FinancialResourceStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for CoverageEligibilityResponse.
 * CoverageEligibilityResponse resource.
 * See http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse
 */
export class CoverageEligibilityResponse extends Message<CoverageEligibilityResponse> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier for coverage eligiblity request
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CoverageEligibilityResponse.StatusCode status = 11;
   */
  status?: CoverageEligibilityResponse_StatusCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.CoverageEligibilityResponse.PurposeCode purpose = 12;
   */
  purpose: CoverageEligibilityResponse_PurposeCode[] = [];

  /**
   * Intended recipient of products and services
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 13;
   */
  patient?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.CoverageEligibilityResponse.ServicedX serviced = 14;
   */
  serviced?: CoverageEligibilityResponse_ServicedX;

  /**
   * Response creation date
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 15;
   */
  created?: DateTime;

  /**
   * Party responsible for the request
   *
   * @generated from field: google.fhir.r4.core.Reference requestor = 16;
   */
  requestor?: Reference;

  /**
   * Eligibility request reference
   *
   * @generated from field: google.fhir.r4.core.Reference request = 17;
   */
  request?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.CoverageEligibilityResponse.OutcomeCode outcome = 18;
   */
  outcome?: CoverageEligibilityResponse_OutcomeCode;

  /**
   * Disposition Message
   *
   * @generated from field: google.fhir.r4.core.String disposition = 19;
   */
  disposition?: String;

  /**
   * Coverage issuer
   *
   * @generated from field: google.fhir.r4.core.Reference insurer = 20;
   */
  insurer?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.CoverageEligibilityResponse.Insurance insurance = 21;
   */
  insurance: CoverageEligibilityResponse_Insurance[] = [];

  /**
   * Preauthorization reference
   *
   * @generated from field: google.fhir.r4.core.String pre_auth_ref = 22;
   */
  preAuthRef?: String;

  /**
   * Printed form identifier
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept form = 23;
   */
  form?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.CoverageEligibilityResponse.Errors error = 24;
   */
  error: CoverageEligibilityResponse_Errors[] = [];

  constructor(data?: PartialMessage<CoverageEligibilityResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: CoverageEligibilityResponse_StatusCode },
    { no: 12, name: "purpose", kind: "message", T: CoverageEligibilityResponse_PurposeCode, repeated: true },
    { no: 13, name: "patient", kind: "message", T: Reference },
    { no: 14, name: "serviced", kind: "message", T: CoverageEligibilityResponse_ServicedX },
    { no: 15, name: "created", kind: "message", T: DateTime },
    { no: 16, name: "requestor", kind: "message", T: Reference },
    { no: 17, name: "request", kind: "message", T: Reference },
    { no: 18, name: "outcome", kind: "message", T: CoverageEligibilityResponse_OutcomeCode },
    { no: 19, name: "disposition", kind: "message", T: String },
    { no: 20, name: "insurer", kind: "message", T: Reference },
    { no: 21, name: "insurance", kind: "message", T: CoverageEligibilityResponse_Insurance, repeated: true },
    { no: 22, name: "pre_auth_ref", kind: "message", T: String },
    { no: 23, name: "form", kind: "message", T: CodeableConcept },
    { no: 24, name: "error", kind: "message", T: CoverageEligibilityResponse_Errors, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse {
    return new CoverageEligibilityResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse {
    return new CoverageEligibilityResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse {
    return new CoverageEligibilityResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse | PlainMessage<CoverageEligibilityResponse> | undefined, b: CoverageEligibilityResponse | PlainMessage<CoverageEligibilityResponse> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse, a, b);
  }
}

/**
 * active | cancelled | draft | entered-in-error
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.StatusCode
 */
export class CoverageEligibilityResponse_StatusCode extends Message<CoverageEligibilityResponse_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.FinancialResourceStatusCode.Value value = 1;
   */
  value = FinancialResourceStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CoverageEligibilityResponse_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(FinancialResourceStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_StatusCode {
    return new CoverageEligibilityResponse_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_StatusCode {
    return new CoverageEligibilityResponse_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_StatusCode {
    return new CoverageEligibilityResponse_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_StatusCode | PlainMessage<CoverageEligibilityResponse_StatusCode> | undefined, b: CoverageEligibilityResponse_StatusCode | PlainMessage<CoverageEligibilityResponse_StatusCode> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_StatusCode, a, b);
  }
}

/**
 * auth-requirements | benefits | discovery | validation
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.PurposeCode
 */
export class CoverageEligibilityResponse_PurposeCode extends Message<CoverageEligibilityResponse_PurposeCode> {
  /**
   * @generated from field: google.fhir.r4.core.EligibilityResponsePurposeCode.Value value = 1;
   */
  value = EligibilityResponsePurposeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CoverageEligibilityResponse_PurposeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.PurposeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EligibilityResponsePurposeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_PurposeCode {
    return new CoverageEligibilityResponse_PurposeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_PurposeCode {
    return new CoverageEligibilityResponse_PurposeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_PurposeCode {
    return new CoverageEligibilityResponse_PurposeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_PurposeCode | PlainMessage<CoverageEligibilityResponse_PurposeCode> | undefined, b: CoverageEligibilityResponse_PurposeCode | PlainMessage<CoverageEligibilityResponse_PurposeCode> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_PurposeCode, a, b);
  }
}

/**
 * Estimated date or dates of service
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.ServicedX
 */
export class CoverageEligibilityResponse_ServicedX extends Message<CoverageEligibilityResponse_ServicedX> {
  /**
   * @generated from oneof google.fhir.r4.core.CoverageEligibilityResponse.ServicedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Date date = 1;
     */
    value: Date;
    case: "date";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CoverageEligibilityResponse_ServicedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.ServicedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "message", T: Date, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_ServicedX {
    return new CoverageEligibilityResponse_ServicedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_ServicedX {
    return new CoverageEligibilityResponse_ServicedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_ServicedX {
    return new CoverageEligibilityResponse_ServicedX().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_ServicedX | PlainMessage<CoverageEligibilityResponse_ServicedX> | undefined, b: CoverageEligibilityResponse_ServicedX | PlainMessage<CoverageEligibilityResponse_ServicedX> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_ServicedX, a, b);
  }
}

/**
 * queued | complete | error | partial
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.OutcomeCode
 */
export class CoverageEligibilityResponse_OutcomeCode extends Message<CoverageEligibilityResponse_OutcomeCode> {
  /**
   * @generated from field: google.fhir.r4.core.ClaimProcessingCode.Value value = 1;
   */
  value = ClaimProcessingCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CoverageEligibilityResponse_OutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.OutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ClaimProcessingCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_OutcomeCode {
    return new CoverageEligibilityResponse_OutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_OutcomeCode {
    return new CoverageEligibilityResponse_OutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_OutcomeCode {
    return new CoverageEligibilityResponse_OutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_OutcomeCode | PlainMessage<CoverageEligibilityResponse_OutcomeCode> | undefined, b: CoverageEligibilityResponse_OutcomeCode | PlainMessage<CoverageEligibilityResponse_OutcomeCode> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_OutcomeCode, a, b);
  }
}

/**
 * Patient insurance information
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.Insurance
 */
export class CoverageEligibilityResponse_Insurance extends Message<CoverageEligibilityResponse_Insurance> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Insurance information
   *
   * @generated from field: google.fhir.r4.core.Reference coverage = 4;
   */
  coverage?: Reference;

  /**
   * Coverage inforce indicator
   *
   * @generated from field: google.fhir.r4.core.Boolean inforce = 5;
   */
  inforce?: Boolean;

  /**
   * When the benefits are applicable
   *
   * @generated from field: google.fhir.r4.core.Period benefit_period = 6;
   */
  benefitPeriod?: Period;

  /**
   * @generated from field: repeated google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items item = 7;
   */
  item: CoverageEligibilityResponse_Insurance_Items[] = [];

  constructor(data?: PartialMessage<CoverageEligibilityResponse_Insurance>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.Insurance";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "coverage", kind: "message", T: Reference },
    { no: 5, name: "inforce", kind: "message", T: Boolean },
    { no: 6, name: "benefit_period", kind: "message", T: Period },
    { no: 7, name: "item", kind: "message", T: CoverageEligibilityResponse_Insurance_Items, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_Insurance {
    return new CoverageEligibilityResponse_Insurance().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance {
    return new CoverageEligibilityResponse_Insurance().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance {
    return new CoverageEligibilityResponse_Insurance().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_Insurance | PlainMessage<CoverageEligibilityResponse_Insurance> | undefined, b: CoverageEligibilityResponse_Insurance | PlainMessage<CoverageEligibilityResponse_Insurance> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_Insurance, a, b);
  }
}

/**
 * Benefits and authorization details
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items
 */
export class CoverageEligibilityResponse_Insurance_Items extends Message<CoverageEligibilityResponse_Insurance_Items> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept category = 4;
   */
  category?: CodeableConcept;

  /**
   * Billing, service, product, or drug code
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept product_or_service = 5;
   */
  productOrService?: CodeableConcept;

  /**
   * Product or service billing modifiers
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept modifier = 6;
   */
  modifier: CodeableConcept[] = [];

  /**
   * Performing practitioner
   *
   * @generated from field: google.fhir.r4.core.Reference provider = 7;
   */
  provider?: Reference;

  /**
   * Excluded from the plan
   *
   * @generated from field: google.fhir.r4.core.Boolean excluded = 8;
   */
  excluded?: Boolean;

  /**
   * Short name for the benefit
   *
   * @generated from field: google.fhir.r4.core.String name = 9;
   */
  name?: String;

  /**
   * Description of the benefit or services covered
   *
   * @generated from field: google.fhir.r4.core.String description = 10;
   */
  description?: String;

  /**
   * In or out of network
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept network = 11;
   */
  network?: CodeableConcept;

  /**
   * Individual or family
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept unit = 12;
   */
  unit?: CodeableConcept;

  /**
   * Annual or lifetime
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept term = 13;
   */
  term?: CodeableConcept;

  /**
   * @generated from field: repeated google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit benefit = 14;
   */
  benefit: CoverageEligibilityResponse_Insurance_Items_Benefit[] = [];

  /**
   * Authorization required flag
   *
   * @generated from field: google.fhir.r4.core.Boolean authorization_required = 15;
   */
  authorizationRequired?: Boolean;

  /**
   * Type of required supporting materials
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept authorization_supporting = 16;
   */
  authorizationSupporting: CodeableConcept[] = [];

  /**
   * Preauthorization requirements endpoint
   *
   * @generated from field: google.fhir.r4.core.Uri authorization_url = 17;
   */
  authorizationUrl?: Uri;

  constructor(data?: PartialMessage<CoverageEligibilityResponse_Insurance_Items>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "category", kind: "message", T: CodeableConcept },
    { no: 5, name: "product_or_service", kind: "message", T: CodeableConcept },
    { no: 6, name: "modifier", kind: "message", T: CodeableConcept, repeated: true },
    { no: 7, name: "provider", kind: "message", T: Reference },
    { no: 8, name: "excluded", kind: "message", T: Boolean },
    { no: 9, name: "name", kind: "message", T: String },
    { no: 10, name: "description", kind: "message", T: String },
    { no: 11, name: "network", kind: "message", T: CodeableConcept },
    { no: 12, name: "unit", kind: "message", T: CodeableConcept },
    { no: 13, name: "term", kind: "message", T: CodeableConcept },
    { no: 14, name: "benefit", kind: "message", T: CoverageEligibilityResponse_Insurance_Items_Benefit, repeated: true },
    { no: 15, name: "authorization_required", kind: "message", T: Boolean },
    { no: 16, name: "authorization_supporting", kind: "message", T: CodeableConcept, repeated: true },
    { no: 17, name: "authorization_url", kind: "message", T: Uri },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_Insurance_Items {
    return new CoverageEligibilityResponse_Insurance_Items().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items {
    return new CoverageEligibilityResponse_Insurance_Items().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items {
    return new CoverageEligibilityResponse_Insurance_Items().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_Insurance_Items | PlainMessage<CoverageEligibilityResponse_Insurance_Items> | undefined, b: CoverageEligibilityResponse_Insurance_Items | PlainMessage<CoverageEligibilityResponse_Insurance_Items> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_Insurance_Items, a, b);
  }
}

/**
 * Benefit Summary
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit
 */
export class CoverageEligibilityResponse_Insurance_Items_Benefit extends Message<CoverageEligibilityResponse_Insurance_Items_Benefit> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Benefit classification
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 4;
   */
  type?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.AllowedX allowed = 5;
   */
  allowed?: CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX;

  /**
   * @generated from field: google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.UsedX used = 6;
   */
  used?: CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX;

  constructor(data?: PartialMessage<CoverageEligibilityResponse_Insurance_Items_Benefit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "type", kind: "message", T: CodeableConcept },
    { no: 5, name: "allowed", kind: "message", T: CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX },
    { no: 6, name: "used", kind: "message", T: CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_Insurance_Items_Benefit | PlainMessage<CoverageEligibilityResponse_Insurance_Items_Benefit> | undefined, b: CoverageEligibilityResponse_Insurance_Items_Benefit | PlainMessage<CoverageEligibilityResponse_Insurance_Items_Benefit> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_Insurance_Items_Benefit, a, b);
  }
}

/**
 * Benefits allowed
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.AllowedX
 */
export class CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX extends Message<CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX> {
  /**
   * @generated from oneof google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.AllowedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 3;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.AllowedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 3, name: "money", kind: "message", T: Money, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX | PlainMessage<CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX> | undefined, b: CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX | PlainMessage<CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_Insurance_Items_Benefit_AllowedX, a, b);
  }
}

/**
 * Benefits used
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.UsedX
 */
export class CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX extends Message<CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX> {
  /**
   * @generated from oneof google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.UsedX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.UnsignedInt unsigned_int = 1;
     */
    value: UnsignedInt;
    case: "unsignedInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Money money = 3;
     */
    value: Money;
    case: "money";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.Insurance.Items.Benefit.UsedX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_int", kind: "message", T: UnsignedInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
    { no: 3, name: "money", kind: "message", T: Money, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX {
    return new CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX | PlainMessage<CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX> | undefined, b: CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX | PlainMessage<CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_Insurance_Items_Benefit_UsedX, a, b);
  }
}

/**
 * Processing errors
 *
 * @generated from message google.fhir.r4.core.CoverageEligibilityResponse.Errors
 */
export class CoverageEligibilityResponse_Errors extends Message<CoverageEligibilityResponse_Errors> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Error code detailing processing issues
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  constructor(data?: PartialMessage<CoverageEligibilityResponse_Errors>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CoverageEligibilityResponse.Errors";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoverageEligibilityResponse_Errors {
    return new CoverageEligibilityResponse_Errors().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Errors {
    return new CoverageEligibilityResponse_Errors().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoverageEligibilityResponse_Errors {
    return new CoverageEligibilityResponse_Errors().fromJsonString(jsonString, options);
  }

  static equals(a: CoverageEligibilityResponse_Errors | PlainMessage<CoverageEligibilityResponse_Errors> | undefined, b: CoverageEligibilityResponse_Errors | PlainMessage<CoverageEligibilityResponse_Errors> | undefined): boolean {
    return proto3.util.equals(CoverageEligibilityResponse_Errors, a, b);
  }
}

