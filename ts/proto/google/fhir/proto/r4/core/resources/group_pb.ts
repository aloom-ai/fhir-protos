//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/group.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Code, CodeableConcept, Extension, Id, Identifier, Meta, Narrative, Period, Quantity, Range, Reference, String, UnsignedInt, Uri } from "../datatypes_pb.js";
import { GroupTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Group.
 * Group of multiple entities.
 * See http://hl7.org/fhir/StructureDefinition/Group
 *
 * @generated from message google.fhir.r4.core.Group
 */
export class Group extends Message<Group> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Unique id
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Whether this group's record is in active use
   *
   * @generated from field: google.fhir.r4.core.Boolean active = 11;
   */
  active?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.Group.TypeCode type = 12;
   */
  type?: Group_TypeCode;

  /**
   * Descriptive or actual
   *
   * @generated from field: google.fhir.r4.core.Boolean actual = 13;
   */
  actual?: Boolean;

  /**
   * Kind of Group members
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 14;
   */
  code?: CodeableConcept;

  /**
   * Label for Group
   *
   * @generated from field: google.fhir.r4.core.String name = 15;
   */
  name?: String;

  /**
   * Number of members
   *
   * @generated from field: google.fhir.r4.core.UnsignedInt quantity = 16;
   */
  quantity?: UnsignedInt;

  /**
   * Entity that is the custodian of the Group's definition
   *
   * @generated from field: google.fhir.r4.core.Reference managing_entity = 17;
   */
  managingEntity?: Reference;

  /**
   * @generated from field: repeated google.fhir.r4.core.Group.Characteristic characteristic = 18;
   */
  characteristic: Group_Characteristic[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.Group.Member member = 19;
   */
  member: Group_Member[] = [];

  constructor(data?: PartialMessage<Group>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Group";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "active", kind: "message", T: Boolean },
    { no: 12, name: "type", kind: "message", T: Group_TypeCode },
    { no: 13, name: "actual", kind: "message", T: Boolean },
    { no: 14, name: "code", kind: "message", T: CodeableConcept },
    { no: 15, name: "name", kind: "message", T: String },
    { no: 16, name: "quantity", kind: "message", T: UnsignedInt },
    { no: 17, name: "managing_entity", kind: "message", T: Reference },
    { no: 18, name: "characteristic", kind: "message", T: Group_Characteristic, repeated: true },
    { no: 19, name: "member", kind: "message", T: Group_Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group {
    return new Group().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group {
    return new Group().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group {
    return new Group().fromJsonString(jsonString, options);
  }

  static equals(a: Group | PlainMessage<Group> | undefined, b: Group | PlainMessage<Group> | undefined): boolean {
    return proto3.util.equals(Group, a, b);
  }
}

/**
 * person | animal | practitioner | device | medication | substance
 *
 * @generated from message google.fhir.r4.core.Group.TypeCode
 */
export class Group_TypeCode extends Message<Group_TypeCode> {
  /**
   * @generated from field: google.fhir.r4.core.GroupTypeCode.Value value = 1;
   */
  value = GroupTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Group_TypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Group.TypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(GroupTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_TypeCode {
    return new Group_TypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_TypeCode {
    return new Group_TypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_TypeCode {
    return new Group_TypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: Group_TypeCode | PlainMessage<Group_TypeCode> | undefined, b: Group_TypeCode | PlainMessage<Group_TypeCode> | undefined): boolean {
    return proto3.util.equals(Group_TypeCode, a, b);
  }
}

/**
 * Include / Exclude group members by Trait
 *
 * @generated from message google.fhir.r4.core.Group.Characteristic
 */
export class Group_Characteristic extends Message<Group_Characteristic> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Kind of characteristic
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.Group.Characteristic.ValueX value = 5;
   */
  value?: Group_Characteristic_ValueX;

  /**
   * Group includes or excludes
   *
   * @generated from field: google.fhir.r4.core.Boolean exclude = 6;
   */
  exclude?: Boolean;

  /**
   * Period over which characteristic is tested
   *
   * @generated from field: google.fhir.r4.core.Period period = 7;
   */
  period?: Period;

  constructor(data?: PartialMessage<Group_Characteristic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Group.Characteristic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: Group_Characteristic_ValueX },
    { no: 6, name: "exclude", kind: "message", T: Boolean },
    { no: 7, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_Characteristic {
    return new Group_Characteristic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_Characteristic {
    return new Group_Characteristic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_Characteristic {
    return new Group_Characteristic().fromJsonString(jsonString, options);
  }

  static equals(a: Group_Characteristic | PlainMessage<Group_Characteristic> | undefined, b: Group_Characteristic | PlainMessage<Group_Characteristic> | undefined): boolean {
    return proto3.util.equals(Group_Characteristic, a, b);
  }
}

/**
 * Value held by characteristic
 *
 * @generated from message google.fhir.r4.core.Group.Characteristic.ValueX
 */
export class Group_Characteristic_ValueX extends Message<Group_Characteristic_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.Group.Characteristic.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 2;
     */
    value: Boolean;
    case: "boolean";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 3;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 4;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 5;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Group_Characteristic_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Group.Characteristic.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
    { no: 3, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 4, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 5, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_Characteristic_ValueX {
    return new Group_Characteristic_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_Characteristic_ValueX {
    return new Group_Characteristic_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_Characteristic_ValueX {
    return new Group_Characteristic_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: Group_Characteristic_ValueX | PlainMessage<Group_Characteristic_ValueX> | undefined, b: Group_Characteristic_ValueX | PlainMessage<Group_Characteristic_ValueX> | undefined): boolean {
    return proto3.util.equals(Group_Characteristic_ValueX, a, b);
  }
}

/**
 * Who or what is in group
 *
 * @generated from message google.fhir.r4.core.Group.Member
 */
export class Group_Member extends Message<Group_Member> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Reference to the group member
   *
   * @generated from field: google.fhir.r4.core.Reference entity = 4;
   */
  entity?: Reference;

  /**
   * Period member belonged to the group
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  /**
   * If member is no longer in group
   *
   * @generated from field: google.fhir.r4.core.Boolean inactive = 6;
   */
  inactive?: Boolean;

  constructor(data?: PartialMessage<Group_Member>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Group.Member";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "entity", kind: "message", T: Reference },
    { no: 5, name: "period", kind: "message", T: Period },
    { no: 6, name: "inactive", kind: "message", T: Boolean },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Group_Member {
    return new Group_Member().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Group_Member {
    return new Group_Member().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Group_Member {
    return new Group_Member().fromJsonString(jsonString, options);
  }

  static equals(a: Group_Member | PlainMessage<Group_Member> | undefined, b: Group_Member | PlainMessage<Group_Member> | undefined): boolean {
    return proto3.util.equals(Group_Member, a, b);
  }
}

