//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/account.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Code, CodeableConcept, Extension, Id, Identifier, Meta, Narrative, Period, PositiveInt, Reference, String, Uri } from "../datatypes_pb.js";
import { AccountStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for Account.
 * Tracks balance, charges, for patient or cost center.
 * See http://hl7.org/fhir/StructureDefinition/Account
 *
 * @generated from message google.fhir.r4.core.Account
 */
export class Account extends Message<Account> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Account number
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.Account.StatusCode status = 11;
   */
  status?: Account_StatusCode;

  /**
   * E.g. patient, expense, depreciation
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept type = 12;
   */
  type?: CodeableConcept;

  /**
   * Human-readable label
   *
   * @generated from field: google.fhir.r4.core.String name = 13;
   */
  name?: String;

  /**
   * The entity that caused the expenses
   *
   * @generated from field: repeated google.fhir.r4.core.Reference subject = 14;
   */
  subject: Reference[] = [];

  /**
   * Transaction window
   *
   * @generated from field: google.fhir.r4.core.Period service_period = 15;
   */
  servicePeriod?: Period;

  /**
   * @generated from field: repeated google.fhir.r4.core.Account.Coverage coverage = 16;
   */
  coverage: Account_Coverage[] = [];

  /**
   * Entity managing the Account
   *
   * @generated from field: google.fhir.r4.core.Reference owner = 17;
   */
  owner?: Reference;

  /**
   * Explanation of purpose/use
   *
   * @generated from field: google.fhir.r4.core.String description = 18;
   */
  description?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Account.Guarantor guarantor = 19;
   */
  guarantor: Account_Guarantor[] = [];

  /**
   * Reference to a parent Account
   *
   * @generated from field: google.fhir.r4.core.Reference part_of = 20;
   */
  partOf?: Reference;

  constructor(data?: PartialMessage<Account>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Account";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: Account_StatusCode },
    { no: 12, name: "type", kind: "message", T: CodeableConcept },
    { no: 13, name: "name", kind: "message", T: String },
    { no: 14, name: "subject", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "service_period", kind: "message", T: Period },
    { no: 16, name: "coverage", kind: "message", T: Account_Coverage, repeated: true },
    { no: 17, name: "owner", kind: "message", T: Reference },
    { no: 18, name: "description", kind: "message", T: String },
    { no: 19, name: "guarantor", kind: "message", T: Account_Guarantor, repeated: true },
    { no: 20, name: "part_of", kind: "message", T: Reference },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account {
    return new Account().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account {
    return new Account().fromJsonString(jsonString, options);
  }

  static equals(a: Account | PlainMessage<Account> | undefined, b: Account | PlainMessage<Account> | undefined): boolean {
    return proto3.util.equals(Account, a, b);
  }
}

/**
 * active | inactive | entered-in-error | on-hold | unknown
 *
 * @generated from message google.fhir.r4.core.Account.StatusCode
 */
export class Account_StatusCode extends Message<Account_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.AccountStatusCode.Value value = 1;
   */
  value = AccountStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<Account_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Account.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(AccountStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account_StatusCode {
    return new Account_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account_StatusCode {
    return new Account_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account_StatusCode {
    return new Account_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: Account_StatusCode | PlainMessage<Account_StatusCode> | undefined, b: Account_StatusCode | PlainMessage<Account_StatusCode> | undefined): boolean {
    return proto3.util.equals(Account_StatusCode, a, b);
  }
}

/**
 * The party(s) that are responsible for covering the payment of this account,
 * and what order should they be applied to the account
 *
 * @generated from message google.fhir.r4.core.Account.Coverage
 */
export class Account_Coverage extends Message<Account_Coverage> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * The party(s), such as insurances, that may contribute to the payment of
   * this account
   *
   * @generated from field: google.fhir.r4.core.Reference coverage = 4;
   */
  coverage?: Reference;

  /**
   * The priority of the coverage in the context of this account
   *
   * @generated from field: google.fhir.r4.core.PositiveInt priority = 5;
   */
  priority?: PositiveInt;

  constructor(data?: PartialMessage<Account_Coverage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Account.Coverage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "coverage", kind: "message", T: Reference },
    { no: 5, name: "priority", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account_Coverage {
    return new Account_Coverage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account_Coverage {
    return new Account_Coverage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account_Coverage {
    return new Account_Coverage().fromJsonString(jsonString, options);
  }

  static equals(a: Account_Coverage | PlainMessage<Account_Coverage> | undefined, b: Account_Coverage | PlainMessage<Account_Coverage> | undefined): boolean {
    return proto3.util.equals(Account_Coverage, a, b);
  }
}

/**
 * The parties ultimately responsible for balancing the Account
 *
 * @generated from message google.fhir.r4.core.Account.Guarantor
 */
export class Account_Guarantor extends Message<Account_Guarantor> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Responsible entity
   *
   * @generated from field: google.fhir.r4.core.Reference party = 4;
   */
  party?: Reference;

  /**
   * Credit or other hold applied
   *
   * @generated from field: google.fhir.r4.core.Boolean on_hold = 5;
   */
  onHold?: Boolean;

  /**
   * Guarantee account during
   *
   * @generated from field: google.fhir.r4.core.Period period = 6;
   */
  period?: Period;

  constructor(data?: PartialMessage<Account_Guarantor>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.Account.Guarantor";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "party", kind: "message", T: Reference },
    { no: 5, name: "on_hold", kind: "message", T: Boolean },
    { no: 6, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Account_Guarantor {
    return new Account_Guarantor().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Account_Guarantor {
    return new Account_Guarantor().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Account_Guarantor {
    return new Account_Guarantor().fromJsonString(jsonString, options);
  }

  static equals(a: Account_Guarantor | PlainMessage<Account_Guarantor> | undefined, b: Account_Guarantor | PlainMessage<Account_Guarantor> | undefined): boolean {
    return proto3.util.equals(Account_Guarantor, a, b);
  }
}

