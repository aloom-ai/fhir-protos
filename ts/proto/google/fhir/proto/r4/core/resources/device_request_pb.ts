//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/device_request.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Boolean, Canonical, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Quantity, Range, Reference, String, Timing, Uri } from "../datatypes_pb.js";
import { RequestIntentCode_Value, RequestPriorityCode_Value, RequestStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for DeviceRequest.
 * Medical device request.
 * See http://hl7.org/fhir/StructureDefinition/DeviceRequest
 *
 * @generated from message google.fhir.r4.core.DeviceRequest
 */
export class DeviceRequest extends Message<DeviceRequest> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Request identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[] = [];

  /**
   * What request fulfills
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[] = [];

  /**
   * What request replaces
   *
   * @generated from field: repeated google.fhir.r4.core.Reference prior_request = 14;
   */
  priorRequest: Reference[] = [];

  /**
   * Identifier of composite request
   *
   * @generated from field: google.fhir.r4.core.Identifier group_identifier = 15;
   */
  groupIdentifier?: Identifier;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.StatusCode status = 16;
   */
  status?: DeviceRequest_StatusCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.IntentCode intent = 17;
   */
  intent?: DeviceRequest_IntentCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.PriorityCode priority = 18;
   */
  priority?: DeviceRequest_PriorityCode;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.CodeX code = 19;
   */
  code?: DeviceRequest_CodeX;

  /**
   * @generated from field: repeated google.fhir.r4.core.DeviceRequest.Parameter parameter = 20;
   */
  parameter: DeviceRequest_Parameter[] = [];

  /**
   * Focus of request
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 21;
   */
  subject?: Reference;

  /**
   * Encounter motivating request
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 22;
   */
  encounter?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.OccurrenceX occurrence = 23;
   */
  occurrence?: DeviceRequest_OccurrenceX;

  /**
   * When recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime authored_on = 24;
   */
  authoredOn?: DateTime;

  /**
   * Who/what is requesting diagnostics
   *
   * @generated from field: google.fhir.r4.core.Reference requester = 25;
   */
  requester?: Reference;

  /**
   * Filler role
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept performer_type = 26;
   */
  performerType?: CodeableConcept;

  /**
   * Requested Filler
   *
   * @generated from field: google.fhir.r4.core.Reference performer = 27;
   */
  performer?: Reference;

  /**
   * Coded Reason for request
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 28;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Linked Reason for request
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 29;
   */
  reasonReference: Reference[] = [];

  /**
   * Associated insurance coverage
   *
   * @generated from field: repeated google.fhir.r4.core.Reference insurance = 30;
   */
  insurance: Reference[] = [];

  /**
   * Additional clinical information
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_info = 31;
   */
  supportingInfo: Reference[] = [];

  /**
   * Notes or comments
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 32;
   */
  note: Annotation[] = [];

  /**
   * Request provenance
   *
   * @generated from field: repeated google.fhir.r4.core.Reference relevant_history = 33;
   */
  relevantHistory: Reference[] = [];

  constructor(data?: PartialMessage<DeviceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 12, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 13, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "prior_request", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "group_identifier", kind: "message", T: Identifier },
    { no: 16, name: "status", kind: "message", T: DeviceRequest_StatusCode },
    { no: 17, name: "intent", kind: "message", T: DeviceRequest_IntentCode },
    { no: 18, name: "priority", kind: "message", T: DeviceRequest_PriorityCode },
    { no: 19, name: "code", kind: "message", T: DeviceRequest_CodeX },
    { no: 20, name: "parameter", kind: "message", T: DeviceRequest_Parameter, repeated: true },
    { no: 21, name: "subject", kind: "message", T: Reference },
    { no: 22, name: "encounter", kind: "message", T: Reference },
    { no: 23, name: "occurrence", kind: "message", T: DeviceRequest_OccurrenceX },
    { no: 24, name: "authored_on", kind: "message", T: DateTime },
    { no: 25, name: "requester", kind: "message", T: Reference },
    { no: 26, name: "performer_type", kind: "message", T: CodeableConcept },
    { no: 27, name: "performer", kind: "message", T: Reference },
    { no: 28, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 29, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "insurance", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 32, name: "note", kind: "message", T: Annotation, repeated: true },
    { no: 33, name: "relevant_history", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest {
    return new DeviceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest {
    return new DeviceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest {
    return new DeviceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest | PlainMessage<DeviceRequest> | undefined, b: DeviceRequest | PlainMessage<DeviceRequest> | undefined): boolean {
    return proto3.util.equals(DeviceRequest, a, b);
  }
}

/**
 * draft | active | on-hold | revoked | completed | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.StatusCode
 */
export class DeviceRequest_StatusCode extends Message<DeviceRequest_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestStatusCode.Value value = 1;
   */
  value = RequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceRequest_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_StatusCode {
    return new DeviceRequest_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_StatusCode {
    return new DeviceRequest_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_StatusCode {
    return new DeviceRequest_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_StatusCode | PlainMessage<DeviceRequest_StatusCode> | undefined, b: DeviceRequest_StatusCode | PlainMessage<DeviceRequest_StatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_StatusCode, a, b);
  }
}

/**
 * proposal | plan | directive | order | original-order | reflex-order |
 * filler-order | instance-order | option
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.IntentCode
 */
export class DeviceRequest_IntentCode extends Message<DeviceRequest_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestIntentCode.Value value = 1;
   */
  value = RequestIntentCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceRequest_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestIntentCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_IntentCode {
    return new DeviceRequest_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_IntentCode {
    return new DeviceRequest_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_IntentCode {
    return new DeviceRequest_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_IntentCode | PlainMessage<DeviceRequest_IntentCode> | undefined, b: DeviceRequest_IntentCode | PlainMessage<DeviceRequest_IntentCode> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_IntentCode, a, b);
  }
}

/**
 * routine | urgent | asap | stat
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.PriorityCode
 */
export class DeviceRequest_PriorityCode extends Message<DeviceRequest_PriorityCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestPriorityCode.Value value = 1;
   */
  value = RequestPriorityCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceRequest_PriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.PriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestPriorityCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_PriorityCode {
    return new DeviceRequest_PriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_PriorityCode {
    return new DeviceRequest_PriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_PriorityCode {
    return new DeviceRequest_PriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_PriorityCode | PlainMessage<DeviceRequest_PriorityCode> | undefined, b: DeviceRequest_PriorityCode | PlainMessage<DeviceRequest_PriorityCode> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_PriorityCode, a, b);
  }
}

/**
 * Device requested
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.CodeX
 */
export class DeviceRequest_CodeX extends Message<DeviceRequest_CodeX> {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceRequest.CodeX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 1;
     */
    value: Reference;
    case: "reference";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 2;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceRequest_CodeX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.CodeX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reference", kind: "message", T: Reference, oneof: "choice" },
    { no: 2, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_CodeX {
    return new DeviceRequest_CodeX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_CodeX {
    return new DeviceRequest_CodeX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_CodeX {
    return new DeviceRequest_CodeX().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_CodeX | PlainMessage<DeviceRequest_CodeX> | undefined, b: DeviceRequest_CodeX | PlainMessage<DeviceRequest_CodeX> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_CodeX, a, b);
  }
}

/**
 * Device details
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.Parameter
 */
export class DeviceRequest_Parameter extends Message<DeviceRequest_Parameter> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Device detail
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 4;
   */
  code?: CodeableConcept;

  /**
   * @generated from field: google.fhir.r4.core.DeviceRequest.Parameter.ValueX value = 5;
   */
  value?: DeviceRequest_Parameter_ValueX;

  constructor(data?: PartialMessage<DeviceRequest_Parameter>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.Parameter";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CodeableConcept },
    { no: 5, name: "value", kind: "message", T: DeviceRequest_Parameter_ValueX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_Parameter {
    return new DeviceRequest_Parameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_Parameter {
    return new DeviceRequest_Parameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_Parameter {
    return new DeviceRequest_Parameter().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_Parameter | PlainMessage<DeviceRequest_Parameter> | undefined, b: DeviceRequest_Parameter | PlainMessage<DeviceRequest_Parameter> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_Parameter, a, b);
  }
}

/**
 * Value of detail
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.Parameter.ValueX
 */
export class DeviceRequest_Parameter_ValueX extends Message<DeviceRequest_Parameter_ValueX> {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceRequest.Parameter.ValueX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Quantity quantity = 2;
     */
    value: Quantity;
    case: "quantity";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Range range = 3;
     */
    value: Range;
    case: "range";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Boolean boolean = 4;
     */
    value: Boolean;
    case: "boolean";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceRequest_Parameter_ValueX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.Parameter.ValueX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "quantity", kind: "message", T: Quantity, oneof: "choice" },
    { no: 3, name: "range", kind: "message", T: Range, oneof: "choice" },
    { no: 4, name: "boolean", kind: "message", T: Boolean, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_Parameter_ValueX {
    return new DeviceRequest_Parameter_ValueX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_Parameter_ValueX {
    return new DeviceRequest_Parameter_ValueX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_Parameter_ValueX {
    return new DeviceRequest_Parameter_ValueX().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_Parameter_ValueX | PlainMessage<DeviceRequest_Parameter_ValueX> | undefined, b: DeviceRequest_Parameter_ValueX | PlainMessage<DeviceRequest_Parameter_ValueX> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_Parameter_ValueX, a, b);
  }
}

/**
 * Desired time or schedule for use
 *
 * @generated from message google.fhir.r4.core.DeviceRequest.OccurrenceX
 */
export class DeviceRequest_OccurrenceX extends Message<DeviceRequest_OccurrenceX> {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceRequest.OccurrenceX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 1;
     */
    value: DateTime;
    case: "dateTime";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 3;
     */
    value: Timing;
    case: "timing";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceRequest_OccurrenceX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceRequest.OccurrenceX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "timing", kind: "message", T: Timing, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceRequest_OccurrenceX {
    return new DeviceRequest_OccurrenceX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceRequest_OccurrenceX {
    return new DeviceRequest_OccurrenceX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceRequest_OccurrenceX {
    return new DeviceRequest_OccurrenceX().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceRequest_OccurrenceX | PlainMessage<DeviceRequest_OccurrenceX> | undefined, b: DeviceRequest_OccurrenceX | PlainMessage<DeviceRequest_OccurrenceX> | undefined): boolean {
    return proto3.util.equals(DeviceRequest_OccurrenceX, a, b);
  }
}

