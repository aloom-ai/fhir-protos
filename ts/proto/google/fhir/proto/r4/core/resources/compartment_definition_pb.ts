//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/compartment_definition.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Boolean, Code, ContactDetail, DateTime, Extension, Id, Markdown, Meta, Narrative, String, Uri, UsageContext } from "../datatypes_pb.js";
import { CompartmentTypeCode_Value, PublicationStatusCode_Value, ResourceTypeCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for CompartmentDefinition.
 * Compartment Definition for a resource.
 * See http://hl7.org/fhir/StructureDefinition/CompartmentDefinition
 *
 * @generated from message google.fhir.r4.core.CompartmentDefinition
 */
export class CompartmentDefinition extends Message<CompartmentDefinition> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Canonical identifier for this compartment definition, represented as a URI
   * (globally unique)
   *
   * @generated from field: google.fhir.r4.core.Uri url = 10;
   */
  url?: Uri;

  /**
   * Business version of the compartment definition
   *
   * @generated from field: google.fhir.r4.core.String version = 11;
   */
  version?: String;

  /**
   * Name for this compartment definition (computer friendly)
   *
   * @generated from field: google.fhir.r4.core.String name = 12;
   */
  name?: String;

  /**
   * @generated from field: google.fhir.r4.core.CompartmentDefinition.StatusCode status = 13;
   */
  status?: CompartmentDefinition_StatusCode;

  /**
   * For testing purposes, not real usage
   *
   * @generated from field: google.fhir.r4.core.Boolean experimental = 14;
   */
  experimental?: Boolean;

  /**
   * Date last changed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 15;
   */
  date?: DateTime;

  /**
   * Name of the publisher (organization or individual)
   *
   * @generated from field: google.fhir.r4.core.String publisher = 16;
   */
  publisher?: String;

  /**
   * Contact details for the publisher
   *
   * @generated from field: repeated google.fhir.r4.core.ContactDetail contact = 17;
   */
  contact: ContactDetail[] = [];

  /**
   * Natural language description of the compartment definition
   *
   * @generated from field: google.fhir.r4.core.Markdown description = 18;
   */
  description?: Markdown;

  /**
   * The context that the content is intended to support
   *
   * @generated from field: repeated google.fhir.r4.core.UsageContext use_context = 19;
   */
  useContext: UsageContext[] = [];

  /**
   * Why this compartment definition is defined
   *
   * @generated from field: google.fhir.r4.core.Markdown purpose = 20;
   */
  purpose?: Markdown;

  /**
   * @generated from field: google.fhir.r4.core.CompartmentDefinition.CodeType code = 21;
   */
  code?: CompartmentDefinition_CodeType;

  /**
   * Whether the search syntax is supported
   *
   * @generated from field: google.fhir.r4.core.Boolean search = 22;
   */
  search?: Boolean;

  /**
   * @generated from field: repeated google.fhir.r4.core.CompartmentDefinition.Resource resource = 23;
   */
  resource: CompartmentDefinition_Resource[] = [];

  constructor(data?: PartialMessage<CompartmentDefinition>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompartmentDefinition";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "url", kind: "message", T: Uri },
    { no: 11, name: "version", kind: "message", T: String },
    { no: 12, name: "name", kind: "message", T: String },
    { no: 13, name: "status", kind: "message", T: CompartmentDefinition_StatusCode },
    { no: 14, name: "experimental", kind: "message", T: Boolean },
    { no: 15, name: "date", kind: "message", T: DateTime },
    { no: 16, name: "publisher", kind: "message", T: String },
    { no: 17, name: "contact", kind: "message", T: ContactDetail, repeated: true },
    { no: 18, name: "description", kind: "message", T: Markdown },
    { no: 19, name: "use_context", kind: "message", T: UsageContext, repeated: true },
    { no: 20, name: "purpose", kind: "message", T: Markdown },
    { no: 21, name: "code", kind: "message", T: CompartmentDefinition_CodeType },
    { no: 22, name: "search", kind: "message", T: Boolean },
    { no: 23, name: "resource", kind: "message", T: CompartmentDefinition_Resource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition {
    return new CompartmentDefinition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition {
    return new CompartmentDefinition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition {
    return new CompartmentDefinition().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition | PlainMessage<CompartmentDefinition> | undefined, b: CompartmentDefinition | PlainMessage<CompartmentDefinition> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition, a, b);
  }
}

/**
 * draft | active | retired | unknown
 *
 * @generated from message google.fhir.r4.core.CompartmentDefinition.StatusCode
 */
export class CompartmentDefinition_StatusCode extends Message<CompartmentDefinition_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.PublicationStatusCode.Value value = 1;
   */
  value = PublicationStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompartmentDefinition_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompartmentDefinition.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(PublicationStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition_StatusCode {
    return new CompartmentDefinition_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition_StatusCode {
    return new CompartmentDefinition_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition_StatusCode {
    return new CompartmentDefinition_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition_StatusCode | PlainMessage<CompartmentDefinition_StatusCode> | undefined, b: CompartmentDefinition_StatusCode | PlainMessage<CompartmentDefinition_StatusCode> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition_StatusCode, a, b);
  }
}

/**
 * Patient | Encounter | RelatedPerson | Practitioner | Device
 *
 * @generated from message google.fhir.r4.core.CompartmentDefinition.CodeType
 */
export class CompartmentDefinition_CodeType extends Message<CompartmentDefinition_CodeType> {
  /**
   * @generated from field: google.fhir.r4.core.CompartmentTypeCode.Value value = 1;
   */
  value = CompartmentTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompartmentDefinition_CodeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompartmentDefinition.CodeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CompartmentTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition_CodeType {
    return new CompartmentDefinition_CodeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition_CodeType {
    return new CompartmentDefinition_CodeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition_CodeType {
    return new CompartmentDefinition_CodeType().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition_CodeType | PlainMessage<CompartmentDefinition_CodeType> | undefined, b: CompartmentDefinition_CodeType | PlainMessage<CompartmentDefinition_CodeType> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition_CodeType, a, b);
  }
}

/**
 * How a resource is related to the compartment
 *
 * @generated from message google.fhir.r4.core.CompartmentDefinition.Resource
 */
export class CompartmentDefinition_Resource extends Message<CompartmentDefinition_Resource> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CompartmentDefinition.Resource.CodeType code = 4;
   */
  code?: CompartmentDefinition_Resource_CodeType;

  /**
   * Search Parameter Name, or chained parameters
   *
   * @generated from field: repeated google.fhir.r4.core.String param = 5;
   */
  param: String[] = [];

  /**
   * Additional documentation about the resource and compartment
   *
   * @generated from field: google.fhir.r4.core.String documentation = 6;
   */
  documentation?: String;

  constructor(data?: PartialMessage<CompartmentDefinition_Resource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompartmentDefinition.Resource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "code", kind: "message", T: CompartmentDefinition_Resource_CodeType },
    { no: 5, name: "param", kind: "message", T: String, repeated: true },
    { no: 6, name: "documentation", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition_Resource {
    return new CompartmentDefinition_Resource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition_Resource {
    return new CompartmentDefinition_Resource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition_Resource {
    return new CompartmentDefinition_Resource().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition_Resource | PlainMessage<CompartmentDefinition_Resource> | undefined, b: CompartmentDefinition_Resource | PlainMessage<CompartmentDefinition_Resource> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition_Resource, a, b);
  }
}

/**
 * Name of resource type
 *
 * @generated from message google.fhir.r4.core.CompartmentDefinition.Resource.CodeType
 */
export class CompartmentDefinition_Resource_CodeType extends Message<CompartmentDefinition_Resource_CodeType> {
  /**
   * @generated from field: google.fhir.r4.core.ResourceTypeCode.Value value = 1;
   */
  value = ResourceTypeCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CompartmentDefinition_Resource_CodeType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompartmentDefinition.Resource.CodeType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ResourceTypeCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentDefinition_Resource_CodeType {
    return new CompartmentDefinition_Resource_CodeType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentDefinition_Resource_CodeType {
    return new CompartmentDefinition_Resource_CodeType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentDefinition_Resource_CodeType {
    return new CompartmentDefinition_Resource_CodeType().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentDefinition_Resource_CodeType | PlainMessage<CompartmentDefinition_Resource_CodeType> | undefined, b: CompartmentDefinition_Resource_CodeType | PlainMessage<CompartmentDefinition_Resource_CodeType> | undefined): boolean {
    return proto3.util.equals(CompartmentDefinition_Resource_CodeType, a, b);
  }
}

