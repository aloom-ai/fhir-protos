//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/care_plan.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Boolean, Canonical, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Reference, SimpleQuantity, String, Timing, Uri } from "../datatypes_pb.js";
import { CarePlanActivityStatusCode_Value, RequestStatusCode_Value } from "../codes_pb.js";
import { CarePlanActivityKindValueSet_Value, CarePlanIntentValueSet_Value } from "../valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for CarePlan.
 * Healthcare plan for patient or group.
 * See http://hl7.org/fhir/StructureDefinition/CarePlan
 *
 * @generated from message google.fhir.r4.core.CarePlan
 */
export class CarePlan extends Message<CarePlan> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External Ids for this plan
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 11;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 12;
   */
  instantiatesUri: Uri[] = [];

  /**
   * Fulfills CarePlan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 13;
   */
  basedOn: Reference[] = [];

  /**
   * CarePlan replaced by this CarePlan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference replaces = 14;
   */
  replaces: Reference[] = [];

  /**
   * Part of referenced CarePlan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference part_of = 15;
   */
  partOf: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.StatusCode status = 16;
   */
  status?: CarePlan_StatusCode;

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.IntentCode intent = 17;
   */
  intent?: CarePlan_IntentCode;

  /**
   * Type of plan
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept category = 18;
   */
  category: CodeableConcept[] = [];

  /**
   * Human-friendly name for the care plan
   *
   * @generated from field: google.fhir.r4.core.String title = 19;
   */
  title?: String;

  /**
   * Summary of nature of plan
   *
   * @generated from field: google.fhir.r4.core.String description = 20;
   */
  description?: String;

  /**
   * Who the care plan is for
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 21;
   */
  subject?: Reference;

  /**
   * Encounter created as part of
   *
   * @generated from field: google.fhir.r4.core.Reference encounter = 22;
   */
  encounter?: Reference;

  /**
   * Time period plan covers
   *
   * @generated from field: google.fhir.r4.core.Period period = 23;
   */
  period?: Period;

  /**
   * Date record was first recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime created = 24;
   */
  created?: DateTime;

  /**
   * Who is the designated responsible party
   *
   * @generated from field: google.fhir.r4.core.Reference author = 25;
   */
  author?: Reference;

  /**
   * Who provided the content of the care plan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference contributor = 26;
   */
  contributor: Reference[] = [];

  /**
   * Who's involved in plan?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference care_team = 27;
   */
  careTeam: Reference[] = [];

  /**
   * Health issues this plan addresses
   *
   * @generated from field: repeated google.fhir.r4.core.Reference addresses = 28;
   */
  addresses: Reference[] = [];

  /**
   * Information considered as part of plan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference supporting_info = 29;
   */
  supportingInfo: Reference[] = [];

  /**
   * Desired outcome of plan
   *
   * @generated from field: repeated google.fhir.r4.core.Reference goal = 30;
   */
  goal: Reference[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.CarePlan.Activity activity = 31;
   */
  activity: CarePlan_Activity[] = [];

  /**
   * Comments about the plan
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 32;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<CarePlan>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 12, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 13, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 14, name: "replaces", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "part_of", kind: "message", T: Reference, repeated: true },
    { no: 16, name: "status", kind: "message", T: CarePlan_StatusCode },
    { no: 17, name: "intent", kind: "message", T: CarePlan_IntentCode },
    { no: 18, name: "category", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "title", kind: "message", T: String },
    { no: 20, name: "description", kind: "message", T: String },
    { no: 21, name: "subject", kind: "message", T: Reference },
    { no: 22, name: "encounter", kind: "message", T: Reference },
    { no: 23, name: "period", kind: "message", T: Period },
    { no: 24, name: "created", kind: "message", T: DateTime },
    { no: 25, name: "author", kind: "message", T: Reference },
    { no: 26, name: "contributor", kind: "message", T: Reference, repeated: true },
    { no: 27, name: "care_team", kind: "message", T: Reference, repeated: true },
    { no: 28, name: "addresses", kind: "message", T: Reference, repeated: true },
    { no: 29, name: "supporting_info", kind: "message", T: Reference, repeated: true },
    { no: 30, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 31, name: "activity", kind: "message", T: CarePlan_Activity, repeated: true },
    { no: 32, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan {
    return new CarePlan().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan {
    return new CarePlan().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan {
    return new CarePlan().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan | PlainMessage<CarePlan> | undefined, b: CarePlan | PlainMessage<CarePlan> | undefined): boolean {
    return proto3.util.equals(CarePlan, a, b);
  }
}

/**
 * draft | active | on-hold | revoked | completed | entered-in-error | unknown
 *
 * @generated from message google.fhir.r4.core.CarePlan.StatusCode
 */
export class CarePlan_StatusCode extends Message<CarePlan_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.RequestStatusCode.Value value = 1;
   */
  value = RequestStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlan_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(RequestStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_StatusCode {
    return new CarePlan_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_StatusCode {
    return new CarePlan_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_StatusCode {
    return new CarePlan_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_StatusCode | PlainMessage<CarePlan_StatusCode> | undefined, b: CarePlan_StatusCode | PlainMessage<CarePlan_StatusCode> | undefined): boolean {
    return proto3.util.equals(CarePlan_StatusCode, a, b);
  }
}

/**
 * proposal | plan | order | option
 *
 * @generated from message google.fhir.r4.core.CarePlan.IntentCode
 */
export class CarePlan_IntentCode extends Message<CarePlan_IntentCode> {
  /**
   * @generated from field: google.fhir.r4.core.CarePlanIntentValueSet.Value value = 1;
   */
  value = CarePlanIntentValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlan_IntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.IntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanIntentValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_IntentCode {
    return new CarePlan_IntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_IntentCode {
    return new CarePlan_IntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_IntentCode {
    return new CarePlan_IntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_IntentCode | PlainMessage<CarePlan_IntentCode> | undefined, b: CarePlan_IntentCode | PlainMessage<CarePlan_IntentCode> | undefined): boolean {
    return proto3.util.equals(CarePlan_IntentCode, a, b);
  }
}

/**
 * Action to occur as part of plan
 *
 * @generated from message google.fhir.r4.core.CarePlan.Activity
 */
export class CarePlan_Activity extends Message<CarePlan_Activity> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Results of the activity
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept outcome_codeable_concept = 4;
   */
  outcomeCodeableConcept: CodeableConcept[] = [];

  /**
   * Appointment, Encounter, Procedure, etc.
   *
   * @generated from field: repeated google.fhir.r4.core.Reference outcome_reference = 5;
   */
  outcomeReference: Reference[] = [];

  /**
   * Comments about the activity status/progress
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation progress = 6;
   */
  progress: Annotation[] = [];

  /**
   * Activity details defined in specific resource
   *
   * @generated from field: google.fhir.r4.core.Reference reference = 7;
   */
  reference?: Reference;

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.Activity.Detail detail = 8;
   */
  detail?: CarePlan_Activity_Detail;

  constructor(data?: PartialMessage<CarePlan_Activity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.Activity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "outcome_codeable_concept", kind: "message", T: CodeableConcept, repeated: true },
    { no: 5, name: "outcome_reference", kind: "message", T: Reference, repeated: true },
    { no: 6, name: "progress", kind: "message", T: Annotation, repeated: true },
    { no: 7, name: "reference", kind: "message", T: Reference },
    { no: 8, name: "detail", kind: "message", T: CarePlan_Activity_Detail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity {
    return new CarePlan_Activity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity {
    return new CarePlan_Activity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity {
    return new CarePlan_Activity().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity | PlainMessage<CarePlan_Activity> | undefined, b: CarePlan_Activity | PlainMessage<CarePlan_Activity> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity, a, b);
  }
}

/**
 * In-line definition of activity
 *
 * @generated from message google.fhir.r4.core.CarePlan.Activity.Detail
 */
export class CarePlan_Activity_Detail extends Message<CarePlan_Activity_Detail> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.Activity.Detail.KindCode kind = 4;
   */
  kind?: CarePlan_Activity_Detail_KindCode;

  /**
   * Instantiates FHIR protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Canonical instantiates_canonical = 5;
   */
  instantiatesCanonical: Canonical[] = [];

  /**
   * Instantiates external protocol or definition
   *
   * @generated from field: repeated google.fhir.r4.core.Uri instantiates_uri = 6;
   */
  instantiatesUri: Uri[] = [];

  /**
   * Detail type of activity
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept code = 7;
   */
  code?: CodeableConcept;

  /**
   * Why activity should be done or why activity was prohibited
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 8;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why activity is needed
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 9;
   */
  reasonReference: Reference[] = [];

  /**
   * Goals this activity relates to
   *
   * @generated from field: repeated google.fhir.r4.core.Reference goal = 10;
   */
  goal: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.Activity.Detail.StatusCode status = 11;
   */
  status?: CarePlan_Activity_Detail_StatusCode;

  /**
   * Reason for current status
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept status_reason = 12;
   */
  statusReason?: CodeableConcept;

  /**
   * If true, activity is prohibiting action
   *
   * @generated from field: google.fhir.r4.core.Boolean do_not_perform = 13;
   */
  doNotPerform?: Boolean;

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.Activity.Detail.ScheduledX scheduled = 14;
   */
  scheduled?: CarePlan_Activity_Detail_ScheduledX;

  /**
   * Where it should happen
   *
   * @generated from field: google.fhir.r4.core.Reference location = 15;
   */
  location?: Reference;

  /**
   * Who will be responsible?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference performer = 16;
   */
  performer: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.CarePlan.Activity.Detail.ProductX product = 17;
   */
  product?: CarePlan_Activity_Detail_ProductX;

  /**
   * How to consume/day?
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity daily_amount = 18;
   */
  dailyAmount?: SimpleQuantity;

  /**
   * How much to administer/supply/consume
   *
   * @generated from field: google.fhir.r4.core.SimpleQuantity quantity = 19;
   */
  quantity?: SimpleQuantity;

  /**
   * Extra info describing activity to perform
   *
   * @generated from field: google.fhir.r4.core.String description = 20;
   */
  description?: String;

  constructor(data?: PartialMessage<CarePlan_Activity_Detail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.Activity.Detail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "kind", kind: "message", T: CarePlan_Activity_Detail_KindCode },
    { no: 5, name: "instantiates_canonical", kind: "message", T: Canonical, repeated: true },
    { no: 6, name: "instantiates_uri", kind: "message", T: Uri, repeated: true },
    { no: 7, name: "code", kind: "message", T: CodeableConcept },
    { no: 8, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 9, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 10, name: "goal", kind: "message", T: Reference, repeated: true },
    { no: 11, name: "status", kind: "message", T: CarePlan_Activity_Detail_StatusCode },
    { no: 12, name: "status_reason", kind: "message", T: CodeableConcept },
    { no: 13, name: "do_not_perform", kind: "message", T: Boolean },
    { no: 14, name: "scheduled", kind: "message", T: CarePlan_Activity_Detail_ScheduledX },
    { no: 15, name: "location", kind: "message", T: Reference },
    { no: 16, name: "performer", kind: "message", T: Reference, repeated: true },
    { no: 17, name: "product", kind: "message", T: CarePlan_Activity_Detail_ProductX },
    { no: 18, name: "daily_amount", kind: "message", T: SimpleQuantity },
    { no: 19, name: "quantity", kind: "message", T: SimpleQuantity },
    { no: 20, name: "description", kind: "message", T: String },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail {
    return new CarePlan_Activity_Detail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail {
    return new CarePlan_Activity_Detail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail {
    return new CarePlan_Activity_Detail().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail | PlainMessage<CarePlan_Activity_Detail> | undefined, b: CarePlan_Activity_Detail | PlainMessage<CarePlan_Activity_Detail> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail, a, b);
  }
}

/**
 * Appointment | CommunicationRequest | DeviceRequest | MedicationRequest
 * | NutritionOrder | Task | ServiceRequest | VisionPrescription
 *
 * @generated from message google.fhir.r4.core.CarePlan.Activity.Detail.KindCode
 */
export class CarePlan_Activity_Detail_KindCode extends Message<CarePlan_Activity_Detail_KindCode> {
  /**
   * @generated from field: google.fhir.r4.core.CarePlanActivityKindValueSet.Value value = 1;
   */
  value = CarePlanActivityKindValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlan_Activity_Detail_KindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.Activity.Detail.KindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanActivityKindValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail_KindCode {
    return new CarePlan_Activity_Detail_KindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_KindCode {
    return new CarePlan_Activity_Detail_KindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_KindCode {
    return new CarePlan_Activity_Detail_KindCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail_KindCode | PlainMessage<CarePlan_Activity_Detail_KindCode> | undefined, b: CarePlan_Activity_Detail_KindCode | PlainMessage<CarePlan_Activity_Detail_KindCode> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail_KindCode, a, b);
  }
}

/**
 * not-started | scheduled | in-progress | on-hold | completed | cancelled
 * | stopped | unknown | entered-in-error
 *
 * @generated from message google.fhir.r4.core.CarePlan.Activity.Detail.StatusCode
 */
export class CarePlan_Activity_Detail_StatusCode extends Message<CarePlan_Activity_Detail_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.CarePlanActivityStatusCode.Value value = 1;
   */
  value = CarePlanActivityStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<CarePlan_Activity_Detail_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.Activity.Detail.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(CarePlanActivityStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail_StatusCode {
    return new CarePlan_Activity_Detail_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_StatusCode {
    return new CarePlan_Activity_Detail_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_StatusCode {
    return new CarePlan_Activity_Detail_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail_StatusCode | PlainMessage<CarePlan_Activity_Detail_StatusCode> | undefined, b: CarePlan_Activity_Detail_StatusCode | PlainMessage<CarePlan_Activity_Detail_StatusCode> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail_StatusCode, a, b);
  }
}

/**
 * When activity is to occur
 *
 * @generated from message google.fhir.r4.core.CarePlan.Activity.Detail.ScheduledX
 */
export class CarePlan_Activity_Detail_ScheduledX extends Message<CarePlan_Activity_Detail_ScheduledX> {
  /**
   * @generated from oneof google.fhir.r4.core.CarePlan.Activity.Detail.ScheduledX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 3 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CarePlan_Activity_Detail_ScheduledX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.Activity.Detail.ScheduledX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail_ScheduledX {
    return new CarePlan_Activity_Detail_ScheduledX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_ScheduledX {
    return new CarePlan_Activity_Detail_ScheduledX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_ScheduledX {
    return new CarePlan_Activity_Detail_ScheduledX().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail_ScheduledX | PlainMessage<CarePlan_Activity_Detail_ScheduledX> | undefined, b: CarePlan_Activity_Detail_ScheduledX | PlainMessage<CarePlan_Activity_Detail_ScheduledX> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail_ScheduledX, a, b);
  }
}

/**
 * What is to be administered/supplied
 *
 * @generated from message google.fhir.r4.core.CarePlan.Activity.Detail.ProductX
 */
export class CarePlan_Activity_Detail_ProductX extends Message<CarePlan_Activity_Detail_ProductX> {
  /**
   * @generated from oneof google.fhir.r4.core.CarePlan.Activity.Detail.ProductX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.CodeableConcept codeable_concept = 1;
     */
    value: CodeableConcept;
    case: "codeableConcept";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Reference reference = 2;
     */
    value: Reference;
    case: "reference";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CarePlan_Activity_Detail_ProductX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlan.Activity.Detail.ProductX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "codeable_concept", kind: "message", T: CodeableConcept, oneof: "choice" },
    { no: 2, name: "reference", kind: "message", T: Reference, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlan_Activity_Detail_ProductX {
    return new CarePlan_Activity_Detail_ProductX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_ProductX {
    return new CarePlan_Activity_Detail_ProductX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlan_Activity_Detail_ProductX {
    return new CarePlan_Activity_Detail_ProductX().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlan_Activity_Detail_ProductX | PlainMessage<CarePlan_Activity_Detail_ProductX> | undefined, b: CarePlan_Activity_Detail_ProductX | PlainMessage<CarePlan_Activity_Detail_ProductX> | undefined): boolean {
    return proto3.util.equals(CarePlan_Activity_Detail_ProductX, a, b);
  }
}

