//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/immunization_evaluation.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, PositiveInt, Reference, String, Uri } from "../datatypes_pb.js";
import { ImmunizationEvaluationStatusCodesValueSet_Value } from "../valuesets_pb.js";

/**
 * Auto-generated from StructureDefinition for ImmunizationEvaluation.
 * Immunization evaluation information.
 * See http://hl7.org/fhir/StructureDefinition/ImmunizationEvaluation
 *
 * @generated from message google.fhir.r4.core.ImmunizationEvaluation
 */
export class ImmunizationEvaluation extends Message<ImmunizationEvaluation> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business identifier
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.ImmunizationEvaluation.StatusCode status = 11;
   */
  status?: ImmunizationEvaluation_StatusCode;

  /**
   * Who this evaluation is for
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 12;
   */
  patient?: Reference;

  /**
   * Date evaluation was performed
   *
   * @generated from field: google.fhir.r4.core.DateTime date = 13;
   */
  date?: DateTime;

  /**
   * Who is responsible for publishing the recommendations
   *
   * @generated from field: google.fhir.r4.core.Reference authority = 14;
   */
  authority?: Reference;

  /**
   * Evaluation target disease
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept target_disease = 15;
   */
  targetDisease?: CodeableConcept;

  /**
   * Immunization being evaluated
   *
   * @generated from field: google.fhir.r4.core.Reference immunization_event = 16;
   */
  immunizationEvent?: Reference;

  /**
   * Status of the dose relative to published recommendations
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept dose_status = 17;
   */
  doseStatus?: CodeableConcept;

  /**
   * Reason for the dose status
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept dose_status_reason = 18;
   */
  doseStatusReason: CodeableConcept[] = [];

  /**
   * Evaluation notes
   *
   * @generated from field: google.fhir.r4.core.String description = 19;
   */
  description?: String;

  /**
   * Name of vaccine series
   *
   * @generated from field: google.fhir.r4.core.String series = 20;
   */
  series?: String;

  /**
   * @generated from field: google.fhir.r4.core.ImmunizationEvaluation.DoseNumberX dose_number = 21;
   */
  doseNumber?: ImmunizationEvaluation_DoseNumberX;

  /**
   * @generated from field: google.fhir.r4.core.ImmunizationEvaluation.SeriesDosesX series_doses = 22;
   */
  seriesDoses?: ImmunizationEvaluation_SeriesDosesX;

  constructor(data?: PartialMessage<ImmunizationEvaluation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationEvaluation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: ImmunizationEvaluation_StatusCode },
    { no: 12, name: "patient", kind: "message", T: Reference },
    { no: 13, name: "date", kind: "message", T: DateTime },
    { no: 14, name: "authority", kind: "message", T: Reference },
    { no: 15, name: "target_disease", kind: "message", T: CodeableConcept },
    { no: 16, name: "immunization_event", kind: "message", T: Reference },
    { no: 17, name: "dose_status", kind: "message", T: CodeableConcept },
    { no: 18, name: "dose_status_reason", kind: "message", T: CodeableConcept, repeated: true },
    { no: 19, name: "description", kind: "message", T: String },
    { no: 20, name: "series", kind: "message", T: String },
    { no: 21, name: "dose_number", kind: "message", T: ImmunizationEvaluation_DoseNumberX },
    { no: 22, name: "series_doses", kind: "message", T: ImmunizationEvaluation_SeriesDosesX },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationEvaluation {
    return new ImmunizationEvaluation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationEvaluation {
    return new ImmunizationEvaluation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationEvaluation {
    return new ImmunizationEvaluation().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationEvaluation | PlainMessage<ImmunizationEvaluation> | undefined, b: ImmunizationEvaluation | PlainMessage<ImmunizationEvaluation> | undefined): boolean {
    return proto3.util.equals(ImmunizationEvaluation, a, b);
  }
}

/**
 * completed | entered-in-error
 *
 * @generated from message google.fhir.r4.core.ImmunizationEvaluation.StatusCode
 */
export class ImmunizationEvaluation_StatusCode extends Message<ImmunizationEvaluation_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.ImmunizationEvaluationStatusCodesValueSet.Value value = 1;
   */
  value = ImmunizationEvaluationStatusCodesValueSet_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<ImmunizationEvaluation_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationEvaluation.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(ImmunizationEvaluationStatusCodesValueSet_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationEvaluation_StatusCode {
    return new ImmunizationEvaluation_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationEvaluation_StatusCode {
    return new ImmunizationEvaluation_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationEvaluation_StatusCode {
    return new ImmunizationEvaluation_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationEvaluation_StatusCode | PlainMessage<ImmunizationEvaluation_StatusCode> | undefined, b: ImmunizationEvaluation_StatusCode | PlainMessage<ImmunizationEvaluation_StatusCode> | undefined): boolean {
    return proto3.util.equals(ImmunizationEvaluation_StatusCode, a, b);
  }
}

/**
 * Dose number within series
 *
 * @generated from message google.fhir.r4.core.ImmunizationEvaluation.DoseNumberX
 */
export class ImmunizationEvaluation_DoseNumberX extends Message<ImmunizationEvaluation_DoseNumberX> {
  /**
   * @generated from oneof google.fhir.r4.core.ImmunizationEvaluation.DoseNumberX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ImmunizationEvaluation_DoseNumberX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationEvaluation.DoseNumberX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationEvaluation_DoseNumberX {
    return new ImmunizationEvaluation_DoseNumberX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationEvaluation_DoseNumberX {
    return new ImmunizationEvaluation_DoseNumberX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationEvaluation_DoseNumberX {
    return new ImmunizationEvaluation_DoseNumberX().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationEvaluation_DoseNumberX | PlainMessage<ImmunizationEvaluation_DoseNumberX> | undefined, b: ImmunizationEvaluation_DoseNumberX | PlainMessage<ImmunizationEvaluation_DoseNumberX> | undefined): boolean {
    return proto3.util.equals(ImmunizationEvaluation_DoseNumberX, a, b);
  }
}

/**
 * Recommended number of doses for immunity
 *
 * @generated from message google.fhir.r4.core.ImmunizationEvaluation.SeriesDosesX
 */
export class ImmunizationEvaluation_SeriesDosesX extends Message<ImmunizationEvaluation_SeriesDosesX> {
  /**
   * @generated from oneof google.fhir.r4.core.ImmunizationEvaluation.SeriesDosesX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.PositiveInt positive_int = 1;
     */
    value: PositiveInt;
    case: "positiveInt";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.String string_value = 2 [json_name = "string"];
     */
    value: String;
    case: "stringValue";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ImmunizationEvaluation_SeriesDosesX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImmunizationEvaluation.SeriesDosesX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "positive_int", kind: "message", T: PositiveInt, oneof: "choice" },
    { no: 2, name: "string_value", jsonName: "string", kind: "message", T: String, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImmunizationEvaluation_SeriesDosesX {
    return new ImmunizationEvaluation_SeriesDosesX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImmunizationEvaluation_SeriesDosesX {
    return new ImmunizationEvaluation_SeriesDosesX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImmunizationEvaluation_SeriesDosesX {
    return new ImmunizationEvaluation_SeriesDosesX().fromJsonString(jsonString, options);
  }

  static equals(a: ImmunizationEvaluation_SeriesDosesX | PlainMessage<ImmunizationEvaluation_SeriesDosesX> | undefined, b: ImmunizationEvaluation_SeriesDosesX | PlainMessage<ImmunizationEvaluation_SeriesDosesX> | undefined): boolean {
    return proto3.util.equals(ImmunizationEvaluation_SeriesDosesX, a, b);
  }
}

