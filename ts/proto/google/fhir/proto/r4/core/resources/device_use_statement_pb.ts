//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/device_use_statement.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Annotation, Code, CodeableConcept, DateTime, Extension, Id, Identifier, Meta, Narrative, Period, Reference, String, Timing, Uri } from "../datatypes_pb.js";
import { DeviceUseStatementStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for DeviceUseStatement.
 * Record of use of a device.
 * See http://hl7.org/fhir/StructureDefinition/DeviceUseStatement
 *
 * @generated from message google.fhir.r4.core.DeviceUseStatement
 */
export class DeviceUseStatement extends Message<DeviceUseStatement> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * External identifier for this record
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * Fulfills plan, proposal or order
   *
   * @generated from field: repeated google.fhir.r4.core.Reference based_on = 11;
   */
  basedOn: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DeviceUseStatement.StatusCode status = 12;
   */
  status?: DeviceUseStatement_StatusCode;

  /**
   * Patient using device
   *
   * @generated from field: google.fhir.r4.core.Reference subject = 13;
   */
  subject?: Reference;

  /**
   * Supporting information
   *
   * @generated from field: repeated google.fhir.r4.core.Reference derived_from = 14;
   */
  derivedFrom: Reference[] = [];

  /**
   * @generated from field: google.fhir.r4.core.DeviceUseStatement.TimingX timing = 15;
   */
  timing?: DeviceUseStatement_TimingX;

  /**
   * When statement was recorded
   *
   * @generated from field: google.fhir.r4.core.DateTime recorded_on = 16;
   */
  recordedOn?: DateTime;

  /**
   * Who made the statement
   *
   * @generated from field: google.fhir.r4.core.Reference source = 17;
   */
  source?: Reference;

  /**
   * Reference to device used
   *
   * @generated from field: google.fhir.r4.core.Reference device = 18;
   */
  device?: Reference;

  /**
   * Why device was used
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept reason_code = 19;
   */
  reasonCode: CodeableConcept[] = [];

  /**
   * Why was DeviceUseStatement performed?
   *
   * @generated from field: repeated google.fhir.r4.core.Reference reason_reference = 20;
   */
  reasonReference: Reference[] = [];

  /**
   * Target body site
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept body_site = 21;
   */
  bodySite?: CodeableConcept;

  /**
   * Addition details (comments, instructions)
   *
   * @generated from field: repeated google.fhir.r4.core.Annotation note = 22;
   */
  note: Annotation[] = [];

  constructor(data?: PartialMessage<DeviceUseStatement>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceUseStatement";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "based_on", kind: "message", T: Reference, repeated: true },
    { no: 12, name: "status", kind: "message", T: DeviceUseStatement_StatusCode },
    { no: 13, name: "subject", kind: "message", T: Reference },
    { no: 14, name: "derived_from", kind: "message", T: Reference, repeated: true },
    { no: 15, name: "timing", kind: "message", T: DeviceUseStatement_TimingX },
    { no: 16, name: "recorded_on", kind: "message", T: DateTime },
    { no: 17, name: "source", kind: "message", T: Reference },
    { no: 18, name: "device", kind: "message", T: Reference },
    { no: 19, name: "reason_code", kind: "message", T: CodeableConcept, repeated: true },
    { no: 20, name: "reason_reference", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "body_site", kind: "message", T: CodeableConcept },
    { no: 22, name: "note", kind: "message", T: Annotation, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatement {
    return new DeviceUseStatement().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatement {
    return new DeviceUseStatement().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatement {
    return new DeviceUseStatement().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatement | PlainMessage<DeviceUseStatement> | undefined, b: DeviceUseStatement | PlainMessage<DeviceUseStatement> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatement, a, b);
  }
}

/**
 * active | completed | entered-in-error +
 *
 * @generated from message google.fhir.r4.core.DeviceUseStatement.StatusCode
 */
export class DeviceUseStatement_StatusCode extends Message<DeviceUseStatement_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.DeviceUseStatementStatusCode.Value value = 1;
   */
  value = DeviceUseStatementStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<DeviceUseStatement_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceUseStatement.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(DeviceUseStatementStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatement_StatusCode {
    return new DeviceUseStatement_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatement_StatusCode {
    return new DeviceUseStatement_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatement_StatusCode {
    return new DeviceUseStatement_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatement_StatusCode | PlainMessage<DeviceUseStatement_StatusCode> | undefined, b: DeviceUseStatement_StatusCode | PlainMessage<DeviceUseStatement_StatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatement_StatusCode, a, b);
  }
}

/**
 * How often  the device was used
 *
 * @generated from message google.fhir.r4.core.DeviceUseStatement.TimingX
 */
export class DeviceUseStatement_TimingX extends Message<DeviceUseStatement_TimingX> {
  /**
   * @generated from oneof google.fhir.r4.core.DeviceUseStatement.TimingX.choice
   */
  choice: {
    /**
     * @generated from field: google.fhir.r4.core.Timing timing = 1;
     */
    value: Timing;
    case: "timing";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.Period period = 2;
     */
    value: Period;
    case: "period";
  } | {
    /**
     * @generated from field: google.fhir.r4.core.DateTime date_time = 3;
     */
    value: DateTime;
    case: "dateTime";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeviceUseStatement_TimingX>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceUseStatement.TimingX";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "timing", kind: "message", T: Timing, oneof: "choice" },
    { no: 2, name: "period", kind: "message", T: Period, oneof: "choice" },
    { no: 3, name: "date_time", kind: "message", T: DateTime, oneof: "choice" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatement_TimingX {
    return new DeviceUseStatement_TimingX().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatement_TimingX {
    return new DeviceUseStatement_TimingX().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatement_TimingX {
    return new DeviceUseStatement_TimingX().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatement_TimingX | PlainMessage<DeviceUseStatement_TimingX> | undefined, b: DeviceUseStatement_TimingX | PlainMessage<DeviceUseStatement_TimingX> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatement_TimingX, a, b);
  }
}

