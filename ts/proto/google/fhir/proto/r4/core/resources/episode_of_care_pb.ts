//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/resources/episode_of_care.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Code, CodeableConcept, Extension, Id, Identifier, Meta, Narrative, Period, PositiveInt, Reference, String, Uri } from "../datatypes_pb.js";
import { EpisodeOfCareStatusCode_Value } from "../codes_pb.js";

/**
 * Auto-generated from StructureDefinition for EpisodeOfCare.
 * An association of a Patient with an Organization and  Healthcare Provider(s)
 * for a period of time that the Organization assumes some level of
 * responsibility. See http://hl7.org/fhir/StructureDefinition/EpisodeOfCare
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCare
 */
export class EpisodeOfCare extends Message<EpisodeOfCare> {
  /**
   * Logical id of this artifact
   *
   * @generated from field: google.fhir.r4.core.Id id = 1;
   */
  id?: Id;

  /**
   * Metadata about the resource
   *
   * @generated from field: google.fhir.r4.core.Meta meta = 2;
   */
  meta?: Meta;

  /**
   * A set of rules under which this content was created
   *
   * @generated from field: google.fhir.r4.core.Uri implicit_rules = 3;
   */
  implicitRules?: Uri;

  /**
   * Language of the resource content
   *
   * @generated from field: google.fhir.r4.core.Code language = 4;
   */
  language?: Code;

  /**
   * Text summary of the resource, for human interpretation
   *
   * @generated from field: google.fhir.r4.core.Narrative text = 5;
   */
  text?: Narrative;

  /**
   * Contained, inline Resources
   *
   * @generated from field: repeated google.protobuf.Any contained = 6;
   */
  contained: Any[] = [];

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 8;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 9;
   */
  modifierExtension: Extension[] = [];

  /**
   * Business Identifier(s) relevant for this EpisodeOfCare
   *
   * @generated from field: repeated google.fhir.r4.core.Identifier identifier = 10;
   */
  identifier: Identifier[] = [];

  /**
   * @generated from field: google.fhir.r4.core.EpisodeOfCare.StatusCode status = 11;
   */
  status?: EpisodeOfCare_StatusCode;

  /**
   * @generated from field: repeated google.fhir.r4.core.EpisodeOfCare.StatusHistory status_history = 12;
   */
  statusHistory: EpisodeOfCare_StatusHistory[] = [];

  /**
   * Type/class  - e.g. specialist referral, disease management
   *
   * @generated from field: repeated google.fhir.r4.core.CodeableConcept type = 13;
   */
  type: CodeableConcept[] = [];

  /**
   * @generated from field: repeated google.fhir.r4.core.EpisodeOfCare.Diagnosis diagnosis = 14;
   */
  diagnosis: EpisodeOfCare_Diagnosis[] = [];

  /**
   * The patient who is the focus of this episode of care
   *
   * @generated from field: google.fhir.r4.core.Reference patient = 15;
   */
  patient?: Reference;

  /**
   * Organization that assumes care
   *
   * @generated from field: google.fhir.r4.core.Reference managing_organization = 16;
   */
  managingOrganization?: Reference;

  /**
   * Interval during responsibility is assumed
   *
   * @generated from field: google.fhir.r4.core.Period period = 17;
   */
  period?: Period;

  /**
   * Originating Referral Request(s)
   *
   * @generated from field: repeated google.fhir.r4.core.Reference referral_request = 18;
   */
  referralRequest: Reference[] = [];

  /**
   * Care manager/care coordinator for the patient
   *
   * @generated from field: google.fhir.r4.core.Reference care_manager = 19;
   */
  careManager?: Reference;

  /**
   * Other practitioners facilitating this episode of care
   *
   * @generated from field: repeated google.fhir.r4.core.Reference team = 20;
   */
  team: Reference[] = [];

  /**
   * The set of accounts that may be used for billing for this EpisodeOfCare
   *
   * @generated from field: repeated google.fhir.r4.core.Reference account = 21;
   */
  account: Reference[] = [];

  constructor(data?: PartialMessage<EpisodeOfCare>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCare";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: Id },
    { no: 2, name: "meta", kind: "message", T: Meta },
    { no: 3, name: "implicit_rules", kind: "message", T: Uri },
    { no: 4, name: "language", kind: "message", T: Code },
    { no: 5, name: "text", kind: "message", T: Narrative },
    { no: 6, name: "contained", kind: "message", T: Any, repeated: true },
    { no: 8, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 9, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 10, name: "identifier", kind: "message", T: Identifier, repeated: true },
    { no: 11, name: "status", kind: "message", T: EpisodeOfCare_StatusCode },
    { no: 12, name: "status_history", kind: "message", T: EpisodeOfCare_StatusHistory, repeated: true },
    { no: 13, name: "type", kind: "message", T: CodeableConcept, repeated: true },
    { no: 14, name: "diagnosis", kind: "message", T: EpisodeOfCare_Diagnosis, repeated: true },
    { no: 15, name: "patient", kind: "message", T: Reference },
    { no: 16, name: "managing_organization", kind: "message", T: Reference },
    { no: 17, name: "period", kind: "message", T: Period },
    { no: 18, name: "referral_request", kind: "message", T: Reference, repeated: true },
    { no: 19, name: "care_manager", kind: "message", T: Reference },
    { no: 20, name: "team", kind: "message", T: Reference, repeated: true },
    { no: 21, name: "account", kind: "message", T: Reference, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare {
    return new EpisodeOfCare().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare {
    return new EpisodeOfCare().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare {
    return new EpisodeOfCare().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare | PlainMessage<EpisodeOfCare> | undefined, b: EpisodeOfCare | PlainMessage<EpisodeOfCare> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare, a, b);
  }
}

/**
 * planned | waitlist | active | onhold | finished | cancelled |
 * entered-in-error
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCare.StatusCode
 */
export class EpisodeOfCare_StatusCode extends Message<EpisodeOfCare_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.EpisodeOfCareStatusCode.Value value = 1;
   */
  value = EpisodeOfCareStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EpisodeOfCare_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCare.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EpisodeOfCareStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare_StatusCode {
    return new EpisodeOfCare_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusCode {
    return new EpisodeOfCare_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusCode {
    return new EpisodeOfCare_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare_StatusCode | PlainMessage<EpisodeOfCare_StatusCode> | undefined, b: EpisodeOfCare_StatusCode | PlainMessage<EpisodeOfCare_StatusCode> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare_StatusCode, a, b);
  }
}

/**
 * Past list of status codes (the current status may be included to cover the
 * start date of the status)
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCare.StatusHistory
 */
export class EpisodeOfCare_StatusHistory extends Message<EpisodeOfCare_StatusHistory> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * @generated from field: google.fhir.r4.core.EpisodeOfCare.StatusHistory.StatusCode status = 4;
   */
  status?: EpisodeOfCare_StatusHistory_StatusCode;

  /**
   * Duration the EpisodeOfCare was in the specified status
   *
   * @generated from field: google.fhir.r4.core.Period period = 5;
   */
  period?: Period;

  constructor(data?: PartialMessage<EpisodeOfCare_StatusHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCare.StatusHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "status", kind: "message", T: EpisodeOfCare_StatusHistory_StatusCode },
    { no: 5, name: "period", kind: "message", T: Period },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare_StatusHistory {
    return new EpisodeOfCare_StatusHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusHistory {
    return new EpisodeOfCare_StatusHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusHistory {
    return new EpisodeOfCare_StatusHistory().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare_StatusHistory | PlainMessage<EpisodeOfCare_StatusHistory> | undefined, b: EpisodeOfCare_StatusHistory | PlainMessage<EpisodeOfCare_StatusHistory> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare_StatusHistory, a, b);
  }
}

/**
 * planned | waitlist | active | onhold | finished | cancelled |
 * entered-in-error
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCare.StatusHistory.StatusCode
 */
export class EpisodeOfCare_StatusHistory_StatusCode extends Message<EpisodeOfCare_StatusHistory_StatusCode> {
  /**
   * @generated from field: google.fhir.r4.core.EpisodeOfCareStatusCode.Value value = 1;
   */
  value = EpisodeOfCareStatusCode_Value.INVALID_UNINITIALIZED;

  /**
   * @generated from field: google.fhir.r4.core.String id = 2;
   */
  id?: String;

  /**
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 3;
   */
  extension: Extension[] = [];

  constructor(data?: PartialMessage<EpisodeOfCare_StatusHistory_StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCare.StatusHistory.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "enum", T: proto3.getEnumType(EpisodeOfCareStatusCode_Value) },
    { no: 2, name: "id", kind: "message", T: String },
    { no: 3, name: "extension", kind: "message", T: Extension, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare_StatusHistory_StatusCode {
    return new EpisodeOfCare_StatusHistory_StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusHistory_StatusCode {
    return new EpisodeOfCare_StatusHistory_StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare_StatusHistory_StatusCode {
    return new EpisodeOfCare_StatusHistory_StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare_StatusHistory_StatusCode | PlainMessage<EpisodeOfCare_StatusHistory_StatusCode> | undefined, b: EpisodeOfCare_StatusHistory_StatusCode | PlainMessage<EpisodeOfCare_StatusHistory_StatusCode> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare_StatusHistory_StatusCode, a, b);
  }
}

/**
 * The list of diagnosis relevant to this episode of care
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCare.Diagnosis
 */
export class EpisodeOfCare_Diagnosis extends Message<EpisodeOfCare_Diagnosis> {
  /**
   * Unique id for inter-element referencing
   *
   * @generated from field: google.fhir.r4.core.String id = 1;
   */
  id?: String;

  /**
   * Additional content defined by implementations
   *
   * @generated from field: repeated google.fhir.r4.core.Extension extension = 2;
   */
  extension: Extension[] = [];

  /**
   * Extensions that cannot be ignored even if unrecognized
   *
   * @generated from field: repeated google.fhir.r4.core.Extension modifier_extension = 3;
   */
  modifierExtension: Extension[] = [];

  /**
   * Conditions/problems/diagnoses this episode of care is for
   *
   * @generated from field: google.fhir.r4.core.Reference condition = 4;
   */
  condition?: Reference;

  /**
   * Role that this diagnosis has within the episode of care (e.g. admission,
   * billing, discharge …)
   *
   * @generated from field: google.fhir.r4.core.CodeableConcept role = 5;
   */
  role?: CodeableConcept;

  /**
   * Ranking of the diagnosis (for each role type)
   *
   * @generated from field: google.fhir.r4.core.PositiveInt rank = 6;
   */
  rank?: PositiveInt;

  constructor(data?: PartialMessage<EpisodeOfCare_Diagnosis>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCare.Diagnosis";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: String },
    { no: 2, name: "extension", kind: "message", T: Extension, repeated: true },
    { no: 3, name: "modifier_extension", kind: "message", T: Extension, repeated: true },
    { no: 4, name: "condition", kind: "message", T: Reference },
    { no: 5, name: "role", kind: "message", T: CodeableConcept },
    { no: 6, name: "rank", kind: "message", T: PositiveInt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCare_Diagnosis {
    return new EpisodeOfCare_Diagnosis().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCare_Diagnosis {
    return new EpisodeOfCare_Diagnosis().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCare_Diagnosis {
    return new EpisodeOfCare_Diagnosis().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCare_Diagnosis | PlainMessage<EpisodeOfCare_Diagnosis> | undefined, b: EpisodeOfCare_Diagnosis | PlainMessage<EpisodeOfCare_Diagnosis> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCare_Diagnosis, a, b);
  }
}

