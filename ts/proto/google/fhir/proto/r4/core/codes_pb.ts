//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// @generated by protoc-gen-es v1.4.1 with parameter "target=ts"
// @generated from file proto/google/fhir/proto/r4/core/codes.proto (package google.fhir.r4.core, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * A list of the base types defined by this version of the FHIR specification -
 * types that are defined, but for which only specializations actually are
 * created. See http://hl7.org/fhir/abstract-types
 *
 * @generated from message google.fhir.r4.core.AbstractTypeCode
 */
export class AbstractTypeCode extends Message<AbstractTypeCode> {
  constructor(data?: PartialMessage<AbstractTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AbstractTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbstractTypeCode {
    return new AbstractTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbstractTypeCode {
    return new AbstractTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbstractTypeCode {
    return new AbstractTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AbstractTypeCode | PlainMessage<AbstractTypeCode> | undefined, b: AbstractTypeCode | PlainMessage<AbstractTypeCode> | undefined): boolean {
    return proto3.util.equals(AbstractTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AbstractTypeCode.Value
 */
export enum AbstractTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TYPE = 1;
   */
  TYPE = 1,

  /**
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AbstractTypeCode_Value)
proto3.util.setEnumType(AbstractTypeCode_Value, "google.fhir.r4.core.AbstractTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TYPE" },
  { no: 2, name: "ANY" },
]);

/**
 * Indicates whether the account is available to be used.
 * See http://hl7.org/fhir/account-status
 *
 * @generated from message google.fhir.r4.core.AccountStatusCode
 */
export class AccountStatusCode extends Message<AccountStatusCode> {
  constructor(data?: PartialMessage<AccountStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AccountStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountStatusCode {
    return new AccountStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountStatusCode {
    return new AccountStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountStatusCode {
    return new AccountStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AccountStatusCode | PlainMessage<AccountStatusCode> | undefined, b: AccountStatusCode | PlainMessage<AccountStatusCode> | undefined): boolean {
    return proto3.util.equals(AccountStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AccountStatusCode.Value
 */
export enum AccountStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: ON_HOLD = 4;
   */
  ON_HOLD = 4,

  /**
   * @generated from enum value: UNKNOWN = 5;
   */
  UNKNOWN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(AccountStatusCode_Value)
proto3.util.setEnumType(AccountStatusCode_Value, "google.fhir.r4.core.AccountStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "ON_HOLD" },
  { no: 5, name: "UNKNOWN" },
]);

/**
 * Defines behavior for an action or a group for how many times that item may be
 * repeated. See http://hl7.org/fhir/action-cardinality-behavior
 *
 * @generated from message google.fhir.r4.core.ActionCardinalityBehaviorCode
 */
export class ActionCardinalityBehaviorCode extends Message<ActionCardinalityBehaviorCode> {
  constructor(data?: PartialMessage<ActionCardinalityBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionCardinalityBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionCardinalityBehaviorCode {
    return new ActionCardinalityBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionCardinalityBehaviorCode {
    return new ActionCardinalityBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionCardinalityBehaviorCode {
    return new ActionCardinalityBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionCardinalityBehaviorCode | PlainMessage<ActionCardinalityBehaviorCode> | undefined, b: ActionCardinalityBehaviorCode | PlainMessage<ActionCardinalityBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionCardinalityBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionCardinalityBehaviorCode.Value
 */
export enum ActionCardinalityBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SINGLE = 1;
   */
  SINGLE = 1,

  /**
   * @generated from enum value: MULTIPLE = 2;
   */
  MULTIPLE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionCardinalityBehaviorCode_Value)
proto3.util.setEnumType(ActionCardinalityBehaviorCode_Value, "google.fhir.r4.core.ActionCardinalityBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SINGLE" },
  { no: 2, name: "MULTIPLE" },
]);

/**
 * Defines the kinds of conditions that can appear on actions.
 * See http://hl7.org/fhir/action-condition-kind
 *
 * @generated from message google.fhir.r4.core.ActionConditionKindCode
 */
export class ActionConditionKindCode extends Message<ActionConditionKindCode> {
  constructor(data?: PartialMessage<ActionConditionKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionConditionKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionConditionKindCode {
    return new ActionConditionKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionConditionKindCode {
    return new ActionConditionKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionConditionKindCode {
    return new ActionConditionKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionConditionKindCode | PlainMessage<ActionConditionKindCode> | undefined, b: ActionConditionKindCode | PlainMessage<ActionConditionKindCode> | undefined): boolean {
    return proto3.util.equals(ActionConditionKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionConditionKindCode.Value
 */
export enum ActionConditionKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: APPLICABILITY = 1;
   */
  APPLICABILITY = 1,

  /**
   * @generated from enum value: START = 2;
   */
  START = 2,

  /**
   * @generated from enum value: STOP = 3;
   */
  STOP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionConditionKindCode_Value)
proto3.util.setEnumType(ActionConditionKindCode_Value, "google.fhir.r4.core.ActionConditionKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "APPLICABILITY" },
  { no: 2, name: "START" },
  { no: 3, name: "STOP" },
]);

/**
 * Defines organization behavior of a group.
 * See http://hl7.org/fhir/action-grouping-behavior
 *
 * @generated from message google.fhir.r4.core.ActionGroupingBehaviorCode
 */
export class ActionGroupingBehaviorCode extends Message<ActionGroupingBehaviorCode> {
  constructor(data?: PartialMessage<ActionGroupingBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionGroupingBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionGroupingBehaviorCode {
    return new ActionGroupingBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionGroupingBehaviorCode {
    return new ActionGroupingBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionGroupingBehaviorCode {
    return new ActionGroupingBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionGroupingBehaviorCode | PlainMessage<ActionGroupingBehaviorCode> | undefined, b: ActionGroupingBehaviorCode | PlainMessage<ActionGroupingBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionGroupingBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionGroupingBehaviorCode.Value
 */
export enum ActionGroupingBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: VISUAL_GROUP = 1;
   */
  VISUAL_GROUP = 1,

  /**
   * @generated from enum value: LOGICAL_GROUP = 2;
   */
  LOGICAL_GROUP = 2,

  /**
   * @generated from enum value: SENTENCE_GROUP = 3;
   */
  SENTENCE_GROUP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionGroupingBehaviorCode_Value)
proto3.util.setEnumType(ActionGroupingBehaviorCode_Value, "google.fhir.r4.core.ActionGroupingBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "VISUAL_GROUP" },
  { no: 2, name: "LOGICAL_GROUP" },
  { no: 3, name: "SENTENCE_GROUP" },
]);

/**
 * The type of participant for the action.
 * See http://hl7.org/fhir/action-participant-type
 *
 * @generated from message google.fhir.r4.core.ActionParticipantTypeCode
 */
export class ActionParticipantTypeCode extends Message<ActionParticipantTypeCode> {
  constructor(data?: PartialMessage<ActionParticipantTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionParticipantTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionParticipantTypeCode {
    return new ActionParticipantTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionParticipantTypeCode {
    return new ActionParticipantTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionParticipantTypeCode {
    return new ActionParticipantTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionParticipantTypeCode | PlainMessage<ActionParticipantTypeCode> | undefined, b: ActionParticipantTypeCode | PlainMessage<ActionParticipantTypeCode> | undefined): boolean {
    return proto3.util.equals(ActionParticipantTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionParticipantTypeCode.Value
 */
export enum ActionParticipantTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PATIENT = 1;
   */
  PATIENT = 1,

  /**
   * @generated from enum value: PRACTITIONER = 2;
   */
  PRACTITIONER = 2,

  /**
   * @generated from enum value: RELATED_PERSON = 3;
   */
  RELATED_PERSON = 3,

  /**
   * @generated from enum value: DEVICE = 4;
   */
  DEVICE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionParticipantTypeCode_Value)
proto3.util.setEnumType(ActionParticipantTypeCode_Value, "google.fhir.r4.core.ActionParticipantTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PATIENT" },
  { no: 2, name: "PRACTITIONER" },
  { no: 3, name: "RELATED_PERSON" },
  { no: 4, name: "DEVICE" },
]);

/**
 * Defines selection frequency behavior for an action or group.
 * See http://hl7.org/fhir/action-precheck-behavior
 *
 * @generated from message google.fhir.r4.core.ActionPrecheckBehaviorCode
 */
export class ActionPrecheckBehaviorCode extends Message<ActionPrecheckBehaviorCode> {
  constructor(data?: PartialMessage<ActionPrecheckBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionPrecheckBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionPrecheckBehaviorCode {
    return new ActionPrecheckBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionPrecheckBehaviorCode {
    return new ActionPrecheckBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionPrecheckBehaviorCode {
    return new ActionPrecheckBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionPrecheckBehaviorCode | PlainMessage<ActionPrecheckBehaviorCode> | undefined, b: ActionPrecheckBehaviorCode | PlainMessage<ActionPrecheckBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionPrecheckBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionPrecheckBehaviorCode.Value
 */
export enum ActionPrecheckBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: YES = 1;
   */
  YES = 1,

  /**
   * @generated from enum value: NO = 2;
   */
  NO = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionPrecheckBehaviorCode_Value)
proto3.util.setEnumType(ActionPrecheckBehaviorCode_Value, "google.fhir.r4.core.ActionPrecheckBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "YES" },
  { no: 2, name: "NO" },
]);

/**
 * Defines the types of relationships between actions.
 * See http://hl7.org/fhir/action-relationship-type
 *
 * @generated from message google.fhir.r4.core.ActionRelationshipTypeCode
 */
export class ActionRelationshipTypeCode extends Message<ActionRelationshipTypeCode> {
  constructor(data?: PartialMessage<ActionRelationshipTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionRelationshipTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionRelationshipTypeCode {
    return new ActionRelationshipTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionRelationshipTypeCode {
    return new ActionRelationshipTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionRelationshipTypeCode {
    return new ActionRelationshipTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionRelationshipTypeCode | PlainMessage<ActionRelationshipTypeCode> | undefined, b: ActionRelationshipTypeCode | PlainMessage<ActionRelationshipTypeCode> | undefined): boolean {
    return proto3.util.equals(ActionRelationshipTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionRelationshipTypeCode.Value
 */
export enum ActionRelationshipTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BEFORE_START = 1;
   */
  BEFORE_START = 1,

  /**
   * @generated from enum value: BEFORE = 2;
   */
  BEFORE = 2,

  /**
   * @generated from enum value: BEFORE_END = 3;
   */
  BEFORE_END = 3,

  /**
   * @generated from enum value: CONCURRENT_WITH_START = 4;
   */
  CONCURRENT_WITH_START = 4,

  /**
   * @generated from enum value: CONCURRENT = 5;
   */
  CONCURRENT = 5,

  /**
   * @generated from enum value: CONCURRENT_WITH_END = 6;
   */
  CONCURRENT_WITH_END = 6,

  /**
   * @generated from enum value: AFTER_START = 7;
   */
  AFTER_START = 7,

  /**
   * @generated from enum value: AFTER = 8;
   */
  AFTER = 8,

  /**
   * @generated from enum value: AFTER_END = 9;
   */
  AFTER_END = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionRelationshipTypeCode_Value)
proto3.util.setEnumType(ActionRelationshipTypeCode_Value, "google.fhir.r4.core.ActionRelationshipTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BEFORE_START" },
  { no: 2, name: "BEFORE" },
  { no: 3, name: "BEFORE_END" },
  { no: 4, name: "CONCURRENT_WITH_START" },
  { no: 5, name: "CONCURRENT" },
  { no: 6, name: "CONCURRENT_WITH_END" },
  { no: 7, name: "AFTER_START" },
  { no: 8, name: "AFTER" },
  { no: 9, name: "AFTER_END" },
]);

/**
 * Defines expectations around whether an action or action group is required.
 * See http://hl7.org/fhir/action-required-behavior
 *
 * @generated from message google.fhir.r4.core.ActionRequiredBehaviorCode
 */
export class ActionRequiredBehaviorCode extends Message<ActionRequiredBehaviorCode> {
  constructor(data?: PartialMessage<ActionRequiredBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionRequiredBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionRequiredBehaviorCode {
    return new ActionRequiredBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionRequiredBehaviorCode {
    return new ActionRequiredBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionRequiredBehaviorCode {
    return new ActionRequiredBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionRequiredBehaviorCode | PlainMessage<ActionRequiredBehaviorCode> | undefined, b: ActionRequiredBehaviorCode | PlainMessage<ActionRequiredBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionRequiredBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionRequiredBehaviorCode.Value
 */
export enum ActionRequiredBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MUST = 1;
   */
  MUST = 1,

  /**
   * @generated from enum value: COULD = 2;
   */
  COULD = 2,

  /**
   * @generated from enum value: MUST_UNLESS_DOCUMENTED = 3;
   */
  MUST_UNLESS_DOCUMENTED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionRequiredBehaviorCode_Value)
proto3.util.setEnumType(ActionRequiredBehaviorCode_Value, "google.fhir.r4.core.ActionRequiredBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MUST" },
  { no: 2, name: "COULD" },
  { no: 3, name: "MUST_UNLESS_DOCUMENTED" },
]);

/**
 * Defines selection behavior of a group.
 * See http://hl7.org/fhir/action-selection-behavior
 *
 * @generated from message google.fhir.r4.core.ActionSelectionBehaviorCode
 */
export class ActionSelectionBehaviorCode extends Message<ActionSelectionBehaviorCode> {
  constructor(data?: PartialMessage<ActionSelectionBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ActionSelectionBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ActionSelectionBehaviorCode {
    return new ActionSelectionBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ActionSelectionBehaviorCode {
    return new ActionSelectionBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ActionSelectionBehaviorCode {
    return new ActionSelectionBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: ActionSelectionBehaviorCode | PlainMessage<ActionSelectionBehaviorCode> | undefined, b: ActionSelectionBehaviorCode | PlainMessage<ActionSelectionBehaviorCode> | undefined): boolean {
    return proto3.util.equals(ActionSelectionBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ActionSelectionBehaviorCode.Value
 */
export enum ActionSelectionBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ANY = 1;
   */
  ANY = 1,

  /**
   * @generated from enum value: ALL = 2;
   */
  ALL = 2,

  /**
   * @generated from enum value: ALL_OR_NONE = 3;
   */
  ALL_OR_NONE = 3,

  /**
   * @generated from enum value: EXACTLY_ONE = 4;
   */
  EXACTLY_ONE = 4,

  /**
   * @generated from enum value: AT_MOST_ONE = 5;
   */
  AT_MOST_ONE = 5,

  /**
   * @generated from enum value: ONE_OR_MORE = 6;
   */
  ONE_OR_MORE = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ActionSelectionBehaviorCode_Value)
proto3.util.setEnumType(ActionSelectionBehaviorCode_Value, "google.fhir.r4.core.ActionSelectionBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ANY" },
  { no: 2, name: "ALL" },
  { no: 3, name: "ALL_OR_NONE" },
  { no: 4, name: "EXACTLY_ONE" },
  { no: 5, name: "AT_MOST_ONE" },
  { no: 6, name: "ONE_OR_MORE" },
]);

/**
 * The type of an address (physical / postal).
 * See http://hl7.org/fhir/address-type
 *
 * @generated from message google.fhir.r4.core.AddressTypeCode
 */
export class AddressTypeCode extends Message<AddressTypeCode> {
  constructor(data?: PartialMessage<AddressTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressTypeCode {
    return new AddressTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressTypeCode {
    return new AddressTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressTypeCode {
    return new AddressTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AddressTypeCode | PlainMessage<AddressTypeCode> | undefined, b: AddressTypeCode | PlainMessage<AddressTypeCode> | undefined): boolean {
    return proto3.util.equals(AddressTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AddressTypeCode.Value
 */
export enum AddressTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: POSTAL = 1;
   */
  POSTAL = 1,

  /**
   * @generated from enum value: PHYSICAL = 2;
   */
  PHYSICAL = 2,

  /**
   * @generated from enum value: BOTH = 3;
   */
  BOTH = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AddressTypeCode_Value)
proto3.util.setEnumType(AddressTypeCode_Value, "google.fhir.r4.core.AddressTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "POSTAL" },
  { no: 2, name: "PHYSICAL" },
  { no: 3, name: "BOTH" },
]);

/**
 * The use of an address.
 * See http://hl7.org/fhir/address-use
 *
 * @generated from message google.fhir.r4.core.AddressUseCode
 */
export class AddressUseCode extends Message<AddressUseCode> {
  constructor(data?: PartialMessage<AddressUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AddressUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressUseCode {
    return new AddressUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressUseCode {
    return new AddressUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressUseCode {
    return new AddressUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: AddressUseCode | PlainMessage<AddressUseCode> | undefined, b: AddressUseCode | PlainMessage<AddressUseCode> | undefined): boolean {
    return proto3.util.equals(AddressUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AddressUseCode.Value
 */
export enum AddressUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HOME = 1;
   */
  HOME = 1,

  /**
   * @generated from enum value: WORK = 2;
   */
  WORK = 2,

  /**
   * @generated from enum value: TEMP = 3;
   */
  TEMP = 3,

  /**
   * @generated from enum value: OLD = 4;
   */
  OLD = 4,

  /**
   * @generated from enum value: BILLING = 5;
   */
  BILLING = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(AddressUseCode_Value)
proto3.util.setEnumType(AddressUseCode_Value, "google.fhir.r4.core.AddressUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HOME" },
  { no: 2, name: "WORK" },
  { no: 3, name: "TEMP" },
  { no: 4, name: "OLD" },
  { no: 5, name: "BILLING" },
]);

/**
 * The gender of a person used for administrative purposes.
 * See http://hl7.org/fhir/administrative-gender
 *
 * @generated from message google.fhir.r4.core.AdministrativeGenderCode
 */
export class AdministrativeGenderCode extends Message<AdministrativeGenderCode> {
  constructor(data?: PartialMessage<AdministrativeGenderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdministrativeGenderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdministrativeGenderCode {
    return new AdministrativeGenderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdministrativeGenderCode {
    return new AdministrativeGenderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdministrativeGenderCode {
    return new AdministrativeGenderCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdministrativeGenderCode | PlainMessage<AdministrativeGenderCode> | undefined, b: AdministrativeGenderCode | PlainMessage<AdministrativeGenderCode> | undefined): boolean {
    return proto3.util.equals(AdministrativeGenderCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AdministrativeGenderCode.Value
 */
export enum AdministrativeGenderCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MALE = 1;
   */
  MALE = 1,

  /**
   * @generated from enum value: FEMALE = 2;
   */
  FEMALE = 2,

  /**
   * @generated from enum value: OTHER = 3;
   */
  OTHER = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AdministrativeGenderCode_Value)
proto3.util.setEnumType(AdministrativeGenderCode_Value, "google.fhir.r4.core.AdministrativeGenderCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MALE" },
  { no: 2, name: "FEMALE" },
  { no: 3, name: "OTHER" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Overall nature of the adverse event, e.g. real or potential.
 * See http://hl7.org/fhir/adverse-event-actuality
 *
 * @generated from message google.fhir.r4.core.AdverseEventActualityCode
 */
export class AdverseEventActualityCode extends Message<AdverseEventActualityCode> {
  constructor(data?: PartialMessage<AdverseEventActualityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEventActualityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventActualityCode {
    return new AdverseEventActualityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventActualityCode {
    return new AdverseEventActualityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventActualityCode {
    return new AdverseEventActualityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventActualityCode | PlainMessage<AdverseEventActualityCode> | undefined, b: AdverseEventActualityCode | PlainMessage<AdverseEventActualityCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventActualityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AdverseEventActualityCode.Value
 */
export enum AdverseEventActualityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTUAL = 1;
   */
  ACTUAL = 1,

  /**
   * @generated from enum value: POTENTIAL = 2;
   */
  POTENTIAL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventActualityCode_Value)
proto3.util.setEnumType(AdverseEventActualityCode_Value, "google.fhir.r4.core.AdverseEventActualityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTUAL" },
  { no: 2, name: "POTENTIAL" },
]);

/**
 * TODO (and should this be required?).
 * See http://terminology.hl7.org/CodeSystem/adverse-event-outcome
 *
 * @generated from message google.fhir.r4.core.AdverseEventOutcomeCode
 */
export class AdverseEventOutcomeCode extends Message<AdverseEventOutcomeCode> {
  constructor(data?: PartialMessage<AdverseEventOutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEventOutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventOutcomeCode {
    return new AdverseEventOutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventOutcomeCode {
    return new AdverseEventOutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventOutcomeCode {
    return new AdverseEventOutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventOutcomeCode | PlainMessage<AdverseEventOutcomeCode> | undefined, b: AdverseEventOutcomeCode | PlainMessage<AdverseEventOutcomeCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventOutcomeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AdverseEventOutcomeCode.Value
 */
export enum AdverseEventOutcomeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RESOLVED = 1;
   */
  RESOLVED = 1,

  /**
   * @generated from enum value: RECOVERING = 2;
   */
  RECOVERING = 2,

  /**
   * @generated from enum value: ONGOING = 3;
   */
  ONGOING = 3,

  /**
   * @generated from enum value: RESOLVED_WITH_SEQUELAE = 4;
   */
  RESOLVED_WITH_SEQUELAE = 4,

  /**
   * @generated from enum value: FATAL = 5;
   */
  FATAL = 5,

  /**
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventOutcomeCode_Value)
proto3.util.setEnumType(AdverseEventOutcomeCode_Value, "google.fhir.r4.core.AdverseEventOutcomeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RESOLVED" },
  { no: 2, name: "RECOVERING" },
  { no: 3, name: "ONGOING" },
  { no: 4, name: "RESOLVED_WITH_SEQUELAE" },
  { no: 5, name: "FATAL" },
  { no: 6, name: "UNKNOWN" },
]);

/**
 * The severity of the adverse event itself, in direct relation to the subject.
 * See http://terminology.hl7.org/CodeSystem/adverse-event-severity
 *
 * @generated from message google.fhir.r4.core.AdverseEventSeverityCode
 */
export class AdverseEventSeverityCode extends Message<AdverseEventSeverityCode> {
  constructor(data?: PartialMessage<AdverseEventSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AdverseEventSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdverseEventSeverityCode {
    return new AdverseEventSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdverseEventSeverityCode {
    return new AdverseEventSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdverseEventSeverityCode {
    return new AdverseEventSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AdverseEventSeverityCode | PlainMessage<AdverseEventSeverityCode> | undefined, b: AdverseEventSeverityCode | PlainMessage<AdverseEventSeverityCode> | undefined): boolean {
    return proto3.util.equals(AdverseEventSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AdverseEventSeverityCode.Value
 */
export enum AdverseEventSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MILD = 1;
   */
  MILD = 1,

  /**
   * @generated from enum value: MODERATE = 2;
   */
  MODERATE = 2,

  /**
   * @generated from enum value: SEVERE = 3;
   */
  SEVERE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AdverseEventSeverityCode_Value)
proto3.util.setEnumType(AdverseEventSeverityCode_Value, "google.fhir.r4.core.AdverseEventSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MILD" },
  { no: 2, name: "MODERATE" },
  { no: 3, name: "SEVERE" },
]);

/**
 * How resource references can be aggregated.
 * See http://hl7.org/fhir/resource-aggregation-mode
 *
 * @generated from message google.fhir.r4.core.AggregationModeCode
 */
export class AggregationModeCode extends Message<AggregationModeCode> {
  constructor(data?: PartialMessage<AggregationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AggregationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AggregationModeCode {
    return new AggregationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AggregationModeCode {
    return new AggregationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AggregationModeCode {
    return new AggregationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AggregationModeCode | PlainMessage<AggregationModeCode> | undefined, b: AggregationModeCode | PlainMessage<AggregationModeCode> | undefined): boolean {
    return proto3.util.equals(AggregationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AggregationModeCode.Value
 */
export enum AggregationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONTAINED = 1;
   */
  CONTAINED = 1,

  /**
   * @generated from enum value: REFERENCED = 2;
   */
  REFERENCED = 2,

  /**
   * @generated from enum value: BUNDLED = 3;
   */
  BUNDLED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AggregationModeCode_Value)
proto3.util.setEnumType(AggregationModeCode_Value, "google.fhir.r4.core.AggregationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONTAINED" },
  { no: 2, name: "REFERENCED" },
  { no: 3, name: "BUNDLED" },
]);

/**
 * Category of an identified substance associated with allergies or
 * intolerances. See http://hl7.org/fhir/allergy-intolerance-category
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceCategoryCode
 */
export class AllergyIntoleranceCategoryCode extends Message<AllergyIntoleranceCategoryCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCategoryCode {
    return new AllergyIntoleranceCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCategoryCode {
    return new AllergyIntoleranceCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCategoryCode {
    return new AllergyIntoleranceCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCategoryCode | PlainMessage<AllergyIntoleranceCategoryCode> | undefined, b: AllergyIntoleranceCategoryCode | PlainMessage<AllergyIntoleranceCategoryCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceCategoryCode.Value
 */
export enum AllergyIntoleranceCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FOOD = 1;
   */
  FOOD = 1,

  /**
   * @generated from enum value: MEDICATION = 2;
   */
  MEDICATION = 2,

  /**
   * @generated from enum value: ENVIRONMENT = 3;
   */
  ENVIRONMENT = 3,

  /**
   * @generated from enum value: BIOLOGIC = 4;
   */
  BIOLOGIC = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceCategoryCode_Value)
proto3.util.setEnumType(AllergyIntoleranceCategoryCode_Value, "google.fhir.r4.core.AllergyIntoleranceCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FOOD" },
  { no: 2, name: "MEDICATION" },
  { no: 3, name: "ENVIRONMENT" },
  { no: 4, name: "BIOLOGIC" },
]);

/**
 * Preferred value set for AllergyIntolerance Clinical Status.
 * See http://terminology.hl7.org/CodeSystem/allergyintolerance-clinical
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceClinicalStatusCode
 */
export class AllergyIntoleranceClinicalStatusCode extends Message<AllergyIntoleranceClinicalStatusCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceClinicalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceClinicalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceClinicalStatusCode {
    return new AllergyIntoleranceClinicalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceClinicalStatusCode {
    return new AllergyIntoleranceClinicalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceClinicalStatusCode {
    return new AllergyIntoleranceClinicalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceClinicalStatusCode | PlainMessage<AllergyIntoleranceClinicalStatusCode> | undefined, b: AllergyIntoleranceClinicalStatusCode | PlainMessage<AllergyIntoleranceClinicalStatusCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceClinicalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceClinicalStatusCode.Value
 */
export enum AllergyIntoleranceClinicalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: RESOLVED = 3;
   */
  RESOLVED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceClinicalStatusCode_Value)
proto3.util.setEnumType(AllergyIntoleranceClinicalStatusCode_Value, "google.fhir.r4.core.AllergyIntoleranceClinicalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "RESOLVED" },
]);

/**
 * Estimate of the potential clinical harm, or seriousness, of a reaction to an
 * identified substance. See http://hl7.org/fhir/allergy-intolerance-criticality
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceCriticalityCode
 */
export class AllergyIntoleranceCriticalityCode extends Message<AllergyIntoleranceCriticalityCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceCriticalityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceCriticalityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceCriticalityCode {
    return new AllergyIntoleranceCriticalityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceCriticalityCode {
    return new AllergyIntoleranceCriticalityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceCriticalityCode {
    return new AllergyIntoleranceCriticalityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceCriticalityCode | PlainMessage<AllergyIntoleranceCriticalityCode> | undefined, b: AllergyIntoleranceCriticalityCode | PlainMessage<AllergyIntoleranceCriticalityCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceCriticalityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceCriticalityCode.Value
 */
export enum AllergyIntoleranceCriticalityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LOW = 1;
   */
  LOW = 1,

  /**
   * @generated from enum value: HIGH = 2;
   */
  HIGH = 2,

  /**
   * @generated from enum value: UNABLE_TO_ASSESS = 3;
   */
  UNABLE_TO_ASSESS = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceCriticalityCode_Value)
proto3.util.setEnumType(AllergyIntoleranceCriticalityCode_Value, "google.fhir.r4.core.AllergyIntoleranceCriticalityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LOW" },
  { no: 2, name: "HIGH" },
  { no: 3, name: "UNABLE_TO_ASSESS" },
]);

/**
 * Clinical assessment of the severity of a reaction event as a whole,
 * potentially considering multiple different manifestations. See
 * http://hl7.org/fhir/reaction-event-severity
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceSeverityCode
 */
export class AllergyIntoleranceSeverityCode extends Message<AllergyIntoleranceSeverityCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceSeverityCode {
    return new AllergyIntoleranceSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceSeverityCode {
    return new AllergyIntoleranceSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceSeverityCode {
    return new AllergyIntoleranceSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceSeverityCode | PlainMessage<AllergyIntoleranceSeverityCode> | undefined, b: AllergyIntoleranceSeverityCode | PlainMessage<AllergyIntoleranceSeverityCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceSeverityCode.Value
 */
export enum AllergyIntoleranceSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MILD = 1;
   */
  MILD = 1,

  /**
   * @generated from enum value: MODERATE = 2;
   */
  MODERATE = 2,

  /**
   * @generated from enum value: SEVERE = 3;
   */
  SEVERE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceSeverityCode_Value)
proto3.util.setEnumType(AllergyIntoleranceSeverityCode_Value, "google.fhir.r4.core.AllergyIntoleranceSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MILD" },
  { no: 2, name: "MODERATE" },
  { no: 3, name: "SEVERE" },
]);

/**
 * The risk of an adverse reaction (allergy or intolerance) for this patient
 * upon exposure to the substance (including pharmaceutical products). See
 * http://terminology.hl7.org/CodeSystem/allerg-intol-substance-exp-risk
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceSubstanceExposureRiskCode
 */
export class AllergyIntoleranceSubstanceExposureRiskCode extends Message<AllergyIntoleranceSubstanceExposureRiskCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceSubstanceExposureRiskCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceSubstanceExposureRiskCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceSubstanceExposureRiskCode {
    return new AllergyIntoleranceSubstanceExposureRiskCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceSubstanceExposureRiskCode {
    return new AllergyIntoleranceSubstanceExposureRiskCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceSubstanceExposureRiskCode {
    return new AllergyIntoleranceSubstanceExposureRiskCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceSubstanceExposureRiskCode | PlainMessage<AllergyIntoleranceSubstanceExposureRiskCode> | undefined, b: AllergyIntoleranceSubstanceExposureRiskCode | PlainMessage<AllergyIntoleranceSubstanceExposureRiskCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceSubstanceExposureRiskCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceSubstanceExposureRiskCode.Value
 */
export enum AllergyIntoleranceSubstanceExposureRiskCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: KNOWN_REACTION_RISK = 1;
   */
  KNOWN_REACTION_RISK = 1,

  /**
   * @generated from enum value: NO_KNOWN_REACTION_RISK = 2;
   */
  NO_KNOWN_REACTION_RISK = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceSubstanceExposureRiskCode_Value)
proto3.util.setEnumType(AllergyIntoleranceSubstanceExposureRiskCode_Value, "google.fhir.r4.core.AllergyIntoleranceSubstanceExposureRiskCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "KNOWN_REACTION_RISK" },
  { no: 2, name: "NO_KNOWN_REACTION_RISK" },
]);

/**
 * Identification of the underlying physiological mechanism for a Reaction Risk.
 * See http://hl7.org/fhir/allergy-intolerance-type
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceTypeCode
 */
export class AllergyIntoleranceTypeCode extends Message<AllergyIntoleranceTypeCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceTypeCode {
    return new AllergyIntoleranceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceTypeCode {
    return new AllergyIntoleranceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceTypeCode {
    return new AllergyIntoleranceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceTypeCode | PlainMessage<AllergyIntoleranceTypeCode> | undefined, b: AllergyIntoleranceTypeCode | PlainMessage<AllergyIntoleranceTypeCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceTypeCode.Value
 */
export enum AllergyIntoleranceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALLERGY = 1;
   */
  ALLERGY = 1,

  /**
   * @generated from enum value: INTOLERANCE = 2;
   */
  INTOLERANCE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceTypeCode_Value)
proto3.util.setEnumType(AllergyIntoleranceTypeCode_Value, "google.fhir.r4.core.AllergyIntoleranceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALLERGY" },
  { no: 2, name: "INTOLERANCE" },
]);

/**
 * Preferred value set for AllergyIntolerance Verification Status.
 * See http://terminology.hl7.org/CodeSystem/allergyintolerance-verification
 *
 * @generated from message google.fhir.r4.core.AllergyIntoleranceVerificationStatusCode
 */
export class AllergyIntoleranceVerificationStatusCode extends Message<AllergyIntoleranceVerificationStatusCode> {
  constructor(data?: PartialMessage<AllergyIntoleranceVerificationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AllergyIntoleranceVerificationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllergyIntoleranceVerificationStatusCode {
    return new AllergyIntoleranceVerificationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllergyIntoleranceVerificationStatusCode {
    return new AllergyIntoleranceVerificationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllergyIntoleranceVerificationStatusCode {
    return new AllergyIntoleranceVerificationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AllergyIntoleranceVerificationStatusCode | PlainMessage<AllergyIntoleranceVerificationStatusCode> | undefined, b: AllergyIntoleranceVerificationStatusCode | PlainMessage<AllergyIntoleranceVerificationStatusCode> | undefined): boolean {
    return proto3.util.equals(AllergyIntoleranceVerificationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AllergyIntoleranceVerificationStatusCode.Value
 */
export enum AllergyIntoleranceVerificationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNCONFIRMED = 1;
   */
  UNCONFIRMED = 1,

  /**
   * @generated from enum value: CONFIRMED = 2;
   */
  CONFIRMED = 2,

  /**
   * @generated from enum value: REFUTED = 3;
   */
  REFUTED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AllergyIntoleranceVerificationStatusCode_Value)
proto3.util.setEnumType(AllergyIntoleranceVerificationStatusCode_Value, "google.fhir.r4.core.AllergyIntoleranceVerificationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNCONFIRMED" },
  { no: 2, name: "CONFIRMED" },
  { no: 3, name: "REFUTED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * The free/busy status of an appointment.
 * See http://hl7.org/fhir/appointmentstatus
 *
 * @generated from message google.fhir.r4.core.AppointmentStatusCode
 */
export class AppointmentStatusCode extends Message<AppointmentStatusCode> {
  constructor(data?: PartialMessage<AppointmentStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AppointmentStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AppointmentStatusCode {
    return new AppointmentStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AppointmentStatusCode {
    return new AppointmentStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AppointmentStatusCode {
    return new AppointmentStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: AppointmentStatusCode | PlainMessage<AppointmentStatusCode> | undefined, b: AppointmentStatusCode | PlainMessage<AppointmentStatusCode> | undefined): boolean {
    return proto3.util.equals(AppointmentStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AppointmentStatusCode.Value
 */
export enum AppointmentStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: BOOKED = 3;
   */
  BOOKED = 3,

  /**
   * @generated from enum value: ARRIVED = 4;
   */
  ARRIVED = 4,

  /**
   * @generated from enum value: FULFILLED = 5;
   */
  FULFILLED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: NOSHOW = 7;
   */
  NOSHOW = 7,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 8;
   */
  ENTERED_IN_ERROR = 8,

  /**
   * @generated from enum value: CHECKED_IN = 9;
   */
  CHECKED_IN = 9,

  /**
   * @generated from enum value: WAITLIST = 10;
   */
  WAITLIST = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(AppointmentStatusCode_Value)
proto3.util.setEnumType(AppointmentStatusCode_Value, "google.fhir.r4.core.AppointmentStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "BOOKED" },
  { no: 4, name: "ARRIVED" },
  { no: 5, name: "FULFILLED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "NOSHOW" },
  { no: 8, name: "ENTERED_IN_ERROR" },
  { no: 9, name: "CHECKED_IN" },
  { no: 10, name: "WAITLIST" },
]);

/**
 * The type of direction to use for assertion.
 * See http://hl7.org/fhir/assert-direction-codes
 *
 * @generated from message google.fhir.r4.core.AssertionDirectionTypeCode
 */
export class AssertionDirectionTypeCode extends Message<AssertionDirectionTypeCode> {
  constructor(data?: PartialMessage<AssertionDirectionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AssertionDirectionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssertionDirectionTypeCode {
    return new AssertionDirectionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssertionDirectionTypeCode {
    return new AssertionDirectionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssertionDirectionTypeCode {
    return new AssertionDirectionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AssertionDirectionTypeCode | PlainMessage<AssertionDirectionTypeCode> | undefined, b: AssertionDirectionTypeCode | PlainMessage<AssertionDirectionTypeCode> | undefined): boolean {
    return proto3.util.equals(AssertionDirectionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AssertionDirectionTypeCode.Value
 */
export enum AssertionDirectionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RESPONSE = 1;
   */
  RESPONSE = 1,

  /**
   * @generated from enum value: REQUEST = 2;
   */
  REQUEST = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(AssertionDirectionTypeCode_Value)
proto3.util.setEnumType(AssertionDirectionTypeCode_Value, "google.fhir.r4.core.AssertionDirectionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RESPONSE" },
  { no: 2, name: "REQUEST" },
]);

/**
 * The type of operator to use for assertion.
 * See http://hl7.org/fhir/assert-operator-codes
 *
 * @generated from message google.fhir.r4.core.AssertionOperatorTypeCode
 */
export class AssertionOperatorTypeCode extends Message<AssertionOperatorTypeCode> {
  constructor(data?: PartialMessage<AssertionOperatorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AssertionOperatorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssertionOperatorTypeCode {
    return new AssertionOperatorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssertionOperatorTypeCode {
    return new AssertionOperatorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssertionOperatorTypeCode {
    return new AssertionOperatorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AssertionOperatorTypeCode | PlainMessage<AssertionOperatorTypeCode> | undefined, b: AssertionOperatorTypeCode | PlainMessage<AssertionOperatorTypeCode> | undefined): boolean {
    return proto3.util.equals(AssertionOperatorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AssertionOperatorTypeCode.Value
 */
export enum AssertionOperatorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EQUALS = 1;
   */
  EQUALS = 1,

  /**
   * @generated from enum value: NOT_EQUALS = 2;
   */
  NOT_EQUALS = 2,

  /**
   * @generated from enum value: IN = 3;
   */
  IN = 3,

  /**
   * @generated from enum value: NOT_IN = 4;
   */
  NOT_IN = 4,

  /**
   * @generated from enum value: GREATER_THAN = 5;
   */
  GREATER_THAN = 5,

  /**
   * @generated from enum value: LESS_THAN = 6;
   */
  LESS_THAN = 6,

  /**
   * @generated from enum value: EMPTY = 7;
   */
  EMPTY = 7,

  /**
   * @generated from enum value: NOT_EMPTY = 8;
   */
  NOT_EMPTY = 8,

  /**
   * @generated from enum value: CONTAINS = 9;
   */
  CONTAINS = 9,

  /**
   * @generated from enum value: NOT_CONTAINS = 10;
   */
  NOT_CONTAINS = 10,

  /**
   * @generated from enum value: EVAL = 11;
   */
  EVAL = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(AssertionOperatorTypeCode_Value)
proto3.util.setEnumType(AssertionOperatorTypeCode_Value, "google.fhir.r4.core.AssertionOperatorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EQUALS" },
  { no: 2, name: "NOT_EQUALS" },
  { no: 3, name: "IN" },
  { no: 4, name: "NOT_IN" },
  { no: 5, name: "GREATER_THAN" },
  { no: 6, name: "LESS_THAN" },
  { no: 7, name: "EMPTY" },
  { no: 8, name: "NOT_EMPTY" },
  { no: 9, name: "CONTAINS" },
  { no: 10, name: "NOT_CONTAINS" },
  { no: 11, name: "EVAL" },
]);

/**
 * The type of response code to use for assertion.
 * See http://hl7.org/fhir/assert-response-code-types
 *
 * @generated from message google.fhir.r4.core.AssertionResponseTypesCode
 */
export class AssertionResponseTypesCode extends Message<AssertionResponseTypesCode> {
  constructor(data?: PartialMessage<AssertionResponseTypesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AssertionResponseTypesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssertionResponseTypesCode {
    return new AssertionResponseTypesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssertionResponseTypesCode {
    return new AssertionResponseTypesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssertionResponseTypesCode {
    return new AssertionResponseTypesCode().fromJsonString(jsonString, options);
  }

  static equals(a: AssertionResponseTypesCode | PlainMessage<AssertionResponseTypesCode> | undefined, b: AssertionResponseTypesCode | PlainMessage<AssertionResponseTypesCode> | undefined): boolean {
    return proto3.util.equals(AssertionResponseTypesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AssertionResponseTypesCode.Value
 */
export enum AssertionResponseTypesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OKAY = 1;
   */
  OKAY = 1,

  /**
   * @generated from enum value: CREATED = 2;
   */
  CREATED = 2,

  /**
   * @generated from enum value: NO_CONTENT = 3;
   */
  NO_CONTENT = 3,

  /**
   * @generated from enum value: NOT_MODIFIED = 4;
   */
  NOT_MODIFIED = 4,

  /**
   * @generated from enum value: BAD = 5;
   */
  BAD = 5,

  /**
   * @generated from enum value: FORBIDDEN = 6;
   */
  FORBIDDEN = 6,

  /**
   * @generated from enum value: NOT_FOUND = 7;
   */
  NOT_FOUND = 7,

  /**
   * @generated from enum value: METHOD_NOT_ALLOWED = 8;
   */
  METHOD_NOT_ALLOWED = 8,

  /**
   * @generated from enum value: CONFLICT = 9;
   */
  CONFLICT = 9,

  /**
   * @generated from enum value: GONE = 10;
   */
  GONE = 10,

  /**
   * @generated from enum value: PRECONDITION_FAILED = 11;
   */
  PRECONDITION_FAILED = 11,

  /**
   * @generated from enum value: UNPROCESSABLE = 12;
   */
  UNPROCESSABLE = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(AssertionResponseTypesCode_Value)
proto3.util.setEnumType(AssertionResponseTypesCode_Value, "google.fhir.r4.core.AssertionResponseTypesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OKAY" },
  { no: 2, name: "CREATED" },
  { no: 3, name: "NO_CONTENT" },
  { no: 4, name: "NOT_MODIFIED" },
  { no: 5, name: "BAD" },
  { no: 6, name: "FORBIDDEN" },
  { no: 7, name: "NOT_FOUND" },
  { no: 8, name: "METHOD_NOT_ALLOWED" },
  { no: 9, name: "CONFLICT" },
  { no: 10, name: "GONE" },
  { no: 11, name: "PRECONDITION_FAILED" },
  { no: 12, name: "UNPROCESSABLE" },
]);

/**
 * Indicator for type of action performed during the event that generated the
 * event. See http://hl7.org/fhir/audit-event-action
 *
 * @generated from message google.fhir.r4.core.AuditEventActionCode
 */
export class AuditEventActionCode extends Message<AuditEventActionCode> {
  constructor(data?: PartialMessage<AuditEventActionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventActionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventActionCode {
    return new AuditEventActionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventActionCode {
    return new AuditEventActionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventActionCode {
    return new AuditEventActionCode().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventActionCode | PlainMessage<AuditEventActionCode> | undefined, b: AuditEventActionCode | PlainMessage<AuditEventActionCode> | undefined): boolean {
    return proto3.util.equals(AuditEventActionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AuditEventActionCode.Value
 */
export enum AuditEventActionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: C = 1;
   */
  C = 1,

  /**
   * @generated from enum value: R = 2;
   */
  R = 2,

  /**
   * @generated from enum value: U = 3;
   */
  U = 3,

  /**
   * @generated from enum value: D = 4;
   */
  D = 4,

  /**
   * @generated from enum value: E = 5;
   */
  E = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(AuditEventActionCode_Value)
proto3.util.setEnumType(AuditEventActionCode_Value, "google.fhir.r4.core.AuditEventActionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "C" },
  { no: 2, name: "R" },
  { no: 3, name: "U" },
  { no: 4, name: "D" },
  { no: 5, name: "E" },
]);

/**
 * The type of network access point of this agent in the audit event.
 * See http://hl7.org/fhir/network-type
 *
 * @generated from message google.fhir.r4.core.AuditEventAgentNetworkTypeCode
 */
export class AuditEventAgentNetworkTypeCode extends Message<AuditEventAgentNetworkTypeCode> {
  constructor(data?: PartialMessage<AuditEventAgentNetworkTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventAgentNetworkTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventAgentNetworkTypeCode {
    return new AuditEventAgentNetworkTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventAgentNetworkTypeCode {
    return new AuditEventAgentNetworkTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventAgentNetworkTypeCode {
    return new AuditEventAgentNetworkTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventAgentNetworkTypeCode | PlainMessage<AuditEventAgentNetworkTypeCode> | undefined, b: AuditEventAgentNetworkTypeCode | PlainMessage<AuditEventAgentNetworkTypeCode> | undefined): boolean {
    return proto3.util.equals(AuditEventAgentNetworkTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AuditEventAgentNetworkTypeCode.Value
 */
export enum AuditEventAgentNetworkTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MACHINE_NAME = 1;
   */
  MACHINE_NAME = 1,

  /**
   * @generated from enum value: IP_ADDRESS = 2;
   */
  IP_ADDRESS = 2,

  /**
   * @generated from enum value: TELEPHONE_NUMBER = 3;
   */
  TELEPHONE_NUMBER = 3,

  /**
   * @generated from enum value: EMAIL_ADDRESS = 4;
   */
  EMAIL_ADDRESS = 4,

  /**
   * @generated from enum value: URI = 5;
   */
  URI = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(AuditEventAgentNetworkTypeCode_Value)
proto3.util.setEnumType(AuditEventAgentNetworkTypeCode_Value, "google.fhir.r4.core.AuditEventAgentNetworkTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MACHINE_NAME" },
  { no: 2, name: "IP_ADDRESS" },
  { no: 3, name: "TELEPHONE_NUMBER" },
  { no: 4, name: "EMAIL_ADDRESS" },
  { no: 5, name: "URI" },
]);

/**
 * Indicates whether the event succeeded or failed.
 * See http://hl7.org/fhir/audit-event-outcome
 *
 * @generated from message google.fhir.r4.core.AuditEventOutcomeCode
 */
export class AuditEventOutcomeCode extends Message<AuditEventOutcomeCode> {
  constructor(data?: PartialMessage<AuditEventOutcomeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.AuditEventOutcomeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuditEventOutcomeCode {
    return new AuditEventOutcomeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuditEventOutcomeCode {
    return new AuditEventOutcomeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuditEventOutcomeCode {
    return new AuditEventOutcomeCode().fromJsonString(jsonString, options);
  }

  static equals(a: AuditEventOutcomeCode | PlainMessage<AuditEventOutcomeCode> | undefined, b: AuditEventOutcomeCode | PlainMessage<AuditEventOutcomeCode> | undefined): boolean {
    return proto3.util.equals(AuditEventOutcomeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.AuditEventOutcomeCode.Value
 */
export enum AuditEventOutcomeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: MINOR_FAILURE = 2;
   */
  MINOR_FAILURE = 2,

  /**
   * @generated from enum value: SERIOUS_FAILURE = 3;
   */
  SERIOUS_FAILURE = 3,

  /**
   * @generated from enum value: MAJOR_FAILURE = 4;
   */
  MAJOR_FAILURE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(AuditEventOutcomeCode_Value)
proto3.util.setEnumType(AuditEventOutcomeCode_Value, "google.fhir.r4.core.AuditEventOutcomeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SUCCESS" },
  { no: 2, name: "MINOR_FAILURE" },
  { no: 3, name: "SERIOUS_FAILURE" },
  { no: 4, name: "MAJOR_FAILURE" },
]);

/**
 * Whether the cost applies to in-network or out-of-network providers.
 * See http://terminology.hl7.org/CodeSystem/applicability
 *
 * @generated from message google.fhir.r4.core.BenefitCostApplicabilityCode
 */
export class BenefitCostApplicabilityCode extends Message<BenefitCostApplicabilityCode> {
  constructor(data?: PartialMessage<BenefitCostApplicabilityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BenefitCostApplicabilityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BenefitCostApplicabilityCode {
    return new BenefitCostApplicabilityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BenefitCostApplicabilityCode {
    return new BenefitCostApplicabilityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BenefitCostApplicabilityCode {
    return new BenefitCostApplicabilityCode().fromJsonString(jsonString, options);
  }

  static equals(a: BenefitCostApplicabilityCode | PlainMessage<BenefitCostApplicabilityCode> | undefined, b: BenefitCostApplicabilityCode | PlainMessage<BenefitCostApplicabilityCode> | undefined): boolean {
    return proto3.util.equals(BenefitCostApplicabilityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.BenefitCostApplicabilityCode.Value
 */
export enum BenefitCostApplicabilityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_NETWORK = 1;
   */
  IN_NETWORK = 1,

  /**
   * @generated from enum value: OUT_OF_NETWORK = 2;
   */
  OUT_OF_NETWORK = 2,

  /**
   * @generated from enum value: OTHER = 3;
   */
  OTHER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(BenefitCostApplicabilityCode_Value)
proto3.util.setEnumType(BenefitCostApplicabilityCode_Value, "google.fhir.r4.core.BenefitCostApplicabilityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_NETWORK" },
  { no: 2, name: "OUT_OF_NETWORK" },
  { no: 3, name: "OTHER" },
]);

/**
 * Indication of the degree of conformance expectations associated with a
 * binding. See http://hl7.org/fhir/binding-strength
 *
 * @generated from message google.fhir.r4.core.BindingStrengthCode
 */
export class BindingStrengthCode extends Message<BindingStrengthCode> {
  constructor(data?: PartialMessage<BindingStrengthCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BindingStrengthCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BindingStrengthCode {
    return new BindingStrengthCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BindingStrengthCode {
    return new BindingStrengthCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BindingStrengthCode {
    return new BindingStrengthCode().fromJsonString(jsonString, options);
  }

  static equals(a: BindingStrengthCode | PlainMessage<BindingStrengthCode> | undefined, b: BindingStrengthCode | PlainMessage<BindingStrengthCode> | undefined): boolean {
    return proto3.util.equals(BindingStrengthCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.BindingStrengthCode.Value
 */
export enum BindingStrengthCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUIRED = 1;
   */
  REQUIRED = 1,

  /**
   * @generated from enum value: EXTENSIBLE = 2;
   */
  EXTENSIBLE = 2,

  /**
   * @generated from enum value: PREFERRED = 3;
   */
  PREFERRED = 3,

  /**
   * @generated from enum value: EXAMPLE = 4;
   */
  EXAMPLE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(BindingStrengthCode_Value)
proto3.util.setEnumType(BindingStrengthCode_Value, "google.fhir.r4.core.BindingStrengthCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUIRED" },
  { no: 2, name: "EXTENSIBLE" },
  { no: 3, name: "PREFERRED" },
  { no: 4, name: "EXAMPLE" },
]);

/**
 * Biologically Derived Product Category.
 * See http://hl7.org/fhir/product-category
 *
 * @generated from message google.fhir.r4.core.BiologicallyDerivedProductCategoryCode
 */
export class BiologicallyDerivedProductCategoryCode extends Message<BiologicallyDerivedProductCategoryCode> {
  constructor(data?: PartialMessage<BiologicallyDerivedProductCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BiologicallyDerivedProductCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BiologicallyDerivedProductCategoryCode {
    return new BiologicallyDerivedProductCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BiologicallyDerivedProductCategoryCode {
    return new BiologicallyDerivedProductCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BiologicallyDerivedProductCategoryCode {
    return new BiologicallyDerivedProductCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: BiologicallyDerivedProductCategoryCode | PlainMessage<BiologicallyDerivedProductCategoryCode> | undefined, b: BiologicallyDerivedProductCategoryCode | PlainMessage<BiologicallyDerivedProductCategoryCode> | undefined): boolean {
    return proto3.util.equals(BiologicallyDerivedProductCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.BiologicallyDerivedProductCategoryCode.Value
 */
export enum BiologicallyDerivedProductCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ORGAN = 1;
   */
  ORGAN = 1,

  /**
   * @generated from enum value: TISSUE = 2;
   */
  TISSUE = 2,

  /**
   * @generated from enum value: FLUID = 3;
   */
  FLUID = 3,

  /**
   * @generated from enum value: CELLS = 4;
   */
  CELLS = 4,

  /**
   * @generated from enum value: BIOLOGICAL_AGENT = 5;
   */
  BIOLOGICAL_AGENT = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(BiologicallyDerivedProductCategoryCode_Value)
proto3.util.setEnumType(BiologicallyDerivedProductCategoryCode_Value, "google.fhir.r4.core.BiologicallyDerivedProductCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ORGAN" },
  { no: 2, name: "TISSUE" },
  { no: 3, name: "FLUID" },
  { no: 4, name: "CELLS" },
  { no: 5, name: "BIOLOGICAL_AGENT" },
]);

/**
 * Biologically Derived Product Status.
 * See http://hl7.org/fhir/product-status
 *
 * @generated from message google.fhir.r4.core.BiologicallyDerivedProductStatusCode
 */
export class BiologicallyDerivedProductStatusCode extends Message<BiologicallyDerivedProductStatusCode> {
  constructor(data?: PartialMessage<BiologicallyDerivedProductStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BiologicallyDerivedProductStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BiologicallyDerivedProductStatusCode {
    return new BiologicallyDerivedProductStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BiologicallyDerivedProductStatusCode {
    return new BiologicallyDerivedProductStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BiologicallyDerivedProductStatusCode {
    return new BiologicallyDerivedProductStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: BiologicallyDerivedProductStatusCode | PlainMessage<BiologicallyDerivedProductStatusCode> | undefined, b: BiologicallyDerivedProductStatusCode | PlainMessage<BiologicallyDerivedProductStatusCode> | undefined): boolean {
    return proto3.util.equals(BiologicallyDerivedProductStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.BiologicallyDerivedProductStatusCode.Value
 */
export enum BiologicallyDerivedProductStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AVAILABLE = 1;
   */
  AVAILABLE = 1,

  /**
   * @generated from enum value: UNAVAILABLE = 2;
   */
  UNAVAILABLE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(BiologicallyDerivedProductStatusCode_Value)
proto3.util.setEnumType(BiologicallyDerivedProductStatusCode_Value, "google.fhir.r4.core.BiologicallyDerivedProductStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AVAILABLE" },
  { no: 2, name: "UNAVAILABLE" },
]);

/**
 * BiologicallyDerived Product Storage Scale.
 * See http://hl7.org/fhir/product-storage-scale
 *
 * @generated from message google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode
 */
export class BiologicallyDerivedProductStorageScaleCode extends Message<BiologicallyDerivedProductStorageScaleCode> {
  constructor(data?: PartialMessage<BiologicallyDerivedProductStorageScaleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BiologicallyDerivedProductStorageScaleCode {
    return new BiologicallyDerivedProductStorageScaleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BiologicallyDerivedProductStorageScaleCode {
    return new BiologicallyDerivedProductStorageScaleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BiologicallyDerivedProductStorageScaleCode {
    return new BiologicallyDerivedProductStorageScaleCode().fromJsonString(jsonString, options);
  }

  static equals(a: BiologicallyDerivedProductStorageScaleCode | PlainMessage<BiologicallyDerivedProductStorageScaleCode> | undefined, b: BiologicallyDerivedProductStorageScaleCode | PlainMessage<BiologicallyDerivedProductStorageScaleCode> | undefined): boolean {
    return proto3.util.equals(BiologicallyDerivedProductStorageScaleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode.Value
 */
export enum BiologicallyDerivedProductStorageScaleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FARENHEIT = 1;
   */
  FARENHEIT = 1,

  /**
   * @generated from enum value: CELSIUS = 2;
   */
  CELSIUS = 2,

  /**
   * @generated from enum value: KELVIN = 3;
   */
  KELVIN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(BiologicallyDerivedProductStorageScaleCode_Value)
proto3.util.setEnumType(BiologicallyDerivedProductStorageScaleCode_Value, "google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FARENHEIT" },
  { no: 2, name: "CELSIUS" },
  { no: 3, name: "KELVIN" },
]);

/**
 * Indicates the purpose of a bundle - how it is intended to be used.
 * See http://hl7.org/fhir/bundle-type
 *
 * @generated from message google.fhir.r4.core.BundleTypeCode
 */
export class BundleTypeCode extends Message<BundleTypeCode> {
  constructor(data?: PartialMessage<BundleTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.BundleTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BundleTypeCode {
    return new BundleTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BundleTypeCode {
    return new BundleTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BundleTypeCode {
    return new BundleTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: BundleTypeCode | PlainMessage<BundleTypeCode> | undefined, b: BundleTypeCode | PlainMessage<BundleTypeCode> | undefined): boolean {
    return proto3.util.equals(BundleTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.BundleTypeCode.Value
 */
export enum BundleTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DOCUMENT = 1;
   */
  DOCUMENT = 1,

  /**
   * @generated from enum value: MESSAGE = 2;
   */
  MESSAGE = 2,

  /**
   * @generated from enum value: TRANSACTION = 3;
   */
  TRANSACTION = 3,

  /**
   * @generated from enum value: TRANSACTION_RESPONSE = 4;
   */
  TRANSACTION_RESPONSE = 4,

  /**
   * @generated from enum value: BATCH = 5;
   */
  BATCH = 5,

  /**
   * @generated from enum value: BATCH_RESPONSE = 6;
   */
  BATCH_RESPONSE = 6,

  /**
   * @generated from enum value: HISTORY = 7;
   */
  HISTORY = 7,

  /**
   * @generated from enum value: SEARCHSET = 8;
   */
  SEARCHSET = 8,

  /**
   * @generated from enum value: COLLECTION = 9;
   */
  COLLECTION = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(BundleTypeCode_Value)
proto3.util.setEnumType(BundleTypeCode_Value, "google.fhir.r4.core.BundleTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DOCUMENT" },
  { no: 2, name: "MESSAGE" },
  { no: 3, name: "TRANSACTION" },
  { no: 4, name: "TRANSACTION_RESPONSE" },
  { no: 5, name: "BATCH" },
  { no: 6, name: "BATCH_RESPONSE" },
  { no: 7, name: "HISTORY" },
  { no: 8, name: "SEARCHSET" },
  { no: 9, name: "COLLECTION" },
]);

/**
 * The master set of status codes used throughout FHIR. All status codes are
 * mapped to one of these codes. See http://hl7.org/fhir/resource-status
 *
 * @generated from message google.fhir.r4.core.CanonicalStatusCodesForFHIRResourcesCode
 */
export class CanonicalStatusCodesForFHIRResourcesCode extends Message<CanonicalStatusCodesForFHIRResourcesCode> {
  constructor(data?: PartialMessage<CanonicalStatusCodesForFHIRResourcesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CanonicalStatusCodesForFHIRResourcesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CanonicalStatusCodesForFHIRResourcesCode {
    return new CanonicalStatusCodesForFHIRResourcesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CanonicalStatusCodesForFHIRResourcesCode {
    return new CanonicalStatusCodesForFHIRResourcesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CanonicalStatusCodesForFHIRResourcesCode {
    return new CanonicalStatusCodesForFHIRResourcesCode().fromJsonString(jsonString, options);
  }

  static equals(a: CanonicalStatusCodesForFHIRResourcesCode | PlainMessage<CanonicalStatusCodesForFHIRResourcesCode> | undefined, b: CanonicalStatusCodesForFHIRResourcesCode | PlainMessage<CanonicalStatusCodesForFHIRResourcesCode> | undefined): boolean {
    return proto3.util.equals(CanonicalStatusCodesForFHIRResourcesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CanonicalStatusCodesForFHIRResourcesCode.Value
 */
export enum CanonicalStatusCodesForFHIRResourcesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ERROR = 1;
   */
  ERROR = 1,

  /**
   * @generated from enum value: PROPOSED = 2;
   */
  PROPOSED = 2,

  /**
   * @generated from enum value: PLANNED = 3;
   */
  PLANNED = 3,

  /**
   * @generated from enum value: DRAFT = 4;
   */
  DRAFT = 4,

  /**
   * @generated from enum value: REQUESTED = 5;
   */
  REQUESTED = 5,

  /**
   * @generated from enum value: RECEIVED = 6;
   */
  RECEIVED = 6,

  /**
   * @generated from enum value: DECLINED = 7;
   */
  DECLINED = 7,

  /**
   * @generated from enum value: ACCEPTED = 8;
   */
  ACCEPTED = 8,

  /**
   * @generated from enum value: ARRIVED = 9;
   */
  ARRIVED = 9,

  /**
   * @generated from enum value: ACTIVE = 10;
   */
  ACTIVE = 10,

  /**
   * @generated from enum value: SUSPENDED = 11;
   */
  SUSPENDED = 11,

  /**
   * @generated from enum value: FAILED = 12;
   */
  FAILED = 12,

  /**
   * @generated from enum value: REPLACED = 13;
   */
  REPLACED = 13,

  /**
   * @generated from enum value: COMPLETE = 14;
   */
  COMPLETE = 14,

  /**
   * @generated from enum value: INACTIVE = 15;
   */
  INACTIVE = 15,

  /**
   * @generated from enum value: ABANDONED = 16;
   */
  ABANDONED = 16,

  /**
   * @generated from enum value: UNKNOWN = 17;
   */
  UNKNOWN = 17,

  /**
   * @generated from enum value: UNCONFIRMED = 18;
   */
  UNCONFIRMED = 18,

  /**
   * @generated from enum value: CONFIRMED = 19;
   */
  CONFIRMED = 19,

  /**
   * @generated from enum value: RESOLVED = 20;
   */
  RESOLVED = 20,

  /**
   * @generated from enum value: REFUTED = 21;
   */
  REFUTED = 21,

  /**
   * @generated from enum value: DIFFERENTIAL = 22;
   */
  DIFFERENTIAL = 22,

  /**
   * @generated from enum value: PARTIAL = 23;
   */
  PARTIAL = 23,

  /**
   * @generated from enum value: BUSY_UNAVAILABLE = 24;
   */
  BUSY_UNAVAILABLE = 24,

  /**
   * @generated from enum value: FREE = 25;
   */
  FREE = 25,

  /**
   * @generated from enum value: ON_TARGET = 26;
   */
  ON_TARGET = 26,

  /**
   * @generated from enum value: AHEAD_OF_TARGET = 27;
   */
  AHEAD_OF_TARGET = 27,

  /**
   * @generated from enum value: BEHIND_TARGET = 28;
   */
  BEHIND_TARGET = 28,

  /**
   * @generated from enum value: NOT_READY = 29;
   */
  NOT_READY = 29,

  /**
   * @generated from enum value: TRANSDUC_DISCON = 30;
   */
  TRANSDUC_DISCON = 30,

  /**
   * @generated from enum value: HW_DISCON = 31;
   */
  HW_DISCON = 31,
}
// Retrieve enum metadata with: proto3.getEnumType(CanonicalStatusCodesForFHIRResourcesCode_Value)
proto3.util.setEnumType(CanonicalStatusCodesForFHIRResourcesCode_Value, "google.fhir.r4.core.CanonicalStatusCodesForFHIRResourcesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ERROR" },
  { no: 2, name: "PROPOSED" },
  { no: 3, name: "PLANNED" },
  { no: 4, name: "DRAFT" },
  { no: 5, name: "REQUESTED" },
  { no: 6, name: "RECEIVED" },
  { no: 7, name: "DECLINED" },
  { no: 8, name: "ACCEPTED" },
  { no: 9, name: "ARRIVED" },
  { no: 10, name: "ACTIVE" },
  { no: 11, name: "SUSPENDED" },
  { no: 12, name: "FAILED" },
  { no: 13, name: "REPLACED" },
  { no: 14, name: "COMPLETE" },
  { no: 15, name: "INACTIVE" },
  { no: 16, name: "ABANDONED" },
  { no: 17, name: "UNKNOWN" },
  { no: 18, name: "UNCONFIRMED" },
  { no: 19, name: "CONFIRMED" },
  { no: 20, name: "RESOLVED" },
  { no: 21, name: "REFUTED" },
  { no: 22, name: "DIFFERENTIAL" },
  { no: 23, name: "PARTIAL" },
  { no: 24, name: "BUSY_UNAVAILABLE" },
  { no: 25, name: "FREE" },
  { no: 26, name: "ON_TARGET" },
  { no: 27, name: "AHEAD_OF_TARGET" },
  { no: 28, name: "BEHIND_TARGET" },
  { no: 29, name: "NOT_READY" },
  { no: 30, name: "TRANSDUC_DISCON" },
  { no: 31, name: "HW_DISCON" },
]);

/**
 * How a capability statement is intended to be used.
 * See http://hl7.org/fhir/capability-statement-kind
 *
 * @generated from message google.fhir.r4.core.CapabilityStatementKindCode
 */
export class CapabilityStatementKindCode extends Message<CapabilityStatementKindCode> {
  constructor(data?: PartialMessage<CapabilityStatementKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CapabilityStatementKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CapabilityStatementKindCode {
    return new CapabilityStatementKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CapabilityStatementKindCode {
    return new CapabilityStatementKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CapabilityStatementKindCode {
    return new CapabilityStatementKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: CapabilityStatementKindCode | PlainMessage<CapabilityStatementKindCode> | undefined, b: CapabilityStatementKindCode | PlainMessage<CapabilityStatementKindCode> | undefined): boolean {
    return proto3.util.equals(CapabilityStatementKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CapabilityStatementKindCode.Value
 */
export enum CapabilityStatementKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: CAPABILITY = 2;
   */
  CAPABILITY = 2,

  /**
   * @generated from enum value: REQUIREMENTS = 3;
   */
  REQUIREMENTS = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(CapabilityStatementKindCode_Value)
proto3.util.setEnumType(CapabilityStatementKindCode_Value, "google.fhir.r4.core.CapabilityStatementKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTANCE" },
  { no: 2, name: "CAPABILITY" },
  { no: 3, name: "REQUIREMENTS" },
]);

/**
 * Codes that reflect the current state of a care plan activity within its
 * overall life cycle. See http://hl7.org/fhir/care-plan-activity-status
 *
 * @generated from message google.fhir.r4.core.CarePlanActivityStatusCode
 */
export class CarePlanActivityStatusCode extends Message<CarePlanActivityStatusCode> {
  constructor(data?: PartialMessage<CarePlanActivityStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CarePlanActivityStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CarePlanActivityStatusCode {
    return new CarePlanActivityStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CarePlanActivityStatusCode {
    return new CarePlanActivityStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CarePlanActivityStatusCode {
    return new CarePlanActivityStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CarePlanActivityStatusCode | PlainMessage<CarePlanActivityStatusCode> | undefined, b: CarePlanActivityStatusCode | PlainMessage<CarePlanActivityStatusCode> | undefined): boolean {
    return proto3.util.equals(CarePlanActivityStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CarePlanActivityStatusCode.Value
 */
export enum CarePlanActivityStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_STARTED = 1;
   */
  NOT_STARTED = 1,

  /**
   * @generated from enum value: SCHEDULED = 2;
   */
  SCHEDULED = 2,

  /**
   * @generated from enum value: IN_PROGRESS = 3;
   */
  IN_PROGRESS = 3,

  /**
   * @generated from enum value: ON_HOLD = 4;
   */
  ON_HOLD = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: STOPPED = 7;
   */
  STOPPED = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 9;
   */
  ENTERED_IN_ERROR = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(CarePlanActivityStatusCode_Value)
proto3.util.setEnumType(CarePlanActivityStatusCode_Value, "google.fhir.r4.core.CarePlanActivityStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_STARTED" },
  { no: 2, name: "SCHEDULED" },
  { no: 3, name: "IN_PROGRESS" },
  { no: 4, name: "ON_HOLD" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "STOPPED" },
  { no: 8, name: "UNKNOWN" },
  { no: 9, name: "ENTERED_IN_ERROR" },
]);

/**
 * Indicates the status of the care team.
 * See http://hl7.org/fhir/care-team-status
 *
 * @generated from message google.fhir.r4.core.CareTeamStatusCode
 */
export class CareTeamStatusCode extends Message<CareTeamStatusCode> {
  constructor(data?: PartialMessage<CareTeamStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CareTeamStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CareTeamStatusCode {
    return new CareTeamStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CareTeamStatusCode {
    return new CareTeamStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CareTeamStatusCode {
    return new CareTeamStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CareTeamStatusCode | PlainMessage<CareTeamStatusCode> | undefined, b: CareTeamStatusCode | PlainMessage<CareTeamStatusCode> | undefined): boolean {
    return proto3.util.equals(CareTeamStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CareTeamStatusCode.Value
 */
export enum CareTeamStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: INACTIVE = 4;
   */
  INACTIVE = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(CareTeamStatusCode_Value)
proto3.util.setEnumType(CareTeamStatusCode_Value, "google.fhir.r4.core.CareTeamStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "INACTIVE" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * The type of relations between entries.
 * See http://hl7.org/fhir/relation-type
 *
 * @generated from message google.fhir.r4.core.CatalogEntryRelationTypeCode
 */
export class CatalogEntryRelationTypeCode extends Message<CatalogEntryRelationTypeCode> {
  constructor(data?: PartialMessage<CatalogEntryRelationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CatalogEntryRelationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CatalogEntryRelationTypeCode {
    return new CatalogEntryRelationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CatalogEntryRelationTypeCode {
    return new CatalogEntryRelationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CatalogEntryRelationTypeCode {
    return new CatalogEntryRelationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CatalogEntryRelationTypeCode | PlainMessage<CatalogEntryRelationTypeCode> | undefined, b: CatalogEntryRelationTypeCode | PlainMessage<CatalogEntryRelationTypeCode> | undefined): boolean {
    return proto3.util.equals(CatalogEntryRelationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CatalogEntryRelationTypeCode.Value
 */
export enum CatalogEntryRelationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TRIGGERS = 1;
   */
  TRIGGERS = 1,

  /**
   * @generated from enum value: IS_REPLACED_BY = 2;
   */
  IS_REPLACED_BY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CatalogEntryRelationTypeCode_Value)
proto3.util.setEnumType(CatalogEntryRelationTypeCode_Value, "google.fhir.r4.core.CatalogEntryRelationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TRIGGERS" },
  { no: 2, name: "IS_REPLACED_BY" },
]);

/**
 * Codes identifying the lifecycle stage of a ChargeItem.
 * See http://hl7.org/fhir/chargeitem-status
 *
 * @generated from message google.fhir.r4.core.ChargeItemStatusCode
 */
export class ChargeItemStatusCode extends Message<ChargeItemStatusCode> {
  constructor(data?: PartialMessage<ChargeItemStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChargeItemStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChargeItemStatusCode {
    return new ChargeItemStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChargeItemStatusCode {
    return new ChargeItemStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChargeItemStatusCode {
    return new ChargeItemStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ChargeItemStatusCode | PlainMessage<ChargeItemStatusCode> | undefined, b: ChargeItemStatusCode | PlainMessage<ChargeItemStatusCode> | undefined): boolean {
    return proto3.util.equals(ChargeItemStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ChargeItemStatusCode.Value
 */
export enum ChargeItemStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: BILLABLE = 2;
   */
  BILLABLE = 2,

  /**
   * @generated from enum value: NOT_BILLABLE = 3;
   */
  NOT_BILLABLE = 3,

  /**
   * @generated from enum value: ABORTED = 4;
   */
  ABORTED = 4,

  /**
   * @generated from enum value: BILLED = 5;
   */
  BILLED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(ChargeItemStatusCode_Value)
proto3.util.setEnumType(ChargeItemStatusCode_Value, "google.fhir.r4.core.ChargeItemStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "BILLABLE" },
  { no: 3, name: "NOT_BILLABLE" },
  { no: 4, name: "ABORTED" },
  { no: 5, name: "BILLED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Direction in which lists of possible answers should be displayed.
 * See http://terminology.hl7.org/CodeSystem/choice-list-orientation
 *
 * @generated from message google.fhir.r4.core.ChoiceListOrientationCode
 */
export class ChoiceListOrientationCode extends Message<ChoiceListOrientationCode> {
  constructor(data?: PartialMessage<ChoiceListOrientationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ChoiceListOrientationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChoiceListOrientationCode {
    return new ChoiceListOrientationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChoiceListOrientationCode {
    return new ChoiceListOrientationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChoiceListOrientationCode {
    return new ChoiceListOrientationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ChoiceListOrientationCode | PlainMessage<ChoiceListOrientationCode> | undefined, b: ChoiceListOrientationCode | PlainMessage<ChoiceListOrientationCode> | undefined): boolean {
    return proto3.util.equals(ChoiceListOrientationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ChoiceListOrientationCode.Value
 */
export enum ChoiceListOrientationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HORIZONTAL = 1;
   */
  HORIZONTAL = 1,

  /**
   * @generated from enum value: VERTICAL = 2;
   */
  VERTICAL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ChoiceListOrientationCode_Value)
proto3.util.setEnumType(ChoiceListOrientationCode_Value, "google.fhir.r4.core.ChoiceListOrientationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HORIZONTAL" },
  { no: 2, name: "VERTICAL" },
]);

/**
 * This value set includes Claim Processing Outcome codes.
 * See http://hl7.org/fhir/remittance-outcome
 *
 * @generated from message google.fhir.r4.core.ClaimProcessingCode
 */
export class ClaimProcessingCode extends Message<ClaimProcessingCode> {
  constructor(data?: PartialMessage<ClaimProcessingCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ClaimProcessingCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClaimProcessingCode {
    return new ClaimProcessingCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClaimProcessingCode {
    return new ClaimProcessingCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClaimProcessingCode {
    return new ClaimProcessingCode().fromJsonString(jsonString, options);
  }

  static equals(a: ClaimProcessingCode | PlainMessage<ClaimProcessingCode> | undefined, b: ClaimProcessingCode | PlainMessage<ClaimProcessingCode> | undefined): boolean {
    return proto3.util.equals(ClaimProcessingCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ClaimProcessingCode.Value
 */
export enum ClaimProcessingCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: QUEUED = 1;
   */
  QUEUED = 1,

  /**
   * @generated from enum value: COMPLETE = 2;
   */
  COMPLETE = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: PARTIAL = 4;
   */
  PARTIAL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ClaimProcessingCode_Value)
proto3.util.setEnumType(ClaimProcessingCode_Value, "google.fhir.r4.core.ClaimProcessingCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "QUEUED" },
  { no: 2, name: "COMPLETE" },
  { no: 3, name: "ERROR" },
  { no: 4, name: "PARTIAL" },
]);

/**
 * The degree to which the server supports the code search parameter on
 * ValueSet, if it is supported. See http://hl7.org/fhir/code-search-support
 *
 * @generated from message google.fhir.r4.core.CodeSearchSupportCode
 */
export class CodeSearchSupportCode extends Message<CodeSearchSupportCode> {
  constructor(data?: PartialMessage<CodeSearchSupportCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSearchSupportCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSearchSupportCode {
    return new CodeSearchSupportCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSearchSupportCode {
    return new CodeSearchSupportCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSearchSupportCode {
    return new CodeSearchSupportCode().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSearchSupportCode | PlainMessage<CodeSearchSupportCode> | undefined, b: CodeSearchSupportCode | PlainMessage<CodeSearchSupportCode> | undefined): boolean {
    return proto3.util.equals(CodeSearchSupportCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CodeSearchSupportCode.Value
 */
export enum CodeSearchSupportCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EXPLICIT = 1;
   */
  EXPLICIT = 1,

  /**
   * @generated from enum value: ALL = 2;
   */
  ALL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CodeSearchSupportCode_Value)
proto3.util.setEnumType(CodeSearchSupportCode_Value, "google.fhir.r4.core.CodeSearchSupportCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EXPLICIT" },
  { no: 2, name: "ALL" },
]);

/**
 * The extent of the content of the code system (the concepts and codes it
 * defines) are represented in a code system resource. See
 * http://hl7.org/fhir/codesystem-content-mode
 *
 * @generated from message google.fhir.r4.core.CodeSystemContentModeCode
 */
export class CodeSystemContentModeCode extends Message<CodeSystemContentModeCode> {
  constructor(data?: PartialMessage<CodeSystemContentModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemContentModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemContentModeCode {
    return new CodeSystemContentModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemContentModeCode {
    return new CodeSystemContentModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemContentModeCode {
    return new CodeSystemContentModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemContentModeCode | PlainMessage<CodeSystemContentModeCode> | undefined, b: CodeSystemContentModeCode | PlainMessage<CodeSystemContentModeCode> | undefined): boolean {
    return proto3.util.equals(CodeSystemContentModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CodeSystemContentModeCode.Value
 */
export enum CodeSystemContentModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_PRESENT = 1;
   */
  NOT_PRESENT = 1,

  /**
   * @generated from enum value: EXAMPLE = 2;
   */
  EXAMPLE = 2,

  /**
   * @generated from enum value: FRAGMENT = 3;
   */
  FRAGMENT = 3,

  /**
   * @generated from enum value: COMPLETE = 4;
   */
  COMPLETE = 4,

  /**
   * @generated from enum value: SUPPLEMENT = 5;
   */
  SUPPLEMENT = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(CodeSystemContentModeCode_Value)
proto3.util.setEnumType(CodeSystemContentModeCode_Value, "google.fhir.r4.core.CodeSystemContentModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_PRESENT" },
  { no: 2, name: "EXAMPLE" },
  { no: 3, name: "FRAGMENT" },
  { no: 4, name: "COMPLETE" },
  { no: 5, name: "SUPPLEMENT" },
]);

/**
 * The meaning of the hierarchy of concepts in a code system.
 * See http://hl7.org/fhir/codesystem-hierarchy-meaning
 *
 * @generated from message google.fhir.r4.core.CodeSystemHierarchyMeaningCode
 */
export class CodeSystemHierarchyMeaningCode extends Message<CodeSystemHierarchyMeaningCode> {
  constructor(data?: PartialMessage<CodeSystemHierarchyMeaningCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CodeSystemHierarchyMeaningCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CodeSystemHierarchyMeaningCode {
    return new CodeSystemHierarchyMeaningCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CodeSystemHierarchyMeaningCode {
    return new CodeSystemHierarchyMeaningCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CodeSystemHierarchyMeaningCode {
    return new CodeSystemHierarchyMeaningCode().fromJsonString(jsonString, options);
  }

  static equals(a: CodeSystemHierarchyMeaningCode | PlainMessage<CodeSystemHierarchyMeaningCode> | undefined, b: CodeSystemHierarchyMeaningCode | PlainMessage<CodeSystemHierarchyMeaningCode> | undefined): boolean {
    return proto3.util.equals(CodeSystemHierarchyMeaningCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CodeSystemHierarchyMeaningCode.Value
 */
export enum CodeSystemHierarchyMeaningCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GROUPED_BY = 1;
   */
  GROUPED_BY = 1,

  /**
   * @generated from enum value: IS_A = 2;
   */
  IS_A = 2,

  /**
   * @generated from enum value: PART_OF = 3;
   */
  PART_OF = 3,

  /**
   * @generated from enum value: CLASSIFIED_WITH = 4;
   */
  CLASSIFIED_WITH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CodeSystemHierarchyMeaningCode_Value)
proto3.util.setEnumType(CodeSystemHierarchyMeaningCode_Value, "google.fhir.r4.core.CodeSystemHierarchyMeaningCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GROUPED_BY" },
  { no: 2, name: "IS_A" },
  { no: 3, name: "PART_OF" },
  { no: 4, name: "CLASSIFIED_WITH" },
]);

/**
 * Which type a compartment definition describes.
 * See http://hl7.org/fhir/compartment-type
 *
 * @generated from message google.fhir.r4.core.CompartmentTypeCode
 */
export class CompartmentTypeCode extends Message<CompartmentTypeCode> {
  constructor(data?: PartialMessage<CompartmentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompartmentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompartmentTypeCode {
    return new CompartmentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompartmentTypeCode {
    return new CompartmentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompartmentTypeCode {
    return new CompartmentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompartmentTypeCode | PlainMessage<CompartmentTypeCode> | undefined, b: CompartmentTypeCode | PlainMessage<CompartmentTypeCode> | undefined): boolean {
    return proto3.util.equals(CompartmentTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CompartmentTypeCode.Value
 */
export enum CompartmentTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PATIENT = 1;
   */
  PATIENT = 1,

  /**
   * @generated from enum value: ENCOUNTER = 2;
   */
  ENCOUNTER = 2,

  /**
   * @generated from enum value: RELATED_PERSON = 3;
   */
  RELATED_PERSON = 3,

  /**
   * @generated from enum value: PRACTITIONER = 4;
   */
  PRACTITIONER = 4,

  /**
   * @generated from enum value: DEVICE = 5;
   */
  DEVICE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(CompartmentTypeCode_Value)
proto3.util.setEnumType(CompartmentTypeCode_Value, "google.fhir.r4.core.CompartmentTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PATIENT" },
  { no: 2, name: "ENCOUNTER" },
  { no: 3, name: "RELATED_PERSON" },
  { no: 4, name: "PRACTITIONER" },
  { no: 5, name: "DEVICE" },
]);

/**
 * The way in which a person authenticated a composition.
 * See http://hl7.org/fhir/composition-attestation-mode
 *
 * @generated from message google.fhir.r4.core.CompositionAttestationModeCode
 */
export class CompositionAttestationModeCode extends Message<CompositionAttestationModeCode> {
  constructor(data?: PartialMessage<CompositionAttestationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompositionAttestationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionAttestationModeCode {
    return new CompositionAttestationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionAttestationModeCode {
    return new CompositionAttestationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionAttestationModeCode {
    return new CompositionAttestationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionAttestationModeCode | PlainMessage<CompositionAttestationModeCode> | undefined, b: CompositionAttestationModeCode | PlainMessage<CompositionAttestationModeCode> | undefined): boolean {
    return proto3.util.equals(CompositionAttestationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CompositionAttestationModeCode.Value
 */
export enum CompositionAttestationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PERSONAL = 1;
   */
  PERSONAL = 1,

  /**
   * @generated from enum value: PROFESSIONAL = 2;
   */
  PROFESSIONAL = 2,

  /**
   * @generated from enum value: LEGAL = 3;
   */
  LEGAL = 3,

  /**
   * @generated from enum value: OFFICIAL = 4;
   */
  OFFICIAL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CompositionAttestationModeCode_Value)
proto3.util.setEnumType(CompositionAttestationModeCode_Value, "google.fhir.r4.core.CompositionAttestationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PERSONAL" },
  { no: 2, name: "PROFESSIONAL" },
  { no: 3, name: "LEGAL" },
  { no: 4, name: "OFFICIAL" },
]);

/**
 * The workflow/clinical status of the composition.
 * See http://hl7.org/fhir/composition-status
 *
 * @generated from message google.fhir.r4.core.CompositionStatusCode
 */
export class CompositionStatusCode extends Message<CompositionStatusCode> {
  constructor(data?: PartialMessage<CompositionStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.CompositionStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompositionStatusCode {
    return new CompositionStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompositionStatusCode {
    return new CompositionStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompositionStatusCode {
    return new CompositionStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: CompositionStatusCode | PlainMessage<CompositionStatusCode> | undefined, b: CompositionStatusCode | PlainMessage<CompositionStatusCode> | undefined): boolean {
    return proto3.util.equals(CompositionStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.CompositionStatusCode.Value
 */
export enum CompositionStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PRELIMINARY = 1;
   */
  PRELIMINARY = 1,

  /**
   * @generated from enum value: FINAL = 2;
   */
  FINAL = 2,

  /**
   * @generated from enum value: AMENDED = 3;
   */
  AMENDED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(CompositionStatusCode_Value)
proto3.util.setEnumType(CompositionStatusCode_Value, "google.fhir.r4.core.CompositionStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PRELIMINARY" },
  { no: 2, name: "FINAL" },
  { no: 3, name: "AMENDED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * The degree of equivalence between concepts.
 * See http://hl7.org/fhir/concept-map-equivalence
 *
 * @generated from message google.fhir.r4.core.ConceptMapEquivalenceCode
 */
export class ConceptMapEquivalenceCode extends Message<ConceptMapEquivalenceCode> {
  constructor(data?: PartialMessage<ConceptMapEquivalenceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConceptMapEquivalenceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMapEquivalenceCode {
    return new ConceptMapEquivalenceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMapEquivalenceCode {
    return new ConceptMapEquivalenceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMapEquivalenceCode {
    return new ConceptMapEquivalenceCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMapEquivalenceCode | PlainMessage<ConceptMapEquivalenceCode> | undefined, b: ConceptMapEquivalenceCode | PlainMessage<ConceptMapEquivalenceCode> | undefined): boolean {
    return proto3.util.equals(ConceptMapEquivalenceCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConceptMapEquivalenceCode.Value
 */
export enum ConceptMapEquivalenceCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RELATEDTO = 1;
   */
  RELATEDTO = 1,

  /**
   * @generated from enum value: EQUIVALENT = 2;
   */
  EQUIVALENT = 2,

  /**
   * @generated from enum value: EQUAL = 3;
   */
  EQUAL = 3,

  /**
   * @generated from enum value: WIDER = 4;
   */
  WIDER = 4,

  /**
   * @generated from enum value: SUBSUMES = 5;
   */
  SUBSUMES = 5,

  /**
   * @generated from enum value: NARROWER = 6;
   */
  NARROWER = 6,

  /**
   * @generated from enum value: SPECIALIZES = 7;
   */
  SPECIALIZES = 7,

  /**
   * @generated from enum value: INEXACT = 8;
   */
  INEXACT = 8,

  /**
   * @generated from enum value: UNMATCHED = 9;
   */
  UNMATCHED = 9,

  /**
   * @generated from enum value: DISJOINT = 10;
   */
  DISJOINT = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(ConceptMapEquivalenceCode_Value)
proto3.util.setEnumType(ConceptMapEquivalenceCode_Value, "google.fhir.r4.core.ConceptMapEquivalenceCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RELATEDTO" },
  { no: 2, name: "EQUIVALENT" },
  { no: 3, name: "EQUAL" },
  { no: 4, name: "WIDER" },
  { no: 5, name: "SUBSUMES" },
  { no: 6, name: "NARROWER" },
  { no: 7, name: "SPECIALIZES" },
  { no: 8, name: "INEXACT" },
  { no: 9, name: "UNMATCHED" },
  { no: 10, name: "DISJOINT" },
]);

/**
 * Defines which action to take if there is no match in the group.
 * See http://hl7.org/fhir/conceptmap-unmapped-mode
 *
 * @generated from message google.fhir.r4.core.ConceptMapGroupUnmappedModeCode
 */
export class ConceptMapGroupUnmappedModeCode extends Message<ConceptMapGroupUnmappedModeCode> {
  constructor(data?: PartialMessage<ConceptMapGroupUnmappedModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConceptMapGroupUnmappedModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConceptMapGroupUnmappedModeCode {
    return new ConceptMapGroupUnmappedModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConceptMapGroupUnmappedModeCode {
    return new ConceptMapGroupUnmappedModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConceptMapGroupUnmappedModeCode {
    return new ConceptMapGroupUnmappedModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConceptMapGroupUnmappedModeCode | PlainMessage<ConceptMapGroupUnmappedModeCode> | undefined, b: ConceptMapGroupUnmappedModeCode | PlainMessage<ConceptMapGroupUnmappedModeCode> | undefined): boolean {
    return proto3.util.equals(ConceptMapGroupUnmappedModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConceptMapGroupUnmappedModeCode.Value
 */
export enum ConceptMapGroupUnmappedModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROVIDED = 1;
   */
  PROVIDED = 1,

  /**
   * @generated from enum value: FIXED = 2;
   */
  FIXED = 2,

  /**
   * @generated from enum value: OTHER_MAP = 3;
   */
  OTHER_MAP = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConceptMapGroupUnmappedModeCode_Value)
proto3.util.setEnumType(ConceptMapGroupUnmappedModeCode_Value, "google.fhir.r4.core.ConceptMapGroupUnmappedModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROVIDED" },
  { no: 2, name: "FIXED" },
  { no: 3, name: "OTHER_MAP" },
]);

/**
 * Preferred value set for Condition Clinical Status.
 * See http://terminology.hl7.org/CodeSystem/condition-clinical
 *
 * @generated from message google.fhir.r4.core.ConditionClinicalStatusCode
 */
export class ConditionClinicalStatusCode extends Message<ConditionClinicalStatusCode> {
  constructor(data?: PartialMessage<ConditionClinicalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionClinicalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionClinicalStatusCode {
    return new ConditionClinicalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionClinicalStatusCode {
    return new ConditionClinicalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionClinicalStatusCode {
    return new ConditionClinicalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionClinicalStatusCode | PlainMessage<ConditionClinicalStatusCode> | undefined, b: ConditionClinicalStatusCode | PlainMessage<ConditionClinicalStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionClinicalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConditionClinicalStatusCode.Value
 */
export enum ConditionClinicalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: RECURRENCE = 2;
   */
  RECURRENCE = 2,

  /**
   * @generated from enum value: RELAPSE = 3;
   */
  RELAPSE = 3,

  /**
   * @generated from enum value: INACTIVE = 4;
   */
  INACTIVE = 4,

  /**
   * @generated from enum value: REMISSION = 5;
   */
  REMISSION = 5,

  /**
   * @generated from enum value: RESOLVED = 6;
   */
  RESOLVED = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionClinicalStatusCode_Value)
proto3.util.setEnumType(ConditionClinicalStatusCode_Value, "google.fhir.r4.core.ConditionClinicalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "RECURRENCE" },
  { no: 3, name: "RELAPSE" },
  { no: 4, name: "INACTIVE" },
  { no: 5, name: "REMISSION" },
  { no: 6, name: "RESOLVED" },
]);

/**
 * The verification status to support or decline the clinical status of the
 * condition or diagnosis. See
 * http://terminology.hl7.org/CodeSystem/condition-ver-status
 *
 * @generated from message google.fhir.r4.core.ConditionVerificationStatusCode
 */
export class ConditionVerificationStatusCode extends Message<ConditionVerificationStatusCode> {
  constructor(data?: PartialMessage<ConditionVerificationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionVerificationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionVerificationStatusCode {
    return new ConditionVerificationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionVerificationStatusCode {
    return new ConditionVerificationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionVerificationStatusCode {
    return new ConditionVerificationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionVerificationStatusCode | PlainMessage<ConditionVerificationStatusCode> | undefined, b: ConditionVerificationStatusCode | PlainMessage<ConditionVerificationStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionVerificationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConditionVerificationStatusCode.Value
 */
export enum ConditionVerificationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNCONFIRMED = 1;
   */
  UNCONFIRMED = 1,

  /**
   * @generated from enum value: PROVISIONAL = 2;
   */
  PROVISIONAL = 2,

  /**
   * @generated from enum value: DIFFERENTIAL = 3;
   */
  DIFFERENTIAL = 3,

  /**
   * @generated from enum value: CONFIRMED = 4;
   */
  CONFIRMED = 4,

  /**
   * @generated from enum value: REFUTED = 5;
   */
  REFUTED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionVerificationStatusCode_Value)
proto3.util.setEnumType(ConditionVerificationStatusCode_Value, "google.fhir.r4.core.ConditionVerificationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNCONFIRMED" },
  { no: 2, name: "PROVISIONAL" },
  { no: 3, name: "DIFFERENTIAL" },
  { no: 4, name: "CONFIRMED" },
  { no: 5, name: "REFUTED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
]);

/**
 * A code that indicates how the server supports conditional delete.
 * See http://hl7.org/fhir/conditional-delete-status
 *
 * @generated from message google.fhir.r4.core.ConditionalDeleteStatusCode
 */
export class ConditionalDeleteStatusCode extends Message<ConditionalDeleteStatusCode> {
  constructor(data?: PartialMessage<ConditionalDeleteStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionalDeleteStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionalDeleteStatusCode {
    return new ConditionalDeleteStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionalDeleteStatusCode {
    return new ConditionalDeleteStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionalDeleteStatusCode {
    return new ConditionalDeleteStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionalDeleteStatusCode | PlainMessage<ConditionalDeleteStatusCode> | undefined, b: ConditionalDeleteStatusCode | PlainMessage<ConditionalDeleteStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionalDeleteStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConditionalDeleteStatusCode.Value
 */
export enum ConditionalDeleteStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_SUPPORTED = 1;
   */
  NOT_SUPPORTED = 1,

  /**
   * @generated from enum value: SINGLE = 2;
   */
  SINGLE = 2,

  /**
   * @generated from enum value: MULTIPLE = 3;
   */
  MULTIPLE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionalDeleteStatusCode_Value)
proto3.util.setEnumType(ConditionalDeleteStatusCode_Value, "google.fhir.r4.core.ConditionalDeleteStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_SUPPORTED" },
  { no: 2, name: "SINGLE" },
  { no: 3, name: "MULTIPLE" },
]);

/**
 * A code that indicates how the server supports conditional read.
 * See http://hl7.org/fhir/conditional-read-status
 *
 * @generated from message google.fhir.r4.core.ConditionalReadStatusCode
 */
export class ConditionalReadStatusCode extends Message<ConditionalReadStatusCode> {
  constructor(data?: PartialMessage<ConditionalReadStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConditionalReadStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConditionalReadStatusCode {
    return new ConditionalReadStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConditionalReadStatusCode {
    return new ConditionalReadStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConditionalReadStatusCode {
    return new ConditionalReadStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConditionalReadStatusCode | PlainMessage<ConditionalReadStatusCode> | undefined, b: ConditionalReadStatusCode | PlainMessage<ConditionalReadStatusCode> | undefined): boolean {
    return proto3.util.equals(ConditionalReadStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConditionalReadStatusCode.Value
 */
export enum ConditionalReadStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_SUPPORTED = 1;
   */
  NOT_SUPPORTED = 1,

  /**
   * @generated from enum value: MODIFIED_SINCE = 2;
   */
  MODIFIED_SINCE = 2,

  /**
   * @generated from enum value: NOT_MATCH = 3;
   */
  NOT_MATCH = 3,

  /**
   * @generated from enum value: FULL_SUPPORT = 4;
   */
  FULL_SUPPORT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConditionalReadStatusCode_Value)
proto3.util.setEnumType(ConditionalReadStatusCode_Value, "google.fhir.r4.core.ConditionalReadStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_SUPPORTED" },
  { no: 2, name: "MODIFIED_SINCE" },
  { no: 3, name: "NOT_MATCH" },
  { no: 4, name: "FULL_SUPPORT" },
]);

/**
 * Indicates the degree of adherence to a specified behavior or capability
 * expected for a system to be deemed conformant with a specification. See
 * http://terminology.hl7.org/CodeSystem/conformance-expectation
 *
 * @generated from message google.fhir.r4.core.ConformanceExpectationCode
 */
export class ConformanceExpectationCode extends Message<ConformanceExpectationCode> {
  constructor(data?: PartialMessage<ConformanceExpectationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConformanceExpectationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConformanceExpectationCode {
    return new ConformanceExpectationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConformanceExpectationCode {
    return new ConformanceExpectationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConformanceExpectationCode {
    return new ConformanceExpectationCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConformanceExpectationCode | PlainMessage<ConformanceExpectationCode> | undefined, b: ConformanceExpectationCode | PlainMessage<ConformanceExpectationCode> | undefined): boolean {
    return proto3.util.equals(ConformanceExpectationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConformanceExpectationCode.Value
 */
export enum ConformanceExpectationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SHALL = 1;
   */
  SHALL = 1,

  /**
   * @generated from enum value: SHOULD = 2;
   */
  SHOULD = 2,

  /**
   * @generated from enum value: MAY = 3;
   */
  MAY = 3,

  /**
   * @generated from enum value: SHOULD_NOT = 4;
   */
  SHOULD_NOT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConformanceExpectationCode_Value)
proto3.util.setEnumType(ConformanceExpectationCode_Value, "google.fhir.r4.core.ConformanceExpectationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SHALL" },
  { no: 2, name: "SHOULD" },
  { no: 3, name: "MAY" },
  { no: 4, name: "SHOULD_NOT" },
]);

/**
 * How a resource reference is interpreted when testing consent restrictions.
 * See http://hl7.org/fhir/consent-data-meaning
 *
 * @generated from message google.fhir.r4.core.ConsentDataMeaningCode
 */
export class ConsentDataMeaningCode extends Message<ConsentDataMeaningCode> {
  constructor(data?: PartialMessage<ConsentDataMeaningCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentDataMeaningCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentDataMeaningCode {
    return new ConsentDataMeaningCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentDataMeaningCode {
    return new ConsentDataMeaningCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentDataMeaningCode {
    return new ConsentDataMeaningCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentDataMeaningCode | PlainMessage<ConsentDataMeaningCode> | undefined, b: ConsentDataMeaningCode | PlainMessage<ConsentDataMeaningCode> | undefined): boolean {
    return proto3.util.equals(ConsentDataMeaningCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConsentDataMeaningCode.Value
 */
export enum ConsentDataMeaningCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: RELATED = 2;
   */
  RELATED = 2,

  /**
   * @generated from enum value: DEPENDENTS = 3;
   */
  DEPENDENTS = 3,

  /**
   * @generated from enum value: AUTHOREDBY = 4;
   */
  AUTHOREDBY = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConsentDataMeaningCode_Value)
proto3.util.setEnumType(ConsentDataMeaningCode_Value, "google.fhir.r4.core.ConsentDataMeaningCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTANCE" },
  { no: 2, name: "RELATED" },
  { no: 3, name: "DEPENDENTS" },
  { no: 4, name: "AUTHOREDBY" },
]);

/**
 * How a rule statement is applied, such as adding additional consent or
 * removing consent. See http://hl7.org/fhir/consent-provision-type
 *
 * @generated from message google.fhir.r4.core.ConsentProvisionTypeCode
 */
export class ConsentProvisionTypeCode extends Message<ConsentProvisionTypeCode> {
  constructor(data?: PartialMessage<ConsentProvisionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentProvisionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentProvisionTypeCode {
    return new ConsentProvisionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentProvisionTypeCode {
    return new ConsentProvisionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentProvisionTypeCode {
    return new ConsentProvisionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentProvisionTypeCode | PlainMessage<ConsentProvisionTypeCode> | undefined, b: ConsentProvisionTypeCode | PlainMessage<ConsentProvisionTypeCode> | undefined): boolean {
    return proto3.util.equals(ConsentProvisionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConsentProvisionTypeCode.Value
 */
export enum ConsentProvisionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DENY = 1;
   */
  DENY = 1,

  /**
   * @generated from enum value: PERMIT = 2;
   */
  PERMIT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConsentProvisionTypeCode_Value)
proto3.util.setEnumType(ConsentProvisionTypeCode_Value, "google.fhir.r4.core.ConsentProvisionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DENY" },
  { no: 2, name: "PERMIT" },
]);

/**
 * Indicates the state of the consent.
 * See http://hl7.org/fhir/consent-state-codes
 *
 * @generated from message google.fhir.r4.core.ConsentStateCode
 */
export class ConsentStateCode extends Message<ConsentStateCode> {
  constructor(data?: PartialMessage<ConsentStateCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConsentStateCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentStateCode {
    return new ConsentStateCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentStateCode {
    return new ConsentStateCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentStateCode {
    return new ConsentStateCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConsentStateCode | PlainMessage<ConsentStateCode> | undefined, b: ConsentStateCode | PlainMessage<ConsentStateCode> | undefined): boolean {
    return proto3.util.equals(ConsentStateCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConsentStateCode.Value
 */
export enum ConsentStateCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: PROPOSED = 2;
   */
  PROPOSED = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: REJECTED = 4;
   */
  REJECTED = 4,

  /**
   * @generated from enum value: INACTIVE = 5;
   */
  INACTIVE = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConsentStateCode_Value)
proto3.util.setEnumType(ConsentStateCode_Value, "google.fhir.r4.core.ConsentStateCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "PROPOSED" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "REJECTED" },
  { no: 5, name: "INACTIVE" },
  { no: 6, name: "ENTERED_IN_ERROR" },
]);

/**
 * SHALL applications comply with this constraint?
 * See http://hl7.org/fhir/constraint-severity
 *
 * @generated from message google.fhir.r4.core.ConstraintSeverityCode
 */
export class ConstraintSeverityCode extends Message<ConstraintSeverityCode> {
  constructor(data?: PartialMessage<ConstraintSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ConstraintSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConstraintSeverityCode {
    return new ConstraintSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConstraintSeverityCode {
    return new ConstraintSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConstraintSeverityCode {
    return new ConstraintSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: ConstraintSeverityCode | PlainMessage<ConstraintSeverityCode> | undefined, b: ConstraintSeverityCode | PlainMessage<ConstraintSeverityCode> | undefined): boolean {
    return proto3.util.equals(ConstraintSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ConstraintSeverityCode.Value
 */
export enum ConstraintSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ERROR = 1;
   */
  ERROR = 1,

  /**
   * @generated from enum value: WARNING = 2;
   */
  WARNING = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConstraintSeverityCode_Value)
proto3.util.setEnumType(ConstraintSeverityCode_Value, "google.fhir.r4.core.ConstraintSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ERROR" },
  { no: 2, name: "WARNING" },
]);

/**
 * Telecommunications form for contact point.
 * See http://hl7.org/fhir/contact-point-system
 *
 * @generated from message google.fhir.r4.core.ContactPointSystemCode
 */
export class ContactPointSystemCode extends Message<ContactPointSystemCode> {
  constructor(data?: PartialMessage<ContactPointSystemCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointSystemCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointSystemCode {
    return new ContactPointSystemCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointSystemCode {
    return new ContactPointSystemCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointSystemCode {
    return new ContactPointSystemCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointSystemCode | PlainMessage<ContactPointSystemCode> | undefined, b: ContactPointSystemCode | PlainMessage<ContactPointSystemCode> | undefined): boolean {
    return proto3.util.equals(ContactPointSystemCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ContactPointSystemCode.Value
 */
export enum ContactPointSystemCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PHONE = 1;
   */
  PHONE = 1,

  /**
   * @generated from enum value: FAX = 2;
   */
  FAX = 2,

  /**
   * @generated from enum value: EMAIL = 3;
   */
  EMAIL = 3,

  /**
   * @generated from enum value: PAGER = 4;
   */
  PAGER = 4,

  /**
   * @generated from enum value: URL = 5;
   */
  URL = 5,

  /**
   * @generated from enum value: SMS = 6;
   */
  SMS = 6,

  /**
   * @generated from enum value: OTHER = 7;
   */
  OTHER = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(ContactPointSystemCode_Value)
proto3.util.setEnumType(ContactPointSystemCode_Value, "google.fhir.r4.core.ContactPointSystemCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PHONE" },
  { no: 2, name: "FAX" },
  { no: 3, name: "EMAIL" },
  { no: 4, name: "PAGER" },
  { no: 5, name: "URL" },
  { no: 6, name: "SMS" },
  { no: 7, name: "OTHER" },
]);

/**
 * Use of contact point.
 * See http://hl7.org/fhir/contact-point-use
 *
 * @generated from message google.fhir.r4.core.ContactPointUseCode
 */
export class ContactPointUseCode extends Message<ContactPointUseCode> {
  constructor(data?: PartialMessage<ContactPointUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContactPointUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPointUseCode {
    return new ContactPointUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPointUseCode {
    return new ContactPointUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPointUseCode {
    return new ContactPointUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContactPointUseCode | PlainMessage<ContactPointUseCode> | undefined, b: ContactPointUseCode | PlainMessage<ContactPointUseCode> | undefined): boolean {
    return proto3.util.equals(ContactPointUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ContactPointUseCode.Value
 */
export enum ContactPointUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HOME = 1;
   */
  HOME = 1,

  /**
   * @generated from enum value: WORK = 2;
   */
  WORK = 2,

  /**
   * @generated from enum value: TEMP = 3;
   */
  TEMP = 3,

  /**
   * @generated from enum value: OLD = 4;
   */
  OLD = 4,

  /**
   * @generated from enum value: MOBILE = 5;
   */
  MOBILE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ContactPointUseCode_Value)
proto3.util.setEnumType(ContactPointUseCode_Value, "google.fhir.r4.core.ContactPointUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HOME" },
  { no: 2, name: "WORK" },
  { no: 3, name: "TEMP" },
  { no: 4, name: "OLD" },
  { no: 5, name: "MOBILE" },
]);

/**
 * This value set contract specific codes for status.
 * See http://hl7.org/fhir/contract-publicationstatus
 *
 * @generated from message google.fhir.r4.core.ContractResourcePublicationStatusCode
 */
export class ContractResourcePublicationStatusCode extends Message<ContractResourcePublicationStatusCode> {
  constructor(data?: PartialMessage<ContractResourcePublicationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContractResourcePublicationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContractResourcePublicationStatusCode {
    return new ContractResourcePublicationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContractResourcePublicationStatusCode {
    return new ContractResourcePublicationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContractResourcePublicationStatusCode {
    return new ContractResourcePublicationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContractResourcePublicationStatusCode | PlainMessage<ContractResourcePublicationStatusCode> | undefined, b: ContractResourcePublicationStatusCode | PlainMessage<ContractResourcePublicationStatusCode> | undefined): boolean {
    return proto3.util.equals(ContractResourcePublicationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ContractResourcePublicationStatusCode.Value
 */
export enum ContractResourcePublicationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AMENDED = 1;
   */
  AMENDED = 1,

  /**
   * @generated from enum value: APPENDED = 2;
   */
  APPENDED = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: DISPUTED = 4;
   */
  DISPUTED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: EXECUTABLE = 6;
   */
  EXECUTABLE = 6,

  /**
   * @generated from enum value: EXECUTED = 7;
   */
  EXECUTED = 7,

  /**
   * @generated from enum value: NEGOTIABLE = 8;
   */
  NEGOTIABLE = 8,

  /**
   * @generated from enum value: OFFERED = 9;
   */
  OFFERED = 9,

  /**
   * @generated from enum value: POLICY = 10;
   */
  POLICY = 10,

  /**
   * @generated from enum value: REJECTED = 11;
   */
  REJECTED = 11,

  /**
   * @generated from enum value: RENEWED = 12;
   */
  RENEWED = 12,

  /**
   * @generated from enum value: REVOKED = 13;
   */
  REVOKED = 13,

  /**
   * @generated from enum value: RESOLVED = 14;
   */
  RESOLVED = 14,

  /**
   * @generated from enum value: TERMINATED = 15;
   */
  TERMINATED = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(ContractResourcePublicationStatusCode_Value)
proto3.util.setEnumType(ContractResourcePublicationStatusCode_Value, "google.fhir.r4.core.ContractResourcePublicationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AMENDED" },
  { no: 2, name: "APPENDED" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "DISPUTED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "EXECUTABLE" },
  { no: 7, name: "EXECUTED" },
  { no: 8, name: "NEGOTIABLE" },
  { no: 9, name: "OFFERED" },
  { no: 10, name: "POLICY" },
  { no: 11, name: "REJECTED" },
  { no: 12, name: "RENEWED" },
  { no: 13, name: "REVOKED" },
  { no: 14, name: "RESOLVED" },
  { no: 15, name: "TERMINATED" },
]);

/**
 * This value set contract specific codes for status.
 * See http://hl7.org/fhir/contract-status
 *
 * @generated from message google.fhir.r4.core.ContractResourceStatusCode
 */
export class ContractResourceStatusCode extends Message<ContractResourceStatusCode> {
  constructor(data?: PartialMessage<ContractResourceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContractResourceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContractResourceStatusCode {
    return new ContractResourceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContractResourceStatusCode {
    return new ContractResourceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContractResourceStatusCode {
    return new ContractResourceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContractResourceStatusCode | PlainMessage<ContractResourceStatusCode> | undefined, b: ContractResourceStatusCode | PlainMessage<ContractResourceStatusCode> | undefined): boolean {
    return proto3.util.equals(ContractResourceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ContractResourceStatusCode.Value
 */
export enum ContractResourceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AMENDED = 1;
   */
  AMENDED = 1,

  /**
   * @generated from enum value: APPENDED = 2;
   */
  APPENDED = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: DISPUTED = 4;
   */
  DISPUTED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: EXECUTABLE = 6;
   */
  EXECUTABLE = 6,

  /**
   * @generated from enum value: EXECUTED = 7;
   */
  EXECUTED = 7,

  /**
   * @generated from enum value: NEGOTIABLE = 8;
   */
  NEGOTIABLE = 8,

  /**
   * @generated from enum value: OFFERED = 9;
   */
  OFFERED = 9,

  /**
   * @generated from enum value: POLICY = 10;
   */
  POLICY = 10,

  /**
   * @generated from enum value: REJECTED = 11;
   */
  REJECTED = 11,

  /**
   * @generated from enum value: RENEWED = 12;
   */
  RENEWED = 12,

  /**
   * @generated from enum value: REVOKED = 13;
   */
  REVOKED = 13,

  /**
   * @generated from enum value: RESOLVED = 14;
   */
  RESOLVED = 14,

  /**
   * @generated from enum value: TERMINATED = 15;
   */
  TERMINATED = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(ContractResourceStatusCode_Value)
proto3.util.setEnumType(ContractResourceStatusCode_Value, "google.fhir.r4.core.ContractResourceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AMENDED" },
  { no: 2, name: "APPENDED" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "DISPUTED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "EXECUTABLE" },
  { no: 7, name: "EXECUTED" },
  { no: 8, name: "NEGOTIABLE" },
  { no: 9, name: "OFFERED" },
  { no: 10, name: "POLICY" },
  { no: 11, name: "REJECTED" },
  { no: 12, name: "RENEWED" },
  { no: 13, name: "REVOKED" },
  { no: 14, name: "RESOLVED" },
  { no: 15, name: "TERMINATED" },
]);

/**
 * The type of contributor.
 * See http://hl7.org/fhir/contributor-type
 *
 * @generated from message google.fhir.r4.core.ContributorTypeCode
 */
export class ContributorTypeCode extends Message<ContributorTypeCode> {
  constructor(data?: PartialMessage<ContributorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ContributorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContributorTypeCode {
    return new ContributorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContributorTypeCode {
    return new ContributorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContributorTypeCode {
    return new ContributorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ContributorTypeCode | PlainMessage<ContributorTypeCode> | undefined, b: ContributorTypeCode | PlainMessage<ContributorTypeCode> | undefined): boolean {
    return proto3.util.equals(ContributorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ContributorTypeCode.Value
 */
export enum ContributorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AUTHOR = 1;
   */
  AUTHOR = 1,

  /**
   * @generated from enum value: EDITOR = 2;
   */
  EDITOR = 2,

  /**
   * @generated from enum value: REVIEWER = 3;
   */
  REVIEWER = 3,

  /**
   * @generated from enum value: ENDORSER = 4;
   */
  ENDORSER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ContributorTypeCode_Value)
proto3.util.setEnumType(ContributorTypeCode_Value, "google.fhir.r4.core.ContributorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AUTHOR" },
  { no: 2, name: "EDITOR" },
  { no: 3, name: "REVIEWER" },
  { no: 4, name: "ENDORSER" },
]);

/**
 * Used to specify why the normally expected content of the data element is
 * missing. See http://terminology.hl7.org/CodeSystem/data-absent-reason
 *
 * @generated from message google.fhir.r4.core.DataAbsentReasonCode
 */
export class DataAbsentReasonCode extends Message<DataAbsentReasonCode> {
  constructor(data?: PartialMessage<DataAbsentReasonCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataAbsentReasonCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataAbsentReasonCode {
    return new DataAbsentReasonCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataAbsentReasonCode {
    return new DataAbsentReasonCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataAbsentReasonCode {
    return new DataAbsentReasonCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataAbsentReasonCode | PlainMessage<DataAbsentReasonCode> | undefined, b: DataAbsentReasonCode | PlainMessage<DataAbsentReasonCode> | undefined): boolean {
    return proto3.util.equals(DataAbsentReasonCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DataAbsentReasonCode.Value
 */
export enum DataAbsentReasonCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNKNOWN = 1;
   */
  UNKNOWN = 1,

  /**
   * @generated from enum value: ASKED_UNKNOWN = 2;
   */
  ASKED_UNKNOWN = 2,

  /**
   * @generated from enum value: TEMP_UNKNOWN = 3;
   */
  TEMP_UNKNOWN = 3,

  /**
   * @generated from enum value: NOT_ASKED = 4;
   */
  NOT_ASKED = 4,

  /**
   * @generated from enum value: ASKED_DECLINED = 5;
   */
  ASKED_DECLINED = 5,

  /**
   * @generated from enum value: MASKED = 6;
   */
  MASKED = 6,

  /**
   * @generated from enum value: NOT_APPLICABLE = 7;
   */
  NOT_APPLICABLE = 7,

  /**
   * @generated from enum value: UNSUPPORTED = 8;
   */
  UNSUPPORTED = 8,

  /**
   * @generated from enum value: AS_TEXT = 9;
   */
  AS_TEXT = 9,

  /**
   * @generated from enum value: ERROR = 10;
   */
  ERROR = 10,

  /**
   * @generated from enum value: NOT_A_NUMBER = 11;
   */
  NOT_A_NUMBER = 11,

  /**
   * @generated from enum value: NEGATIVE_INFINITY = 12;
   */
  NEGATIVE_INFINITY = 12,

  /**
   * @generated from enum value: POSITIVE_INFINITY = 13;
   */
  POSITIVE_INFINITY = 13,

  /**
   * @generated from enum value: NOT_PERFORMED = 14;
   */
  NOT_PERFORMED = 14,

  /**
   * @generated from enum value: NOT_PERMITTED = 15;
   */
  NOT_PERMITTED = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(DataAbsentReasonCode_Value)
proto3.util.setEnumType(DataAbsentReasonCode_Value, "google.fhir.r4.core.DataAbsentReasonCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNKNOWN" },
  { no: 2, name: "ASKED_UNKNOWN" },
  { no: 3, name: "TEMP_UNKNOWN" },
  { no: 4, name: "NOT_ASKED" },
  { no: 5, name: "ASKED_DECLINED" },
  { no: 6, name: "MASKED" },
  { no: 7, name: "NOT_APPLICABLE" },
  { no: 8, name: "UNSUPPORTED" },
  { no: 9, name: "AS_TEXT" },
  { no: 10, name: "ERROR" },
  { no: 11, name: "NOT_A_NUMBER" },
  { no: 12, name: "NEGATIVE_INFINITY" },
  { no: 13, name: "POSITIVE_INFINITY" },
  { no: 14, name: "NOT_PERFORMED" },
  { no: 15, name: "NOT_PERMITTED" },
]);

/**
 * A version specific list of the data types defined by the FHIR specification
 * for use as an element  type (any of the FHIR defined data types). See
 * http://hl7.org/fhir/data-types
 *
 * @generated from message google.fhir.r4.core.DataTypeCode
 */
export class DataTypeCode extends Message<DataTypeCode> {
  constructor(data?: PartialMessage<DataTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DataTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataTypeCode {
    return new DataTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataTypeCode {
    return new DataTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataTypeCode {
    return new DataTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DataTypeCode | PlainMessage<DataTypeCode> | undefined, b: DataTypeCode | PlainMessage<DataTypeCode> | undefined): boolean {
    return proto3.util.equals(DataTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DataTypeCode.Value
 */
export enum DataTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ADDRESS = 1;
   */
  ADDRESS = 1,

  /**
   * @generated from enum value: AGE = 2;
   */
  AGE = 2,

  /**
   * @generated from enum value: ANNOTATION = 3;
   */
  ANNOTATION = 3,

  /**
   * @generated from enum value: ATTACHMENT = 4;
   */
  ATTACHMENT = 4,

  /**
   * @generated from enum value: BACKBONE_ELEMENT = 5;
   */
  BACKBONE_ELEMENT = 5,

  /**
   * @generated from enum value: CODEABLE_CONCEPT = 6;
   */
  CODEABLE_CONCEPT = 6,

  /**
   * @generated from enum value: CODING = 7;
   */
  CODING = 7,

  /**
   * @generated from enum value: CONTACT_DETAIL = 8;
   */
  CONTACT_DETAIL = 8,

  /**
   * @generated from enum value: CONTACT_POINT = 9;
   */
  CONTACT_POINT = 9,

  /**
   * @generated from enum value: CONTRIBUTOR = 10;
   */
  CONTRIBUTOR = 10,

  /**
   * @generated from enum value: COUNT = 11;
   */
  COUNT = 11,

  /**
   * @generated from enum value: DATA_REQUIREMENT = 12;
   */
  DATA_REQUIREMENT = 12,

  /**
   * @generated from enum value: DISTANCE = 13;
   */
  DISTANCE = 13,

  /**
   * @generated from enum value: DOSAGE = 14;
   */
  DOSAGE = 14,

  /**
   * @generated from enum value: DURATION = 15;
   */
  DURATION = 15,

  /**
   * @generated from enum value: ELEMENT = 16;
   */
  ELEMENT = 16,

  /**
   * @generated from enum value: ELEMENT_DEFINITION = 17;
   */
  ELEMENT_DEFINITION = 17,

  /**
   * @generated from enum value: EXPRESSION = 18;
   */
  EXPRESSION = 18,

  /**
   * @generated from enum value: EXTENSION = 19;
   */
  EXTENSION = 19,

  /**
   * @generated from enum value: HUMAN_NAME = 20;
   */
  HUMAN_NAME = 20,

  /**
   * @generated from enum value: IDENTIFIER = 21;
   */
  IDENTIFIER = 21,

  /**
   * @generated from enum value: MARKETING_STATUS = 22;
   */
  MARKETING_STATUS = 22,

  /**
   * @generated from enum value: META = 23;
   */
  META = 23,

  /**
   * @generated from enum value: MONEY = 24;
   */
  MONEY = 24,

  /**
   * @generated from enum value: MONEY_QUANTITY = 25;
   */
  MONEY_QUANTITY = 25,

  /**
   * @generated from enum value: NARRATIVE = 26;
   */
  NARRATIVE = 26,

  /**
   * @generated from enum value: PARAMETER_DEFINITION = 27;
   */
  PARAMETER_DEFINITION = 27,

  /**
   * @generated from enum value: PERIOD = 28;
   */
  PERIOD = 28,

  /**
   * @generated from enum value: POPULATION = 29;
   */
  POPULATION = 29,

  /**
   * @generated from enum value: PROD_CHARACTERISTIC = 30;
   */
  PROD_CHARACTERISTIC = 30,

  /**
   * @generated from enum value: PRODUCT_SHELF_LIFE = 31;
   */
  PRODUCT_SHELF_LIFE = 31,

  /**
   * @generated from enum value: QUANTITY = 32;
   */
  QUANTITY = 32,

  /**
   * @generated from enum value: RANGE = 33;
   */
  RANGE = 33,

  /**
   * @generated from enum value: RATIO = 34;
   */
  RATIO = 34,

  /**
   * @generated from enum value: REFERENCE = 35;
   */
  REFERENCE = 35,

  /**
   * @generated from enum value: RELATED_ARTIFACT = 36;
   */
  RELATED_ARTIFACT = 36,

  /**
   * @generated from enum value: SAMPLED_DATA = 37;
   */
  SAMPLED_DATA = 37,

  /**
   * @generated from enum value: SIGNATURE = 38;
   */
  SIGNATURE = 38,

  /**
   * @generated from enum value: SIMPLE_QUANTITY = 39;
   */
  SIMPLE_QUANTITY = 39,

  /**
   * @generated from enum value: SUBSTANCE_AMOUNT = 40;
   */
  SUBSTANCE_AMOUNT = 40,

  /**
   * @generated from enum value: TIMING = 41;
   */
  TIMING = 41,

  /**
   * @generated from enum value: TRIGGER_DEFINITION = 42;
   */
  TRIGGER_DEFINITION = 42,

  /**
   * @generated from enum value: USAGE_CONTEXT = 43;
   */
  USAGE_CONTEXT = 43,

  /**
   * @generated from enum value: BASE64_BINARY = 44;
   */
  BASE64_BINARY = 44,

  /**
   * @generated from enum value: BOOLEAN = 45;
   */
  BOOLEAN = 45,

  /**
   * @generated from enum value: CANONICAL = 46;
   */
  CANONICAL = 46,

  /**
   * @generated from enum value: CODE = 47;
   */
  CODE = 47,

  /**
   * @generated from enum value: DATE = 48;
   */
  DATE = 48,

  /**
   * @generated from enum value: DATE_TIME = 49;
   */
  DATE_TIME = 49,

  /**
   * @generated from enum value: DECIMAL = 50;
   */
  DECIMAL = 50,

  /**
   * @generated from enum value: ID = 51;
   */
  ID = 51,

  /**
   * @generated from enum value: INSTANT = 52;
   */
  INSTANT = 52,

  /**
   * @generated from enum value: INTEGER = 53;
   */
  INTEGER = 53,

  /**
   * @generated from enum value: MARKDOWN = 54;
   */
  MARKDOWN = 54,

  /**
   * @generated from enum value: OID = 55;
   */
  OID = 55,

  /**
   * @generated from enum value: POSITIVE_INT = 56;
   */
  POSITIVE_INT = 56,

  /**
   * @generated from enum value: STRING = 57;
   */
  STRING = 57,

  /**
   * @generated from enum value: TIME = 58;
   */
  TIME = 58,

  /**
   * @generated from enum value: UNSIGNED_INT = 59;
   */
  UNSIGNED_INT = 59,

  /**
   * @generated from enum value: URI = 60;
   */
  URI = 60,

  /**
   * @generated from enum value: URL = 61;
   */
  URL = 61,

  /**
   * @generated from enum value: UUID = 62;
   */
  UUID = 62,

  /**
   * @generated from enum value: XHTML = 63;
   */
  XHTML = 63,
}
// Retrieve enum metadata with: proto3.getEnumType(DataTypeCode_Value)
proto3.util.setEnumType(DataTypeCode_Value, "google.fhir.r4.core.DataTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ADDRESS" },
  { no: 2, name: "AGE" },
  { no: 3, name: "ANNOTATION" },
  { no: 4, name: "ATTACHMENT" },
  { no: 5, name: "BACKBONE_ELEMENT" },
  { no: 6, name: "CODEABLE_CONCEPT" },
  { no: 7, name: "CODING" },
  { no: 8, name: "CONTACT_DETAIL" },
  { no: 9, name: "CONTACT_POINT" },
  { no: 10, name: "CONTRIBUTOR" },
  { no: 11, name: "COUNT" },
  { no: 12, name: "DATA_REQUIREMENT" },
  { no: 13, name: "DISTANCE" },
  { no: 14, name: "DOSAGE" },
  { no: 15, name: "DURATION" },
  { no: 16, name: "ELEMENT" },
  { no: 17, name: "ELEMENT_DEFINITION" },
  { no: 18, name: "EXPRESSION" },
  { no: 19, name: "EXTENSION" },
  { no: 20, name: "HUMAN_NAME" },
  { no: 21, name: "IDENTIFIER" },
  { no: 22, name: "MARKETING_STATUS" },
  { no: 23, name: "META" },
  { no: 24, name: "MONEY" },
  { no: 25, name: "MONEY_QUANTITY" },
  { no: 26, name: "NARRATIVE" },
  { no: 27, name: "PARAMETER_DEFINITION" },
  { no: 28, name: "PERIOD" },
  { no: 29, name: "POPULATION" },
  { no: 30, name: "PROD_CHARACTERISTIC" },
  { no: 31, name: "PRODUCT_SHELF_LIFE" },
  { no: 32, name: "QUANTITY" },
  { no: 33, name: "RANGE" },
  { no: 34, name: "RATIO" },
  { no: 35, name: "REFERENCE" },
  { no: 36, name: "RELATED_ARTIFACT" },
  { no: 37, name: "SAMPLED_DATA" },
  { no: 38, name: "SIGNATURE" },
  { no: 39, name: "SIMPLE_QUANTITY" },
  { no: 40, name: "SUBSTANCE_AMOUNT" },
  { no: 41, name: "TIMING" },
  { no: 42, name: "TRIGGER_DEFINITION" },
  { no: 43, name: "USAGE_CONTEXT" },
  { no: 44, name: "BASE64_BINARY" },
  { no: 45, name: "BOOLEAN" },
  { no: 46, name: "CANONICAL" },
  { no: 47, name: "CODE" },
  { no: 48, name: "DATE" },
  { no: 49, name: "DATE_TIME" },
  { no: 50, name: "DECIMAL" },
  { no: 51, name: "ID" },
  { no: 52, name: "INSTANT" },
  { no: 53, name: "INTEGER" },
  { no: 54, name: "MARKDOWN" },
  { no: 55, name: "OID" },
  { no: 56, name: "POSITIVE_INT" },
  { no: 57, name: "STRING" },
  { no: 58, name: "TIME" },
  { no: 59, name: "UNSIGNED_INT" },
  { no: 60, name: "URI" },
  { no: 61, name: "URL" },
  { no: 62, name: "UUID" },
  { no: 63, name: "XHTML" },
]);

/**
 * The days of the week.
 * See http://hl7.org/fhir/days-of-week
 *
 * @generated from message google.fhir.r4.core.DaysOfWeekCode
 */
export class DaysOfWeekCode extends Message<DaysOfWeekCode> {
  constructor(data?: PartialMessage<DaysOfWeekCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DaysOfWeekCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DaysOfWeekCode {
    return new DaysOfWeekCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DaysOfWeekCode {
    return new DaysOfWeekCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DaysOfWeekCode {
    return new DaysOfWeekCode().fromJsonString(jsonString, options);
  }

  static equals(a: DaysOfWeekCode | PlainMessage<DaysOfWeekCode> | undefined, b: DaysOfWeekCode | PlainMessage<DaysOfWeekCode> | undefined): boolean {
    return proto3.util.equals(DaysOfWeekCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DaysOfWeekCode.Value
 */
export enum DaysOfWeekCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MON = 1;
   */
  MON = 1,

  /**
   * @generated from enum value: TUE = 2;
   */
  TUE = 2,

  /**
   * @generated from enum value: WED = 3;
   */
  WED = 3,

  /**
   * @generated from enum value: THU = 4;
   */
  THU = 4,

  /**
   * @generated from enum value: FRI = 5;
   */
  FRI = 5,

  /**
   * @generated from enum value: SAT = 6;
   */
  SAT = 6,

  /**
   * @generated from enum value: SUN = 7;
   */
  SUN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(DaysOfWeekCode_Value)
proto3.util.setEnumType(DaysOfWeekCode_Value, "google.fhir.r4.core.DaysOfWeekCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MON" },
  { no: 2, name: "TUE" },
  { no: 3, name: "WED" },
  { no: 4, name: "THU" },
  { no: 5, name: "FRI" },
  { no: 6, name: "SAT" },
  { no: 7, name: "SUN" },
]);

/**
 * Indicates the potential degree of impact of the identified issue on the
 * patient. See http://hl7.org/fhir/detectedissue-severity
 *
 * @generated from message google.fhir.r4.core.DetectedIssueSeverityCode
 */
export class DetectedIssueSeverityCode extends Message<DetectedIssueSeverityCode> {
  constructor(data?: PartialMessage<DetectedIssueSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DetectedIssueSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetectedIssueSeverityCode {
    return new DetectedIssueSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetectedIssueSeverityCode {
    return new DetectedIssueSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetectedIssueSeverityCode {
    return new DetectedIssueSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: DetectedIssueSeverityCode | PlainMessage<DetectedIssueSeverityCode> | undefined, b: DetectedIssueSeverityCode | PlainMessage<DetectedIssueSeverityCode> | undefined): boolean {
    return proto3.util.equals(DetectedIssueSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DetectedIssueSeverityCode.Value
 */
export enum DetectedIssueSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HIGH = 1;
   */
  HIGH = 1,

  /**
   * @generated from enum value: MODERATE = 2;
   */
  MODERATE = 2,

  /**
   * @generated from enum value: LOW = 3;
   */
  LOW = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DetectedIssueSeverityCode_Value)
proto3.util.setEnumType(DetectedIssueSeverityCode_Value, "google.fhir.r4.core.DetectedIssueSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HIGH" },
  { no: 2, name: "MODERATE" },
  { no: 3, name: "LOW" },
]);

/**
 * Describes the state of a metric calibration.
 * See http://hl7.org/fhir/metric-calibration-state
 *
 * @generated from message google.fhir.r4.core.DeviceMetricCalibrationStateCode
 */
export class DeviceMetricCalibrationStateCode extends Message<DeviceMetricCalibrationStateCode> {
  constructor(data?: PartialMessage<DeviceMetricCalibrationStateCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceMetricCalibrationStateCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricCalibrationStateCode {
    return new DeviceMetricCalibrationStateCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationStateCode {
    return new DeviceMetricCalibrationStateCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationStateCode {
    return new DeviceMetricCalibrationStateCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricCalibrationStateCode | PlainMessage<DeviceMetricCalibrationStateCode> | undefined, b: DeviceMetricCalibrationStateCode | PlainMessage<DeviceMetricCalibrationStateCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricCalibrationStateCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value
 */
export enum DeviceMetricCalibrationStateCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_CALIBRATED = 1;
   */
  NOT_CALIBRATED = 1,

  /**
   * @generated from enum value: CALIBRATION_REQUIRED = 2;
   */
  CALIBRATION_REQUIRED = 2,

  /**
   * @generated from enum value: CALIBRATED = 3;
   */
  CALIBRATED = 3,

  /**
   * @generated from enum value: UNSPECIFIED = 4;
   */
  UNSPECIFIED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricCalibrationStateCode_Value)
proto3.util.setEnumType(DeviceMetricCalibrationStateCode_Value, "google.fhir.r4.core.DeviceMetricCalibrationStateCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_CALIBRATED" },
  { no: 2, name: "CALIBRATION_REQUIRED" },
  { no: 3, name: "CALIBRATED" },
  { no: 4, name: "UNSPECIFIED" },
]);

/**
 * Describes the type of a metric calibration.
 * See http://hl7.org/fhir/metric-calibration-type
 *
 * @generated from message google.fhir.r4.core.DeviceMetricCalibrationTypeCode
 */
export class DeviceMetricCalibrationTypeCode extends Message<DeviceMetricCalibrationTypeCode> {
  constructor(data?: PartialMessage<DeviceMetricCalibrationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceMetricCalibrationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricCalibrationTypeCode {
    return new DeviceMetricCalibrationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationTypeCode {
    return new DeviceMetricCalibrationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricCalibrationTypeCode {
    return new DeviceMetricCalibrationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricCalibrationTypeCode | PlainMessage<DeviceMetricCalibrationTypeCode> | undefined, b: DeviceMetricCalibrationTypeCode | PlainMessage<DeviceMetricCalibrationTypeCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricCalibrationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value
 */
export enum DeviceMetricCalibrationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNSPECIFIED = 1;
   */
  UNSPECIFIED = 1,

  /**
   * @generated from enum value: OFFSET = 2;
   */
  OFFSET = 2,

  /**
   * @generated from enum value: GAIN = 3;
   */
  GAIN = 3,

  /**
   * @generated from enum value: TWO_POINT = 4;
   */
  TWO_POINT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricCalibrationTypeCode_Value)
proto3.util.setEnumType(DeviceMetricCalibrationTypeCode_Value, "google.fhir.r4.core.DeviceMetricCalibrationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNSPECIFIED" },
  { no: 2, name: "OFFSET" },
  { no: 3, name: "GAIN" },
  { no: 4, name: "TWO_POINT" },
]);

/**
 * Describes the category of the metric.
 * See http://hl7.org/fhir/metric-category
 *
 * @generated from message google.fhir.r4.core.DeviceMetricCategoryCode
 */
export class DeviceMetricCategoryCode extends Message<DeviceMetricCategoryCode> {
  constructor(data?: PartialMessage<DeviceMetricCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceMetricCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricCategoryCode {
    return new DeviceMetricCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricCategoryCode {
    return new DeviceMetricCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricCategoryCode {
    return new DeviceMetricCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricCategoryCode | PlainMessage<DeviceMetricCategoryCode> | undefined, b: DeviceMetricCategoryCode | PlainMessage<DeviceMetricCategoryCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceMetricCategoryCode.Value
 */
export enum DeviceMetricCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MEASUREMENT = 1;
   */
  MEASUREMENT = 1,

  /**
   * @generated from enum value: SETTING = 2;
   */
  SETTING = 2,

  /**
   * @generated from enum value: CALCULATION = 3;
   */
  CALCULATION = 3,

  /**
   * @generated from enum value: UNSPECIFIED = 4;
   */
  UNSPECIFIED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricCategoryCode_Value)
proto3.util.setEnumType(DeviceMetricCategoryCode_Value, "google.fhir.r4.core.DeviceMetricCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MEASUREMENT" },
  { no: 2, name: "SETTING" },
  { no: 3, name: "CALCULATION" },
  { no: 4, name: "UNSPECIFIED" },
]);

/**
 * Describes the typical color of representation.
 * See http://hl7.org/fhir/metric-color
 *
 * @generated from message google.fhir.r4.core.DeviceMetricColorCode
 */
export class DeviceMetricColorCode extends Message<DeviceMetricColorCode> {
  constructor(data?: PartialMessage<DeviceMetricColorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceMetricColorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricColorCode {
    return new DeviceMetricColorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricColorCode {
    return new DeviceMetricColorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricColorCode {
    return new DeviceMetricColorCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricColorCode | PlainMessage<DeviceMetricColorCode> | undefined, b: DeviceMetricColorCode | PlainMessage<DeviceMetricColorCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricColorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceMetricColorCode.Value
 */
export enum DeviceMetricColorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BLACK = 1;
   */
  BLACK = 1,

  /**
   * @generated from enum value: RED = 2;
   */
  RED = 2,

  /**
   * @generated from enum value: GREEN = 3;
   */
  GREEN = 3,

  /**
   * @generated from enum value: YELLOW = 4;
   */
  YELLOW = 4,

  /**
   * @generated from enum value: BLUE = 5;
   */
  BLUE = 5,

  /**
   * @generated from enum value: MAGENTA = 6;
   */
  MAGENTA = 6,

  /**
   * @generated from enum value: CYAN = 7;
   */
  CYAN = 7,

  /**
   * @generated from enum value: WHITE = 8;
   */
  WHITE = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricColorCode_Value)
proto3.util.setEnumType(DeviceMetricColorCode_Value, "google.fhir.r4.core.DeviceMetricColorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BLACK" },
  { no: 2, name: "RED" },
  { no: 3, name: "GREEN" },
  { no: 4, name: "YELLOW" },
  { no: 5, name: "BLUE" },
  { no: 6, name: "MAGENTA" },
  { no: 7, name: "CYAN" },
  { no: 8, name: "WHITE" },
]);

/**
 * Describes the operational status of the DeviceMetric.
 * See http://hl7.org/fhir/metric-operational-status
 *
 * @generated from message google.fhir.r4.core.DeviceMetricOperationalStatusCode
 */
export class DeviceMetricOperationalStatusCode extends Message<DeviceMetricOperationalStatusCode> {
  constructor(data?: PartialMessage<DeviceMetricOperationalStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceMetricOperationalStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceMetricOperationalStatusCode {
    return new DeviceMetricOperationalStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceMetricOperationalStatusCode {
    return new DeviceMetricOperationalStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceMetricOperationalStatusCode {
    return new DeviceMetricOperationalStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceMetricOperationalStatusCode | PlainMessage<DeviceMetricOperationalStatusCode> | undefined, b: DeviceMetricOperationalStatusCode | PlainMessage<DeviceMetricOperationalStatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceMetricOperationalStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value
 */
export enum DeviceMetricOperationalStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ON = 1;
   */
  ON = 1,

  /**
   * @generated from enum value: OFF = 2;
   */
  OFF = 2,

  /**
   * @generated from enum value: STANDBY = 3;
   */
  STANDBY = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceMetricOperationalStatusCode_Value)
proto3.util.setEnumType(DeviceMetricOperationalStatusCode_Value, "google.fhir.r4.core.DeviceMetricOperationalStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ON" },
  { no: 2, name: "OFF" },
  { no: 3, name: "STANDBY" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * The type of name the device is referred by.
 * See http://hl7.org/fhir/device-nametype
 *
 * @generated from message google.fhir.r4.core.DeviceNameTypeCode
 */
export class DeviceNameTypeCode extends Message<DeviceNameTypeCode> {
  constructor(data?: PartialMessage<DeviceNameTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceNameTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceNameTypeCode {
    return new DeviceNameTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceNameTypeCode {
    return new DeviceNameTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceNameTypeCode {
    return new DeviceNameTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceNameTypeCode | PlainMessage<DeviceNameTypeCode> | undefined, b: DeviceNameTypeCode | PlainMessage<DeviceNameTypeCode> | undefined): boolean {
    return proto3.util.equals(DeviceNameTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceNameTypeCode.Value
 */
export enum DeviceNameTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UDI_LABEL_NAME = 1;
   */
  UDI_LABEL_NAME = 1,

  /**
   * @generated from enum value: USER_FRIENDLY_NAME = 2;
   */
  USER_FRIENDLY_NAME = 2,

  /**
   * @generated from enum value: PATIENT_REPORTED_NAME = 3;
   */
  PATIENT_REPORTED_NAME = 3,

  /**
   * @generated from enum value: MANUFACTURER_NAME = 4;
   */
  MANUFACTURER_NAME = 4,

  /**
   * @generated from enum value: MODEL_NAME = 5;
   */
  MODEL_NAME = 5,

  /**
   * @generated from enum value: OTHER = 6;
   */
  OTHER = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceNameTypeCode_Value)
proto3.util.setEnumType(DeviceNameTypeCode_Value, "google.fhir.r4.core.DeviceNameTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UDI_LABEL_NAME" },
  { no: 2, name: "USER_FRIENDLY_NAME" },
  { no: 3, name: "PATIENT_REPORTED_NAME" },
  { no: 4, name: "MANUFACTURER_NAME" },
  { no: 5, name: "MODEL_NAME" },
  { no: 6, name: "OTHER" },
]);

/**
 * A coded concept indicating the current status of the Device Usage.
 * See http://hl7.org/fhir/device-statement-status
 *
 * @generated from message google.fhir.r4.core.DeviceUseStatementStatusCode
 */
export class DeviceUseStatementStatusCode extends Message<DeviceUseStatementStatusCode> {
  constructor(data?: PartialMessage<DeviceUseStatementStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DeviceUseStatementStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeviceUseStatementStatusCode {
    return new DeviceUseStatementStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeviceUseStatementStatusCode {
    return new DeviceUseStatementStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeviceUseStatementStatusCode {
    return new DeviceUseStatementStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DeviceUseStatementStatusCode | PlainMessage<DeviceUseStatementStatusCode> | undefined, b: DeviceUseStatementStatusCode | PlainMessage<DeviceUseStatementStatusCode> | undefined): boolean {
    return proto3.util.equals(DeviceUseStatementStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DeviceUseStatementStatusCode.Value
 */
export enum DeviceUseStatementStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: INTENDED = 4;
   */
  INTENDED = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * @generated from enum value: ON_HOLD = 6;
   */
  ON_HOLD = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(DeviceUseStatementStatusCode_Value)
proto3.util.setEnumType(DeviceUseStatementStatusCode_Value, "google.fhir.r4.core.DeviceUseStatementStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "INTENDED" },
  { no: 5, name: "STOPPED" },
  { no: 6, name: "ON_HOLD" },
]);

/**
 * The status of the diagnostic report.
 * See http://hl7.org/fhir/diagnostic-report-status
 *
 * @generated from message google.fhir.r4.core.DiagnosticReportStatusCode
 */
export class DiagnosticReportStatusCode extends Message<DiagnosticReportStatusCode> {
  constructor(data?: PartialMessage<DiagnosticReportStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiagnosticReportStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiagnosticReportStatusCode {
    return new DiagnosticReportStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiagnosticReportStatusCode {
    return new DiagnosticReportStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiagnosticReportStatusCode {
    return new DiagnosticReportStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DiagnosticReportStatusCode | PlainMessage<DiagnosticReportStatusCode> | undefined, b: DiagnosticReportStatusCode | PlainMessage<DiagnosticReportStatusCode> | undefined): boolean {
    return proto3.util.equals(DiagnosticReportStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DiagnosticReportStatusCode.Value
 */
export enum DiagnosticReportStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REGISTERED = 1;
   */
  REGISTERED = 1,

  /**
   * @generated from enum value: PARTIAL = 2;
   */
  PARTIAL = 2,

  /**
   * @generated from enum value: PRELIMINARY = 3;
   */
  PRELIMINARY = 3,

  /**
   * @generated from enum value: FINAL = 4;
   */
  FINAL = 4,

  /**
   * @generated from enum value: AMENDED = 5;
   */
  AMENDED = 5,

  /**
   * @generated from enum value: CORRECTED = 6;
   */
  CORRECTED = 6,

  /**
   * @generated from enum value: APPENDED = 7;
   */
  APPENDED = 7,

  /**
   * @generated from enum value: CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 9;
   */
  ENTERED_IN_ERROR = 9,

  /**
   * @generated from enum value: UNKNOWN = 10;
   */
  UNKNOWN = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(DiagnosticReportStatusCode_Value)
proto3.util.setEnumType(DiagnosticReportStatusCode_Value, "google.fhir.r4.core.DiagnosticReportStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REGISTERED" },
  { no: 2, name: "PARTIAL" },
  { no: 3, name: "PRELIMINARY" },
  { no: 4, name: "FINAL" },
  { no: 5, name: "AMENDED" },
  { no: 6, name: "CORRECTED" },
  { no: 7, name: "APPENDED" },
  { no: 8, name: "CANCELLED" },
  { no: 9, name: "ENTERED_IN_ERROR" },
  { no: 10, name: "UNKNOWN" },
]);

/**
 * How an element value is interpreted when discrimination is evaluated.
 * See http://hl7.org/fhir/discriminator-type
 *
 * @generated from message google.fhir.r4.core.DiscriminatorTypeCode
 */
export class DiscriminatorTypeCode extends Message<DiscriminatorTypeCode> {
  constructor(data?: PartialMessage<DiscriminatorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DiscriminatorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DiscriminatorTypeCode {
    return new DiscriminatorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DiscriminatorTypeCode {
    return new DiscriminatorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DiscriminatorTypeCode {
    return new DiscriminatorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DiscriminatorTypeCode | PlainMessage<DiscriminatorTypeCode> | undefined, b: DiscriminatorTypeCode | PlainMessage<DiscriminatorTypeCode> | undefined): boolean {
    return proto3.util.equals(DiscriminatorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DiscriminatorTypeCode.Value
 */
export enum DiscriminatorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: VALUE = 1;
   */
  VALUE = 1,

  /**
   * @generated from enum value: EXISTS = 2;
   */
  EXISTS = 2,

  /**
   * @generated from enum value: PATTERN = 3;
   */
  PATTERN = 3,

  /**
   * @generated from enum value: TYPE = 4;
   */
  TYPE = 4,

  /**
   * @generated from enum value: PROFILE = 5;
   */
  PROFILE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(DiscriminatorTypeCode_Value)
proto3.util.setEnumType(DiscriminatorTypeCode_Value, "google.fhir.r4.core.DiscriminatorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "VALUE" },
  { no: 2, name: "EXISTS" },
  { no: 3, name: "PATTERN" },
  { no: 4, name: "TYPE" },
  { no: 5, name: "PROFILE" },
]);

/**
 * Whether the application produces or consumes documents.
 * See http://hl7.org/fhir/document-mode
 *
 * @generated from message google.fhir.r4.core.DocumentModeCode
 */
export class DocumentModeCode extends Message<DocumentModeCode> {
  constructor(data?: PartialMessage<DocumentModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentModeCode {
    return new DocumentModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentModeCode {
    return new DocumentModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentModeCode {
    return new DocumentModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentModeCode | PlainMessage<DocumentModeCode> | undefined, b: DocumentModeCode | PlainMessage<DocumentModeCode> | undefined): boolean {
    return proto3.util.equals(DocumentModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DocumentModeCode.Value
 */
export enum DocumentModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PRODUCER = 1;
   */
  PRODUCER = 1,

  /**
   * @generated from enum value: CONSUMER = 2;
   */
  CONSUMER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(DocumentModeCode_Value)
proto3.util.setEnumType(DocumentModeCode_Value, "google.fhir.r4.core.DocumentModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PRODUCER" },
  { no: 2, name: "CONSUMER" },
]);

/**
 * The status of the document reference.
 * See http://hl7.org/fhir/document-reference-status
 *
 * @generated from message google.fhir.r4.core.DocumentReferenceStatusCode
 */
export class DocumentReferenceStatusCode extends Message<DocumentReferenceStatusCode> {
  constructor(data?: PartialMessage<DocumentReferenceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentReferenceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentReferenceStatusCode {
    return new DocumentReferenceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentReferenceStatusCode {
    return new DocumentReferenceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentReferenceStatusCode {
    return new DocumentReferenceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentReferenceStatusCode | PlainMessage<DocumentReferenceStatusCode> | undefined, b: DocumentReferenceStatusCode | PlainMessage<DocumentReferenceStatusCode> | undefined): boolean {
    return proto3.util.equals(DocumentReferenceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DocumentReferenceStatusCode.Value
 */
export enum DocumentReferenceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CURRENT = 1;
   */
  CURRENT = 1,

  /**
   * @generated from enum value: SUPERSEDED = 2;
   */
  SUPERSEDED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DocumentReferenceStatusCode_Value)
proto3.util.setEnumType(DocumentReferenceStatusCode_Value, "google.fhir.r4.core.DocumentReferenceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CURRENT" },
  { no: 2, name: "SUPERSEDED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * The type of relationship between documents.
 * See http://hl7.org/fhir/document-relationship-type
 *
 * @generated from message google.fhir.r4.core.DocumentRelationshipTypeCode
 */
export class DocumentRelationshipTypeCode extends Message<DocumentRelationshipTypeCode> {
  constructor(data?: PartialMessage<DocumentRelationshipTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.DocumentRelationshipTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DocumentRelationshipTypeCode {
    return new DocumentRelationshipTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DocumentRelationshipTypeCode {
    return new DocumentRelationshipTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DocumentRelationshipTypeCode {
    return new DocumentRelationshipTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: DocumentRelationshipTypeCode | PlainMessage<DocumentRelationshipTypeCode> | undefined, b: DocumentRelationshipTypeCode | PlainMessage<DocumentRelationshipTypeCode> | undefined): boolean {
    return proto3.util.equals(DocumentRelationshipTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.DocumentRelationshipTypeCode.Value
 */
export enum DocumentRelationshipTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REPLACES = 1;
   */
  REPLACES = 1,

  /**
   * @generated from enum value: TRANSFORMS = 2;
   */
  TRANSFORMS = 2,

  /**
   * @generated from enum value: SIGNS = 3;
   */
  SIGNS = 3,

  /**
   * @generated from enum value: APPENDS = 4;
   */
  APPENDS = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DocumentRelationshipTypeCode_Value)
proto3.util.setEnumType(DocumentRelationshipTypeCode_Value, "google.fhir.r4.core.DocumentRelationshipTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REPLACES" },
  { no: 2, name: "TRANSFORMS" },
  { no: 3, name: "SIGNS" },
  { no: 4, name: "APPENDS" },
]);

/**
 * A code specifying the types of information being requested.
 * See http://hl7.org/fhir/eligibilityrequest-purpose
 *
 * @generated from message google.fhir.r4.core.EligibilityRequestPurposeCode
 */
export class EligibilityRequestPurposeCode extends Message<EligibilityRequestPurposeCode> {
  constructor(data?: PartialMessage<EligibilityRequestPurposeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EligibilityRequestPurposeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityRequestPurposeCode {
    return new EligibilityRequestPurposeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityRequestPurposeCode {
    return new EligibilityRequestPurposeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityRequestPurposeCode {
    return new EligibilityRequestPurposeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityRequestPurposeCode | PlainMessage<EligibilityRequestPurposeCode> | undefined, b: EligibilityRequestPurposeCode | PlainMessage<EligibilityRequestPurposeCode> | undefined): boolean {
    return proto3.util.equals(EligibilityRequestPurposeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EligibilityRequestPurposeCode.Value
 */
export enum EligibilityRequestPurposeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AUTH_REQUIREMENTS = 1;
   */
  AUTH_REQUIREMENTS = 1,

  /**
   * @generated from enum value: BENEFITS = 2;
   */
  BENEFITS = 2,

  /**
   * @generated from enum value: DISCOVERY = 3;
   */
  DISCOVERY = 3,

  /**
   * @generated from enum value: VALIDATION = 4;
   */
  VALIDATION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(EligibilityRequestPurposeCode_Value)
proto3.util.setEnumType(EligibilityRequestPurposeCode_Value, "google.fhir.r4.core.EligibilityRequestPurposeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AUTH_REQUIREMENTS" },
  { no: 2, name: "BENEFITS" },
  { no: 3, name: "DISCOVERY" },
  { no: 4, name: "VALIDATION" },
]);

/**
 * A code specifying the types of information being requested.
 * See http://hl7.org/fhir/eligibilityresponse-purpose
 *
 * @generated from message google.fhir.r4.core.EligibilityResponsePurposeCode
 */
export class EligibilityResponsePurposeCode extends Message<EligibilityResponsePurposeCode> {
  constructor(data?: PartialMessage<EligibilityResponsePurposeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EligibilityResponsePurposeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EligibilityResponsePurposeCode {
    return new EligibilityResponsePurposeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EligibilityResponsePurposeCode {
    return new EligibilityResponsePurposeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EligibilityResponsePurposeCode {
    return new EligibilityResponsePurposeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EligibilityResponsePurposeCode | PlainMessage<EligibilityResponsePurposeCode> | undefined, b: EligibilityResponsePurposeCode | PlainMessage<EligibilityResponsePurposeCode> | undefined): boolean {
    return proto3.util.equals(EligibilityResponsePurposeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EligibilityResponsePurposeCode.Value
 */
export enum EligibilityResponsePurposeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AUTH_REQUIREMENTS = 1;
   */
  AUTH_REQUIREMENTS = 1,

  /**
   * @generated from enum value: BENEFITS = 2;
   */
  BENEFITS = 2,

  /**
   * @generated from enum value: DISCOVERY = 3;
   */
  DISCOVERY = 3,

  /**
   * @generated from enum value: VALIDATION = 4;
   */
  VALIDATION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(EligibilityResponsePurposeCode_Value)
proto3.util.setEnumType(EligibilityResponsePurposeCode_Value, "google.fhir.r4.core.EligibilityResponsePurposeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AUTH_REQUIREMENTS" },
  { no: 2, name: "BENEFITS" },
  { no: 3, name: "DISCOVERY" },
  { no: 4, name: "VALIDATION" },
]);

/**
 * Controls how multiple enableWhen values are interpreted -  whether all or any
 * must be true. See http://hl7.org/fhir/questionnaire-enable-behavior
 *
 * @generated from message google.fhir.r4.core.EnableWhenBehaviorCode
 */
export class EnableWhenBehaviorCode extends Message<EnableWhenBehaviorCode> {
  constructor(data?: PartialMessage<EnableWhenBehaviorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EnableWhenBehaviorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableWhenBehaviorCode {
    return new EnableWhenBehaviorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableWhenBehaviorCode {
    return new EnableWhenBehaviorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableWhenBehaviorCode {
    return new EnableWhenBehaviorCode().fromJsonString(jsonString, options);
  }

  static equals(a: EnableWhenBehaviorCode | PlainMessage<EnableWhenBehaviorCode> | undefined, b: EnableWhenBehaviorCode | PlainMessage<EnableWhenBehaviorCode> | undefined): boolean {
    return proto3.util.equals(EnableWhenBehaviorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EnableWhenBehaviorCode.Value
 */
export enum EnableWhenBehaviorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALL = 1;
   */
  ALL = 1,

  /**
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(EnableWhenBehaviorCode_Value)
proto3.util.setEnumType(EnableWhenBehaviorCode_Value, "google.fhir.r4.core.EnableWhenBehaviorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALL" },
  { no: 2, name: "ANY" },
]);

/**
 * The status of the location.
 * See http://hl7.org/fhir/encounter-location-status
 *
 * @generated from message google.fhir.r4.core.EncounterLocationStatusCode
 */
export class EncounterLocationStatusCode extends Message<EncounterLocationStatusCode> {
  constructor(data?: PartialMessage<EncounterLocationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EncounterLocationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterLocationStatusCode {
    return new EncounterLocationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterLocationStatusCode {
    return new EncounterLocationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterLocationStatusCode {
    return new EncounterLocationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterLocationStatusCode | PlainMessage<EncounterLocationStatusCode> | undefined, b: EncounterLocationStatusCode | PlainMessage<EncounterLocationStatusCode> | undefined): boolean {
    return proto3.util.equals(EncounterLocationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EncounterLocationStatusCode.Value
 */
export enum EncounterLocationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: RESERVED = 3;
   */
  RESERVED = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(EncounterLocationStatusCode_Value)
proto3.util.setEnumType(EncounterLocationStatusCode_Value, "google.fhir.r4.core.EncounterLocationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "RESERVED" },
  { no: 4, name: "COMPLETED" },
]);

/**
 * Current state of the encounter.
 * See http://hl7.org/fhir/encounter-status
 *
 * @generated from message google.fhir.r4.core.EncounterStatusCode
 */
export class EncounterStatusCode extends Message<EncounterStatusCode> {
  constructor(data?: PartialMessage<EncounterStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EncounterStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EncounterStatusCode {
    return new EncounterStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EncounterStatusCode {
    return new EncounterStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EncounterStatusCode {
    return new EncounterStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EncounterStatusCode | PlainMessage<EncounterStatusCode> | undefined, b: EncounterStatusCode | PlainMessage<EncounterStatusCode> | undefined): boolean {
    return proto3.util.equals(EncounterStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EncounterStatusCode.Value
 */
export enum EncounterStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: ARRIVED = 2;
   */
  ARRIVED = 2,

  /**
   * @generated from enum value: TRIAGED = 3;
   */
  TRIAGED = 3,

  /**
   * @generated from enum value: IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * @generated from enum value: ONLEAVE = 5;
   */
  ONLEAVE = 5,

  /**
   * @generated from enum value: FINISHED = 6;
   */
  FINISHED = 6,

  /**
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 8;
   */
  ENTERED_IN_ERROR = 8,

  /**
   * @generated from enum value: UNKNOWN = 9;
   */
  UNKNOWN = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(EncounterStatusCode_Value)
proto3.util.setEnumType(EncounterStatusCode_Value, "google.fhir.r4.core.EncounterStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "ARRIVED" },
  { no: 3, name: "TRIAGED" },
  { no: 4, name: "IN_PROGRESS" },
  { no: 5, name: "ONLEAVE" },
  { no: 6, name: "FINISHED" },
  { no: 7, name: "CANCELLED" },
  { no: 8, name: "ENTERED_IN_ERROR" },
  { no: 9, name: "UNKNOWN" },
]);

/**
 * The status of the endpoint.
 * See http://hl7.org/fhir/endpoint-status
 *
 * @generated from message google.fhir.r4.core.EndpointStatusCode
 */
export class EndpointStatusCode extends Message<EndpointStatusCode> {
  constructor(data?: PartialMessage<EndpointStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EndpointStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndpointStatusCode {
    return new EndpointStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndpointStatusCode {
    return new EndpointStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndpointStatusCode {
    return new EndpointStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EndpointStatusCode | PlainMessage<EndpointStatusCode> | undefined, b: EndpointStatusCode | PlainMessage<EndpointStatusCode> | undefined): boolean {
    return proto3.util.equals(EndpointStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EndpointStatusCode.Value
 */
export enum EndpointStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: OFF = 4;
   */
  OFF = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: TEST = 6;
   */
  TEST = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(EndpointStatusCode_Value)
proto3.util.setEnumType(EndpointStatusCode_Value, "google.fhir.r4.core.EndpointStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "SUSPENDED" },
  { no: 3, name: "ERROR" },
  { no: 4, name: "OFF" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "TEST" },
]);

/**
 * The status of the episode of care.
 * See http://hl7.org/fhir/episode-of-care-status
 *
 * @generated from message google.fhir.r4.core.EpisodeOfCareStatusCode
 */
export class EpisodeOfCareStatusCode extends Message<EpisodeOfCareStatusCode> {
  constructor(data?: PartialMessage<EpisodeOfCareStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EpisodeOfCareStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpisodeOfCareStatusCode {
    return new EpisodeOfCareStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpisodeOfCareStatusCode {
    return new EpisodeOfCareStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpisodeOfCareStatusCode {
    return new EpisodeOfCareStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EpisodeOfCareStatusCode | PlainMessage<EpisodeOfCareStatusCode> | undefined, b: EpisodeOfCareStatusCode | PlainMessage<EpisodeOfCareStatusCode> | undefined): boolean {
    return proto3.util.equals(EpisodeOfCareStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EpisodeOfCareStatusCode.Value
 */
export enum EpisodeOfCareStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PLANNED = 1;
   */
  PLANNED = 1,

  /**
   * @generated from enum value: WAITLIST = 2;
   */
  WAITLIST = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: ONHOLD = 4;
   */
  ONHOLD = 4,

  /**
   * @generated from enum value: FINISHED = 5;
   */
  FINISHED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 7;
   */
  ENTERED_IN_ERROR = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(EpisodeOfCareStatusCode_Value)
proto3.util.setEnumType(EpisodeOfCareStatusCode_Value, "google.fhir.r4.core.EpisodeOfCareStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PLANNED" },
  { no: 2, name: "WAITLIST" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "ONHOLD" },
  { no: 5, name: "FINISHED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "ENTERED_IN_ERROR" },
]);

/**
 * The mode of a message capability statement.
 * See http://hl7.org/fhir/event-capability-mode
 *
 * @generated from message google.fhir.r4.core.EventCapabilityModeCode
 */
export class EventCapabilityModeCode extends Message<EventCapabilityModeCode> {
  constructor(data?: PartialMessage<EventCapabilityModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EventCapabilityModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventCapabilityModeCode {
    return new EventCapabilityModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventCapabilityModeCode {
    return new EventCapabilityModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventCapabilityModeCode {
    return new EventCapabilityModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EventCapabilityModeCode | PlainMessage<EventCapabilityModeCode> | undefined, b: EventCapabilityModeCode | PlainMessage<EventCapabilityModeCode> | undefined): boolean {
    return proto3.util.equals(EventCapabilityModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EventCapabilityModeCode.Value
 */
export enum EventCapabilityModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SENDER = 1;
   */
  SENDER = 1,

  /**
   * @generated from enum value: RECEIVER = 2;
   */
  RECEIVER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(EventCapabilityModeCode_Value)
proto3.util.setEnumType(EventCapabilityModeCode_Value, "google.fhir.r4.core.EventCapabilityModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SENDER" },
  { no: 2, name: "RECEIVER" },
]);

/**
 * Codes identifying the lifecycle stage of an event.
 * See http://hl7.org/fhir/event-status
 *
 * @generated from message google.fhir.r4.core.EventStatusCode
 */
export class EventStatusCode extends Message<EventStatusCode> {
  constructor(data?: PartialMessage<EventStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EventStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventStatusCode {
    return new EventStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventStatusCode {
    return new EventStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventStatusCode {
    return new EventStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: EventStatusCode | PlainMessage<EventStatusCode> | undefined, b: EventStatusCode | PlainMessage<EventStatusCode> | undefined): boolean {
    return proto3.util.equals(EventStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EventStatusCode.Value
 */
export enum EventStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PREPARATION = 1;
   */
  PREPARATION = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: NOT_DONE = 3;
   */
  NOT_DONE = 3,

  /**
   * @generated from enum value: ON_HOLD = 4;
   */
  ON_HOLD = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * @generated from enum value: COMPLETED = 6;
   */
  COMPLETED = 6,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 7;
   */
  ENTERED_IN_ERROR = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(EventStatusCode_Value)
proto3.util.setEnumType(EventStatusCode_Value, "google.fhir.r4.core.EventStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PREPARATION" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "NOT_DONE" },
  { no: 4, name: "ON_HOLD" },
  { no: 5, name: "STOPPED" },
  { no: 6, name: "COMPLETED" },
  { no: 7, name: "ENTERED_IN_ERROR" },
  { no: 8, name: "UNKNOWN" },
]);

/**
 * Real world event relating to the schedule.
 * See http://hl7.org/fhir/event-timing
 *
 * @generated from message google.fhir.r4.core.EventTimingCode
 */
export class EventTimingCode extends Message<EventTimingCode> {
  constructor(data?: PartialMessage<EventTimingCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EventTimingCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventTimingCode {
    return new EventTimingCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventTimingCode {
    return new EventTimingCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventTimingCode {
    return new EventTimingCode().fromJsonString(jsonString, options);
  }

  static equals(a: EventTimingCode | PlainMessage<EventTimingCode> | undefined, b: EventTimingCode | PlainMessage<EventTimingCode> | undefined): boolean {
    return proto3.util.equals(EventTimingCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EventTimingCode.Value
 */
export enum EventTimingCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MORN = 1;
   */
  MORN = 1,

  /**
   * @generated from enum value: MORN_EARLY = 2;
   */
  MORN_EARLY = 2,

  /**
   * @generated from enum value: MORN_LATE = 3;
   */
  MORN_LATE = 3,

  /**
   * @generated from enum value: NOON = 4;
   */
  NOON = 4,

  /**
   * @generated from enum value: AFT = 5;
   */
  AFT = 5,

  /**
   * @generated from enum value: AFT_EARLY = 6;
   */
  AFT_EARLY = 6,

  /**
   * @generated from enum value: AFT_LATE = 7;
   */
  AFT_LATE = 7,

  /**
   * @generated from enum value: EVE = 8;
   */
  EVE = 8,

  /**
   * @generated from enum value: EVE_EARLY = 9;
   */
  EVE_EARLY = 9,

  /**
   * @generated from enum value: EVE_LATE = 10;
   */
  EVE_LATE = 10,

  /**
   * @generated from enum value: NIGHT = 11;
   */
  NIGHT = 11,

  /**
   * @generated from enum value: PHS = 12;
   */
  PHS = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(EventTimingCode_Value)
proto3.util.setEnumType(EventTimingCode_Value, "google.fhir.r4.core.EventTimingCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MORN" },
  { no: 2, name: "MORN_EARLY" },
  { no: 3, name: "MORN_LATE" },
  { no: 4, name: "NOON" },
  { no: 5, name: "AFT" },
  { no: 6, name: "AFT_EARLY" },
  { no: 7, name: "AFT_LATE" },
  { no: 8, name: "EVE" },
  { no: 9, name: "EVE_EARLY" },
  { no: 10, name: "EVE_LATE" },
  { no: 11, name: "NIGHT" },
  { no: 12, name: "PHS" },
]);

/**
 * The possible types of variables for exposures or outcomes (E.g. Dichotomous,
 * Continuous, Descriptive). See http://hl7.org/fhir/variable-type
 *
 * @generated from message google.fhir.r4.core.EvidenceVariableTypeCode
 */
export class EvidenceVariableTypeCode extends Message<EvidenceVariableTypeCode> {
  constructor(data?: PartialMessage<EvidenceVariableTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.EvidenceVariableTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EvidenceVariableTypeCode {
    return new EvidenceVariableTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EvidenceVariableTypeCode {
    return new EvidenceVariableTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EvidenceVariableTypeCode {
    return new EvidenceVariableTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: EvidenceVariableTypeCode | PlainMessage<EvidenceVariableTypeCode> | undefined, b: EvidenceVariableTypeCode | PlainMessage<EvidenceVariableTypeCode> | undefined): boolean {
    return proto3.util.equals(EvidenceVariableTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.EvidenceVariableTypeCode.Value
 */
export enum EvidenceVariableTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DICHOTOMOUS = 1;
   */
  DICHOTOMOUS = 1,

  /**
   * @generated from enum value: CONTINUOUS = 2;
   */
  CONTINUOUS = 2,

  /**
   * @generated from enum value: DESCRIPTIVE = 3;
   */
  DESCRIPTIVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(EvidenceVariableTypeCode_Value)
proto3.util.setEnumType(EvidenceVariableTypeCode_Value, "google.fhir.r4.core.EvidenceVariableTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DICHOTOMOUS" },
  { no: 2, name: "CONTINUOUS" },
  { no: 3, name: "DESCRIPTIVE" },
]);

/**
 * The type of actor - system or human.
 * See http://hl7.org/fhir/examplescenario-actor-type
 *
 * @generated from message google.fhir.r4.core.ExampleScenarioActorTypeCode
 */
export class ExampleScenarioActorTypeCode extends Message<ExampleScenarioActorTypeCode> {
  constructor(data?: PartialMessage<ExampleScenarioActorTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExampleScenarioActorTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExampleScenarioActorTypeCode {
    return new ExampleScenarioActorTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExampleScenarioActorTypeCode {
    return new ExampleScenarioActorTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExampleScenarioActorTypeCode {
    return new ExampleScenarioActorTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExampleScenarioActorTypeCode | PlainMessage<ExampleScenarioActorTypeCode> | undefined, b: ExampleScenarioActorTypeCode | PlainMessage<ExampleScenarioActorTypeCode> | undefined): boolean {
    return proto3.util.equals(ExampleScenarioActorTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ExampleScenarioActorTypeCode.Value
 */
export enum ExampleScenarioActorTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PERSON = 1;
   */
  PERSON = 1,

  /**
   * @generated from enum value: ENTITY = 2;
   */
  ENTITY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ExampleScenarioActorTypeCode_Value)
proto3.util.setEnumType(ExampleScenarioActorTypeCode_Value, "google.fhir.r4.core.ExampleScenarioActorTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PERSON" },
  { no: 2, name: "ENTITY" },
]);

/**
 * Declares what the source of a parameter is.
 * See http://terminology.hl7.org/CodeSystem/expansion-parameter-source
 *
 * @generated from message google.fhir.r4.core.ExpansionParameterSourceCode
 */
export class ExpansionParameterSourceCode extends Message<ExpansionParameterSourceCode> {
  constructor(data?: PartialMessage<ExpansionParameterSourceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExpansionParameterSourceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionParameterSourceCode {
    return new ExpansionParameterSourceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionParameterSourceCode {
    return new ExpansionParameterSourceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionParameterSourceCode {
    return new ExpansionParameterSourceCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionParameterSourceCode | PlainMessage<ExpansionParameterSourceCode> | undefined, b: ExpansionParameterSourceCode | PlainMessage<ExpansionParameterSourceCode> | undefined): boolean {
    return proto3.util.equals(ExpansionParameterSourceCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ExpansionParameterSourceCode.Value
 */
export enum ExpansionParameterSourceCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INPUT = 1;
   */
  INPUT = 1,

  /**
   * @generated from enum value: SERVER = 2;
   */
  SERVER = 2,

  /**
   * @generated from enum value: CODESYSTEM = 3;
   */
  CODESYSTEM = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ExpansionParameterSourceCode_Value)
proto3.util.setEnumType(ExpansionParameterSourceCode_Value, "google.fhir.r4.core.ExpansionParameterSourceCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INPUT" },
  { no: 2, name: "SERVER" },
  { no: 3, name: "CODESYSTEM" },
]);

/**
 * Defines how concepts are processed into the expansion when it's for UI
 * presentation. See
 * http://terminology.hl7.org/CodeSystem/expansion-processing-rule
 *
 * @generated from message google.fhir.r4.core.ExpansionProcessingRuleCode
 */
export class ExpansionProcessingRuleCode extends Message<ExpansionProcessingRuleCode> {
  constructor(data?: PartialMessage<ExpansionProcessingRuleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExpansionProcessingRuleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpansionProcessingRuleCode {
    return new ExpansionProcessingRuleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpansionProcessingRuleCode {
    return new ExpansionProcessingRuleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpansionProcessingRuleCode {
    return new ExpansionProcessingRuleCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExpansionProcessingRuleCode | PlainMessage<ExpansionProcessingRuleCode> | undefined, b: ExpansionProcessingRuleCode | PlainMessage<ExpansionProcessingRuleCode> | undefined): boolean {
    return proto3.util.equals(ExpansionProcessingRuleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ExpansionProcessingRuleCode.Value
 */
export enum ExpansionProcessingRuleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALL_CODES = 1;
   */
  ALL_CODES = 1,

  /**
   * @generated from enum value: UNGROUPED = 2;
   */
  UNGROUPED = 2,

  /**
   * @generated from enum value: GROUPS_ONLY = 3;
   */
  GROUPS_ONLY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ExpansionProcessingRuleCode_Value)
proto3.util.setEnumType(ExpansionProcessingRuleCode_Value, "google.fhir.r4.core.ExpansionProcessingRuleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALL_CODES" },
  { no: 2, name: "UNGROUPED" },
  { no: 3, name: "GROUPS_ONLY" },
]);

/**
 * A code specifying the state of the resource instance.
 * See http://hl7.org/fhir/explanationofbenefit-status
 *
 * @generated from message google.fhir.r4.core.ExplanationOfBenefitStatusCode
 */
export class ExplanationOfBenefitStatusCode extends Message<ExplanationOfBenefitStatusCode> {
  constructor(data?: PartialMessage<ExplanationOfBenefitStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExplanationOfBenefitStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExplanationOfBenefitStatusCode {
    return new ExplanationOfBenefitStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExplanationOfBenefitStatusCode {
    return new ExplanationOfBenefitStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExplanationOfBenefitStatusCode {
    return new ExplanationOfBenefitStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExplanationOfBenefitStatusCode | PlainMessage<ExplanationOfBenefitStatusCode> | undefined, b: ExplanationOfBenefitStatusCode | PlainMessage<ExplanationOfBenefitStatusCode> | undefined): boolean {
    return proto3.util.equals(ExplanationOfBenefitStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ExplanationOfBenefitStatusCode.Value
 */
export enum ExplanationOfBenefitStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * @generated from enum value: DRAFT = 3;
   */
  DRAFT = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ExplanationOfBenefitStatusCode_Value)
proto3.util.setEnumType(ExplanationOfBenefitStatusCode_Value, "google.fhir.r4.core.ExplanationOfBenefitStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "CANCELLED" },
  { no: 3, name: "DRAFT" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * Whether the results by exposure is describing the results for the primary
 * exposure of interest (exposure) or the alternative state
 * (exposureAlternative). See http://hl7.org/fhir/exposure-state
 *
 * @generated from message google.fhir.r4.core.ExposureStateCode
 */
export class ExposureStateCode extends Message<ExposureStateCode> {
  constructor(data?: PartialMessage<ExposureStateCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExposureStateCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExposureStateCode {
    return new ExposureStateCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExposureStateCode {
    return new ExposureStateCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExposureStateCode {
    return new ExposureStateCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExposureStateCode | PlainMessage<ExposureStateCode> | undefined, b: ExposureStateCode | PlainMessage<ExposureStateCode> | undefined): boolean {
    return proto3.util.equals(ExposureStateCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ExposureStateCode.Value
 */
export enum ExposureStateCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EXPOSURE = 1;
   */
  EXPOSURE = 1,

  /**
   * @generated from enum value: EXPOSURE_ALTERNATIVE = 2;
   */
  EXPOSURE_ALTERNATIVE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ExposureStateCode_Value)
proto3.util.setEnumType(ExposureStateCode_Value, "google.fhir.r4.core.ExposureStateCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EXPOSURE" },
  { no: 2, name: "EXPOSURE_ALTERNATIVE" },
]);

/**
 * How an extension context is interpreted.
 * See http://hl7.org/fhir/extension-context-type
 *
 * @generated from message google.fhir.r4.core.ExtensionContextTypeCode
 */
export class ExtensionContextTypeCode extends Message<ExtensionContextTypeCode> {
  constructor(data?: PartialMessage<ExtensionContextTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ExtensionContextTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExtensionContextTypeCode {
    return new ExtensionContextTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExtensionContextTypeCode {
    return new ExtensionContextTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExtensionContextTypeCode {
    return new ExtensionContextTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ExtensionContextTypeCode | PlainMessage<ExtensionContextTypeCode> | undefined, b: ExtensionContextTypeCode | PlainMessage<ExtensionContextTypeCode> | undefined): boolean {
    return proto3.util.equals(ExtensionContextTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ExtensionContextTypeCode.Value
 */
export enum ExtensionContextTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FHIRPATH = 1;
   */
  FHIRPATH = 1,

  /**
   * @generated from enum value: ELEMENT = 2;
   */
  ELEMENT = 2,

  /**
   * @generated from enum value: EXTENSION = 3;
   */
  EXTENSION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ExtensionContextTypeCode_Value)
proto3.util.setEnumType(ExtensionContextTypeCode_Value, "google.fhir.r4.core.ExtensionContextTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FHIRPATH" },
  { no: 2, name: "ELEMENT" },
  { no: 3, name: "EXTENSION" },
]);

/**
 * The availability status of the device.
 * See http://hl7.org/fhir/device-status
 *
 * @generated from message google.fhir.r4.core.FHIRDeviceStatusCode
 */
export class FHIRDeviceStatusCode extends Message<FHIRDeviceStatusCode> {
  constructor(data?: PartialMessage<FHIRDeviceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FHIRDeviceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRDeviceStatusCode {
    return new FHIRDeviceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRDeviceStatusCode {
    return new FHIRDeviceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRDeviceStatusCode {
    return new FHIRDeviceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRDeviceStatusCode | PlainMessage<FHIRDeviceStatusCode> | undefined, b: FHIRDeviceStatusCode | PlainMessage<FHIRDeviceStatusCode> | undefined): boolean {
    return proto3.util.equals(FHIRDeviceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FHIRDeviceStatusCode.Value
 */
export enum FHIRDeviceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRDeviceStatusCode_Value)
proto3.util.setEnumType(FHIRDeviceStatusCode_Value, "google.fhir.r4.core.FHIRDeviceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * The set of interactions defined by the RESTful part of the FHIR
 * specification. See http://hl7.org/fhir/restful-interaction
 *
 * @generated from message google.fhir.r4.core.FHIRRestfulInteractionsCode
 */
export class FHIRRestfulInteractionsCode extends Message<FHIRRestfulInteractionsCode> {
  constructor(data?: PartialMessage<FHIRRestfulInteractionsCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FHIRRestfulInteractionsCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRRestfulInteractionsCode {
    return new FHIRRestfulInteractionsCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRRestfulInteractionsCode {
    return new FHIRRestfulInteractionsCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRRestfulInteractionsCode {
    return new FHIRRestfulInteractionsCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRRestfulInteractionsCode | PlainMessage<FHIRRestfulInteractionsCode> | undefined, b: FHIRRestfulInteractionsCode | PlainMessage<FHIRRestfulInteractionsCode> | undefined): boolean {
    return proto3.util.equals(FHIRRestfulInteractionsCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FHIRRestfulInteractionsCode.Value
 */
export enum FHIRRestfulInteractionsCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: READ = 1;
   */
  READ = 1,

  /**
   * @generated from enum value: VREAD = 2;
   */
  VREAD = 2,

  /**
   * @generated from enum value: UPDATE = 3;
   */
  UPDATE = 3,

  /**
   * @generated from enum value: PATCH = 4;
   */
  PATCH = 4,

  /**
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * @generated from enum value: HISTORY = 6;
   */
  HISTORY = 6,

  /**
   * @generated from enum value: HISTORY_INSTANCE = 7;
   */
  HISTORY_INSTANCE = 7,

  /**
   * @generated from enum value: HISTORY_TYPE = 8;
   */
  HISTORY_TYPE = 8,

  /**
   * @generated from enum value: HISTORY_SYSTEM = 9;
   */
  HISTORY_SYSTEM = 9,

  /**
   * @generated from enum value: CREATE = 10;
   */
  CREATE = 10,

  /**
   * @generated from enum value: SEARCH = 11;
   */
  SEARCH = 11,

  /**
   * @generated from enum value: SEARCH_TYPE = 12;
   */
  SEARCH_TYPE = 12,

  /**
   * @generated from enum value: SEARCH_SYSTEM = 13;
   */
  SEARCH_SYSTEM = 13,

  /**
   * @generated from enum value: CAPABILITIES = 14;
   */
  CAPABILITIES = 14,

  /**
   * @generated from enum value: TRANSACTION = 15;
   */
  TRANSACTION = 15,

  /**
   * @generated from enum value: BATCH = 16;
   */
  BATCH = 16,

  /**
   * @generated from enum value: OPERATION = 17;
   */
  OPERATION = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRRestfulInteractionsCode_Value)
proto3.util.setEnumType(FHIRRestfulInteractionsCode_Value, "google.fhir.r4.core.FHIRRestfulInteractionsCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "READ" },
  { no: 2, name: "VREAD" },
  { no: 3, name: "UPDATE" },
  { no: 4, name: "PATCH" },
  { no: 5, name: "DELETE" },
  { no: 6, name: "HISTORY" },
  { no: 7, name: "HISTORY_INSTANCE" },
  { no: 8, name: "HISTORY_TYPE" },
  { no: 9, name: "HISTORY_SYSTEM" },
  { no: 10, name: "CREATE" },
  { no: 11, name: "SEARCH" },
  { no: 12, name: "SEARCH_TYPE" },
  { no: 13, name: "SEARCH_SYSTEM" },
  { no: 14, name: "CAPABILITIES" },
  { no: 15, name: "TRANSACTION" },
  { no: 16, name: "BATCH" },
  { no: 17, name: "OPERATION" },
]);

/**
 * A code to indicate if the substance is actively used.
 * See http://hl7.org/fhir/substance-status
 *
 * @generated from message google.fhir.r4.core.FHIRSubstanceStatusCode
 */
export class FHIRSubstanceStatusCode extends Message<FHIRSubstanceStatusCode> {
  constructor(data?: PartialMessage<FHIRSubstanceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FHIRSubstanceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRSubstanceStatusCode {
    return new FHIRSubstanceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRSubstanceStatusCode {
    return new FHIRSubstanceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRSubstanceStatusCode {
    return new FHIRSubstanceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRSubstanceStatusCode | PlainMessage<FHIRSubstanceStatusCode> | undefined, b: FHIRSubstanceStatusCode | PlainMessage<FHIRSubstanceStatusCode> | undefined): boolean {
    return proto3.util.equals(FHIRSubstanceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FHIRSubstanceStatusCode.Value
 */
export enum FHIRSubstanceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRSubstanceStatusCode_Value)
proto3.util.setEnumType(FHIRSubstanceStatusCode_Value, "google.fhir.r4.core.FHIRSubstanceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * All published FHIR Versions.
 * See http://hl7.org/fhir/FHIR-version
 *
 * @generated from message google.fhir.r4.core.FHIRVersionCode
 */
export class FHIRVersionCode extends Message<FHIRVersionCode> {
  constructor(data?: PartialMessage<FHIRVersionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FHIRVersionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FHIRVersionCode {
    return new FHIRVersionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FHIRVersionCode {
    return new FHIRVersionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FHIRVersionCode {
    return new FHIRVersionCode().fromJsonString(jsonString, options);
  }

  static equals(a: FHIRVersionCode | PlainMessage<FHIRVersionCode> | undefined, b: FHIRVersionCode | PlainMessage<FHIRVersionCode> | undefined): boolean {
    return proto3.util.equals(FHIRVersionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FHIRVersionCode.Value
 */
export enum FHIRVersionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: V_0_01 = 1;
   */
  V_0_01 = 1,

  /**
   * @generated from enum value: V_0_05 = 2;
   */
  V_0_05 = 2,

  /**
   * @generated from enum value: V_0_06 = 3;
   */
  V_0_06 = 3,

  /**
   * @generated from enum value: V_0_11 = 4;
   */
  V_0_11 = 4,

  /**
   * @generated from enum value: V_0_0_80 = 5;
   */
  V_0_0_80 = 5,

  /**
   * @generated from enum value: V_0_0_81 = 6;
   */
  V_0_0_81 = 6,

  /**
   * @generated from enum value: V_0_0_82 = 7;
   */
  V_0_0_82 = 7,

  /**
   * @generated from enum value: V_0_4_0 = 8;
   */
  V_0_4_0 = 8,

  /**
   * @generated from enum value: V_0_5_0 = 9;
   */
  V_0_5_0 = 9,

  /**
   * @generated from enum value: V_1_0_0 = 10;
   */
  V_1_0_0 = 10,

  /**
   * @generated from enum value: V_1_0_1 = 11;
   */
  V_1_0_1 = 11,

  /**
   * @generated from enum value: V_1_0_2 = 12;
   */
  V_1_0_2 = 12,

  /**
   * @generated from enum value: V_1_1_0 = 13;
   */
  V_1_1_0 = 13,

  /**
   * @generated from enum value: V_1_4_0 = 14;
   */
  V_1_4_0 = 14,

  /**
   * @generated from enum value: V_1_6_0 = 15;
   */
  V_1_6_0 = 15,

  /**
   * @generated from enum value: V_1_8_0 = 16;
   */
  V_1_8_0 = 16,

  /**
   * @generated from enum value: V_3_0_0 = 17;
   */
  V_3_0_0 = 17,

  /**
   * @generated from enum value: V_3_0_1 = 18;
   */
  V_3_0_1 = 18,

  /**
   * @generated from enum value: V_3_3_0 = 19;
   */
  V_3_3_0 = 19,

  /**
   * @generated from enum value: V_3_5_0 = 20;
   */
  V_3_5_0 = 20,

  /**
   * @generated from enum value: V_4_0_0 = 21;
   */
  V_4_0_0 = 21,

  /**
   * @generated from enum value: V_4_0_1 = 22;
   */
  V_4_0_1 = 22,
}
// Retrieve enum metadata with: proto3.getEnumType(FHIRVersionCode_Value)
proto3.util.setEnumType(FHIRVersionCode_Value, "google.fhir.r4.core.FHIRVersionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "V_0_01" },
  { no: 2, name: "V_0_05" },
  { no: 3, name: "V_0_06" },
  { no: 4, name: "V_0_11" },
  { no: 5, name: "V_0_0_80" },
  { no: 6, name: "V_0_0_81" },
  { no: 7, name: "V_0_0_82" },
  { no: 8, name: "V_0_4_0" },
  { no: 9, name: "V_0_5_0" },
  { no: 10, name: "V_1_0_0" },
  { no: 11, name: "V_1_0_1" },
  { no: 12, name: "V_1_0_2" },
  { no: 13, name: "V_1_1_0" },
  { no: 14, name: "V_1_4_0" },
  { no: 15, name: "V_1_6_0" },
  { no: 16, name: "V_1_8_0" },
  { no: 17, name: "V_3_0_0" },
  { no: 18, name: "V_3_0_1" },
  { no: 19, name: "V_3_3_0" },
  { no: 20, name: "V_3_5_0" },
  { no: 21, name: "V_4_0_0" },
  { no: 22, name: "V_4_0_1" },
]);

/**
 * A code that identifies the status of the family history record.
 * See http://hl7.org/fhir/history-status
 *
 * @generated from message google.fhir.r4.core.FamilyHistoryStatusCode
 */
export class FamilyHistoryStatusCode extends Message<FamilyHistoryStatusCode> {
  constructor(data?: PartialMessage<FamilyHistoryStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FamilyHistoryStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FamilyHistoryStatusCode {
    return new FamilyHistoryStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FamilyHistoryStatusCode {
    return new FamilyHistoryStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FamilyHistoryStatusCode {
    return new FamilyHistoryStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FamilyHistoryStatusCode | PlainMessage<FamilyHistoryStatusCode> | undefined, b: FamilyHistoryStatusCode | PlainMessage<FamilyHistoryStatusCode> | undefined): boolean {
    return proto3.util.equals(FamilyHistoryStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FamilyHistoryStatusCode.Value
 */
export enum FamilyHistoryStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PARTIAL = 1;
   */
  PARTIAL = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: HEALTH_UNKNOWN = 4;
   */
  HEALTH_UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FamilyHistoryStatusCode_Value)
proto3.util.setEnumType(FamilyHistoryStatusCode_Value, "google.fhir.r4.core.FamilyHistoryStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PARTIAL" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "HEALTH_UNKNOWN" },
]);

/**
 * The kind of operation to perform as a part of a property based filter.
 * See http://hl7.org/fhir/filter-operator
 *
 * @generated from message google.fhir.r4.core.FilterOperatorCode
 */
export class FilterOperatorCode extends Message<FilterOperatorCode> {
  constructor(data?: PartialMessage<FilterOperatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FilterOperatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterOperatorCode {
    return new FilterOperatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterOperatorCode {
    return new FilterOperatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterOperatorCode {
    return new FilterOperatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: FilterOperatorCode | PlainMessage<FilterOperatorCode> | undefined, b: FilterOperatorCode | PlainMessage<FilterOperatorCode> | undefined): boolean {
    return proto3.util.equals(FilterOperatorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FilterOperatorCode.Value
 */
export enum FilterOperatorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EQUALS = 1;
   */
  EQUALS = 1,

  /**
   * @generated from enum value: IS_A = 2;
   */
  IS_A = 2,

  /**
   * @generated from enum value: DESCENDENT_OF = 3;
   */
  DESCENDENT_OF = 3,

  /**
   * @generated from enum value: IS_NOT_A = 4;
   */
  IS_NOT_A = 4,

  /**
   * @generated from enum value: REGEX = 5;
   */
  REGEX = 5,

  /**
   * @generated from enum value: IN = 6;
   */
  IN = 6,

  /**
   * @generated from enum value: NOT_IN = 7;
   */
  NOT_IN = 7,

  /**
   * @generated from enum value: GENERALIZES = 8;
   */
  GENERALIZES = 8,

  /**
   * @generated from enum value: EXISTS = 9;
   */
  EXISTS = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(FilterOperatorCode_Value)
proto3.util.setEnumType(FilterOperatorCode_Value, "google.fhir.r4.core.FilterOperatorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EQUALS" },
  { no: 2, name: "IS_A" },
  { no: 3, name: "DESCENDENT_OF" },
  { no: 4, name: "IS_NOT_A" },
  { no: 5, name: "REGEX" },
  { no: 6, name: "IN" },
  { no: 7, name: "NOT_IN" },
  { no: 8, name: "GENERALIZES" },
  { no: 9, name: "EXISTS" },
]);

/**
 * This value set includes Status codes.
 * See http://hl7.org/fhir/fm-status
 *
 * @generated from message google.fhir.r4.core.FinancialResourceStatusCode
 */
export class FinancialResourceStatusCode extends Message<FinancialResourceStatusCode> {
  constructor(data?: PartialMessage<FinancialResourceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FinancialResourceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FinancialResourceStatusCode {
    return new FinancialResourceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FinancialResourceStatusCode {
    return new FinancialResourceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FinancialResourceStatusCode {
    return new FinancialResourceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FinancialResourceStatusCode | PlainMessage<FinancialResourceStatusCode> | undefined, b: FinancialResourceStatusCode | PlainMessage<FinancialResourceStatusCode> | undefined): boolean {
    return proto3.util.equals(FinancialResourceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FinancialResourceStatusCode.Value
 */
export enum FinancialResourceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: CANCELLED = 2;
   */
  CANCELLED = 2,

  /**
   * @generated from enum value: DRAFT = 3;
   */
  DRAFT = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(FinancialResourceStatusCode_Value)
proto3.util.setEnumType(FinancialResourceStatusCode_Value, "google.fhir.r4.core.FinancialResourceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "CANCELLED" },
  { no: 3, name: "DRAFT" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * Indicates whether this flag is active and needs to be displayed to a user, or
 * whether it is no longer needed or was entered in error. See
 * http://hl7.org/fhir/flag-status
 *
 * @generated from message google.fhir.r4.core.FlagStatusCode
 */
export class FlagStatusCode extends Message<FlagStatusCode> {
  constructor(data?: PartialMessage<FlagStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.FlagStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagStatusCode {
    return new FlagStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagStatusCode {
    return new FlagStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagStatusCode {
    return new FlagStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: FlagStatusCode | PlainMessage<FlagStatusCode> | undefined, b: FlagStatusCode | PlainMessage<FlagStatusCode> | undefined): boolean {
    return proto3.util.equals(FlagStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.FlagStatusCode.Value
 */
export enum FlagStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(FlagStatusCode_Value)
proto3.util.setEnumType(FlagStatusCode_Value, "google.fhir.r4.core.FlagStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * Codes indicating whether the goal has been accepted by a stakeholder.
 * See http://terminology.hl7.org/CodeSystem/goal-acceptance-status
 *
 * @generated from message google.fhir.r4.core.GoalAcceptanceStatusCode
 */
export class GoalAcceptanceStatusCode extends Message<GoalAcceptanceStatusCode> {
  constructor(data?: PartialMessage<GoalAcceptanceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GoalAcceptanceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalAcceptanceStatusCode {
    return new GoalAcceptanceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalAcceptanceStatusCode {
    return new GoalAcceptanceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalAcceptanceStatusCode {
    return new GoalAcceptanceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalAcceptanceStatusCode | PlainMessage<GoalAcceptanceStatusCode> | undefined, b: GoalAcceptanceStatusCode | PlainMessage<GoalAcceptanceStatusCode> | undefined): boolean {
    return proto3.util.equals(GoalAcceptanceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GoalAcceptanceStatusCode.Value
 */
export enum GoalAcceptanceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AGREE = 1;
   */
  AGREE = 1,

  /**
   * @generated from enum value: DISAGREE = 2;
   */
  DISAGREE = 2,

  /**
   * @generated from enum value: PENDING = 3;
   */
  PENDING = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalAcceptanceStatusCode_Value)
proto3.util.setEnumType(GoalAcceptanceStatusCode_Value, "google.fhir.r4.core.GoalAcceptanceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AGREE" },
  { no: 2, name: "DISAGREE" },
  { no: 3, name: "PENDING" },
]);

/**
 * Codes that reflect the current state of a goal and whether the goal is still
 * being targeted. See http://hl7.org/fhir/goal-status
 *
 * @generated from message google.fhir.r4.core.GoalLifecycleStatusCode
 */
export class GoalLifecycleStatusCode extends Message<GoalLifecycleStatusCode> {
  constructor(data?: PartialMessage<GoalLifecycleStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GoalLifecycleStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoalLifecycleStatusCode {
    return new GoalLifecycleStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoalLifecycleStatusCode {
    return new GoalLifecycleStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoalLifecycleStatusCode {
    return new GoalLifecycleStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GoalLifecycleStatusCode | PlainMessage<GoalLifecycleStatusCode> | undefined, b: GoalLifecycleStatusCode | PlainMessage<GoalLifecycleStatusCode> | undefined): boolean {
    return proto3.util.equals(GoalLifecycleStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GoalLifecycleStatusCode.Value
 */
export enum GoalLifecycleStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSED = 1;
   */
  PROPOSED = 1,

  /**
   * @generated from enum value: PLANNED = 2;
   */
  PLANNED = 2,

  /**
   * @generated from enum value: ACCEPTED = 3;
   */
  ACCEPTED = 3,

  /**
   * @generated from enum value: ACTIVE = 4;
   */
  ACTIVE = 4,

  /**
   * @generated from enum value: ON_HOLD = 5;
   */
  ON_HOLD = 5,

  /**
   * @generated from enum value: COMPLETED = 6;
   */
  COMPLETED = 6,

  /**
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 8;
   */
  ENTERED_IN_ERROR = 8,

  /**
   * @generated from enum value: REJECTED = 9;
   */
  REJECTED = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(GoalLifecycleStatusCode_Value)
proto3.util.setEnumType(GoalLifecycleStatusCode_Value, "google.fhir.r4.core.GoalLifecycleStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSED" },
  { no: 2, name: "PLANNED" },
  { no: 3, name: "ACCEPTED" },
  { no: 4, name: "ACTIVE" },
  { no: 5, name: "ON_HOLD" },
  { no: 6, name: "COMPLETED" },
  { no: 7, name: "CANCELLED" },
  { no: 8, name: "ENTERED_IN_ERROR" },
  { no: 9, name: "REJECTED" },
]);

/**
 * How a compartment must be linked.
 * See http://hl7.org/fhir/graph-compartment-rule
 *
 * @generated from message google.fhir.r4.core.GraphCompartmentRuleCode
 */
export class GraphCompartmentRuleCode extends Message<GraphCompartmentRuleCode> {
  constructor(data?: PartialMessage<GraphCompartmentRuleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GraphCompartmentRuleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphCompartmentRuleCode {
    return new GraphCompartmentRuleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphCompartmentRuleCode {
    return new GraphCompartmentRuleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphCompartmentRuleCode {
    return new GraphCompartmentRuleCode().fromJsonString(jsonString, options);
  }

  static equals(a: GraphCompartmentRuleCode | PlainMessage<GraphCompartmentRuleCode> | undefined, b: GraphCompartmentRuleCode | PlainMessage<GraphCompartmentRuleCode> | undefined): boolean {
    return proto3.util.equals(GraphCompartmentRuleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GraphCompartmentRuleCode.Value
 */
export enum GraphCompartmentRuleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IDENTICAL = 1;
   */
  IDENTICAL = 1,

  /**
   * @generated from enum value: MATCHING = 2;
   */
  MATCHING = 2,

  /**
   * @generated from enum value: DIFFERENT = 3;
   */
  DIFFERENT = 3,

  /**
   * @generated from enum value: CUSTOM = 4;
   */
  CUSTOM = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(GraphCompartmentRuleCode_Value)
proto3.util.setEnumType(GraphCompartmentRuleCode_Value, "google.fhir.r4.core.GraphCompartmentRuleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IDENTICAL" },
  { no: 2, name: "MATCHING" },
  { no: 3, name: "DIFFERENT" },
  { no: 4, name: "CUSTOM" },
]);

/**
 * Defines how a compartment rule is used.
 * See http://hl7.org/fhir/graph-compartment-use
 *
 * @generated from message google.fhir.r4.core.GraphCompartmentUseCode
 */
export class GraphCompartmentUseCode extends Message<GraphCompartmentUseCode> {
  constructor(data?: PartialMessage<GraphCompartmentUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GraphCompartmentUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GraphCompartmentUseCode {
    return new GraphCompartmentUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GraphCompartmentUseCode {
    return new GraphCompartmentUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GraphCompartmentUseCode {
    return new GraphCompartmentUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: GraphCompartmentUseCode | PlainMessage<GraphCompartmentUseCode> | undefined, b: GraphCompartmentUseCode | PlainMessage<GraphCompartmentUseCode> | undefined): boolean {
    return proto3.util.equals(GraphCompartmentUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GraphCompartmentUseCode.Value
 */
export enum GraphCompartmentUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONDITION = 1;
   */
  CONDITION = 1,

  /**
   * @generated from enum value: REQUIREMENT = 2;
   */
  REQUIREMENT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(GraphCompartmentUseCode_Value)
proto3.util.setEnumType(GraphCompartmentUseCode_Value, "google.fhir.r4.core.GraphCompartmentUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONDITION" },
  { no: 2, name: "REQUIREMENT" },
]);

/**
 * Possible group measure aggregates (E.g. Mean, Median).
 * See http://hl7.org/fhir/group-measure
 *
 * @generated from message google.fhir.r4.core.GroupMeasureCode
 */
export class GroupMeasureCode extends Message<GroupMeasureCode> {
  constructor(data?: PartialMessage<GroupMeasureCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GroupMeasureCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupMeasureCode {
    return new GroupMeasureCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupMeasureCode {
    return new GroupMeasureCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupMeasureCode {
    return new GroupMeasureCode().fromJsonString(jsonString, options);
  }

  static equals(a: GroupMeasureCode | PlainMessage<GroupMeasureCode> | undefined, b: GroupMeasureCode | PlainMessage<GroupMeasureCode> | undefined): boolean {
    return proto3.util.equals(GroupMeasureCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GroupMeasureCode.Value
 */
export enum GroupMeasureCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MEAN = 1;
   */
  MEAN = 1,

  /**
   * @generated from enum value: MEDIAN = 2;
   */
  MEDIAN = 2,

  /**
   * @generated from enum value: MEAN_OF_MEAN = 3;
   */
  MEAN_OF_MEAN = 3,

  /**
   * @generated from enum value: MEAN_OF_MEDIAN = 4;
   */
  MEAN_OF_MEDIAN = 4,

  /**
   * @generated from enum value: MEDIAN_OF_MEAN = 5;
   */
  MEDIAN_OF_MEAN = 5,

  /**
   * @generated from enum value: MEDIAN_OF_MEDIAN = 6;
   */
  MEDIAN_OF_MEDIAN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(GroupMeasureCode_Value)
proto3.util.setEnumType(GroupMeasureCode_Value, "google.fhir.r4.core.GroupMeasureCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MEAN" },
  { no: 2, name: "MEDIAN" },
  { no: 3, name: "MEAN_OF_MEAN" },
  { no: 4, name: "MEAN_OF_MEDIAN" },
  { no: 5, name: "MEDIAN_OF_MEAN" },
  { no: 6, name: "MEDIAN_OF_MEDIAN" },
]);

/**
 * Types of resources that are part of group.
 * See http://hl7.org/fhir/group-type
 *
 * @generated from message google.fhir.r4.core.GroupTypeCode
 */
export class GroupTypeCode extends Message<GroupTypeCode> {
  constructor(data?: PartialMessage<GroupTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GroupTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupTypeCode {
    return new GroupTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupTypeCode {
    return new GroupTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupTypeCode {
    return new GroupTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: GroupTypeCode | PlainMessage<GroupTypeCode> | undefined, b: GroupTypeCode | PlainMessage<GroupTypeCode> | undefined): boolean {
    return proto3.util.equals(GroupTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GroupTypeCode.Value
 */
export enum GroupTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PERSON = 1;
   */
  PERSON = 1,

  /**
   * @generated from enum value: ANIMAL = 2;
   */
  ANIMAL = 2,

  /**
   * @generated from enum value: PRACTITIONER = 3;
   */
  PRACTITIONER = 3,

  /**
   * @generated from enum value: DEVICE = 4;
   */
  DEVICE = 4,

  /**
   * @generated from enum value: MEDICATION = 5;
   */
  MEDICATION = 5,

  /**
   * @generated from enum value: SUBSTANCE = 6;
   */
  SUBSTANCE = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(GroupTypeCode_Value)
proto3.util.setEnumType(GroupTypeCode_Value, "google.fhir.r4.core.GroupTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PERSON" },
  { no: 2, name: "ANIMAL" },
  { no: 3, name: "PRACTITIONER" },
  { no: 4, name: "DEVICE" },
  { no: 5, name: "MEDICATION" },
  { no: 6, name: "SUBSTANCE" },
]);

/**
 * The status of a guidance response.
 * See http://hl7.org/fhir/guidance-response-status
 *
 * @generated from message google.fhir.r4.core.GuidanceResponseStatusCode
 */
export class GuidanceResponseStatusCode extends Message<GuidanceResponseStatusCode> {
  constructor(data?: PartialMessage<GuidanceResponseStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GuidanceResponseStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidanceResponseStatusCode {
    return new GuidanceResponseStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidanceResponseStatusCode {
    return new GuidanceResponseStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidanceResponseStatusCode {
    return new GuidanceResponseStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: GuidanceResponseStatusCode | PlainMessage<GuidanceResponseStatusCode> | undefined, b: GuidanceResponseStatusCode | PlainMessage<GuidanceResponseStatusCode> | undefined): boolean {
    return proto3.util.equals(GuidanceResponseStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GuidanceResponseStatusCode.Value
 */
export enum GuidanceResponseStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: DATA_REQUESTED = 2;
   */
  DATA_REQUESTED = 2,

  /**
   * @generated from enum value: DATA_REQUIRED = 3;
   */
  DATA_REQUIRED = 3,

  /**
   * @generated from enum value: IN_PROGRESS = 4;
   */
  IN_PROGRESS = 4,

  /**
   * @generated from enum value: FAILURE = 5;
   */
  FAILURE = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(GuidanceResponseStatusCode_Value)
proto3.util.setEnumType(GuidanceResponseStatusCode_Value, "google.fhir.r4.core.GuidanceResponseStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SUCCESS" },
  { no: 2, name: "DATA_REQUESTED" },
  { no: 3, name: "DATA_REQUIRED" },
  { no: 4, name: "IN_PROGRESS" },
  { no: 5, name: "FAILURE" },
  { no: 6, name: "ENTERED_IN_ERROR" },
]);

/**
 * A code that indicates how the page is generated.
 * See http://hl7.org/fhir/guide-page-generation
 *
 * @generated from message google.fhir.r4.core.GuidePageGenerationCode
 */
export class GuidePageGenerationCode extends Message<GuidePageGenerationCode> {
  constructor(data?: PartialMessage<GuidePageGenerationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GuidePageGenerationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuidePageGenerationCode {
    return new GuidePageGenerationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuidePageGenerationCode {
    return new GuidePageGenerationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuidePageGenerationCode {
    return new GuidePageGenerationCode().fromJsonString(jsonString, options);
  }

  static equals(a: GuidePageGenerationCode | PlainMessage<GuidePageGenerationCode> | undefined, b: GuidePageGenerationCode | PlainMessage<GuidePageGenerationCode> | undefined): boolean {
    return proto3.util.equals(GuidePageGenerationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GuidePageGenerationCode.Value
 */
export enum GuidePageGenerationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: HTML = 1;
   */
  HTML = 1,

  /**
   * @generated from enum value: MARKDOWN = 2;
   */
  MARKDOWN = 2,

  /**
   * @generated from enum value: XML = 3;
   */
  XML = 3,

  /**
   * @generated from enum value: GENERATED = 4;
   */
  GENERATED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(GuidePageGenerationCode_Value)
proto3.util.setEnumType(GuidePageGenerationCode_Value, "google.fhir.r4.core.GuidePageGenerationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "HTML" },
  { no: 2, name: "MARKDOWN" },
  { no: 3, name: "XML" },
  { no: 4, name: "GENERATED" },
]);

/**
 * Code of parameter that is input to the guide.
 * See http://hl7.org/fhir/guide-parameter-code
 *
 * @generated from message google.fhir.r4.core.GuideParameterCode
 */
export class GuideParameterCode extends Message<GuideParameterCode> {
  constructor(data?: PartialMessage<GuideParameterCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.GuideParameterCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuideParameterCode {
    return new GuideParameterCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuideParameterCode {
    return new GuideParameterCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuideParameterCode {
    return new GuideParameterCode().fromJsonString(jsonString, options);
  }

  static equals(a: GuideParameterCode | PlainMessage<GuideParameterCode> | undefined, b: GuideParameterCode | PlainMessage<GuideParameterCode> | undefined): boolean {
    return proto3.util.equals(GuideParameterCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.GuideParameterCode.Value
 */
export enum GuideParameterCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: APPLY = 1;
   */
  APPLY = 1,

  /**
   * @generated from enum value: PATH_RESOURCE = 2;
   */
  PATH_RESOURCE = 2,

  /**
   * @generated from enum value: PATH_PAGES = 3;
   */
  PATH_PAGES = 3,

  /**
   * @generated from enum value: PATH_TX_CACHE = 4;
   */
  PATH_TX_CACHE = 4,

  /**
   * @generated from enum value: EXPANSION_PARAMETER = 5;
   */
  EXPANSION_PARAMETER = 5,

  /**
   * @generated from enum value: RULE_BROKEN_LINKS = 6;
   */
  RULE_BROKEN_LINKS = 6,

  /**
   * @generated from enum value: GENERATE_XML = 7;
   */
  GENERATE_XML = 7,

  /**
   * @generated from enum value: GENERATE_JSON = 8;
   */
  GENERATE_JSON = 8,

  /**
   * @generated from enum value: GENERATE_TURTLE = 9;
   */
  GENERATE_TURTLE = 9,

  /**
   * @generated from enum value: HTML_TEMPLATE = 10;
   */
  HTML_TEMPLATE = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(GuideParameterCode_Value)
proto3.util.setEnumType(GuideParameterCode_Value, "google.fhir.r4.core.GuideParameterCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "APPLY" },
  { no: 2, name: "PATH_RESOURCE" },
  { no: 3, name: "PATH_PAGES" },
  { no: 4, name: "PATH_TX_CACHE" },
  { no: 5, name: "EXPANSION_PARAMETER" },
  { no: 6, name: "RULE_BROKEN_LINKS" },
  { no: 7, name: "GENERATE_XML" },
  { no: 8, name: "GENERATE_JSON" },
  { no: 9, name: "GENERATE_TURTLE" },
  { no: 10, name: "HTML_TEMPLATE" },
]);

/**
 * An HL7 administrative unit that owns artifacts in the FHIR specification.
 * See http://terminology.hl7.org/CodeSystem/hl7-work-group
 *
 * @generated from message google.fhir.r4.core.HL7WorkgroupCode
 */
export class HL7WorkgroupCode extends Message<HL7WorkgroupCode> {
  constructor(data?: PartialMessage<HL7WorkgroupCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HL7WorkgroupCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HL7WorkgroupCode {
    return new HL7WorkgroupCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HL7WorkgroupCode {
    return new HL7WorkgroupCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HL7WorkgroupCode {
    return new HL7WorkgroupCode().fromJsonString(jsonString, options);
  }

  static equals(a: HL7WorkgroupCode | PlainMessage<HL7WorkgroupCode> | undefined, b: HL7WorkgroupCode | PlainMessage<HL7WorkgroupCode> | undefined): boolean {
    return proto3.util.equals(HL7WorkgroupCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.HL7WorkgroupCode.Value
 */
export enum HL7WorkgroupCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CBCC = 1;
   */
  CBCC = 1,

  /**
   * @generated from enum value: CDS = 2;
   */
  CDS = 2,

  /**
   * @generated from enum value: CQI = 3;
   */
  CQI = 3,

  /**
   * @generated from enum value: CG = 4;
   */
  CG = 4,

  /**
   * @generated from enum value: DEV = 5;
   */
  DEV = 5,

  /**
   * @generated from enum value: EHR = 6;
   */
  EHR = 6,

  /**
   * @generated from enum value: FHIR = 7;
   */
  FHIR = 7,

  /**
   * @generated from enum value: FM = 8;
   */
  FM = 8,

  /**
   * @generated from enum value: HSI = 9;
   */
  HSI = 9,

  /**
   * @generated from enum value: II = 10;
   */
  II = 10,

  /**
   * @generated from enum value: INM = 11;
   */
  INM = 11,

  /**
   * @generated from enum value: ITS = 12;
   */
  ITS = 12,

  /**
   * @generated from enum value: MNM = 13;
   */
  MNM = 13,

  /**
   * @generated from enum value: OO = 14;
   */
  OO = 14,

  /**
   * @generated from enum value: PA = 15;
   */
  PA = 15,

  /**
   * @generated from enum value: PC = 16;
   */
  PC = 16,

  /**
   * @generated from enum value: PHER = 17;
   */
  PHER = 17,

  /**
   * @generated from enum value: PHX = 18;
   */
  PHX = 18,

  /**
   * @generated from enum value: BRR = 19;
   */
  BRR = 19,

  /**
   * @generated from enum value: SD = 20;
   */
  SD = 20,

  /**
   * @generated from enum value: SEC = 21;
   */
  SEC = 21,

  /**
   * @generated from enum value: US = 22;
   */
  US = 22,

  /**
   * @generated from enum value: VOCAB = 23;
   */
  VOCAB = 23,

  /**
   * @generated from enum value: AID = 24;
   */
  AID = 24,
}
// Retrieve enum metadata with: proto3.getEnumType(HL7WorkgroupCode_Value)
proto3.util.setEnumType(HL7WorkgroupCode_Value, "google.fhir.r4.core.HL7WorkgroupCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CBCC" },
  { no: 2, name: "CDS" },
  { no: 3, name: "CQI" },
  { no: 4, name: "CG" },
  { no: 5, name: "DEV" },
  { no: 6, name: "EHR" },
  { no: 7, name: "FHIR" },
  { no: 8, name: "FM" },
  { no: 9, name: "HSI" },
  { no: 10, name: "II" },
  { no: 11, name: "INM" },
  { no: 12, name: "ITS" },
  { no: 13, name: "MNM" },
  { no: 14, name: "OO" },
  { no: 15, name: "PA" },
  { no: 16, name: "PC" },
  { no: 17, name: "PHER" },
  { no: 18, name: "PHX" },
  { no: 19, name: "BRR" },
  { no: 20, name: "SD" },
  { no: 21, name: "SEC" },
  { no: 22, name: "US" },
  { no: 23, name: "VOCAB" },
  { no: 24, name: "AID" },
]);

/**
 * HTTP verbs (in the HTTP command line). See [HTTP
 * rfc](https://tools.ietf.org/html/rfc7231) for details. See
 * http://hl7.org/fhir/http-verb
 *
 * @generated from message google.fhir.r4.core.HTTPVerbCode
 */
export class HTTPVerbCode extends Message<HTTPVerbCode> {
  constructor(data?: PartialMessage<HTTPVerbCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HTTPVerbCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HTTPVerbCode {
    return new HTTPVerbCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HTTPVerbCode {
    return new HTTPVerbCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HTTPVerbCode {
    return new HTTPVerbCode().fromJsonString(jsonString, options);
  }

  static equals(a: HTTPVerbCode | PlainMessage<HTTPVerbCode> | undefined, b: HTTPVerbCode | PlainMessage<HTTPVerbCode> | undefined): boolean {
    return proto3.util.equals(HTTPVerbCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.HTTPVerbCode.Value
 */
export enum HTTPVerbCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GET = 1;
   */
  GET = 1,

  /**
   * @generated from enum value: HEAD = 2;
   */
  HEAD = 2,

  /**
   * @generated from enum value: POST = 3;
   */
  POST = 3,

  /**
   * @generated from enum value: PUT = 4;
   */
  PUT = 4,

  /**
   * @generated from enum value: DELETE = 5;
   */
  DELETE = 5,

  /**
   * @generated from enum value: PATCH = 6;
   */
  PATCH = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(HTTPVerbCode_Value)
proto3.util.setEnumType(HTTPVerbCode_Value, "google.fhir.r4.core.HTTPVerbCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GET" },
  { no: 2, name: "HEAD" },
  { no: 3, name: "POST" },
  { no: 4, name: "PUT" },
  { no: 5, name: "DELETE" },
  { no: 6, name: "PATCH" },
]);

/**
 * A code that represents the preferred display order of the components of a
 * human name. See http://terminology.hl7.org/CodeSystem/name-assembly-order
 *
 * @generated from message google.fhir.r4.core.HumanNameAssemblyOrderCode
 */
export class HumanNameAssemblyOrderCode extends Message<HumanNameAssemblyOrderCode> {
  constructor(data?: PartialMessage<HumanNameAssemblyOrderCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.HumanNameAssemblyOrderCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HumanNameAssemblyOrderCode {
    return new HumanNameAssemblyOrderCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrderCode {
    return new HumanNameAssemblyOrderCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HumanNameAssemblyOrderCode {
    return new HumanNameAssemblyOrderCode().fromJsonString(jsonString, options);
  }

  static equals(a: HumanNameAssemblyOrderCode | PlainMessage<HumanNameAssemblyOrderCode> | undefined, b: HumanNameAssemblyOrderCode | PlainMessage<HumanNameAssemblyOrderCode> | undefined): boolean {
    return proto3.util.equals(HumanNameAssemblyOrderCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.HumanNameAssemblyOrderCode.Value
 */
export enum HumanNameAssemblyOrderCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NL1 = 1;
   */
  NL1 = 1,

  /**
   * @generated from enum value: NL2 = 2;
   */
  NL2 = 2,

  /**
   * @generated from enum value: NL3 = 3;
   */
  NL3 = 3,

  /**
   * @generated from enum value: NL4 = 4;
   */
  NL4 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(HumanNameAssemblyOrderCode_Value)
proto3.util.setEnumType(HumanNameAssemblyOrderCode_Value, "google.fhir.r4.core.HumanNameAssemblyOrderCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NL1" },
  { no: 2, name: "NL2" },
  { no: 3, name: "NL3" },
  { no: 4, name: "NL4" },
]);

/**
 * Identifies the purpose for this identifier, if known .
 * See http://hl7.org/fhir/identifier-use
 *
 * @generated from message google.fhir.r4.core.IdentifierUseCode
 */
export class IdentifierUseCode extends Message<IdentifierUseCode> {
  constructor(data?: PartialMessage<IdentifierUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.IdentifierUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdentifierUseCode {
    return new IdentifierUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdentifierUseCode {
    return new IdentifierUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdentifierUseCode {
    return new IdentifierUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: IdentifierUseCode | PlainMessage<IdentifierUseCode> | undefined, b: IdentifierUseCode | PlainMessage<IdentifierUseCode> | undefined): boolean {
    return proto3.util.equals(IdentifierUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.IdentifierUseCode.Value
 */
export enum IdentifierUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: USUAL = 1;
   */
  USUAL = 1,

  /**
   * @generated from enum value: OFFICIAL = 2;
   */
  OFFICIAL = 2,

  /**
   * @generated from enum value: TEMP = 3;
   */
  TEMP = 3,

  /**
   * @generated from enum value: SECONDARY = 4;
   */
  SECONDARY = 4,

  /**
   * @generated from enum value: OLD = 5;
   */
  OLD = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(IdentifierUseCode_Value)
proto3.util.setEnumType(IdentifierUseCode_Value, "google.fhir.r4.core.IdentifierUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "USUAL" },
  { no: 2, name: "OFFICIAL" },
  { no: 3, name: "TEMP" },
  { no: 4, name: "SECONDARY" },
  { no: 5, name: "OLD" },
]);

/**
 * The level of confidence that this link represents the same actual person,
 * based on NIST Authentication Levels. See
 * http://hl7.org/fhir/identity-assuranceLevel
 *
 * @generated from message google.fhir.r4.core.IdentityAssuranceLevelCode
 */
export class IdentityAssuranceLevelCode extends Message<IdentityAssuranceLevelCode> {
  constructor(data?: PartialMessage<IdentityAssuranceLevelCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.IdentityAssuranceLevelCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IdentityAssuranceLevelCode {
    return new IdentityAssuranceLevelCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IdentityAssuranceLevelCode {
    return new IdentityAssuranceLevelCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IdentityAssuranceLevelCode {
    return new IdentityAssuranceLevelCode().fromJsonString(jsonString, options);
  }

  static equals(a: IdentityAssuranceLevelCode | PlainMessage<IdentityAssuranceLevelCode> | undefined, b: IdentityAssuranceLevelCode | PlainMessage<IdentityAssuranceLevelCode> | undefined): boolean {
    return proto3.util.equals(IdentityAssuranceLevelCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.IdentityAssuranceLevelCode.Value
 */
export enum IdentityAssuranceLevelCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LEVEL1 = 1;
   */
  LEVEL1 = 1,

  /**
   * @generated from enum value: LEVEL2 = 2;
   */
  LEVEL2 = 2,

  /**
   * @generated from enum value: LEVEL3 = 3;
   */
  LEVEL3 = 3,

  /**
   * @generated from enum value: LEVEL4 = 4;
   */
  LEVEL4 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(IdentityAssuranceLevelCode_Value)
proto3.util.setEnumType(IdentityAssuranceLevelCode_Value, "google.fhir.r4.core.IdentityAssuranceLevelCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LEVEL1" },
  { no: 2, name: "LEVEL2" },
  { no: 3, name: "LEVEL3" },
  { no: 4, name: "LEVEL4" },
]);

/**
 * The status of the ImagingStudy.
 * See http://hl7.org/fhir/imagingstudy-status
 *
 * @generated from message google.fhir.r4.core.ImagingStudyStatusCode
 */
export class ImagingStudyStatusCode extends Message<ImagingStudyStatusCode> {
  constructor(data?: PartialMessage<ImagingStudyStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImagingStudyStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImagingStudyStatusCode {
    return new ImagingStudyStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImagingStudyStatusCode {
    return new ImagingStudyStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImagingStudyStatusCode {
    return new ImagingStudyStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImagingStudyStatusCode | PlainMessage<ImagingStudyStatusCode> | undefined, b: ImagingStudyStatusCode | PlainMessage<ImagingStudyStatusCode> | undefined): boolean {
    return proto3.util.equals(ImagingStudyStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ImagingStudyStatusCode.Value
 */
export enum ImagingStudyStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REGISTERED = 1;
   */
  REGISTERED = 1,

  /**
   * @generated from enum value: AVAILABLE = 2;
   */
  AVAILABLE = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,

  /**
   * @generated from enum value: UNKNOWN = 5;
   */
  UNKNOWN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ImagingStudyStatusCode_Value)
proto3.util.setEnumType(ImagingStudyStatusCode_Value, "google.fhir.r4.core.ImagingStudyStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REGISTERED" },
  { no: 2, name: "AVAILABLE" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
  { no: 5, name: "UNKNOWN" },
]);

/**
 * A set codes that define the functional status of an implanted device.
 * See http://terminology.hl7.org/CodeSystem/implantStatus
 *
 * @generated from message google.fhir.r4.core.ImplantStatusCode
 */
export class ImplantStatusCode extends Message<ImplantStatusCode> {
  constructor(data?: PartialMessage<ImplantStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ImplantStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImplantStatusCode {
    return new ImplantStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImplantStatusCode {
    return new ImplantStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImplantStatusCode {
    return new ImplantStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ImplantStatusCode | PlainMessage<ImplantStatusCode> | undefined, b: ImplantStatusCode | PlainMessage<ImplantStatusCode> | undefined): boolean {
    return proto3.util.equals(ImplantStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ImplantStatusCode.Value
 */
export enum ImplantStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FUNCTIONAL = 1;
   */
  FUNCTIONAL = 1,

  /**
   * @generated from enum value: NON_FUNCTIONAL = 2;
   */
  NON_FUNCTIONAL = 2,

  /**
   * @generated from enum value: DISABLED = 3;
   */
  DISABLED = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ImplantStatusCode_Value)
proto3.util.setEnumType(ImplantStatusCode_Value, "google.fhir.r4.core.ImplantStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FUNCTIONAL" },
  { no: 2, name: "NON_FUNCTIONAL" },
  { no: 3, name: "DISABLED" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Codes indicating the kind of the price component.
 * See http://hl7.org/fhir/invoice-priceComponentType
 *
 * @generated from message google.fhir.r4.core.InvoicePriceComponentTypeCode
 */
export class InvoicePriceComponentTypeCode extends Message<InvoicePriceComponentTypeCode> {
  constructor(data?: PartialMessage<InvoicePriceComponentTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InvoicePriceComponentTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InvoicePriceComponentTypeCode {
    return new InvoicePriceComponentTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InvoicePriceComponentTypeCode {
    return new InvoicePriceComponentTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InvoicePriceComponentTypeCode {
    return new InvoicePriceComponentTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: InvoicePriceComponentTypeCode | PlainMessage<InvoicePriceComponentTypeCode> | undefined, b: InvoicePriceComponentTypeCode | PlainMessage<InvoicePriceComponentTypeCode> | undefined): boolean {
    return proto3.util.equals(InvoicePriceComponentTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.InvoicePriceComponentTypeCode.Value
 */
export enum InvoicePriceComponentTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BASE = 1;
   */
  BASE = 1,

  /**
   * @generated from enum value: SURCHARGE = 2;
   */
  SURCHARGE = 2,

  /**
   * @generated from enum value: DEDUCTION = 3;
   */
  DEDUCTION = 3,

  /**
   * @generated from enum value: DISCOUNT = 4;
   */
  DISCOUNT = 4,

  /**
   * @generated from enum value: TAX = 5;
   */
  TAX = 5,

  /**
   * @generated from enum value: INFORMATIONAL = 6;
   */
  INFORMATIONAL = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(InvoicePriceComponentTypeCode_Value)
proto3.util.setEnumType(InvoicePriceComponentTypeCode_Value, "google.fhir.r4.core.InvoicePriceComponentTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BASE" },
  { no: 2, name: "SURCHARGE" },
  { no: 3, name: "DEDUCTION" },
  { no: 4, name: "DISCOUNT" },
  { no: 5, name: "TAX" },
  { no: 6, name: "INFORMATIONAL" },
]);

/**
 * Codes identifying the lifecycle stage of an Invoice.
 * See http://hl7.org/fhir/invoice-status
 *
 * @generated from message google.fhir.r4.core.InvoiceStatusCode
 */
export class InvoiceStatusCode extends Message<InvoiceStatusCode> {
  constructor(data?: PartialMessage<InvoiceStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.InvoiceStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InvoiceStatusCode {
    return new InvoiceStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InvoiceStatusCode {
    return new InvoiceStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InvoiceStatusCode {
    return new InvoiceStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: InvoiceStatusCode | PlainMessage<InvoiceStatusCode> | undefined, b: InvoiceStatusCode | PlainMessage<InvoiceStatusCode> | undefined): boolean {
    return proto3.util.equals(InvoiceStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.InvoiceStatusCode.Value
 */
export enum InvoiceStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ISSUED = 2;
   */
  ISSUED = 2,

  /**
   * @generated from enum value: BALANCED = 3;
   */
  BALANCED = 3,

  /**
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(InvoiceStatusCode_Value)
proto3.util.setEnumType(InvoiceStatusCode_Value, "google.fhir.r4.core.InvoiceStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ISSUED" },
  { no: 3, name: "BALANCED" },
  { no: 4, name: "CANCELLED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * How the issue affects the success of the action.
 * See http://hl7.org/fhir/issue-severity
 *
 * @generated from message google.fhir.r4.core.IssueSeverityCode
 */
export class IssueSeverityCode extends Message<IssueSeverityCode> {
  constructor(data?: PartialMessage<IssueSeverityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.IssueSeverityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IssueSeverityCode {
    return new IssueSeverityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IssueSeverityCode {
    return new IssueSeverityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IssueSeverityCode {
    return new IssueSeverityCode().fromJsonString(jsonString, options);
  }

  static equals(a: IssueSeverityCode | PlainMessage<IssueSeverityCode> | undefined, b: IssueSeverityCode | PlainMessage<IssueSeverityCode> | undefined): boolean {
    return proto3.util.equals(IssueSeverityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.IssueSeverityCode.Value
 */
export enum IssueSeverityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FATAL = 1;
   */
  FATAL = 1,

  /**
   * @generated from enum value: ERROR = 2;
   */
  ERROR = 2,

  /**
   * @generated from enum value: WARNING = 3;
   */
  WARNING = 3,

  /**
   * @generated from enum value: INFORMATION = 4;
   */
  INFORMATION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(IssueSeverityCode_Value)
proto3.util.setEnumType(IssueSeverityCode_Value, "google.fhir.r4.core.IssueSeverityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FATAL" },
  { no: 2, name: "ERROR" },
  { no: 3, name: "WARNING" },
  { no: 4, name: "INFORMATION" },
]);

/**
 * A code that describes the type of issue.
 * See http://hl7.org/fhir/issue-type
 *
 * @generated from message google.fhir.r4.core.IssueTypeCode
 */
export class IssueTypeCode extends Message<IssueTypeCode> {
  constructor(data?: PartialMessage<IssueTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.IssueTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IssueTypeCode {
    return new IssueTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IssueTypeCode {
    return new IssueTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IssueTypeCode {
    return new IssueTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: IssueTypeCode | PlainMessage<IssueTypeCode> | undefined, b: IssueTypeCode | PlainMessage<IssueTypeCode> | undefined): boolean {
    return proto3.util.equals(IssueTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.IssueTypeCode.Value
 */
export enum IssueTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INVALID = 1;
   */
  INVALID = 1,

  /**
   * @generated from enum value: STRUCTURE = 2;
   */
  STRUCTURE = 2,

  /**
   * @generated from enum value: REQUIRED = 3;
   */
  REQUIRED = 3,

  /**
   * @generated from enum value: VALUE = 4;
   */
  VALUE = 4,

  /**
   * @generated from enum value: INVARIANT = 5;
   */
  INVARIANT = 5,

  /**
   * @generated from enum value: SECURITY = 6;
   */
  SECURITY = 6,

  /**
   * @generated from enum value: LOGIN = 7;
   */
  LOGIN = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,

  /**
   * @generated from enum value: EXPIRED = 9;
   */
  EXPIRED = 9,

  /**
   * @generated from enum value: FORBIDDEN = 10;
   */
  FORBIDDEN = 10,

  /**
   * @generated from enum value: SUPPRESSED = 11;
   */
  SUPPRESSED = 11,

  /**
   * @generated from enum value: PROCESSING = 12;
   */
  PROCESSING = 12,

  /**
   * @generated from enum value: NOT_SUPPORTED = 13;
   */
  NOT_SUPPORTED = 13,

  /**
   * @generated from enum value: DUPLICATE = 14;
   */
  DUPLICATE = 14,

  /**
   * @generated from enum value: MULTIPLE_MATCHES = 15;
   */
  MULTIPLE_MATCHES = 15,

  /**
   * @generated from enum value: NOT_FOUND = 16;
   */
  NOT_FOUND = 16,

  /**
   * @generated from enum value: DELETED = 17;
   */
  DELETED = 17,

  /**
   * @generated from enum value: TOO_LONG = 18;
   */
  TOO_LONG = 18,

  /**
   * @generated from enum value: CODE_INVALID = 19;
   */
  CODE_INVALID = 19,

  /**
   * @generated from enum value: EXTENSION = 20;
   */
  EXTENSION = 20,

  /**
   * @generated from enum value: TOO_COSTLY = 21;
   */
  TOO_COSTLY = 21,

  /**
   * @generated from enum value: BUSINESS_RULE = 22;
   */
  BUSINESS_RULE = 22,

  /**
   * @generated from enum value: CONFLICT = 23;
   */
  CONFLICT = 23,

  /**
   * @generated from enum value: TRANSIENT = 24;
   */
  TRANSIENT = 24,

  /**
   * @generated from enum value: LOCK_ERROR = 25;
   */
  LOCK_ERROR = 25,

  /**
   * @generated from enum value: NO_STORE = 26;
   */
  NO_STORE = 26,

  /**
   * @generated from enum value: EXCEPTION = 27;
   */
  EXCEPTION = 27,

  /**
   * @generated from enum value: TIMEOUT = 28;
   */
  TIMEOUT = 28,

  /**
   * @generated from enum value: INCOMPLETE = 29;
   */
  INCOMPLETE = 29,

  /**
   * @generated from enum value: THROTTLED = 30;
   */
  THROTTLED = 30,

  /**
   * @generated from enum value: INFORMATIONAL = 31;
   */
  INFORMATIONAL = 31,
}
// Retrieve enum metadata with: proto3.getEnumType(IssueTypeCode_Value)
proto3.util.setEnumType(IssueTypeCode_Value, "google.fhir.r4.core.IssueTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INVALID" },
  { no: 2, name: "STRUCTURE" },
  { no: 3, name: "REQUIRED" },
  { no: 4, name: "VALUE" },
  { no: 5, name: "INVARIANT" },
  { no: 6, name: "SECURITY" },
  { no: 7, name: "LOGIN" },
  { no: 8, name: "UNKNOWN" },
  { no: 9, name: "EXPIRED" },
  { no: 10, name: "FORBIDDEN" },
  { no: 11, name: "SUPPRESSED" },
  { no: 12, name: "PROCESSING" },
  { no: 13, name: "NOT_SUPPORTED" },
  { no: 14, name: "DUPLICATE" },
  { no: 15, name: "MULTIPLE_MATCHES" },
  { no: 16, name: "NOT_FOUND" },
  { no: 17, name: "DELETED" },
  { no: 18, name: "TOO_LONG" },
  { no: 19, name: "CODE_INVALID" },
  { no: 20, name: "EXTENSION" },
  { no: 21, name: "TOO_COSTLY" },
  { no: 22, name: "BUSINESS_RULE" },
  { no: 23, name: "CONFLICT" },
  { no: 24, name: "TRANSIENT" },
  { no: 25, name: "LOCK_ERROR" },
  { no: 26, name: "NO_STORE" },
  { no: 27, name: "EXCEPTION" },
  { no: 28, name: "TIMEOUT" },
  { no: 29, name: "INCOMPLETE" },
  { no: 30, name: "THROTTLED" },
  { no: 31, name: "INFORMATIONAL" },
]);

/**
 * The type of link between this patient resource and another patient resource.
 * See http://hl7.org/fhir/link-type
 *
 * @generated from message google.fhir.r4.core.LinkTypeCode
 */
export class LinkTypeCode extends Message<LinkTypeCode> {
  constructor(data?: PartialMessage<LinkTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LinkTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinkTypeCode {
    return new LinkTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinkTypeCode {
    return new LinkTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinkTypeCode {
    return new LinkTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LinkTypeCode | PlainMessage<LinkTypeCode> | undefined, b: LinkTypeCode | PlainMessage<LinkTypeCode> | undefined): boolean {
    return proto3.util.equals(LinkTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.LinkTypeCode.Value
 */
export enum LinkTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REPLACED_BY = 1;
   */
  REPLACED_BY = 1,

  /**
   * @generated from enum value: REPLACES = 2;
   */
  REPLACES = 2,

  /**
   * @generated from enum value: REFER = 3;
   */
  REFER = 3,

  /**
   * @generated from enum value: SEEALSO = 4;
   */
  SEEALSO = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(LinkTypeCode_Value)
proto3.util.setEnumType(LinkTypeCode_Value, "google.fhir.r4.core.LinkTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REPLACED_BY" },
  { no: 2, name: "REPLACES" },
  { no: 3, name: "REFER" },
  { no: 4, name: "SEEALSO" },
]);

/**
 * Used to distinguish different roles a resource can play within a set of
 * linked resources. See http://hl7.org/fhir/linkage-type
 *
 * @generated from message google.fhir.r4.core.LinkageTypeCode
 */
export class LinkageTypeCode extends Message<LinkageTypeCode> {
  constructor(data?: PartialMessage<LinkageTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LinkageTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LinkageTypeCode {
    return new LinkageTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LinkageTypeCode {
    return new LinkageTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LinkageTypeCode {
    return new LinkageTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LinkageTypeCode | PlainMessage<LinkageTypeCode> | undefined, b: LinkageTypeCode | PlainMessage<LinkageTypeCode> | undefined): boolean {
    return proto3.util.equals(LinkageTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.LinkageTypeCode.Value
 */
export enum LinkageTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOURCE = 1;
   */
  SOURCE = 1,

  /**
   * @generated from enum value: ALTERNATE = 2;
   */
  ALTERNATE = 2,

  /**
   * @generated from enum value: HISTORICAL = 3;
   */
  HISTORICAL = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LinkageTypeCode_Value)
proto3.util.setEnumType(LinkageTypeCode_Value, "google.fhir.r4.core.LinkageTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOURCE" },
  { no: 2, name: "ALTERNATE" },
  { no: 3, name: "HISTORICAL" },
]);

/**
 * The processing mode that applies to this list.
 * See http://hl7.org/fhir/list-mode
 *
 * @generated from message google.fhir.r4.core.ListModeCode
 */
export class ListModeCode extends Message<ListModeCode> {
  constructor(data?: PartialMessage<ListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListModeCode {
    return new ListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListModeCode {
    return new ListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListModeCode {
    return new ListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ListModeCode | PlainMessage<ListModeCode> | undefined, b: ListModeCode | PlainMessage<ListModeCode> | undefined): boolean {
    return proto3.util.equals(ListModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ListModeCode.Value
 */
export enum ListModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: WORKING = 1;
   */
  WORKING = 1,

  /**
   * @generated from enum value: SNAPSHOT = 2;
   */
  SNAPSHOT = 2,

  /**
   * @generated from enum value: CHANGES = 3;
   */
  CHANGES = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListModeCode_Value)
proto3.util.setEnumType(ListModeCode_Value, "google.fhir.r4.core.ListModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "WORKING" },
  { no: 2, name: "SNAPSHOT" },
  { no: 3, name: "CHANGES" },
]);

/**
 * The current state of the list.
 * See http://hl7.org/fhir/list-status
 *
 * @generated from message google.fhir.r4.core.ListStatusCode
 */
export class ListStatusCode extends Message<ListStatusCode> {
  constructor(data?: PartialMessage<ListStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ListStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStatusCode {
    return new ListStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStatusCode {
    return new ListStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStatusCode {
    return new ListStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ListStatusCode | PlainMessage<ListStatusCode> | undefined, b: ListStatusCode | PlainMessage<ListStatusCode> | undefined): boolean {
    return proto3.util.equals(ListStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ListStatusCode.Value
 */
export enum ListStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CURRENT = 1;
   */
  CURRENT = 1,

  /**
   * @generated from enum value: RETIRED = 2;
   */
  RETIRED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListStatusCode_Value)
proto3.util.setEnumType(ListStatusCode_Value, "google.fhir.r4.core.ListStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CURRENT" },
  { no: 2, name: "RETIRED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * Indicates whether a resource instance represents a specific location or a
 * class of locations. See http://hl7.org/fhir/location-mode
 *
 * @generated from message google.fhir.r4.core.LocationModeCode
 */
export class LocationModeCode extends Message<LocationModeCode> {
  constructor(data?: PartialMessage<LocationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LocationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationModeCode {
    return new LocationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationModeCode {
    return new LocationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationModeCode {
    return new LocationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: LocationModeCode | PlainMessage<LocationModeCode> | undefined, b: LocationModeCode | PlainMessage<LocationModeCode> | undefined): boolean {
    return proto3.util.equals(LocationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.LocationModeCode.Value
 */
export enum LocationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: KIND = 2;
   */
  KIND = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(LocationModeCode_Value)
proto3.util.setEnumType(LocationModeCode_Value, "google.fhir.r4.core.LocationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INSTANCE" },
  { no: 2, name: "KIND" },
]);

/**
 * Indicates whether the location is still in use.
 * See http://hl7.org/fhir/location-status
 *
 * @generated from message google.fhir.r4.core.LocationStatusCode
 */
export class LocationStatusCode extends Message<LocationStatusCode> {
  constructor(data?: PartialMessage<LocationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.LocationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationStatusCode {
    return new LocationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationStatusCode {
    return new LocationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationStatusCode {
    return new LocationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: LocationStatusCode | PlainMessage<LocationStatusCode> | undefined, b: LocationStatusCode | PlainMessage<LocationStatusCode> | undefined): boolean {
    return proto3.util.equals(LocationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.LocationStatusCode.Value
 */
export enum LocationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SUSPENDED = 2;
   */
  SUSPENDED = 2,

  /**
   * @generated from enum value: INACTIVE = 3;
   */
  INACTIVE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LocationStatusCode_Value)
proto3.util.setEnumType(LocationStatusCode_Value, "google.fhir.r4.core.LocationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "SUSPENDED" },
  { no: 3, name: "INACTIVE" },
]);

/**
 * A Master Patient Index (MPI) assessment of whether a candidate patient record
 * is a match or not. See http://terminology.hl7.org/CodeSystem/match-grade
 *
 * @generated from message google.fhir.r4.core.MatchGradeCode
 */
export class MatchGradeCode extends Message<MatchGradeCode> {
  constructor(data?: PartialMessage<MatchGradeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MatchGradeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MatchGradeCode {
    return new MatchGradeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MatchGradeCode {
    return new MatchGradeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MatchGradeCode {
    return new MatchGradeCode().fromJsonString(jsonString, options);
  }

  static equals(a: MatchGradeCode | PlainMessage<MatchGradeCode> | undefined, b: MatchGradeCode | PlainMessage<MatchGradeCode> | undefined): boolean {
    return proto3.util.equals(MatchGradeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MatchGradeCode.Value
 */
export enum MatchGradeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CERTAIN = 1;
   */
  CERTAIN = 1,

  /**
   * @generated from enum value: PROBABLE = 2;
   */
  PROBABLE = 2,

  /**
   * @generated from enum value: POSSIBLE = 3;
   */
  POSSIBLE = 3,

  /**
   * @generated from enum value: CERTAINLY_NOT = 4;
   */
  CERTAINLY_NOT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MatchGradeCode_Value)
proto3.util.setEnumType(MatchGradeCode_Value, "google.fhir.r4.core.MatchGradeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CERTAIN" },
  { no: 2, name: "PROBABLE" },
  { no: 3, name: "POSSIBLE" },
  { no: 4, name: "CERTAINLY_NOT" },
]);

/**
 * Observation values that indicate what change in a measurement value or score
 * is indicative of an improvement in the measured item or scored issue. See
 * http://terminology.hl7.org/CodeSystem/measure-improvement-notation
 *
 * @generated from message google.fhir.r4.core.MeasureImprovementNotationCode
 */
export class MeasureImprovementNotationCode extends Message<MeasureImprovementNotationCode> {
  constructor(data?: PartialMessage<MeasureImprovementNotationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MeasureImprovementNotationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureImprovementNotationCode {
    return new MeasureImprovementNotationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureImprovementNotationCode {
    return new MeasureImprovementNotationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureImprovementNotationCode {
    return new MeasureImprovementNotationCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureImprovementNotationCode | PlainMessage<MeasureImprovementNotationCode> | undefined, b: MeasureImprovementNotationCode | PlainMessage<MeasureImprovementNotationCode> | undefined): boolean {
    return proto3.util.equals(MeasureImprovementNotationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MeasureImprovementNotationCode.Value
 */
export enum MeasureImprovementNotationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INCREASE = 1;
   */
  INCREASE = 1,

  /**
   * @generated from enum value: DECREASE = 2;
   */
  DECREASE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureImprovementNotationCode_Value)
proto3.util.setEnumType(MeasureImprovementNotationCode_Value, "google.fhir.r4.core.MeasureImprovementNotationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INCREASE" },
  { no: 2, name: "DECREASE" },
]);

/**
 * The status of the measure report.
 * See http://hl7.org/fhir/measure-report-status
 *
 * @generated from message google.fhir.r4.core.MeasureReportStatusCode
 */
export class MeasureReportStatusCode extends Message<MeasureReportStatusCode> {
  constructor(data?: PartialMessage<MeasureReportStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MeasureReportStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReportStatusCode {
    return new MeasureReportStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReportStatusCode {
    return new MeasureReportStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReportStatusCode {
    return new MeasureReportStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReportStatusCode | PlainMessage<MeasureReportStatusCode> | undefined, b: MeasureReportStatusCode | PlainMessage<MeasureReportStatusCode> | undefined): boolean {
    return proto3.util.equals(MeasureReportStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MeasureReportStatusCode.Value
 */
export enum MeasureReportStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,

  /**
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureReportStatusCode_Value)
proto3.util.setEnumType(MeasureReportStatusCode_Value, "google.fhir.r4.core.MeasureReportStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPLETE" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ERROR" },
]);

/**
 * The type of the measure report.
 * See http://hl7.org/fhir/measure-report-type
 *
 * @generated from message google.fhir.r4.core.MeasureReportTypeCode
 */
export class MeasureReportTypeCode extends Message<MeasureReportTypeCode> {
  constructor(data?: PartialMessage<MeasureReportTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MeasureReportTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MeasureReportTypeCode {
    return new MeasureReportTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MeasureReportTypeCode {
    return new MeasureReportTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MeasureReportTypeCode {
    return new MeasureReportTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: MeasureReportTypeCode | PlainMessage<MeasureReportTypeCode> | undefined, b: MeasureReportTypeCode | PlainMessage<MeasureReportTypeCode> | undefined): boolean {
    return proto3.util.equals(MeasureReportTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MeasureReportTypeCode.Value
 */
export enum MeasureReportTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INDIVIDUAL = 1;
   */
  INDIVIDUAL = 1,

  /**
   * @generated from enum value: SUBJECT_LIST = 2;
   */
  SUBJECT_LIST = 2,

  /**
   * @generated from enum value: SUMMARY = 3;
   */
  SUMMARY = 3,

  /**
   * @generated from enum value: DATA_COLLECTION = 4;
   */
  DATA_COLLECTION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MeasureReportTypeCode_Value)
proto3.util.setEnumType(MeasureReportTypeCode_Value, "google.fhir.r4.core.MeasureReportTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INDIVIDUAL" },
  { no: 2, name: "SUBJECT_LIST" },
  { no: 3, name: "SUMMARY" },
  { no: 4, name: "DATA_COLLECTION" },
]);

/**
 * MedicationAdministration Status Codes
 * See http://terminology.hl7.org/CodeSystem/medication-admin-status
 *
 * @generated from message google.fhir.r4.core.MedicationAdministrationStatusCode
 */
export class MedicationAdministrationStatusCode extends Message<MedicationAdministrationStatusCode> {
  constructor(data?: PartialMessage<MedicationAdministrationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationAdministrationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationAdministrationStatusCode {
    return new MedicationAdministrationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationAdministrationStatusCode {
    return new MedicationAdministrationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationAdministrationStatusCode {
    return new MedicationAdministrationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationAdministrationStatusCode | PlainMessage<MedicationAdministrationStatusCode> | undefined, b: MedicationAdministrationStatusCode | PlainMessage<MedicationAdministrationStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationAdministrationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationAdministrationStatusCode.Value
 */
export enum MedicationAdministrationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: NOT_DONE = 2;
   */
  NOT_DONE = 2,

  /**
   * @generated from enum value: ON_HOLD = 3;
   */
  ON_HOLD = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: STOPPED = 6;
   */
  STOPPED = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationAdministrationStatusCode_Value)
proto3.util.setEnumType(MedicationAdministrationStatusCode_Value, "google.fhir.r4.core.MedicationAdministrationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "NOT_DONE" },
  { no: 3, name: "ON_HOLD" },
  { no: 4, name: "COMPLETED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "STOPPED" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * MedicationDispense Status Codes
 * See http://terminology.hl7.org/CodeSystem/medicationdispense-status
 *
 * @generated from message google.fhir.r4.core.MedicationDispenseStatusCode
 */
export class MedicationDispenseStatusCode extends Message<MedicationDispenseStatusCode> {
  constructor(data?: PartialMessage<MedicationDispenseStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationDispenseStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationDispenseStatusCode {
    return new MedicationDispenseStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationDispenseStatusCode {
    return new MedicationDispenseStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationDispenseStatusCode {
    return new MedicationDispenseStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationDispenseStatusCode | PlainMessage<MedicationDispenseStatusCode> | undefined, b: MedicationDispenseStatusCode | PlainMessage<MedicationDispenseStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationDispenseStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationDispenseStatusCode.Value
 */
export enum MedicationDispenseStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PREPARATION = 1;
   */
  PREPARATION = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: ON_HOLD = 4;
   */
  ON_HOLD = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: STOPPED = 7;
   */
  STOPPED = 7,

  /**
   * @generated from enum value: DECLINED = 8;
   */
  DECLINED = 8,

  /**
   * @generated from enum value: UNKNOWN = 9;
   */
  UNKNOWN = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationDispenseStatusCode_Value)
proto3.util.setEnumType(MedicationDispenseStatusCode_Value, "google.fhir.r4.core.MedicationDispenseStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PREPARATION" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "ON_HOLD" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "STOPPED" },
  { no: 8, name: "DECLINED" },
  { no: 9, name: "UNKNOWN" },
]);

/**
 * MedicationKnowledge Status Codes
 * See http://terminology.hl7.org/CodeSystem/medicationknowledge-status
 *
 * @generated from message google.fhir.r4.core.MedicationKnowledgeStatusCode
 */
export class MedicationKnowledgeStatusCode extends Message<MedicationKnowledgeStatusCode> {
  constructor(data?: PartialMessage<MedicationKnowledgeStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationKnowledgeStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationKnowledgeStatusCode {
    return new MedicationKnowledgeStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationKnowledgeStatusCode {
    return new MedicationKnowledgeStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationKnowledgeStatusCode {
    return new MedicationKnowledgeStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationKnowledgeStatusCode | PlainMessage<MedicationKnowledgeStatusCode> | undefined, b: MedicationKnowledgeStatusCode | PlainMessage<MedicationKnowledgeStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationKnowledgeStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationKnowledgeStatusCode.Value
 */
export enum MedicationKnowledgeStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationKnowledgeStatusCode_Value)
proto3.util.setEnumType(MedicationKnowledgeStatusCode_Value, "google.fhir.r4.core.MedicationKnowledgeStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * MedicationRequest Intent Codes
 * See http://hl7.org/fhir/CodeSystem/medicationrequest-intent
 *
 * @generated from message google.fhir.r4.core.MedicationRequestIntentCode
 */
export class MedicationRequestIntentCode extends Message<MedicationRequestIntentCode> {
  constructor(data?: PartialMessage<MedicationRequestIntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationRequestIntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationRequestIntentCode {
    return new MedicationRequestIntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationRequestIntentCode {
    return new MedicationRequestIntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationRequestIntentCode {
    return new MedicationRequestIntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationRequestIntentCode | PlainMessage<MedicationRequestIntentCode> | undefined, b: MedicationRequestIntentCode | PlainMessage<MedicationRequestIntentCode> | undefined): boolean {
    return proto3.util.equals(MedicationRequestIntentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationRequestIntentCode.Value
 */
export enum MedicationRequestIntentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSAL = 1;
   */
  PROPOSAL = 1,

  /**
   * @generated from enum value: PLAN = 2;
   */
  PLAN = 2,

  /**
   * @generated from enum value: ORDER = 3;
   */
  ORDER = 3,

  /**
   * @generated from enum value: ORIGINAL_ORDER = 4;
   */
  ORIGINAL_ORDER = 4,

  /**
   * @generated from enum value: REFLEX_ORDER = 5;
   */
  REFLEX_ORDER = 5,

  /**
   * @generated from enum value: FILLER_ORDER = 6;
   */
  FILLER_ORDER = 6,

  /**
   * @generated from enum value: INSTANCE_ORDER = 7;
   */
  INSTANCE_ORDER = 7,

  /**
   * @generated from enum value: OPTION = 8;
   */
  OPTION = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationRequestIntentCode_Value)
proto3.util.setEnumType(MedicationRequestIntentCode_Value, "google.fhir.r4.core.MedicationRequestIntentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSAL" },
  { no: 2, name: "PLAN" },
  { no: 3, name: "ORDER" },
  { no: 4, name: "ORIGINAL_ORDER" },
  { no: 5, name: "REFLEX_ORDER" },
  { no: 6, name: "FILLER_ORDER" },
  { no: 7, name: "INSTANCE_ORDER" },
  { no: 8, name: "OPTION" },
]);

/**
 * Medication Status Codes
 * See http://hl7.org/fhir/CodeSystem/medication-statement-status
 *
 * @generated from message google.fhir.r4.core.MedicationStatementStatusCodes
 */
export class MedicationStatementStatusCodes extends Message<MedicationStatementStatusCodes> {
  constructor(data?: PartialMessage<MedicationStatementStatusCodes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationStatementStatusCodes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatementStatusCodes {
    return new MedicationStatementStatusCodes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatementStatusCodes {
    return new MedicationStatementStatusCodes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatementStatusCodes {
    return new MedicationStatementStatusCodes().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatementStatusCodes | PlainMessage<MedicationStatementStatusCodes> | undefined, b: MedicationStatementStatusCodes | PlainMessage<MedicationStatementStatusCodes> | undefined): boolean {
    return proto3.util.equals(MedicationStatementStatusCodes, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationStatementStatusCodes.Value
 */
export enum MedicationStatementStatusCodes_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,

  /**
   * @generated from enum value: INTENDED = 4;
   */
  INTENDED = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,

  /**
   * @generated from enum value: ON_HOLD = 6;
   */
  ON_HOLD = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,

  /**
   * @generated from enum value: NOT_TAKEN = 8;
   */
  NOT_TAKEN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationStatementStatusCodes_Value)
proto3.util.setEnumType(MedicationStatementStatusCodes_Value, "google.fhir.r4.core.MedicationStatementStatusCodes.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ENTERED_IN_ERROR" },
  { no: 4, name: "INTENDED" },
  { no: 5, name: "STOPPED" },
  { no: 6, name: "ON_HOLD" },
  { no: 7, name: "UNKNOWN" },
  { no: 8, name: "NOT_TAKEN" },
]);

/**
 * Medication Status Codes
 * See http://hl7.org/fhir/CodeSystem/medication-status
 *
 * @generated from message google.fhir.r4.core.MedicationStatusCode
 */
export class MedicationStatusCode extends Message<MedicationStatusCode> {
  constructor(data?: PartialMessage<MedicationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationStatusCode {
    return new MedicationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationStatusCode {
    return new MedicationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationStatusCode {
    return new MedicationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationStatusCode | PlainMessage<MedicationStatusCode> | undefined, b: MedicationStatusCode | PlainMessage<MedicationStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationStatusCode.Value
 */
export enum MedicationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 3;
   */
  ENTERED_IN_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationStatusCode_Value)
proto3.util.setEnumType(MedicationStatusCode_Value, "google.fhir.r4.core.MedicationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "ENTERED_IN_ERROR" },
]);

/**
 * MedicationRequest Status Codes
 * See http://hl7.org/fhir/CodeSystem/medicationrequest-status
 *
 * @generated from message google.fhir.r4.core.MedicationrequestStatusCode
 */
export class MedicationrequestStatusCode extends Message<MedicationrequestStatusCode> {
  constructor(data?: PartialMessage<MedicationrequestStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MedicationrequestStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MedicationrequestStatusCode {
    return new MedicationrequestStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MedicationrequestStatusCode {
    return new MedicationrequestStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MedicationrequestStatusCode {
    return new MedicationrequestStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: MedicationrequestStatusCode | PlainMessage<MedicationrequestStatusCode> | undefined, b: MedicationrequestStatusCode | PlainMessage<MedicationrequestStatusCode> | undefined): boolean {
    return proto3.util.equals(MedicationrequestStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MedicationrequestStatusCode.Value
 */
export enum MedicationrequestStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: ON_HOLD = 2;
   */
  ON_HOLD = 2,

  /**
   * @generated from enum value: CANCELLED = 3;
   */
  CANCELLED = 3,

  /**
   * @generated from enum value: COMPLETED = 4;
   */
  COMPLETED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,

  /**
   * @generated from enum value: STOPPED = 6;
   */
  STOPPED = 6,

  /**
   * @generated from enum value: DRAFT = 7;
   */
  DRAFT = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(MedicationrequestStatusCode_Value)
proto3.util.setEnumType(MedicationrequestStatusCode_Value, "google.fhir.r4.core.MedicationrequestStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "ON_HOLD" },
  { no: 3, name: "CANCELLED" },
  { no: 4, name: "COMPLETED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
  { no: 6, name: "STOPPED" },
  { no: 7, name: "DRAFT" },
  { no: 8, name: "UNKNOWN" },
]);

/**
 * The impact of the content of a message.
 * See http://hl7.org/fhir/message-significance-category
 *
 * @generated from message google.fhir.r4.core.MessageSignificanceCategoryCode
 */
export class MessageSignificanceCategoryCode extends Message<MessageSignificanceCategoryCode> {
  constructor(data?: PartialMessage<MessageSignificanceCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageSignificanceCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageSignificanceCategoryCode {
    return new MessageSignificanceCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageSignificanceCategoryCode {
    return new MessageSignificanceCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageSignificanceCategoryCode {
    return new MessageSignificanceCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageSignificanceCategoryCode | PlainMessage<MessageSignificanceCategoryCode> | undefined, b: MessageSignificanceCategoryCode | PlainMessage<MessageSignificanceCategoryCode> | undefined): boolean {
    return proto3.util.equals(MessageSignificanceCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MessageSignificanceCategoryCode.Value
 */
export enum MessageSignificanceCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONSEQUENCE = 1;
   */
  CONSEQUENCE = 1,

  /**
   * @generated from enum value: CURRENCY = 2;
   */
  CURRENCY = 2,

  /**
   * @generated from enum value: NOTIFICATION = 3;
   */
  NOTIFICATION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(MessageSignificanceCategoryCode_Value)
proto3.util.setEnumType(MessageSignificanceCategoryCode_Value, "google.fhir.r4.core.MessageSignificanceCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONSEQUENCE" },
  { no: 2, name: "CURRENCY" },
  { no: 3, name: "NOTIFICATION" },
]);

/**
 * HL7-defined table of codes which identify conditions under which
 * acknowledgments are required to be returned in response to a message. See
 * http://hl7.org/fhir/messageheader-response-request
 *
 * @generated from message google.fhir.r4.core.MessageheaderResponseRequestCode
 */
export class MessageheaderResponseRequestCode extends Message<MessageheaderResponseRequestCode> {
  constructor(data?: PartialMessage<MessageheaderResponseRequestCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.MessageheaderResponseRequestCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MessageheaderResponseRequestCode {
    return new MessageheaderResponseRequestCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MessageheaderResponseRequestCode {
    return new MessageheaderResponseRequestCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MessageheaderResponseRequestCode {
    return new MessageheaderResponseRequestCode().fromJsonString(jsonString, options);
  }

  static equals(a: MessageheaderResponseRequestCode | PlainMessage<MessageheaderResponseRequestCode> | undefined, b: MessageheaderResponseRequestCode | PlainMessage<MessageheaderResponseRequestCode> | undefined): boolean {
    return proto3.util.equals(MessageheaderResponseRequestCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.MessageheaderResponseRequestCode.Value
 */
export enum MessageheaderResponseRequestCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ALWAYS = 1;
   */
  ALWAYS = 1,

  /**
   * @generated from enum value: ON_ERROR = 2;
   */
  ON_ERROR = 2,

  /**
   * @generated from enum value: NEVER = 3;
   */
  NEVER = 3,

  /**
   * @generated from enum value: ON_SUCCESS = 4;
   */
  ON_SUCCESS = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MessageheaderResponseRequestCode_Value)
proto3.util.setEnumType(MessageheaderResponseRequestCode_Value, "google.fhir.r4.core.MessageheaderResponseRequestCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ALWAYS" },
  { no: 2, name: "ON_ERROR" },
  { no: 3, name: "NEVER" },
  { no: 4, name: "ON_SUCCESS" },
]);

/**
 * The use of a human name.
 * See http://hl7.org/fhir/name-use
 *
 * @generated from message google.fhir.r4.core.NameUseCode
 */
export class NameUseCode extends Message<NameUseCode> {
  constructor(data?: PartialMessage<NameUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NameUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NameUseCode {
    return new NameUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NameUseCode {
    return new NameUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NameUseCode {
    return new NameUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: NameUseCode | PlainMessage<NameUseCode> | undefined, b: NameUseCode | PlainMessage<NameUseCode> | undefined): boolean {
    return proto3.util.equals(NameUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.NameUseCode.Value
 */
export enum NameUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: USUAL = 1;
   */
  USUAL = 1,

  /**
   * @generated from enum value: OFFICIAL = 2;
   */
  OFFICIAL = 2,

  /**
   * @generated from enum value: TEMP = 3;
   */
  TEMP = 3,

  /**
   * @generated from enum value: NICKNAME = 4;
   */
  NICKNAME = 4,

  /**
   * @generated from enum value: ANONYMOUS = 5;
   */
  ANONYMOUS = 5,

  /**
   * @generated from enum value: OLD = 6;
   */
  OLD = 6,

  /**
   * @generated from enum value: MAIDEN = 7;
   */
  MAIDEN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(NameUseCode_Value)
proto3.util.setEnumType(NameUseCode_Value, "google.fhir.r4.core.NameUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "USUAL" },
  { no: 2, name: "OFFICIAL" },
  { no: 3, name: "TEMP" },
  { no: 4, name: "NICKNAME" },
  { no: 5, name: "ANONYMOUS" },
  { no: 6, name: "OLD" },
  { no: 7, name: "MAIDEN" },
]);

/**
 * Identifies the style of unique identifier used to identify a namespace.
 * See http://hl7.org/fhir/namingsystem-identifier-type
 *
 * @generated from message google.fhir.r4.core.NamingSystemIdentifierTypeCode
 */
export class NamingSystemIdentifierTypeCode extends Message<NamingSystemIdentifierTypeCode> {
  constructor(data?: PartialMessage<NamingSystemIdentifierTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NamingSystemIdentifierTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NamingSystemIdentifierTypeCode {
    return new NamingSystemIdentifierTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NamingSystemIdentifierTypeCode {
    return new NamingSystemIdentifierTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NamingSystemIdentifierTypeCode {
    return new NamingSystemIdentifierTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: NamingSystemIdentifierTypeCode | PlainMessage<NamingSystemIdentifierTypeCode> | undefined, b: NamingSystemIdentifierTypeCode | PlainMessage<NamingSystemIdentifierTypeCode> | undefined): boolean {
    return proto3.util.equals(NamingSystemIdentifierTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.NamingSystemIdentifierTypeCode.Value
 */
export enum NamingSystemIdentifierTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OID = 1;
   */
  OID = 1,

  /**
   * @generated from enum value: UUID = 2;
   */
  UUID = 2,

  /**
   * @generated from enum value: URI = 3;
   */
  URI = 3,

  /**
   * @generated from enum value: OTHER = 4;
   */
  OTHER = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(NamingSystemIdentifierTypeCode_Value)
proto3.util.setEnumType(NamingSystemIdentifierTypeCode_Value, "google.fhir.r4.core.NamingSystemIdentifierTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OID" },
  { no: 2, name: "UUID" },
  { no: 3, name: "URI" },
  { no: 4, name: "OTHER" },
]);

/**
 * Identifies the purpose of the naming system.
 * See http://hl7.org/fhir/namingsystem-type
 *
 * @generated from message google.fhir.r4.core.NamingSystemTypeCode
 */
export class NamingSystemTypeCode extends Message<NamingSystemTypeCode> {
  constructor(data?: PartialMessage<NamingSystemTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NamingSystemTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NamingSystemTypeCode {
    return new NamingSystemTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NamingSystemTypeCode {
    return new NamingSystemTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NamingSystemTypeCode {
    return new NamingSystemTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: NamingSystemTypeCode | PlainMessage<NamingSystemTypeCode> | undefined, b: NamingSystemTypeCode | PlainMessage<NamingSystemTypeCode> | undefined): boolean {
    return proto3.util.equals(NamingSystemTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.NamingSystemTypeCode.Value
 */
export enum NamingSystemTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CODESYSTEM = 1;
   */
  CODESYSTEM = 1,

  /**
   * @generated from enum value: IDENTIFIER = 2;
   */
  IDENTIFIER = 2,

  /**
   * @generated from enum value: ROOT = 3;
   */
  ROOT = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(NamingSystemTypeCode_Value)
proto3.util.setEnumType(NamingSystemTypeCode_Value, "google.fhir.r4.core.NamingSystemTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CODESYSTEM" },
  { no: 2, name: "IDENTIFIER" },
  { no: 3, name: "ROOT" },
]);

/**
 * The status of a resource narrative.
 * See http://hl7.org/fhir/narrative-status
 *
 * @generated from message google.fhir.r4.core.NarrativeStatusCode
 */
export class NarrativeStatusCode extends Message<NarrativeStatusCode> {
  constructor(data?: PartialMessage<NarrativeStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NarrativeStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NarrativeStatusCode {
    return new NarrativeStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NarrativeStatusCode {
    return new NarrativeStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NarrativeStatusCode {
    return new NarrativeStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: NarrativeStatusCode | PlainMessage<NarrativeStatusCode> | undefined, b: NarrativeStatusCode | PlainMessage<NarrativeStatusCode> | undefined): boolean {
    return proto3.util.equals(NarrativeStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.NarrativeStatusCode.Value
 */
export enum NarrativeStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GENERATED = 1;
   */
  GENERATED = 1,

  /**
   * @generated from enum value: EXTENSIONS = 2;
   */
  EXTENSIONS = 2,

  /**
   * @generated from enum value: ADDITIONAL = 3;
   */
  ADDITIONAL = 3,

  /**
   * @generated from enum value: EMPTY = 4;
   */
  EMPTY = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(NarrativeStatusCode_Value)
proto3.util.setEnumType(NarrativeStatusCode_Value, "google.fhir.r4.core.NarrativeStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GENERATED" },
  { no: 2, name: "EXTENSIONS" },
  { no: 3, name: "ADDITIONAL" },
  { no: 4, name: "EMPTY" },
]);

/**
 * The presentation types of notes.
 * See http://hl7.org/fhir/note-type
 *
 * @generated from message google.fhir.r4.core.NoteTypeCode
 */
export class NoteTypeCode extends Message<NoteTypeCode> {
  constructor(data?: PartialMessage<NoteTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.NoteTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NoteTypeCode {
    return new NoteTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NoteTypeCode {
    return new NoteTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NoteTypeCode {
    return new NoteTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: NoteTypeCode | PlainMessage<NoteTypeCode> | undefined, b: NoteTypeCode | PlainMessage<NoteTypeCode> | undefined): boolean {
    return proto3.util.equals(NoteTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.NoteTypeCode.Value
 */
export enum NoteTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DISPLAY = 1;
   */
  DISPLAY = 1,

  /**
   * @generated from enum value: PRINT = 2;
   */
  PRINT = 2,

  /**
   * @generated from enum value: PRINTOPER = 3;
   */
  PRINTOPER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(NoteTypeCode_Value)
proto3.util.setEnumType(NoteTypeCode_Value, "google.fhir.r4.core.NoteTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DISPLAY" },
  { no: 2, name: "PRINT" },
  { no: 3, name: "PRINTOPER" },
]);

/**
 * Permitted data type for observation value.
 * See http://hl7.org/fhir/permitted-data-type
 *
 * @generated from message google.fhir.r4.core.ObservationDataTypeCode
 */
export class ObservationDataTypeCode extends Message<ObservationDataTypeCode> {
  constructor(data?: PartialMessage<ObservationDataTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationDataTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationDataTypeCode {
    return new ObservationDataTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationDataTypeCode {
    return new ObservationDataTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationDataTypeCode {
    return new ObservationDataTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationDataTypeCode | PlainMessage<ObservationDataTypeCode> | undefined, b: ObservationDataTypeCode | PlainMessage<ObservationDataTypeCode> | undefined): boolean {
    return proto3.util.equals(ObservationDataTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ObservationDataTypeCode.Value
 */
export enum ObservationDataTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: QUANTITY = 1;
   */
  QUANTITY = 1,

  /**
   * @generated from enum value: CODEABLE_CONCEPT = 2;
   */
  CODEABLE_CONCEPT = 2,

  /**
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * @generated from enum value: BOOLEAN = 4;
   */
  BOOLEAN = 4,

  /**
   * @generated from enum value: INTEGER = 5;
   */
  INTEGER = 5,

  /**
   * @generated from enum value: RANGE = 6;
   */
  RANGE = 6,

  /**
   * @generated from enum value: RATIO = 7;
   */
  RATIO = 7,

  /**
   * @generated from enum value: SAMPLED_DATA = 8;
   */
  SAMPLED_DATA = 8,

  /**
   * @generated from enum value: TIME = 9;
   */
  TIME = 9,

  /**
   * @generated from enum value: DATE_TIME = 10;
   */
  DATE_TIME = 10,

  /**
   * @generated from enum value: PERIOD = 11;
   */
  PERIOD = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationDataTypeCode_Value)
proto3.util.setEnumType(ObservationDataTypeCode_Value, "google.fhir.r4.core.ObservationDataTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "QUANTITY" },
  { no: 2, name: "CODEABLE_CONCEPT" },
  { no: 3, name: "STRING" },
  { no: 4, name: "BOOLEAN" },
  { no: 5, name: "INTEGER" },
  { no: 6, name: "RANGE" },
  { no: 7, name: "RATIO" },
  { no: 8, name: "SAMPLED_DATA" },
  { no: 9, name: "TIME" },
  { no: 10, name: "DATE_TIME" },
  { no: 11, name: "PERIOD" },
]);

/**
 * Codes identifying the category of observation range.
 * See http://hl7.org/fhir/observation-range-category
 *
 * @generated from message google.fhir.r4.core.ObservationRangeCategoryCode
 */
export class ObservationRangeCategoryCode extends Message<ObservationRangeCategoryCode> {
  constructor(data?: PartialMessage<ObservationRangeCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationRangeCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationRangeCategoryCode {
    return new ObservationRangeCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationRangeCategoryCode {
    return new ObservationRangeCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationRangeCategoryCode {
    return new ObservationRangeCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationRangeCategoryCode | PlainMessage<ObservationRangeCategoryCode> | undefined, b: ObservationRangeCategoryCode | PlainMessage<ObservationRangeCategoryCode> | undefined): boolean {
    return proto3.util.equals(ObservationRangeCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ObservationRangeCategoryCode.Value
 */
export enum ObservationRangeCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REFERENCE = 1;
   */
  REFERENCE = 1,

  /**
   * @generated from enum value: CRITICAL = 2;
   */
  CRITICAL = 2,

  /**
   * @generated from enum value: ABSOLUTE = 3;
   */
  ABSOLUTE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationRangeCategoryCode_Value)
proto3.util.setEnumType(ObservationRangeCategoryCode_Value, "google.fhir.r4.core.ObservationRangeCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REFERENCE" },
  { no: 2, name: "CRITICAL" },
  { no: 3, name: "ABSOLUTE" },
]);

/**
 * Codes providing the status of an observation.
 * See http://hl7.org/fhir/observation-status
 *
 * @generated from message google.fhir.r4.core.ObservationStatusCode
 */
export class ObservationStatusCode extends Message<ObservationStatusCode> {
  constructor(data?: PartialMessage<ObservationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ObservationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ObservationStatusCode {
    return new ObservationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ObservationStatusCode {
    return new ObservationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ObservationStatusCode {
    return new ObservationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ObservationStatusCode | PlainMessage<ObservationStatusCode> | undefined, b: ObservationStatusCode | PlainMessage<ObservationStatusCode> | undefined): boolean {
    return proto3.util.equals(ObservationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ObservationStatusCode.Value
 */
export enum ObservationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REGISTERED = 1;
   */
  REGISTERED = 1,

  /**
   * @generated from enum value: PRELIMINARY = 2;
   */
  PRELIMINARY = 2,

  /**
   * @generated from enum value: FINAL = 3;
   */
  FINAL = 3,

  /**
   * @generated from enum value: AMENDED = 4;
   */
  AMENDED = 4,

  /**
   * @generated from enum value: CORRECTED = 5;
   */
  CORRECTED = 5,

  /**
   * @generated from enum value: CANCELLED = 6;
   */
  CANCELLED = 6,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 7;
   */
  ENTERED_IN_ERROR = 7,

  /**
   * @generated from enum value: UNKNOWN = 8;
   */
  UNKNOWN = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(ObservationStatusCode_Value)
proto3.util.setEnumType(ObservationStatusCode_Value, "google.fhir.r4.core.ObservationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REGISTERED" },
  { no: 2, name: "PRELIMINARY" },
  { no: 3, name: "FINAL" },
  { no: 4, name: "AMENDED" },
  { no: 5, name: "CORRECTED" },
  { no: 6, name: "CANCELLED" },
  { no: 7, name: "ENTERED_IN_ERROR" },
  { no: 8, name: "UNKNOWN" },
]);

/**
 * Whether an operation is a normal operation or a query.
 * See http://hl7.org/fhir/operation-kind
 *
 * @generated from message google.fhir.r4.core.OperationKindCode
 */
export class OperationKindCode extends Message<OperationKindCode> {
  constructor(data?: PartialMessage<OperationKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationKindCode {
    return new OperationKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationKindCode {
    return new OperationKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationKindCode {
    return new OperationKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: OperationKindCode | PlainMessage<OperationKindCode> | undefined, b: OperationKindCode | PlainMessage<OperationKindCode> | undefined): boolean {
    return proto3.util.equals(OperationKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.OperationKindCode.Value
 */
export enum OperationKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OPERATION = 1;
   */
  OPERATION = 1,

  /**
   * @generated from enum value: QUERY = 2;
   */
  QUERY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(OperationKindCode_Value)
proto3.util.setEnumType(OperationKindCode_Value, "google.fhir.r4.core.OperationKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OPERATION" },
  { no: 2, name: "QUERY" },
]);

/**
 * Whether an operation parameter is an input or an output parameter.
 * See http://hl7.org/fhir/operation-parameter-use
 *
 * @generated from message google.fhir.r4.core.OperationParameterUseCode
 */
export class OperationParameterUseCode extends Message<OperationParameterUseCode> {
  constructor(data?: PartialMessage<OperationParameterUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OperationParameterUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperationParameterUseCode {
    return new OperationParameterUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperationParameterUseCode {
    return new OperationParameterUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperationParameterUseCode {
    return new OperationParameterUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: OperationParameterUseCode | PlainMessage<OperationParameterUseCode> | undefined, b: OperationParameterUseCode | PlainMessage<OperationParameterUseCode> | undefined): boolean {
    return proto3.util.equals(OperationParameterUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.OperationParameterUseCode.Value
 */
export enum OperationParameterUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN = 1;
   */
  IN = 1,

  /**
   * @generated from enum value: OUT = 2;
   */
  OUT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(OperationParameterUseCode_Value)
proto3.util.setEnumType(OperationParameterUseCode_Value, "google.fhir.r4.core.OperationParameterUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN" },
  { no: 2, name: "OUT" },
]);

/**
 * Type for orientation.
 * See http://hl7.org/fhir/orientation-type
 *
 * @generated from message google.fhir.r4.core.OrientationTypeCode
 */
export class OrientationTypeCode extends Message<OrientationTypeCode> {
  constructor(data?: PartialMessage<OrientationTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.OrientationTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrientationTypeCode {
    return new OrientationTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrientationTypeCode {
    return new OrientationTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrientationTypeCode {
    return new OrientationTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: OrientationTypeCode | PlainMessage<OrientationTypeCode> | undefined, b: OrientationTypeCode | PlainMessage<OrientationTypeCode> | undefined): boolean {
    return proto3.util.equals(OrientationTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.OrientationTypeCode.Value
 */
export enum OrientationTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SENSE = 1;
   */
  SENSE = 1,

  /**
   * @generated from enum value: ANTISENSE = 2;
   */
  ANTISENSE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(OrientationTypeCode_Value)
proto3.util.setEnumType(OrientationTypeCode_Value, "google.fhir.r4.core.OrientationTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SENSE" },
  { no: 2, name: "ANTISENSE" },
]);

/**
 * Is the Participant required to attend the appointment.
 * See http://hl7.org/fhir/participantrequired
 *
 * @generated from message google.fhir.r4.core.ParticipantRequiredCode
 */
export class ParticipantRequiredCode extends Message<ParticipantRequiredCode> {
  constructor(data?: PartialMessage<ParticipantRequiredCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ParticipantRequiredCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipantRequiredCode {
    return new ParticipantRequiredCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipantRequiredCode {
    return new ParticipantRequiredCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipantRequiredCode {
    return new ParticipantRequiredCode().fromJsonString(jsonString, options);
  }

  static equals(a: ParticipantRequiredCode | PlainMessage<ParticipantRequiredCode> | undefined, b: ParticipantRequiredCode | PlainMessage<ParticipantRequiredCode> | undefined): boolean {
    return proto3.util.equals(ParticipantRequiredCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ParticipantRequiredCode.Value
 */
export enum ParticipantRequiredCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUIRED = 1;
   */
  REQUIRED = 1,

  /**
   * @generated from enum value: OPTIONAL = 2;
   */
  OPTIONAL = 2,

  /**
   * @generated from enum value: INFORMATION_ONLY = 3;
   */
  INFORMATION_ONLY = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ParticipantRequiredCode_Value)
proto3.util.setEnumType(ParticipantRequiredCode_Value, "google.fhir.r4.core.ParticipantRequiredCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUIRED" },
  { no: 2, name: "OPTIONAL" },
  { no: 3, name: "INFORMATION_ONLY" },
]);

/**
 * The Participation status of an appointment.
 * See http://hl7.org/fhir/participationstatus
 *
 * @generated from message google.fhir.r4.core.ParticipationStatusCode
 */
export class ParticipationStatusCode extends Message<ParticipationStatusCode> {
  constructor(data?: PartialMessage<ParticipationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ParticipationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ParticipationStatusCode {
    return new ParticipationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ParticipationStatusCode {
    return new ParticipationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ParticipationStatusCode {
    return new ParticipationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ParticipationStatusCode | PlainMessage<ParticipationStatusCode> | undefined, b: ParticipationStatusCode | PlainMessage<ParticipationStatusCode> | undefined): boolean {
    return proto3.util.equals(ParticipationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ParticipationStatusCode.Value
 */
export enum ParticipationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACCEPTED = 1;
   */
  ACCEPTED = 1,

  /**
   * @generated from enum value: DECLINED = 2;
   */
  DECLINED = 2,

  /**
   * @generated from enum value: TENTATIVE = 3;
   */
  TENTATIVE = 3,

  /**
   * @generated from enum value: NEEDS_ACTION = 4;
   */
  NEEDS_ACTION = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ParticipationStatusCode_Value)
proto3.util.setEnumType(ParticipationStatusCode_Value, "google.fhir.r4.core.ParticipationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACCEPTED" },
  { no: 2, name: "DECLINED" },
  { no: 3, name: "TENTATIVE" },
  { no: 4, name: "NEEDS_ACTION" },
]);

/**
 * How a property is represented when serialized.
 * See http://hl7.org/fhir/property-representation
 *
 * @generated from message google.fhir.r4.core.PropertyRepresentationCode
 */
export class PropertyRepresentationCode extends Message<PropertyRepresentationCode> {
  constructor(data?: PartialMessage<PropertyRepresentationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PropertyRepresentationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PropertyRepresentationCode {
    return new PropertyRepresentationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PropertyRepresentationCode {
    return new PropertyRepresentationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PropertyRepresentationCode {
    return new PropertyRepresentationCode().fromJsonString(jsonString, options);
  }

  static equals(a: PropertyRepresentationCode | PlainMessage<PropertyRepresentationCode> | undefined, b: PropertyRepresentationCode | PlainMessage<PropertyRepresentationCode> | undefined): boolean {
    return proto3.util.equals(PropertyRepresentationCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.PropertyRepresentationCode.Value
 */
export enum PropertyRepresentationCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: XML_ATTR = 1;
   */
  XML_ATTR = 1,

  /**
   * @generated from enum value: XML_TEXT = 2;
   */
  XML_TEXT = 2,

  /**
   * @generated from enum value: TYPE_ATTR = 3;
   */
  TYPE_ATTR = 3,

  /**
   * @generated from enum value: CDA_TEXT = 4;
   */
  CDA_TEXT = 4,

  /**
   * @generated from enum value: XHTML = 5;
   */
  XHTML = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(PropertyRepresentationCode_Value)
proto3.util.setEnumType(PropertyRepresentationCode_Value, "google.fhir.r4.core.PropertyRepresentationCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "XML_ATTR" },
  { no: 2, name: "XML_TEXT" },
  { no: 3, name: "TYPE_ATTR" },
  { no: 4, name: "CDA_TEXT" },
  { no: 5, name: "XHTML" },
]);

/**
 * The type of a property value.
 * See http://hl7.org/fhir/concept-property-type
 *
 * @generated from message google.fhir.r4.core.PropertyTypeCode
 */
export class PropertyTypeCode extends Message<PropertyTypeCode> {
  constructor(data?: PartialMessage<PropertyTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PropertyTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PropertyTypeCode {
    return new PropertyTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PropertyTypeCode {
    return new PropertyTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PropertyTypeCode {
    return new PropertyTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: PropertyTypeCode | PlainMessage<PropertyTypeCode> | undefined, b: PropertyTypeCode | PlainMessage<PropertyTypeCode> | undefined): boolean {
    return proto3.util.equals(PropertyTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.PropertyTypeCode.Value
 */
export enum PropertyTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CODE = 1;
   */
  CODE = 1,

  /**
   * @generated from enum value: CODING = 2;
   */
  CODING = 2,

  /**
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * @generated from enum value: INTEGER = 4;
   */
  INTEGER = 4,

  /**
   * @generated from enum value: BOOLEAN = 5;
   */
  BOOLEAN = 5,

  /**
   * @generated from enum value: DATE_TIME = 6;
   */
  DATE_TIME = 6,

  /**
   * @generated from enum value: DECIMAL = 7;
   */
  DECIMAL = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(PropertyTypeCode_Value)
proto3.util.setEnumType(PropertyTypeCode_Value, "google.fhir.r4.core.PropertyTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CODE" },
  { no: 2, name: "CODING" },
  { no: 3, name: "STRING" },
  { no: 4, name: "INTEGER" },
  { no: 5, name: "BOOLEAN" },
  { no: 6, name: "DATE_TIME" },
  { no: 7, name: "DECIMAL" },
]);

/**
 * How an entity was used in an activity.
 * See http://hl7.org/fhir/provenance-entity-role
 *
 * @generated from message google.fhir.r4.core.ProvenanceEntityRoleCode
 */
export class ProvenanceEntityRoleCode extends Message<ProvenanceEntityRoleCode> {
  constructor(data?: PartialMessage<ProvenanceEntityRoleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ProvenanceEntityRoleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProvenanceEntityRoleCode {
    return new ProvenanceEntityRoleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProvenanceEntityRoleCode {
    return new ProvenanceEntityRoleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProvenanceEntityRoleCode {
    return new ProvenanceEntityRoleCode().fromJsonString(jsonString, options);
  }

  static equals(a: ProvenanceEntityRoleCode | PlainMessage<ProvenanceEntityRoleCode> | undefined, b: ProvenanceEntityRoleCode | PlainMessage<ProvenanceEntityRoleCode> | undefined): boolean {
    return proto3.util.equals(ProvenanceEntityRoleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ProvenanceEntityRoleCode.Value
 */
export enum ProvenanceEntityRoleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DERIVATION = 1;
   */
  DERIVATION = 1,

  /**
   * @generated from enum value: REVISION = 2;
   */
  REVISION = 2,

  /**
   * @generated from enum value: QUOTATION = 3;
   */
  QUOTATION = 3,

  /**
   * @generated from enum value: SOURCE = 4;
   */
  SOURCE = 4,

  /**
   * @generated from enum value: REMOVAL = 5;
   */
  REMOVAL = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ProvenanceEntityRoleCode_Value)
proto3.util.setEnumType(ProvenanceEntityRoleCode_Value, "google.fhir.r4.core.ProvenanceEntityRoleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DERIVATION" },
  { no: 2, name: "REVISION" },
  { no: 3, name: "QUOTATION" },
  { no: 4, name: "SOURCE" },
  { no: 5, name: "REMOVAL" },
]);

/**
 * The lifecycle status of an artifact.
 * See http://hl7.org/fhir/publication-status
 *
 * @generated from message google.fhir.r4.core.PublicationStatusCode
 */
export class PublicationStatusCode extends Message<PublicationStatusCode> {
  constructor(data?: PartialMessage<PublicationStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.PublicationStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PublicationStatusCode {
    return new PublicationStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PublicationStatusCode {
    return new PublicationStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PublicationStatusCode {
    return new PublicationStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: PublicationStatusCode | PlainMessage<PublicationStatusCode> | undefined, b: PublicationStatusCode | PlainMessage<PublicationStatusCode> | undefined): boolean {
    return proto3.util.equals(PublicationStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.PublicationStatusCode.Value
 */
export enum PublicationStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: RETIRED = 3;
   */
  RETIRED = 3,

  /**
   * @generated from enum value: UNKNOWN = 4;
   */
  UNKNOWN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(PublicationStatusCode_Value)
proto3.util.setEnumType(PublicationStatusCode_Value, "google.fhir.r4.core.PublicationStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "RETIRED" },
  { no: 4, name: "UNKNOWN" },
]);

/**
 * Type for quality report.
 * See http://hl7.org/fhir/quality-type
 *
 * @generated from message google.fhir.r4.core.QualityTypeCode
 */
export class QualityTypeCode extends Message<QualityTypeCode> {
  constructor(data?: PartialMessage<QualityTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QualityTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QualityTypeCode {
    return new QualityTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QualityTypeCode {
    return new QualityTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QualityTypeCode {
    return new QualityTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: QualityTypeCode | PlainMessage<QualityTypeCode> | undefined, b: QualityTypeCode | PlainMessage<QualityTypeCode> | undefined): boolean {
    return proto3.util.equals(QualityTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.QualityTypeCode.Value
 */
export enum QualityTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: INDEL = 1;
   */
  INDEL = 1,

  /**
   * @generated from enum value: SNP = 2;
   */
  SNP = 2,

  /**
   * @generated from enum value: UNKNOWN = 3;
   */
  UNKNOWN = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(QualityTypeCode_Value)
proto3.util.setEnumType(QualityTypeCode_Value, "google.fhir.r4.core.QualityTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "INDEL" },
  { no: 2, name: "SNP" },
  { no: 3, name: "UNKNOWN" },
]);

/**
 * How the Quantity should be understood and represented.
 * See http://hl7.org/fhir/quantity-comparator
 *
 * @generated from message google.fhir.r4.core.QuantityComparatorCode
 */
export class QuantityComparatorCode extends Message<QuantityComparatorCode> {
  constructor(data?: PartialMessage<QuantityComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuantityComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuantityComparatorCode {
    return new QuantityComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuantityComparatorCode {
    return new QuantityComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuantityComparatorCode {
    return new QuantityComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuantityComparatorCode | PlainMessage<QuantityComparatorCode> | undefined, b: QuantityComparatorCode | PlainMessage<QuantityComparatorCode> | undefined): boolean {
    return proto3.util.equals(QuantityComparatorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.QuantityComparatorCode.Value
 */
export enum QuantityComparatorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LESS_THAN = 1;
   */
  LESS_THAN = 1,

  /**
   * @generated from enum value: LESS_THAN_OR_EQUAL_TO = 2;
   */
  LESS_THAN_OR_EQUAL_TO = 2,

  /**
   * @generated from enum value: GREATER_THAN_OR_EQUAL_TO = 3;
   */
  GREATER_THAN_OR_EQUAL_TO = 3,

  /**
   * @generated from enum value: GREATER_THAN = 4;
   */
  GREATER_THAN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(QuantityComparatorCode_Value)
proto3.util.setEnumType(QuantityComparatorCode_Value, "google.fhir.r4.core.QuantityComparatorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LESS_THAN" },
  { no: 2, name: "LESS_THAN_OR_EQUAL_TO" },
  { no: 3, name: "GREATER_THAN_OR_EQUAL_TO" },
  { no: 4, name: "GREATER_THAN" },
]);

/**
 * The criteria by which a question is enabled.
 * See http://hl7.org/fhir/questionnaire-enable-operator
 *
 * @generated from message google.fhir.r4.core.QuestionnaireItemOperatorCode
 */
export class QuestionnaireItemOperatorCode extends Message<QuestionnaireItemOperatorCode> {
  constructor(data?: PartialMessage<QuestionnaireItemOperatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireItemOperatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemOperatorCode {
    return new QuestionnaireItemOperatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemOperatorCode {
    return new QuestionnaireItemOperatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemOperatorCode {
    return new QuestionnaireItemOperatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemOperatorCode | PlainMessage<QuestionnaireItemOperatorCode> | undefined, b: QuestionnaireItemOperatorCode | PlainMessage<QuestionnaireItemOperatorCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemOperatorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.QuestionnaireItemOperatorCode.Value
 */
export enum QuestionnaireItemOperatorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EXISTS = 1;
   */
  EXISTS = 1,

  /**
   * @generated from enum value: EQUALS = 2;
   */
  EQUALS = 2,

  /**
   * @generated from enum value: NOT_EQUAL_TO = 3;
   */
  NOT_EQUAL_TO = 3,

  /**
   * @generated from enum value: GREATER_THAN = 4;
   */
  GREATER_THAN = 4,

  /**
   * @generated from enum value: LESS_THAN = 5;
   */
  LESS_THAN = 5,

  /**
   * @generated from enum value: GREATER_THAN_OR_EQUAL_TO = 6;
   */
  GREATER_THAN_OR_EQUAL_TO = 6,

  /**
   * @generated from enum value: LESS_THAN_OR_EQUAL_TO = 7;
   */
  LESS_THAN_OR_EQUAL_TO = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireItemOperatorCode_Value)
proto3.util.setEnumType(QuestionnaireItemOperatorCode_Value, "google.fhir.r4.core.QuestionnaireItemOperatorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EXISTS" },
  { no: 2, name: "EQUALS" },
  { no: 3, name: "NOT_EQUAL_TO" },
  { no: 4, name: "GREATER_THAN" },
  { no: 5, name: "LESS_THAN" },
  { no: 6, name: "GREATER_THAN_OR_EQUAL_TO" },
  { no: 7, name: "LESS_THAN_OR_EQUAL_TO" },
]);

/**
 * Distinguishes groups from questions and display text and indicates data type
 * for questions. See http://hl7.org/fhir/item-type
 *
 * @generated from message google.fhir.r4.core.QuestionnaireItemTypeCode
 */
export class QuestionnaireItemTypeCode extends Message<QuestionnaireItemTypeCode> {
  constructor(data?: PartialMessage<QuestionnaireItemTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireItemTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemTypeCode {
    return new QuestionnaireItemTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemTypeCode {
    return new QuestionnaireItemTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemTypeCode {
    return new QuestionnaireItemTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemTypeCode | PlainMessage<QuestionnaireItemTypeCode> | undefined, b: QuestionnaireItemTypeCode | PlainMessage<QuestionnaireItemTypeCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.QuestionnaireItemTypeCode.Value
 */
export enum QuestionnaireItemTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GROUP = 1;
   */
  GROUP = 1,

  /**
   * @generated from enum value: DISPLAY = 2;
   */
  DISPLAY = 2,

  /**
   * @generated from enum value: QUESTION = 3;
   */
  QUESTION = 3,

  /**
   * @generated from enum value: BOOLEAN = 4;
   */
  BOOLEAN = 4,

  /**
   * @generated from enum value: DECIMAL = 5;
   */
  DECIMAL = 5,

  /**
   * @generated from enum value: INTEGER = 6;
   */
  INTEGER = 6,

  /**
   * @generated from enum value: DATE = 7;
   */
  DATE = 7,

  /**
   * @generated from enum value: DATE_TIME = 8;
   */
  DATE_TIME = 8,

  /**
   * @generated from enum value: TIME = 9;
   */
  TIME = 9,

  /**
   * @generated from enum value: STRING = 10;
   */
  STRING = 10,

  /**
   * @generated from enum value: TEXT = 11;
   */
  TEXT = 11,

  /**
   * @generated from enum value: URL = 12;
   */
  URL = 12,

  /**
   * @generated from enum value: CHOICE = 13;
   */
  CHOICE = 13,

  /**
   * @generated from enum value: OPEN_CHOICE = 14;
   */
  OPEN_CHOICE = 14,

  /**
   * @generated from enum value: ATTACHMENT = 15;
   */
  ATTACHMENT = 15,

  /**
   * @generated from enum value: REFERENCE = 16;
   */
  REFERENCE = 16,

  /**
   * @generated from enum value: QUANTITY = 17;
   */
  QUANTITY = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireItemTypeCode_Value)
proto3.util.setEnumType(QuestionnaireItemTypeCode_Value, "google.fhir.r4.core.QuestionnaireItemTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GROUP" },
  { no: 2, name: "DISPLAY" },
  { no: 3, name: "QUESTION" },
  { no: 4, name: "BOOLEAN" },
  { no: 5, name: "DECIMAL" },
  { no: 6, name: "INTEGER" },
  { no: 7, name: "DATE" },
  { no: 8, name: "DATE_TIME" },
  { no: 9, name: "TIME" },
  { no: 10, name: "STRING" },
  { no: 11, name: "TEXT" },
  { no: 12, name: "URL" },
  { no: 13, name: "CHOICE" },
  { no: 14, name: "OPEN_CHOICE" },
  { no: 15, name: "ATTACHMENT" },
  { no: 16, name: "REFERENCE" },
  { no: 17, name: "QUANTITY" },
]);

/**
 * Identifies the modes of usage of a questionnaire that should enable a
 * particular questionnaire item. See
 * http://terminology.hl7.org/CodeSystem/questionnaire-usage-mode
 *
 * @generated from message google.fhir.r4.core.QuestionnaireItemUsageModeCode
 */
export class QuestionnaireItemUsageModeCode extends Message<QuestionnaireItemUsageModeCode> {
  constructor(data?: PartialMessage<QuestionnaireItemUsageModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireItemUsageModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireItemUsageModeCode {
    return new QuestionnaireItemUsageModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireItemUsageModeCode {
    return new QuestionnaireItemUsageModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireItemUsageModeCode {
    return new QuestionnaireItemUsageModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireItemUsageModeCode | PlainMessage<QuestionnaireItemUsageModeCode> | undefined, b: QuestionnaireItemUsageModeCode | PlainMessage<QuestionnaireItemUsageModeCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireItemUsageModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.QuestionnaireItemUsageModeCode.Value
 */
export enum QuestionnaireItemUsageModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CAPTURE_DISPLAY = 1;
   */
  CAPTURE_DISPLAY = 1,

  /**
   * @generated from enum value: CAPTURE = 2;
   */
  CAPTURE = 2,

  /**
   * @generated from enum value: DISPLAY = 3;
   */
  DISPLAY = 3,

  /**
   * @generated from enum value: DISPLAY_NON_EMPTY = 4;
   */
  DISPLAY_NON_EMPTY = 4,

  /**
   * @generated from enum value: CAPTURE_DISPLAY_NON_EMPTY = 5;
   */
  CAPTURE_DISPLAY_NON_EMPTY = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireItemUsageModeCode_Value)
proto3.util.setEnumType(QuestionnaireItemUsageModeCode_Value, "google.fhir.r4.core.QuestionnaireItemUsageModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CAPTURE_DISPLAY" },
  { no: 2, name: "CAPTURE" },
  { no: 3, name: "DISPLAY" },
  { no: 4, name: "DISPLAY_NON_EMPTY" },
  { no: 5, name: "CAPTURE_DISPLAY_NON_EMPTY" },
]);

/**
 * Lifecycle status of the questionnaire response.
 * See http://hl7.org/fhir/questionnaire-answers-status
 *
 * @generated from message google.fhir.r4.core.QuestionnaireResponseStatusCode
 */
export class QuestionnaireResponseStatusCode extends Message<QuestionnaireResponseStatusCode> {
  constructor(data?: PartialMessage<QuestionnaireResponseStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.QuestionnaireResponseStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuestionnaireResponseStatusCode {
    return new QuestionnaireResponseStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuestionnaireResponseStatusCode {
    return new QuestionnaireResponseStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuestionnaireResponseStatusCode {
    return new QuestionnaireResponseStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: QuestionnaireResponseStatusCode | PlainMessage<QuestionnaireResponseStatusCode> | undefined, b: QuestionnaireResponseStatusCode | PlainMessage<QuestionnaireResponseStatusCode> | undefined): boolean {
    return proto3.util.equals(QuestionnaireResponseStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.QuestionnaireResponseStatusCode.Value
 */
export enum QuestionnaireResponseStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: AMENDED = 3;
   */
  AMENDED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,

  /**
   * @generated from enum value: STOPPED = 5;
   */
  STOPPED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(QuestionnaireResponseStatusCode_Value)
proto3.util.setEnumType(QuestionnaireResponseStatusCode_Value, "google.fhir.r4.core.QuestionnaireResponseStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "AMENDED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
  { no: 5, name: "STOPPED" },
]);

/**
 * A set of flags that defines how references are supported.
 * See http://hl7.org/fhir/reference-handling-policy
 *
 * @generated from message google.fhir.r4.core.ReferenceHandlingPolicyCode
 */
export class ReferenceHandlingPolicyCode extends Message<ReferenceHandlingPolicyCode> {
  constructor(data?: PartialMessage<ReferenceHandlingPolicyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ReferenceHandlingPolicyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceHandlingPolicyCode {
    return new ReferenceHandlingPolicyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceHandlingPolicyCode {
    return new ReferenceHandlingPolicyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceHandlingPolicyCode {
    return new ReferenceHandlingPolicyCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReferenceHandlingPolicyCode | PlainMessage<ReferenceHandlingPolicyCode> | undefined, b: ReferenceHandlingPolicyCode | PlainMessage<ReferenceHandlingPolicyCode> | undefined): boolean {
    return proto3.util.equals(ReferenceHandlingPolicyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ReferenceHandlingPolicyCode.Value
 */
export enum ReferenceHandlingPolicyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LITERAL = 1;
   */
  LITERAL = 1,

  /**
   * @generated from enum value: LOGICAL = 2;
   */
  LOGICAL = 2,

  /**
   * @generated from enum value: RESOLVES = 3;
   */
  RESOLVES = 3,

  /**
   * @generated from enum value: ENFORCED = 4;
   */
  ENFORCED = 4,

  /**
   * @generated from enum value: LOCAL = 5;
   */
  LOCAL = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ReferenceHandlingPolicyCode_Value)
proto3.util.setEnumType(ReferenceHandlingPolicyCode_Value, "google.fhir.r4.core.ReferenceHandlingPolicyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LITERAL" },
  { no: 2, name: "LOGICAL" },
  { no: 3, name: "RESOLVES" },
  { no: 4, name: "ENFORCED" },
  { no: 5, name: "LOCAL" },
]);

/**
 * Whether a reference needs to be version specific or version independent, or
 * whether either can be used. See http://hl7.org/fhir/reference-version-rules
 *
 * @generated from message google.fhir.r4.core.ReferenceVersionRulesCode
 */
export class ReferenceVersionRulesCode extends Message<ReferenceVersionRulesCode> {
  constructor(data?: PartialMessage<ReferenceVersionRulesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ReferenceVersionRulesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReferenceVersionRulesCode {
    return new ReferenceVersionRulesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReferenceVersionRulesCode {
    return new ReferenceVersionRulesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReferenceVersionRulesCode {
    return new ReferenceVersionRulesCode().fromJsonString(jsonString, options);
  }

  static equals(a: ReferenceVersionRulesCode | PlainMessage<ReferenceVersionRulesCode> | undefined, b: ReferenceVersionRulesCode | PlainMessage<ReferenceVersionRulesCode> | undefined): boolean {
    return proto3.util.equals(ReferenceVersionRulesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ReferenceVersionRulesCode.Value
 */
export enum ReferenceVersionRulesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EITHER = 1;
   */
  EITHER = 1,

  /**
   * @generated from enum value: INDEPENDENT = 2;
   */
  INDEPENDENT = 2,

  /**
   * @generated from enum value: SPECIFIC = 3;
   */
  SPECIFIC = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ReferenceVersionRulesCode_Value)
proto3.util.setEnumType(ReferenceVersionRulesCode_Value, "google.fhir.r4.core.ReferenceVersionRulesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EITHER" },
  { no: 2, name: "INDEPENDENT" },
  { no: 3, name: "SPECIFIC" },
]);

/**
 * The type of relationship to the related artifact.
 * See http://hl7.org/fhir/related-artifact-type
 *
 * @generated from message google.fhir.r4.core.RelatedArtifactTypeCode
 */
export class RelatedArtifactTypeCode extends Message<RelatedArtifactTypeCode> {
  constructor(data?: PartialMessage<RelatedArtifactTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RelatedArtifactTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RelatedArtifactTypeCode {
    return new RelatedArtifactTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RelatedArtifactTypeCode {
    return new RelatedArtifactTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RelatedArtifactTypeCode {
    return new RelatedArtifactTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RelatedArtifactTypeCode | PlainMessage<RelatedArtifactTypeCode> | undefined, b: RelatedArtifactTypeCode | PlainMessage<RelatedArtifactTypeCode> | undefined): boolean {
    return proto3.util.equals(RelatedArtifactTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RelatedArtifactTypeCode.Value
 */
export enum RelatedArtifactTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DOCUMENTATION = 1;
   */
  DOCUMENTATION = 1,

  /**
   * @generated from enum value: JUSTIFICATION = 2;
   */
  JUSTIFICATION = 2,

  /**
   * @generated from enum value: CITATION = 3;
   */
  CITATION = 3,

  /**
   * @generated from enum value: PREDECESSOR = 4;
   */
  PREDECESSOR = 4,

  /**
   * @generated from enum value: SUCCESSOR = 5;
   */
  SUCCESSOR = 5,

  /**
   * @generated from enum value: DERIVED_FROM = 6;
   */
  DERIVED_FROM = 6,

  /**
   * @generated from enum value: DEPENDS_ON = 7;
   */
  DEPENDS_ON = 7,

  /**
   * @generated from enum value: COMPOSED_OF = 8;
   */
  COMPOSED_OF = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(RelatedArtifactTypeCode_Value)
proto3.util.setEnumType(RelatedArtifactTypeCode_Value, "google.fhir.r4.core.RelatedArtifactTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DOCUMENTATION" },
  { no: 2, name: "JUSTIFICATION" },
  { no: 3, name: "CITATION" },
  { no: 4, name: "PREDECESSOR" },
  { no: 5, name: "SUCCESSOR" },
  { no: 6, name: "DERIVED_FROM" },
  { no: 7, name: "DEPENDS_ON" },
  { no: 8, name: "COMPOSED_OF" },
]);

/**
 * Type for access of external URI.
 * See http://hl7.org/fhir/repository-type
 *
 * @generated from message google.fhir.r4.core.RepositoryTypeCode
 */
export class RepositoryTypeCode extends Message<RepositoryTypeCode> {
  constructor(data?: PartialMessage<RepositoryTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RepositoryTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RepositoryTypeCode {
    return new RepositoryTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RepositoryTypeCode {
    return new RepositoryTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RepositoryTypeCode {
    return new RepositoryTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RepositoryTypeCode | PlainMessage<RepositoryTypeCode> | undefined, b: RepositoryTypeCode | PlainMessage<RepositoryTypeCode> | undefined): boolean {
    return proto3.util.equals(RepositoryTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RepositoryTypeCode.Value
 */
export enum RepositoryTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DIRECTLINK = 1;
   */
  DIRECTLINK = 1,

  /**
   * @generated from enum value: OPENAPI = 2;
   */
  OPENAPI = 2,

  /**
   * @generated from enum value: LOGIN = 3;
   */
  LOGIN = 3,

  /**
   * @generated from enum value: OAUTH = 4;
   */
  OAUTH = 4,

  /**
   * @generated from enum value: OTHER = 5;
   */
  OTHER = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(RepositoryTypeCode_Value)
proto3.util.setEnumType(RepositoryTypeCode_Value, "google.fhir.r4.core.RepositoryTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DIRECTLINK" },
  { no: 2, name: "OPENAPI" },
  { no: 3, name: "LOGIN" },
  { no: 4, name: "OAUTH" },
  { no: 5, name: "OTHER" },
]);

/**
 * Codes indicating the degree of authority/intentionality associated with a
 * request. See http://hl7.org/fhir/request-intent
 *
 * @generated from message google.fhir.r4.core.RequestIntentCode
 */
export class RequestIntentCode extends Message<RequestIntentCode> {
  constructor(data?: PartialMessage<RequestIntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RequestIntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestIntentCode {
    return new RequestIntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestIntentCode {
    return new RequestIntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestIntentCode {
    return new RequestIntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestIntentCode | PlainMessage<RequestIntentCode> | undefined, b: RequestIntentCode | PlainMessage<RequestIntentCode> | undefined): boolean {
    return proto3.util.equals(RequestIntentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RequestIntentCode.Value
 */
export enum RequestIntentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PROPOSAL = 1;
   */
  PROPOSAL = 1,

  /**
   * @generated from enum value: PLAN = 2;
   */
  PLAN = 2,

  /**
   * @generated from enum value: DIRECTIVE = 3;
   */
  DIRECTIVE = 3,

  /**
   * @generated from enum value: ORDER = 4;
   */
  ORDER = 4,

  /**
   * @generated from enum value: ORIGINAL_ORDER = 5;
   */
  ORIGINAL_ORDER = 5,

  /**
   * @generated from enum value: REFLEX_ORDER = 6;
   */
  REFLEX_ORDER = 6,

  /**
   * @generated from enum value: FILLER_ORDER = 7;
   */
  FILLER_ORDER = 7,

  /**
   * @generated from enum value: INSTANCE_ORDER = 8;
   */
  INSTANCE_ORDER = 8,

  /**
   * @generated from enum value: OPTION = 9;
   */
  OPTION = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestIntentCode_Value)
proto3.util.setEnumType(RequestIntentCode_Value, "google.fhir.r4.core.RequestIntentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PROPOSAL" },
  { no: 2, name: "PLAN" },
  { no: 3, name: "DIRECTIVE" },
  { no: 4, name: "ORDER" },
  { no: 5, name: "ORIGINAL_ORDER" },
  { no: 6, name: "REFLEX_ORDER" },
  { no: 7, name: "FILLER_ORDER" },
  { no: 8, name: "INSTANCE_ORDER" },
  { no: 9, name: "OPTION" },
]);

/**
 * Identifies the level of importance to be assigned to actioning the request.
 * See http://hl7.org/fhir/request-priority
 *
 * @generated from message google.fhir.r4.core.RequestPriorityCode
 */
export class RequestPriorityCode extends Message<RequestPriorityCode> {
  constructor(data?: PartialMessage<RequestPriorityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RequestPriorityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestPriorityCode {
    return new RequestPriorityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestPriorityCode {
    return new RequestPriorityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestPriorityCode {
    return new RequestPriorityCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestPriorityCode | PlainMessage<RequestPriorityCode> | undefined, b: RequestPriorityCode | PlainMessage<RequestPriorityCode> | undefined): boolean {
    return proto3.util.equals(RequestPriorityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RequestPriorityCode.Value
 */
export enum RequestPriorityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ROUTINE = 1;
   */
  ROUTINE = 1,

  /**
   * @generated from enum value: URGENT = 2;
   */
  URGENT = 2,

  /**
   * @generated from enum value: ASAP = 3;
   */
  ASAP = 3,

  /**
   * @generated from enum value: STAT = 4;
   */
  STAT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestPriorityCode_Value)
proto3.util.setEnumType(RequestPriorityCode_Value, "google.fhir.r4.core.RequestPriorityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ROUTINE" },
  { no: 2, name: "URGENT" },
  { no: 3, name: "ASAP" },
  { no: 4, name: "STAT" },
]);

/**
 * A list of all the request resource types defined in this version of the FHIR
 * specification. See http://hl7.org/fhir/request-resource-types
 *
 * @generated from message google.fhir.r4.core.RequestResourceTypeCode
 */
export class RequestResourceTypeCode extends Message<RequestResourceTypeCode> {
  constructor(data?: PartialMessage<RequestResourceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RequestResourceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestResourceTypeCode {
    return new RequestResourceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestResourceTypeCode {
    return new RequestResourceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestResourceTypeCode {
    return new RequestResourceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestResourceTypeCode | PlainMessage<RequestResourceTypeCode> | undefined, b: RequestResourceTypeCode | PlainMessage<RequestResourceTypeCode> | undefined): boolean {
    return proto3.util.equals(RequestResourceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RequestResourceTypeCode.Value
 */
export enum RequestResourceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: APPOINTMENT = 1;
   */
  APPOINTMENT = 1,

  /**
   * @generated from enum value: APPOINTMENT_RESPONSE = 2;
   */
  APPOINTMENT_RESPONSE = 2,

  /**
   * @generated from enum value: CARE_PLAN = 3;
   */
  CARE_PLAN = 3,

  /**
   * @generated from enum value: CLAIM = 4;
   */
  CLAIM = 4,

  /**
   * @generated from enum value: COMMUNICATION_REQUEST = 5;
   */
  COMMUNICATION_REQUEST = 5,

  /**
   * @generated from enum value: CONTRACT = 6;
   */
  CONTRACT = 6,

  /**
   * @generated from enum value: DEVICE_REQUEST = 7;
   */
  DEVICE_REQUEST = 7,

  /**
   * @generated from enum value: ENROLLMENT_REQUEST = 8;
   */
  ENROLLMENT_REQUEST = 8,

  /**
   * @generated from enum value: IMMUNIZATION_RECOMMENDATION = 9;
   */
  IMMUNIZATION_RECOMMENDATION = 9,

  /**
   * @generated from enum value: MEDICATION_REQUEST = 10;
   */
  MEDICATION_REQUEST = 10,

  /**
   * @generated from enum value: NUTRITION_ORDER = 11;
   */
  NUTRITION_ORDER = 11,

  /**
   * @generated from enum value: SERVICE_REQUEST = 12;
   */
  SERVICE_REQUEST = 12,

  /**
   * @generated from enum value: SUPPLY_REQUEST = 13;
   */
  SUPPLY_REQUEST = 13,

  /**
   * @generated from enum value: TASK = 14;
   */
  TASK = 14,

  /**
   * @generated from enum value: VISION_PRESCRIPTION = 15;
   */
  VISION_PRESCRIPTION = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestResourceTypeCode_Value)
proto3.util.setEnumType(RequestResourceTypeCode_Value, "google.fhir.r4.core.RequestResourceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "APPOINTMENT" },
  { no: 2, name: "APPOINTMENT_RESPONSE" },
  { no: 3, name: "CARE_PLAN" },
  { no: 4, name: "CLAIM" },
  { no: 5, name: "COMMUNICATION_REQUEST" },
  { no: 6, name: "CONTRACT" },
  { no: 7, name: "DEVICE_REQUEST" },
  { no: 8, name: "ENROLLMENT_REQUEST" },
  { no: 9, name: "IMMUNIZATION_RECOMMENDATION" },
  { no: 10, name: "MEDICATION_REQUEST" },
  { no: 11, name: "NUTRITION_ORDER" },
  { no: 12, name: "SERVICE_REQUEST" },
  { no: 13, name: "SUPPLY_REQUEST" },
  { no: 14, name: "TASK" },
  { no: 15, name: "VISION_PRESCRIPTION" },
]);

/**
 * Codes identifying the lifecycle stage of a request.
 * See http://hl7.org/fhir/request-status
 *
 * @generated from message google.fhir.r4.core.RequestStatusCode
 */
export class RequestStatusCode extends Message<RequestStatusCode> {
  constructor(data?: PartialMessage<RequestStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RequestStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestStatusCode {
    return new RequestStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestStatusCode {
    return new RequestStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestStatusCode {
    return new RequestStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: RequestStatusCode | PlainMessage<RequestStatusCode> | undefined, b: RequestStatusCode | PlainMessage<RequestStatusCode> | undefined): boolean {
    return proto3.util.equals(RequestStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RequestStatusCode.Value
 */
export enum RequestStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: ON_HOLD = 3;
   */
  ON_HOLD = 3,

  /**
   * @generated from enum value: REVOKED = 4;
   */
  REVOKED = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestStatusCode_Value)
proto3.util.setEnumType(RequestStatusCode_Value, "google.fhir.r4.core.RequestStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "ON_HOLD" },
  { no: 4, name: "REVOKED" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * The possible types of research elements (E.g. Population, Exposure, Outcome).
 * See http://hl7.org/fhir/research-element-type
 *
 * @generated from message google.fhir.r4.core.ResearchElementTypeCode
 */
export class ResearchElementTypeCode extends Message<ResearchElementTypeCode> {
  constructor(data?: PartialMessage<ResearchElementTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResearchElementTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchElementTypeCode {
    return new ResearchElementTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchElementTypeCode {
    return new ResearchElementTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchElementTypeCode {
    return new ResearchElementTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchElementTypeCode | PlainMessage<ResearchElementTypeCode> | undefined, b: ResearchElementTypeCode | PlainMessage<ResearchElementTypeCode> | undefined): boolean {
    return proto3.util.equals(ResearchElementTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResearchElementTypeCode.Value
 */
export enum ResearchElementTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: POPULATION = 1;
   */
  POPULATION = 1,

  /**
   * @generated from enum value: EXPOSURE = 2;
   */
  EXPOSURE = 2,

  /**
   * @generated from enum value: OUTCOME = 3;
   */
  OUTCOME = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ResearchElementTypeCode_Value)
proto3.util.setEnumType(ResearchElementTypeCode_Value, "google.fhir.r4.core.ResearchElementTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "POPULATION" },
  { no: 2, name: "EXPOSURE" },
  { no: 3, name: "OUTCOME" },
]);

/**
 * Codes that convey the current status of the research study.
 * See http://hl7.org/fhir/research-study-status
 *
 * @generated from message google.fhir.r4.core.ResearchStudyStatusCode
 */
export class ResearchStudyStatusCode extends Message<ResearchStudyStatusCode> {
  constructor(data?: PartialMessage<ResearchStudyStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResearchStudyStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchStudyStatusCode {
    return new ResearchStudyStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchStudyStatusCode {
    return new ResearchStudyStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchStudyStatusCode {
    return new ResearchStudyStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchStudyStatusCode | PlainMessage<ResearchStudyStatusCode> | undefined, b: ResearchStudyStatusCode | PlainMessage<ResearchStudyStatusCode> | undefined): boolean {
    return proto3.util.equals(ResearchStudyStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResearchStudyStatusCode.Value
 */
export enum ResearchStudyStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: ADMINISTRATIVELY_COMPLETED = 2;
   */
  ADMINISTRATIVELY_COMPLETED = 2,

  /**
   * @generated from enum value: APPROVED = 3;
   */
  APPROVED = 3,

  /**
   * @generated from enum value: CLOSED_TO_ACCRUAL = 4;
   */
  CLOSED_TO_ACCRUAL = 4,

  /**
   * @generated from enum value: CLOSED_TO_ACCRUAL_AND_INTERVENTION = 5;
   */
  CLOSED_TO_ACCRUAL_AND_INTERVENTION = 5,

  /**
   * @generated from enum value: COMPLETED = 6;
   */
  COMPLETED = 6,

  /**
   * @generated from enum value: DISAPPROVED = 7;
   */
  DISAPPROVED = 7,

  /**
   * @generated from enum value: IN_REVIEW = 8;
   */
  IN_REVIEW = 8,

  /**
   * @generated from enum value: TEMPORARILY_CLOSED_TO_ACCRUAL = 9;
   */
  TEMPORARILY_CLOSED_TO_ACCRUAL = 9,

  /**
   * @generated from enum value: TEMPORARILY_CLOSED_TO_ACCRUAL_AND_INTERVENTION = 10;
   */
  TEMPORARILY_CLOSED_TO_ACCRUAL_AND_INTERVENTION = 10,

  /**
   * @generated from enum value: WITHDRAWN = 11;
   */
  WITHDRAWN = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(ResearchStudyStatusCode_Value)
proto3.util.setEnumType(ResearchStudyStatusCode_Value, "google.fhir.r4.core.ResearchStudyStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "ADMINISTRATIVELY_COMPLETED" },
  { no: 3, name: "APPROVED" },
  { no: 4, name: "CLOSED_TO_ACCRUAL" },
  { no: 5, name: "CLOSED_TO_ACCRUAL_AND_INTERVENTION" },
  { no: 6, name: "COMPLETED" },
  { no: 7, name: "DISAPPROVED" },
  { no: 8, name: "IN_REVIEW" },
  { no: 9, name: "TEMPORARILY_CLOSED_TO_ACCRUAL" },
  { no: 10, name: "TEMPORARILY_CLOSED_TO_ACCRUAL_AND_INTERVENTION" },
  { no: 11, name: "WITHDRAWN" },
]);

/**
 * Indicates the progression of a study subject through a study.
 * See http://hl7.org/fhir/research-subject-status
 *
 * @generated from message google.fhir.r4.core.ResearchSubjectStatusCode
 */
export class ResearchSubjectStatusCode extends Message<ResearchSubjectStatusCode> {
  constructor(data?: PartialMessage<ResearchSubjectStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResearchSubjectStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResearchSubjectStatusCode {
    return new ResearchSubjectStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResearchSubjectStatusCode {
    return new ResearchSubjectStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResearchSubjectStatusCode {
    return new ResearchSubjectStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResearchSubjectStatusCode | PlainMessage<ResearchSubjectStatusCode> | undefined, b: ResearchSubjectStatusCode | PlainMessage<ResearchSubjectStatusCode> | undefined): boolean {
    return proto3.util.equals(ResearchSubjectStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResearchSubjectStatusCode.Value
 */
export enum ResearchSubjectStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CANDIDATE = 1;
   */
  CANDIDATE = 1,

  /**
   * @generated from enum value: ELIGIBLE = 2;
   */
  ELIGIBLE = 2,

  /**
   * @generated from enum value: FOLLOW_UP = 3;
   */
  FOLLOW_UP = 3,

  /**
   * @generated from enum value: INELIGIBLE = 4;
   */
  INELIGIBLE = 4,

  /**
   * @generated from enum value: NOT_REGISTERED = 5;
   */
  NOT_REGISTERED = 5,

  /**
   * @generated from enum value: OFF_STUDY = 6;
   */
  OFF_STUDY = 6,

  /**
   * @generated from enum value: ON_STUDY = 7;
   */
  ON_STUDY = 7,

  /**
   * @generated from enum value: ON_STUDY_INTERVENTION = 8;
   */
  ON_STUDY_INTERVENTION = 8,

  /**
   * @generated from enum value: ON_STUDY_OBSERVATION = 9;
   */
  ON_STUDY_OBSERVATION = 9,

  /**
   * @generated from enum value: PENDING_ON_STUDY = 10;
   */
  PENDING_ON_STUDY = 10,

  /**
   * @generated from enum value: POTENTIAL_CANDIDATE = 11;
   */
  POTENTIAL_CANDIDATE = 11,

  /**
   * @generated from enum value: SCREENING = 12;
   */
  SCREENING = 12,

  /**
   * @generated from enum value: WITHDRAWN = 13;
   */
  WITHDRAWN = 13,
}
// Retrieve enum metadata with: proto3.getEnumType(ResearchSubjectStatusCode_Value)
proto3.util.setEnumType(ResearchSubjectStatusCode_Value, "google.fhir.r4.core.ResearchSubjectStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CANDIDATE" },
  { no: 2, name: "ELIGIBLE" },
  { no: 3, name: "FOLLOW_UP" },
  { no: 4, name: "INELIGIBLE" },
  { no: 5, name: "NOT_REGISTERED" },
  { no: 6, name: "OFF_STUDY" },
  { no: 7, name: "ON_STUDY" },
  { no: 8, name: "ON_STUDY_INTERVENTION" },
  { no: 9, name: "ON_STUDY_OBSERVATION" },
  { no: 10, name: "PENDING_ON_STUDY" },
  { no: 11, name: "POTENTIAL_CANDIDATE" },
  { no: 12, name: "SCREENING" },
  { no: 13, name: "WITHDRAWN" },
]);

/**
 * Provides general guidance around the kind of access Control to Read, Search,
 * Create, Update, or Delete a resource. See
 * http://terminology.hl7.org/CodeSystem/resource-security-category
 *
 * @generated from message google.fhir.r4.core.ResourceSecurityCategoryCode
 */
export class ResourceSecurityCategoryCode extends Message<ResourceSecurityCategoryCode> {
  constructor(data?: PartialMessage<ResourceSecurityCategoryCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResourceSecurityCategoryCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceSecurityCategoryCode {
    return new ResourceSecurityCategoryCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceSecurityCategoryCode {
    return new ResourceSecurityCategoryCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceSecurityCategoryCode {
    return new ResourceSecurityCategoryCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceSecurityCategoryCode | PlainMessage<ResourceSecurityCategoryCode> | undefined, b: ResourceSecurityCategoryCode | PlainMessage<ResourceSecurityCategoryCode> | undefined): boolean {
    return proto3.util.equals(ResourceSecurityCategoryCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResourceSecurityCategoryCode.Value
 */
export enum ResourceSecurityCategoryCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ANONYMOUS = 1;
   */
  ANONYMOUS = 1,

  /**
   * @generated from enum value: BUSINESS = 2;
   */
  BUSINESS = 2,

  /**
   * @generated from enum value: INDIVIDUAL = 3;
   */
  INDIVIDUAL = 3,

  /**
   * @generated from enum value: PATIENT = 4;
   */
  PATIENT = 4,

  /**
   * @generated from enum value: NOT_CLASSIFIED = 5;
   */
  NOT_CLASSIFIED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ResourceSecurityCategoryCode_Value)
proto3.util.setEnumType(ResourceSecurityCategoryCode_Value, "google.fhir.r4.core.ResourceSecurityCategoryCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ANONYMOUS" },
  { no: 2, name: "BUSINESS" },
  { no: 3, name: "INDIVIDUAL" },
  { no: 4, name: "PATIENT" },
  { no: 5, name: "NOT_CLASSIFIED" },
]);

/**
 * One of the resource types defined as part of this version of FHIR.
 * See http://hl7.org/fhir/resource-types
 *
 * @generated from message google.fhir.r4.core.ResourceTypeCode
 */
export class ResourceTypeCode extends Message<ResourceTypeCode> {
  constructor(data?: PartialMessage<ResourceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResourceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceTypeCode {
    return new ResourceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceTypeCode {
    return new ResourceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceTypeCode {
    return new ResourceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceTypeCode | PlainMessage<ResourceTypeCode> | undefined, b: ResourceTypeCode | PlainMessage<ResourceTypeCode> | undefined): boolean {
    return proto3.util.equals(ResourceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResourceTypeCode.Value
 */
export enum ResourceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ACCOUNT = 1;
   */
  ACCOUNT = 1,

  /**
   * @generated from enum value: ACTIVITY_DEFINITION = 2;
   */
  ACTIVITY_DEFINITION = 2,

  /**
   * @generated from enum value: ADVERSE_EVENT = 3;
   */
  ADVERSE_EVENT = 3,

  /**
   * @generated from enum value: ALLERGY_INTOLERANCE = 4;
   */
  ALLERGY_INTOLERANCE = 4,

  /**
   * @generated from enum value: APPOINTMENT = 5;
   */
  APPOINTMENT = 5,

  /**
   * @generated from enum value: APPOINTMENT_RESPONSE = 6;
   */
  APPOINTMENT_RESPONSE = 6,

  /**
   * @generated from enum value: AUDIT_EVENT = 7;
   */
  AUDIT_EVENT = 7,

  /**
   * @generated from enum value: BASIC = 8;
   */
  BASIC = 8,

  /**
   * @generated from enum value: BINARY = 9;
   */
  BINARY = 9,

  /**
   * @generated from enum value: BIOLOGICALLY_DERIVED_PRODUCT = 10;
   */
  BIOLOGICALLY_DERIVED_PRODUCT = 10,

  /**
   * @generated from enum value: BODY_STRUCTURE = 11;
   */
  BODY_STRUCTURE = 11,

  /**
   * @generated from enum value: BUNDLE = 12;
   */
  BUNDLE = 12,

  /**
   * @generated from enum value: CAPABILITY_STATEMENT = 13;
   */
  CAPABILITY_STATEMENT = 13,

  /**
   * @generated from enum value: CARE_PLAN = 14;
   */
  CARE_PLAN = 14,

  /**
   * @generated from enum value: CARE_TEAM = 15;
   */
  CARE_TEAM = 15,

  /**
   * @generated from enum value: CATALOG_ENTRY = 16;
   */
  CATALOG_ENTRY = 16,

  /**
   * @generated from enum value: CHARGE_ITEM = 17;
   */
  CHARGE_ITEM = 17,

  /**
   * @generated from enum value: CHARGE_ITEM_DEFINITION = 18;
   */
  CHARGE_ITEM_DEFINITION = 18,

  /**
   * @generated from enum value: CLAIM = 19;
   */
  CLAIM = 19,

  /**
   * @generated from enum value: CLAIM_RESPONSE = 20;
   */
  CLAIM_RESPONSE = 20,

  /**
   * @generated from enum value: CLINICAL_IMPRESSION = 21;
   */
  CLINICAL_IMPRESSION = 21,

  /**
   * @generated from enum value: CODE_SYSTEM = 22;
   */
  CODE_SYSTEM = 22,

  /**
   * @generated from enum value: COMMUNICATION = 23;
   */
  COMMUNICATION = 23,

  /**
   * @generated from enum value: COMMUNICATION_REQUEST = 24;
   */
  COMMUNICATION_REQUEST = 24,

  /**
   * @generated from enum value: COMPARTMENT_DEFINITION = 25;
   */
  COMPARTMENT_DEFINITION = 25,

  /**
   * @generated from enum value: COMPOSITION = 26;
   */
  COMPOSITION = 26,

  /**
   * @generated from enum value: CONCEPT_MAP = 27;
   */
  CONCEPT_MAP = 27,

  /**
   * @generated from enum value: CONDITION = 28;
   */
  CONDITION = 28,

  /**
   * @generated from enum value: CONSENT = 29;
   */
  CONSENT = 29,

  /**
   * @generated from enum value: CONTRACT = 30;
   */
  CONTRACT = 30,

  /**
   * @generated from enum value: COVERAGE = 31;
   */
  COVERAGE = 31,

  /**
   * @generated from enum value: COVERAGE_ELIGIBILITY_REQUEST = 32;
   */
  COVERAGE_ELIGIBILITY_REQUEST = 32,

  /**
   * @generated from enum value: COVERAGE_ELIGIBILITY_RESPONSE = 33;
   */
  COVERAGE_ELIGIBILITY_RESPONSE = 33,

  /**
   * @generated from enum value: DETECTED_ISSUE = 34;
   */
  DETECTED_ISSUE = 34,

  /**
   * @generated from enum value: DEVICE = 35;
   */
  DEVICE = 35,

  /**
   * @generated from enum value: DEVICE_DEFINITION = 36;
   */
  DEVICE_DEFINITION = 36,

  /**
   * @generated from enum value: DEVICE_METRIC = 37;
   */
  DEVICE_METRIC = 37,

  /**
   * @generated from enum value: DEVICE_REQUEST = 38;
   */
  DEVICE_REQUEST = 38,

  /**
   * @generated from enum value: DEVICE_USE_STATEMENT = 39;
   */
  DEVICE_USE_STATEMENT = 39,

  /**
   * @generated from enum value: DIAGNOSTIC_REPORT = 40;
   */
  DIAGNOSTIC_REPORT = 40,

  /**
   * @generated from enum value: DOCUMENT_MANIFEST = 41;
   */
  DOCUMENT_MANIFEST = 41,

  /**
   * @generated from enum value: DOCUMENT_REFERENCE = 42;
   */
  DOCUMENT_REFERENCE = 42,

  /**
   * @generated from enum value: DOMAIN_RESOURCE = 43;
   */
  DOMAIN_RESOURCE = 43,

  /**
   * @generated from enum value: EFFECT_EVIDENCE_SYNTHESIS = 44;
   */
  EFFECT_EVIDENCE_SYNTHESIS = 44,

  /**
   * @generated from enum value: ENCOUNTER = 45;
   */
  ENCOUNTER = 45,

  /**
   * @generated from enum value: ENDPOINT = 46;
   */
  ENDPOINT = 46,

  /**
   * @generated from enum value: ENROLLMENT_REQUEST = 47;
   */
  ENROLLMENT_REQUEST = 47,

  /**
   * @generated from enum value: ENROLLMENT_RESPONSE = 48;
   */
  ENROLLMENT_RESPONSE = 48,

  /**
   * @generated from enum value: EPISODE_OF_CARE = 49;
   */
  EPISODE_OF_CARE = 49,

  /**
   * @generated from enum value: EVENT_DEFINITION = 50;
   */
  EVENT_DEFINITION = 50,

  /**
   * @generated from enum value: EVIDENCE = 51;
   */
  EVIDENCE = 51,

  /**
   * @generated from enum value: EVIDENCE_VARIABLE = 52;
   */
  EVIDENCE_VARIABLE = 52,

  /**
   * @generated from enum value: EXAMPLE_SCENARIO = 53;
   */
  EXAMPLE_SCENARIO = 53,

  /**
   * @generated from enum value: EXPLANATION_OF_BENEFIT = 54;
   */
  EXPLANATION_OF_BENEFIT = 54,

  /**
   * @generated from enum value: FAMILY_MEMBER_HISTORY = 55;
   */
  FAMILY_MEMBER_HISTORY = 55,

  /**
   * @generated from enum value: FLAG = 56;
   */
  FLAG = 56,

  /**
   * @generated from enum value: GOAL = 57;
   */
  GOAL = 57,

  /**
   * @generated from enum value: GRAPH_DEFINITION = 58;
   */
  GRAPH_DEFINITION = 58,

  /**
   * @generated from enum value: GROUP = 59;
   */
  GROUP = 59,

  /**
   * @generated from enum value: GUIDANCE_RESPONSE = 60;
   */
  GUIDANCE_RESPONSE = 60,

  /**
   * @generated from enum value: HEALTHCARE_SERVICE = 61;
   */
  HEALTHCARE_SERVICE = 61,

  /**
   * @generated from enum value: IMAGING_STUDY = 62;
   */
  IMAGING_STUDY = 62,

  /**
   * @generated from enum value: IMMUNIZATION = 63;
   */
  IMMUNIZATION = 63,

  /**
   * @generated from enum value: IMMUNIZATION_EVALUATION = 64;
   */
  IMMUNIZATION_EVALUATION = 64,

  /**
   * @generated from enum value: IMMUNIZATION_RECOMMENDATION = 65;
   */
  IMMUNIZATION_RECOMMENDATION = 65,

  /**
   * @generated from enum value: IMPLEMENTATION_GUIDE = 66;
   */
  IMPLEMENTATION_GUIDE = 66,

  /**
   * @generated from enum value: INSURANCE_PLAN = 67;
   */
  INSURANCE_PLAN = 67,

  /**
   * @generated from enum value: INVOICE = 68;
   */
  INVOICE = 68,

  /**
   * @generated from enum value: LIBRARY = 69;
   */
  LIBRARY = 69,

  /**
   * @generated from enum value: LINKAGE = 70;
   */
  LINKAGE = 70,

  /**
   * @generated from enum value: LIST = 71;
   */
  LIST = 71,

  /**
   * @generated from enum value: LOCATION = 72;
   */
  LOCATION = 72,

  /**
   * @generated from enum value: MEASURE = 73;
   */
  MEASURE = 73,

  /**
   * @generated from enum value: MEASURE_REPORT = 74;
   */
  MEASURE_REPORT = 74,

  /**
   * @generated from enum value: MEDIA = 75;
   */
  MEDIA = 75,

  /**
   * @generated from enum value: MEDICATION = 76;
   */
  MEDICATION = 76,

  /**
   * @generated from enum value: MEDICATION_ADMINISTRATION = 77;
   */
  MEDICATION_ADMINISTRATION = 77,

  /**
   * @generated from enum value: MEDICATION_DISPENSE = 78;
   */
  MEDICATION_DISPENSE = 78,

  /**
   * @generated from enum value: MEDICATION_KNOWLEDGE = 79;
   */
  MEDICATION_KNOWLEDGE = 79,

  /**
   * @generated from enum value: MEDICATION_REQUEST = 80;
   */
  MEDICATION_REQUEST = 80,

  /**
   * @generated from enum value: MEDICATION_STATEMENT = 81;
   */
  MEDICATION_STATEMENT = 81,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT = 82;
   */
  MEDICINAL_PRODUCT = 82,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_AUTHORIZATION = 83;
   */
  MEDICINAL_PRODUCT_AUTHORIZATION = 83,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_CONTRAINDICATION = 84;
   */
  MEDICINAL_PRODUCT_CONTRAINDICATION = 84,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_INDICATION = 85;
   */
  MEDICINAL_PRODUCT_INDICATION = 85,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_INGREDIENT = 86;
   */
  MEDICINAL_PRODUCT_INGREDIENT = 86,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_INTERACTION = 87;
   */
  MEDICINAL_PRODUCT_INTERACTION = 87,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_MANUFACTURED = 88;
   */
  MEDICINAL_PRODUCT_MANUFACTURED = 88,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_PACKAGED = 89;
   */
  MEDICINAL_PRODUCT_PACKAGED = 89,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_PHARMACEUTICAL = 90;
   */
  MEDICINAL_PRODUCT_PHARMACEUTICAL = 90,

  /**
   * @generated from enum value: MEDICINAL_PRODUCT_UNDESIRABLE_EFFECT = 91;
   */
  MEDICINAL_PRODUCT_UNDESIRABLE_EFFECT = 91,

  /**
   * @generated from enum value: MESSAGE_DEFINITION = 92;
   */
  MESSAGE_DEFINITION = 92,

  /**
   * @generated from enum value: MESSAGE_HEADER = 93;
   */
  MESSAGE_HEADER = 93,

  /**
   * @generated from enum value: MOLECULAR_SEQUENCE = 94;
   */
  MOLECULAR_SEQUENCE = 94,

  /**
   * @generated from enum value: NAMING_SYSTEM = 95;
   */
  NAMING_SYSTEM = 95,

  /**
   * @generated from enum value: NUTRITION_ORDER = 96;
   */
  NUTRITION_ORDER = 96,

  /**
   * @generated from enum value: OBSERVATION = 97;
   */
  OBSERVATION = 97,

  /**
   * @generated from enum value: OBSERVATION_DEFINITION = 98;
   */
  OBSERVATION_DEFINITION = 98,

  /**
   * @generated from enum value: OPERATION_DEFINITION = 99;
   */
  OPERATION_DEFINITION = 99,

  /**
   * @generated from enum value: OPERATION_OUTCOME = 100;
   */
  OPERATION_OUTCOME = 100,

  /**
   * @generated from enum value: ORGANIZATION = 101;
   */
  ORGANIZATION = 101,

  /**
   * @generated from enum value: ORGANIZATION_AFFILIATION = 102;
   */
  ORGANIZATION_AFFILIATION = 102,

  /**
   * @generated from enum value: PARAMETERS = 103;
   */
  PARAMETERS = 103,

  /**
   * @generated from enum value: PATIENT = 104;
   */
  PATIENT = 104,

  /**
   * @generated from enum value: PAYMENT_NOTICE = 105;
   */
  PAYMENT_NOTICE = 105,

  /**
   * @generated from enum value: PAYMENT_RECONCILIATION = 106;
   */
  PAYMENT_RECONCILIATION = 106,

  /**
   * @generated from enum value: PERSON = 107;
   */
  PERSON = 107,

  /**
   * @generated from enum value: PLAN_DEFINITION = 108;
   */
  PLAN_DEFINITION = 108,

  /**
   * @generated from enum value: PRACTITIONER = 109;
   */
  PRACTITIONER = 109,

  /**
   * @generated from enum value: PRACTITIONER_ROLE = 110;
   */
  PRACTITIONER_ROLE = 110,

  /**
   * @generated from enum value: PROCEDURE = 111;
   */
  PROCEDURE = 111,

  /**
   * @generated from enum value: PROVENANCE = 112;
   */
  PROVENANCE = 112,

  /**
   * @generated from enum value: QUESTIONNAIRE = 113;
   */
  QUESTIONNAIRE = 113,

  /**
   * @generated from enum value: QUESTIONNAIRE_RESPONSE = 114;
   */
  QUESTIONNAIRE_RESPONSE = 114,

  /**
   * @generated from enum value: RELATED_PERSON = 115;
   */
  RELATED_PERSON = 115,

  /**
   * @generated from enum value: REQUEST_GROUP = 116;
   */
  REQUEST_GROUP = 116,

  /**
   * @generated from enum value: RESEARCH_DEFINITION = 117;
   */
  RESEARCH_DEFINITION = 117,

  /**
   * @generated from enum value: RESEARCH_ELEMENT_DEFINITION = 118;
   */
  RESEARCH_ELEMENT_DEFINITION = 118,

  /**
   * @generated from enum value: RESEARCH_STUDY = 119;
   */
  RESEARCH_STUDY = 119,

  /**
   * @generated from enum value: RESEARCH_SUBJECT = 120;
   */
  RESEARCH_SUBJECT = 120,

  /**
   * @generated from enum value: RESOURCE = 121;
   */
  RESOURCE = 121,

  /**
   * @generated from enum value: RISK_ASSESSMENT = 122;
   */
  RISK_ASSESSMENT = 122,

  /**
   * @generated from enum value: RISK_EVIDENCE_SYNTHESIS = 123;
   */
  RISK_EVIDENCE_SYNTHESIS = 123,

  /**
   * @generated from enum value: SCHEDULE = 124;
   */
  SCHEDULE = 124,

  /**
   * @generated from enum value: SEARCH_PARAMETER = 125;
   */
  SEARCH_PARAMETER = 125,

  /**
   * @generated from enum value: SERVICE_REQUEST = 126;
   */
  SERVICE_REQUEST = 126,

  /**
   * @generated from enum value: SLOT = 127;
   */
  SLOT = 127,

  /**
   * @generated from enum value: SPECIMEN = 128;
   */
  SPECIMEN = 128,

  /**
   * @generated from enum value: SPECIMEN_DEFINITION = 129;
   */
  SPECIMEN_DEFINITION = 129,

  /**
   * @generated from enum value: STRUCTURE_DEFINITION = 130;
   */
  STRUCTURE_DEFINITION = 130,

  /**
   * @generated from enum value: STRUCTURE_MAP = 131;
   */
  STRUCTURE_MAP = 131,

  /**
   * @generated from enum value: SUBSCRIPTION = 132;
   */
  SUBSCRIPTION = 132,

  /**
   * @generated from enum value: SUBSTANCE = 133;
   */
  SUBSTANCE = 133,

  /**
   * @generated from enum value: SUBSTANCE_NUCLEIC_ACID = 134;
   */
  SUBSTANCE_NUCLEIC_ACID = 134,

  /**
   * @generated from enum value: SUBSTANCE_POLYMER = 135;
   */
  SUBSTANCE_POLYMER = 135,

  /**
   * @generated from enum value: SUBSTANCE_PROTEIN = 136;
   */
  SUBSTANCE_PROTEIN = 136,

  /**
   * @generated from enum value: SUBSTANCE_REFERENCE_INFORMATION = 137;
   */
  SUBSTANCE_REFERENCE_INFORMATION = 137,

  /**
   * @generated from enum value: SUBSTANCE_SOURCE_MATERIAL = 138;
   */
  SUBSTANCE_SOURCE_MATERIAL = 138,

  /**
   * @generated from enum value: SUBSTANCE_SPECIFICATION = 139;
   */
  SUBSTANCE_SPECIFICATION = 139,

  /**
   * @generated from enum value: SUPPLY_DELIVERY = 140;
   */
  SUPPLY_DELIVERY = 140,

  /**
   * @generated from enum value: SUPPLY_REQUEST = 141;
   */
  SUPPLY_REQUEST = 141,

  /**
   * @generated from enum value: TASK = 142;
   */
  TASK = 142,

  /**
   * @generated from enum value: TERMINOLOGY_CAPABILITIES = 143;
   */
  TERMINOLOGY_CAPABILITIES = 143,

  /**
   * @generated from enum value: TEST_REPORT = 144;
   */
  TEST_REPORT = 144,

  /**
   * @generated from enum value: TEST_SCRIPT = 145;
   */
  TEST_SCRIPT = 145,

  /**
   * @generated from enum value: VALUE_SET = 146;
   */
  VALUE_SET = 146,

  /**
   * @generated from enum value: VERIFICATION_RESULT = 147;
   */
  VERIFICATION_RESULT = 147,

  /**
   * @generated from enum value: VISION_PRESCRIPTION = 148;
   */
  VISION_PRESCRIPTION = 148,
}
// Retrieve enum metadata with: proto3.getEnumType(ResourceTypeCode_Value)
proto3.util.setEnumType(ResourceTypeCode_Value, "google.fhir.r4.core.ResourceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ACCOUNT" },
  { no: 2, name: "ACTIVITY_DEFINITION" },
  { no: 3, name: "ADVERSE_EVENT" },
  { no: 4, name: "ALLERGY_INTOLERANCE" },
  { no: 5, name: "APPOINTMENT" },
  { no: 6, name: "APPOINTMENT_RESPONSE" },
  { no: 7, name: "AUDIT_EVENT" },
  { no: 8, name: "BASIC" },
  { no: 9, name: "BINARY" },
  { no: 10, name: "BIOLOGICALLY_DERIVED_PRODUCT" },
  { no: 11, name: "BODY_STRUCTURE" },
  { no: 12, name: "BUNDLE" },
  { no: 13, name: "CAPABILITY_STATEMENT" },
  { no: 14, name: "CARE_PLAN" },
  { no: 15, name: "CARE_TEAM" },
  { no: 16, name: "CATALOG_ENTRY" },
  { no: 17, name: "CHARGE_ITEM" },
  { no: 18, name: "CHARGE_ITEM_DEFINITION" },
  { no: 19, name: "CLAIM" },
  { no: 20, name: "CLAIM_RESPONSE" },
  { no: 21, name: "CLINICAL_IMPRESSION" },
  { no: 22, name: "CODE_SYSTEM" },
  { no: 23, name: "COMMUNICATION" },
  { no: 24, name: "COMMUNICATION_REQUEST" },
  { no: 25, name: "COMPARTMENT_DEFINITION" },
  { no: 26, name: "COMPOSITION" },
  { no: 27, name: "CONCEPT_MAP" },
  { no: 28, name: "CONDITION" },
  { no: 29, name: "CONSENT" },
  { no: 30, name: "CONTRACT" },
  { no: 31, name: "COVERAGE" },
  { no: 32, name: "COVERAGE_ELIGIBILITY_REQUEST" },
  { no: 33, name: "COVERAGE_ELIGIBILITY_RESPONSE" },
  { no: 34, name: "DETECTED_ISSUE" },
  { no: 35, name: "DEVICE" },
  { no: 36, name: "DEVICE_DEFINITION" },
  { no: 37, name: "DEVICE_METRIC" },
  { no: 38, name: "DEVICE_REQUEST" },
  { no: 39, name: "DEVICE_USE_STATEMENT" },
  { no: 40, name: "DIAGNOSTIC_REPORT" },
  { no: 41, name: "DOCUMENT_MANIFEST" },
  { no: 42, name: "DOCUMENT_REFERENCE" },
  { no: 43, name: "DOMAIN_RESOURCE" },
  { no: 44, name: "EFFECT_EVIDENCE_SYNTHESIS" },
  { no: 45, name: "ENCOUNTER" },
  { no: 46, name: "ENDPOINT" },
  { no: 47, name: "ENROLLMENT_REQUEST" },
  { no: 48, name: "ENROLLMENT_RESPONSE" },
  { no: 49, name: "EPISODE_OF_CARE" },
  { no: 50, name: "EVENT_DEFINITION" },
  { no: 51, name: "EVIDENCE" },
  { no: 52, name: "EVIDENCE_VARIABLE" },
  { no: 53, name: "EXAMPLE_SCENARIO" },
  { no: 54, name: "EXPLANATION_OF_BENEFIT" },
  { no: 55, name: "FAMILY_MEMBER_HISTORY" },
  { no: 56, name: "FLAG" },
  { no: 57, name: "GOAL" },
  { no: 58, name: "GRAPH_DEFINITION" },
  { no: 59, name: "GROUP" },
  { no: 60, name: "GUIDANCE_RESPONSE" },
  { no: 61, name: "HEALTHCARE_SERVICE" },
  { no: 62, name: "IMAGING_STUDY" },
  { no: 63, name: "IMMUNIZATION" },
  { no: 64, name: "IMMUNIZATION_EVALUATION" },
  { no: 65, name: "IMMUNIZATION_RECOMMENDATION" },
  { no: 66, name: "IMPLEMENTATION_GUIDE" },
  { no: 67, name: "INSURANCE_PLAN" },
  { no: 68, name: "INVOICE" },
  { no: 69, name: "LIBRARY" },
  { no: 70, name: "LINKAGE" },
  { no: 71, name: "LIST" },
  { no: 72, name: "LOCATION" },
  { no: 73, name: "MEASURE" },
  { no: 74, name: "MEASURE_REPORT" },
  { no: 75, name: "MEDIA" },
  { no: 76, name: "MEDICATION" },
  { no: 77, name: "MEDICATION_ADMINISTRATION" },
  { no: 78, name: "MEDICATION_DISPENSE" },
  { no: 79, name: "MEDICATION_KNOWLEDGE" },
  { no: 80, name: "MEDICATION_REQUEST" },
  { no: 81, name: "MEDICATION_STATEMENT" },
  { no: 82, name: "MEDICINAL_PRODUCT" },
  { no: 83, name: "MEDICINAL_PRODUCT_AUTHORIZATION" },
  { no: 84, name: "MEDICINAL_PRODUCT_CONTRAINDICATION" },
  { no: 85, name: "MEDICINAL_PRODUCT_INDICATION" },
  { no: 86, name: "MEDICINAL_PRODUCT_INGREDIENT" },
  { no: 87, name: "MEDICINAL_PRODUCT_INTERACTION" },
  { no: 88, name: "MEDICINAL_PRODUCT_MANUFACTURED" },
  { no: 89, name: "MEDICINAL_PRODUCT_PACKAGED" },
  { no: 90, name: "MEDICINAL_PRODUCT_PHARMACEUTICAL" },
  { no: 91, name: "MEDICINAL_PRODUCT_UNDESIRABLE_EFFECT" },
  { no: 92, name: "MESSAGE_DEFINITION" },
  { no: 93, name: "MESSAGE_HEADER" },
  { no: 94, name: "MOLECULAR_SEQUENCE" },
  { no: 95, name: "NAMING_SYSTEM" },
  { no: 96, name: "NUTRITION_ORDER" },
  { no: 97, name: "OBSERVATION" },
  { no: 98, name: "OBSERVATION_DEFINITION" },
  { no: 99, name: "OPERATION_DEFINITION" },
  { no: 100, name: "OPERATION_OUTCOME" },
  { no: 101, name: "ORGANIZATION" },
  { no: 102, name: "ORGANIZATION_AFFILIATION" },
  { no: 103, name: "PARAMETERS" },
  { no: 104, name: "PATIENT" },
  { no: 105, name: "PAYMENT_NOTICE" },
  { no: 106, name: "PAYMENT_RECONCILIATION" },
  { no: 107, name: "PERSON" },
  { no: 108, name: "PLAN_DEFINITION" },
  { no: 109, name: "PRACTITIONER" },
  { no: 110, name: "PRACTITIONER_ROLE" },
  { no: 111, name: "PROCEDURE" },
  { no: 112, name: "PROVENANCE" },
  { no: 113, name: "QUESTIONNAIRE" },
  { no: 114, name: "QUESTIONNAIRE_RESPONSE" },
  { no: 115, name: "RELATED_PERSON" },
  { no: 116, name: "REQUEST_GROUP" },
  { no: 117, name: "RESEARCH_DEFINITION" },
  { no: 118, name: "RESEARCH_ELEMENT_DEFINITION" },
  { no: 119, name: "RESEARCH_STUDY" },
  { no: 120, name: "RESEARCH_SUBJECT" },
  { no: 121, name: "RESOURCE" },
  { no: 122, name: "RISK_ASSESSMENT" },
  { no: 123, name: "RISK_EVIDENCE_SYNTHESIS" },
  { no: 124, name: "SCHEDULE" },
  { no: 125, name: "SEARCH_PARAMETER" },
  { no: 126, name: "SERVICE_REQUEST" },
  { no: 127, name: "SLOT" },
  { no: 128, name: "SPECIMEN" },
  { no: 129, name: "SPECIMEN_DEFINITION" },
  { no: 130, name: "STRUCTURE_DEFINITION" },
  { no: 131, name: "STRUCTURE_MAP" },
  { no: 132, name: "SUBSCRIPTION" },
  { no: 133, name: "SUBSTANCE" },
  { no: 134, name: "SUBSTANCE_NUCLEIC_ACID" },
  { no: 135, name: "SUBSTANCE_POLYMER" },
  { no: 136, name: "SUBSTANCE_PROTEIN" },
  { no: 137, name: "SUBSTANCE_REFERENCE_INFORMATION" },
  { no: 138, name: "SUBSTANCE_SOURCE_MATERIAL" },
  { no: 139, name: "SUBSTANCE_SPECIFICATION" },
  { no: 140, name: "SUPPLY_DELIVERY" },
  { no: 141, name: "SUPPLY_REQUEST" },
  { no: 142, name: "TASK" },
  { no: 143, name: "TERMINOLOGY_CAPABILITIES" },
  { no: 144, name: "TEST_REPORT" },
  { no: 145, name: "TEST_SCRIPT" },
  { no: 146, name: "VALUE_SET" },
  { no: 147, name: "VERIFICATION_RESULT" },
  { no: 148, name: "VISION_PRESCRIPTION" },
]);

/**
 * How the system supports versioning for a resource.
 * See http://hl7.org/fhir/versioning-policy
 *
 * @generated from message google.fhir.r4.core.ResourceVersionPolicyCode
 */
export class ResourceVersionPolicyCode extends Message<ResourceVersionPolicyCode> {
  constructor(data?: PartialMessage<ResourceVersionPolicyCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResourceVersionPolicyCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResourceVersionPolicyCode {
    return new ResourceVersionPolicyCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResourceVersionPolicyCode {
    return new ResourceVersionPolicyCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResourceVersionPolicyCode {
    return new ResourceVersionPolicyCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResourceVersionPolicyCode | PlainMessage<ResourceVersionPolicyCode> | undefined, b: ResourceVersionPolicyCode | PlainMessage<ResourceVersionPolicyCode> | undefined): boolean {
    return proto3.util.equals(ResourceVersionPolicyCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResourceVersionPolicyCode.Value
 */
export enum ResourceVersionPolicyCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NO_VERSION = 1;
   */
  NO_VERSION = 1,

  /**
   * @generated from enum value: VERSIONED = 2;
   */
  VERSIONED = 2,

  /**
   * @generated from enum value: VERSIONED_UPDATE = 3;
   */
  VERSIONED_UPDATE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ResourceVersionPolicyCode_Value)
proto3.util.setEnumType(ResourceVersionPolicyCode_Value, "google.fhir.r4.core.ResourceVersionPolicyCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NO_VERSION" },
  { no: 2, name: "VERSIONED" },
  { no: 3, name: "VERSIONED_UPDATE" },
]);

/**
 * The kind of response to a message.
 * See http://hl7.org/fhir/response-code
 *
 * @generated from message google.fhir.r4.core.ResponseTypeCode
 */
export class ResponseTypeCode extends Message<ResponseTypeCode> {
  constructor(data?: PartialMessage<ResponseTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.ResponseTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseTypeCode {
    return new ResponseTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseTypeCode {
    return new ResponseTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseTypeCode {
    return new ResponseTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: ResponseTypeCode | PlainMessage<ResponseTypeCode> | undefined, b: ResponseTypeCode | PlainMessage<ResponseTypeCode> | undefined): boolean {
    return proto3.util.equals(ResponseTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.ResponseTypeCode.Value
 */
export enum ResponseTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: TRANSIENT_ERROR = 2;
   */
  TRANSIENT_ERROR = 2,

  /**
   * @generated from enum value: FATAL_ERROR = 3;
   */
  FATAL_ERROR = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ResponseTypeCode_Value)
proto3.util.setEnumType(ResponseTypeCode_Value, "google.fhir.r4.core.ResponseTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "OK" },
  { no: 2, name: "TRANSIENT_ERROR" },
  { no: 3, name: "FATAL_ERROR" },
]);

/**
 * The mode of a RESTful capability statement.
 * See http://hl7.org/fhir/restful-capability-mode
 *
 * @generated from message google.fhir.r4.core.RestfulCapabilityModeCode
 */
export class RestfulCapabilityModeCode extends Message<RestfulCapabilityModeCode> {
  constructor(data?: PartialMessage<RestfulCapabilityModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.RestfulCapabilityModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RestfulCapabilityModeCode {
    return new RestfulCapabilityModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RestfulCapabilityModeCode {
    return new RestfulCapabilityModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RestfulCapabilityModeCode {
    return new RestfulCapabilityModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: RestfulCapabilityModeCode | PlainMessage<RestfulCapabilityModeCode> | undefined, b: RestfulCapabilityModeCode | PlainMessage<RestfulCapabilityModeCode> | undefined): boolean {
    return proto3.util.equals(RestfulCapabilityModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.RestfulCapabilityModeCode.Value
 */
export enum RestfulCapabilityModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CLIENT = 1;
   */
  CLIENT = 1,

  /**
   * @generated from enum value: SERVER = 2;
   */
  SERVER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RestfulCapabilityModeCode_Value)
proto3.util.setEnumType(RestfulCapabilityModeCode_Value, "google.fhir.r4.core.RestfulCapabilityModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CLIENT" },
  { no: 2, name: "SERVER" },
]);

/**
 * The license that applies to an Implementation Guide (using an SPDX license
 * Identifiers, or 'not-open-source'). The binding is required but new SPDX
 * license Identifiers are allowed to be used (https://spdx.org/licenses/). See
 * http://hl7.org/fhir/spdx-license
 *
 * @generated from message google.fhir.r4.core.SPDXLicenseCode
 */
export class SPDXLicenseCode extends Message<SPDXLicenseCode> {
  constructor(data?: PartialMessage<SPDXLicenseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SPDXLicenseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SPDXLicenseCode {
    return new SPDXLicenseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SPDXLicenseCode {
    return new SPDXLicenseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SPDXLicenseCode {
    return new SPDXLicenseCode().fromJsonString(jsonString, options);
  }

  static equals(a: SPDXLicenseCode | PlainMessage<SPDXLicenseCode> | undefined, b: SPDXLicenseCode | PlainMessage<SPDXLicenseCode> | undefined): boolean {
    return proto3.util.equals(SPDXLicenseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SPDXLicenseCode.Value
 */
export enum SPDXLicenseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NOT_OPEN_SOURCE = 1;
   */
  NOT_OPEN_SOURCE = 1,

  /**
   * @generated from enum value: BSD_ZERO_CLAUSE_LICENSE = 2;
   */
  BSD_ZERO_CLAUSE_LICENSE = 2,

  /**
   * @generated from enum value: AAL = 3;
   */
  AAL = 3,

  /**
   * @generated from enum value: ABSTYLES = 4;
   */
  ABSTYLES = 4,

  /**
   * @generated from enum value: ADOBE_2006 = 5;
   */
  ADOBE_2006 = 5,

  /**
   * @generated from enum value: ADOBE_GLYPH = 6;
   */
  ADOBE_GLYPH = 6,

  /**
   * @generated from enum value: ADSL = 7;
   */
  ADSL = 7,

  /**
   * @generated from enum value: AFL_1_1 = 8;
   */
  AFL_1_1 = 8,

  /**
   * @generated from enum value: AFL_1_2 = 9;
   */
  AFL_1_2 = 9,

  /**
   * @generated from enum value: AFL_2_0 = 10;
   */
  AFL_2_0 = 10,

  /**
   * @generated from enum value: AFL_2_1 = 11;
   */
  AFL_2_1 = 11,

  /**
   * @generated from enum value: AFL_3_0 = 12;
   */
  AFL_3_0 = 12,

  /**
   * @generated from enum value: AFMPARSE = 13;
   */
  AFMPARSE = 13,

  /**
   * @generated from enum value: AGPL_1_0_ONLY = 14;
   */
  AGPL_1_0_ONLY = 14,

  /**
   * @generated from enum value: AGPL_1_0_OR_LATER = 15;
   */
  AGPL_1_0_OR_LATER = 15,

  /**
   * @generated from enum value: AGPL_3_0_ONLY = 16;
   */
  AGPL_3_0_ONLY = 16,

  /**
   * @generated from enum value: AGPL_3_0_OR_LATER = 17;
   */
  AGPL_3_0_OR_LATER = 17,

  /**
   * @generated from enum value: ALADDIN = 18;
   */
  ALADDIN = 18,

  /**
   * @generated from enum value: AMDPLPA = 19;
   */
  AMDPLPA = 19,

  /**
   * @generated from enum value: AML = 20;
   */
  AML = 20,

  /**
   * @generated from enum value: AMPAS = 21;
   */
  AMPAS = 21,

  /**
   * @generated from enum value: ANTLR_PD = 22;
   */
  ANTLR_PD = 22,

  /**
   * @generated from enum value: APACHE_1_0 = 23;
   */
  APACHE_1_0 = 23,

  /**
   * @generated from enum value: APACHE_1_1 = 24;
   */
  APACHE_1_1 = 24,

  /**
   * @generated from enum value: APACHE_2_0 = 25;
   */
  APACHE_2_0 = 25,

  /**
   * @generated from enum value: APAFML = 26;
   */
  APAFML = 26,

  /**
   * @generated from enum value: APL_1_0 = 27;
   */
  APL_1_0 = 27,

  /**
   * @generated from enum value: APSL_1_0 = 28;
   */
  APSL_1_0 = 28,

  /**
   * @generated from enum value: APSL_1_1 = 29;
   */
  APSL_1_1 = 29,

  /**
   * @generated from enum value: APSL_1_2 = 30;
   */
  APSL_1_2 = 30,

  /**
   * @generated from enum value: APSL_2_0 = 31;
   */
  APSL_2_0 = 31,

  /**
   * @generated from enum value: ARTISTIC_1_0_CL8 = 32;
   */
  ARTISTIC_1_0_CL8 = 32,

  /**
   * @generated from enum value: ARTISTIC_1_0_PERL = 33;
   */
  ARTISTIC_1_0_PERL = 33,

  /**
   * @generated from enum value: ARTISTIC_1_0 = 34;
   */
  ARTISTIC_1_0 = 34,

  /**
   * @generated from enum value: ARTISTIC_2_0 = 35;
   */
  ARTISTIC_2_0 = 35,

  /**
   * @generated from enum value: BAHYPH = 36;
   */
  BAHYPH = 36,

  /**
   * @generated from enum value: BARR = 37;
   */
  BARR = 37,

  /**
   * @generated from enum value: BEERWARE = 38;
   */
  BEERWARE = 38,

  /**
   * @generated from enum value: BIT_TORRENT_1_0 = 39;
   */
  BIT_TORRENT_1_0 = 39,

  /**
   * @generated from enum value: BIT_TORRENT_1_1 = 40;
   */
  BIT_TORRENT_1_1 = 40,

  /**
   * @generated from enum value: BORCEUX = 41;
   */
  BORCEUX = 41,

  /**
   * @generated from enum value: BSD_1_CLAUSE = 42;
   */
  BSD_1_CLAUSE = 42,

  /**
   * @generated from enum value: BSD_2_CLAUSE_FREE_BSD = 43;
   */
  BSD_2_CLAUSE_FREE_BSD = 43,

  /**
   * @generated from enum value: BSD_2_CLAUSE_NET_BSD = 44;
   */
  BSD_2_CLAUSE_NET_BSD = 44,

  /**
   * @generated from enum value: BSD_2_CLAUSE_PATENT = 45;
   */
  BSD_2_CLAUSE_PATENT = 45,

  /**
   * @generated from enum value: BSD_2_CLAUSE = 46;
   */
  BSD_2_CLAUSE = 46,

  /**
   * @generated from enum value: BSD_3_CLAUSE_ATTRIBUTION = 47;
   */
  BSD_3_CLAUSE_ATTRIBUTION = 47,

  /**
   * @generated from enum value: BSD_3_CLAUSE_CLEAR = 48;
   */
  BSD_3_CLAUSE_CLEAR = 48,

  /**
   * @generated from enum value: BSD_3_CLAUSE_LBNL = 49;
   */
  BSD_3_CLAUSE_LBNL = 49,

  /**
   * @generated from enum value: BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014 = 50;
   */
  BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014 = 50,

  /**
   * @generated from enum value: BSD_3_CLAUSE_NO_NUCLEAR_LICENSE = 51;
   */
  BSD_3_CLAUSE_NO_NUCLEAR_LICENSE = 51,

  /**
   * @generated from enum value: BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY = 52;
   */
  BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY = 52,

  /**
   * @generated from enum value: BSD_3_CLAUSE = 53;
   */
  BSD_3_CLAUSE = 53,

  /**
   * @generated from enum value: BSD_4_CLAUSE_UC = 54;
   */
  BSD_4_CLAUSE_UC = 54,

  /**
   * @generated from enum value: BSD_4_CLAUSE = 55;
   */
  BSD_4_CLAUSE = 55,

  /**
   * @generated from enum value: BSD_PROTECTION = 56;
   */
  BSD_PROTECTION = 56,

  /**
   * @generated from enum value: BSD_SOURCE_CODE = 57;
   */
  BSD_SOURCE_CODE = 57,

  /**
   * @generated from enum value: BSL_1_0 = 58;
   */
  BSL_1_0 = 58,

  /**
   * @generated from enum value: BZIP2_1_0_5 = 59;
   */
  BZIP2_1_0_5 = 59,

  /**
   * @generated from enum value: BZIP2_1_0_6 = 60;
   */
  BZIP2_1_0_6 = 60,

  /**
   * @generated from enum value: CALDERA = 61;
   */
  CALDERA = 61,

  /**
   * @generated from enum value: CATOSL_1_1 = 62;
   */
  CATOSL_1_1 = 62,

  /**
   * @generated from enum value: CC_BY_1_0 = 63;
   */
  CC_BY_1_0 = 63,

  /**
   * @generated from enum value: CC_BY_2_0 = 64;
   */
  CC_BY_2_0 = 64,

  /**
   * @generated from enum value: CC_BY_2_5 = 65;
   */
  CC_BY_2_5 = 65,

  /**
   * @generated from enum value: CC_BY_3_0 = 66;
   */
  CC_BY_3_0 = 66,

  /**
   * @generated from enum value: CC_BY_4_0 = 67;
   */
  CC_BY_4_0 = 67,

  /**
   * @generated from enum value: CC_BY_NC_1_0 = 68;
   */
  CC_BY_NC_1_0 = 68,

  /**
   * @generated from enum value: CC_BY_NC_2_0 = 69;
   */
  CC_BY_NC_2_0 = 69,

  /**
   * @generated from enum value: CC_BY_NC_2_5 = 70;
   */
  CC_BY_NC_2_5 = 70,

  /**
   * @generated from enum value: CC_BY_NC_3_0 = 71;
   */
  CC_BY_NC_3_0 = 71,

  /**
   * @generated from enum value: CC_BY_NC_4_0 = 72;
   */
  CC_BY_NC_4_0 = 72,

  /**
   * @generated from enum value: CC_BY_NC_ND_1_0 = 73;
   */
  CC_BY_NC_ND_1_0 = 73,

  /**
   * @generated from enum value: CC_BY_NC_ND_2_0 = 74;
   */
  CC_BY_NC_ND_2_0 = 74,

  /**
   * @generated from enum value: CC_BY_NC_ND_2_5 = 75;
   */
  CC_BY_NC_ND_2_5 = 75,

  /**
   * @generated from enum value: CC_BY_NC_ND_3_0 = 76;
   */
  CC_BY_NC_ND_3_0 = 76,

  /**
   * @generated from enum value: CC_BY_NC_ND_4_0 = 77;
   */
  CC_BY_NC_ND_4_0 = 77,

  /**
   * @generated from enum value: CC_BY_NC_SA_1_0 = 78;
   */
  CC_BY_NC_SA_1_0 = 78,

  /**
   * @generated from enum value: CC_BY_NC_SA_2_0 = 79;
   */
  CC_BY_NC_SA_2_0 = 79,

  /**
   * @generated from enum value: CC_BY_NC_SA_2_5 = 80;
   */
  CC_BY_NC_SA_2_5 = 80,

  /**
   * @generated from enum value: CC_BY_NC_SA_3_0 = 81;
   */
  CC_BY_NC_SA_3_0 = 81,

  /**
   * @generated from enum value: CC_BY_NC_SA_4_0 = 82;
   */
  CC_BY_NC_SA_4_0 = 82,

  /**
   * @generated from enum value: CC_BY_ND_1_0 = 83;
   */
  CC_BY_ND_1_0 = 83,

  /**
   * @generated from enum value: CC_BY_ND_2_0 = 84;
   */
  CC_BY_ND_2_0 = 84,

  /**
   * @generated from enum value: CC_BY_ND_2_5 = 85;
   */
  CC_BY_ND_2_5 = 85,

  /**
   * @generated from enum value: CC_BY_ND_3_0 = 86;
   */
  CC_BY_ND_3_0 = 86,

  /**
   * @generated from enum value: CC_BY_ND_4_0 = 87;
   */
  CC_BY_ND_4_0 = 87,

  /**
   * @generated from enum value: CC_BY_SA_1_0 = 88;
   */
  CC_BY_SA_1_0 = 88,

  /**
   * @generated from enum value: CC_BY_SA_2_0 = 89;
   */
  CC_BY_SA_2_0 = 89,

  /**
   * @generated from enum value: CC_BY_SA_2_5 = 90;
   */
  CC_BY_SA_2_5 = 90,

  /**
   * @generated from enum value: CC_BY_SA_3_0 = 91;
   */
  CC_BY_SA_3_0 = 91,

  /**
   * @generated from enum value: CC_BY_SA_4_0 = 92;
   */
  CC_BY_SA_4_0 = 92,

  /**
   * @generated from enum value: CC0_1_0 = 93;
   */
  CC0_1_0 = 93,

  /**
   * @generated from enum value: CDDL_1_0 = 94;
   */
  CDDL_1_0 = 94,

  /**
   * @generated from enum value: CDDL_1_1 = 95;
   */
  CDDL_1_1 = 95,

  /**
   * @generated from enum value: CDLA_PERMISSIVE_1_0 = 96;
   */
  CDLA_PERMISSIVE_1_0 = 96,

  /**
   * @generated from enum value: CDLA_SHARING_1_0 = 97;
   */
  CDLA_SHARING_1_0 = 97,

  /**
   * @generated from enum value: CECILL_1_0 = 98;
   */
  CECILL_1_0 = 98,

  /**
   * @generated from enum value: CECILL_1_1 = 99;
   */
  CECILL_1_1 = 99,

  /**
   * @generated from enum value: CECILL_2_0 = 100;
   */
  CECILL_2_0 = 100,

  /**
   * @generated from enum value: CECILL_2_1 = 101;
   */
  CECILL_2_1 = 101,

  /**
   * @generated from enum value: CECILL_B = 102;
   */
  CECILL_B = 102,

  /**
   * @generated from enum value: CECILL_C = 103;
   */
  CECILL_C = 103,

  /**
   * @generated from enum value: CL_ARTISTIC = 104;
   */
  CL_ARTISTIC = 104,

  /**
   * @generated from enum value: CNRI_JYTHON = 105;
   */
  CNRI_JYTHON = 105,

  /**
   * @generated from enum value: CNRI_PYTHON_GPL_COMPATIBLE = 106;
   */
  CNRI_PYTHON_GPL_COMPATIBLE = 106,

  /**
   * @generated from enum value: CNRI_PYTHON = 107;
   */
  CNRI_PYTHON = 107,

  /**
   * @generated from enum value: CONDOR_1_1 = 108;
   */
  CONDOR_1_1 = 108,

  /**
   * @generated from enum value: CPAL_1_0 = 109;
   */
  CPAL_1_0 = 109,

  /**
   * @generated from enum value: CPL_1_0 = 110;
   */
  CPL_1_0 = 110,

  /**
   * @generated from enum value: CPOL_1_02 = 111;
   */
  CPOL_1_02 = 111,

  /**
   * @generated from enum value: CROSSWORD = 112;
   */
  CROSSWORD = 112,

  /**
   * @generated from enum value: CRYSTAL_STACKER = 113;
   */
  CRYSTAL_STACKER = 113,

  /**
   * @generated from enum value: CUA_OPL_1_0 = 114;
   */
  CUA_OPL_1_0 = 114,

  /**
   * @generated from enum value: CUBE = 115;
   */
  CUBE = 115,

  /**
   * @generated from enum value: CURL = 116;
   */
  CURL = 116,

  /**
   * @generated from enum value: D_FSL_1_0 = 117;
   */
  D_FSL_1_0 = 117,

  /**
   * @generated from enum value: DIFFMARK = 118;
   */
  DIFFMARK = 118,

  /**
   * @generated from enum value: DOC = 119;
   */
  DOC = 119,

  /**
   * @generated from enum value: DOTSEQN = 120;
   */
  DOTSEQN = 120,

  /**
   * @generated from enum value: DSDP = 121;
   */
  DSDP = 121,

  /**
   * @generated from enum value: DVIPDFM = 122;
   */
  DVIPDFM = 122,

  /**
   * @generated from enum value: ECL_1_0 = 123;
   */
  ECL_1_0 = 123,

  /**
   * @generated from enum value: ECL_2_0 = 124;
   */
  ECL_2_0 = 124,

  /**
   * @generated from enum value: EFL_1_0 = 125;
   */
  EFL_1_0 = 125,

  /**
   * @generated from enum value: EFL_2_0 = 126;
   */
  EFL_2_0 = 126,

  /**
   * @generated from enum value: E_GENIX = 127;
   */
  E_GENIX = 127,

  /**
   * @generated from enum value: ENTESSA = 128;
   */
  ENTESSA = 128,

  /**
   * @generated from enum value: EPL_1_0 = 129;
   */
  EPL_1_0 = 129,

  /**
   * @generated from enum value: EPL_2_0 = 130;
   */
  EPL_2_0 = 130,

  /**
   * @generated from enum value: ERL_PL_1_1 = 131;
   */
  ERL_PL_1_1 = 131,

  /**
   * @generated from enum value: EU_DATAGRID = 132;
   */
  EU_DATAGRID = 132,

  /**
   * @generated from enum value: EUPL_1_0 = 133;
   */
  EUPL_1_0 = 133,

  /**
   * @generated from enum value: EUPL_1_1 = 134;
   */
  EUPL_1_1 = 134,

  /**
   * @generated from enum value: EUPL_1_2 = 135;
   */
  EUPL_1_2 = 135,

  /**
   * @generated from enum value: EUROSYM = 136;
   */
  EUROSYM = 136,

  /**
   * @generated from enum value: FAIR = 137;
   */
  FAIR = 137,

  /**
   * @generated from enum value: FRAMEWORX_1_0 = 138;
   */
  FRAMEWORX_1_0 = 138,

  /**
   * @generated from enum value: FREE_IMAGE = 139;
   */
  FREE_IMAGE = 139,

  /**
   * @generated from enum value: FSFAP = 140;
   */
  FSFAP = 140,

  /**
   * @generated from enum value: FSFUL = 141;
   */
  FSFUL = 141,

  /**
   * @generated from enum value: FSFULLR = 142;
   */
  FSFULLR = 142,

  /**
   * @generated from enum value: FTL = 143;
   */
  FTL = 143,

  /**
   * @generated from enum value: GFDL_1_1_ONLY = 144;
   */
  GFDL_1_1_ONLY = 144,

  /**
   * @generated from enum value: GFDL_1_1_OR_LATER = 145;
   */
  GFDL_1_1_OR_LATER = 145,

  /**
   * @generated from enum value: GFDL_1_2_ONLY = 146;
   */
  GFDL_1_2_ONLY = 146,

  /**
   * @generated from enum value: GFDL_1_2_OR_LATER = 147;
   */
  GFDL_1_2_OR_LATER = 147,

  /**
   * @generated from enum value: GFDL_1_3_ONLY = 148;
   */
  GFDL_1_3_ONLY = 148,

  /**
   * @generated from enum value: GFDL_1_3_OR_LATER = 149;
   */
  GFDL_1_3_OR_LATER = 149,

  /**
   * @generated from enum value: GIFTWARE = 150;
   */
  GIFTWARE = 150,

  /**
   * @generated from enum value: GL2PS = 151;
   */
  GL2PS = 151,

  /**
   * @generated from enum value: GLIDE = 152;
   */
  GLIDE = 152,

  /**
   * @generated from enum value: GLULXE = 153;
   */
  GLULXE = 153,

  /**
   * @generated from enum value: GNUPLOT = 154;
   */
  GNUPLOT = 154,

  /**
   * @generated from enum value: GPL_1_0_ONLY = 155;
   */
  GPL_1_0_ONLY = 155,

  /**
   * @generated from enum value: GPL_1_0_OR_LATER = 156;
   */
  GPL_1_0_OR_LATER = 156,

  /**
   * @generated from enum value: GPL_2_0_ONLY = 157;
   */
  GPL_2_0_ONLY = 157,

  /**
   * @generated from enum value: GPL_2_0_OR_LATER = 158;
   */
  GPL_2_0_OR_LATER = 158,

  /**
   * @generated from enum value: GPL_3_0_ONLY = 159;
   */
  GPL_3_0_ONLY = 159,

  /**
   * @generated from enum value: GPL_3_0_OR_LATER = 160;
   */
  GPL_3_0_OR_LATER = 160,

  /**
   * @generated from enum value: G_SOAP_1_3B = 161;
   */
  G_SOAP_1_3B = 161,

  /**
   * @generated from enum value: HASKELL_REPORT = 162;
   */
  HASKELL_REPORT = 162,

  /**
   * @generated from enum value: HPND = 163;
   */
  HPND = 163,

  /**
   * @generated from enum value: IBM_PIBS = 164;
   */
  IBM_PIBS = 164,

  /**
   * @generated from enum value: ICU = 165;
   */
  ICU = 165,

  /**
   * @generated from enum value: IJG = 166;
   */
  IJG = 166,

  /**
   * @generated from enum value: IMAGE_MAGICK = 167;
   */
  IMAGE_MAGICK = 167,

  /**
   * @generated from enum value: I_MATIX = 168;
   */
  I_MATIX = 168,

  /**
   * @generated from enum value: IMLIB2 = 169;
   */
  IMLIB2 = 169,

  /**
   * @generated from enum value: INFO_ZIP = 170;
   */
  INFO_ZIP = 170,

  /**
   * @generated from enum value: INTEL_ACPI = 171;
   */
  INTEL_ACPI = 171,

  /**
   * @generated from enum value: INTEL = 172;
   */
  INTEL = 172,

  /**
   * @generated from enum value: INTERBASE_1_0 = 173;
   */
  INTERBASE_1_0 = 173,

  /**
   * @generated from enum value: IPA = 174;
   */
  IPA = 174,

  /**
   * @generated from enum value: IPL_1_0 = 175;
   */
  IPL_1_0 = 175,

  /**
   * @generated from enum value: ISC = 176;
   */
  ISC = 176,

  /**
   * @generated from enum value: JAS_PER_2_0 = 177;
   */
  JAS_PER_2_0 = 177,

  /**
   * @generated from enum value: JSON = 178;
   */
  JSON = 178,

  /**
   * @generated from enum value: LAL_1_2 = 179;
   */
  LAL_1_2 = 179,

  /**
   * @generated from enum value: LAL_1_3 = 180;
   */
  LAL_1_3 = 180,

  /**
   * @generated from enum value: LATEX2E = 181;
   */
  LATEX2E = 181,

  /**
   * @generated from enum value: LEPTONICA = 182;
   */
  LEPTONICA = 182,

  /**
   * @generated from enum value: LGPL_2_0_ONLY = 183;
   */
  LGPL_2_0_ONLY = 183,

  /**
   * @generated from enum value: LGPL_2_0_OR_LATER = 184;
   */
  LGPL_2_0_OR_LATER = 184,

  /**
   * @generated from enum value: LGPL_2_1_ONLY = 185;
   */
  LGPL_2_1_ONLY = 185,

  /**
   * @generated from enum value: LGPL_2_1_OR_LATER = 186;
   */
  LGPL_2_1_OR_LATER = 186,

  /**
   * @generated from enum value: LGPL_3_0_ONLY = 187;
   */
  LGPL_3_0_ONLY = 187,

  /**
   * @generated from enum value: LGPL_3_0_OR_LATER = 188;
   */
  LGPL_3_0_OR_LATER = 188,

  /**
   * @generated from enum value: LGPLLR = 189;
   */
  LGPLLR = 189,

  /**
   * @generated from enum value: LIBPNG = 190;
   */
  LIBPNG = 190,

  /**
   * @generated from enum value: LIBTIFF = 191;
   */
  LIBTIFF = 191,

  /**
   * @generated from enum value: LI_LI_Q_P_1_1 = 192;
   */
  LI_LI_Q_P_1_1 = 192,

  /**
   * @generated from enum value: LI_LI_Q_R_1_1 = 193;
   */
  LI_LI_Q_R_1_1 = 193,

  /**
   * @generated from enum value: LI_LI_Q_RPLUS_1_1 = 194;
   */
  LI_LI_Q_RPLUS_1_1 = 194,

  /**
   * @generated from enum value: LINUX_OPEN_IB = 195;
   */
  LINUX_OPEN_IB = 195,

  /**
   * @generated from enum value: LPL_1_0 = 196;
   */
  LPL_1_0 = 196,

  /**
   * @generated from enum value: LPL_1_02 = 197;
   */
  LPL_1_02 = 197,

  /**
   * @generated from enum value: LPPL_1_0 = 198;
   */
  LPPL_1_0 = 198,

  /**
   * @generated from enum value: LPPL_1_1 = 199;
   */
  LPPL_1_1 = 199,

  /**
   * @generated from enum value: LPPL_1_2 = 200;
   */
  LPPL_1_2 = 200,

  /**
   * @generated from enum value: LPPL_1_3A = 201;
   */
  LPPL_1_3A = 201,

  /**
   * @generated from enum value: LPPL_1_3C = 202;
   */
  LPPL_1_3C = 202,

  /**
   * @generated from enum value: MAKE_INDEX = 203;
   */
  MAKE_INDEX = 203,

  /**
   * @generated from enum value: MIR_OS = 204;
   */
  MIR_OS = 204,

  /**
   * @generated from enum value: MIT_0 = 205;
   */
  MIT_0 = 205,

  /**
   * @generated from enum value: MIT_ADVERTISING = 206;
   */
  MIT_ADVERTISING = 206,

  /**
   * @generated from enum value: MIT_CMU = 207;
   */
  MIT_CMU = 207,

  /**
   * @generated from enum value: MIT_ENNA = 208;
   */
  MIT_ENNA = 208,

  /**
   * @generated from enum value: MIT_FEH = 209;
   */
  MIT_FEH = 209,

  /**
   * @generated from enum value: MIT = 210;
   */
  MIT = 210,

  /**
   * @generated from enum value: MITNFA = 211;
   */
  MITNFA = 211,

  /**
   * @generated from enum value: MOTOSOTO = 212;
   */
  MOTOSOTO = 212,

  /**
   * @generated from enum value: MPICH2 = 213;
   */
  MPICH2 = 213,

  /**
   * @generated from enum value: MPL_1_0 = 214;
   */
  MPL_1_0 = 214,

  /**
   * @generated from enum value: MPL_1_1 = 215;
   */
  MPL_1_1 = 215,

  /**
   * @generated from enum value: MPL_2_0_NO_COPYLEFT_EXCEPTION = 216;
   */
  MPL_2_0_NO_COPYLEFT_EXCEPTION = 216,

  /**
   * @generated from enum value: MPL_2_0 = 217;
   */
  MPL_2_0 = 217,

  /**
   * @generated from enum value: MS_PL = 218;
   */
  MS_PL = 218,

  /**
   * @generated from enum value: MS_RL = 219;
   */
  MS_RL = 219,

  /**
   * @generated from enum value: MTLL = 220;
   */
  MTLL = 220,

  /**
   * @generated from enum value: MULTICS = 221;
   */
  MULTICS = 221,

  /**
   * @generated from enum value: MUP = 222;
   */
  MUP = 222,

  /**
   * @generated from enum value: NASA_1_3 = 223;
   */
  NASA_1_3 = 223,

  /**
   * @generated from enum value: NAUMEN = 224;
   */
  NAUMEN = 224,

  /**
   * @generated from enum value: NBPL_1_0 = 225;
   */
  NBPL_1_0 = 225,

  /**
   * @generated from enum value: NCSA = 226;
   */
  NCSA = 226,

  /**
   * @generated from enum value: NET_SNMP = 227;
   */
  NET_SNMP = 227,

  /**
   * @generated from enum value: NET_CDF = 228;
   */
  NET_CDF = 228,

  /**
   * @generated from enum value: NEWSLETR = 229;
   */
  NEWSLETR = 229,

  /**
   * @generated from enum value: NGPL = 230;
   */
  NGPL = 230,

  /**
   * @generated from enum value: NLOD_1_0 = 231;
   */
  NLOD_1_0 = 231,

  /**
   * @generated from enum value: NLPL = 232;
   */
  NLPL = 232,

  /**
   * @generated from enum value: NOKIA = 233;
   */
  NOKIA = 233,

  /**
   * @generated from enum value: NOSL = 234;
   */
  NOSL = 234,

  /**
   * @generated from enum value: NOWEB = 235;
   */
  NOWEB = 235,

  /**
   * @generated from enum value: NPL_1_0 = 236;
   */
  NPL_1_0 = 236,

  /**
   * @generated from enum value: NPL_1_1 = 237;
   */
  NPL_1_1 = 237,

  /**
   * @generated from enum value: NPOSL_3_0 = 238;
   */
  NPOSL_3_0 = 238,

  /**
   * @generated from enum value: NRL = 239;
   */
  NRL = 239,

  /**
   * @generated from enum value: NTP = 240;
   */
  NTP = 240,

  /**
   * @generated from enum value: OCCT_PL = 241;
   */
  OCCT_PL = 241,

  /**
   * @generated from enum value: OCLC_2_0 = 242;
   */
  OCLC_2_0 = 242,

  /**
   * @generated from enum value: O_DB_L_1_0 = 243;
   */
  O_DB_L_1_0 = 243,

  /**
   * @generated from enum value: OFL_1_0 = 244;
   */
  OFL_1_0 = 244,

  /**
   * @generated from enum value: OFL_1_1 = 245;
   */
  OFL_1_1 = 245,

  /**
   * @generated from enum value: OGTSL = 246;
   */
  OGTSL = 246,

  /**
   * @generated from enum value: OLDAP_1_1 = 247;
   */
  OLDAP_1_1 = 247,

  /**
   * @generated from enum value: OLDAP_1_2 = 248;
   */
  OLDAP_1_2 = 248,

  /**
   * @generated from enum value: OLDAP_1_3 = 249;
   */
  OLDAP_1_3 = 249,

  /**
   * @generated from enum value: OLDAP_1_4 = 250;
   */
  OLDAP_1_4 = 250,

  /**
   * @generated from enum value: OLDAP_2_0_1 = 251;
   */
  OLDAP_2_0_1 = 251,

  /**
   * @generated from enum value: OLDAP_2_0 = 252;
   */
  OLDAP_2_0 = 252,

  /**
   * @generated from enum value: OLDAP_2_1 = 253;
   */
  OLDAP_2_1 = 253,

  /**
   * @generated from enum value: OLDAP_2_2_1 = 254;
   */
  OLDAP_2_2_1 = 254,

  /**
   * @generated from enum value: OLDAP_2_2_2 = 255;
   */
  OLDAP_2_2_2 = 255,

  /**
   * @generated from enum value: OLDAP_2_2 = 256;
   */
  OLDAP_2_2 = 256,

  /**
   * @generated from enum value: OLDAP_2_3 = 257;
   */
  OLDAP_2_3 = 257,

  /**
   * @generated from enum value: OLDAP_2_4 = 258;
   */
  OLDAP_2_4 = 258,

  /**
   * @generated from enum value: OLDAP_2_5 = 259;
   */
  OLDAP_2_5 = 259,

  /**
   * @generated from enum value: OLDAP_2_6 = 260;
   */
  OLDAP_2_6 = 260,

  /**
   * @generated from enum value: OLDAP_2_7 = 261;
   */
  OLDAP_2_7 = 261,

  /**
   * @generated from enum value: OLDAP_2_8 = 262;
   */
  OLDAP_2_8 = 262,

  /**
   * @generated from enum value: OML = 263;
   */
  OML = 263,

  /**
   * @generated from enum value: OPEN_SSL = 264;
   */
  OPEN_SSL = 264,

  /**
   * @generated from enum value: OPL_1_0 = 265;
   */
  OPL_1_0 = 265,

  /**
   * @generated from enum value: OSET_PL_2_1 = 266;
   */
  OSET_PL_2_1 = 266,

  /**
   * @generated from enum value: OSL_1_0 = 267;
   */
  OSL_1_0 = 267,

  /**
   * @generated from enum value: OSL_1_1 = 268;
   */
  OSL_1_1 = 268,

  /**
   * @generated from enum value: OSL_2_0 = 269;
   */
  OSL_2_0 = 269,

  /**
   * @generated from enum value: OSL_2_1 = 270;
   */
  OSL_2_1 = 270,

  /**
   * @generated from enum value: OSL_3_0 = 271;
   */
  OSL_3_0 = 271,

  /**
   * @generated from enum value: PDDL_1_0 = 272;
   */
  PDDL_1_0 = 272,

  /**
   * @generated from enum value: PHP_3_0 = 273;
   */
  PHP_3_0 = 273,

  /**
   * @generated from enum value: PHP_3_01 = 274;
   */
  PHP_3_01 = 274,

  /**
   * @generated from enum value: PLEXUS = 275;
   */
  PLEXUS = 275,

  /**
   * @generated from enum value: POSTGRE_SQL = 276;
   */
  POSTGRE_SQL = 276,

  /**
   * @generated from enum value: PSFRAG = 277;
   */
  PSFRAG = 277,

  /**
   * @generated from enum value: PSUTILS = 278;
   */
  PSUTILS = 278,

  /**
   * @generated from enum value: PYTHON_2_0 = 279;
   */
  PYTHON_2_0 = 279,

  /**
   * @generated from enum value: QHULL = 280;
   */
  QHULL = 280,

  /**
   * @generated from enum value: QPL_1_0 = 281;
   */
  QPL_1_0 = 281,

  /**
   * @generated from enum value: RDISC = 282;
   */
  RDISC = 282,

  /**
   * @generated from enum value: R_HE_COS_1_1 = 283;
   */
  R_HE_COS_1_1 = 283,

  /**
   * @generated from enum value: RPL_1_1 = 284;
   */
  RPL_1_1 = 284,

  /**
   * @generated from enum value: RPL_1_5 = 285;
   */
  RPL_1_5 = 285,

  /**
   * @generated from enum value: RPSL_1_0 = 286;
   */
  RPSL_1_0 = 286,

  /**
   * @generated from enum value: RSA_MD = 287;
   */
  RSA_MD = 287,

  /**
   * @generated from enum value: RSCPL = 288;
   */
  RSCPL = 288,

  /**
   * @generated from enum value: RUBY = 289;
   */
  RUBY = 289,

  /**
   * @generated from enum value: SAX_PD = 290;
   */
  SAX_PD = 290,

  /**
   * @generated from enum value: SAXPATH = 291;
   */
  SAXPATH = 291,

  /**
   * @generated from enum value: SCEA = 292;
   */
  SCEA = 292,

  /**
   * @generated from enum value: SENDMAIL = 293;
   */
  SENDMAIL = 293,

  /**
   * @generated from enum value: SGI_B_1_0 = 294;
   */
  SGI_B_1_0 = 294,

  /**
   * @generated from enum value: SGI_B_1_1 = 295;
   */
  SGI_B_1_1 = 295,

  /**
   * @generated from enum value: SGI_B_2_0 = 296;
   */
  SGI_B_2_0 = 296,

  /**
   * @generated from enum value: SIM_PL_2_0 = 297;
   */
  SIM_PL_2_0 = 297,

  /**
   * @generated from enum value: SISSL_1_2 = 298;
   */
  SISSL_1_2 = 298,

  /**
   * @generated from enum value: SISSL = 299;
   */
  SISSL = 299,

  /**
   * @generated from enum value: SLEEPYCAT = 300;
   */
  SLEEPYCAT = 300,

  /**
   * @generated from enum value: SMLNJ = 301;
   */
  SMLNJ = 301,

  /**
   * @generated from enum value: SMPPL = 302;
   */
  SMPPL = 302,

  /**
   * @generated from enum value: SNIA = 303;
   */
  SNIA = 303,

  /**
   * @generated from enum value: SPENCER_86 = 304;
   */
  SPENCER_86 = 304,

  /**
   * @generated from enum value: SPENCER_94 = 305;
   */
  SPENCER_94 = 305,

  /**
   * @generated from enum value: SPENCER_99 = 306;
   */
  SPENCER_99 = 306,

  /**
   * @generated from enum value: SPL_1_0 = 307;
   */
  SPL_1_0 = 307,

  /**
   * @generated from enum value: SUGAR_CRM_1_1_3 = 308;
   */
  SUGAR_CRM_1_1_3 = 308,

  /**
   * @generated from enum value: SWL = 309;
   */
  SWL = 309,

  /**
   * @generated from enum value: TCL = 310;
   */
  TCL = 310,

  /**
   * @generated from enum value: TCP_WRAPPERS = 311;
   */
  TCP_WRAPPERS = 311,

  /**
   * @generated from enum value: T_MATE = 312;
   */
  T_MATE = 312,

  /**
   * @generated from enum value: TORQUE_1_1 = 313;
   */
  TORQUE_1_1 = 313,

  /**
   * @generated from enum value: TOSL = 314;
   */
  TOSL = 314,

  /**
   * @generated from enum value: UNICODE_DFS_2015 = 315;
   */
  UNICODE_DFS_2015 = 315,

  /**
   * @generated from enum value: UNICODE_DFS_2016 = 316;
   */
  UNICODE_DFS_2016 = 316,

  /**
   * @generated from enum value: UNICODE_TOU = 317;
   */
  UNICODE_TOU = 317,

  /**
   * @generated from enum value: UNLICENSE = 318;
   */
  UNLICENSE = 318,

  /**
   * @generated from enum value: UPL_1_0 = 319;
   */
  UPL_1_0 = 319,

  /**
   * @generated from enum value: VIM = 320;
   */
  VIM = 320,

  /**
   * @generated from enum value: VOSTROM = 321;
   */
  VOSTROM = 321,

  /**
   * @generated from enum value: VSL_1_0 = 322;
   */
  VSL_1_0 = 322,

  /**
   * @generated from enum value: W3C_19980720 = 323;
   */
  W3C_19980720 = 323,

  /**
   * @generated from enum value: W3C_20150513 = 324;
   */
  W3C_20150513 = 324,

  /**
   * @generated from enum value: W3C = 325;
   */
  W3C = 325,

  /**
   * @generated from enum value: WATCOM_1_0 = 326;
   */
  WATCOM_1_0 = 326,

  /**
   * @generated from enum value: WSUIPA = 327;
   */
  WSUIPA = 327,

  /**
   * @generated from enum value: WTFPL = 328;
   */
  WTFPL = 328,

  /**
   * @generated from enum value: X11 = 329;
   */
  X11 = 329,

  /**
   * @generated from enum value: XEROX = 330;
   */
  XEROX = 330,

  /**
   * @generated from enum value: X_FREE86_1_1 = 331;
   */
  X_FREE86_1_1 = 331,

  /**
   * @generated from enum value: XINETD = 332;
   */
  XINETD = 332,

  /**
   * @generated from enum value: XNET = 333;
   */
  XNET = 333,

  /**
   * @generated from enum value: XPP = 334;
   */
  XPP = 334,

  /**
   * @generated from enum value: X_SKAT = 335;
   */
  X_SKAT = 335,

  /**
   * @generated from enum value: YPL_1_0 = 336;
   */
  YPL_1_0 = 336,

  /**
   * @generated from enum value: YPL_1_1 = 337;
   */
  YPL_1_1 = 337,

  /**
   * @generated from enum value: ZED = 338;
   */
  ZED = 338,

  /**
   * @generated from enum value: ZEND_2_0 = 339;
   */
  ZEND_2_0 = 339,

  /**
   * @generated from enum value: ZIMBRA_1_3 = 340;
   */
  ZIMBRA_1_3 = 340,

  /**
   * @generated from enum value: ZIMBRA_1_4 = 341;
   */
  ZIMBRA_1_4 = 341,

  /**
   * @generated from enum value: ZLIB_ACKNOWLEDGEMENT = 342;
   */
  ZLIB_ACKNOWLEDGEMENT = 342,

  /**
   * @generated from enum value: ZLIB = 343;
   */
  ZLIB = 343,

  /**
   * @generated from enum value: ZPL_1_1 = 344;
   */
  ZPL_1_1 = 344,

  /**
   * @generated from enum value: ZPL_2_0 = 345;
   */
  ZPL_2_0 = 345,

  /**
   * @generated from enum value: ZPL_2_1 = 346;
   */
  ZPL_2_1 = 346,
}
// Retrieve enum metadata with: proto3.getEnumType(SPDXLicenseCode_Value)
proto3.util.setEnumType(SPDXLicenseCode_Value, "google.fhir.r4.core.SPDXLicenseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NOT_OPEN_SOURCE" },
  { no: 2, name: "BSD_ZERO_CLAUSE_LICENSE" },
  { no: 3, name: "AAL" },
  { no: 4, name: "ABSTYLES" },
  { no: 5, name: "ADOBE_2006" },
  { no: 6, name: "ADOBE_GLYPH" },
  { no: 7, name: "ADSL" },
  { no: 8, name: "AFL_1_1" },
  { no: 9, name: "AFL_1_2" },
  { no: 10, name: "AFL_2_0" },
  { no: 11, name: "AFL_2_1" },
  { no: 12, name: "AFL_3_0" },
  { no: 13, name: "AFMPARSE" },
  { no: 14, name: "AGPL_1_0_ONLY" },
  { no: 15, name: "AGPL_1_0_OR_LATER" },
  { no: 16, name: "AGPL_3_0_ONLY" },
  { no: 17, name: "AGPL_3_0_OR_LATER" },
  { no: 18, name: "ALADDIN" },
  { no: 19, name: "AMDPLPA" },
  { no: 20, name: "AML" },
  { no: 21, name: "AMPAS" },
  { no: 22, name: "ANTLR_PD" },
  { no: 23, name: "APACHE_1_0" },
  { no: 24, name: "APACHE_1_1" },
  { no: 25, name: "APACHE_2_0" },
  { no: 26, name: "APAFML" },
  { no: 27, name: "APL_1_0" },
  { no: 28, name: "APSL_1_0" },
  { no: 29, name: "APSL_1_1" },
  { no: 30, name: "APSL_1_2" },
  { no: 31, name: "APSL_2_0" },
  { no: 32, name: "ARTISTIC_1_0_CL8" },
  { no: 33, name: "ARTISTIC_1_0_PERL" },
  { no: 34, name: "ARTISTIC_1_0" },
  { no: 35, name: "ARTISTIC_2_0" },
  { no: 36, name: "BAHYPH" },
  { no: 37, name: "BARR" },
  { no: 38, name: "BEERWARE" },
  { no: 39, name: "BIT_TORRENT_1_0" },
  { no: 40, name: "BIT_TORRENT_1_1" },
  { no: 41, name: "BORCEUX" },
  { no: 42, name: "BSD_1_CLAUSE" },
  { no: 43, name: "BSD_2_CLAUSE_FREE_BSD" },
  { no: 44, name: "BSD_2_CLAUSE_NET_BSD" },
  { no: 45, name: "BSD_2_CLAUSE_PATENT" },
  { no: 46, name: "BSD_2_CLAUSE" },
  { no: 47, name: "BSD_3_CLAUSE_ATTRIBUTION" },
  { no: 48, name: "BSD_3_CLAUSE_CLEAR" },
  { no: 49, name: "BSD_3_CLAUSE_LBNL" },
  { no: 50, name: "BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014" },
  { no: 51, name: "BSD_3_CLAUSE_NO_NUCLEAR_LICENSE" },
  { no: 52, name: "BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY" },
  { no: 53, name: "BSD_3_CLAUSE" },
  { no: 54, name: "BSD_4_CLAUSE_UC" },
  { no: 55, name: "BSD_4_CLAUSE" },
  { no: 56, name: "BSD_PROTECTION" },
  { no: 57, name: "BSD_SOURCE_CODE" },
  { no: 58, name: "BSL_1_0" },
  { no: 59, name: "BZIP2_1_0_5" },
  { no: 60, name: "BZIP2_1_0_6" },
  { no: 61, name: "CALDERA" },
  { no: 62, name: "CATOSL_1_1" },
  { no: 63, name: "CC_BY_1_0" },
  { no: 64, name: "CC_BY_2_0" },
  { no: 65, name: "CC_BY_2_5" },
  { no: 66, name: "CC_BY_3_0" },
  { no: 67, name: "CC_BY_4_0" },
  { no: 68, name: "CC_BY_NC_1_0" },
  { no: 69, name: "CC_BY_NC_2_0" },
  { no: 70, name: "CC_BY_NC_2_5" },
  { no: 71, name: "CC_BY_NC_3_0" },
  { no: 72, name: "CC_BY_NC_4_0" },
  { no: 73, name: "CC_BY_NC_ND_1_0" },
  { no: 74, name: "CC_BY_NC_ND_2_0" },
  { no: 75, name: "CC_BY_NC_ND_2_5" },
  { no: 76, name: "CC_BY_NC_ND_3_0" },
  { no: 77, name: "CC_BY_NC_ND_4_0" },
  { no: 78, name: "CC_BY_NC_SA_1_0" },
  { no: 79, name: "CC_BY_NC_SA_2_0" },
  { no: 80, name: "CC_BY_NC_SA_2_5" },
  { no: 81, name: "CC_BY_NC_SA_3_0" },
  { no: 82, name: "CC_BY_NC_SA_4_0" },
  { no: 83, name: "CC_BY_ND_1_0" },
  { no: 84, name: "CC_BY_ND_2_0" },
  { no: 85, name: "CC_BY_ND_2_5" },
  { no: 86, name: "CC_BY_ND_3_0" },
  { no: 87, name: "CC_BY_ND_4_0" },
  { no: 88, name: "CC_BY_SA_1_0" },
  { no: 89, name: "CC_BY_SA_2_0" },
  { no: 90, name: "CC_BY_SA_2_5" },
  { no: 91, name: "CC_BY_SA_3_0" },
  { no: 92, name: "CC_BY_SA_4_0" },
  { no: 93, name: "CC0_1_0" },
  { no: 94, name: "CDDL_1_0" },
  { no: 95, name: "CDDL_1_1" },
  { no: 96, name: "CDLA_PERMISSIVE_1_0" },
  { no: 97, name: "CDLA_SHARING_1_0" },
  { no: 98, name: "CECILL_1_0" },
  { no: 99, name: "CECILL_1_1" },
  { no: 100, name: "CECILL_2_0" },
  { no: 101, name: "CECILL_2_1" },
  { no: 102, name: "CECILL_B" },
  { no: 103, name: "CECILL_C" },
  { no: 104, name: "CL_ARTISTIC" },
  { no: 105, name: "CNRI_JYTHON" },
  { no: 106, name: "CNRI_PYTHON_GPL_COMPATIBLE" },
  { no: 107, name: "CNRI_PYTHON" },
  { no: 108, name: "CONDOR_1_1" },
  { no: 109, name: "CPAL_1_0" },
  { no: 110, name: "CPL_1_0" },
  { no: 111, name: "CPOL_1_02" },
  { no: 112, name: "CROSSWORD" },
  { no: 113, name: "CRYSTAL_STACKER" },
  { no: 114, name: "CUA_OPL_1_0" },
  { no: 115, name: "CUBE" },
  { no: 116, name: "CURL" },
  { no: 117, name: "D_FSL_1_0" },
  { no: 118, name: "DIFFMARK" },
  { no: 119, name: "DOC" },
  { no: 120, name: "DOTSEQN" },
  { no: 121, name: "DSDP" },
  { no: 122, name: "DVIPDFM" },
  { no: 123, name: "ECL_1_0" },
  { no: 124, name: "ECL_2_0" },
  { no: 125, name: "EFL_1_0" },
  { no: 126, name: "EFL_2_0" },
  { no: 127, name: "E_GENIX" },
  { no: 128, name: "ENTESSA" },
  { no: 129, name: "EPL_1_0" },
  { no: 130, name: "EPL_2_0" },
  { no: 131, name: "ERL_PL_1_1" },
  { no: 132, name: "EU_DATAGRID" },
  { no: 133, name: "EUPL_1_0" },
  { no: 134, name: "EUPL_1_1" },
  { no: 135, name: "EUPL_1_2" },
  { no: 136, name: "EUROSYM" },
  { no: 137, name: "FAIR" },
  { no: 138, name: "FRAMEWORX_1_0" },
  { no: 139, name: "FREE_IMAGE" },
  { no: 140, name: "FSFAP" },
  { no: 141, name: "FSFUL" },
  { no: 142, name: "FSFULLR" },
  { no: 143, name: "FTL" },
  { no: 144, name: "GFDL_1_1_ONLY" },
  { no: 145, name: "GFDL_1_1_OR_LATER" },
  { no: 146, name: "GFDL_1_2_ONLY" },
  { no: 147, name: "GFDL_1_2_OR_LATER" },
  { no: 148, name: "GFDL_1_3_ONLY" },
  { no: 149, name: "GFDL_1_3_OR_LATER" },
  { no: 150, name: "GIFTWARE" },
  { no: 151, name: "GL2PS" },
  { no: 152, name: "GLIDE" },
  { no: 153, name: "GLULXE" },
  { no: 154, name: "GNUPLOT" },
  { no: 155, name: "GPL_1_0_ONLY" },
  { no: 156, name: "GPL_1_0_OR_LATER" },
  { no: 157, name: "GPL_2_0_ONLY" },
  { no: 158, name: "GPL_2_0_OR_LATER" },
  { no: 159, name: "GPL_3_0_ONLY" },
  { no: 160, name: "GPL_3_0_OR_LATER" },
  { no: 161, name: "G_SOAP_1_3B" },
  { no: 162, name: "HASKELL_REPORT" },
  { no: 163, name: "HPND" },
  { no: 164, name: "IBM_PIBS" },
  { no: 165, name: "ICU" },
  { no: 166, name: "IJG" },
  { no: 167, name: "IMAGE_MAGICK" },
  { no: 168, name: "I_MATIX" },
  { no: 169, name: "IMLIB2" },
  { no: 170, name: "INFO_ZIP" },
  { no: 171, name: "INTEL_ACPI" },
  { no: 172, name: "INTEL" },
  { no: 173, name: "INTERBASE_1_0" },
  { no: 174, name: "IPA" },
  { no: 175, name: "IPL_1_0" },
  { no: 176, name: "ISC" },
  { no: 177, name: "JAS_PER_2_0" },
  { no: 178, name: "JSON" },
  { no: 179, name: "LAL_1_2" },
  { no: 180, name: "LAL_1_3" },
  { no: 181, name: "LATEX2E" },
  { no: 182, name: "LEPTONICA" },
  { no: 183, name: "LGPL_2_0_ONLY" },
  { no: 184, name: "LGPL_2_0_OR_LATER" },
  { no: 185, name: "LGPL_2_1_ONLY" },
  { no: 186, name: "LGPL_2_1_OR_LATER" },
  { no: 187, name: "LGPL_3_0_ONLY" },
  { no: 188, name: "LGPL_3_0_OR_LATER" },
  { no: 189, name: "LGPLLR" },
  { no: 190, name: "LIBPNG" },
  { no: 191, name: "LIBTIFF" },
  { no: 192, name: "LI_LI_Q_P_1_1" },
  { no: 193, name: "LI_LI_Q_R_1_1" },
  { no: 194, name: "LI_LI_Q_RPLUS_1_1" },
  { no: 195, name: "LINUX_OPEN_IB" },
  { no: 196, name: "LPL_1_0" },
  { no: 197, name: "LPL_1_02" },
  { no: 198, name: "LPPL_1_0" },
  { no: 199, name: "LPPL_1_1" },
  { no: 200, name: "LPPL_1_2" },
  { no: 201, name: "LPPL_1_3A" },
  { no: 202, name: "LPPL_1_3C" },
  { no: 203, name: "MAKE_INDEX" },
  { no: 204, name: "MIR_OS" },
  { no: 205, name: "MIT_0" },
  { no: 206, name: "MIT_ADVERTISING" },
  { no: 207, name: "MIT_CMU" },
  { no: 208, name: "MIT_ENNA" },
  { no: 209, name: "MIT_FEH" },
  { no: 210, name: "MIT" },
  { no: 211, name: "MITNFA" },
  { no: 212, name: "MOTOSOTO" },
  { no: 213, name: "MPICH2" },
  { no: 214, name: "MPL_1_0" },
  { no: 215, name: "MPL_1_1" },
  { no: 216, name: "MPL_2_0_NO_COPYLEFT_EXCEPTION" },
  { no: 217, name: "MPL_2_0" },
  { no: 218, name: "MS_PL" },
  { no: 219, name: "MS_RL" },
  { no: 220, name: "MTLL" },
  { no: 221, name: "MULTICS" },
  { no: 222, name: "MUP" },
  { no: 223, name: "NASA_1_3" },
  { no: 224, name: "NAUMEN" },
  { no: 225, name: "NBPL_1_0" },
  { no: 226, name: "NCSA" },
  { no: 227, name: "NET_SNMP" },
  { no: 228, name: "NET_CDF" },
  { no: 229, name: "NEWSLETR" },
  { no: 230, name: "NGPL" },
  { no: 231, name: "NLOD_1_0" },
  { no: 232, name: "NLPL" },
  { no: 233, name: "NOKIA" },
  { no: 234, name: "NOSL" },
  { no: 235, name: "NOWEB" },
  { no: 236, name: "NPL_1_0" },
  { no: 237, name: "NPL_1_1" },
  { no: 238, name: "NPOSL_3_0" },
  { no: 239, name: "NRL" },
  { no: 240, name: "NTP" },
  { no: 241, name: "OCCT_PL" },
  { no: 242, name: "OCLC_2_0" },
  { no: 243, name: "O_DB_L_1_0" },
  { no: 244, name: "OFL_1_0" },
  { no: 245, name: "OFL_1_1" },
  { no: 246, name: "OGTSL" },
  { no: 247, name: "OLDAP_1_1" },
  { no: 248, name: "OLDAP_1_2" },
  { no: 249, name: "OLDAP_1_3" },
  { no: 250, name: "OLDAP_1_4" },
  { no: 251, name: "OLDAP_2_0_1" },
  { no: 252, name: "OLDAP_2_0" },
  { no: 253, name: "OLDAP_2_1" },
  { no: 254, name: "OLDAP_2_2_1" },
  { no: 255, name: "OLDAP_2_2_2" },
  { no: 256, name: "OLDAP_2_2" },
  { no: 257, name: "OLDAP_2_3" },
  { no: 258, name: "OLDAP_2_4" },
  { no: 259, name: "OLDAP_2_5" },
  { no: 260, name: "OLDAP_2_6" },
  { no: 261, name: "OLDAP_2_7" },
  { no: 262, name: "OLDAP_2_8" },
  { no: 263, name: "OML" },
  { no: 264, name: "OPEN_SSL" },
  { no: 265, name: "OPL_1_0" },
  { no: 266, name: "OSET_PL_2_1" },
  { no: 267, name: "OSL_1_0" },
  { no: 268, name: "OSL_1_1" },
  { no: 269, name: "OSL_2_0" },
  { no: 270, name: "OSL_2_1" },
  { no: 271, name: "OSL_3_0" },
  { no: 272, name: "PDDL_1_0" },
  { no: 273, name: "PHP_3_0" },
  { no: 274, name: "PHP_3_01" },
  { no: 275, name: "PLEXUS" },
  { no: 276, name: "POSTGRE_SQL" },
  { no: 277, name: "PSFRAG" },
  { no: 278, name: "PSUTILS" },
  { no: 279, name: "PYTHON_2_0" },
  { no: 280, name: "QHULL" },
  { no: 281, name: "QPL_1_0" },
  { no: 282, name: "RDISC" },
  { no: 283, name: "R_HE_COS_1_1" },
  { no: 284, name: "RPL_1_1" },
  { no: 285, name: "RPL_1_5" },
  { no: 286, name: "RPSL_1_0" },
  { no: 287, name: "RSA_MD" },
  { no: 288, name: "RSCPL" },
  { no: 289, name: "RUBY" },
  { no: 290, name: "SAX_PD" },
  { no: 291, name: "SAXPATH" },
  { no: 292, name: "SCEA" },
  { no: 293, name: "SENDMAIL" },
  { no: 294, name: "SGI_B_1_0" },
  { no: 295, name: "SGI_B_1_1" },
  { no: 296, name: "SGI_B_2_0" },
  { no: 297, name: "SIM_PL_2_0" },
  { no: 298, name: "SISSL_1_2" },
  { no: 299, name: "SISSL" },
  { no: 300, name: "SLEEPYCAT" },
  { no: 301, name: "SMLNJ" },
  { no: 302, name: "SMPPL" },
  { no: 303, name: "SNIA" },
  { no: 304, name: "SPENCER_86" },
  { no: 305, name: "SPENCER_94" },
  { no: 306, name: "SPENCER_99" },
  { no: 307, name: "SPL_1_0" },
  { no: 308, name: "SUGAR_CRM_1_1_3" },
  { no: 309, name: "SWL" },
  { no: 310, name: "TCL" },
  { no: 311, name: "TCP_WRAPPERS" },
  { no: 312, name: "T_MATE" },
  { no: 313, name: "TORQUE_1_1" },
  { no: 314, name: "TOSL" },
  { no: 315, name: "UNICODE_DFS_2015" },
  { no: 316, name: "UNICODE_DFS_2016" },
  { no: 317, name: "UNICODE_TOU" },
  { no: 318, name: "UNLICENSE" },
  { no: 319, name: "UPL_1_0" },
  { no: 320, name: "VIM" },
  { no: 321, name: "VOSTROM" },
  { no: 322, name: "VSL_1_0" },
  { no: 323, name: "W3C_19980720" },
  { no: 324, name: "W3C_20150513" },
  { no: 325, name: "W3C" },
  { no: 326, name: "WATCOM_1_0" },
  { no: 327, name: "WSUIPA" },
  { no: 328, name: "WTFPL" },
  { no: 329, name: "X11" },
  { no: 330, name: "XEROX" },
  { no: 331, name: "X_FREE86_1_1" },
  { no: 332, name: "XINETD" },
  { no: 333, name: "XNET" },
  { no: 334, name: "XPP" },
  { no: 335, name: "X_SKAT" },
  { no: 336, name: "YPL_1_0" },
  { no: 337, name: "YPL_1_1" },
  { no: 338, name: "ZED" },
  { no: 339, name: "ZEND_2_0" },
  { no: 340, name: "ZIMBRA_1_3" },
  { no: 341, name: "ZIMBRA_1_4" },
  { no: 342, name: "ZLIB_ACKNOWLEDGEMENT" },
  { no: 343, name: "ZLIB" },
  { no: 344, name: "ZPL_1_1" },
  { no: 345, name: "ZPL_2_0" },
  { no: 346, name: "ZPL_2_1" },
]);

/**
 * What Search Comparator Codes are supported in search.
 * See http://hl7.org/fhir/search-comparator
 *
 * @generated from message google.fhir.r4.core.SearchComparatorCode
 */
export class SearchComparatorCode extends Message<SearchComparatorCode> {
  constructor(data?: PartialMessage<SearchComparatorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchComparatorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchComparatorCode {
    return new SearchComparatorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchComparatorCode {
    return new SearchComparatorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchComparatorCode {
    return new SearchComparatorCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchComparatorCode | PlainMessage<SearchComparatorCode> | undefined, b: SearchComparatorCode | PlainMessage<SearchComparatorCode> | undefined): boolean {
    return proto3.util.equals(SearchComparatorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SearchComparatorCode.Value
 */
export enum SearchComparatorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: EQ = 1;
   */
  EQ = 1,

  /**
   * @generated from enum value: NE = 2;
   */
  NE = 2,

  /**
   * @generated from enum value: GT = 3;
   */
  GT = 3,

  /**
   * @generated from enum value: LT = 4;
   */
  LT = 4,

  /**
   * @generated from enum value: GE = 5;
   */
  GE = 5,

  /**
   * @generated from enum value: LE = 6;
   */
  LE = 6,

  /**
   * @generated from enum value: SA = 7;
   */
  SA = 7,

  /**
   * @generated from enum value: EB = 8;
   */
  EB = 8,

  /**
   * @generated from enum value: AP = 9;
   */
  AP = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchComparatorCode_Value)
proto3.util.setEnumType(SearchComparatorCode_Value, "google.fhir.r4.core.SearchComparatorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "EQ" },
  { no: 2, name: "NE" },
  { no: 3, name: "GT" },
  { no: 4, name: "LT" },
  { no: 5, name: "GE" },
  { no: 6, name: "LE" },
  { no: 7, name: "SA" },
  { no: 8, name: "EB" },
  { no: 9, name: "AP" },
]);

/**
 * Why an entry is in the result set - whether it's included as a match or
 * because of an _include requirement, or to convey information or warning
 * information about the search process. See
 * http://hl7.org/fhir/search-entry-mode
 *
 * @generated from message google.fhir.r4.core.SearchEntryModeCode
 */
export class SearchEntryModeCode extends Message<SearchEntryModeCode> {
  constructor(data?: PartialMessage<SearchEntryModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchEntryModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchEntryModeCode {
    return new SearchEntryModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchEntryModeCode {
    return new SearchEntryModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchEntryModeCode {
    return new SearchEntryModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchEntryModeCode | PlainMessage<SearchEntryModeCode> | undefined, b: SearchEntryModeCode | PlainMessage<SearchEntryModeCode> | undefined): boolean {
    return proto3.util.equals(SearchEntryModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SearchEntryModeCode.Value
 */
export enum SearchEntryModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MATCH = 1;
   */
  MATCH = 1,

  /**
   * @generated from enum value: INCLUDE = 2;
   */
  INCLUDE = 2,

  /**
   * @generated from enum value: OUTCOME = 3;
   */
  OUTCOME = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchEntryModeCode_Value)
proto3.util.setEnumType(SearchEntryModeCode_Value, "google.fhir.r4.core.SearchEntryModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MATCH" },
  { no: 2, name: "INCLUDE" },
  { no: 3, name: "OUTCOME" },
]);

/**
 * A supported modifier for a search parameter.
 * See http://hl7.org/fhir/search-modifier-code
 *
 * @generated from message google.fhir.r4.core.SearchModifierCode
 */
export class SearchModifierCode extends Message<SearchModifierCode> {
  constructor(data?: PartialMessage<SearchModifierCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchModifierCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchModifierCode {
    return new SearchModifierCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchModifierCode {
    return new SearchModifierCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchModifierCode {
    return new SearchModifierCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchModifierCode | PlainMessage<SearchModifierCode> | undefined, b: SearchModifierCode | PlainMessage<SearchModifierCode> | undefined): boolean {
    return proto3.util.equals(SearchModifierCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SearchModifierCode.Value
 */
export enum SearchModifierCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MISSING = 1;
   */
  MISSING = 1,

  /**
   * @generated from enum value: EXACT = 2;
   */
  EXACT = 2,

  /**
   * @generated from enum value: CONTAINS = 3;
   */
  CONTAINS = 3,

  /**
   * @generated from enum value: NOT = 4;
   */
  NOT = 4,

  /**
   * @generated from enum value: TEXT = 5;
   */
  TEXT = 5,

  /**
   * @generated from enum value: IN = 6;
   */
  IN = 6,

  /**
   * @generated from enum value: NOT_IN = 7;
   */
  NOT_IN = 7,

  /**
   * @generated from enum value: BELOW = 8;
   */
  BELOW = 8,

  /**
   * @generated from enum value: ABOVE = 9;
   */
  ABOVE = 9,

  /**
   * @generated from enum value: TYPE = 10;
   */
  TYPE = 10,

  /**
   * @generated from enum value: IDENTIFIER = 11;
   */
  IDENTIFIER = 11,

  /**
   * @generated from enum value: OF_TYPE = 12;
   */
  OF_TYPE = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchModifierCode_Value)
proto3.util.setEnumType(SearchModifierCode_Value, "google.fhir.r4.core.SearchModifierCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MISSING" },
  { no: 2, name: "EXACT" },
  { no: 3, name: "CONTAINS" },
  { no: 4, name: "NOT" },
  { no: 5, name: "TEXT" },
  { no: 6, name: "IN" },
  { no: 7, name: "NOT_IN" },
  { no: 8, name: "BELOW" },
  { no: 9, name: "ABOVE" },
  { no: 10, name: "TYPE" },
  { no: 11, name: "IDENTIFIER" },
  { no: 12, name: "OF_TYPE" },
]);

/**
 * Data types allowed to be used for search parameters.
 * See http://hl7.org/fhir/search-param-type
 *
 * @generated from message google.fhir.r4.core.SearchParamTypeCode
 */
export class SearchParamTypeCode extends Message<SearchParamTypeCode> {
  constructor(data?: PartialMessage<SearchParamTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SearchParamTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchParamTypeCode {
    return new SearchParamTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchParamTypeCode {
    return new SearchParamTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchParamTypeCode {
    return new SearchParamTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SearchParamTypeCode | PlainMessage<SearchParamTypeCode> | undefined, b: SearchParamTypeCode | PlainMessage<SearchParamTypeCode> | undefined): boolean {
    return proto3.util.equals(SearchParamTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SearchParamTypeCode.Value
 */
export enum SearchParamTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NUMBER = 1;
   */
  NUMBER = 1,

  /**
   * @generated from enum value: DATE = 2;
   */
  DATE = 2,

  /**
   * @generated from enum value: STRING = 3;
   */
  STRING = 3,

  /**
   * @generated from enum value: TOKEN = 4;
   */
  TOKEN = 4,

  /**
   * @generated from enum value: REFERENCE = 5;
   */
  REFERENCE = 5,

  /**
   * @generated from enum value: COMPOSITE = 6;
   */
  COMPOSITE = 6,

  /**
   * @generated from enum value: QUANTITY = 7;
   */
  QUANTITY = 7,

  /**
   * @generated from enum value: URI = 8;
   */
  URI = 8,

  /**
   * @generated from enum value: SPECIAL = 9;
   */
  SPECIAL = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(SearchParamTypeCode_Value)
proto3.util.setEnumType(SearchParamTypeCode_Value, "google.fhir.r4.core.SearchParamTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NUMBER" },
  { no: 2, name: "DATE" },
  { no: 3, name: "STRING" },
  { no: 4, name: "TOKEN" },
  { no: 5, name: "REFERENCE" },
  { no: 6, name: "COMPOSITE" },
  { no: 7, name: "QUANTITY" },
  { no: 8, name: "URI" },
  { no: 9, name: "SPECIAL" },
]);

/**
 * Type if a sequence -- DNA, RNA, or amino acid sequence.
 * See http://hl7.org/fhir/sequence-type
 *
 * @generated from message google.fhir.r4.core.SequenceTypeCode
 */
export class SequenceTypeCode extends Message<SequenceTypeCode> {
  constructor(data?: PartialMessage<SequenceTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SequenceTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SequenceTypeCode {
    return new SequenceTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SequenceTypeCode {
    return new SequenceTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SequenceTypeCode {
    return new SequenceTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SequenceTypeCode | PlainMessage<SequenceTypeCode> | undefined, b: SequenceTypeCode | PlainMessage<SequenceTypeCode> | undefined): boolean {
    return proto3.util.equals(SequenceTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SequenceTypeCode.Value
 */
export enum SequenceTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AA = 1;
   */
  AA = 1,

  /**
   * @generated from enum value: DNA = 2;
   */
  DNA = 2,

  /**
   * @generated from enum value: RNA = 3;
   */
  RNA = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SequenceTypeCode_Value)
proto3.util.setEnumType(SequenceTypeCode_Value, "google.fhir.r4.core.SequenceTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AA" },
  { no: 2, name: "DNA" },
  { no: 3, name: "RNA" },
]);

/**
 * How slices are interpreted when evaluating an instance.
 * See http://hl7.org/fhir/resource-slicing-rules
 *
 * @generated from message google.fhir.r4.core.SlicingRulesCode
 */
export class SlicingRulesCode extends Message<SlicingRulesCode> {
  constructor(data?: PartialMessage<SlicingRulesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SlicingRulesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlicingRulesCode {
    return new SlicingRulesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlicingRulesCode {
    return new SlicingRulesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlicingRulesCode {
    return new SlicingRulesCode().fromJsonString(jsonString, options);
  }

  static equals(a: SlicingRulesCode | PlainMessage<SlicingRulesCode> | undefined, b: SlicingRulesCode | PlainMessage<SlicingRulesCode> | undefined): boolean {
    return proto3.util.equals(SlicingRulesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SlicingRulesCode.Value
 */
export enum SlicingRulesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CLOSED = 1;
   */
  CLOSED = 1,

  /**
   * @generated from enum value: OPEN = 2;
   */
  OPEN = 2,

  /**
   * @generated from enum value: OPEN_AT_END = 3;
   */
  OPEN_AT_END = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(SlicingRulesCode_Value)
proto3.util.setEnumType(SlicingRulesCode_Value, "google.fhir.r4.core.SlicingRulesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CLOSED" },
  { no: 2, name: "OPEN" },
  { no: 3, name: "OPEN_AT_END" },
]);

/**
 * The free/busy status of the slot.
 * See http://hl7.org/fhir/slotstatus
 *
 * @generated from message google.fhir.r4.core.SlotStatusCode
 */
export class SlotStatusCode extends Message<SlotStatusCode> {
  constructor(data?: PartialMessage<SlotStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SlotStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlotStatusCode {
    return new SlotStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlotStatusCode {
    return new SlotStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlotStatusCode {
    return new SlotStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SlotStatusCode | PlainMessage<SlotStatusCode> | undefined, b: SlotStatusCode | PlainMessage<SlotStatusCode> | undefined): boolean {
    return proto3.util.equals(SlotStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SlotStatusCode.Value
 */
export enum SlotStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BUSY = 1;
   */
  BUSY = 1,

  /**
   * @generated from enum value: FREE = 2;
   */
  FREE = 2,

  /**
   * @generated from enum value: BUSY_UNAVAILABLE = 3;
   */
  BUSY_UNAVAILABLE = 3,

  /**
   * @generated from enum value: BUSY_TENTATIVE = 4;
   */
  BUSY_TENTATIVE = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(SlotStatusCode_Value)
proto3.util.setEnumType(SlotStatusCode_Value, "google.fhir.r4.core.SlotStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BUSY" },
  { no: 2, name: "FREE" },
  { no: 3, name: "BUSY_UNAVAILABLE" },
  { no: 4, name: "BUSY_TENTATIVE" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * Codes that define what the server is capable of.
 * See http://terminology.hl7.org/CodeSystem/smart-capabilities
 *
 * @generated from message google.fhir.r4.core.SmartCapabilitiesCode
 */
export class SmartCapabilitiesCode extends Message<SmartCapabilitiesCode> {
  constructor(data?: PartialMessage<SmartCapabilitiesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SmartCapabilitiesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SmartCapabilitiesCode {
    return new SmartCapabilitiesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SmartCapabilitiesCode {
    return new SmartCapabilitiesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SmartCapabilitiesCode {
    return new SmartCapabilitiesCode().fromJsonString(jsonString, options);
  }

  static equals(a: SmartCapabilitiesCode | PlainMessage<SmartCapabilitiesCode> | undefined, b: SmartCapabilitiesCode | PlainMessage<SmartCapabilitiesCode> | undefined): boolean {
    return proto3.util.equals(SmartCapabilitiesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SmartCapabilitiesCode.Value
 */
export enum SmartCapabilitiesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: LAUNCH_EHR = 1;
   */
  LAUNCH_EHR = 1,

  /**
   * @generated from enum value: LAUNCH_STANDALONE = 2;
   */
  LAUNCH_STANDALONE = 2,

  /**
   * @generated from enum value: CLIENT_PUBLIC = 3;
   */
  CLIENT_PUBLIC = 3,

  /**
   * @generated from enum value: CLIENT_CONFIDENTIAL_SYMMETRIC = 4;
   */
  CLIENT_CONFIDENTIAL_SYMMETRIC = 4,

  /**
   * @generated from enum value: SSO_OPENID_CONNECT = 5;
   */
  SSO_OPENID_CONNECT = 5,

  /**
   * @generated from enum value: CONTEXT_PASSTHROUGH_BANNER = 6;
   */
  CONTEXT_PASSTHROUGH_BANNER = 6,

  /**
   * @generated from enum value: CONTEXT_PASSTHROUGH_STYLE = 7;
   */
  CONTEXT_PASSTHROUGH_STYLE = 7,

  /**
   * @generated from enum value: CONTEXT_EHR_PATIENT = 8;
   */
  CONTEXT_EHR_PATIENT = 8,

  /**
   * @generated from enum value: CONTEXT_EHR_ENCOUNTER = 9;
   */
  CONTEXT_EHR_ENCOUNTER = 9,

  /**
   * @generated from enum value: CONTEXT_STANDALONE_PATIENT = 10;
   */
  CONTEXT_STANDALONE_PATIENT = 10,

  /**
   * @generated from enum value: CONTEXT_STANDALONE_ENCOUNTER = 11;
   */
  CONTEXT_STANDALONE_ENCOUNTER = 11,

  /**
   * @generated from enum value: PERMISSION_OFFLINE = 12;
   */
  PERMISSION_OFFLINE = 12,

  /**
   * @generated from enum value: PERMISSION_PATIENT = 13;
   */
  PERMISSION_PATIENT = 13,

  /**
   * @generated from enum value: PERMISSION_USER = 14;
   */
  PERMISSION_USER = 14,
}
// Retrieve enum metadata with: proto3.getEnumType(SmartCapabilitiesCode_Value)
proto3.util.setEnumType(SmartCapabilitiesCode_Value, "google.fhir.r4.core.SmartCapabilitiesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "LAUNCH_EHR" },
  { no: 2, name: "LAUNCH_STANDALONE" },
  { no: 3, name: "CLIENT_PUBLIC" },
  { no: 4, name: "CLIENT_CONFIDENTIAL_SYMMETRIC" },
  { no: 5, name: "SSO_OPENID_CONNECT" },
  { no: 6, name: "CONTEXT_PASSTHROUGH_BANNER" },
  { no: 7, name: "CONTEXT_PASSTHROUGH_STYLE" },
  { no: 8, name: "CONTEXT_EHR_PATIENT" },
  { no: 9, name: "CONTEXT_EHR_ENCOUNTER" },
  { no: 10, name: "CONTEXT_STANDALONE_PATIENT" },
  { no: 11, name: "CONTEXT_STANDALONE_ENCOUNTER" },
  { no: 12, name: "PERMISSION_OFFLINE" },
  { no: 13, name: "PERMISSION_PATIENT" },
  { no: 14, name: "PERMISSION_USER" },
]);

/**
 * The possible sort directions, ascending or descending.
 * See http://hl7.org/fhir/sort-direction
 *
 * @generated from message google.fhir.r4.core.SortDirectionCode
 */
export class SortDirectionCode extends Message<SortDirectionCode> {
  constructor(data?: PartialMessage<SortDirectionCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SortDirectionCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SortDirectionCode {
    return new SortDirectionCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SortDirectionCode {
    return new SortDirectionCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SortDirectionCode {
    return new SortDirectionCode().fromJsonString(jsonString, options);
  }

  static equals(a: SortDirectionCode | PlainMessage<SortDirectionCode> | undefined, b: SortDirectionCode | PlainMessage<SortDirectionCode> | undefined): boolean {
    return proto3.util.equals(SortDirectionCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SortDirectionCode.Value
 */
export enum SortDirectionCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ASCENDING = 1;
   */
  ASCENDING = 1,

  /**
   * @generated from enum value: DESCENDING = 2;
   */
  DESCENDING = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SortDirectionCode_Value)
proto3.util.setEnumType(SortDirectionCode_Value, "google.fhir.r4.core.SortDirectionCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ASCENDING" },
  { no: 2, name: "DESCENDING" },
]);

/**
 * Degree of preference of a type of conditioned specimen.
 * See http://hl7.org/fhir/specimen-contained-preference
 *
 * @generated from message google.fhir.r4.core.SpecimenContainedPreferenceCode
 */
export class SpecimenContainedPreferenceCode extends Message<SpecimenContainedPreferenceCode> {
  constructor(data?: PartialMessage<SpecimenContainedPreferenceCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenContainedPreferenceCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenContainedPreferenceCode {
    return new SpecimenContainedPreferenceCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenContainedPreferenceCode {
    return new SpecimenContainedPreferenceCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenContainedPreferenceCode {
    return new SpecimenContainedPreferenceCode().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenContainedPreferenceCode | PlainMessage<SpecimenContainedPreferenceCode> | undefined, b: SpecimenContainedPreferenceCode | PlainMessage<SpecimenContainedPreferenceCode> | undefined): boolean {
    return proto3.util.equals(SpecimenContainedPreferenceCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SpecimenContainedPreferenceCode.Value
 */
export enum SpecimenContainedPreferenceCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PREFERRED = 1;
   */
  PREFERRED = 1,

  /**
   * @generated from enum value: ALTERNATE = 2;
   */
  ALTERNATE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SpecimenContainedPreferenceCode_Value)
proto3.util.setEnumType(SpecimenContainedPreferenceCode_Value, "google.fhir.r4.core.SpecimenContainedPreferenceCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PREFERRED" },
  { no: 2, name: "ALTERNATE" },
]);

/**
 * Codes providing the status/availability of a specimen.
 * See http://hl7.org/fhir/specimen-status
 *
 * @generated from message google.fhir.r4.core.SpecimenStatusCode
 */
export class SpecimenStatusCode extends Message<SpecimenStatusCode> {
  constructor(data?: PartialMessage<SpecimenStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SpecimenStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpecimenStatusCode {
    return new SpecimenStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpecimenStatusCode {
    return new SpecimenStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpecimenStatusCode {
    return new SpecimenStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SpecimenStatusCode | PlainMessage<SpecimenStatusCode> | undefined, b: SpecimenStatusCode | PlainMessage<SpecimenStatusCode> | undefined): boolean {
    return proto3.util.equals(SpecimenStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SpecimenStatusCode.Value
 */
export enum SpecimenStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AVAILABLE = 1;
   */
  AVAILABLE = 1,

  /**
   * @generated from enum value: UNAVAILABLE = 2;
   */
  UNAVAILABLE = 2,

  /**
   * @generated from enum value: UNSATISFACTORY = 3;
   */
  UNSATISFACTORY = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SpecimenStatusCode_Value)
proto3.util.setEnumType(SpecimenStatusCode_Value, "google.fhir.r4.core.SpecimenStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AVAILABLE" },
  { no: 2, name: "UNAVAILABLE" },
  { no: 3, name: "UNSATISFACTORY" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * HL7 Ballot/Standards status of artifact.
 * See http://terminology.hl7.org/CodeSystem/standards-status
 *
 * @generated from message google.fhir.r4.core.StandardsStatusCode
 */
export class StandardsStatusCode extends Message<StandardsStatusCode> {
  constructor(data?: PartialMessage<StandardsStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StandardsStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StandardsStatusCode {
    return new StandardsStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StandardsStatusCode {
    return new StandardsStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StandardsStatusCode {
    return new StandardsStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: StandardsStatusCode | PlainMessage<StandardsStatusCode> | undefined, b: StandardsStatusCode | PlainMessage<StandardsStatusCode> | undefined): boolean {
    return proto3.util.equals(StandardsStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StandardsStatusCode.Value
 */
export enum StandardsStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: NORMATIVE = 2;
   */
  NORMATIVE = 2,

  /**
   * @generated from enum value: TRIAL_USE = 3;
   */
  TRIAL_USE = 3,

  /**
   * @generated from enum value: INFORMATIVE = 4;
   */
  INFORMATIVE = 4,

  /**
   * @generated from enum value: DEPRECATED = 5;
   */
  DEPRECATED = 5,

  /**
   * @generated from enum value: EXTERNAL = 6;
   */
  EXTERNAL = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(StandardsStatusCode_Value)
proto3.util.setEnumType(StandardsStatusCode_Value, "google.fhir.r4.core.StandardsStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "NORMATIVE" },
  { no: 3, name: "TRIAL_USE" },
  { no: 4, name: "INFORMATIVE" },
  { no: 5, name: "DEPRECATED" },
  { no: 6, name: "EXTERNAL" },
]);

/**
 * The validation status of the target
 * See http://hl7.org/fhir/CodeSystem/status
 *
 * @generated from message google.fhir.r4.core.StatusCode
 */
export class StatusCode extends Message<StatusCode> {
  constructor(data?: PartialMessage<StatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StatusCode {
    return new StatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StatusCode {
    return new StatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StatusCode {
    return new StatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: StatusCode | PlainMessage<StatusCode> | undefined, b: StatusCode | PlainMessage<StatusCode> | undefined): boolean {
    return proto3.util.equals(StatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StatusCode.Value
 */
export enum StatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ATTESTED = 1;
   */
  ATTESTED = 1,

  /**
   * @generated from enum value: VALIDATED = 2;
   */
  VALIDATED = 2,

  /**
   * @generated from enum value: IN_PROCESS = 3;
   */
  IN_PROCESS = 3,

  /**
   * @generated from enum value: REQ_REVALID = 4;
   */
  REQ_REVALID = 4,

  /**
   * @generated from enum value: VAL_FAIL = 5;
   */
  VAL_FAIL = 5,

  /**
   * @generated from enum value: REVAL_FAIL = 6;
   */
  REVAL_FAIL = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(StatusCode_Value)
proto3.util.setEnumType(StatusCode_Value, "google.fhir.r4.core.StatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ATTESTED" },
  { no: 2, name: "VALIDATED" },
  { no: 3, name: "IN_PROCESS" },
  { no: 4, name: "REQ_REVALID" },
  { no: 5, name: "VAL_FAIL" },
  { no: 6, name: "REVAL_FAIL" },
]);

/**
 * Type for strand.
 * See http://hl7.org/fhir/strand-type
 *
 * @generated from message google.fhir.r4.core.StrandTypeCode
 */
export class StrandTypeCode extends Message<StrandTypeCode> {
  constructor(data?: PartialMessage<StrandTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StrandTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StrandTypeCode {
    return new StrandTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StrandTypeCode {
    return new StrandTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StrandTypeCode {
    return new StrandTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StrandTypeCode | PlainMessage<StrandTypeCode> | undefined, b: StrandTypeCode | PlainMessage<StrandTypeCode> | undefined): boolean {
    return proto3.util.equals(StrandTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StrandTypeCode.Value
 */
export enum StrandTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: WATSON = 1;
   */
  WATSON = 1,

  /**
   * @generated from enum value: CRICK = 2;
   */
  CRICK = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(StrandTypeCode_Value)
proto3.util.setEnumType(StrandTypeCode_Value, "google.fhir.r4.core.StrandTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "WATSON" },
  { no: 2, name: "CRICK" },
]);

/**
 * Defines the type of structure that a definition is describing.
 * See http://hl7.org/fhir/structure-definition-kind
 *
 * @generated from message google.fhir.r4.core.StructureDefinitionKindCode
 */
export class StructureDefinitionKindCode extends Message<StructureDefinitionKindCode> {
  constructor(data?: PartialMessage<StructureDefinitionKindCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureDefinitionKindCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureDefinitionKindCode {
    return new StructureDefinitionKindCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureDefinitionKindCode {
    return new StructureDefinitionKindCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureDefinitionKindCode {
    return new StructureDefinitionKindCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureDefinitionKindCode | PlainMessage<StructureDefinitionKindCode> | undefined, b: StructureDefinitionKindCode | PlainMessage<StructureDefinitionKindCode> | undefined): boolean {
    return proto3.util.equals(StructureDefinitionKindCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureDefinitionKindCode.Value
 */
export enum StructureDefinitionKindCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PRIMITIVE_TYPE = 1;
   */
  PRIMITIVE_TYPE = 1,

  /**
   * @generated from enum value: COMPLEX_TYPE = 2;
   */
  COMPLEX_TYPE = 2,

  /**
   * @generated from enum value: RESOURCE = 3;
   */
  RESOURCE = 3,

  /**
   * @generated from enum value: LOGICAL = 4;
   */
  LOGICAL = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureDefinitionKindCode_Value)
proto3.util.setEnumType(StructureDefinitionKindCode_Value, "google.fhir.r4.core.StructureDefinitionKindCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PRIMITIVE_TYPE" },
  { no: 2, name: "COMPLEX_TYPE" },
  { no: 3, name: "RESOURCE" },
  { no: 4, name: "LOGICAL" },
]);

/**
 * How to interpret the context.
 * See http://hl7.org/fhir/map-context-type
 *
 * @generated from message google.fhir.r4.core.StructureMapContextTypeCode
 */
export class StructureMapContextTypeCode extends Message<StructureMapContextTypeCode> {
  constructor(data?: PartialMessage<StructureMapContextTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapContextTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapContextTypeCode {
    return new StructureMapContextTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapContextTypeCode {
    return new StructureMapContextTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapContextTypeCode {
    return new StructureMapContextTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapContextTypeCode | PlainMessage<StructureMapContextTypeCode> | undefined, b: StructureMapContextTypeCode | PlainMessage<StructureMapContextTypeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapContextTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapContextTypeCode.Value
 */
export enum StructureMapContextTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TYPE = 1;
   */
  TYPE = 1,

  /**
   * @generated from enum value: VARIABLE = 2;
   */
  VARIABLE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapContextTypeCode_Value)
proto3.util.setEnumType(StructureMapContextTypeCode_Value, "google.fhir.r4.core.StructureMapContextTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TYPE" },
  { no: 2, name: "VARIABLE" },
]);

/**
 * If this is the default rule set to apply for the source type, or this
 * combination of types. See http://hl7.org/fhir/map-group-type-mode
 *
 * @generated from message google.fhir.r4.core.StructureMapGroupTypeModeCode
 */
export class StructureMapGroupTypeModeCode extends Message<StructureMapGroupTypeModeCode> {
  constructor(data?: PartialMessage<StructureMapGroupTypeModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapGroupTypeModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapGroupTypeModeCode {
    return new StructureMapGroupTypeModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapGroupTypeModeCode {
    return new StructureMapGroupTypeModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapGroupTypeModeCode {
    return new StructureMapGroupTypeModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapGroupTypeModeCode | PlainMessage<StructureMapGroupTypeModeCode> | undefined, b: StructureMapGroupTypeModeCode | PlainMessage<StructureMapGroupTypeModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapGroupTypeModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapGroupTypeModeCode.Value
 */
export enum StructureMapGroupTypeModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * @generated from enum value: TYPES = 2;
   */
  TYPES = 2,

  /**
   * @generated from enum value: TYPE_AND_TYPES = 3;
   */
  TYPE_AND_TYPES = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapGroupTypeModeCode_Value)
proto3.util.setEnumType(StructureMapGroupTypeModeCode_Value, "google.fhir.r4.core.StructureMapGroupTypeModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NONE" },
  { no: 2, name: "TYPES" },
  { no: 3, name: "TYPE_AND_TYPES" },
]);

/**
 * Mode for this instance of data.
 * See http://hl7.org/fhir/map-input-mode
 *
 * @generated from message google.fhir.r4.core.StructureMapInputModeCode
 */
export class StructureMapInputModeCode extends Message<StructureMapInputModeCode> {
  constructor(data?: PartialMessage<StructureMapInputModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapInputModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapInputModeCode {
    return new StructureMapInputModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapInputModeCode {
    return new StructureMapInputModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapInputModeCode {
    return new StructureMapInputModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapInputModeCode | PlainMessage<StructureMapInputModeCode> | undefined, b: StructureMapInputModeCode | PlainMessage<StructureMapInputModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapInputModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapInputModeCode.Value
 */
export enum StructureMapInputModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOURCE = 1;
   */
  SOURCE = 1,

  /**
   * @generated from enum value: TARGET = 2;
   */
  TARGET = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapInputModeCode_Value)
proto3.util.setEnumType(StructureMapInputModeCode_Value, "google.fhir.r4.core.StructureMapInputModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOURCE" },
  { no: 2, name: "TARGET" },
]);

/**
 * How the referenced structure is used in this mapping.
 * See http://hl7.org/fhir/map-model-mode
 *
 * @generated from message google.fhir.r4.core.StructureMapModelModeCode
 */
export class StructureMapModelModeCode extends Message<StructureMapModelModeCode> {
  constructor(data?: PartialMessage<StructureMapModelModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapModelModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapModelModeCode {
    return new StructureMapModelModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapModelModeCode {
    return new StructureMapModelModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapModelModeCode {
    return new StructureMapModelModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapModelModeCode | PlainMessage<StructureMapModelModeCode> | undefined, b: StructureMapModelModeCode | PlainMessage<StructureMapModelModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapModelModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapModelModeCode.Value
 */
export enum StructureMapModelModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SOURCE = 1;
   */
  SOURCE = 1,

  /**
   * @generated from enum value: QUERIED = 2;
   */
  QUERIED = 2,

  /**
   * @generated from enum value: TARGET = 3;
   */
  TARGET = 3,

  /**
   * @generated from enum value: PRODUCED = 4;
   */
  PRODUCED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapModelModeCode_Value)
proto3.util.setEnumType(StructureMapModelModeCode_Value, "google.fhir.r4.core.StructureMapModelModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SOURCE" },
  { no: 2, name: "QUERIED" },
  { no: 3, name: "TARGET" },
  { no: 4, name: "PRODUCED" },
]);

/**
 * If field is a list, how to manage the source.
 * See http://hl7.org/fhir/map-source-list-mode
 *
 * @generated from message google.fhir.r4.core.StructureMapSourceListModeCode
 */
export class StructureMapSourceListModeCode extends Message<StructureMapSourceListModeCode> {
  constructor(data?: PartialMessage<StructureMapSourceListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapSourceListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapSourceListModeCode {
    return new StructureMapSourceListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapSourceListModeCode {
    return new StructureMapSourceListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapSourceListModeCode {
    return new StructureMapSourceListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapSourceListModeCode | PlainMessage<StructureMapSourceListModeCode> | undefined, b: StructureMapSourceListModeCode | PlainMessage<StructureMapSourceListModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapSourceListModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapSourceListModeCode.Value
 */
export enum StructureMapSourceListModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FIRST = 1;
   */
  FIRST = 1,

  /**
   * @generated from enum value: NOT_FIRST = 2;
   */
  NOT_FIRST = 2,

  /**
   * @generated from enum value: LAST = 3;
   */
  LAST = 3,

  /**
   * @generated from enum value: NOT_LAST = 4;
   */
  NOT_LAST = 4,

  /**
   * @generated from enum value: ONLY_ONE = 5;
   */
  ONLY_ONE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapSourceListModeCode_Value)
proto3.util.setEnumType(StructureMapSourceListModeCode_Value, "google.fhir.r4.core.StructureMapSourceListModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FIRST" },
  { no: 2, name: "NOT_FIRST" },
  { no: 3, name: "LAST" },
  { no: 4, name: "NOT_LAST" },
  { no: 5, name: "ONLY_ONE" },
]);

/**
 * If field is a list, how to manage the production.
 * See http://hl7.org/fhir/map-target-list-mode
 *
 * @generated from message google.fhir.r4.core.StructureMapTargetListModeCode
 */
export class StructureMapTargetListModeCode extends Message<StructureMapTargetListModeCode> {
  constructor(data?: PartialMessage<StructureMapTargetListModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapTargetListModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapTargetListModeCode {
    return new StructureMapTargetListModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapTargetListModeCode {
    return new StructureMapTargetListModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapTargetListModeCode {
    return new StructureMapTargetListModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapTargetListModeCode | PlainMessage<StructureMapTargetListModeCode> | undefined, b: StructureMapTargetListModeCode | PlainMessage<StructureMapTargetListModeCode> | undefined): boolean {
    return proto3.util.equals(StructureMapTargetListModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapTargetListModeCode.Value
 */
export enum StructureMapTargetListModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: FIRST = 1;
   */
  FIRST = 1,

  /**
   * @generated from enum value: SHARE = 2;
   */
  SHARE = 2,

  /**
   * @generated from enum value: LAST = 3;
   */
  LAST = 3,

  /**
   * @generated from enum value: COLLATE = 4;
   */
  COLLATE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapTargetListModeCode_Value)
proto3.util.setEnumType(StructureMapTargetListModeCode_Value, "google.fhir.r4.core.StructureMapTargetListModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "FIRST" },
  { no: 2, name: "SHARE" },
  { no: 3, name: "LAST" },
  { no: 4, name: "COLLATE" },
]);

/**
 * How data is copied/created.
 * See http://hl7.org/fhir/map-transform
 *
 * @generated from message google.fhir.r4.core.StructureMapTransformCode
 */
export class StructureMapTransformCode extends Message<StructureMapTransformCode> {
  constructor(data?: PartialMessage<StructureMapTransformCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.StructureMapTransformCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructureMapTransformCode {
    return new StructureMapTransformCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructureMapTransformCode {
    return new StructureMapTransformCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructureMapTransformCode {
    return new StructureMapTransformCode().fromJsonString(jsonString, options);
  }

  static equals(a: StructureMapTransformCode | PlainMessage<StructureMapTransformCode> | undefined, b: StructureMapTransformCode | PlainMessage<StructureMapTransformCode> | undefined): boolean {
    return proto3.util.equals(StructureMapTransformCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.StructureMapTransformCode.Value
 */
export enum StructureMapTransformCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: COPY = 2;
   */
  COPY = 2,

  /**
   * @generated from enum value: TRUNCATE = 3;
   */
  TRUNCATE = 3,

  /**
   * @generated from enum value: ESCAPE = 4;
   */
  ESCAPE = 4,

  /**
   * @generated from enum value: CAST = 5;
   */
  CAST = 5,

  /**
   * @generated from enum value: APPEND = 6;
   */
  APPEND = 6,

  /**
   * @generated from enum value: TRANSLATE = 7;
   */
  TRANSLATE = 7,

  /**
   * @generated from enum value: REFERENCE = 8;
   */
  REFERENCE = 8,

  /**
   * @generated from enum value: DATE_OP = 9;
   */
  DATE_OP = 9,

  /**
   * @generated from enum value: UUID = 10;
   */
  UUID = 10,

  /**
   * @generated from enum value: POINTER = 11;
   */
  POINTER = 11,

  /**
   * @generated from enum value: EVALUATE = 12;
   */
  EVALUATE = 12,

  /**
   * @generated from enum value: CC = 13;
   */
  CC = 13,

  /**
   * @generated from enum value: C = 14;
   */
  C = 14,

  /**
   * @generated from enum value: QTY = 15;
   */
  QTY = 15,

  /**
   * @generated from enum value: ID = 16;
   */
  ID = 16,

  /**
   * @generated from enum value: CP = 17;
   */
  CP = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(StructureMapTransformCode_Value)
proto3.util.setEnumType(StructureMapTransformCode_Value, "google.fhir.r4.core.StructureMapTransformCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CREATE" },
  { no: 2, name: "COPY" },
  { no: 3, name: "TRUNCATE" },
  { no: 4, name: "ESCAPE" },
  { no: 5, name: "CAST" },
  { no: 6, name: "APPEND" },
  { no: 7, name: "TRANSLATE" },
  { no: 8, name: "REFERENCE" },
  { no: 9, name: "DATE_OP" },
  { no: 10, name: "UUID" },
  { no: 11, name: "POINTER" },
  { no: 12, name: "EVALUATE" },
  { no: 13, name: "CC" },
  { no: 14, name: "C" },
  { no: 15, name: "QTY" },
  { no: 16, name: "ID" },
  { no: 17, name: "CP" },
]);

/**
 * The type of method used to execute a subscription.
 * See http://hl7.org/fhir/subscription-channel-type
 *
 * @generated from message google.fhir.r4.core.SubscriptionChannelTypeCode
 */
export class SubscriptionChannelTypeCode extends Message<SubscriptionChannelTypeCode> {
  constructor(data?: PartialMessage<SubscriptionChannelTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubscriptionChannelTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionChannelTypeCode {
    return new SubscriptionChannelTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionChannelTypeCode {
    return new SubscriptionChannelTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionChannelTypeCode {
    return new SubscriptionChannelTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SubscriptionChannelTypeCode | PlainMessage<SubscriptionChannelTypeCode> | undefined, b: SubscriptionChannelTypeCode | PlainMessage<SubscriptionChannelTypeCode> | undefined): boolean {
    return proto3.util.equals(SubscriptionChannelTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SubscriptionChannelTypeCode.Value
 */
export enum SubscriptionChannelTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REST_HOOK = 1;
   */
  REST_HOOK = 1,

  /**
   * @generated from enum value: WEBSOCKET = 2;
   */
  WEBSOCKET = 2,

  /**
   * @generated from enum value: EMAIL = 3;
   */
  EMAIL = 3,

  /**
   * @generated from enum value: SMS = 4;
   */
  SMS = 4,

  /**
   * @generated from enum value: MESSAGE = 5;
   */
  MESSAGE = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(SubscriptionChannelTypeCode_Value)
proto3.util.setEnumType(SubscriptionChannelTypeCode_Value, "google.fhir.r4.core.SubscriptionChannelTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REST_HOOK" },
  { no: 2, name: "WEBSOCKET" },
  { no: 3, name: "EMAIL" },
  { no: 4, name: "SMS" },
  { no: 5, name: "MESSAGE" },
]);

/**
 * The status of a subscription.
 * See http://hl7.org/fhir/subscription-status
 *
 * @generated from message google.fhir.r4.core.SubscriptionStatusCode
 */
export class SubscriptionStatusCode extends Message<SubscriptionStatusCode> {
  constructor(data?: PartialMessage<SubscriptionStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SubscriptionStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscriptionStatusCode {
    return new SubscriptionStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscriptionStatusCode {
    return new SubscriptionStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscriptionStatusCode {
    return new SubscriptionStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SubscriptionStatusCode | PlainMessage<SubscriptionStatusCode> | undefined, b: SubscriptionStatusCode | PlainMessage<SubscriptionStatusCode> | undefined): boolean {
    return proto3.util.equals(SubscriptionStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SubscriptionStatusCode.Value
 */
export enum SubscriptionStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: REQUESTED = 1;
   */
  REQUESTED = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: ERROR = 3;
   */
  ERROR = 3,

  /**
   * @generated from enum value: OFF = 4;
   */
  OFF = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SubscriptionStatusCode_Value)
proto3.util.setEnumType(SubscriptionStatusCode_Value, "google.fhir.r4.core.SubscriptionStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "REQUESTED" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "ERROR" },
  { no: 4, name: "OFF" },
]);

/**
 * Status of the supply delivery.
 * See http://hl7.org/fhir/supplydelivery-status
 *
 * @generated from message google.fhir.r4.core.SupplyDeliveryStatusCode
 */
export class SupplyDeliveryStatusCode extends Message<SupplyDeliveryStatusCode> {
  constructor(data?: PartialMessage<SupplyDeliveryStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SupplyDeliveryStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyDeliveryStatusCode {
    return new SupplyDeliveryStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyDeliveryStatusCode {
    return new SupplyDeliveryStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyDeliveryStatusCode {
    return new SupplyDeliveryStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyDeliveryStatusCode | PlainMessage<SupplyDeliveryStatusCode> | undefined, b: SupplyDeliveryStatusCode | PlainMessage<SupplyDeliveryStatusCode> | undefined): boolean {
    return proto3.util.equals(SupplyDeliveryStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SupplyDeliveryStatusCode.Value
 */
export enum SupplyDeliveryStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: ABANDONED = 3;
   */
  ABANDONED = 3,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 4;
   */
  ENTERED_IN_ERROR = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyDeliveryStatusCode_Value)
proto3.util.setEnumType(SupplyDeliveryStatusCode_Value, "google.fhir.r4.core.SupplyDeliveryStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "IN_PROGRESS" },
  { no: 2, name: "COMPLETED" },
  { no: 3, name: "ABANDONED" },
  { no: 4, name: "ENTERED_IN_ERROR" },
]);

/**
 * This value sets refers to a specific supply item.
 * See http://terminology.hl7.org/CodeSystem/supply-item-type
 *
 * @generated from message google.fhir.r4.core.SupplyItemTypeCode
 */
export class SupplyItemTypeCode extends Message<SupplyItemTypeCode> {
  constructor(data?: PartialMessage<SupplyItemTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SupplyItemTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyItemTypeCode {
    return new SupplyItemTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyItemTypeCode {
    return new SupplyItemTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyItemTypeCode {
    return new SupplyItemTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyItemTypeCode | PlainMessage<SupplyItemTypeCode> | undefined, b: SupplyItemTypeCode | PlainMessage<SupplyItemTypeCode> | undefined): boolean {
    return proto3.util.equals(SupplyItemTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SupplyItemTypeCode.Value
 */
export enum SupplyItemTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: MEDICATION = 1;
   */
  MEDICATION = 1,

  /**
   * @generated from enum value: DEVICE = 2;
   */
  DEVICE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyItemTypeCode_Value)
proto3.util.setEnumType(SupplyItemTypeCode_Value, "google.fhir.r4.core.SupplyItemTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "MEDICATION" },
  { no: 2, name: "DEVICE" },
]);

/**
 * Status of the supply request.
 * See http://hl7.org/fhir/supplyrequest-status
 *
 * @generated from message google.fhir.r4.core.SupplyRequestStatusCode
 */
export class SupplyRequestStatusCode extends Message<SupplyRequestStatusCode> {
  constructor(data?: PartialMessage<SupplyRequestStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.SupplyRequestStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyRequestStatusCode {
    return new SupplyRequestStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyRequestStatusCode {
    return new SupplyRequestStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyRequestStatusCode {
    return new SupplyRequestStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyRequestStatusCode | PlainMessage<SupplyRequestStatusCode> | undefined, b: SupplyRequestStatusCode | PlainMessage<SupplyRequestStatusCode> | undefined): boolean {
    return proto3.util.equals(SupplyRequestStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.SupplyRequestStatusCode.Value
 */
export enum SupplyRequestStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: ACTIVE = 2;
   */
  ACTIVE = 2,

  /**
   * @generated from enum value: SUSPENDED = 3;
   */
  SUSPENDED = 3,

  /**
   * @generated from enum value: CANCELLED = 4;
   */
  CANCELLED = 4,

  /**
   * @generated from enum value: COMPLETED = 5;
   */
  COMPLETED = 5,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 6;
   */
  ENTERED_IN_ERROR = 6,

  /**
   * @generated from enum value: UNKNOWN = 7;
   */
  UNKNOWN = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyRequestStatusCode_Value)
proto3.util.setEnumType(SupplyRequestStatusCode_Value, "google.fhir.r4.core.SupplyRequestStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "ACTIVE" },
  { no: 3, name: "SUSPENDED" },
  { no: 4, name: "CANCELLED" },
  { no: 5, name: "COMPLETED" },
  { no: 6, name: "ENTERED_IN_ERROR" },
  { no: 7, name: "UNKNOWN" },
]);

/**
 * Distinguishes whether the task is a proposal, plan or full order.
 * See http://hl7.org/fhir/task-intent
 *
 * @generated from message google.fhir.r4.core.TaskIntentCode
 */
export class TaskIntentCode extends Message<TaskIntentCode> {
  constructor(data?: PartialMessage<TaskIntentCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TaskIntentCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskIntentCode {
    return new TaskIntentCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskIntentCode {
    return new TaskIntentCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskIntentCode {
    return new TaskIntentCode().fromJsonString(jsonString, options);
  }

  static equals(a: TaskIntentCode | PlainMessage<TaskIntentCode> | undefined, b: TaskIntentCode | PlainMessage<TaskIntentCode> | undefined): boolean {
    return proto3.util.equals(TaskIntentCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TaskIntentCode.Value
 */
export enum TaskIntentCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UNKNOWN = 1;
   */
  UNKNOWN = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(TaskIntentCode_Value)
proto3.util.setEnumType(TaskIntentCode_Value, "google.fhir.r4.core.TaskIntentCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UNKNOWN" },
]);

/**
 * The current status of the task.
 * See http://hl7.org/fhir/task-status
 *
 * @generated from message google.fhir.r4.core.TaskStatusCode
 */
export class TaskStatusCode extends Message<TaskStatusCode> {
  constructor(data?: PartialMessage<TaskStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TaskStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskStatusCode {
    return new TaskStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskStatusCode {
    return new TaskStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskStatusCode {
    return new TaskStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: TaskStatusCode | PlainMessage<TaskStatusCode> | undefined, b: TaskStatusCode | PlainMessage<TaskStatusCode> | undefined): boolean {
    return proto3.util.equals(TaskStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TaskStatusCode.Value
 */
export enum TaskStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: REQUESTED = 2;
   */
  REQUESTED = 2,

  /**
   * @generated from enum value: RECEIVED = 3;
   */
  RECEIVED = 3,

  /**
   * @generated from enum value: ACCEPTED = 4;
   */
  ACCEPTED = 4,

  /**
   * @generated from enum value: REJECTED = 5;
   */
  REJECTED = 5,

  /**
   * @generated from enum value: READY = 6;
   */
  READY = 6,

  /**
   * @generated from enum value: CANCELLED = 7;
   */
  CANCELLED = 7,

  /**
   * @generated from enum value: IN_PROGRESS = 8;
   */
  IN_PROGRESS = 8,

  /**
   * @generated from enum value: ON_HOLD = 9;
   */
  ON_HOLD = 9,

  /**
   * @generated from enum value: FAILED = 10;
   */
  FAILED = 10,

  /**
   * @generated from enum value: COMPLETED = 11;
   */
  COMPLETED = 11,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 12;
   */
  ENTERED_IN_ERROR = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(TaskStatusCode_Value)
proto3.util.setEnumType(TaskStatusCode_Value, "google.fhir.r4.core.TaskStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "REQUESTED" },
  { no: 3, name: "RECEIVED" },
  { no: 4, name: "ACCEPTED" },
  { no: 5, name: "REJECTED" },
  { no: 6, name: "READY" },
  { no: 7, name: "CANCELLED" },
  { no: 8, name: "IN_PROGRESS" },
  { no: 9, name: "ON_HOLD" },
  { no: 10, name: "FAILED" },
  { no: 11, name: "COMPLETED" },
  { no: 12, name: "ENTERED_IN_ERROR" },
]);

/**
 * Life cycle of the Status Code of a Template Design (Version)
 * See urn:oid:2.16.840.1.113883.3.1937.98.5.8
 *
 * @generated from message google.fhir.r4.core.TemplateStatusCodeLifeCycleCode
 */
export class TemplateStatusCodeLifeCycleCode extends Message<TemplateStatusCodeLifeCycleCode> {
  constructor(data?: PartialMessage<TemplateStatusCodeLifeCycleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TemplateStatusCodeLifeCycleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TemplateStatusCodeLifeCycleCode {
    return new TemplateStatusCodeLifeCycleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TemplateStatusCodeLifeCycleCode {
    return new TemplateStatusCodeLifeCycleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TemplateStatusCodeLifeCycleCode {
    return new TemplateStatusCodeLifeCycleCode().fromJsonString(jsonString, options);
  }

  static equals(a: TemplateStatusCodeLifeCycleCode | PlainMessage<TemplateStatusCodeLifeCycleCode> | undefined, b: TemplateStatusCodeLifeCycleCode | PlainMessage<TemplateStatusCodeLifeCycleCode> | undefined): boolean {
    return proto3.util.equals(TemplateStatusCodeLifeCycleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TemplateStatusCodeLifeCycleCode.Value
 */
export enum TemplateStatusCodeLifeCycleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: PENDING = 2;
   */
  PENDING = 2,

  /**
   * @generated from enum value: ACTIVE = 3;
   */
  ACTIVE = 3,

  /**
   * @generated from enum value: REVIEW = 4;
   */
  REVIEW = 4,

  /**
   * @generated from enum value: CANCELLED = 5;
   */
  CANCELLED = 5,

  /**
   * @generated from enum value: REJECTED = 6;
   */
  REJECTED = 6,

  /**
   * @generated from enum value: RETIRED = 7;
   */
  RETIRED = 7,

  /**
   * @generated from enum value: TERMINATED = 8;
   */
  TERMINATED = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(TemplateStatusCodeLifeCycleCode_Value)
proto3.util.setEnumType(TemplateStatusCodeLifeCycleCode_Value, "google.fhir.r4.core.TemplateStatusCodeLifeCycleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "PENDING" },
  { no: 3, name: "ACTIVE" },
  { no: 4, name: "REVIEW" },
  { no: 5, name: "CANCELLED" },
  { no: 6, name: "REJECTED" },
  { no: 7, name: "RETIRED" },
  { no: 8, name: "TERMINATED" },
]);

/**
 * The results of executing an action.
 * See http://hl7.org/fhir/report-action-result-codes
 *
 * @generated from message google.fhir.r4.core.TestReportActionResultCode
 */
export class TestReportActionResultCode extends Message<TestReportActionResultCode> {
  constructor(data?: PartialMessage<TestReportActionResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReportActionResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportActionResultCode {
    return new TestReportActionResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportActionResultCode {
    return new TestReportActionResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportActionResultCode {
    return new TestReportActionResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportActionResultCode | PlainMessage<TestReportActionResultCode> | undefined, b: TestReportActionResultCode | PlainMessage<TestReportActionResultCode> | undefined): boolean {
    return proto3.util.equals(TestReportActionResultCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TestReportActionResultCode.Value
 */
export enum TestReportActionResultCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PASS = 1;
   */
  PASS = 1,

  /**
   * @generated from enum value: SKIP = 2;
   */
  SKIP = 2,

  /**
   * @generated from enum value: FAIL = 3;
   */
  FAIL = 3,

  /**
   * @generated from enum value: WARNING = 4;
   */
  WARNING = 4,

  /**
   * @generated from enum value: ERROR = 5;
   */
  ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportActionResultCode_Value)
proto3.util.setEnumType(TestReportActionResultCode_Value, "google.fhir.r4.core.TestReportActionResultCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PASS" },
  { no: 2, name: "SKIP" },
  { no: 3, name: "FAIL" },
  { no: 4, name: "WARNING" },
  { no: 5, name: "ERROR" },
]);

/**
 * The type of participant.
 * See http://hl7.org/fhir/report-participant-type
 *
 * @generated from message google.fhir.r4.core.TestReportParticipantTypeCode
 */
export class TestReportParticipantTypeCode extends Message<TestReportParticipantTypeCode> {
  constructor(data?: PartialMessage<TestReportParticipantTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReportParticipantTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportParticipantTypeCode {
    return new TestReportParticipantTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportParticipantTypeCode {
    return new TestReportParticipantTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportParticipantTypeCode {
    return new TestReportParticipantTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportParticipantTypeCode | PlainMessage<TestReportParticipantTypeCode> | undefined, b: TestReportParticipantTypeCode | PlainMessage<TestReportParticipantTypeCode> | undefined): boolean {
    return proto3.util.equals(TestReportParticipantTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TestReportParticipantTypeCode.Value
 */
export enum TestReportParticipantTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: TEST_ENGINE = 1;
   */
  TEST_ENGINE = 1,

  /**
   * @generated from enum value: CLIENT = 2;
   */
  CLIENT = 2,

  /**
   * @generated from enum value: SERVER = 3;
   */
  SERVER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportParticipantTypeCode_Value)
proto3.util.setEnumType(TestReportParticipantTypeCode_Value, "google.fhir.r4.core.TestReportParticipantTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "TEST_ENGINE" },
  { no: 2, name: "CLIENT" },
  { no: 3, name: "SERVER" },
]);

/**
 * The reported execution result.
 * See http://hl7.org/fhir/report-result-codes
 *
 * @generated from message google.fhir.r4.core.TestReportResultCode
 */
export class TestReportResultCode extends Message<TestReportResultCode> {
  constructor(data?: PartialMessage<TestReportResultCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReportResultCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportResultCode {
    return new TestReportResultCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportResultCode {
    return new TestReportResultCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportResultCode {
    return new TestReportResultCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportResultCode | PlainMessage<TestReportResultCode> | undefined, b: TestReportResultCode | PlainMessage<TestReportResultCode> | undefined): boolean {
    return proto3.util.equals(TestReportResultCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TestReportResultCode.Value
 */
export enum TestReportResultCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: PASS = 1;
   */
  PASS = 1,

  /**
   * @generated from enum value: FAIL = 2;
   */
  FAIL = 2,

  /**
   * @generated from enum value: PENDING = 3;
   */
  PENDING = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportResultCode_Value)
proto3.util.setEnumType(TestReportResultCode_Value, "google.fhir.r4.core.TestReportResultCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "PASS" },
  { no: 2, name: "FAIL" },
  { no: 3, name: "PENDING" },
]);

/**
 * The current status of the test report.
 * See http://hl7.org/fhir/report-status-codes
 *
 * @generated from message google.fhir.r4.core.TestReportStatusCode
 */
export class TestReportStatusCode extends Message<TestReportStatusCode> {
  constructor(data?: PartialMessage<TestReportStatusCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestReportStatusCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestReportStatusCode {
    return new TestReportStatusCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestReportStatusCode {
    return new TestReportStatusCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestReportStatusCode {
    return new TestReportStatusCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestReportStatusCode | PlainMessage<TestReportStatusCode> | undefined, b: TestReportStatusCode | PlainMessage<TestReportStatusCode> | undefined): boolean {
    return proto3.util.equals(TestReportStatusCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TestReportStatusCode.Value
 */
export enum TestReportStatusCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: COMPLETED = 1;
   */
  COMPLETED = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: WAITING = 3;
   */
  WAITING = 3,

  /**
   * @generated from enum value: STOPPED = 4;
   */
  STOPPED = 4,

  /**
   * @generated from enum value: ENTERED_IN_ERROR = 5;
   */
  ENTERED_IN_ERROR = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(TestReportStatusCode_Value)
proto3.util.setEnumType(TestReportStatusCode_Value, "google.fhir.r4.core.TestReportStatusCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "COMPLETED" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "WAITING" },
  { no: 4, name: "STOPPED" },
  { no: 5, name: "ENTERED_IN_ERROR" },
]);

/**
 * The allowable request method or HTTP operation codes.
 * See http://hl7.org/fhir/http-operations
 *
 * @generated from message google.fhir.r4.core.TestScriptRequestMethodCode
 */
export class TestScriptRequestMethodCode extends Message<TestScriptRequestMethodCode> {
  constructor(data?: PartialMessage<TestScriptRequestMethodCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TestScriptRequestMethodCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestScriptRequestMethodCode {
    return new TestScriptRequestMethodCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestScriptRequestMethodCode {
    return new TestScriptRequestMethodCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestScriptRequestMethodCode {
    return new TestScriptRequestMethodCode().fromJsonString(jsonString, options);
  }

  static equals(a: TestScriptRequestMethodCode | PlainMessage<TestScriptRequestMethodCode> | undefined, b: TestScriptRequestMethodCode | PlainMessage<TestScriptRequestMethodCode> | undefined): boolean {
    return proto3.util.equals(TestScriptRequestMethodCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TestScriptRequestMethodCode.Value
 */
export enum TestScriptRequestMethodCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: DELETE = 1;
   */
  DELETE = 1,

  /**
   * @generated from enum value: GET = 2;
   */
  GET = 2,

  /**
   * @generated from enum value: OPTIONS = 3;
   */
  OPTIONS = 3,

  /**
   * @generated from enum value: PATCH = 4;
   */
  PATCH = 4,

  /**
   * @generated from enum value: POST = 5;
   */
  POST = 5,

  /**
   * @generated from enum value: PUT = 6;
   */
  PUT = 6,

  /**
   * @generated from enum value: HEAD = 7;
   */
  HEAD = 7,
}
// Retrieve enum metadata with: proto3.getEnumType(TestScriptRequestMethodCode_Value)
proto3.util.setEnumType(TestScriptRequestMethodCode_Value, "google.fhir.r4.core.TestScriptRequestMethodCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "DELETE" },
  { no: 2, name: "GET" },
  { no: 3, name: "OPTIONS" },
  { no: 4, name: "PATCH" },
  { no: 5, name: "POST" },
  { no: 6, name: "PUT" },
  { no: 7, name: "HEAD" },
]);

/**
 * The type of trigger.
 * See http://hl7.org/fhir/trigger-type
 *
 * @generated from message google.fhir.r4.core.TriggerTypeCode
 */
export class TriggerTypeCode extends Message<TriggerTypeCode> {
  constructor(data?: PartialMessage<TriggerTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TriggerTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TriggerTypeCode {
    return new TriggerTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TriggerTypeCode {
    return new TriggerTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TriggerTypeCode {
    return new TriggerTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: TriggerTypeCode | PlainMessage<TriggerTypeCode> | undefined, b: TriggerTypeCode | PlainMessage<TriggerTypeCode> | undefined): boolean {
    return proto3.util.equals(TriggerTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TriggerTypeCode.Value
 */
export enum TriggerTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NAMED_EVENT = 1;
   */
  NAMED_EVENT = 1,

  /**
   * @generated from enum value: PERIODIC = 2;
   */
  PERIODIC = 2,

  /**
   * @generated from enum value: DATA_CHANGED = 3;
   */
  DATA_CHANGED = 3,

  /**
   * @generated from enum value: DATA_ADDED = 4;
   */
  DATA_ADDED = 4,

  /**
   * @generated from enum value: DATA_MODIFIED = 5;
   */
  DATA_MODIFIED = 5,

  /**
   * @generated from enum value: DATA_REMOVED = 6;
   */
  DATA_REMOVED = 6,

  /**
   * @generated from enum value: DATA_ACCESSED = 7;
   */
  DATA_ACCESSED = 7,

  /**
   * @generated from enum value: DATA_ACCESS_ENDED = 8;
   */
  DATA_ACCESS_ENDED = 8,
}
// Retrieve enum metadata with: proto3.getEnumType(TriggerTypeCode_Value)
proto3.util.setEnumType(TriggerTypeCode_Value, "google.fhir.r4.core.TriggerTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NAMED_EVENT" },
  { no: 2, name: "PERIODIC" },
  { no: 3, name: "DATA_CHANGED" },
  { no: 4, name: "DATA_ADDED" },
  { no: 5, name: "DATA_MODIFIED" },
  { no: 6, name: "DATA_REMOVED" },
  { no: 7, name: "DATA_ACCESSED" },
  { no: 8, name: "DATA_ACCESS_ENDED" },
]);

/**
 * How a type relates to its baseDefinition.
 * See http://hl7.org/fhir/type-derivation-rule
 *
 * @generated from message google.fhir.r4.core.TypeDerivationRuleCode
 */
export class TypeDerivationRuleCode extends Message<TypeDerivationRuleCode> {
  constructor(data?: PartialMessage<TypeDerivationRuleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.TypeDerivationRuleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypeDerivationRuleCode {
    return new TypeDerivationRuleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypeDerivationRuleCode {
    return new TypeDerivationRuleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypeDerivationRuleCode {
    return new TypeDerivationRuleCode().fromJsonString(jsonString, options);
  }

  static equals(a: TypeDerivationRuleCode | PlainMessage<TypeDerivationRuleCode> | undefined, b: TypeDerivationRuleCode | PlainMessage<TypeDerivationRuleCode> | undefined): boolean {
    return proto3.util.equals(TypeDerivationRuleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.TypeDerivationRuleCode.Value
 */
export enum TypeDerivationRuleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: SPECIALIZATION = 1;
   */
  SPECIALIZATION = 1,

  /**
   * @generated from enum value: CONSTRAINT = 2;
   */
  CONSTRAINT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TypeDerivationRuleCode_Value)
proto3.util.setEnumType(TypeDerivationRuleCode_Value, "google.fhir.r4.core.TypeDerivationRuleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "SPECIALIZATION" },
  { no: 2, name: "CONSTRAINT" },
]);

/**
 * Codes to identify how UDI data was entered.
 * See http://hl7.org/fhir/udi-entry-type
 *
 * @generated from message google.fhir.r4.core.UDIEntryTypeCode
 */
export class UDIEntryTypeCode extends Message<UDIEntryTypeCode> {
  constructor(data?: PartialMessage<UDIEntryTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.UDIEntryTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UDIEntryTypeCode {
    return new UDIEntryTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UDIEntryTypeCode {
    return new UDIEntryTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UDIEntryTypeCode {
    return new UDIEntryTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: UDIEntryTypeCode | PlainMessage<UDIEntryTypeCode> | undefined, b: UDIEntryTypeCode | PlainMessage<UDIEntryTypeCode> | undefined): boolean {
    return proto3.util.equals(UDIEntryTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.UDIEntryTypeCode.Value
 */
export enum UDIEntryTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: BARCODE = 1;
   */
  BARCODE = 1,

  /**
   * @generated from enum value: RFID = 2;
   */
  RFID = 2,

  /**
   * @generated from enum value: MANUAL = 3;
   */
  MANUAL = 3,

  /**
   * @generated from enum value: CARD = 4;
   */
  CARD = 4,

  /**
   * @generated from enum value: SELF_REPORTED = 5;
   */
  SELF_REPORTED = 5,

  /**
   * @generated from enum value: UNKNOWN = 6;
   */
  UNKNOWN = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(UDIEntryTypeCode_Value)
proto3.util.setEnumType(UDIEntryTypeCode_Value, "google.fhir.r4.core.UDIEntryTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "BARCODE" },
  { no: 2, name: "RFID" },
  { no: 3, name: "MANUAL" },
  { no: 4, name: "CARD" },
  { no: 5, name: "SELF_REPORTED" },
  { no: 6, name: "UNKNOWN" },
]);

/**
 * The purpose of the Claim: predetermination, preauthorization, claim.
 * See http://hl7.org/fhir/claim-use
 *
 * @generated from message google.fhir.r4.core.UseCode
 */
export class UseCode extends Message<UseCode> {
  constructor(data?: PartialMessage<UseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.UseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UseCode {
    return new UseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UseCode {
    return new UseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UseCode {
    return new UseCode().fromJsonString(jsonString, options);
  }

  static equals(a: UseCode | PlainMessage<UseCode> | undefined, b: UseCode | PlainMessage<UseCode> | undefined): boolean {
    return proto3.util.equals(UseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.UseCode.Value
 */
export enum UseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CLAIM = 1;
   */
  CLAIM = 1,

  /**
   * @generated from enum value: PREAUTHORIZATION = 2;
   */
  PREAUTHORIZATION = 2,

  /**
   * @generated from enum value: PREDETERMINATION = 3;
   */
  PREDETERMINATION = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(UseCode_Value)
proto3.util.setEnumType(UseCode_Value, "google.fhir.r4.core.UseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CLAIM" },
  { no: 2, name: "PREAUTHORIZATION" },
  { no: 3, name: "PREDETERMINATION" },
]);

/**
 * FHIR Value set/code system definition for HL7 v2 table 0444 ( Name assembly
 * order) See http://terminology.hl7.org/CodeSystem/v2-0444
 *
 * @generated from message google.fhir.r4.core.V20444Code
 */
export class V20444Code extends Message<V20444Code> {
  constructor(data?: PartialMessage<V20444Code>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V20444Code";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V20444Code {
    return new V20444Code().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V20444Code {
    return new V20444Code().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V20444Code {
    return new V20444Code().fromJsonString(jsonString, options);
  }

  static equals(a: V20444Code | PlainMessage<V20444Code> | undefined, b: V20444Code | PlainMessage<V20444Code> | undefined): boolean {
    return proto3.util.equals(V20444Code, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V20444Code.Value
 */
export enum V20444Code_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: F = 1;
   */
  F = 1,

  /**
   * @generated from enum value: G = 2;
   */
  G = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(V20444Code_Value)
proto3.util.setEnumType(V20444Code_Value, "google.fhir.r4.core.V20444Code.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "F" },
  { no: 2, name: "G" },
]);

/**
 *  Codes that provide guidance around the circumstances in which a given
 *  address should be used.
 * See http://terminology.hl7.org/CodeSystem/v3-AddressUse
 *
 * @generated from message google.fhir.r4.core.V3AddressUseCode
 */
export class V3AddressUseCode extends Message<V3AddressUseCode> {
  constructor(data?: PartialMessage<V3AddressUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3AddressUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3AddressUseCode {
    return new V3AddressUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3AddressUseCode {
    return new V3AddressUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3AddressUseCode {
    return new V3AddressUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3AddressUseCode | PlainMessage<V3AddressUseCode> | undefined, b: V3AddressUseCode | PlainMessage<V3AddressUseCode> | undefined): boolean {
    return proto3.util.equals(V3AddressUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3AddressUseCode.Value
 */
export enum V3AddressUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: GENERAL_ADDRESS_USE = 1;
   */
  GENERAL_ADDRESS_USE = 1,

  /**
   * @generated from enum value: BAD = 2;
   */
  BAD = 2,

  /**
   * @generated from enum value: CONF = 3;
   */
  CONF = 3,

  /**
   * @generated from enum value: H = 4;
   */
  H = 4,

  /**
   * @generated from enum value: HP = 5;
   */
  HP = 5,

  /**
   * @generated from enum value: HV = 6;
   */
  HV = 6,

  /**
   * @generated from enum value: OLD = 7;
   */
  OLD = 7,

  /**
   * @generated from enum value: TMP = 8;
   */
  TMP = 8,

  /**
   * @generated from enum value: WP = 9;
   */
  WP = 9,

  /**
   * @generated from enum value: DIR = 10;
   */
  DIR = 10,

  /**
   * @generated from enum value: PUB = 11;
   */
  PUB = 11,

  /**
   * @generated from enum value: POSTAL_ADDRESS_USE = 12;
   */
  POSTAL_ADDRESS_USE = 12,

  /**
   * @generated from enum value: PHYS = 13;
   */
  PHYS = 13,

  /**
   * @generated from enum value: PST = 14;
   */
  PST = 14,

  /**
   * @generated from enum value: TELECOMMUNICATION_ADDRESS_USE = 15;
   */
  TELECOMMUNICATION_ADDRESS_USE = 15,

  /**
   * @generated from enum value: AS = 16;
   */
  AS = 16,

  /**
   * @generated from enum value: EC = 17;
   */
  EC = 17,

  /**
   * @generated from enum value: MC = 18;
   */
  MC = 18,

  /**
   * @generated from enum value: PG = 19;
   */
  PG = 19,
}
// Retrieve enum metadata with: proto3.getEnumType(V3AddressUseCode_Value)
proto3.util.setEnumType(V3AddressUseCode_Value, "google.fhir.r4.core.V3AddressUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "GENERAL_ADDRESS_USE" },
  { no: 2, name: "BAD" },
  { no: 3, name: "CONF" },
  { no: 4, name: "H" },
  { no: 5, name: "HP" },
  { no: 6, name: "HV" },
  { no: 7, name: "OLD" },
  { no: 8, name: "TMP" },
  { no: 9, name: "WP" },
  { no: 10, name: "DIR" },
  { no: 11, name: "PUB" },
  { no: 12, name: "POSTAL_ADDRESS_USE" },
  { no: 13, name: "PHYS" },
  { no: 14, name: "PST" },
  { no: 15, name: "TELECOMMUNICATION_ADDRESS_USE" },
  { no: 16, name: "AS" },
  { no: 17, name: "EC" },
  { no: 18, name: "MC" },
  { no: 19, name: "PG" },
]);

/**
 *  A set of codes specifying the security classification of acts and roles in
 *  accordance with the definition for concept domain "Confidentiality".
 * See http://terminology.hl7.org/CodeSystem/v3-Confidentiality
 *
 * @generated from message google.fhir.r4.core.V3ConfidentialityCode
 */
export class V3ConfidentialityCode extends Message<V3ConfidentialityCode> {
  constructor(data?: PartialMessage<V3ConfidentialityCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3ConfidentialityCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3ConfidentialityCode {
    return new V3ConfidentialityCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3ConfidentialityCode {
    return new V3ConfidentialityCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3ConfidentialityCode {
    return new V3ConfidentialityCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3ConfidentialityCode | PlainMessage<V3ConfidentialityCode> | undefined, b: V3ConfidentialityCode | PlainMessage<V3ConfidentialityCode> | undefined): boolean {
    return proto3.util.equals(V3ConfidentialityCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3ConfidentialityCode.Value
 */
export enum V3ConfidentialityCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: CONFIDENTIALITY = 1;
   */
  CONFIDENTIALITY = 1,

  /**
   * @generated from enum value: L = 2;
   */
  L = 2,

  /**
   * @generated from enum value: M = 3;
   */
  M = 3,

  /**
   * @generated from enum value: N = 4;
   */
  N = 4,

  /**
   * @generated from enum value: R = 5;
   */
  R = 5,

  /**
   * @generated from enum value: U = 6;
   */
  U = 6,

  /**
   * @generated from enum value: V = 7;
   */
  V = 7,

  /**
   * @generated from enum value: CONFIDENTIALITY_BY_ACCESS_KIND = 8;
   */
  CONFIDENTIALITY_BY_ACCESS_KIND = 8,

  /**
   * @generated from enum value: B = 9;
   */
  B = 9,

  /**
   * @generated from enum value: D = 10;
   */
  D = 10,

  /**
   * @generated from enum value: I = 11;
   */
  I = 11,

  /**
   * @generated from enum value: CONFIDENTIALITY_BY_INFO_TYPE = 12;
   */
  CONFIDENTIALITY_BY_INFO_TYPE = 12,

  /**
   * @generated from enum value: ETH = 13;
   */
  ETH = 13,

  /**
   * @generated from enum value: HIV = 14;
   */
  HIV = 14,

  /**
   * @generated from enum value: PSY = 15;
   */
  PSY = 15,

  /**
   * @generated from enum value: SDV = 16;
   */
  SDV = 16,

  /**
   * @generated from enum value: CONFIDENTIALITY_MODIFIERS = 17;
   */
  CONFIDENTIALITY_MODIFIERS = 17,

  /**
   * @generated from enum value: C = 18;
   */
  C = 18,

  /**
   * @generated from enum value: S = 19;
   */
  S = 19,

  /**
   * @generated from enum value: T = 20;
   */
  T = 20,
}
// Retrieve enum metadata with: proto3.getEnumType(V3ConfidentialityCode_Value)
proto3.util.setEnumType(V3ConfidentialityCode_Value, "google.fhir.r4.core.V3ConfidentialityCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "CONFIDENTIALITY" },
  { no: 2, name: "L" },
  { no: 3, name: "M" },
  { no: 4, name: "N" },
  { no: 5, name: "R" },
  { no: 6, name: "U" },
  { no: 7, name: "V" },
  { no: 8, name: "CONFIDENTIALITY_BY_ACCESS_KIND" },
  { no: 9, name: "B" },
  { no: 10, name: "D" },
  { no: 11, name: "I" },
  { no: 12, name: "CONFIDENTIALITY_BY_INFO_TYPE" },
  { no: 13, name: "ETH" },
  { no: 14, name: "HIV" },
  { no: 15, name: "PSY" },
  { no: 16, name: "SDV" },
  { no: 17, name: "CONFIDENTIALITY_MODIFIERS" },
  { no: 18, name: "C" },
  { no: 19, name: "S" },
  { no: 20, name: "T" },
]);

/**
 *   OpenIssue:
 *
 * Needs description
 * See http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifier
 *
 * @generated from message google.fhir.r4.core.V3EntityNamePartQualifierCode
 */
export class V3EntityNamePartQualifierCode extends Message<V3EntityNamePartQualifierCode> {
  constructor(data?: PartialMessage<V3EntityNamePartQualifierCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3EntityNamePartQualifierCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3EntityNamePartQualifierCode {
    return new V3EntityNamePartQualifierCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3EntityNamePartQualifierCode {
    return new V3EntityNamePartQualifierCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3EntityNamePartQualifierCode {
    return new V3EntityNamePartQualifierCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3EntityNamePartQualifierCode | PlainMessage<V3EntityNamePartQualifierCode> | undefined, b: V3EntityNamePartQualifierCode | PlainMessage<V3EntityNamePartQualifierCode> | undefined): boolean {
    return proto3.util.equals(V3EntityNamePartQualifierCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3EntityNamePartQualifierCode.Value
 */
export enum V3EntityNamePartQualifierCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ORGANIZATION_NAME_PART_QUALIFIER = 1;
   */
  ORGANIZATION_NAME_PART_QUALIFIER = 1,

  /**
   * @generated from enum value: AC = 2;
   */
  AC = 2,

  /**
   * @generated from enum value: AD = 3;
   */
  AD = 3,

  /**
   * @generated from enum value: BR = 4;
   */
  BR = 4,

  /**
   * @generated from enum value: CL = 5;
   */
  CL = 5,

  /**
   * @generated from enum value: IN = 6;
   */
  IN = 6,

  /**
   * @generated from enum value: LS = 7;
   */
  LS = 7,

  /**
   * @generated from enum value: NB = 8;
   */
  NB = 8,

  /**
   * @generated from enum value: PR = 9;
   */
  PR = 9,

  /**
   * @generated from enum value: SP = 10;
   */
  SP = 10,

  /**
   * @generated from enum value: TITLE = 11;
   */
  TITLE = 11,

  /**
   * @generated from enum value: VV = 12;
   */
  VV = 12,

  /**
   * @generated from enum value: PHARMACEUTICAL_ENTITY_NAME_PART_QUALIFIERS = 13;
   */
  PHARMACEUTICAL_ENTITY_NAME_PART_QUALIFIERS = 13,

  /**
   * @generated from enum value: CON = 14;
   */
  CON = 14,

  /**
   * @generated from enum value: DEV = 15;
   */
  DEV = 15,

  /**
   * @generated from enum value: FLAV = 16;
   */
  FLAV = 16,

  /**
   * @generated from enum value: FORMUL = 17;
   */
  FORMUL = 17,

  /**
   * @generated from enum value: FRM = 18;
   */
  FRM = 18,

  /**
   * @generated from enum value: INV = 19;
   */
  INV = 19,

  /**
   * @generated from enum value: POPUL = 20;
   */
  POPUL = 20,

  /**
   * @generated from enum value: SCI = 21;
   */
  SCI = 21,

  /**
   * @generated from enum value: STR = 22;
   */
  STR = 22,

  /**
   * @generated from enum value: TIME = 23;
   */
  TIME = 23,

  /**
   * @generated from enum value: TMK = 24;
   */
  TMK = 24,

  /**
   * @generated from enum value: USE = 25;
   */
  USE = 25,

  /**
   * @generated from enum value: PERSON_NAME_PART_QUALIFIER = 26;
   */
  PERSON_NAME_PART_QUALIFIER = 26,

  /**
   * @generated from enum value: PERSON_NAME_PART_AFFIX_TYPES = 27;
   */
  PERSON_NAME_PART_AFFIX_TYPES = 27,

  /**
   * @generated from enum value: PERSON_NAME_PART_CHANGE_QUALIFIER = 28;
   */
  PERSON_NAME_PART_CHANGE_QUALIFIER = 28,

  /**
   * @generated from enum value: PERSON_NAME_PART_MISC_QUALIFIER = 29;
   */
  PERSON_NAME_PART_MISC_QUALIFIER = 29,
}
// Retrieve enum metadata with: proto3.getEnumType(V3EntityNamePartQualifierCode_Value)
proto3.util.setEnumType(V3EntityNamePartQualifierCode_Value, "google.fhir.r4.core.V3EntityNamePartQualifierCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ORGANIZATION_NAME_PART_QUALIFIER" },
  { no: 2, name: "AC" },
  { no: 3, name: "AD" },
  { no: 4, name: "BR" },
  { no: 5, name: "CL" },
  { no: 6, name: "IN" },
  { no: 7, name: "LS" },
  { no: 8, name: "NB" },
  { no: 9, name: "PR" },
  { no: 10, name: "SP" },
  { no: 11, name: "TITLE" },
  { no: 12, name: "VV" },
  { no: 13, name: "PHARMACEUTICAL_ENTITY_NAME_PART_QUALIFIERS" },
  { no: 14, name: "CON" },
  { no: 15, name: "DEV" },
  { no: 16, name: "FLAV" },
  { no: 17, name: "FORMUL" },
  { no: 18, name: "FRM" },
  { no: 19, name: "INV" },
  { no: 20, name: "POPUL" },
  { no: 21, name: "SCI" },
  { no: 22, name: "STR" },
  { no: 23, name: "TIME" },
  { no: 24, name: "TMK" },
  { no: 25, name: "USE" },
  { no: 26, name: "PERSON_NAME_PART_QUALIFIER" },
  { no: 27, name: "PERSON_NAME_PART_AFFIX_TYPES" },
  { no: 28, name: "PERSON_NAME_PART_CHANGE_QUALIFIER" },
  { no: 29, name: "PERSON_NAME_PART_MISC_QUALIFIER" },
]);

/**
 *   Description:
 *
 * The qualifier is a set of codes each of which specifies a certain subcategory
 * of the name part in addition to the main name part type. For example, a given
 * name may be flagged as a nickname, a family name may be a pseudonym or a name
 * of public records. See
 * http://terminology.hl7.org/CodeSystem/v3-EntityNamePartQualifierR2
 *
 * @generated from message google.fhir.r4.core.V3EntityNamePartQualifierR2Code
 */
export class V3EntityNamePartQualifierR2Code extends Message<V3EntityNamePartQualifierR2Code> {
  constructor(data?: PartialMessage<V3EntityNamePartQualifierR2Code>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3EntityNamePartQualifierR2Code";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3EntityNamePartQualifierR2Code {
    return new V3EntityNamePartQualifierR2Code().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3EntityNamePartQualifierR2Code {
    return new V3EntityNamePartQualifierR2Code().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3EntityNamePartQualifierR2Code {
    return new V3EntityNamePartQualifierR2Code().fromJsonString(jsonString, options);
  }

  static equals(a: V3EntityNamePartQualifierR2Code | PlainMessage<V3EntityNamePartQualifierR2Code> | undefined, b: V3EntityNamePartQualifierR2Code | PlainMessage<V3EntityNamePartQualifierR2Code> | undefined): boolean {
    return proto3.util.equals(V3EntityNamePartQualifierR2Code, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3EntityNamePartQualifierR2Code.Value
 */
export enum V3EntityNamePartQualifierR2Code_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AD = 1;
   */
  AD = 1,

  /**
   * @generated from enum value: SP = 2;
   */
  SP = 2,

  /**
   * @generated from enum value: BR = 3;
   */
  BR = 3,

  /**
   * @generated from enum value: CL = 4;
   */
  CL = 4,

  /**
   * @generated from enum value: IN = 5;
   */
  IN = 5,

  /**
   * @generated from enum value: LS = 6;
   */
  LS = 6,

  /**
   * @generated from enum value: MID = 7;
   */
  MID = 7,

  /**
   * @generated from enum value: PFX = 8;
   */
  PFX = 8,

  /**
   * @generated from enum value: PHARMACEUTICAL_ENTITY_NAME_PART_QUALIFIERS = 9;
   */
  PHARMACEUTICAL_ENTITY_NAME_PART_QUALIFIERS = 9,

  /**
   * @generated from enum value: CON = 10;
   */
  CON = 10,

  /**
   * @generated from enum value: DEV = 11;
   */
  DEV = 11,

  /**
   * @generated from enum value: FLAV = 12;
   */
  FLAV = 12,

  /**
   * @generated from enum value: FORMUL = 13;
   */
  FORMUL = 13,

  /**
   * @generated from enum value: FRM = 14;
   */
  FRM = 14,

  /**
   * @generated from enum value: INV = 15;
   */
  INV = 15,

  /**
   * @generated from enum value: POPUL = 16;
   */
  POPUL = 16,

  /**
   * @generated from enum value: SCI = 17;
   */
  SCI = 17,

  /**
   * @generated from enum value: STR = 18;
   */
  STR = 18,

  /**
   * @generated from enum value: TIME = 19;
   */
  TIME = 19,

  /**
   * @generated from enum value: TMK = 20;
   */
  TMK = 20,

  /**
   * @generated from enum value: USE = 21;
   */
  USE = 21,

  /**
   * @generated from enum value: SFX = 22;
   */
  SFX = 22,

  /**
   * @generated from enum value: TITLE_STYLES = 23;
   */
  TITLE_STYLES = 23,

  /**
   * @generated from enum value: AC = 24;
   */
  AC = 24,

  /**
   * @generated from enum value: HON = 25;
   */
  HON = 25,

  /**
   * @generated from enum value: NB = 26;
   */
  NB = 26,

  /**
   * @generated from enum value: PR = 27;
   */
  PR = 27,
}
// Retrieve enum metadata with: proto3.getEnumType(V3EntityNamePartQualifierR2Code_Value)
proto3.util.setEnumType(V3EntityNamePartQualifierR2Code_Value, "google.fhir.r4.core.V3EntityNamePartQualifierR2Code.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AD" },
  { no: 2, name: "SP" },
  { no: 3, name: "BR" },
  { no: 4, name: "CL" },
  { no: 5, name: "IN" },
  { no: 6, name: "LS" },
  { no: 7, name: "MID" },
  { no: 8, name: "PFX" },
  { no: 9, name: "PHARMACEUTICAL_ENTITY_NAME_PART_QUALIFIERS" },
  { no: 10, name: "CON" },
  { no: 11, name: "DEV" },
  { no: 12, name: "FLAV" },
  { no: 13, name: "FORMUL" },
  { no: 14, name: "FRM" },
  { no: 15, name: "INV" },
  { no: 16, name: "POPUL" },
  { no: 17, name: "SCI" },
  { no: 18, name: "STR" },
  { no: 19, name: "TIME" },
  { no: 20, name: "TMK" },
  { no: 21, name: "USE" },
  { no: 22, name: "SFX" },
  { no: 23, name: "TITLE_STYLES" },
  { no: 24, name: "AC" },
  { no: 25, name: "HON" },
  { no: 26, name: "NB" },
  { no: 27, name: "PR" },
]);

/**
 * **** MISSING DEFINITIONS ****
 * See http://terminology.hl7.org/CodeSystem/v3-EntityNameUse
 *
 * @generated from message google.fhir.r4.core.V3EntityNameUseCode
 */
export class V3EntityNameUseCode extends Message<V3EntityNameUseCode> {
  constructor(data?: PartialMessage<V3EntityNameUseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3EntityNameUseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3EntityNameUseCode {
    return new V3EntityNameUseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3EntityNameUseCode {
    return new V3EntityNameUseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3EntityNameUseCode {
    return new V3EntityNameUseCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3EntityNameUseCode | PlainMessage<V3EntityNameUseCode> | undefined, b: V3EntityNameUseCode | PlainMessage<V3EntityNameUseCode> | undefined): boolean {
    return proto3.util.equals(V3EntityNameUseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3EntityNameUseCode.Value
 */
export enum V3EntityNameUseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NAME_REPRESENTATION_USE = 1;
   */
  NAME_REPRESENTATION_USE = 1,

  /**
   * @generated from enum value: ABC = 2;
   */
  ABC = 2,

  /**
   * @generated from enum value: IDE = 3;
   */
  IDE = 3,

  /**
   * @generated from enum value: SYL = 4;
   */
  SYL = 4,

  /**
   * @generated from enum value: ASGN = 5;
   */
  ASGN = 5,

  /**
   * @generated from enum value: C = 6;
   */
  C = 6,

  /**
   * @generated from enum value: I = 7;
   */
  I = 7,

  /**
   * @generated from enum value: L = 8;
   */
  L = 8,

  /**
   * @generated from enum value: OR = 9;
   */
  OR = 9,

  /**
   * @generated from enum value: P = 10;
   */
  P = 10,

  /**
   * @generated from enum value: A = 11;
   */
  A = 11,

  /**
   * @generated from enum value: R = 12;
   */
  R = 12,

  /**
   * @generated from enum value: SRCH = 13;
   */
  SRCH = 13,

  /**
   * @generated from enum value: PHON = 14;
   */
  PHON = 14,

  /**
   * @generated from enum value: SNDX = 15;
   */
  SNDX = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(V3EntityNameUseCode_Value)
proto3.util.setEnumType(V3EntityNameUseCode_Value, "google.fhir.r4.core.V3EntityNameUseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NAME_REPRESENTATION_USE" },
  { no: 2, name: "ABC" },
  { no: 3, name: "IDE" },
  { no: 4, name: "SYL" },
  { no: 5, name: "ASGN" },
  { no: 6, name: "C" },
  { no: 7, name: "I" },
  { no: 8, name: "L" },
  { no: 9, name: "OR" },
  { no: 10, name: "P" },
  { no: 11, name: "A" },
  { no: 12, name: "R" },
  { no: 13, name: "SRCH" },
  { no: 14, name: "PHON" },
  { no: 15, name: "SNDX" },
]);

/**
 *   Description:
 *
 * A set of codes advising a system or user which name in a set of names to
 * select for a given purpose. See
 * http://terminology.hl7.org/CodeSystem/v3-EntityNameUseR2
 *
 * @generated from message google.fhir.r4.core.V3EntityNameUseR2Code
 */
export class V3EntityNameUseR2Code extends Message<V3EntityNameUseR2Code> {
  constructor(data?: PartialMessage<V3EntityNameUseR2Code>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3EntityNameUseR2Code";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3EntityNameUseR2Code {
    return new V3EntityNameUseR2Code().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3EntityNameUseR2Code {
    return new V3EntityNameUseR2Code().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3EntityNameUseR2Code {
    return new V3EntityNameUseR2Code().fromJsonString(jsonString, options);
  }

  static equals(a: V3EntityNameUseR2Code | PlainMessage<V3EntityNameUseR2Code> | undefined, b: V3EntityNameUseR2Code | PlainMessage<V3EntityNameUseR2Code> | undefined): boolean {
    return proto3.util.equals(V3EntityNameUseR2Code, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3EntityNameUseR2Code.Value
 */
export enum V3EntityNameUseR2Code_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ASSUMED = 1;
   */
  ASSUMED = 1,

  /**
   * @generated from enum value: A = 2;
   */
  A = 2,

  /**
   * @generated from enum value: ANON = 3;
   */
  ANON = 3,

  /**
   * @generated from enum value: I = 4;
   */
  I = 4,

  /**
   * @generated from enum value: P = 5;
   */
  P = 5,

  /**
   * @generated from enum value: R = 6;
   */
  R = 6,

  /**
   * @generated from enum value: C = 7;
   */
  C = 7,

  /**
   * @generated from enum value: M = 8;
   */
  M = 8,

  /**
   * @generated from enum value: NAME_REPRESENTATION_USE = 9;
   */
  NAME_REPRESENTATION_USE = 9,

  /**
   * @generated from enum value: ABC = 10;
   */
  ABC = 10,

  /**
   * @generated from enum value: IDE = 11;
   */
  IDE = 11,

  /**
   * @generated from enum value: SYL = 12;
   */
  SYL = 12,

  /**
   * @generated from enum value: OLD = 13;
   */
  OLD = 13,

  /**
   * @generated from enum value: DN = 14;
   */
  DN = 14,

  /**
   * @generated from enum value: OR = 15;
   */
  OR = 15,

  /**
   * @generated from enum value: PHON = 16;
   */
  PHON = 16,

  /**
   * @generated from enum value: SRCH = 17;
   */
  SRCH = 17,

  /**
   * @generated from enum value: T = 18;
   */
  T = 18,
}
// Retrieve enum metadata with: proto3.getEnumType(V3EntityNameUseR2Code_Value)
proto3.util.setEnumType(V3EntityNameUseR2Code_Value, "google.fhir.r4.core.V3EntityNameUseR2Code.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ASSUMED" },
  { no: 2, name: "A" },
  { no: 3, name: "ANON" },
  { no: 4, name: "I" },
  { no: 5, name: "P" },
  { no: 6, name: "R" },
  { no: 7, name: "C" },
  { no: 8, name: "M" },
  { no: 9, name: "NAME_REPRESENTATION_USE" },
  { no: 10, name: "ABC" },
  { no: 11, name: "IDE" },
  { no: 12, name: "SYL" },
  { no: 13, name: "OLD" },
  { no: 14, name: "DN" },
  { no: 15, name: "OR" },
  { no: 16, name: "PHON" },
  { no: 17, name: "SRCH" },
  { no: 18, name: "T" },
]);

/**
 *  A collection of codes specifying why a valid value is not present.
 * See http://terminology.hl7.org/CodeSystem/v3-NullFlavor
 *
 * @generated from message google.fhir.r4.core.V3NullFlavorCode
 */
export class V3NullFlavorCode extends Message<V3NullFlavorCode> {
  constructor(data?: PartialMessage<V3NullFlavorCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3NullFlavorCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3NullFlavorCode {
    return new V3NullFlavorCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3NullFlavorCode {
    return new V3NullFlavorCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3NullFlavorCode {
    return new V3NullFlavorCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3NullFlavorCode | PlainMessage<V3NullFlavorCode> | undefined, b: V3NullFlavorCode | PlainMessage<V3NullFlavorCode> | undefined): boolean {
    return proto3.util.equals(V3NullFlavorCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3NullFlavorCode.Value
 */
export enum V3NullFlavorCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NI = 1;
   */
  NI = 1,

  /**
   * @generated from enum value: INV = 2;
   */
  INV = 2,

  /**
   * @generated from enum value: DER = 3;
   */
  DER = 3,

  /**
   * @generated from enum value: OTH = 4;
   */
  OTH = 4,

  /**
   * @generated from enum value: NINF = 5;
   */
  NINF = 5,

  /**
   * @generated from enum value: PINF = 6;
   */
  PINF = 6,

  /**
   * @generated from enum value: UNC = 7;
   */
  UNC = 7,

  /**
   * @generated from enum value: MSK = 8;
   */
  MSK = 8,

  /**
   * @generated from enum value: NA = 9;
   */
  NA = 9,

  /**
   * @generated from enum value: UNK = 10;
   */
  UNK = 10,

  /**
   * @generated from enum value: ASKU = 11;
   */
  ASKU = 11,

  /**
   * @generated from enum value: NAV = 12;
   */
  NAV = 12,

  /**
   * @generated from enum value: NASK = 13;
   */
  NASK = 13,

  /**
   * @generated from enum value: NAVU = 14;
   */
  NAVU = 14,

  /**
   * @generated from enum value: QS = 15;
   */
  QS = 15,

  /**
   * @generated from enum value: TRC = 16;
   */
  TRC = 16,

  /**
   * @generated from enum value: NP = 17;
   */
  NP = 17,
}
// Retrieve enum metadata with: proto3.getEnumType(V3NullFlavorCode_Value)
proto3.util.setEnumType(V3NullFlavorCode_Value, "google.fhir.r4.core.V3NullFlavorCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NI" },
  { no: 2, name: "INV" },
  { no: 3, name: "DER" },
  { no: 4, name: "OTH" },
  { no: 5, name: "NINF" },
  { no: 6, name: "PINF" },
  { no: 7, name: "UNC" },
  { no: 8, name: "MSK" },
  { no: 9, name: "NA" },
  { no: 10, name: "UNK" },
  { no: 11, name: "ASKU" },
  { no: 12, name: "NAV" },
  { no: 13, name: "NASK" },
  { no: 14, name: "NAVU" },
  { no: 15, name: "QS" },
  { no: 16, name: "TRC" },
  { no: 17, name: "NP" },
]);

/**
 *  A set of codes specifying the modality by which the Entity playing the Role
 *  is participating in the Act.  Examples:
 *
 * Physically present, over the telephone, written communication.  Rationale:
 *
 * Particularly for author (originator) participants this is used to specify
 * whether the information represented by the act was initially provided
 * verbally, (hand-)written, or electronically.  Open Issue:
 *
 * There needs to be a reexamination of the hierarchies as there seems to be
 * some muddling between ELECTRONIC and other concepts that involve electronic
 * communication that are in other hierarchies. See
 * http://terminology.hl7.org/CodeSystem/v3-ParticipationMode
 *
 * @generated from message google.fhir.r4.core.V3ParticipationModeCode
 */
export class V3ParticipationModeCode extends Message<V3ParticipationModeCode> {
  constructor(data?: PartialMessage<V3ParticipationModeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3ParticipationModeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3ParticipationModeCode {
    return new V3ParticipationModeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3ParticipationModeCode {
    return new V3ParticipationModeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3ParticipationModeCode {
    return new V3ParticipationModeCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3ParticipationModeCode | PlainMessage<V3ParticipationModeCode> | undefined, b: V3ParticipationModeCode | PlainMessage<V3ParticipationModeCode> | undefined): boolean {
    return proto3.util.equals(V3ParticipationModeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3ParticipationModeCode.Value
 */
export enum V3ParticipationModeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: ELECTRONIC = 1;
   */
  ELECTRONIC = 1,

  /**
   * @generated from enum value: PHYSICAL = 2;
   */
  PHYSICAL = 2,

  /**
   * @generated from enum value: REMOTE = 3;
   */
  REMOTE = 3,

  /**
   * @generated from enum value: VERBAL = 4;
   */
  VERBAL = 4,

  /**
   * @generated from enum value: DICTATE = 5;
   */
  DICTATE = 5,

  /**
   * @generated from enum value: FACE = 6;
   */
  FACE = 6,

  /**
   * @generated from enum value: PHONE = 7;
   */
  PHONE = 7,

  /**
   * @generated from enum value: VIDEOCONF = 8;
   */
  VIDEOCONF = 8,

  /**
   * @generated from enum value: WRITTEN = 9;
   */
  WRITTEN = 9,

  /**
   * @generated from enum value: FAXWRIT = 10;
   */
  FAXWRIT = 10,

  /**
   * @generated from enum value: HANDWRIT = 11;
   */
  HANDWRIT = 11,

  /**
   * @generated from enum value: MAILWRIT = 12;
   */
  MAILWRIT = 12,

  /**
   * @generated from enum value: ONLINEWRIT = 13;
   */
  ONLINEWRIT = 13,

  /**
   * @generated from enum value: EMAILWRIT = 14;
   */
  EMAILWRIT = 14,

  /**
   * @generated from enum value: TYPEWRIT = 15;
   */
  TYPEWRIT = 15,
}
// Retrieve enum metadata with: proto3.getEnumType(V3ParticipationModeCode_Value)
proto3.util.setEnumType(V3ParticipationModeCode_Value, "google.fhir.r4.core.V3ParticipationModeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "ELECTRONIC" },
  { no: 2, name: "PHYSICAL" },
  { no: 3, name: "REMOTE" },
  { no: 4, name: "VERBAL" },
  { no: 5, name: "DICTATE" },
  { no: 6, name: "FACE" },
  { no: 7, name: "PHONE" },
  { no: 8, name: "VIDEOCONF" },
  { no: 9, name: "WRITTEN" },
  { no: 10, name: "FAXWRIT" },
  { no: 11, name: "HANDWRIT" },
  { no: 12, name: "MAILWRIT" },
  { no: 13, name: "ONLINEWRIT" },
  { no: 14, name: "EMAILWRIT" },
  { no: 15, name: "TYPEWRIT" },
]);

/**
 * **** MISSING DEFINITIONS ****
 * See http://terminology.hl7.org/CodeSystem/v3-ProbabilityDistributionType
 *
 * @generated from message google.fhir.r4.core.V3ProbabilityDistributionTypeCode
 */
export class V3ProbabilityDistributionTypeCode extends Message<V3ProbabilityDistributionTypeCode> {
  constructor(data?: PartialMessage<V3ProbabilityDistributionTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3ProbabilityDistributionTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3ProbabilityDistributionTypeCode {
    return new V3ProbabilityDistributionTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3ProbabilityDistributionTypeCode {
    return new V3ProbabilityDistributionTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3ProbabilityDistributionTypeCode {
    return new V3ProbabilityDistributionTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3ProbabilityDistributionTypeCode | PlainMessage<V3ProbabilityDistributionTypeCode> | undefined, b: V3ProbabilityDistributionTypeCode | PlainMessage<V3ProbabilityDistributionTypeCode> | undefined): boolean {
    return proto3.util.equals(V3ProbabilityDistributionTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3ProbabilityDistributionTypeCode.Value
 */
export enum V3ProbabilityDistributionTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: B = 1;
   */
  B = 1,

  /**
   * @generated from enum value: E = 2;
   */
  E = 2,

  /**
   * @generated from enum value: F = 3;
   */
  F = 3,

  /**
   * @generated from enum value: G = 4;
   */
  G = 4,

  /**
   * @generated from enum value: LN = 5;
   */
  LN = 5,

  /**
   * @generated from enum value: N = 6;
   */
  N = 6,

  /**
   * @generated from enum value: T = 7;
   */
  T = 7,

  /**
   * @generated from enum value: U = 8;
   */
  U = 8,

  /**
   * @generated from enum value: X2 = 9;
   */
  X2 = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(V3ProbabilityDistributionTypeCode_Value)
proto3.util.setEnumType(V3ProbabilityDistributionTypeCode_Value, "google.fhir.r4.core.V3ProbabilityDistributionTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "B" },
  { no: 2, name: "E" },
  { no: 3, name: "F" },
  { no: 4, name: "G" },
  { no: 5, name: "LN" },
  { no: 6, name: "N" },
  { no: 7, name: "T" },
  { no: 8, name: "U" },
  { no: 9, name: "X2" },
]);

/**
 *  A set of codes further specifying the kind of Role; specific classification
 *  codes for further qualifying RoleClass codes.
 * See http://terminology.hl7.org/CodeSystem/v3-RoleCode
 *
 * @generated from message google.fhir.r4.core.V3RoleCode
 */
export class V3RoleCode extends Message<V3RoleCode> {
  constructor(data?: PartialMessage<V3RoleCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3RoleCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3RoleCode {
    return new V3RoleCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3RoleCode {
    return new V3RoleCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3RoleCode {
    return new V3RoleCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3RoleCode | PlainMessage<V3RoleCode> | undefined, b: V3RoleCode | PlainMessage<V3RoleCode> | undefined): boolean {
    return proto3.util.equals(V3RoleCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3RoleCode.Value
 */
export enum V3RoleCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AFFILIATION_ROLE_TYPE = 1;
   */
  AFFILIATION_ROLE_TYPE = 1,

  /**
   * @generated from enum value: AGENT_ROLE_TYPE = 2;
   */
  AGENT_ROLE_TYPE = 2,

  /**
   * @generated from enum value: AMENDER = 3;
   */
  AMENDER = 3,

  /**
   * @generated from enum value: CLASSIFIER = 4;
   */
  CLASSIFIER = 4,

  /**
   * @generated from enum value: CONSENTER = 5;
   */
  CONSENTER = 5,

  /**
   * @generated from enum value: CONSWIT = 6;
   */
  CONSWIT = 6,

  /**
   * @generated from enum value: COPART = 7;
   */
  COPART = 7,

  /**
   * @generated from enum value: DECLASSIFIER = 8;
   */
  DECLASSIFIER = 8,

  /**
   * @generated from enum value: DELEGATEE = 9;
   */
  DELEGATEE = 9,

  /**
   * @generated from enum value: DELEGATOR = 10;
   */
  DELEGATOR = 10,

  /**
   * @generated from enum value: DOWNGRDER = 11;
   */
  DOWNGRDER = 11,

  /**
   * @generated from enum value: DRIVCLASSIFIER = 12;
   */
  DRIVCLASSIFIER = 12,

  /**
   * @generated from enum value: GRANTEE = 13;
   */
  GRANTEE = 13,

  /**
   * @generated from enum value: GRANTOR = 14;
   */
  GRANTOR = 14,

  /**
   * @generated from enum value: INTPRTER = 15;
   */
  INTPRTER = 15,

  /**
   * @generated from enum value: REVIEWER = 16;
   */
  REVIEWER = 16,

  /**
   * @generated from enum value: VALIDATOR = 17;
   */
  VALIDATOR = 17,

  /**
   * @generated from enum value: COVERAGE_SPONSOR_ROLE_TYPE = 18;
   */
  COVERAGE_SPONSOR_ROLE_TYPE = 18,

  /**
   * @generated from enum value: FULLINS = 19;
   */
  FULLINS = 19,

  /**
   * @generated from enum value: SELFINS = 20;
   */
  SELFINS = 20,

  /**
   * @generated from enum value: PAYOR_ROLE_TYPE = 21;
   */
  PAYOR_ROLE_TYPE = 21,

  /**
   * @generated from enum value: ENROLBKR = 22;
   */
  ENROLBKR = 22,

  /**
   * @generated from enum value: TPA = 23;
   */
  TPA = 23,

  /**
   * @generated from enum value: UMO = 24;
   */
  UMO = 24,

  /**
   * @generated from enum value: RESPRSN = 25;
   */
  RESPRSN = 25,

  /**
   * @generated from enum value: EXCEST = 26;
   */
  EXCEST = 26,

  /**
   * @generated from enum value: GUADLTM = 27;
   */
  GUADLTM = 27,

  /**
   * @generated from enum value: GUARD = 28;
   */
  GUARD = 28,

  /**
   * @generated from enum value: POWATT = 29;
   */
  POWATT = 29,

  /**
   * @generated from enum value: DPOWATT = 30;
   */
  DPOWATT = 30,

  /**
   * @generated from enum value: HPOWATT = 31;
   */
  HPOWATT = 31,

  /**
   * @generated from enum value: SPOWATT = 32;
   */
  SPOWATT = 32,

  /**
   * @generated from enum value: ASSIGNED_ROLE_TYPE = 33;
   */
  ASSIGNED_ROLE_TYPE = 33,

  /**
   * @generated from enum value: ASSIGNED_NON_PERSON_LIVING_SUBJECT_ROLE_TYPE = 34;
   */
  ASSIGNED_NON_PERSON_LIVING_SUBJECT_ROLE_TYPE = 34,

  /**
   * @generated from enum value: ASSIST = 35;
   */
  ASSIST = 35,

  /**
   * @generated from enum value: BIOTH = 36;
   */
  BIOTH = 36,

  /**
   * @generated from enum value: ANTIBIOT = 37;
   */
  ANTIBIOT = 37,

  /**
   * @generated from enum value: DEBR = 38;
   */
  DEBR = 38,

  /**
   * @generated from enum value: CCO = 39;
   */
  CCO = 39,

  /**
   * @generated from enum value: SEE = 40;
   */
  SEE = 40,

  /**
   * @generated from enum value: SNIFF = 41;
   */
  SNIFF = 41,

  /**
   * @generated from enum value: CERTIFIED_ENTITY_TYPE = 42;
   */
  CERTIFIED_ENTITY_TYPE = 42,

  /**
   * @generated from enum value: CITIZEN_ROLE_TYPE = 43;
   */
  CITIZEN_ROLE_TYPE = 43,

  /**
   * @generated from enum value: CAS = 44;
   */
  CAS = 44,

  /**
   * @generated from enum value: CASM = 45;
   */
  CASM = 45,

  /**
   * @generated from enum value: CN = 46;
   */
  CN = 46,

  /**
   * @generated from enum value: CNRP = 47;
   */
  CNRP = 47,

  /**
   * @generated from enum value: CNRPM = 48;
   */
  CNRPM = 48,

  /**
   * @generated from enum value: CPCA = 49;
   */
  CPCA = 49,

  /**
   * @generated from enum value: CRP = 50;
   */
  CRP = 50,

  /**
   * @generated from enum value: CRPM = 51;
   */
  CRPM = 51,

  /**
   * @generated from enum value: CONTACT_ROLE_TYPE = 52;
   */
  CONTACT_ROLE_TYPE = 52,

  /**
   * @generated from enum value: ADMINISTRATIVE_CONTACT_ROLE_TYPE = 53;
   */
  ADMINISTRATIVE_CONTACT_ROLE_TYPE = 53,

  /**
   * @generated from enum value: BILL = 54;
   */
  BILL = 54,

  /**
   * @generated from enum value: ORG = 55;
   */
  ORG = 55,

  /**
   * @generated from enum value: PAYOR = 56;
   */
  PAYOR = 56,

  /**
   * @generated from enum value: ECON = 57;
   */
  ECON = 57,

  /**
   * @generated from enum value: NOK = 58;
   */
  NOK = 58,

  /**
   * @generated from enum value: IDENTIFIED_ENTITY_TYPE = 59;
   */
  IDENTIFIED_ENTITY_TYPE = 59,

  /**
   * @generated from enum value: LOCATION_IDENTIFIED_ENTITY_ROLE_CODE = 60;
   */
  LOCATION_IDENTIFIED_ENTITY_ROLE_CODE = 60,

  /**
   * @generated from enum value: ACHFID = 61;
   */
  ACHFID = 61,

  /**
   * @generated from enum value: JURID = 62;
   */
  JURID = 62,

  /**
   * @generated from enum value: LOCHFID = 63;
   */
  LOCHFID = 63,

  /**
   * @generated from enum value: LIVING_SUBJECT_PRODUCTION_CLASS = 64;
   */
  LIVING_SUBJECT_PRODUCTION_CLASS = 64,

  /**
   * @generated from enum value: BF = 65;
   */
  BF = 65,

  /**
   * @generated from enum value: BL = 66;
   */
  BL = 66,

  /**
   * @generated from enum value: BR = 67;
   */
  BR = 67,

  /**
   * @generated from enum value: CO = 68;
   */
  CO = 68,

  /**
   * @generated from enum value: DA = 69;
   */
  DA = 69,

  /**
   * @generated from enum value: DR = 70;
   */
  DR = 70,

  /**
   * @generated from enum value: DU = 71;
   */
  DU = 71,

  /**
   * @generated from enum value: FI = 72;
   */
  FI = 72,

  /**
   * @generated from enum value: LY = 73;
   */
  LY = 73,

  /**
   * @generated from enum value: MT = 74;
   */
  MT = 74,

  /**
   * @generated from enum value: MU = 75;
   */
  MU = 75,

  /**
   * @generated from enum value: PL = 76;
   */
  PL = 76,

  /**
   * @generated from enum value: RC = 77;
   */
  RC = 77,

  /**
   * @generated from enum value: SH = 78;
   */
  SH = 78,

  /**
   * @generated from enum value: VL = 79;
   */
  VL = 79,

  /**
   * @generated from enum value: WL = 80;
   */
  WL = 80,

  /**
   * @generated from enum value: WO = 81;
   */
  WO = 81,

  /**
   * @generated from enum value: MEDICATION_GENERALIZATION_ROLE_TYPE = 82;
   */
  MEDICATION_GENERALIZATION_ROLE_TYPE = 82,

  /**
   * @generated from enum value: DC = 83;
   */
  DC = 83,

  /**
   * @generated from enum value: GD = 84;
   */
  GD = 84,

  /**
   * @generated from enum value: GDF = 85;
   */
  GDF = 85,

  /**
   * @generated from enum value: GDS = 86;
   */
  GDS = 86,

  /**
   * @generated from enum value: GDSF = 87;
   */
  GDSF = 87,

  /**
   * @generated from enum value: MGDSF = 88;
   */
  MGDSF = 88,

  /**
   * @generated from enum value: MEMBER_ROLE_TYPE = 89;
   */
  MEMBER_ROLE_TYPE = 89,

  /**
   * @generated from enum value: TRB = 90;
   */
  TRB = 90,

  /**
   * @generated from enum value: PERSONAL_RELATIONSHIP_ROLE_TYPE = 91;
   */
  PERSONAL_RELATIONSHIP_ROLE_TYPE = 91,

  /**
   * @generated from enum value: FAMMEMB = 92;
   */
  FAMMEMB = 92,

  /**
   * @generated from enum value: CHILD = 93;
   */
  CHILD = 93,

  /**
   * @generated from enum value: CHLDADOPT = 94;
   */
  CHLDADOPT = 94,

  /**
   * @generated from enum value: DAUADOPT = 95;
   */
  DAUADOPT = 95,

  /**
   * @generated from enum value: SONADOPT = 96;
   */
  SONADOPT = 96,

  /**
   * @generated from enum value: CHLDFOST = 97;
   */
  CHLDFOST = 97,

  /**
   * @generated from enum value: DAUFOST = 98;
   */
  DAUFOST = 98,

  /**
   * @generated from enum value: SONFOST = 99;
   */
  SONFOST = 99,

  /**
   * @generated from enum value: DAUC = 100;
   */
  DAUC = 100,

  /**
   * @generated from enum value: DAU = 101;
   */
  DAU = 101,

  /**
   * @generated from enum value: STPDAU = 102;
   */
  STPDAU = 102,

  /**
   * @generated from enum value: NCHILD = 103;
   */
  NCHILD = 103,

  /**
   * @generated from enum value: SON = 104;
   */
  SON = 104,

  /**
   * @generated from enum value: SONC = 105;
   */
  SONC = 105,

  /**
   * @generated from enum value: STPSON = 106;
   */
  STPSON = 106,

  /**
   * @generated from enum value: STPCHLD = 107;
   */
  STPCHLD = 107,

  /**
   * @generated from enum value: EXT = 108;
   */
  EXT = 108,

  /**
   * @generated from enum value: AUNT = 109;
   */
  AUNT = 109,

  /**
   * @generated from enum value: MAUNT = 110;
   */
  MAUNT = 110,

  /**
   * @generated from enum value: PAUNT = 111;
   */
  PAUNT = 111,

  /**
   * @generated from enum value: COUSN = 112;
   */
  COUSN = 112,

  /**
   * @generated from enum value: MCOUSN = 113;
   */
  MCOUSN = 113,

  /**
   * @generated from enum value: PCOUSN = 114;
   */
  PCOUSN = 114,

  /**
   * @generated from enum value: GGRPRN = 115;
   */
  GGRPRN = 115,

  /**
   * @generated from enum value: GGRFTH = 116;
   */
  GGRFTH = 116,

  /**
   * @generated from enum value: MGGRFTH = 117;
   */
  MGGRFTH = 117,

  /**
   * @generated from enum value: PGGRFTH = 118;
   */
  PGGRFTH = 118,

  /**
   * @generated from enum value: GGRMTH = 119;
   */
  GGRMTH = 119,

  /**
   * @generated from enum value: MGGRMTH = 120;
   */
  MGGRMTH = 120,

  /**
   * @generated from enum value: PGGRMTH = 121;
   */
  PGGRMTH = 121,

  /**
   * @generated from enum value: MGGRPRN = 122;
   */
  MGGRPRN = 122,

  /**
   * @generated from enum value: PGGRPRN = 123;
   */
  PGGRPRN = 123,

  /**
   * @generated from enum value: GRNDCHILD = 124;
   */
  GRNDCHILD = 124,

  /**
   * @generated from enum value: GRNDDAU = 125;
   */
  GRNDDAU = 125,

  /**
   * @generated from enum value: GRNDSON = 126;
   */
  GRNDSON = 126,

  /**
   * @generated from enum value: GRPRN = 127;
   */
  GRPRN = 127,

  /**
   * @generated from enum value: GRFTH = 128;
   */
  GRFTH = 128,

  /**
   * @generated from enum value: MGRFTH = 129;
   */
  MGRFTH = 129,

  /**
   * @generated from enum value: PGRFTH = 130;
   */
  PGRFTH = 130,

  /**
   * @generated from enum value: GRMTH = 131;
   */
  GRMTH = 131,

  /**
   * @generated from enum value: MGRMTH = 132;
   */
  MGRMTH = 132,

  /**
   * @generated from enum value: PGRMTH = 133;
   */
  PGRMTH = 133,

  /**
   * @generated from enum value: MGRPRN = 134;
   */
  MGRPRN = 134,

  /**
   * @generated from enum value: PGRPRN = 135;
   */
  PGRPRN = 135,

  /**
   * @generated from enum value: INLAW = 136;
   */
  INLAW = 136,

  /**
   * @generated from enum value: CHLDINLAW = 137;
   */
  CHLDINLAW = 137,

  /**
   * @generated from enum value: DAUINLAW = 138;
   */
  DAUINLAW = 138,

  /**
   * @generated from enum value: SONINLAW = 139;
   */
  SONINLAW = 139,

  /**
   * @generated from enum value: PRNINLAW = 140;
   */
  PRNINLAW = 140,

  /**
   * @generated from enum value: FTHINLAW = 141;
   */
  FTHINLAW = 141,

  /**
   * @generated from enum value: MTHINLAW = 142;
   */
  MTHINLAW = 142,

  /**
   * @generated from enum value: SIBINLAW = 143;
   */
  SIBINLAW = 143,

  /**
   * @generated from enum value: BROINLAW = 144;
   */
  BROINLAW = 144,

  /**
   * @generated from enum value: SISINLAW = 145;
   */
  SISINLAW = 145,

  /**
   * @generated from enum value: NIENEPH = 146;
   */
  NIENEPH = 146,

  /**
   * @generated from enum value: NEPHEW = 147;
   */
  NEPHEW = 147,

  /**
   * @generated from enum value: NIECE = 148;
   */
  NIECE = 148,

  /**
   * @generated from enum value: UNCLE = 149;
   */
  UNCLE = 149,

  /**
   * @generated from enum value: MUNCLE = 150;
   */
  MUNCLE = 150,

  /**
   * @generated from enum value: PUNCLE = 151;
   */
  PUNCLE = 151,

  /**
   * @generated from enum value: PRN = 152;
   */
  PRN = 152,

  /**
   * @generated from enum value: ADOPTP = 153;
   */
  ADOPTP = 153,

  /**
   * @generated from enum value: ADOPTF = 154;
   */
  ADOPTF = 154,

  /**
   * @generated from enum value: ADOPTM = 155;
   */
  ADOPTM = 155,

  /**
   * @generated from enum value: FTH = 156;
   */
  FTH = 156,

  /**
   * @generated from enum value: FTHFOST = 157;
   */
  FTHFOST = 157,

  /**
   * @generated from enum value: NFTH = 158;
   */
  NFTH = 158,

  /**
   * @generated from enum value: NFTHF = 159;
   */
  NFTHF = 159,

  /**
   * @generated from enum value: STPFTH = 160;
   */
  STPFTH = 160,

  /**
   * @generated from enum value: MTH = 161;
   */
  MTH = 161,

  /**
   * @generated from enum value: GESTM = 162;
   */
  GESTM = 162,

  /**
   * @generated from enum value: MTHFOST = 163;
   */
  MTHFOST = 163,

  /**
   * @generated from enum value: NMTH = 164;
   */
  NMTH = 164,

  /**
   * @generated from enum value: NMTHF = 165;
   */
  NMTHF = 165,

  /**
   * @generated from enum value: STPMTH = 166;
   */
  STPMTH = 166,

  /**
   * @generated from enum value: NPRN = 167;
   */
  NPRN = 167,

  /**
   * @generated from enum value: PRNFOST = 168;
   */
  PRNFOST = 168,

  /**
   * @generated from enum value: STPPRN = 169;
   */
  STPPRN = 169,

  /**
   * @generated from enum value: SIB = 170;
   */
  SIB = 170,

  /**
   * @generated from enum value: BRO = 171;
   */
  BRO = 171,

  /**
   * @generated from enum value: HBRO = 172;
   */
  HBRO = 172,

  /**
   * @generated from enum value: NBRO = 173;
   */
  NBRO = 173,

  /**
   * @generated from enum value: TWINBRO = 174;
   */
  TWINBRO = 174,

  /**
   * @generated from enum value: FTWINBRO = 175;
   */
  FTWINBRO = 175,

  /**
   * @generated from enum value: ITWINBRO = 176;
   */
  ITWINBRO = 176,

  /**
   * @generated from enum value: STPBRO = 177;
   */
  STPBRO = 177,

  /**
   * @generated from enum value: HSIB = 178;
   */
  HSIB = 178,

  /**
   * @generated from enum value: HSIS = 179;
   */
  HSIS = 179,

  /**
   * @generated from enum value: NSIB = 180;
   */
  NSIB = 180,

  /**
   * @generated from enum value: NSIS = 181;
   */
  NSIS = 181,

  /**
   * @generated from enum value: TWINSIS = 182;
   */
  TWINSIS = 182,

  /**
   * @generated from enum value: FTWINSIS = 183;
   */
  FTWINSIS = 183,

  /**
   * @generated from enum value: ITWINSIS = 184;
   */
  ITWINSIS = 184,

  /**
   * @generated from enum value: TWIN = 185;
   */
  TWIN = 185,

  /**
   * @generated from enum value: FTWIN = 186;
   */
  FTWIN = 186,

  /**
   * @generated from enum value: ITWIN = 187;
   */
  ITWIN = 187,

  /**
   * @generated from enum value: SIS = 188;
   */
  SIS = 188,

  /**
   * @generated from enum value: STPSIS = 189;
   */
  STPSIS = 189,

  /**
   * @generated from enum value: STPSIB = 190;
   */
  STPSIB = 190,

  /**
   * @generated from enum value: SIGOTHR = 191;
   */
  SIGOTHR = 191,

  /**
   * @generated from enum value: DOMPART = 192;
   */
  DOMPART = 192,

  /**
   * @generated from enum value: FMRSPS = 193;
   */
  FMRSPS = 193,

  /**
   * @generated from enum value: SPS = 194;
   */
  SPS = 194,

  /**
   * @generated from enum value: HUSB = 195;
   */
  HUSB = 195,

  /**
   * @generated from enum value: WIFE = 196;
   */
  WIFE = 196,

  /**
   * @generated from enum value: FRND = 197;
   */
  FRND = 197,

  /**
   * @generated from enum value: NBOR = 198;
   */
  NBOR = 198,

  /**
   * @generated from enum value: ONESELF = 199;
   */
  ONESELF = 199,

  /**
   * @generated from enum value: ROOM = 200;
   */
  ROOM = 200,

  /**
   * @generated from enum value: POLICY_OR_PROGRAM_COVERAGE_ROLE_TYPE = 201;
   */
  POLICY_OR_PROGRAM_COVERAGE_ROLE_TYPE = 201,

  /**
   * @generated from enum value: COVERAGE_ROLE_TYPE = 202;
   */
  COVERAGE_ROLE_TYPE = 202,

  /**
   * @generated from enum value: FAMDEP = 203;
   */
  FAMDEP = 203,

  /**
   * @generated from enum value: HANDIC = 204;
   */
  HANDIC = 204,

  /**
   * @generated from enum value: INJ = 205;
   */
  INJ = 205,

  /**
   * @generated from enum value: SELF = 206;
   */
  SELF = 206,

  /**
   * @generated from enum value: SPON = 207;
   */
  SPON = 207,

  /**
   * @generated from enum value: STUD = 208;
   */
  STUD = 208,

  /**
   * @generated from enum value: FSTUD = 209;
   */
  FSTUD = 209,

  /**
   * @generated from enum value: PSTUD = 210;
   */
  PSTUD = 210,

  /**
   * @generated from enum value: ADOPT = 211;
   */
  ADOPT = 211,

  /**
   * @generated from enum value: GCHILD = 212;
   */
  GCHILD = 212,

  /**
   * @generated from enum value: GPARNT = 213;
   */
  GPARNT = 213,

  /**
   * @generated from enum value: NAT = 214;
   */
  NAT = 214,

  /**
   * @generated from enum value: NIENE = 215;
   */
  NIENE = 215,

  /**
   * @generated from enum value: PARNT = 216;
   */
  PARNT = 216,

  /**
   * @generated from enum value: SPSE = 217;
   */
  SPSE = 217,

  /**
   * @generated from enum value: STEP = 218;
   */
  STEP = 218,

  /**
   * @generated from enum value: COVERED_PARTY_ROLE_TYPE = 219;
   */
  COVERED_PARTY_ROLE_TYPE = 219,

  /**
   * @generated from enum value: CLAIMANT_COVERED_PARTY_ROLE_TYPE = 220;
   */
  CLAIMANT_COVERED_PARTY_ROLE_TYPE = 220,

  /**
   * @generated from enum value: CRIMEVIC = 221;
   */
  CRIMEVIC = 221,

  /**
   * @generated from enum value: INJWKR = 222;
   */
  INJWKR = 222,

  /**
   * @generated from enum value: DEPENDENT_COVERED_PARTY_ROLE_TYPE = 223;
   */
  DEPENDENT_COVERED_PARTY_ROLE_TYPE = 223,

  /**
   * @generated from enum value: COCBEN = 224;
   */
  COCBEN = 224,

  /**
   * @generated from enum value: DIFFABL = 225;
   */
  DIFFABL = 225,

  /**
   * @generated from enum value: WARD = 226;
   */
  WARD = 226,

  /**
   * @generated from enum value: INDIVIDUAL_INSURED_PARTY_ROLE_TYPE = 227;
   */
  INDIVIDUAL_INSURED_PARTY_ROLE_TYPE = 227,

  /**
   * @generated from enum value: RETIREE = 228;
   */
  RETIREE = 228,

  /**
   * @generated from enum value: PROGRAM_ELIGIBLE_PARTY_ROLE_TYPE = 229;
   */
  PROGRAM_ELIGIBLE_PARTY_ROLE_TYPE = 229,

  /**
   * @generated from enum value: INDIG = 230;
   */
  INDIG = 230,

  /**
   * @generated from enum value: MIL = 231;
   */
  MIL = 231,

  /**
   * @generated from enum value: ACTMIL = 232;
   */
  ACTMIL = 232,

  /**
   * @generated from enum value: RETMIL = 233;
   */
  RETMIL = 233,

  /**
   * @generated from enum value: VET = 234;
   */
  VET = 234,

  /**
   * @generated from enum value: SUBSCRIBER_COVERED_PARTY_ROLE_TYPE = 235;
   */
  SUBSCRIBER_COVERED_PARTY_ROLE_TYPE = 235,

  /**
   * @generated from enum value: RESEARCH_SUBJECT_ROLE_BASIS = 236;
   */
  RESEARCH_SUBJECT_ROLE_BASIS = 236,

  /**
   * @generated from enum value: ERL = 237;
   */
  ERL = 237,

  /**
   * @generated from enum value: SCN = 238;
   */
  SCN = 238,

  /**
   * @generated from enum value: SERVICE_DELIVERY_LOCATION_ROLE_TYPE = 239;
   */
  SERVICE_DELIVERY_LOCATION_ROLE_TYPE = 239,

  /**
   * @generated from enum value: DEDICATED_SERVICE_DELIVERY_LOCATION_ROLE_TYPE = 240;
   */
  DEDICATED_SERVICE_DELIVERY_LOCATION_ROLE_TYPE = 240,

  /**
   * @generated from enum value: DEDICATED_CLINICAL_LOCATION_ROLE_TYPE = 241;
   */
  DEDICATED_CLINICAL_LOCATION_ROLE_TYPE = 241,

  /**
   * @generated from enum value: DX = 242;
   */
  DX = 242,

  /**
   * @generated from enum value: CVDX = 243;
   */
  CVDX = 243,

  /**
   * @generated from enum value: CATH = 244;
   */
  CATH = 244,

  /**
   * @generated from enum value: ECHO = 245;
   */
  ECHO = 245,

  /**
   * @generated from enum value: GIDX = 246;
   */
  GIDX = 246,

  /**
   * @generated from enum value: ENDOS = 247;
   */
  ENDOS = 247,

  /**
   * @generated from enum value: RADDX = 248;
   */
  RADDX = 248,

  /**
   * @generated from enum value: RADO = 249;
   */
  RADO = 249,

  /**
   * @generated from enum value: RNEU = 250;
   */
  RNEU = 250,

  /**
   * @generated from enum value: HOSP = 251;
   */
  HOSP = 251,

  /**
   * @generated from enum value: CHR = 252;
   */
  CHR = 252,

  /**
   * @generated from enum value: GACH = 253;
   */
  GACH = 253,

  /**
   * @generated from enum value: MHSP = 254;
   */
  MHSP = 254,

  /**
   * @generated from enum value: PSYCHF = 255;
   */
  PSYCHF = 255,

  /**
   * @generated from enum value: RH = 256;
   */
  RH = 256,

  /**
   * @generated from enum value: RHAT = 257;
   */
  RHAT = 257,

  /**
   * @generated from enum value: RHII = 258;
   */
  RHII = 258,

  /**
   * @generated from enum value: RHMAD = 259;
   */
  RHMAD = 259,

  /**
   * @generated from enum value: RHPI = 260;
   */
  RHPI = 260,

  /**
   * @generated from enum value: RHPIH = 261;
   */
  RHPIH = 261,

  /**
   * @generated from enum value: RHPIMS = 262;
   */
  RHPIMS = 262,

  /**
   * @generated from enum value: RHPIVS = 263;
   */
  RHPIVS = 263,

  /**
   * @generated from enum value: RHYAD = 264;
   */
  RHYAD = 264,

  /**
   * @generated from enum value: HU = 265;
   */
  HU = 265,

  /**
   * @generated from enum value: BMTU = 266;
   */
  BMTU = 266,

  /**
   * @generated from enum value: CCU = 267;
   */
  CCU = 267,

  /**
   * @generated from enum value: CHEST = 268;
   */
  CHEST = 268,

  /**
   * @generated from enum value: EPIL = 269;
   */
  EPIL = 269,

  /**
   * @generated from enum value: ER = 270;
   */
  ER = 270,

  /**
   * @generated from enum value: ETU = 271;
   */
  ETU = 271,

  /**
   * @generated from enum value: HD = 272;
   */
  HD = 272,

  /**
   * @generated from enum value: HLAB = 273;
   */
  HLAB = 273,

  /**
   * @generated from enum value: INLAB = 274;
   */
  INLAB = 274,

  /**
   * @generated from enum value: OUTLAB = 275;
   */
  OUTLAB = 275,

  /**
   * @generated from enum value: HRAD = 276;
   */
  HRAD = 276,

  /**
   * @generated from enum value: HUSCS = 277;
   */
  HUSCS = 277,

  /**
   * @generated from enum value: ICU = 278;
   */
  ICU = 278,

  /**
   * @generated from enum value: PEDICU = 279;
   */
  PEDICU = 279,

  /**
   * @generated from enum value: PEDNICU = 280;
   */
  PEDNICU = 280,

  /**
   * @generated from enum value: INPHARM = 281;
   */
  INPHARM = 281,

  /**
   * @generated from enum value: MBL = 282;
   */
  MBL = 282,

  /**
   * @generated from enum value: NCCS = 283;
   */
  NCCS = 283,

  /**
   * @generated from enum value: NS = 284;
   */
  NS = 284,

  /**
   * @generated from enum value: OUTPHARM = 285;
   */
  OUTPHARM = 285,

  /**
   * @generated from enum value: PEDU = 286;
   */
  PEDU = 286,

  /**
   * @generated from enum value: PHU = 287;
   */
  PHU = 287,

  /**
   * @generated from enum value: RHU = 288;
   */
  RHU = 288,

  /**
   * @generated from enum value: SLEEP = 289;
   */
  SLEEP = 289,

  /**
   * @generated from enum value: NCCF = 290;
   */
  NCCF = 290,

  /**
   * @generated from enum value: SNF = 291;
   */
  SNF = 291,

  /**
   * @generated from enum value: OF = 292;
   */
  OF = 292,

  /**
   * @generated from enum value: ALL = 293;
   */
  ALL = 293,

  /**
   * @generated from enum value: AMPUT = 294;
   */
  AMPUT = 294,

  /**
   * @generated from enum value: BMTC = 295;
   */
  BMTC = 295,

  /**
   * @generated from enum value: BREAST = 296;
   */
  BREAST = 296,

  /**
   * @generated from enum value: CANC = 297;
   */
  CANC = 297,

  /**
   * @generated from enum value: CAPC = 298;
   */
  CAPC = 298,

  /**
   * @generated from enum value: CARD = 299;
   */
  CARD = 299,

  /**
   * @generated from enum value: PEDCARD = 300;
   */
  PEDCARD = 300,

  /**
   * @generated from enum value: COAG = 301;
   */
  COAG = 301,

  /**
   * @generated from enum value: CRS = 302;
   */
  CRS = 302,

  /**
   * @generated from enum value: DERM = 303;
   */
  DERM = 303,

  /**
   * @generated from enum value: ENDO = 304;
   */
  ENDO = 304,

  /**
   * @generated from enum value: PEDE = 305;
   */
  PEDE = 305,

  /**
   * @generated from enum value: ENT = 306;
   */
  ENT = 306,

  /**
   * @generated from enum value: FMC = 307;
   */
  FMC = 307,

  /**
   * @generated from enum value: GI = 308;
   */
  GI = 308,

  /**
   * @generated from enum value: PEDGI = 309;
   */
  PEDGI = 309,

  /**
   * @generated from enum value: GIM = 310;
   */
  GIM = 310,

  /**
   * @generated from enum value: GYN = 311;
   */
  GYN = 311,

  /**
   * @generated from enum value: HEM = 312;
   */
  HEM = 312,

  /**
   * @generated from enum value: PEDHEM = 313;
   */
  PEDHEM = 313,

  /**
   * @generated from enum value: HTN = 314;
   */
  HTN = 314,

  /**
   * @generated from enum value: IEC = 315;
   */
  IEC = 315,

  /**
   * @generated from enum value: INFD = 316;
   */
  INFD = 316,

  /**
   * @generated from enum value: PEDID = 317;
   */
  PEDID = 317,

  /**
   * @generated from enum value: INV = 318;
   */
  INV = 318,

  /**
   * @generated from enum value: LYMPH = 319;
   */
  LYMPH = 319,

  /**
   * @generated from enum value: MGEN = 320;
   */
  MGEN = 320,

  /**
   * @generated from enum value: NEPH = 321;
   */
  NEPH = 321,

  /**
   * @generated from enum value: PEDNEPH = 322;
   */
  PEDNEPH = 322,

  /**
   * @generated from enum value: NEUR = 323;
   */
  NEUR = 323,

  /**
   * @generated from enum value: OB = 324;
   */
  OB = 324,

  /**
   * @generated from enum value: OMS = 325;
   */
  OMS = 325,

  /**
   * @generated from enum value: ONCL = 326;
   */
  ONCL = 326,

  /**
   * @generated from enum value: PEDHO = 327;
   */
  PEDHO = 327,

  /**
   * @generated from enum value: OPH = 328;
   */
  OPH = 328,

  /**
   * @generated from enum value: OPTC = 329;
   */
  OPTC = 329,

  /**
   * @generated from enum value: ORTHO = 330;
   */
  ORTHO = 330,

  /**
   * @generated from enum value: HAND = 331;
   */
  HAND = 331,

  /**
   * @generated from enum value: PAINCL = 332;
   */
  PAINCL = 332,

  /**
   * @generated from enum value: PC = 333;
   */
  PC = 333,

  /**
   * @generated from enum value: PEDC = 334;
   */
  PEDC = 334,

  /**
   * @generated from enum value: PEDRHEUM = 335;
   */
  PEDRHEUM = 335,

  /**
   * @generated from enum value: POD = 336;
   */
  POD = 336,

  /**
   * @generated from enum value: PREV = 337;
   */
  PREV = 337,

  /**
   * @generated from enum value: PROCTO = 338;
   */
  PROCTO = 338,

  /**
   * @generated from enum value: PROFF = 339;
   */
  PROFF = 339,

  /**
   * @generated from enum value: PROS = 340;
   */
  PROS = 340,

  /**
   * @generated from enum value: PSI = 341;
   */
  PSI = 341,

  /**
   * @generated from enum value: PSY = 342;
   */
  PSY = 342,

  /**
   * @generated from enum value: RHEUM = 343;
   */
  RHEUM = 343,

  /**
   * @generated from enum value: SPMED = 344;
   */
  SPMED = 344,

  /**
   * @generated from enum value: SU = 345;
   */
  SU = 345,

  /**
   * @generated from enum value: PLS = 346;
   */
  PLS = 346,

  /**
   * @generated from enum value: URO = 347;
   */
  URO = 347,

  /**
   * @generated from enum value: TR = 348;
   */
  TR = 348,

  /**
   * @generated from enum value: TRAVEL = 349;
   */
  TRAVEL = 349,

  /**
   * @generated from enum value: WND = 350;
   */
  WND = 350,

  /**
   * @generated from enum value: RTF = 351;
   */
  RTF = 351,

  /**
   * @generated from enum value: PRC = 352;
   */
  PRC = 352,

  /**
   * @generated from enum value: SURF = 353;
   */
  SURF = 353,

  /**
   * @generated from enum value: DEDICATED_NON_CLINICAL_LOCATION_ROLE_TYPE = 354;
   */
  DEDICATED_NON_CLINICAL_LOCATION_ROLE_TYPE = 354,

  /**
   * @generated from enum value: DADDR = 355;
   */
  DADDR = 355,

  /**
   * @generated from enum value: MOBL = 356;
   */
  MOBL = 356,

  /**
   * @generated from enum value: AMB = 357;
   */
  AMB = 357,

  /**
   * @generated from enum value: PHARM = 358;
   */
  PHARM = 358,

  /**
   * @generated from enum value: INCIDENTAL_SERVICE_DELIVERY_LOCATION_ROLE_TYPE = 359;
   */
  INCIDENTAL_SERVICE_DELIVERY_LOCATION_ROLE_TYPE = 359,

  /**
   * @generated from enum value: ACC = 360;
   */
  ACC = 360,

  /**
   * @generated from enum value: COMM = 361;
   */
  COMM = 361,

  /**
   * @generated from enum value: CSC = 362;
   */
  CSC = 362,

  /**
   * @generated from enum value: PTRES = 363;
   */
  PTRES = 363,

  /**
   * @generated from enum value: SCHOOL = 364;
   */
  SCHOOL = 364,

  /**
   * @generated from enum value: UPC = 365;
   */
  UPC = 365,

  /**
   * @generated from enum value: WORK = 366;
   */
  WORK = 366,

  /**
   * @generated from enum value: SPECIMEN_ROLE_TYPE = 367;
   */
  SPECIMEN_ROLE_TYPE = 367,

  /**
   * @generated from enum value: C = 368;
   */
  C = 368,

  /**
   * @generated from enum value: G = 369;
   */
  G = 369,

  /**
   * @generated from enum value: L = 370;
   */
  L = 370,

  /**
   * @generated from enum value: P = 371;
   */
  P = 371,

  /**
   * @generated from enum value: Q = 372;
   */
  Q = 372,

  /**
   * @generated from enum value: B = 373;
   */
  B = 373,

  /**
   * @generated from enum value: E = 374;
   */
  E = 374,

  /**
   * @generated from enum value: F = 375;
   */
  F = 375,

  /**
   * @generated from enum value: O = 376;
   */
  O = 376,

  /**
   * @generated from enum value: V = 377;
   */
  V = 377,

  /**
   * @generated from enum value: R = 378;
   */
  R = 378,

  /**
   * @generated from enum value: CLAIM = 379;
   */
  CLAIM = 379,

  /**
   * @generated from enum value: COMMUNITY_LABORATORY = 380;
   */
  COMMUNITY_LABORATORY = 380,

  /**
   * @generated from enum value: GT = 381;
   */
  GT = 381,

  /**
   * @generated from enum value: HOME_HEALTH = 382;
   */
  HOME_HEALTH = 382,

  /**
   * @generated from enum value: LABORATORY = 383;
   */
  LABORATORY = 383,

  /**
   * @generated from enum value: PATHOLOGIST = 384;
   */
  PATHOLOGIST = 384,

  /**
   * @generated from enum value: PH = 385;
   */
  PH = 385,

  /**
   * @generated from enum value: PHLEBOTOMIST = 386;
   */
  PHLEBOTOMIST = 386,

  /**
   * @generated from enum value: PROG = 387;
   */
  PROG = 387,

  /**
   * @generated from enum value: PT = 388;
   */
  PT = 388,

  /**
   * @generated from enum value: SUBJECT = 389;
   */
  SUBJECT = 389,

  /**
   * @generated from enum value: THIRD_PARTY = 390;
   */
  THIRD_PARTY = 390,

  /**
   * @generated from enum value: DEP = 391;
   */
  DEP = 391,

  /**
   * @generated from enum value: DEPEN = 392;
   */
  DEPEN = 392,

  /**
   * @generated from enum value: FM = 393;
   */
  FM = 393,

  /**
   * @generated from enum value: INDIV = 394;
   */
  INDIV = 394,

  /**
   * @generated from enum value: NAMED = 395;
   */
  NAMED = 395,

  /**
   * @generated from enum value: PSYCHCF = 396;
   */
  PSYCHCF = 396,

  /**
   * @generated from enum value: SUBSCR = 397;
   */
  SUBSCR = 397,
}
// Retrieve enum metadata with: proto3.getEnumType(V3RoleCode_Value)
proto3.util.setEnumType(V3RoleCode_Value, "google.fhir.r4.core.V3RoleCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AFFILIATION_ROLE_TYPE" },
  { no: 2, name: "AGENT_ROLE_TYPE" },
  { no: 3, name: "AMENDER" },
  { no: 4, name: "CLASSIFIER" },
  { no: 5, name: "CONSENTER" },
  { no: 6, name: "CONSWIT" },
  { no: 7, name: "COPART" },
  { no: 8, name: "DECLASSIFIER" },
  { no: 9, name: "DELEGATEE" },
  { no: 10, name: "DELEGATOR" },
  { no: 11, name: "DOWNGRDER" },
  { no: 12, name: "DRIVCLASSIFIER" },
  { no: 13, name: "GRANTEE" },
  { no: 14, name: "GRANTOR" },
  { no: 15, name: "INTPRTER" },
  { no: 16, name: "REVIEWER" },
  { no: 17, name: "VALIDATOR" },
  { no: 18, name: "COVERAGE_SPONSOR_ROLE_TYPE" },
  { no: 19, name: "FULLINS" },
  { no: 20, name: "SELFINS" },
  { no: 21, name: "PAYOR_ROLE_TYPE" },
  { no: 22, name: "ENROLBKR" },
  { no: 23, name: "TPA" },
  { no: 24, name: "UMO" },
  { no: 25, name: "RESPRSN" },
  { no: 26, name: "EXCEST" },
  { no: 27, name: "GUADLTM" },
  { no: 28, name: "GUARD" },
  { no: 29, name: "POWATT" },
  { no: 30, name: "DPOWATT" },
  { no: 31, name: "HPOWATT" },
  { no: 32, name: "SPOWATT" },
  { no: 33, name: "ASSIGNED_ROLE_TYPE" },
  { no: 34, name: "ASSIGNED_NON_PERSON_LIVING_SUBJECT_ROLE_TYPE" },
  { no: 35, name: "ASSIST" },
  { no: 36, name: "BIOTH" },
  { no: 37, name: "ANTIBIOT" },
  { no: 38, name: "DEBR" },
  { no: 39, name: "CCO" },
  { no: 40, name: "SEE" },
  { no: 41, name: "SNIFF" },
  { no: 42, name: "CERTIFIED_ENTITY_TYPE" },
  { no: 43, name: "CITIZEN_ROLE_TYPE" },
  { no: 44, name: "CAS" },
  { no: 45, name: "CASM" },
  { no: 46, name: "CN" },
  { no: 47, name: "CNRP" },
  { no: 48, name: "CNRPM" },
  { no: 49, name: "CPCA" },
  { no: 50, name: "CRP" },
  { no: 51, name: "CRPM" },
  { no: 52, name: "CONTACT_ROLE_TYPE" },
  { no: 53, name: "ADMINISTRATIVE_CONTACT_ROLE_TYPE" },
  { no: 54, name: "BILL" },
  { no: 55, name: "ORG" },
  { no: 56, name: "PAYOR" },
  { no: 57, name: "ECON" },
  { no: 58, name: "NOK" },
  { no: 59, name: "IDENTIFIED_ENTITY_TYPE" },
  { no: 60, name: "LOCATION_IDENTIFIED_ENTITY_ROLE_CODE" },
  { no: 61, name: "ACHFID" },
  { no: 62, name: "JURID" },
  { no: 63, name: "LOCHFID" },
  { no: 64, name: "LIVING_SUBJECT_PRODUCTION_CLASS" },
  { no: 65, name: "BF" },
  { no: 66, name: "BL" },
  { no: 67, name: "BR" },
  { no: 68, name: "CO" },
  { no: 69, name: "DA" },
  { no: 70, name: "DR" },
  { no: 71, name: "DU" },
  { no: 72, name: "FI" },
  { no: 73, name: "LY" },
  { no: 74, name: "MT" },
  { no: 75, name: "MU" },
  { no: 76, name: "PL" },
  { no: 77, name: "RC" },
  { no: 78, name: "SH" },
  { no: 79, name: "VL" },
  { no: 80, name: "WL" },
  { no: 81, name: "WO" },
  { no: 82, name: "MEDICATION_GENERALIZATION_ROLE_TYPE" },
  { no: 83, name: "DC" },
  { no: 84, name: "GD" },
  { no: 85, name: "GDF" },
  { no: 86, name: "GDS" },
  { no: 87, name: "GDSF" },
  { no: 88, name: "MGDSF" },
  { no: 89, name: "MEMBER_ROLE_TYPE" },
  { no: 90, name: "TRB" },
  { no: 91, name: "PERSONAL_RELATIONSHIP_ROLE_TYPE" },
  { no: 92, name: "FAMMEMB" },
  { no: 93, name: "CHILD" },
  { no: 94, name: "CHLDADOPT" },
  { no: 95, name: "DAUADOPT" },
  { no: 96, name: "SONADOPT" },
  { no: 97, name: "CHLDFOST" },
  { no: 98, name: "DAUFOST" },
  { no: 99, name: "SONFOST" },
  { no: 100, name: "DAUC" },
  { no: 101, name: "DAU" },
  { no: 102, name: "STPDAU" },
  { no: 103, name: "NCHILD" },
  { no: 104, name: "SON" },
  { no: 105, name: "SONC" },
  { no: 106, name: "STPSON" },
  { no: 107, name: "STPCHLD" },
  { no: 108, name: "EXT" },
  { no: 109, name: "AUNT" },
  { no: 110, name: "MAUNT" },
  { no: 111, name: "PAUNT" },
  { no: 112, name: "COUSN" },
  { no: 113, name: "MCOUSN" },
  { no: 114, name: "PCOUSN" },
  { no: 115, name: "GGRPRN" },
  { no: 116, name: "GGRFTH" },
  { no: 117, name: "MGGRFTH" },
  { no: 118, name: "PGGRFTH" },
  { no: 119, name: "GGRMTH" },
  { no: 120, name: "MGGRMTH" },
  { no: 121, name: "PGGRMTH" },
  { no: 122, name: "MGGRPRN" },
  { no: 123, name: "PGGRPRN" },
  { no: 124, name: "GRNDCHILD" },
  { no: 125, name: "GRNDDAU" },
  { no: 126, name: "GRNDSON" },
  { no: 127, name: "GRPRN" },
  { no: 128, name: "GRFTH" },
  { no: 129, name: "MGRFTH" },
  { no: 130, name: "PGRFTH" },
  { no: 131, name: "GRMTH" },
  { no: 132, name: "MGRMTH" },
  { no: 133, name: "PGRMTH" },
  { no: 134, name: "MGRPRN" },
  { no: 135, name: "PGRPRN" },
  { no: 136, name: "INLAW" },
  { no: 137, name: "CHLDINLAW" },
  { no: 138, name: "DAUINLAW" },
  { no: 139, name: "SONINLAW" },
  { no: 140, name: "PRNINLAW" },
  { no: 141, name: "FTHINLAW" },
  { no: 142, name: "MTHINLAW" },
  { no: 143, name: "SIBINLAW" },
  { no: 144, name: "BROINLAW" },
  { no: 145, name: "SISINLAW" },
  { no: 146, name: "NIENEPH" },
  { no: 147, name: "NEPHEW" },
  { no: 148, name: "NIECE" },
  { no: 149, name: "UNCLE" },
  { no: 150, name: "MUNCLE" },
  { no: 151, name: "PUNCLE" },
  { no: 152, name: "PRN" },
  { no: 153, name: "ADOPTP" },
  { no: 154, name: "ADOPTF" },
  { no: 155, name: "ADOPTM" },
  { no: 156, name: "FTH" },
  { no: 157, name: "FTHFOST" },
  { no: 158, name: "NFTH" },
  { no: 159, name: "NFTHF" },
  { no: 160, name: "STPFTH" },
  { no: 161, name: "MTH" },
  { no: 162, name: "GESTM" },
  { no: 163, name: "MTHFOST" },
  { no: 164, name: "NMTH" },
  { no: 165, name: "NMTHF" },
  { no: 166, name: "STPMTH" },
  { no: 167, name: "NPRN" },
  { no: 168, name: "PRNFOST" },
  { no: 169, name: "STPPRN" },
  { no: 170, name: "SIB" },
  { no: 171, name: "BRO" },
  { no: 172, name: "HBRO" },
  { no: 173, name: "NBRO" },
  { no: 174, name: "TWINBRO" },
  { no: 175, name: "FTWINBRO" },
  { no: 176, name: "ITWINBRO" },
  { no: 177, name: "STPBRO" },
  { no: 178, name: "HSIB" },
  { no: 179, name: "HSIS" },
  { no: 180, name: "NSIB" },
  { no: 181, name: "NSIS" },
  { no: 182, name: "TWINSIS" },
  { no: 183, name: "FTWINSIS" },
  { no: 184, name: "ITWINSIS" },
  { no: 185, name: "TWIN" },
  { no: 186, name: "FTWIN" },
  { no: 187, name: "ITWIN" },
  { no: 188, name: "SIS" },
  { no: 189, name: "STPSIS" },
  { no: 190, name: "STPSIB" },
  { no: 191, name: "SIGOTHR" },
  { no: 192, name: "DOMPART" },
  { no: 193, name: "FMRSPS" },
  { no: 194, name: "SPS" },
  { no: 195, name: "HUSB" },
  { no: 196, name: "WIFE" },
  { no: 197, name: "FRND" },
  { no: 198, name: "NBOR" },
  { no: 199, name: "ONESELF" },
  { no: 200, name: "ROOM" },
  { no: 201, name: "POLICY_OR_PROGRAM_COVERAGE_ROLE_TYPE" },
  { no: 202, name: "COVERAGE_ROLE_TYPE" },
  { no: 203, name: "FAMDEP" },
  { no: 204, name: "HANDIC" },
  { no: 205, name: "INJ" },
  { no: 206, name: "SELF" },
  { no: 207, name: "SPON" },
  { no: 208, name: "STUD" },
  { no: 209, name: "FSTUD" },
  { no: 210, name: "PSTUD" },
  { no: 211, name: "ADOPT" },
  { no: 212, name: "GCHILD" },
  { no: 213, name: "GPARNT" },
  { no: 214, name: "NAT" },
  { no: 215, name: "NIENE" },
  { no: 216, name: "PARNT" },
  { no: 217, name: "SPSE" },
  { no: 218, name: "STEP" },
  { no: 219, name: "COVERED_PARTY_ROLE_TYPE" },
  { no: 220, name: "CLAIMANT_COVERED_PARTY_ROLE_TYPE" },
  { no: 221, name: "CRIMEVIC" },
  { no: 222, name: "INJWKR" },
  { no: 223, name: "DEPENDENT_COVERED_PARTY_ROLE_TYPE" },
  { no: 224, name: "COCBEN" },
  { no: 225, name: "DIFFABL" },
  { no: 226, name: "WARD" },
  { no: 227, name: "INDIVIDUAL_INSURED_PARTY_ROLE_TYPE" },
  { no: 228, name: "RETIREE" },
  { no: 229, name: "PROGRAM_ELIGIBLE_PARTY_ROLE_TYPE" },
  { no: 230, name: "INDIG" },
  { no: 231, name: "MIL" },
  { no: 232, name: "ACTMIL" },
  { no: 233, name: "RETMIL" },
  { no: 234, name: "VET" },
  { no: 235, name: "SUBSCRIBER_COVERED_PARTY_ROLE_TYPE" },
  { no: 236, name: "RESEARCH_SUBJECT_ROLE_BASIS" },
  { no: 237, name: "ERL" },
  { no: 238, name: "SCN" },
  { no: 239, name: "SERVICE_DELIVERY_LOCATION_ROLE_TYPE" },
  { no: 240, name: "DEDICATED_SERVICE_DELIVERY_LOCATION_ROLE_TYPE" },
  { no: 241, name: "DEDICATED_CLINICAL_LOCATION_ROLE_TYPE" },
  { no: 242, name: "DX" },
  { no: 243, name: "CVDX" },
  { no: 244, name: "CATH" },
  { no: 245, name: "ECHO" },
  { no: 246, name: "GIDX" },
  { no: 247, name: "ENDOS" },
  { no: 248, name: "RADDX" },
  { no: 249, name: "RADO" },
  { no: 250, name: "RNEU" },
  { no: 251, name: "HOSP" },
  { no: 252, name: "CHR" },
  { no: 253, name: "GACH" },
  { no: 254, name: "MHSP" },
  { no: 255, name: "PSYCHF" },
  { no: 256, name: "RH" },
  { no: 257, name: "RHAT" },
  { no: 258, name: "RHII" },
  { no: 259, name: "RHMAD" },
  { no: 260, name: "RHPI" },
  { no: 261, name: "RHPIH" },
  { no: 262, name: "RHPIMS" },
  { no: 263, name: "RHPIVS" },
  { no: 264, name: "RHYAD" },
  { no: 265, name: "HU" },
  { no: 266, name: "BMTU" },
  { no: 267, name: "CCU" },
  { no: 268, name: "CHEST" },
  { no: 269, name: "EPIL" },
  { no: 270, name: "ER" },
  { no: 271, name: "ETU" },
  { no: 272, name: "HD" },
  { no: 273, name: "HLAB" },
  { no: 274, name: "INLAB" },
  { no: 275, name: "OUTLAB" },
  { no: 276, name: "HRAD" },
  { no: 277, name: "HUSCS" },
  { no: 278, name: "ICU" },
  { no: 279, name: "PEDICU" },
  { no: 280, name: "PEDNICU" },
  { no: 281, name: "INPHARM" },
  { no: 282, name: "MBL" },
  { no: 283, name: "NCCS" },
  { no: 284, name: "NS" },
  { no: 285, name: "OUTPHARM" },
  { no: 286, name: "PEDU" },
  { no: 287, name: "PHU" },
  { no: 288, name: "RHU" },
  { no: 289, name: "SLEEP" },
  { no: 290, name: "NCCF" },
  { no: 291, name: "SNF" },
  { no: 292, name: "OF" },
  { no: 293, name: "ALL" },
  { no: 294, name: "AMPUT" },
  { no: 295, name: "BMTC" },
  { no: 296, name: "BREAST" },
  { no: 297, name: "CANC" },
  { no: 298, name: "CAPC" },
  { no: 299, name: "CARD" },
  { no: 300, name: "PEDCARD" },
  { no: 301, name: "COAG" },
  { no: 302, name: "CRS" },
  { no: 303, name: "DERM" },
  { no: 304, name: "ENDO" },
  { no: 305, name: "PEDE" },
  { no: 306, name: "ENT" },
  { no: 307, name: "FMC" },
  { no: 308, name: "GI" },
  { no: 309, name: "PEDGI" },
  { no: 310, name: "GIM" },
  { no: 311, name: "GYN" },
  { no: 312, name: "HEM" },
  { no: 313, name: "PEDHEM" },
  { no: 314, name: "HTN" },
  { no: 315, name: "IEC" },
  { no: 316, name: "INFD" },
  { no: 317, name: "PEDID" },
  { no: 318, name: "INV" },
  { no: 319, name: "LYMPH" },
  { no: 320, name: "MGEN" },
  { no: 321, name: "NEPH" },
  { no: 322, name: "PEDNEPH" },
  { no: 323, name: "NEUR" },
  { no: 324, name: "OB" },
  { no: 325, name: "OMS" },
  { no: 326, name: "ONCL" },
  { no: 327, name: "PEDHO" },
  { no: 328, name: "OPH" },
  { no: 329, name: "OPTC" },
  { no: 330, name: "ORTHO" },
  { no: 331, name: "HAND" },
  { no: 332, name: "PAINCL" },
  { no: 333, name: "PC" },
  { no: 334, name: "PEDC" },
  { no: 335, name: "PEDRHEUM" },
  { no: 336, name: "POD" },
  { no: 337, name: "PREV" },
  { no: 338, name: "PROCTO" },
  { no: 339, name: "PROFF" },
  { no: 340, name: "PROS" },
  { no: 341, name: "PSI" },
  { no: 342, name: "PSY" },
  { no: 343, name: "RHEUM" },
  { no: 344, name: "SPMED" },
  { no: 345, name: "SU" },
  { no: 346, name: "PLS" },
  { no: 347, name: "URO" },
  { no: 348, name: "TR" },
  { no: 349, name: "TRAVEL" },
  { no: 350, name: "WND" },
  { no: 351, name: "RTF" },
  { no: 352, name: "PRC" },
  { no: 353, name: "SURF" },
  { no: 354, name: "DEDICATED_NON_CLINICAL_LOCATION_ROLE_TYPE" },
  { no: 355, name: "DADDR" },
  { no: 356, name: "MOBL" },
  { no: 357, name: "AMB" },
  { no: 358, name: "PHARM" },
  { no: 359, name: "INCIDENTAL_SERVICE_DELIVERY_LOCATION_ROLE_TYPE" },
  { no: 360, name: "ACC" },
  { no: 361, name: "COMM" },
  { no: 362, name: "CSC" },
  { no: 363, name: "PTRES" },
  { no: 364, name: "SCHOOL" },
  { no: 365, name: "UPC" },
  { no: 366, name: "WORK" },
  { no: 367, name: "SPECIMEN_ROLE_TYPE" },
  { no: 368, name: "C" },
  { no: 369, name: "G" },
  { no: 370, name: "L" },
  { no: 371, name: "P" },
  { no: 372, name: "Q" },
  { no: 373, name: "B" },
  { no: 374, name: "E" },
  { no: 375, name: "F" },
  { no: 376, name: "O" },
  { no: 377, name: "V" },
  { no: 378, name: "R" },
  { no: 379, name: "CLAIM" },
  { no: 380, name: "COMMUNITY_LABORATORY" },
  { no: 381, name: "GT" },
  { no: 382, name: "HOME_HEALTH" },
  { no: 383, name: "LABORATORY" },
  { no: 384, name: "PATHOLOGIST" },
  { no: 385, name: "PH" },
  { no: 386, name: "PHLEBOTOMIST" },
  { no: 387, name: "PROG" },
  { no: 388, name: "PT" },
  { no: 389, name: "SUBJECT" },
  { no: 390, name: "THIRD_PARTY" },
  { no: 391, name: "DEP" },
  { no: 392, name: "DEPEN" },
  { no: 393, name: "FM" },
  { no: 394, name: "INDIV" },
  { no: 395, name: "NAMED" },
  { no: 396, name: "PSYCHCF" },
  { no: 397, name: "SUBSCR" },
]);

/**
 * **** MISSING DEFINITIONS ****
 * See http://terminology.hl7.org/CodeSystem/v3-TimingEvent
 *
 * @generated from message google.fhir.r4.core.V3TimingEventCode
 */
export class V3TimingEventCode extends Message<V3TimingEventCode> {
  constructor(data?: PartialMessage<V3TimingEventCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.V3TimingEventCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): V3TimingEventCode {
    return new V3TimingEventCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): V3TimingEventCode {
    return new V3TimingEventCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): V3TimingEventCode {
    return new V3TimingEventCode().fromJsonString(jsonString, options);
  }

  static equals(a: V3TimingEventCode | PlainMessage<V3TimingEventCode> | undefined, b: V3TimingEventCode | PlainMessage<V3TimingEventCode> | undefined): boolean {
    return proto3.util.equals(V3TimingEventCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.V3TimingEventCode.Value
 */
export enum V3TimingEventCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: AC = 1;
   */
  AC = 1,

  /**
   * @generated from enum value: ACD = 2;
   */
  ACD = 2,

  /**
   * @generated from enum value: ACM = 3;
   */
  ACM = 3,

  /**
   * @generated from enum value: ACV = 4;
   */
  ACV = 4,

  /**
   * @generated from enum value: C = 5;
   */
  C = 5,

  /**
   * @generated from enum value: CD = 6;
   */
  CD = 6,

  /**
   * @generated from enum value: CM = 7;
   */
  CM = 7,

  /**
   * @generated from enum value: CV = 8;
   */
  CV = 8,

  /**
   * @generated from enum value: HS = 9;
   */
  HS = 9,

  /**
   * @generated from enum value: IC = 10;
   */
  IC = 10,

  /**
   * @generated from enum value: ICD = 11;
   */
  ICD = 11,

  /**
   * @generated from enum value: ICM = 12;
   */
  ICM = 12,

  /**
   * @generated from enum value: ICV = 13;
   */
  ICV = 13,

  /**
   * @generated from enum value: PC = 14;
   */
  PC = 14,

  /**
   * @generated from enum value: PCD = 15;
   */
  PCD = 15,

  /**
   * @generated from enum value: PCM = 16;
   */
  PCM = 16,

  /**
   * @generated from enum value: PCV = 17;
   */
  PCV = 17,

  /**
   * @generated from enum value: WAKE = 18;
   */
  WAKE = 18,
}
// Retrieve enum metadata with: proto3.getEnumType(V3TimingEventCode_Value)
proto3.util.setEnumType(V3TimingEventCode_Value, "google.fhir.r4.core.V3TimingEventCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "AC" },
  { no: 2, name: "ACD" },
  { no: 3, name: "ACM" },
  { no: 4, name: "ACV" },
  { no: 5, name: "C" },
  { no: 6, name: "CD" },
  { no: 7, name: "CM" },
  { no: 8, name: "CV" },
  { no: 9, name: "HS" },
  { no: 10, name: "IC" },
  { no: 11, name: "ICD" },
  { no: 12, name: "ICM" },
  { no: 13, name: "ICV" },
  { no: 14, name: "PC" },
  { no: 15, name: "PCD" },
  { no: 16, name: "PCM" },
  { no: 17, name: "PCV" },
  { no: 18, name: "WAKE" },
]);

/**
 * A coded concept listing the base codes.
 * See http://hl7.org/fhir/vision-base-codes
 *
 * @generated from message google.fhir.r4.core.VisionBaseCode
 */
export class VisionBaseCode extends Message<VisionBaseCode> {
  constructor(data?: PartialMessage<VisionBaseCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VisionBaseCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionBaseCode {
    return new VisionBaseCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionBaseCode {
    return new VisionBaseCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionBaseCode {
    return new VisionBaseCode().fromJsonString(jsonString, options);
  }

  static equals(a: VisionBaseCode | PlainMessage<VisionBaseCode> | undefined, b: VisionBaseCode | PlainMessage<VisionBaseCode> | undefined): boolean {
    return proto3.util.equals(VisionBaseCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.VisionBaseCode.Value
 */
export enum VisionBaseCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: UP = 1;
   */
  UP = 1,

  /**
   * @generated from enum value: DOWN = 2;
   */
  DOWN = 2,

  /**
   * @generated from enum value: IN = 3;
   */
  IN = 3,

  /**
   * @generated from enum value: OUT = 4;
   */
  OUT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(VisionBaseCode_Value)
proto3.util.setEnumType(VisionBaseCode_Value, "google.fhir.r4.core.VisionBaseCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "UP" },
  { no: 2, name: "DOWN" },
  { no: 3, name: "IN" },
  { no: 4, name: "OUT" },
]);

/**
 * A coded concept listing the eye codes.
 * See http://hl7.org/fhir/vision-eye-codes
 *
 * @generated from message google.fhir.r4.core.VisionEyesCode
 */
export class VisionEyesCode extends Message<VisionEyesCode> {
  constructor(data?: PartialMessage<VisionEyesCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.VisionEyesCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VisionEyesCode {
    return new VisionEyesCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VisionEyesCode {
    return new VisionEyesCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VisionEyesCode {
    return new VisionEyesCode().fromJsonString(jsonString, options);
  }

  static equals(a: VisionEyesCode | PlainMessage<VisionEyesCode> | undefined, b: VisionEyesCode | PlainMessage<VisionEyesCode> | undefined): boolean {
    return proto3.util.equals(VisionEyesCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.VisionEyesCode.Value
 */
export enum VisionEyesCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: RIGHT = 1;
   */
  RIGHT = 1,

  /**
   * @generated from enum value: LEFT = 2;
   */
  LEFT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(VisionEyesCode_Value)
proto3.util.setEnumType(VisionEyesCode_Value, "google.fhir.r4.core.VisionEyesCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "RIGHT" },
  { no: 2, name: "LEFT" },
]);

/**
 * How a search parameter relates to the set of elements returned by evaluating
 * its xpath query. See http://hl7.org/fhir/search-xpath-usage
 *
 * @generated from message google.fhir.r4.core.XPathUsageTypeCode
 */
export class XPathUsageTypeCode extends Message<XPathUsageTypeCode> {
  constructor(data?: PartialMessage<XPathUsageTypeCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "google.fhir.r4.core.XPathUsageTypeCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): XPathUsageTypeCode {
    return new XPathUsageTypeCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): XPathUsageTypeCode {
    return new XPathUsageTypeCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): XPathUsageTypeCode {
    return new XPathUsageTypeCode().fromJsonString(jsonString, options);
  }

  static equals(a: XPathUsageTypeCode | PlainMessage<XPathUsageTypeCode> | undefined, b: XPathUsageTypeCode | PlainMessage<XPathUsageTypeCode> | undefined): boolean {
    return proto3.util.equals(XPathUsageTypeCode, a, b);
  }
}

/**
 * @generated from enum google.fhir.r4.core.XPathUsageTypeCode.Value
 */
export enum XPathUsageTypeCode_Value {
  /**
   * @generated from enum value: INVALID_UNINITIALIZED = 0;
   */
  INVALID_UNINITIALIZED = 0,

  /**
   * @generated from enum value: NORMAL = 1;
   */
  NORMAL = 1,

  /**
   * @generated from enum value: PHONETIC = 2;
   */
  PHONETIC = 2,

  /**
   * @generated from enum value: NEARBY = 3;
   */
  NEARBY = 3,

  /**
   * @generated from enum value: DISTANCE = 4;
   */
  DISTANCE = 4,

  /**
   * @generated from enum value: OTHER = 5;
   */
  OTHER = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(XPathUsageTypeCode_Value)
proto3.util.setEnumType(XPathUsageTypeCode_Value, "google.fhir.r4.core.XPathUsageTypeCode.Value", [
  { no: 0, name: "INVALID_UNINITIALIZED" },
  { no: 1, name: "NORMAL" },
  { no: 2, name: "PHONETIC" },
  { no: 3, name: "NEARBY" },
  { no: 4, name: "DISTANCE" },
  { no: 5, name: "OTHER" },
]);

